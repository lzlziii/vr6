using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using System.Threading.Tasks;
using Cortopia.BE.Runtime;
using Cortopia.BE.Runtime.Actions;
using Cortopia.BE.Runtime.Instance;
using Cortopia.CortopiaAttributes;
using Cortopia.Scripts.AI;
using Cortopia.Scripts.AI.NPC.Workers;
using Cortopia.Scripts.Animation;
using Cortopia.Scripts.Animation.Constraints;
using Cortopia.Scripts.Audio;
using Cortopia.Scripts.Audio.VO;
using Cortopia.Scripts.Characters;
using Cortopia.Scripts.Characters.NPC;
using Cortopia.Scripts.Characters.Sockets;
using Cortopia.Scripts.Choices;
using Cortopia.Scripts.Core;
using Cortopia.Scripts.Core.Settings;
using Cortopia.Scripts.CortopiaEvents;
using Cortopia.Scripts.Cutscenes;
using Cortopia.Scripts.Grab;
using Cortopia.Scripts.Interactions;
using Cortopia.Scripts.Interactions.Grabbables;
using Cortopia.Scripts.Interactions.Listeners;
using Cortopia.Scripts.Interactions.PressurePlates;
using Cortopia.Scripts.Interactions.Transitions;
using Cortopia.Scripts.Inventories;
using Cortopia.Scripts.Inventories.Items;
using Cortopia.Scripts.Localization;
using Cortopia.Scripts.Platform;
using Cortopia.Scripts.Platform.Achievements;
using Cortopia.Scripts.Platform.Analytics;
using Cortopia.Scripts.Platform.Haptics;
using Cortopia.Scripts.Platform.Icons;
using Cortopia.Scripts.Platform.Input;
using Cortopia.Scripts.Platform.ResourceServices;
using Cortopia.Scripts.Platform.Rig;
using Cortopia.Scripts.Platform.SettingsStorage;
using Cortopia.Scripts.Platform.Storage;
using Cortopia.Scripts.Platform.User;
using Cortopia.Scripts.Player;
using Cortopia.Scripts.Puzzles;
using Cortopia.Scripts.Puzzles.Castles;
using Cortopia.Scripts.Puzzles.Clocktower;
using Cortopia.Scripts.Rooms;
using Cortopia.Scripts.SaveLoad;
using Cortopia.Scripts.ScriptableVariables;
using Cortopia.Scripts.Tutorial;
using Cortopia.Scripts.UI;
using Cortopia.Scripts.UI.Dialogues;
using Cortopia.Scripts.Utils;
using Cortopia.Scripts.Utils.Conditions;
using Cortopia.Scripts.Utils.CustomArrays;
using Cortopia.Scripts.Utils.Promises;
using Cortopia.Scripts.Utils.Transformables;
using CurvesAndSplines;
using DG.Tweening;
using DG.Tweening.Core;
using DG.Tweening.Plugins.Core.PathCore;
using HTC.UnityPlugin.ColliderEvent;
using HTC.UnityPlugin.Pointer3D;
using HTC.UnityPlugin.PoseTracker;
using HTC.UnityPlugin.Utility;
using HTC.UnityPlugin.VRModuleManagement;
using HTC.UnityPlugin.Vive;
using HTC.UnityPlugin.Vive.OculusVRExtension;
using I2.Loc;
using Il2CppDummyDll;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using Oculus.Platform;
using Oculus.Platform.Models;
using Oculus.Spatializer.Propagation;
using TMPro;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Playables;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.Timeline;
using UnityEngine.UI;
using UnityEngine.XR;
using wvr;
using wvr.render;
using wvr.render.thread;
using wvr.render.utils;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class RevealCastles : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	private const float PullDistance = 1f;

	[Token(Token = "0x4000002")]
	private const float PullAnimationLength = 1.55f;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator m_curtain;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Animator m_tassleAnimator;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Grabbable m_tassle;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource m_revealAudioSource;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float m_tassleStartY;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private readonly int m_revealHash;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0xDC8958", Offset = "0xDC8958", VA = "0xDC8958")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0xDC8960", Offset = "0xDC8960", VA = "0xDC8960")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xDC89E8", Offset = "0xDC89E8", VA = "0xDC89E8")]
	public void StartReveal()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0xDC8B94", Offset = "0xDC8B94", VA = "0xDC8B94")]
	public void OnTassleGrabBegin()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0xDC8BF4", Offset = "0xDC8BF4", VA = "0xDC8BF4")]
	public void OnTassleGrab()
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xDC8E70", Offset = "0xDC8E70", VA = "0xDC8E70")]
	public RevealCastles()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xDC8ED0", Offset = "0xDC8ED0", VA = "0xDC8ED0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93847C", Offset = "0x93847C")]
	private void <StartReveal>b__10_0()
	{
	}
}
[Token(Token = "0x2000003")]
public class LocationIndicator : MonoBehaviour
{
	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Collider m_collider;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform m_effectTransform;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject m_effectPrefab;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float m_speed;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Cortopia.Scripts.Interactions.EventTrigger m_eventTrigger;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject m_effectObject;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool m_hasEffect;

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x17D3504", Offset = "0x17D3504", VA = "0x17D3504")]
	private void Start()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x17D3700", Offset = "0x17D3700", VA = "0x17D3700")]
	private void Update()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0x17D3780", Offset = "0x17D3780", VA = "0x17D3780")]
	public LocationIndicator()
	{
	}
}
[Token(Token = "0x2000004")]
public class PyramidCollisionHelper : MonoBehaviour
{
	[Token(Token = "0x4000010")]
	private const float MinCollisionDistance = 0.05f;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Collider m_pyramidCollider;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Collider m_plintCollider;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Rigidbody m_rigidbody;

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xDC7B88", Offset = "0xDC7B88", VA = "0xDC7B88")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xDC7E68", Offset = "0xDC7E68", VA = "0xDC7E68")]
	public PyramidCollisionHelper()
	{
	}
}
[Token(Token = "0x2000005")]
public class HUDMessage : MonoBehaviour
{
	[Token(Token = "0x4000014")]
	public const string Name = "HUD/HUDMessage";

	[Token(Token = "0x4000015")]
	private const float TargetFps = 90f;

	[Token(Token = "0x4000016")]
	private const float TeleportDistance = 15f;

	[Token(Token = "0x4000017")]
	private const float Sharpness = 0.01f;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Vector3 m_textCentreOffset;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float m_stoppedOffsetSqrDist;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float m_movingOffsetSqrDist;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float m_distance;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private TMP_Text m_text;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Camera m_tempCamera;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Localize m_localize;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Tweener m_fadeTween;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 m_previousPosition;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform m_cameraTransform;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool m_isMoving;

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xDC01D8", Offset = "0xDC01D8", VA = "0xDC01D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xDC0210", Offset = "0xDC0210", VA = "0xDC0210")]
	private void Update()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xDC07D4", Offset = "0xDC07D4", VA = "0xDC07D4")]
	public void ShowLocalizedTerm(string localizeTerm, float fadeTime = 0f)
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xDC0AF4", Offset = "0xDC0AF4", VA = "0xDC0AF4")]
	public void ShowMessage(string message, float fadeTime = 0f)
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xDC0B50", Offset = "0xDC0B50", VA = "0xDC0B50")]
	public void Hide(float fadeTime = 0f)
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0xDC0720", Offset = "0xDC0720", VA = "0xDC0720")]
	private void TeleportToTarget()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xDC0830", Offset = "0xDC0830", VA = "0xDC0830")]
	private void StartShowing(float fadeTime = 0f)
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xDC056C", Offset = "0xDC056C", VA = "0xDC056C")]
	private void GetPositionAndRotation(out Vector3 position, out Quaternion rotation)
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xDC0C5C", Offset = "0xDC0C5C", VA = "0xDC0C5C")]
	public HUDMessage()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0xDC0CD4", Offset = "0xDC0CD4", VA = "0xDC0CD4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93848C", Offset = "0x93848C")]
	private void <Hide>b__19_0()
	{
	}
}
[Token(Token = "0x2000006")]
public class Logger
{
	[Token(Token = "0x6000017")]
	[Address(RVA = "0x17D3790", Offset = "0x17D3790", VA = "0x17D3790")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x93849C", Offset = "0x93849C")]
	public static void Log(object message)
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x17D3794", Offset = "0x17D3794", VA = "0x17D3794")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9384D4", Offset = "0x9384D4")]
	public static void Log(object message, UnityEngine.Object context)
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x17D3798", Offset = "0x17D3798", VA = "0x17D3798")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x93850C", Offset = "0x93850C")]
	public static void LogWarning(object msg)
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x17D379C", Offset = "0x17D379C", VA = "0x17D379C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x938544", Offset = "0x938544")]
	public static void LogWarning(object message, UnityEngine.Object context)
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x17D37A0", Offset = "0x17D37A0", VA = "0x17D37A0")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x93857C", Offset = "0x93857C")]
	public static void LogError(object message)
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x17D37A4", Offset = "0x17D37A4", VA = "0x17D37A4")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x9385B4", Offset = "0x9385B4")]
	public static void LogError(object message, UnityEngine.Object context)
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x17D37A8", Offset = "0x17D37A8", VA = "0x17D37A8")]
	public Logger()
	{
	}
}
[Token(Token = "0x2000007")]
public class ControllerManagerSample : MonoBehaviour
{
	[Token(Token = "0x2000409")]
	public enum CustomModelActiveModeEnum
	{
		[Token(Token = "0x4001875")]
		None,
		[Token(Token = "0x4001876")]
		ActiveOnGripped,
		[Token(Token = "0x4001877")]
		ToggleByDoubleGrip
	}

	[Token(Token = "0x200040A")]
	public enum LaserPointerActiveModeEnum
	{
		[Token(Token = "0x4001879")]
		None,
		[Token(Token = "0x400187A")]
		ToggleByMenuClick,
		[Token(Token = "0x400187B")]
		ActiveOnPadPressed,
		[Token(Token = "0x400187C")]
		ToggleByTriggerClick
	}

	[Token(Token = "0x200040B")]
	public enum CurvePointerActiveModeEnum
	{
		[Token(Token = "0x400187E")]
		None,
		[Token(Token = "0x400187F")]
		ActiveOnPadPressed,
		[Token(Token = "0x4001880")]
		ToggleByPadDoubleClick
	}

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9282C0", Offset = "0x9282C0")]
	public bool hideRenderModelOnGrab;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public CustomModelActiveModeEnum customModelActiveMode;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LaserPointerActiveModeEnum laserPointerActiveMode;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public CurvePointerActiveModeEnum curvePointerActiveMode;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9282F8", Offset = "0x9282F8")]
	public GameObject rightRenderModel;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject rightCustomModel;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject rightGrabber;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject rightLaserPointer;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject rightCurvePointer;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x928330", Offset = "0x928330")]
	public GameObject leftRenderModel;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject leftCustomModel;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject leftGrabber;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject leftLaserPointer;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject leftCurvePointer;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool m_rightCustomModelActive;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool m_rightLaserPointerActive;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	private bool m_rightCurvePointerActive;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
	private bool m_leftCustomModelActive;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool m_leftLaserPointerActive;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	private bool m_leftCurvePointerActive;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7E")]
	private bool isLeftStickyGrab;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7F")]
	private bool isRightStickyGrab;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private HashSet<GameObject> rightGrabbingSet;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private HashSet<GameObject> leftGrabbingSet;

	[Token(Token = "0x17000001")]
	public bool rightGrabberActive
	{
		[Token(Token = "0x600001E")]
		[Address(RVA = "0xB37ECC", Offset = "0xB37ECC", VA = "0xB37ECC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000002")]
	public bool rightLaserPointerActive
	{
		[Token(Token = "0x600001F")]
		[Address(RVA = "0xB37EF4", Offset = "0xB37EF4", VA = "0xB37EF4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000020")]
		[Address(RVA = "0xB37EFC", Offset = "0xB37EFC", VA = "0xB37EFC")]
		set
		{
		}
	}

	[Token(Token = "0x17000003")]
	public bool rightCurvePointerActive
	{
		[Token(Token = "0x6000021")]
		[Address(RVA = "0xB37F84", Offset = "0xB37F84", VA = "0xB37F84")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000022")]
		[Address(RVA = "0xB37F8C", Offset = "0xB37F8C", VA = "0xB37F8C")]
		set
		{
		}
	}

	[Token(Token = "0x17000004")]
	public bool rightCustomModelActive
	{
		[Token(Token = "0x6000023")]
		[Address(RVA = "0xB38010", Offset = "0xB38010", VA = "0xB38010")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000024")]
		[Address(RVA = "0xB38018", Offset = "0xB38018", VA = "0xB38018")]
		set
		{
		}
	}

	[Token(Token = "0x17000005")]
	public bool leftGrabberActive
	{
		[Token(Token = "0x6000025")]
		[Address(RVA = "0xB3809C", Offset = "0xB3809C", VA = "0xB3809C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000006")]
	public bool leftLaserPointerActive
	{
		[Token(Token = "0x6000026")]
		[Address(RVA = "0xB380C4", Offset = "0xB380C4", VA = "0xB380C4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000027")]
		[Address(RVA = "0xB380CC", Offset = "0xB380CC", VA = "0xB380CC")]
		set
		{
		}
	}

	[Token(Token = "0x17000007")]
	public bool leftCurvePointerActive
	{
		[Token(Token = "0x6000028")]
		[Address(RVA = "0xB38154", Offset = "0xB38154", VA = "0xB38154")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000029")]
		[Address(RVA = "0xB3815C", Offset = "0xB3815C", VA = "0xB3815C")]
		set
		{
		}
	}

	[Token(Token = "0x17000008")]
	public bool leftCustomModelActive
	{
		[Token(Token = "0x600002A")]
		[Address(RVA = "0xB38164", Offset = "0xB38164", VA = "0xB38164")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600002B")]
		[Address(RVA = "0xB3816C", Offset = "0xB3816C", VA = "0xB3816C")]
		set
		{
		}
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xB37F04", Offset = "0xB37F04", VA = "0xB37F04")]
	public bool SetRightLaserPointerActive(bool value)
	{
		return default(bool);
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xB37F94", Offset = "0xB37F94", VA = "0xB37F94")]
	public bool SetRightCurvePointerActive(bool value)
	{
		return default(bool);
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xB38020", Offset = "0xB38020", VA = "0xB38020")]
	public bool SetRightCustomModelActive(bool value)
	{
		return default(bool);
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xB380D4", Offset = "0xB380D4", VA = "0xB380D4")]
	public bool SetLeftLaserPointerActive(bool value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xB381F0", Offset = "0xB381F0", VA = "0xB381F0")]
	public bool SetLeftCurvePointerActive(bool value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xB38174", Offset = "0xB38174", VA = "0xB38174")]
	public bool SetLeftCustomModelActive(bool value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xB3826C", Offset = "0xB3826C", VA = "0xB3826C")]
	public void ToggleRightLaserPointer()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xB3827C", Offset = "0xB3827C", VA = "0xB3827C")]
	public void ToggleRightCurvePointer()
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xB3828C", Offset = "0xB3828C", VA = "0xB3828C")]
	public void ToggleRightCustomModel()
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xB3829C", Offset = "0xB3829C", VA = "0xB3829C")]
	public void ToggleLeftLaserPointer()
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xB382AC", Offset = "0xB382AC", VA = "0xB382AC")]
	public void ToggleLeftCurvePointer()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xB382BC", Offset = "0xB382BC", VA = "0xB382BC")]
	public void ToggleLeftCustomModel()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xB382CC", Offset = "0xB382CC", VA = "0xB382CC", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xB388D4", Offset = "0xB388D4", VA = "0xB388D4", Slot = "5")]
	protected virtual void LateUpdate()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xB38E70", Offset = "0xB38E70", VA = "0xB38E70")]
	public void OnGrabbed(BasicGrabbable grabbedObj)
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xB39000", Offset = "0xB39000", VA = "0xB39000")]
	public void OnStickyGrabbed(StickyGrabbable grabbedObj)
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xB39200", Offset = "0xB39200", VA = "0xB39200")]
	public void OnRelease(BasicGrabbable releasedObj)
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xB39394", Offset = "0xB39394", VA = "0xB39394")]
	public void OnLetGo(BasicGrabbable releaseObj)
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xB39420", Offset = "0xB39420", VA = "0xB39420")]
	public void OnStickyLetGo(StickyGrabbable releaseObj)
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xB394AC", Offset = "0xB394AC", VA = "0xB394AC")]
	public void OnStickyRelease(StickyGrabbable releasedObj)
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xB39668", Offset = "0xB39668", VA = "0xB39668")]
	public void OnDropped(BasicGrabbable grabbedObj)
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xB3966C", Offset = "0xB3966C", VA = "0xB3966C")]
	public void OnDropped(StickyGrabbable grabbedObj)
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xB382D8", Offset = "0xB382D8", VA = "0xB382D8")]
	public void UpdateActivity()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xB39670", Offset = "0xB39670", VA = "0xB39670")]
	public ControllerManagerSample()
	{
	}
}
[Token(Token = "0x2000008")]
public class GuideLineDrawer : MonoBehaviour
{
	[Token(Token = "0x400003B")]
	public const float MIN_SEGMENT_LENGTH = 0.01f;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 gravityDirection;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool showOnHitOnly;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float segmentLength;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Pointer3DRaycaster raycaster;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LineRenderer lineRenderer;

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xBC47E8", Offset = "0xBC47E8", VA = "0xBC47E8", Slot = "4")]
	protected virtual void LateUpdate()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xBC4ED0", Offset = "0xBC4ED0", VA = "0xBC4ED0", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xBC4F04", Offset = "0xBC4F04", VA = "0xBC4F04")]
	public GuideLineDrawer()
	{
	}
}
[Token(Token = "0x2000009")]
public class MaterialChanger : MonoBehaviour, IColliderEventHoverEnterHandler, IEventSystemHandler, IColliderEventHoverExitHandler, IColliderEventPressEnterHandler, IColliderEventPressExitHandler
{
	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly List<Renderer> s_rederers;

	[NonSerialized]
	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material currentMat;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material Normal;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x928368", Offset = "0x928368")]
	public Material Hovered;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material Pressed;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material dragged;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9283A0", Offset = "0x9283A0")]
	[HideInInspector]
	public ColliderButtonEventData.InputButton heighlightButton;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private HashSet<ColliderHoverEventData> hovers;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private HashSet<ColliderButtonEventData> presses;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private HashSet<ColliderButtonEventData> drags;

	[Token(Token = "0x17000009")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x940DD8", Offset = "0x940DD8")]
	public Material Heightlight
	{
		[Token(Token = "0x6000047")]
		[Address(RVA = "0x17D37B0", Offset = "0x17D37B0", VA = "0x17D37B0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000048")]
		[Address(RVA = "0x17D37B8", Offset = "0x17D37B8", VA = "0x17D37B8")]
		set
		{
		}
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x17D37C0", Offset = "0x17D37C0", VA = "0x17D37C0")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9385EC", Offset = "0x9385EC")]
	public static void SetAllChildrenHeighlightButton(GameObject parent, ColliderButtonEventData.InputButton button)
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x17D38F8", Offset = "0x17D38F8", VA = "0x17D38F8")]
	private void Start()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x17D3A18", Offset = "0x17D3A18", VA = "0x17D3A18", Slot = "4")]
	public void OnColliderEventHoverEnter(ColliderHoverEventData eventData)
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x17D3A90", Offset = "0x17D3A90", VA = "0x17D3A90", Slot = "5")]
	public void OnColliderEventHoverExit(ColliderHoverEventData eventData)
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x17D3B08", Offset = "0x17D3B08", VA = "0x17D3B08", Slot = "6")]
	public void OnColliderEventPressEnter(ColliderButtonEventData eventData)
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x17D3DE8", Offset = "0x17D3DE8", VA = "0x17D3DE8", Slot = "7")]
	public void OnColliderEventPressExit(ColliderButtonEventData eventData)
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x17D3E80", Offset = "0x17D3E80", VA = "0x17D3E80")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x17D3E84", Offset = "0x17D3E84", VA = "0x17D3E84")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x17D38FC", Offset = "0x17D38FC", VA = "0x17D38FC")]
	public void UpdateMaterialState()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x17D3F2C", Offset = "0x17D3F2C", VA = "0x17D3F2C")]
	private void SetChildRendererMaterial(Material targetMat)
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x17D410C", Offset = "0x17D410C", VA = "0x17D410C")]
	public MaterialChanger()
	{
	}
}
[Token(Token = "0x200000A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x925028", Offset = "0x925028")]
public class OverlayKeyboardSample : MonoBehaviour, ISelectHandler, IEventSystemHandler, IDeselectHandler
{
	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool minimalMode;

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xDC7B00", Offset = "0xDC7B00", VA = "0xDC7B00", Slot = "4")]
	public void OnSelect(BaseEventData eventData)
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xDC7B08", Offset = "0xDC7B08", VA = "0xDC7B08", Slot = "5")]
	public void OnDeselect(BaseEventData eventData)
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0xDC7B10", Offset = "0xDC7B10", VA = "0xDC7B10", Slot = "6")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xDC7B7C", Offset = "0xDC7B7C", VA = "0xDC7B7C", Slot = "7")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xDC7B04", Offset = "0xDC7B04", VA = "0xDC7B04")]
	public static void ShowKeyboard(OverlayKeyboardSample caller)
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xDC7B0C", Offset = "0xDC7B0C", VA = "0xDC7B0C")]
	public static void HideKeyboard()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xDC7B80", Offset = "0xDC7B80", VA = "0xDC7B80")]
	public OverlayKeyboardSample()
	{
	}
}
[Token(Token = "0x200000B")]
public class ReticlePoser : MonoBehaviour
{
	[Token(Token = "0x200040C")]
	public interface IMaterialChanger
	{
		[Token(Token = "0x1700039B")]
		Material reticleMaterial
		{
			[Token(Token = "0x6001FB6")]
			get;
		}
	}

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Pointer3DRaycaster raycaster;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x9283D8", Offset = "0x9283D8")]
	public Transform reticleForDefaultRay;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform reticleForCurvedRay;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool showOnHitOnly;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject hitTarget;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float hitDistance;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material defaultReticleMaterial;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MeshRenderer[] reticleRenderer;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool autoScaleReticle;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int sizeInPixels;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material m_matFromChanger;

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xDC7F08", Offset = "0xDC7F08", VA = "0xDC7F08", Slot = "4")]
	protected virtual void LateUpdate()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xDC8824", Offset = "0xDC8824", VA = "0xDC8824")]
	private void SetReticleMaterial(Material mat)
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xDC88B8", Offset = "0xDC88B8", VA = "0xDC88B8", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xDC8940", Offset = "0xDC8940", VA = "0xDC8940")]
	public ReticlePoser()
	{
	}
}
[Token(Token = "0x200000C")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x92508C", Offset = "0x92508C")]
public class FastList<T>
{
	[Token(Token = "0x200040D")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x200040E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92729C", Offset = "0x92729C")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4001882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x1700039C")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x6001FBE")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x1700039D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FC0")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FBB")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6001FBC")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FBD")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FBF")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x1700000A")]
	public int Count
	{
		[Token(Token = "0x6000062")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000063")]
		set
		{
		}
	}

	[Token(Token = "0x1700000B")]
	public T Item
	{
		[Token(Token = "0x6000064")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x6000065")]
		set
		{
		}
	}

	[Token(Token = "0x6000060")]
	public FastList()
	{
	}

	[Token(Token = "0x6000061")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x6000066")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x6000067")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x6000068")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x6000069")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x600006A")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600006B")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x600006C")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600006D")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x600006E")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600006F")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x6000070")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x6000071")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x6000072")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000073")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000074")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9385FC", Offset = "0x9385FC")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000075")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x6000076")]
	private void Allocate()
	{
	}

	[Token(Token = "0x6000077")]
	private void Trim()
	{
	}

	[Token(Token = "0x6000078")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000079")]
	public void Release()
	{
	}
}
[Token(Token = "0x200000D")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string header;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x600007A")]
	[Address(RVA = "0x17D34CC", Offset = "0x17D34CC", VA = "0x17D34CC")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x200000E")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string message;

	[Token(Token = "0x600007B")]
	[Address(RVA = "0x17D34A0", Offset = "0x17D34A0", VA = "0x17D34A0")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x200000F")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9250C4", Offset = "0x9250C4")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x200040F")]
	public enum RotationAxes
	{
		[Token(Token = "0x4001886")]
		MouseXAndY,
		[Token(Token = "0x4001887")]
		MouseX,
		[Token(Token = "0x4001888")]
		MouseY
	}

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x17D4248", Offset = "0x17D4248", VA = "0x17D4248")]
	private void Update()
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x17D44CC", Offset = "0x17D44CC", VA = "0x17D44CC")]
	private void Start()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x17D4594", Offset = "0x17D4594", VA = "0x17D4594")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x2000010")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x2000011")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x17E7478", Offset = "0x17E7478", VA = "0x17E7478")]
	private void Start()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x17E747C", Offset = "0x17E747C", VA = "0x17E747C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x17E7480", Offset = "0x17E7480", VA = "0x17E7480")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x17E760C", Offset = "0x17E760C", VA = "0x17E760C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x17E74D4", Offset = "0x17E74D4", VA = "0x17E74D4")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x17E7568", Offset = "0x17E7568", VA = "0x17E7568")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x17E7660", Offset = "0x17E7660", VA = "0x17E7660")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x17E7700", Offset = "0x17E7700", VA = "0x17E7700")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x17E788C", Offset = "0x17E788C", VA = "0x17E788C")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x17E7A18", Offset = "0x17E7A18", VA = "0x17E7A18")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x2000012")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x2000410")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float particleSize;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float particleOffset;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject room;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] dims;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] coefs;

	[Token(Token = "0x4000078")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] points;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] normals;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem sys;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x400007E")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xDC4E78", Offset = "0xDC4E78", VA = "0xDC4E78")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xDC4CA8", Offset = "0xDC4CA8", VA = "0xDC4CA8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x938660", Offset = "0x938660")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xDC4EB0", Offset = "0xDC4EB0", VA = "0xDC4EB0")]
	private void Start()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xDC5000", Offset = "0xDC5000", VA = "0xDC5000")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xDC5110", Offset = "0xDC5110", VA = "0xDC5110")]
	private void Update()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xDC5D98", Offset = "0xDC5D98", VA = "0xDC5D98")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000090")]
	[Address(RVA = "0xDC4F50", Offset = "0xDC4F50", VA = "0xDC4F50")]
	private static extern int OSP_Unity_AssignRaycastCallback(AudioRaycastCallback callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000091")]
	[Address(RVA = "0xDC5064", Offset = "0xDC5064", VA = "0xDC5064")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000092")]
	[Address(RVA = "0xDC5A80", Offset = "0xDC5A80", VA = "0xDC5A80")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x6000093")]
	[Address(RVA = "0xDC5B1C", Offset = "0xDC5B1C", VA = "0xDC5B1C")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x6000094")]
	[Address(RVA = "0xDC5BBC", Offset = "0xDC5BBC", VA = "0xDC5BBC")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x6000095")]
	[Address(RVA = "0xDC5C5C", Offset = "0xDC5C5C", VA = "0xDC5C5C")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x6000096")]
	[Address(RVA = "0xDC5CF8", Offset = "0xDC5CF8", VA = "0xDC5CF8")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x6000097")]
	[Address(RVA = "0xDC7100", Offset = "0xDC7100", VA = "0xDC7100")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x6000098")]
	[Address(RVA = "0xDC71C4", Offset = "0xDC71C4", VA = "0xDC71C4")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xDC7288", Offset = "0xDC7288", VA = "0xDC7288")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x2000013")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x2000411")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x400188A")]
		Uninitialized = -1,
		[Token(Token = "0x400188B")]
		NotEnabled,
		[Token(Token = "0x400188C")]
		Success,
		[Token(Token = "0x400188D")]
		StreamError,
		[Token(Token = "0x400188E")]
		ProcessError,
		[Token(Token = "0x400188F")]
		MaxStatValue
	}

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource source;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x1700000C")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x600009B")]
		[Address(RVA = "0x17D45B4", Offset = "0x17D45B4", VA = "0x17D45B4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600009C")]
		[Address(RVA = "0x17D45BC", Offset = "0x17D45BC", VA = "0x17D45BC")]
		set
		{
		}
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x17D45C8", Offset = "0x17D45C8", VA = "0x17D45C8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x17D4834", Offset = "0x17D4834", VA = "0x17D4834")]
	private void Update()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x17D4AB0", Offset = "0x17D4AB0", VA = "0x17D4AB0")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x2000014")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x2000412")]
	private enum Parameters
	{
		[Token(Token = "0x4001891")]
		P_GAIN,
		[Token(Token = "0x4001892")]
		P_USEINVSQR,
		[Token(Token = "0x4001893")]
		P_NEAR,
		[Token(Token = "0x4001894")]
		P_FAR,
		[Token(Token = "0x4001895")]
		P_RADIUS,
		[Token(Token = "0x4001896")]
		P_DISABLE_RFL,
		[Token(Token = "0x4001897")]
		P_VSPEAKERMODE,
		[Token(Token = "0x4001898")]
		P_AMBISTAT,
		[Token(Token = "0x4001899")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x400189A")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x400189B")]
		P_SENDLEVEL,
		[Token(Token = "0x400189C")]
		P_NUM
	}

	[Token(Token = "0x4000085")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x1700000D")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x60000A3")]
		[Address(RVA = "0x17D4E54", Offset = "0x17D4E54", VA = "0x17D4E54")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000A4")]
		[Address(RVA = "0x17D4E5C", Offset = "0x17D4E5C", VA = "0x17D4E5C")]
		set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public float Gain
	{
		[Token(Token = "0x60000A5")]
		[Address(RVA = "0x17D4E68", Offset = "0x17D4E68", VA = "0x17D4E68")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60000A6")]
		[Address(RVA = "0x17D4E70", Offset = "0x17D4E70", VA = "0x17D4E70")]
		set
		{
		}
	}

	[Token(Token = "0x1700000F")]
	public bool UseInvSqr
	{
		[Token(Token = "0x60000A7")]
		[Address(RVA = "0x17D4EF4", Offset = "0x17D4EF4", VA = "0x17D4EF4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000A8")]
		[Address(RVA = "0x17D4EFC", Offset = "0x17D4EFC", VA = "0x17D4EFC")]
		set
		{
		}
	}

	[Token(Token = "0x17000010")]
	public float Near
	{
		[Token(Token = "0x60000A9")]
		[Address(RVA = "0x17D4F08", Offset = "0x17D4F08", VA = "0x17D4F08")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60000AA")]
		[Address(RVA = "0x17D4F10", Offset = "0x17D4F10", VA = "0x17D4F10")]
		set
		{
		}
	}

	[Token(Token = "0x17000011")]
	public float Far
	{
		[Token(Token = "0x60000AB")]
		[Address(RVA = "0x17D4F98", Offset = "0x17D4F98", VA = "0x17D4F98")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60000AC")]
		[Address(RVA = "0x17D4FA0", Offset = "0x17D4FA0", VA = "0x17D4FA0")]
		set
		{
		}
	}

	[Token(Token = "0x17000012")]
	public float VolumetricRadius
	{
		[Token(Token = "0x60000AD")]
		[Address(RVA = "0x17D5028", Offset = "0x17D5028", VA = "0x17D5028")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60000AE")]
		[Address(RVA = "0x17D5030", Offset = "0x17D5030", VA = "0x17D5030")]
		set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public float ReverbSend
	{
		[Token(Token = "0x60000AF")]
		[Address(RVA = "0x17D50B8", Offset = "0x17D50B8", VA = "0x17D50B8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60000B0")]
		[Address(RVA = "0x17D50C0", Offset = "0x17D50C0", VA = "0x17D50C0")]
		set
		{
		}
	}

	[Token(Token = "0x17000014")]
	public bool EnableRfl
	{
		[Token(Token = "0x60000B1")]
		[Address(RVA = "0x17D5148", Offset = "0x17D5148", VA = "0x17D5148")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000B2")]
		[Address(RVA = "0x17D5150", Offset = "0x17D5150", VA = "0x17D5150")]
		set
		{
		}
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x17D4B34", Offset = "0x17D4B34", VA = "0x17D4B34")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x9386C4", Offset = "0x9386C4")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x17D4D58", Offset = "0x17D4D58", VA = "0x17D4D58")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x17D515C", Offset = "0x17D515C", VA = "0x17D515C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x17D535C", Offset = "0x17D535C", VA = "0x17D535C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x17D5360", Offset = "0x17D5360", VA = "0x17D5360")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x17D51C8", Offset = "0x17D51C8", VA = "0x17D51C8")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x17D5440", Offset = "0x17D5440", VA = "0x17D5440")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x17D5914", Offset = "0x17D5914", VA = "0x17D5914")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x17D4CBC", Offset = "0x17D4CBC", VA = "0x17D4CBC")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x17D59E4", Offset = "0x17D59E4", VA = "0x17D59E4")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x2000015")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x4000090")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x4000092")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x17D5A04", Offset = "0x17D5A04", VA = "0x17D5A04")]
	private void Start()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x17D5A10", Offset = "0x17D5A10", VA = "0x17D5A10")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x17D5AE4", Offset = "0x17D5AE4", VA = "0x17D5AE4")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x17D5A48", Offset = "0x17D5A48", VA = "0x17D5A48")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x17D5B80", Offset = "0x17D5B80", VA = "0x17D5B80")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x2000016")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x2000413")]
	private struct MeshMaterial
	{
		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x2000414")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x4000099")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x17000015")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x60000C1")]
		[Address(RVA = "0x17D8B08", Offset = "0x17D8B08", VA = "0x17D8B08")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000016")]
	public string filePath
	{
		[Token(Token = "0x60000C2")]
		[Address(RVA = "0x17D8B94", Offset = "0x17D8B94", VA = "0x17D8B94")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x17D8C0C", Offset = "0x17D8C0C", VA = "0x17D8C0C")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x17D8D84", Offset = "0x17D8D84", VA = "0x17D8D84")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x17D8D88", Offset = "0x17D8D88", VA = "0x17D8D88")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x17D9338", Offset = "0x17D9338", VA = "0x17D9338")]
	private void Update()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x17D9810", Offset = "0x17D9810", VA = "0x17D9810")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x17D9974", Offset = "0x17D9974", VA = "0x17D9974")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x17DA1E4", Offset = "0x17DA1E4", VA = "0x17DA1E4")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x17DA230", Offset = "0x17DA230", VA = "0x17DA230")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x17DBED8", Offset = "0x17DBED8", VA = "0x17DBED8")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x17DBD8C", Offset = "0x17DBD8C", VA = "0x17DBD8C")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x17D914C", Offset = "0x17D914C", VA = "0x17D914C")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x17D8F6C", Offset = "0x17D8F6C", VA = "0x17D8F6C")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x17DC6B0", Offset = "0x17DC6B0", VA = "0x17DC6B0")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x17DCB24", Offset = "0x17DCB24", VA = "0x17DCB24")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x2000017")]
internal class ONSPPropagation
{
	[Token(Token = "0x2000415")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x40018A3")]
		Int8,
		[Token(Token = "0x40018A4")]
		UInt8,
		[Token(Token = "0x40018A5")]
		Int16,
		[Token(Token = "0x40018A6")]
		UInt16,
		[Token(Token = "0x40018A7")]
		Int32,
		[Token(Token = "0x40018A8")]
		UInt32,
		[Token(Token = "0x40018A9")]
		Int64,
		[Token(Token = "0x40018AA")]
		UInt64,
		[Token(Token = "0x40018AB")]
		Float16,
		[Token(Token = "0x40018AC")]
		Float32,
		[Token(Token = "0x40018AD")]
		Float64
	}

	[Token(Token = "0x2000416")]
	public class ClientType
	{
		[Token(Token = "0x40018AE")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x40018AF")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x40018B0")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x40018B1")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x40018B2")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x40018B3")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x40018B4")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x40018B5")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x40018B6")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x40018B7")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x40018B8")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x40018B9")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x40018BA")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x40018BB")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_1 = 13u;

		[Token(Token = "0x40018BC")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_2 = 14u;

		[Token(Token = "0x6001FC5")]
		[Address(RVA = "0x17D6074", Offset = "0x17D6074", VA = "0x17D6074")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x2000417")]
	public interface PropagationInterface
	{
		[Token(Token = "0x6001FC6")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x6001FC7")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x6001FC8")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x6001FC9")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6001FCA")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x6001FCB")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001FCC")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6001FCD")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001FCE")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001FCF")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6001FD0")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001FD1")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x6001FD2")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6001FD3")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001FD4")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x2000418")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x40018BD")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700039E")]
		private IntPtr context
		{
			[Token(Token = "0x6001FD5")]
			[Address(RVA = "0x17D6E74", Offset = "0x17D6E74", VA = "0x17D6E74")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6001FD6")]
		[Address(RVA = "0x17D6ED8", Offset = "0x17D6ED8", VA = "0x17D6ED8")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6001FD7")]
		[Address(RVA = "0x17D6F84", Offset = "0x17D6F84", VA = "0x17D6F84")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6001FD8")]
		[Address(RVA = "0x17D7030", Offset = "0x17D7030", VA = "0x17D7030", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001FD9")]
		[Address(RVA = "0x17D7054", Offset = "0x17D7054", VA = "0x17D7054")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6001FDA")]
		[Address(RVA = "0x17D7100", Offset = "0x17D7100", VA = "0x17D7100", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001FDB")]
		[Address(RVA = "0x17D7124", Offset = "0x17D7124", VA = "0x17D7124")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6001FDC")]
		[Address(RVA = "0x17D71CC", Offset = "0x17D71CC", VA = "0x17D71CC", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001FDD")]
		[Address(RVA = "0x17D71F0", Offset = "0x17D71F0", VA = "0x17D71F0")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6001FDE")]
		[Address(RVA = "0x17D728C", Offset = "0x17D728C", VA = "0x17D728C", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001FDF")]
		[Address(RVA = "0x17D7294", Offset = "0x17D7294", VA = "0x17D7294")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6001FE0")]
		[Address(RVA = "0x17D73BC", Offset = "0x17D73BC", VA = "0x17D73BC", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001FE1")]
		[Address(RVA = "0x17D74B4", Offset = "0x17D74B4", VA = "0x17D74B4")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001FE2")]
		[Address(RVA = "0x17D7568", Offset = "0x17D7568", VA = "0x17D7568", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001FE3")]
		[Address(RVA = "0x17D7574", Offset = "0x17D7574", VA = "0x17D7574")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6001FE4")]
		[Address(RVA = "0x17D76BC", Offset = "0x17D76BC", VA = "0x17D76BC", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001FE5")]
		[Address(RVA = "0x17D76C8", Offset = "0x17D76C8", VA = "0x17D76C8")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001FE6")]
		[Address(RVA = "0x17D7790", Offset = "0x17D7790", VA = "0x17D7790", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001FE7")]
		[Address(RVA = "0x17D779C", Offset = "0x17D779C", VA = "0x17D779C")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001FE8")]
		[Address(RVA = "0x17D7864", Offset = "0x17D7864", VA = "0x17D7864", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001FE9")]
		[Address(RVA = "0x17D7870", Offset = "0x17D7870", VA = "0x17D7870")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6001FEA")]
		[Address(RVA = "0x17D7938", Offset = "0x17D7938", VA = "0x17D7938", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001FEB")]
		[Address(RVA = "0x17D7944", Offset = "0x17D7944", VA = "0x17D7944")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6001FEC")]
		[Address(RVA = "0x17D79EC", Offset = "0x17D79EC", VA = "0x17D79EC", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001FED")]
		[Address(RVA = "0x17D7A10", Offset = "0x17D7A10", VA = "0x17D7A10")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6001FEE")]
		[Address(RVA = "0x17D7AAC", Offset = "0x17D7AAC", VA = "0x17D7AAC", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001FEF")]
		[Address(RVA = "0x17D7AB4", Offset = "0x17D7AB4", VA = "0x17D7AB4")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001FF0")]
		[Address(RVA = "0x17D7B78", Offset = "0x17D7B78", VA = "0x17D7B78", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001FF1")]
		[Address(RVA = "0x17D7B84", Offset = "0x17D7B84", VA = "0x17D7B84")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6001FF2")]
		[Address(RVA = "0x17D7C48", Offset = "0x17D7C48", VA = "0x17D7C48", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001FF3")]
		[Address(RVA = "0x17D7C58", Offset = "0x17D7C58", VA = "0x17D7C58")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6001FF4")]
		[Address(RVA = "0x17D7D04", Offset = "0x17D7D04", VA = "0x17D7D04", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6001FF5")]
		[Address(RVA = "0x17D6020", Offset = "0x17D6020", VA = "0x17D6020")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x2000419")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x40018BF")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700039F")]
		private IntPtr context
		{
			[Token(Token = "0x6001FF6")]
			[Address(RVA = "0x17D7D10", Offset = "0x17D7D10", VA = "0x17D7D10")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6001FF7")]
		[Address(RVA = "0x17D5E30", Offset = "0x17D5E30", VA = "0x17D5E30")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6001FF8")]
		[Address(RVA = "0x17D7D74", Offset = "0x17D7D74", VA = "0x17D7D74")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6001FF9")]
		[Address(RVA = "0x17D7E20", Offset = "0x17D7E20", VA = "0x17D7E20", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001FFA")]
		[Address(RVA = "0x17D7E44", Offset = "0x17D7E44", VA = "0x17D7E44")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6001FFB")]
		[Address(RVA = "0x17D7EF0", Offset = "0x17D7EF0", VA = "0x17D7EF0", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001FFC")]
		[Address(RVA = "0x17D7F14", Offset = "0x17D7F14", VA = "0x17D7F14")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6001FFD")]
		[Address(RVA = "0x17D7FC0", Offset = "0x17D7FC0", VA = "0x17D7FC0", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001FFE")]
		[Address(RVA = "0x17D7FE4", Offset = "0x17D7FE4", VA = "0x17D7FE4")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6001FFF")]
		[Address(RVA = "0x17D8080", Offset = "0x17D8080", VA = "0x17D8080", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002000")]
		[Address(RVA = "0x17D8088", Offset = "0x17D8088", VA = "0x17D8088")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6002001")]
		[Address(RVA = "0x17D81B0", Offset = "0x17D81B0", VA = "0x17D81B0", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002002")]
		[Address(RVA = "0x17D82A8", Offset = "0x17D82A8", VA = "0x17D82A8")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6002003")]
		[Address(RVA = "0x17D835C", Offset = "0x17D835C", VA = "0x17D835C", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002004")]
		[Address(RVA = "0x17D8368", Offset = "0x17D8368", VA = "0x17D8368")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6002005")]
		[Address(RVA = "0x17D84B0", Offset = "0x17D84B0", VA = "0x17D84B0", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002006")]
		[Address(RVA = "0x17D84BC", Offset = "0x17D84BC", VA = "0x17D84BC")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002007")]
		[Address(RVA = "0x17D8584", Offset = "0x17D8584", VA = "0x17D8584", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002008")]
		[Address(RVA = "0x17D8590", Offset = "0x17D8590", VA = "0x17D8590")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002009")]
		[Address(RVA = "0x17D8658", Offset = "0x17D8658", VA = "0x17D8658", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600200A")]
		[Address(RVA = "0x17D8664", Offset = "0x17D8664", VA = "0x17D8664")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x600200B")]
		[Address(RVA = "0x17D872C", Offset = "0x17D872C", VA = "0x17D872C", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600200C")]
		[Address(RVA = "0x17D8738", Offset = "0x17D8738", VA = "0x17D8738")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x600200D")]
		[Address(RVA = "0x17D87E4", Offset = "0x17D87E4", VA = "0x17D87E4", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600200E")]
		[Address(RVA = "0x17D8808", Offset = "0x17D8808", VA = "0x17D8808")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x600200F")]
		[Address(RVA = "0x17D88A4", Offset = "0x17D88A4", VA = "0x17D88A4", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002010")]
		[Address(RVA = "0x17D88AC", Offset = "0x17D88AC", VA = "0x17D88AC")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6002011")]
		[Address(RVA = "0x17D8970", Offset = "0x17D8970", VA = "0x17D8970", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002012")]
		[Address(RVA = "0x17D897C", Offset = "0x17D897C", VA = "0x17D897C")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6002013")]
		[Address(RVA = "0x17D8A40", Offset = "0x17D8A40", VA = "0x17D8A40", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002014")]
		[Address(RVA = "0x17D8A50", Offset = "0x17D8A50", VA = "0x17D8A50")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6002015")]
		[Address(RVA = "0x17D8AFC", Offset = "0x17D8AFC", VA = "0x17D8AFC", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6002016")]
		[Address(RVA = "0x17D5EDC", Offset = "0x17D5EDC", VA = "0x17D5EDC")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x200041A")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x40018C1")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x170003A0")]
		private IntPtr context
		{
			[Token(Token = "0x6002017")]
			[Address(RVA = "0x17D607C", Offset = "0x17D607C", VA = "0x17D607C")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6002018")]
		[Address(RVA = "0x17D5F28", Offset = "0x17D5F28", VA = "0x17D5F28")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6002019")]
		[Address(RVA = "0x17D60E0", Offset = "0x17D60E0", VA = "0x17D60E0")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x600201A")]
		[Address(RVA = "0x17D618C", Offset = "0x17D618C", VA = "0x17D618C", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600201B")]
		[Address(RVA = "0x17D61B0", Offset = "0x17D61B0", VA = "0x17D61B0")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x600201C")]
		[Address(RVA = "0x17D625C", Offset = "0x17D625C", VA = "0x17D625C", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600201D")]
		[Address(RVA = "0x17D6280", Offset = "0x17D6280", VA = "0x17D6280")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x600201E")]
		[Address(RVA = "0x17D632C", Offset = "0x17D632C", VA = "0x17D632C", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600201F")]
		[Address(RVA = "0x17D6350", Offset = "0x17D6350", VA = "0x17D6350")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6002020")]
		[Address(RVA = "0x17D63EC", Offset = "0x17D63EC", VA = "0x17D63EC", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002021")]
		[Address(RVA = "0x17D63F4", Offset = "0x17D63F4", VA = "0x17D63F4")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6002022")]
		[Address(RVA = "0x17D651C", Offset = "0x17D651C", VA = "0x17D651C", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002023")]
		[Address(RVA = "0x17D6614", Offset = "0x17D6614", VA = "0x17D6614")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6002024")]
		[Address(RVA = "0x17D66C8", Offset = "0x17D66C8", VA = "0x17D66C8", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002025")]
		[Address(RVA = "0x17D66D4", Offset = "0x17D66D4", VA = "0x17D66D4")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6002026")]
		[Address(RVA = "0x17D681C", Offset = "0x17D681C", VA = "0x17D681C", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002027")]
		[Address(RVA = "0x17D6828", Offset = "0x17D6828", VA = "0x17D6828")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002028")]
		[Address(RVA = "0x17D68F0", Offset = "0x17D68F0", VA = "0x17D68F0", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002029")]
		[Address(RVA = "0x17D68FC", Offset = "0x17D68FC", VA = "0x17D68FC")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600202A")]
		[Address(RVA = "0x17D69C4", Offset = "0x17D69C4", VA = "0x17D69C4", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600202B")]
		[Address(RVA = "0x17D69D0", Offset = "0x17D69D0", VA = "0x17D69D0")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x600202C")]
		[Address(RVA = "0x17D6A98", Offset = "0x17D6A98", VA = "0x17D6A98", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600202D")]
		[Address(RVA = "0x17D6AA4", Offset = "0x17D6AA4", VA = "0x17D6AA4")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x600202E")]
		[Address(RVA = "0x17D6B50", Offset = "0x17D6B50", VA = "0x17D6B50", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600202F")]
		[Address(RVA = "0x17D6B74", Offset = "0x17D6B74", VA = "0x17D6B74")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6002030")]
		[Address(RVA = "0x17D6C10", Offset = "0x17D6C10", VA = "0x17D6C10", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002031")]
		[Address(RVA = "0x17D6C18", Offset = "0x17D6C18", VA = "0x17D6C18")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6002032")]
		[Address(RVA = "0x17D6CDC", Offset = "0x17D6CDC", VA = "0x17D6CDC", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002033")]
		[Address(RVA = "0x17D6CE8", Offset = "0x17D6CE8", VA = "0x17D6CE8")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6002034")]
		[Address(RVA = "0x17D6DAC", Offset = "0x17D6DAC", VA = "0x17D6DAC", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002035")]
		[Address(RVA = "0x17D6DBC", Offset = "0x17D6DBC", VA = "0x17D6DBC")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6002036")]
		[Address(RVA = "0x17D6E68", Offset = "0x17D6E68", VA = "0x17D6E68", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6002037")]
		[Address(RVA = "0x17D5FD4", Offset = "0x17D5FD4", VA = "0x17D5FD4")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x17000017")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x60000D2")]
		[Address(RVA = "0x17D5B90", Offset = "0x17D5B90", VA = "0x17D5B90")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x17D5C00", Offset = "0x17D5C00", VA = "0x17D5C00")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x17D606C", Offset = "0x17D606C", VA = "0x17D606C")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x2000018")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x200041B")]
	public enum Preset
	{
		[Token(Token = "0x40018C4")]
		Custom,
		[Token(Token = "0x40018C5")]
		AcousticTile,
		[Token(Token = "0x40018C6")]
		Brick,
		[Token(Token = "0x40018C7")]
		BrickPainted,
		[Token(Token = "0x40018C8")]
		Carpet,
		[Token(Token = "0x40018C9")]
		CarpetHeavy,
		[Token(Token = "0x40018CA")]
		CarpetHeavyPadded,
		[Token(Token = "0x40018CB")]
		CeramicTile,
		[Token(Token = "0x40018CC")]
		Concrete,
		[Token(Token = "0x40018CD")]
		ConcreteRough,
		[Token(Token = "0x40018CE")]
		ConcreteBlock,
		[Token(Token = "0x40018CF")]
		ConcreteBlockPainted,
		[Token(Token = "0x40018D0")]
		Curtain,
		[Token(Token = "0x40018D1")]
		Foliage,
		[Token(Token = "0x40018D2")]
		Glass,
		[Token(Token = "0x40018D3")]
		GlassHeavy,
		[Token(Token = "0x40018D4")]
		Grass,
		[Token(Token = "0x40018D5")]
		Gravel,
		[Token(Token = "0x40018D6")]
		GypsumBoard,
		[Token(Token = "0x40018D7")]
		PlasterOnBrick,
		[Token(Token = "0x40018D8")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x40018D9")]
		Soil,
		[Token(Token = "0x40018DA")]
		SoundProof,
		[Token(Token = "0x40018DB")]
		Snow,
		[Token(Token = "0x40018DC")]
		Steel,
		[Token(Token = "0x40018DD")]
		Water,
		[Token(Token = "0x40018DE")]
		WoodThin,
		[Token(Token = "0x40018DF")]
		WoodThick,
		[Token(Token = "0x40018E0")]
		WoodFloor,
		[Token(Token = "0x40018E1")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x200041C")]
	public sealed class Point
	{
		[Token(Token = "0x40018E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x6002038")]
		[Address(RVA = "0x17E6C90", Offset = "0x17E6C90", VA = "0x17E6C90")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x6002039")]
		[Address(RVA = "0x17E6DD8", Offset = "0x17E6DD8", VA = "0x17E6DD8")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x600203A")]
		[Address(RVA = "0x17E6E48", Offset = "0x17E6E48", VA = "0x17E6E48")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x200041D")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9272AC", Offset = "0x9272AC")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x200062D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9280D0", Offset = "0x9280D0")]
		private sealed class <>c
		{
			[Token(Token = "0x4002253")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002254")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x4002255")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x6002801")]
			[Address(RVA = "0x17E7338", Offset = "0x17E7338", VA = "0x17E7338")]
			public <>c()
			{
			}

			[Token(Token = "0x6002802")]
			[Address(RVA = "0x17E7340", Offset = "0x17E7340", VA = "0x17E7340")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x6002803")]
			[Address(RVA = "0x17E736C", Offset = "0x17E736C", VA = "0x17E736C")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x40018E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x170003A1")]
		public float Item
		{
			[Token(Token = "0x600203B")]
			[Address(RVA = "0x17E6EB0", Offset = "0x17E6EB0", VA = "0x17E6EB0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600203C")]
		[Address(RVA = "0x17E6D60", Offset = "0x17E6D60", VA = "0x17E6D60")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9284A0", Offset = "0x9284A0")]
	public Spectrum absorption;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9284D8", Offset = "0x9284D8")]
	public Spectrum transmission;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x928510", Offset = "0x928510")]
	public Spectrum scattering;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x17000018")]
	public Preset preset
	{
		[Token(Token = "0x60000D5")]
		[Address(RVA = "0x17DCBFC", Offset = "0x17DCBFC", VA = "0x17DCBFC")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x60000D6")]
		[Address(RVA = "0x17DCC04", Offset = "0x17DCC04", VA = "0x17DCC04")]
		set
		{
		}
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x17DCC2C", Offset = "0x17DCC2C", VA = "0x17DCC2C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x17DC53C", Offset = "0x17DC53C", VA = "0x17DC53C")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x17DD308", Offset = "0x17DD308", VA = "0x17DD308")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x17DD30C", Offset = "0x17DD30C", VA = "0x17DD30C")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x17DCC30", Offset = "0x17DCC30", VA = "0x17DCC30")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x17DBBF8", Offset = "0x17DBBF8", VA = "0x17DBBF8")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x17DD3F0", Offset = "0x17DD3F0", VA = "0x17DD3F0")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x17DD984", Offset = "0x17DD984", VA = "0x17DD984")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x17DDF20", Offset = "0x17DDF20", VA = "0x17DDF20")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x17DE4BC", Offset = "0x17DE4BC", VA = "0x17DE4BC")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x17DEA5C", Offset = "0x17DEA5C", VA = "0x17DEA5C")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x17DEFF4", Offset = "0x17DEFF4", VA = "0x17DEFF4")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x17DF58C", Offset = "0x17DF58C", VA = "0x17DF58C")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x17DFB2C", Offset = "0x17DFB2C", VA = "0x17DFB2C")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x17E00CC", Offset = "0x17E00CC", VA = "0x17E00CC")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x17E0668", Offset = "0x17E0668", VA = "0x17E0668")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x17E0C08", Offset = "0x17E0C08", VA = "0x17E0C08")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x17E11A8", Offset = "0x17E11A8", VA = "0x17E11A8")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x17E1740", Offset = "0x17E1740", VA = "0x17E1740")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x17E1CD8", Offset = "0x17E1CD8", VA = "0x17E1CD8")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x17E2270", Offset = "0x17E2270", VA = "0x17E2270")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x17E2810", Offset = "0x17E2810", VA = "0x17E2810")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x17E2C2C", Offset = "0x17E2C2C", VA = "0x17E2C2C")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x17E3040", Offset = "0x17E3040", VA = "0x17E3040")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x17E35E0", Offset = "0x17E35E0", VA = "0x17E35E0")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x17E3B7C", Offset = "0x17E3B7C", VA = "0x17E3B7C")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x17E4118", Offset = "0x17E4118", VA = "0x17E4118")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x17E4530", Offset = "0x17E4530", VA = "0x17E4530")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x17E46C4", Offset = "0x17E46C4", VA = "0x17E46C4")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x17E4AD8", Offset = "0x17E4AD8", VA = "0x17E4AD8")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x17E5074", Offset = "0x17E5074", VA = "0x17E5074")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x17E5614", Offset = "0x17E5614", VA = "0x17E5614")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x17E5BB0", Offset = "0x17E5BB0", VA = "0x17E5BB0")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x17E6150", Offset = "0x17E6150", VA = "0x17E6150")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x17E66F0", Offset = "0x17E66F0", VA = "0x17E66F0")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x17E6CC8", Offset = "0x17E6CC8", VA = "0x17E6CC8")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x2000019")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x17E7398", Offset = "0x17E7398", VA = "0x17E7398")]
	private void Update()
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x17E7468", Offset = "0x17E7468", VA = "0x17E7468")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x200001A")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x17000019")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x60000FD")]
		[Address(RVA = "0x17D4BA8", Offset = "0x17D4BA8", VA = "0x17D4BA8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x17E7AA0", Offset = "0x17E7AA0", VA = "0x17E7AA0")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x200001B")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x40000A4")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x17E7AB0", Offset = "0x17E7AB0", VA = "0x17E7AB0")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x17E7B64", Offset = "0x17E7B64", VA = "0x17E7B64")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x17E7C70", Offset = "0x17E7C70", VA = "0x17E7C70")]
	private void Start()
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x17E7C74", Offset = "0x17E7C74", VA = "0x17E7C74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x17E7C78", Offset = "0x17E7C78", VA = "0x17E7C78")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x200001C")]
public class ChatController : MonoBehaviour
{
	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_InputField TMP_ChatInput;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text TMP_ChatOutput;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Scrollbar ChatScrollbar;

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xB36968", Offset = "0xB36968", VA = "0xB36968")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0xB36A28", Offset = "0xB36A28", VA = "0xB36A28")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0xB36AE8", Offset = "0xB36AE8", VA = "0xB36AE8")]
	private void AddToChatOutput(string newText)
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0xB36FDC", Offset = "0xB36FDC", VA = "0xB36FDC")]
	public ChatController()
	{
	}
}
[Token(Token = "0x200001D")]
public class EnvMapAnimator : MonoBehaviour
{
	[Token(Token = "0x200041E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9272E4", Offset = "0x9272E4")]
	private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40018E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40018E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EnvMapAnimator <>4__this;

		[Token(Token = "0x40018E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Matrix4x4 <matrix>5__2;

		[Token(Token = "0x170003A2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002040")]
			[Address(RVA = "0xBC0190", Offset = "0xBC0190", VA = "0xBC0190", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002042")]
			[Address(RVA = "0xBC0200", Offset = "0xBC0200", VA = "0xBC0200", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600203D")]
		[Address(RVA = "0xBBFF14", Offset = "0xBBFF14", VA = "0xBBFF14")]
		[DebuggerHidden]
		public <Start>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600203E")]
		[Address(RVA = "0xBBFF48", Offset = "0xBBFF48", VA = "0xBBFF48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600203F")]
		[Address(RVA = "0xBBFF4C", Offset = "0xBBFF4C", VA = "0xBBFF4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002041")]
		[Address(RVA = "0xBC0198", Offset = "0xBC0198", VA = "0xBC0198", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 RotationSpeeds;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TMP_Text m_textMeshPro;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material m_material;

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xBBFE24", Offset = "0xBBFE24", VA = "0xBBFE24")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xBBFEA0", Offset = "0xBBFEA0", VA = "0xBBFEA0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9386D8", Offset = "0x9386D8")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0xBBFF40", Offset = "0xBBFF40", VA = "0xBBFF40")]
	public EnvMapAnimator()
	{
	}
}
[Token(Token = "0x200001E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9250FC", Offset = "0x9250FC")]
public class Beam : MonoBehaviour
{
	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float startWidth;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float endWidth;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float startOffset;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float endOffset;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int count;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool updateEveryFrame;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool makeTail;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int maxUVAngle;

	[Token(Token = "0x40000B3")]
	private const float epsilon = 0.001f;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Vector3> vertices;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Vector2> uvs;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<Vector3> normals;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<int> indices;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 position;

	[Token(Token = "0x600010B")]
	[Address(RVA = "0xB35C90", Offset = "0xB35C90", VA = "0xB35C90")]
	private void Validate()
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xB35D48", Offset = "0xB35D48", VA = "0xB35D48")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xB36810", Offset = "0xB36810", VA = "0xB36810")]
	public void Update()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xB35E04", Offset = "0xB35E04", VA = "0xB35E04")]
	private Mesh createMesh()
	{
		return null;
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0xB368A8", Offset = "0xB368A8", VA = "0xB368A8")]
	public Beam()
	{
	}
}
[Token(Token = "0x200001F")]
internal class WaveVR_COMMITINFO
{
	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string wavevr_version;

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x122F880", Offset = "0x122F880", VA = "0x122F880")]
	public WaveVR_COMMITINFO()
	{
	}
}
[Token(Token = "0x2000020")]
public class ControllerConnectionStateReactor : MonoBehaviour
{
	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WVR_DeviceType type;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool connected;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> targetGameObjects;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool mFocusCapturedBySystem;

	[Token(Token = "0x6000112")]
	[Address(RVA = "0xB3703C", Offset = "0xB3703C", VA = "0xB3703C")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xB37124", Offset = "0xB37124", VA = "0xB37124")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xB37444", Offset = "0xB37444", VA = "0xB37444")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0xB3750C", Offset = "0xB3750C", VA = "0xB3750C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0xB37234", Offset = "0xB37234", VA = "0xB37234")]
	private bool checkConnection()
	{
		return default(bool);
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0xB372D0", Offset = "0xB372D0", VA = "0xB372D0")]
	private void setActive(bool active)
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0xB37654", Offset = "0xB37654", VA = "0xB37654")]
	private void onDeviceConnected(params object[] args)
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0xB379F8", Offset = "0xB379F8", VA = "0xB379F8")]
	public ControllerConnectionStateReactor()
	{
	}
}
[Token(Token = "0x2000021")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x92517C", Offset = "0x92517C")]
public class ControllerFadeManager : MonoBehaviour
{
	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FadeManger fadeManager;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float AngleHide;

	[Token(Token = "0x600011B")]
	[Address(RVA = "0xB37AC4", Offset = "0xB37AC4", VA = "0xB37AC4")]
	private void Start()
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0xB37D3C", Offset = "0xB37D3C", VA = "0xB37D3C")]
	private void Update()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xB37EBC", Offset = "0xB37EBC", VA = "0xB37EBC")]
	public ControllerFadeManager()
	{
	}
}
[Token(Token = "0x2000022")]
public class WaveVR_EventHandler : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerDownHandler, IBeginDragHandler, IDragHandler, IEndDragHandler, IDropHandler, IPointerUpHandler, IPointerHoverHandler
{
	[Token(Token = "0x200041F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9272F4", Offset = "0x9272F4")]
	private sealed class <TrackPointer>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40018EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40018EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40018EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaveVR_EventHandler <>4__this;

		[Token(Token = "0x170003A4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002046")]
			[Address(RVA = "0xE49364", Offset = "0xE49364", VA = "0xE49364", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002048")]
			[Address(RVA = "0xE493D4", Offset = "0xE493D4", VA = "0xE493D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002043")]
		[Address(RVA = "0xE491E8", Offset = "0xE491E8", VA = "0xE491E8")]
		[DebuggerHidden]
		public <TrackPointer>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6002044")]
		[Address(RVA = "0xE4927C", Offset = "0xE4927C", VA = "0xE4927C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002045")]
		[Address(RVA = "0xE49280", Offset = "0xE49280", VA = "0xE49280", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002047")]
		[Address(RVA = "0xE4936C", Offset = "0xE4936C", VA = "0xE4936C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000C1")]
	private const string LOG_TAG = "WaveVR_EventHandler";

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WaitForEndOfFrame waitForEndOfFrame;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 goPosition;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float goPositionZ;

	[Token(Token = "0x600011E")]
	[Address(RVA = "0xE48884", Offset = "0xE48884", VA = "0xE48884")]
	private void TeleportRandomly()
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0xE489C4", Offset = "0xE489C4", VA = "0xE489C4")]
	private void Rotate()
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0xE48A7C", Offset = "0xE48A7C", VA = "0xE48A7C", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xE48B30", Offset = "0xE48B30", VA = "0xE48B30", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0xE48B34", Offset = "0xE48B34", VA = "0xE48B34", Slot = "6")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0xE48BB0", Offset = "0xE48BB0", VA = "0xE48BB0", Slot = "11")]
	public void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xE48C2C", Offset = "0xE48C2C", VA = "0xE48C2C", Slot = "7")]
	public void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xE48D64", Offset = "0xE48D64", VA = "0xE48D64", Slot = "8")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xE48E9C", Offset = "0xE48E9C", VA = "0xE48E9C", Slot = "9")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xE48F80", Offset = "0xE48F80", VA = "0xE48F80", Slot = "10")]
	public void OnDrop(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xE49110", Offset = "0xE49110", VA = "0xE49110", Slot = "12")]
	public void OnPointerHover(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xE49174", Offset = "0xE49174", VA = "0xE49174")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93873C", Offset = "0x93873C")]
	private IEnumerator TrackPointer()
	{
		return null;
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xE49214", Offset = "0xE49214", VA = "0xE49214")]
	public WaveVR_EventHandler()
	{
	}
}
[Token(Token = "0x2000023")]
public class WaveVR_Raycast : MonoBehaviour
{
	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WVR_DeviceType index;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool ListenToDevice;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool AddLineRenderer;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject raycastObject;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float distance;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LineRenderer lr;

	[Token(Token = "0x600012B")]
	[Address(RVA = "0xD8F404", Offset = "0xD8F404", VA = "0xD8F404")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0xD8F4EC", Offset = "0xD8F4EC", VA = "0xD8F4EC")]
	private void initLineRenderer()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0xD8F648", Offset = "0xD8F648", VA = "0xD8F648")]
	private void shotRaycast()
	{
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0xD8F8E0", Offset = "0xD8F8E0", VA = "0xD8F8E0")]
	private void updateLineRenderer()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0xD8FAF0", Offset = "0xD8FAF0", VA = "0xD8FAF0")]
	private void onDeviceConnected(params object[] args)
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xD8FEE0", Offset = "0xD8FEE0", VA = "0xD8FEE0")]
	private void OnRenderModelLoaded(params object[] args)
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0xD900A4", Offset = "0xD900A4", VA = "0xD900A4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0xD900B4", Offset = "0xD900B4", VA = "0xD900B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0xD9010C", Offset = "0xD9010C", VA = "0xD9010C")]
	private void onDestroy()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0xD901A8", Offset = "0xD901A8", VA = "0xD901A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0xD90378", Offset = "0xD90378", VA = "0xD90378")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0xD90478", Offset = "0xD90478", VA = "0xD90478")]
	public WaveVR_Raycast()
	{
	}
}
[Token(Token = "0x2000024")]
public class FadeManger : MonoBehaviour
{
	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float FadeTime;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Material> Materials;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float InternalFadeTime;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool isInTransition;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool IsFadeOut;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float alpha;

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xBC0208", Offset = "0xBC0208", VA = "0xBC0208")]
	public void Fade(bool fadeOut)
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0xBC0270", Offset = "0xBC0270", VA = "0xBC0270")]
	private void Update()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0xBC043C", Offset = "0xBC043C", VA = "0xBC043C")]
	public FadeManger()
	{
	}
}
[Token(Token = "0x2000025")]
public class FollowTransform : MonoBehaviour
{
	[Token(Token = "0x2000420")]
	public enum DOF
	{
		[Token(Token = "0x40018EE")]
		TRACK_6DOF,
		[Token(Token = "0x40018EF")]
		TRACK_3DOF
	}

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public DOF howTargetTrackHMD;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool followPostion;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool followRotation;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private WaveVR_DevicePoseTracker inverter;

	[Token(Token = "0x600013B")]
	[Address(RVA = "0xBC045C", Offset = "0xBC045C", VA = "0xBC045C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0xBC07E8", Offset = "0xBC07E8", VA = "0xBC07E8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xBC061C", Offset = "0xBC061C", VA = "0xBC061C")]
	private void Expand()
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xBC0894", Offset = "0xBC0894", VA = "0xBC0894")]
	private void OnAfterNewPoses(params object[] args)
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xBC0B38", Offset = "0xBC0B38", VA = "0xBC0B38")]
	public FollowTransform()
	{
	}
}
[Token(Token = "0x2000026")]
public enum EGazeTriggerMouseKey
{
	[Token(Token = "0x40000D8")]
	LeftClick,
	[Token(Token = "0x40000D9")]
	RightClick,
	[Token(Token = "0x40000DA")]
	MiddleClick
}
[Token(Token = "0x2000027")]
public enum EGazeTriggerButton
{
	[Token(Token = "0x40000DC")]
	System = 0,
	[Token(Token = "0x40000DD")]
	Menu = 1,
	[Token(Token = "0x40000DE")]
	Grip = 2,
	[Token(Token = "0x40000DF")]
	DPad_Left = 3,
	[Token(Token = "0x40000E0")]
	DPad_Up = 4,
	[Token(Token = "0x40000E1")]
	DPad_Right = 5,
	[Token(Token = "0x40000E2")]
	DPad_Down = 6,
	[Token(Token = "0x40000E3")]
	Volume_Up = 7,
	[Token(Token = "0x40000E4")]
	Volume_Down = 8,
	[Token(Token = "0x40000E5")]
	DigitalTrigger = 9,
	[Token(Token = "0x40000E6")]
	Touchpad = 16,
	[Token(Token = "0x40000E7")]
	Trigger = 17
}
[Token(Token = "0x2000028")]
public enum EGazeTriggerDevice
{
	[Token(Token = "0x40000E9")]
	HMD,
	[Token(Token = "0x40000EA")]
	NonDominantController,
	[Token(Token = "0x40000EB")]
	DominantController,
	[Token(Token = "0x40000EC")]
	HMDWithNonDominantController,
	[Token(Token = "0x40000ED")]
	HMDWithDominantController,
	[Token(Token = "0x40000EE")]
	HMDWithTwoControllers
}
[Token(Token = "0x2000029")]
public enum EGazeInputEvent
{
	[Token(Token = "0x40000F0")]
	PointerDown,
	[Token(Token = "0x40000F1")]
	PointerClick,
	[Token(Token = "0x40000F2")]
	PointerSubmit
}
[Token(Token = "0x200002A")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9251E0", Offset = "0x9251E0")]
public class GazeInputModule : PointerInputModule
{
	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool progressRate;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float RateTextZPosition;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool progressCounter;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float CounterTextZPosition;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float TimeToGaze;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public EGazeInputEvent InputEvent;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject Head;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool BtnControl;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[HideInInspector]
	public EGazeTriggerDevice GazeDevice;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public EGazeTriggerButton ButtonToTrigger;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[HideInInspector]
	public bool WithTimeGaze;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	private bool defWithTimeGaze;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x86")]
	private bool btnPressDown;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x87")]
	private bool btnPressed;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool btnPressUp;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	private bool HmdEnterPressDown;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float currUnscaledTime;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private PointerEventData pointerData;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float gazeTime;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Text progressText;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Text counterText;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private WaveVR_Reticle gazePointer;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private GameObject percentCanvas;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private GameObject counterCanvas;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool EnableGaze;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Canvas[] sceneCanvases;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool focusCapturedBySystem;

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xBC1550", Offset = "0xBC1550", VA = "0xBC1550")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xBC15F0", Offset = "0xBC15F0", VA = "0xBC15F0")]
	public void SetWithTimeGaze(bool withTimer)
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xBC1724", Offset = "0xBC1724", VA = "0xBC1724")]
	private Vector3 GetIntersectionPosition(Camera cam, RaycastResult raycastResult)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xBC1908", Offset = "0xBC1908", VA = "0xBC1908")]
	private void CastToCenterOfScreen()
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xBC1B24", Offset = "0xBC1B24", VA = "0xBC1B24")]
	private void GraphicRaycast(Camera event_camera)
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xBC1ED8", Offset = "0xBC1ED8", VA = "0xBC1ED8")]
	private void PhysicRaycast(PhysicsRaycaster raycaster)
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xBC2180", Offset = "0xBC2180", VA = "0xBC2180")]
	private GameObject GetCurrentGameObject(PointerEventData pointerData)
	{
		return null;
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xBC2260", Offset = "0xBC2260", VA = "0xBC2260")]
	private Vector3 GetIntersectionPosition(PointerEventData pointerData)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xBC24A0", Offset = "0xBC24A0", VA = "0xBC24A0")]
	private void UpdateProgressDistance(PointerEventData pointerEvent)
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xBC2768", Offset = "0xBC2768", VA = "0xBC2768")]
	private void UpdateReticle(GameObject preGazedObject, PointerEventData pointerEvent)
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xBC2AE0", Offset = "0xBC2AE0", VA = "0xBC2AE0")]
	private void UpdateButtonStates()
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0xBC2E90", Offset = "0xBC2E90", VA = "0xBC2E90")]
	private void UpdateProgressText()
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0xBC3218", Offset = "0xBC3218", VA = "0xBC3218")]
	private void UpdateCounterText()
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xBC35E0", Offset = "0xBC35E0", VA = "0xBC35E0")]
	private void OnTriggeGaze()
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xBC3D80", Offset = "0xBC3D80", VA = "0xBC3D80")]
	private void GazeControl()
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xBC3F38", Offset = "0xBC3F38", VA = "0xBC3F38", Slot = "5")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0xBC458C", Offset = "0xBC458C", VA = "0xBC458C", Slot = "7")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0xBC4294", Offset = "0xBC4294", VA = "0xBC4294")]
	private void ActivaeGazePointerCanvas(bool active)
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xBC45E0", Offset = "0xBC45E0", VA = "0xBC45E0", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xBC4764", Offset = "0xBC4764", VA = "0xBC4764")]
	public GazeInputModule()
	{
	}
}
[Token(Token = "0x200002B")]
public class GOEventTrigger : MonoBehaviour
{
	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 startPosition;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Color defaultColor;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Color changedColor;

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xBC0B4C", Offset = "0xBC0B4C", VA = "0xBC0B4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xBC0C20", Offset = "0xBC0C20", VA = "0xBC0C20")]
	public void OnEnter()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xBC0DBC", Offset = "0xBC0DBC", VA = "0xBC0DBC")]
	public void OnTrigger()
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xBC0FAC", Offset = "0xBC0FAC", VA = "0xBC0FAC")]
	public void OnExit()
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xBC1060", Offset = "0xBC1060", VA = "0xBC1060")]
	public void OnQuitGame()
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xBC110C", Offset = "0xBC110C", VA = "0xBC110C")]
	public void OnGazeReset()
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xBC1174", Offset = "0xBC1174", VA = "0xBC1174")]
	public void OnShowButton()
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xBC125C", Offset = "0xBC125C", VA = "0xBC125C")]
	public void OnHideButton()
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xBC1344", Offset = "0xBC1344", VA = "0xBC1344")]
	public void ChangeColor(string color)
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xBC0CD4", Offset = "0xBC0CD4", VA = "0xBC0CD4")]
	private void ChangeColor(bool change)
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xBC0E6C", Offset = "0xBC0E6C", VA = "0xBC0E6C")]
	private void TeleportRandomly()
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xBC14B0", Offset = "0xBC14B0", VA = "0xBC14B0")]
	public GOEventTrigger()
	{
	}
}
[Token(Token = "0x200002C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x925218", Offset = "0x925218")]
public class IndicatorLine : MonoBehaviour
{
	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x928598", Offset = "0x928598")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x928598", Offset = "0x928598")]
	public float startWidth;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9285F4", Offset = "0x9285F4")]
	public float endWidth;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x928614", Offset = "0x928614")]
	public float lineLength;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color lineColor;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ButtonIndication.Alignment alignment;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float startOffset;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float endOffset;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int count;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool makeTail;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int maxUVAngle;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int Count;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int verticesCount;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int indicesCount;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Vector3> vertices;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Vector2> uvs;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<Vector3> normals;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<int> indices;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<Color32> colors;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 position;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Mesh updateMesh;

	[Token(Token = "0x6000162")]
	[Address(RVA = "0xDC1040", Offset = "0xDC1040", VA = "0xDC1040")]
	private void Validate()
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xDC108C", Offset = "0xDC108C", VA = "0xDC108C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0xDC1244", Offset = "0xDC1244", VA = "0xDC1244")]
	private void Start()
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0xDC14E8", Offset = "0xDC14E8", VA = "0xDC14E8")]
	public void Update()
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0xDC14EC", Offset = "0xDC14EC", VA = "0xDC14EC")]
	public void Circle(Texture2D tex, int cx, int cy, int r, Color col)
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0xDC1248", Offset = "0xDC1248", VA = "0xDC1248")]
	public void updateMeshSettings()
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0xDC1744", Offset = "0xDC1744", VA = "0xDC1744")]
	private Mesh createMesh()
	{
		return null;
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0xDC23C0", Offset = "0xDC23C0", VA = "0xDC23C0")]
	public IndicatorLine()
	{
	}
}
[Token(Token = "0x200002D")]
public class QuaternionToEuler : MonoBehaviour
{
	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float x;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float y;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float z;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float w;

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xDC7E70", Offset = "0xDC7E70", VA = "0xDC7E70")]
	private void Start()
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xDC7E74", Offset = "0xDC7E74", VA = "0xDC7E74")]
	private void Update()
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0xDC7EDC", Offset = "0xDC7EDC", VA = "0xDC7EDC")]
	public QuaternionToEuler()
	{
	}
}
[Token(Token = "0x200002E")]
public class QuitApplication : MonoBehaviour
{
	[Token(Token = "0x600016E")]
	[Address(RVA = "0xDC7EE4", Offset = "0xDC7EE4", VA = "0xDC7EE4")]
	private void Start()
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xDC7EE8", Offset = "0xDC7EE8", VA = "0xDC7EE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xDC7EEC", Offset = "0xDC7EEC", VA = "0xDC7EEC")]
	public void ExitGame()
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xDC7EF4", Offset = "0xDC7EF4", VA = "0xDC7EF4")]
	public void BackToUpLayer()
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xDC7F00", Offset = "0xDC7F00", VA = "0xDC7F00")]
	public QuitApplication()
	{
	}
}
[Token(Token = "0x200002F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x925298", Offset = "0x925298")]
public class RingMeshDrawer : MonoBehaviour
{
	[Token(Token = "0x400012C")]
	private const string LOG_TAG = "RingMeshDrawer";

	[Token(Token = "0x400012D")]
	private const float DEF_RING_WIDTH = 0.01f;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float RingWidth;

	[Token(Token = "0x400012F")]
	private const float MIN_RING_WIDTH = 0.001f;

	[Token(Token = "0x4000130")]
	private const float DEF_INNER_CIRCLE_RADIUS = 0.02f;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float InnerCircleRadius;

	[Token(Token = "0x4000132")]
	private const float MIN_INNER_CIRCLE_RADIUS = 0.001f;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Vector3 RingPosition;

	[Token(Token = "0x4000134")]
	private const float DEF_RING_DISTANCE = 2f;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float RingDistance;

	[Token(Token = "0x4000136")]
	private const float MIN_RING_DISTANCE = 0.3f;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color Color;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color ProgressColor;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public int RingPercent;

	[Token(Token = "0x400013A")]
	private const float percentAngle = 3.6f;

	[Token(Token = "0x400013B")]
	private const string RING_MATERIAL = "RingUnlitTransparentMat";

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material ringMaterial;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material ringMaterialInstance;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private MeshRenderer meshRend;

	[Token(Token = "0x400013F")]
	private const int RENDER_QUEUE_MIN = 1000;

	[Token(Token = "0x4000140")]
	private const int RENDER_QUEUE_MAX = 5000;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private MeshFilter meshFilt;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Camera mCamera;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool mEnabled;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 ringPos;

	[Token(Token = "0x4000145")]
	private const int VERTEX_COUNT = 400;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3[] ringVert;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Color[] ringColor;

	[Token(Token = "0x4000148")]
	private const int TRIANGLE_COUNT = 600;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int[] ringTriangle;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector2[] ringUv;

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xDC8F58", Offset = "0xDC8F58", VA = "0xDC8F58")]
	private void DEBUG(string msg)
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0xDC9000", Offset = "0xDC9000", VA = "0xDC9000")]
	private bool ValidateParameters()
	{
		return default(bool);
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xDC9228", Offset = "0xDC9228", VA = "0xDC9228")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xDC9480", Offset = "0xDC9480", VA = "0xDC9480")]
	private void Update()
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xDC9DB0", Offset = "0xDC9DB0", VA = "0xDC9DB0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xDC9660", Offset = "0xDC9660", VA = "0xDC9660")]
	public void DrawRing(float radius, float innerRadius, int percent, Vector3 position)
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0xDC9E4C", Offset = "0xDC9E4C", VA = "0xDC9E4C")]
	public RingMeshDrawer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000030")]
public class BatteryPercentage
{
	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float minBatteryPercentage;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float maxBatteryPercentage;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture texture;

	[Token(Token = "0x600017A")]
	[Address(RVA = "0xB35C88", Offset = "0xB35C88", VA = "0xB35C88")]
	public BatteryPercentage()
	{
	}
}
[Token(Token = "0x2000031")]
public class UniversalControllerActions : MonoBehaviour
{
	[Token(Token = "0x2000421")]
	public enum AxisMapping
	{
		[Token(Token = "0x40018F1")]
		Y_Axis,
		[Token(Token = "0x40018F2")]
		Z_Axis
	}

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WVR_DeviceType device;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool useSystemConfig;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject TouchPad;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject Touch_Dot;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AxisMapping touch_YAxis_mapping;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject Touch_Press;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject Trigger_Press;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject VolumeUp_Press;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject VolumeDown_Press;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject Grip_Press;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject DigitalTrigger_Press;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject Menu_Press;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject Home_Press;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject Battery_Change;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<BatteryPercentage> batteryPercentages;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 originPosition;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private MeshRenderer batteryMeshRenderer;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Mesh toucheffectMesh;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Mesh touchpadMesh;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool isTouchPressed;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Color materialColor;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private bool currentIsLeftHandMode;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private int batteryLevels;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private int t;

	[Token(Token = "0x600017B")]
	[Address(RVA = "0xEDEAC8", Offset = "0xEDEAC8", VA = "0xEDEAC8")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xEDED7C", Offset = "0xEDED7C", VA = "0xEDED7C")]
	private Color StringToColor(string color_string)
	{
		return default(Color);
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xEDEEE8", Offset = "0xEDEEE8", VA = "0xEDEEE8")]
	private Texture2D GetTexture2D(string texture_path)
	{
		return null;
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xEDEF88", Offset = "0xEDEF88", VA = "0xEDEF88")]
	public void Circle(Texture2D tex, int cx, int cy, int r, Color col)
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xEDF1E0", Offset = "0xEDF1E0", VA = "0xEDF1E0")]
	private void ReadJsonValues()
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0xEE0748", Offset = "0xEE0748", VA = "0xEE0748")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0xEE0CE0", Offset = "0xEE0CE0", VA = "0xEE0CE0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0xEE0D8C", Offset = "0xEE0D8C", VA = "0xEE0D8C")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0xEE0E84", Offset = "0xEE0E84", VA = "0xEE0E84")]
	private void onBatteryStatusUpdate(params object[] args)
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0xEE0F5C", Offset = "0xEE0F5C", VA = "0xEE0F5C")]
	private bool updateBatteryInfo()
	{
		return default(bool);
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0xEE1670", Offset = "0xEE1670", VA = "0xEE1670")]
	private void Start()
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0xEE094C", Offset = "0xEE094C", VA = "0xEE094C")]
	private void resetButtonState()
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0xEE1948", Offset = "0xEE1948", VA = "0xEE1948")]
	private void Update()
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0xEE3888", Offset = "0xEE3888", VA = "0xEE3888")]
	public UniversalControllerActions()
	{
	}
}
[Token(Token = "0x2000032")]
public class WaveVR_Resource
{
	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static WaveVR_Resource mInstance;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string mPreferredLanguage;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string mCountry;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool useSystemLanguageFlag;

	[Token(Token = "0x1700001A")]
	public static WaveVR_Resource instance
	{
		[Token(Token = "0x600018A")]
		[Address(RVA = "0x1333470", Offset = "0x1333470", VA = "0x1333470")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x133358C", Offset = "0x133358C", VA = "0x133358C")]
	public string getString(string stringName)
	{
		return null;
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x1333820", Offset = "0x1333820", VA = "0x1333820")]
	public string getStringByLanguage(string stringName, string lang, string country)
	{
		return null;
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x1333B38", Offset = "0x1333B38", VA = "0x1333B38")]
	public string getSystemLanguage()
	{
		return null;
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x1333C8C", Offset = "0x1333C8C", VA = "0x1333C8C")]
	public string getSystemCountry()
	{
		return null;
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x1333DE0", Offset = "0x1333DE0", VA = "0x1333DE0")]
	public bool setPreferredLanguage(string lang, string country)
	{
		return default(bool);
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x1333E74", Offset = "0x1333E74", VA = "0x1333E74")]
	public void useSystemLanguage()
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x133352C", Offset = "0x133352C", VA = "0x133352C")]
	public WaveVR_Resource()
	{
	}
}
[Token(Token = "0x2000033")]
public class WVR_Android : Interop.WVR_Base
{
	[Token(Token = "0x2000422")]
	private class RequestCompleteHandler : AndroidJavaProxy
	{
		[Token(Token = "0x6002049")]
		[Address(RVA = "0xEEB460", Offset = "0xEEB460", VA = "0xEEB460")]
		internal RequestCompleteHandler()
		{
		}

		[Token(Token = "0x600204A")]
		[Address(RVA = "0xEEC230", Offset = "0xEEC230", VA = "0xEEC230")]
		public void onRequestCompletedwithObject(AndroidJavaObject resultObject)
		{
		}
	}

	[Token(Token = "0x2000423")]
	private class RequestUsbCompleteHandler : AndroidJavaProxy
	{
		[Token(Token = "0x600204B")]
		[Address(RVA = "0xEEB640", Offset = "0xEEB640", VA = "0xEEB640")]
		internal RequestUsbCompleteHandler()
		{
		}

		[Token(Token = "0x600204C")]
		[Address(RVA = "0xEEC4FC", Offset = "0xEEC4FC", VA = "0xEEC4FC")]
		public void onRequestCompletedwithObject(AndroidJavaObject resultObject)
		{
		}
	}

	[Token(Token = "0x2000424")]
	public class OEMConfigCallback : AndroidJavaProxy
	{
		[Token(Token = "0x600204D")]
		[Address(RVA = "0xEEC0EC", Offset = "0xEEC0EC", VA = "0xEEC0EC")]
		internal OEMConfigCallback()
		{
		}

		[Token(Token = "0x600204E")]
		[Address(RVA = "0xEEC180", Offset = "0xEEC180", VA = "0xEEC180")]
		public void onConfigChanged()
		{
		}
	}

	[Token(Token = "0x400016C")]
	private const string PERMISSION_MANAGER_CLASSNAME = "com.htc.vr.permission.client.PermissionManager";

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static WVR_RequestCompleteCallback mCallback;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static WVR_RequestUsbCompleteCallback mUsbCallback;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AndroidJavaObject permissionsManager;

	[Token(Token = "0x4000170")]
	private const string RESOURCE_WRAPPER_CLASSNAME = "com.htc.vr.unity.ResourceWrapper";

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AndroidJavaObject ResourceWrapper;

	[Token(Token = "0x4000172")]
	private const string OEM_CONFIG_CLASSNAME = "com.htc.vr.unity.WVRUnityVRActivity";

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static WVR_OnOEMConfigChanged OEMChangedCallback;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static AndroidJavaObject mOEMConfig;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static OEMConfigCallback mOEMCallback;

	[PreserveSig]
	[Token(Token = "0x6000193")]
	[Address(RVA = "0xEE39B8", Offset = "0xEE39B8", VA = "0xEE39B8")]
	public static extern bool WVR_PollEventQueue_Android(ref WVR_Event_t e);

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xEE3A60", Offset = "0xEE3A60", VA = "0xEE3A60", Slot = "4")]
	public override bool PollEventQueue(ref WVR_Event_t e)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000195")]
	[Address(RVA = "0xEE3AC4", Offset = "0xEE3AC4", VA = "0xEE3AC4")]
	public static extern int WVR_GetInputDeviceCapability_Android(WVR_DeviceType type, WVR_InputType inputType);

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xEE3B74", Offset = "0xEE3B74", VA = "0xEE3B74", Slot = "5")]
	public override int GetInputDeviceCapability(WVR_DeviceType type, WVR_InputType inputType)
	{
		return default(int);
	}

	[PreserveSig]
	[Token(Token = "0x6000197")]
	[Address(RVA = "0xEE3BE8", Offset = "0xEE3BE8", VA = "0xEE3BE8")]
	public static extern WVR_AnalogType WVR_GetInputDeviceAnalogType_Android(WVR_DeviceType type, WVR_InputId id);

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xEE3C98", Offset = "0xEE3C98", VA = "0xEE3C98", Slot = "6")]
	public override WVR_AnalogType GetInputDeviceAnalogType(WVR_DeviceType type, WVR_InputId id)
	{
		return default(WVR_AnalogType);
	}

	[PreserveSig]
	[Token(Token = "0x6000199")]
	[Address(RVA = "0xEE3D0C", Offset = "0xEE3D0C", VA = "0xEE3D0C")]
	public static extern bool WVR_GetInputDeviceState_Android(WVR_DeviceType type, uint inputMask, ref uint buttons, ref uint touches, [In][Out] WVR_AnalogState_t[] analogArray, uint analogArrayCount);

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xEE3DFC", Offset = "0xEE3DFC", VA = "0xEE3DFC", Slot = "7")]
	public override bool GetInputDeviceState(WVR_DeviceType type, uint inputMask, ref uint buttons, ref uint touches, [In][Out] WVR_AnalogState_t[] analogArray, uint analogArrayCount)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x600019B")]
	[Address(RVA = "0xEE3EA0", Offset = "0xEE3EA0", VA = "0xEE3EA0")]
	public static extern int WVR_GetInputTypeCount_Android(WVR_DeviceType type, WVR_InputType inputType);

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xEE3F50", Offset = "0xEE3F50", VA = "0xEE3F50", Slot = "8")]
	public override int GetInputTypeCount(WVR_DeviceType type, WVR_InputType inputType)
	{
		return default(int);
	}

	[PreserveSig]
	[Token(Token = "0x600019D")]
	[Address(RVA = "0xEE3FC4", Offset = "0xEE3FC4", VA = "0xEE3FC4")]
	public static extern bool WVR_GetInputButtonState_Android(WVR_DeviceType type, WVR_InputId id);

	[Token(Token = "0x600019E")]
	[Address(RVA = "0xEE407C", Offset = "0xEE407C", VA = "0xEE407C", Slot = "9")]
	public override bool GetInputButtonState(WVR_DeviceType type, WVR_InputId id)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x600019F")]
	[Address(RVA = "0xEE40F0", Offset = "0xEE40F0", VA = "0xEE40F0")]
	public static extern bool WVR_GetInputTouchState_Android(WVR_DeviceType type, WVR_InputId id);

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0xEE41A8", Offset = "0xEE41A8", VA = "0xEE41A8", Slot = "10")]
	public override bool GetInputTouchState(WVR_DeviceType type, WVR_InputId id)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60001A1")]
	[Address(RVA = "0xEE421C", Offset = "0xEE421C", VA = "0xEE421C")]
	public static extern WVR_Axis_t WVR_GetInputAnalogAxis_Android(WVR_DeviceType type, WVR_InputId id);

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0xEE42CC", Offset = "0xEE42CC", VA = "0xEE42CC", Slot = "11")]
	public override WVR_Axis_t GetInputAnalogAxis(WVR_DeviceType type, WVR_InputId id)
	{
		return default(WVR_Axis_t);
	}

	[PreserveSig]
	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xEE4340", Offset = "0xEE4340", VA = "0xEE4340")]
	public static extern void WVR_GetPoseState_Android(WVR_DeviceType type, WVR_PoseOriginModel originModel, uint predictedMilliSec, ref WVR_PoseState_t poseState);

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xEE4458", Offset = "0xEE4458", VA = "0xEE4458", Slot = "13")]
	public override void GetPoseState(WVR_DeviceType type, WVR_PoseOriginModel originModel, uint predictedMilliSec, ref WVR_PoseState_t poseState)
	{
	}

	[PreserveSig]
	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xEE44E4", Offset = "0xEE44E4", VA = "0xEE44E4")]
	public static extern void WVR_GetSyncPose_Android(WVR_PoseOriginModel originModel, [In][Out] WVR_DevicePosePair_t[] poseArray, uint pairArrayCount);

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xEE46A8", Offset = "0xEE46A8", VA = "0xEE46A8", Slot = "17")]
	public override void GetSyncPose(WVR_PoseOriginModel originModel, [In][Out] WVR_DevicePosePair_t[] poseArray, uint pairArrayCount)
	{
	}

	[PreserveSig]
	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xEE4724", Offset = "0xEE4724", VA = "0xEE4724")]
	public static extern bool WVR_IsDeviceConnected_Android(WVR_DeviceType type);

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xEE47CC", Offset = "0xEE47CC", VA = "0xEE47CC", Slot = "18")]
	public override bool IsDeviceConnected(WVR_DeviceType type)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xEE4830", Offset = "0xEE4830", VA = "0xEE4830")]
	public static extern void WVR_TriggerVibration_Android(WVR_DeviceType type, WVR_InputId id, uint durationMicroSec, uint frequency, WVR_Intensity intensity);

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xEE48FC", Offset = "0xEE48FC", VA = "0xEE48FC", Slot = "19")]
	public override void TriggerVibration(WVR_DeviceType type, WVR_InputId id, uint durationMicroSec, uint frequency, WVR_Intensity intensity)
	{
	}

	[PreserveSig]
	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xEE4990", Offset = "0xEE4990", VA = "0xEE4990")]
	public static extern void WVR_InAppRecenter_Android(WVR_RecenterType recenterType);

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xEE4A30", Offset = "0xEE4A30", VA = "0xEE4A30", Slot = "20")]
	public override void InAppRecenter(WVR_RecenterType recenterType)
	{
	}

	[PreserveSig]
	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xEE4A94", Offset = "0xEE4A94", VA = "0xEE4A94")]
	public static extern void WVR_SetNeckModelEnabled_Android(bool enabled);

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xEE4B34", Offset = "0xEE4B34", VA = "0xEE4B34", Slot = "21")]
	public override void SetNeckModelEnabled(bool enabled)
	{
	}

	[PreserveSig]
	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xEE4B98", Offset = "0xEE4B98", VA = "0xEE4B98")]
	public static extern void WVR_SetNeckModel_Android(WVR_SimulationType simulationType);

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xEE4C38", Offset = "0xEE4C38", VA = "0xEE4C38", Slot = "22")]
	public override void SetNeckModel(WVR_SimulationType simulationType)
	{
	}

	[PreserveSig]
	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xEE4C9C", Offset = "0xEE4C9C", VA = "0xEE4C9C")]
	public static extern void WVR_SetArmModel_Android(WVR_SimulationType simulationType);

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xEE4D3C", Offset = "0xEE4D3C", VA = "0xEE4D3C", Slot = "23")]
	public override void SetArmModel(WVR_SimulationType simulationType)
	{
	}

	[PreserveSig]
	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xEE4DA0", Offset = "0xEE4DA0", VA = "0xEE4DA0")]
	public static extern void WVR_SetArmSticky_Android(bool stickyArm);

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xEE4E40", Offset = "0xEE4E40", VA = "0xEE4E40", Slot = "24")]
	public override void SetArmSticky(bool stickyArm)
	{
	}

	[PreserveSig]
	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xEE4EA4", Offset = "0xEE4EA4", VA = "0xEE4EA4")]
	public static extern bool WVR_SetInputRequest_Android(WVR_DeviceType type, WVR_InputAttribute_t[] request, uint size);

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xEE4F6C", Offset = "0xEE4F6C", VA = "0xEE4F6C", Slot = "25")]
	public override bool SetInputRequest(WVR_DeviceType type, WVR_InputAttribute_t[] request, uint size)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xEE4FE8", Offset = "0xEE4FE8", VA = "0xEE4FE8")]
	public static extern bool WVR_GetInputMappingPair_Android(WVR_DeviceType type, WVR_InputId destination, ref WVR_InputMappingPair_t pair);

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xEE50A8", Offset = "0xEE50A8", VA = "0xEE50A8", Slot = "26")]
	public override bool GetInputMappingPair(WVR_DeviceType type, WVR_InputId destination, ref WVR_InputMappingPair_t pair)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xEE5124", Offset = "0xEE5124", VA = "0xEE5124")]
	public static extern uint WVR_GetInputMappingTable_Android(WVR_DeviceType type, [In][Out] WVR_InputMappingPair_t[] table, uint size);

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0xEE51E4", Offset = "0xEE51E4", VA = "0xEE51E4", Slot = "27")]
	public override uint GetInputMappingTable(WVR_DeviceType type, [In][Out] WVR_InputMappingPair_t[] table, uint size)
	{
		return default(uint);
	}

	[PreserveSig]
	[Token(Token = "0x60001BB")]
	[Address(RVA = "0xEE5260", Offset = "0xEE5260", VA = "0xEE5260")]
	public static extern WVR_Arena_t WVR_GetArena_Android();

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xEE52F4", Offset = "0xEE52F4", VA = "0xEE52F4", Slot = "28")]
	public override WVR_Arena_t GetArena()
	{
		return default(WVR_Arena_t);
	}

	[PreserveSig]
	[Token(Token = "0x60001BD")]
	[Address(RVA = "0xEE5358", Offset = "0xEE5358", VA = "0xEE5358")]
	public static extern bool WVR_SetArena_Android(ref WVR_Arena_t arena);

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xEE5400", Offset = "0xEE5400", VA = "0xEE5400", Slot = "29")]
	public override bool SetArena(ref WVR_Arena_t arena)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xEE5464", Offset = "0xEE5464", VA = "0xEE5464")]
	public static extern WVR_ArenaVisible WVR_GetArenaVisible_Android();

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xEE54F4", Offset = "0xEE54F4", VA = "0xEE54F4", Slot = "30")]
	public override WVR_ArenaVisible GetArenaVisible()
	{
		return default(WVR_ArenaVisible);
	}

	[PreserveSig]
	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xEE5550", Offset = "0xEE5550", VA = "0xEE5550")]
	public static extern void WVR_SetArenaVisible_Android(WVR_ArenaVisible config);

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xEE55F0", Offset = "0xEE55F0", VA = "0xEE55F0", Slot = "31")]
	public override void SetArenaVisible(WVR_ArenaVisible config)
	{
	}

	[PreserveSig]
	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xEE5654", Offset = "0xEE5654", VA = "0xEE5654")]
	public static extern bool WVR_IsOverArenaRange_Android();

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xEE56EC", Offset = "0xEE56EC", VA = "0xEE56EC", Slot = "32")]
	public override bool IsOverArenaRange()
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xEE5748", Offset = "0xEE5748", VA = "0xEE5748")]
	public static extern float WVR_GetDeviceBatteryPercentage_Android(WVR_DeviceType type);

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xEE57E8", Offset = "0xEE57E8", VA = "0xEE57E8", Slot = "33")]
	public override float GetDeviceBatteryPercentage(WVR_DeviceType type)
	{
		return default(float);
	}

	[PreserveSig]
	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xEE584C", Offset = "0xEE584C", VA = "0xEE584C")]
	public static extern WVR_BatteryStatus WVR_GetBatteryStatus_Android(WVR_DeviceType type);

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xEE58EC", Offset = "0xEE58EC", VA = "0xEE58EC", Slot = "34")]
	public override WVR_BatteryStatus GetBatteryStatus(WVR_DeviceType type)
	{
		return default(WVR_BatteryStatus);
	}

	[PreserveSig]
	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xEE5950", Offset = "0xEE5950", VA = "0xEE5950")]
	public static extern WVR_ChargeStatus WVR_GetChargeStatus_Android(WVR_DeviceType type);

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xEE59F0", Offset = "0xEE59F0", VA = "0xEE59F0", Slot = "35")]
	public override WVR_ChargeStatus GetChargeStatus(WVR_DeviceType type)
	{
		return default(WVR_ChargeStatus);
	}

	[PreserveSig]
	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xEE5A54", Offset = "0xEE5A54", VA = "0xEE5A54")]
	public static extern WVR_BatteryTemperatureStatus WVR_GetBatteryTemperatureStatus_Android(WVR_DeviceType type);

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xEE5AF4", Offset = "0xEE5AF4", VA = "0xEE5AF4", Slot = "36")]
	public override WVR_BatteryTemperatureStatus GetBatteryTemperatureStatus(WVR_DeviceType type)
	{
		return default(WVR_BatteryTemperatureStatus);
	}

	[PreserveSig]
	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xEE5B58", Offset = "0xEE5B58", VA = "0xEE5B58")]
	public static extern float WVR_GetBatteryTemperature_Android(WVR_DeviceType type);

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xEE5BF8", Offset = "0xEE5BF8", VA = "0xEE5BF8", Slot = "37")]
	public override float GetBatteryTemperature(WVR_DeviceType type)
	{
		return default(float);
	}

	[PreserveSig]
	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xEE5C5C", Offset = "0xEE5C5C", VA = "0xEE5C5C")]
	public static extern WVR_Result WVR_StartHandGesture();

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xEE5CEC", Offset = "0xEE5CEC", VA = "0xEE5CEC", Slot = "38")]
	public override WVR_Result StartHandGesture()
	{
		return default(WVR_Result);
	}

	[PreserveSig]
	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xEE5D48", Offset = "0xEE5D48", VA = "0xEE5D48")]
	public static extern void WVR_StopHandGesture();

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xEE5DD8", Offset = "0xEE5DD8", VA = "0xEE5DD8", Slot = "39")]
	public override void StopHandGesture()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xEE5E34", Offset = "0xEE5E34", VA = "0xEE5E34")]
	public static extern WVR_Result WVR_GetHandGestureData(ref WVR_HandGestureData_t data);

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xEE5ED4", Offset = "0xEE5ED4", VA = "0xEE5ED4", Slot = "40")]
	public override WVR_Result GetHandGestureData(ref WVR_HandGestureData_t data)
	{
		return default(WVR_Result);
	}

	[PreserveSig]
	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xEE5F38", Offset = "0xEE5F38", VA = "0xEE5F38")]
	public static extern WVR_Result WVR_StartHandTracking();

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xEE5FC8", Offset = "0xEE5FC8", VA = "0xEE5FC8", Slot = "41")]
	public override WVR_Result StartHandTracking()
	{
		return default(WVR_Result);
	}

	[PreserveSig]
	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xEE6024", Offset = "0xEE6024", VA = "0xEE6024")]
	public static extern void WVR_StopHandTracking();

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xEE60B4", Offset = "0xEE60B4", VA = "0xEE60B4", Slot = "42")]
	public override void StopHandTracking()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xEE6110", Offset = "0xEE6110", VA = "0xEE6110")]
	public static extern WVR_Result WVR_GetHandTrackingData(ref WVR_HandTrackingData_t data, WVR_PoseOriginModel originModel, uint predictedMilliSec);

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xEE6230", Offset = "0xEE6230", VA = "0xEE6230", Slot = "43")]
	public override WVR_Result GetHandTrackingData(ref WVR_HandTrackingData_t data, WVR_PoseOriginModel originModel, uint predictedMilliSec)
	{
		return default(WVR_Result);
	}

	[PreserveSig]
	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xEE62AC", Offset = "0xEE62AC", VA = "0xEE62AC")]
	public static extern ulong WVR_GetSupportedFeatures();

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0xEE633C", Offset = "0xEE633C", VA = "0xEE633C", Slot = "44")]
	public override ulong GetSupportedFeatures()
	{
		return default(ulong);
	}

	[PreserveSig]
	[Token(Token = "0x60001DD")]
	[Address(RVA = "0xEE6398", Offset = "0xEE6398", VA = "0xEE6398")]
	public static extern WVR_InitError WVR_Init_Android(WVR_AppType eType);

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xEE6438", Offset = "0xEE6438", VA = "0xEE6438", Slot = "45")]
	public override WVR_InitError Init(WVR_AppType eType)
	{
		return default(WVR_InitError);
	}

	[PreserveSig]
	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xEE649C", Offset = "0xEE649C", VA = "0xEE649C")]
	public static extern void WVR_Quit_Android();

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xEE652C", Offset = "0xEE652C", VA = "0xEE652C", Slot = "47")]
	public override void Quit()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xEE6588", Offset = "0xEE6588", VA = "0xEE6588")]
	public static extern IntPtr WVR_GetInitErrorString_Android(WVR_InitError error);

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xEE6628", Offset = "0xEE6628", VA = "0xEE6628", Slot = "48")]
	public override IntPtr GetInitErrorString(WVR_InitError error)
	{
		return default(IntPtr);
	}

	[PreserveSig]
	[Token(Token = "0x60001E3")]
	[Address(RVA = "0xEE668C", Offset = "0xEE668C", VA = "0xEE668C")]
	public static extern uint WVR_GetWaveRuntimeVersion_Android();

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0xEE671C", Offset = "0xEE671C", VA = "0xEE671C", Slot = "49")]
	public override uint GetWaveRuntimeVersion()
	{
		return default(uint);
	}

	[PreserveSig]
	[Token(Token = "0x60001E5")]
	[Address(RVA = "0xEE6778", Offset = "0xEE6778", VA = "0xEE6778")]
	public static extern uint WVR_GetWaveSDKVersion_Android();

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0xEE6808", Offset = "0xEE6808", VA = "0xEE6808", Slot = "50")]
	public override uint GetWaveSDKVersion()
	{
		return default(uint);
	}

	[PreserveSig]
	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xEE6864", Offset = "0xEE6864", VA = "0xEE6864")]
	public static extern bool WVR_IsInputFocusCapturedBySystem_Android();

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0xEE68FC", Offset = "0xEE68FC", VA = "0xEE68FC", Slot = "51")]
	public override bool IsInputFocusCapturedBySystem()
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60001E9")]
	[Address(RVA = "0xEE6958", Offset = "0xEE6958", VA = "0xEE6958")]
	internal static extern WVR_RenderError WVR_RenderInit_Android(ref WVR_RenderInitParams_t param);

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0xEE69F8", Offset = "0xEE69F8", VA = "0xEE69F8", Slot = "52")]
	internal override WVR_RenderError RenderInit(ref WVR_RenderInitParams_t param)
	{
		return default(WVR_RenderError);
	}

	[PreserveSig]
	[Token(Token = "0x60001EB")]
	[Address(RVA = "0xEE6A5C", Offset = "0xEE6A5C", VA = "0xEE6A5C")]
	internal static extern bool WVR_SetPerformanceLevels_Android(WVR_PerfLevel cpuLevel, WVR_PerfLevel gpuLevel);

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0xEE6B14", Offset = "0xEE6B14", VA = "0xEE6B14", Slot = "53")]
	internal override bool SetPerformanceLevels(WVR_PerfLevel cpuLevel, WVR_PerfLevel gpuLevel)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60001ED")]
	[Address(RVA = "0xEE6B88", Offset = "0xEE6B88", VA = "0xEE6B88")]
	internal static extern bool WVR_EnableAdaptiveQuality_Android(bool enable, uint flags);

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xEE6C40", Offset = "0xEE6C40", VA = "0xEE6C40", Slot = "54")]
	internal override bool EnableAdaptiveQuality(bool enable, uint flags)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xEE6CB4", Offset = "0xEE6CB4", VA = "0xEE6CB4")]
	internal static extern bool WVR_IsAdaptiveQualityEnabled_Android();

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xEE6D4C", Offset = "0xEE6D4C", VA = "0xEE6D4C", Slot = "55")]
	internal override bool IsAdaptiveQualityEnabled()
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xEE6DA8", Offset = "0xEE6DA8", VA = "0xEE6DA8")]
	public static extern bool WVR_StartCamera_Android(ref WVR_CameraInfo_t info);

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xEE6E50", Offset = "0xEE6E50", VA = "0xEE6E50", Slot = "56")]
	public override bool StartCamera(ref WVR_CameraInfo_t info)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xEE6EB4", Offset = "0xEE6EB4", VA = "0xEE6EB4")]
	public static extern void WVR_StopCamera_Android();

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xEE6F44", Offset = "0xEE6F44", VA = "0xEE6F44", Slot = "57")]
	public override void StopCamera()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xEE6FA0", Offset = "0xEE6FA0", VA = "0xEE6FA0")]
	public static extern bool WVR_UpdateTexture_Android(uint textureid);

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xEE7048", Offset = "0xEE7048", VA = "0xEE7048", Slot = "58")]
	public override bool UpdateTexture(IntPtr textureid)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xEE70C0", Offset = "0xEE70C0", VA = "0xEE70C0")]
	public static extern bool WVR_GetCameraIntrinsic_Android(WVR_CameraPosition position, ref WVR_CameraIntrinsic_t intrinsic);

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0xEE7178", Offset = "0xEE7178", VA = "0xEE7178", Slot = "59")]
	public override bool GetCameraIntrinsic(WVR_CameraPosition position, ref WVR_CameraIntrinsic_t intrinsic)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xEE71EC", Offset = "0xEE71EC", VA = "0xEE71EC")]
	public static extern bool WVR_GetCameraFrameBuffer_Android(IntPtr pFramebuffer, uint frameBufferSize);

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xEE72A4", Offset = "0xEE72A4", VA = "0xEE72A4", Slot = "60")]
	public override bool GetCameraFrameBuffer(IntPtr pFramebuffer, uint frameBufferSize)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xEE7318", Offset = "0xEE7318", VA = "0xEE7318")]
	public static extern bool GetFrameBufferWithPoseState_Android(IntPtr pFramebuffer, uint frameBufferSize, WVR_PoseOriginModel origin, uint predictInMs, ref WVR_PoseState_t poseState);

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xEE744C", Offset = "0xEE744C", VA = "0xEE744C", Slot = "61")]
	public override bool GetFrameBufferWithPoseState(IntPtr pFramebuffer, uint frameBufferSize, WVR_PoseOriginModel origin, uint predictInMs, ref WVR_PoseState_t poseState)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xEE74E0", Offset = "0xEE74E0", VA = "0xEE74E0")]
	public static extern void ReleaseCameraTexture_Android();

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xEE756C", Offset = "0xEE756C", VA = "0xEE756C", Slot = "63")]
	public override void ReleaseCameraTexture()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xEE75C8", Offset = "0xEE75C8", VA = "0xEE75C8")]
	public static extern bool DrawTextureWithBuffer_Android(uint textureId, WVR_CameraImageFormat imgFormat, IntPtr frameBuffer, uint size, uint width, uint height);

	[Token(Token = "0x6000200")]
	[Address(RVA = "0xEE76B0", Offset = "0xEE76B0", VA = "0xEE76B0", Slot = "62")]
	public override bool DrawTextureWithBuffer(IntPtr textureId, WVR_CameraImageFormat imgFormat, IntPtr frameBuffer, uint size, uint width, uint height)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000201")]
	[Address(RVA = "0xEE7768", Offset = "0xEE7768", VA = "0xEE7768")]
	public static extern bool WVR_IsDeviceSuspend_Android(WVR_DeviceType type);

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xEE7810", Offset = "0xEE7810", VA = "0xEE7810", Slot = "64")]
	public override bool IsDeviceSuspend(WVR_DeviceType type)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000203")]
	[Address(RVA = "0xEE7874", Offset = "0xEE7874", VA = "0xEE7874")]
	public static extern void WVR_ConvertMatrixQuaternion_Android(ref WVR_Matrix4f_t mat, ref WVR_Quatf_t quat, bool m2q);

	[Token(Token = "0x6000204")]
	[Address(RVA = "0xEE792C", Offset = "0xEE792C", VA = "0xEE792C", Slot = "65")]
	public override void ConvertMatrixQuaternion(ref WVR_Matrix4f_t mat, ref WVR_Quatf_t quat, bool m2q)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000205")]
	[Address(RVA = "0xEE79A8", Offset = "0xEE79A8", VA = "0xEE79A8")]
	public static extern WVR_NumDoF WVR_GetDegreeOfFreedom_Android(WVR_DeviceType type);

	[Token(Token = "0x6000206")]
	[Address(RVA = "0xEE7A48", Offset = "0xEE7A48", VA = "0xEE7A48", Slot = "66")]
	public override WVR_NumDoF GetDegreeOfFreedom(WVR_DeviceType type)
	{
		return default(WVR_NumDoF);
	}

	[PreserveSig]
	[Token(Token = "0x6000207")]
	[Address(RVA = "0xEE7AAC", Offset = "0xEE7AAC", VA = "0xEE7AAC")]
	public static extern void WVR_SetParameters_Android(WVR_DeviceType type, IntPtr pchValue);

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xEE7B5C", Offset = "0xEE7B5C", VA = "0xEE7B5C", Slot = "67")]
	public override void SetParameters(WVR_DeviceType type, IntPtr pchValue)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000209")]
	[Address(RVA = "0xEE7BD0", Offset = "0xEE7BD0", VA = "0xEE7BD0")]
	public static extern uint WVR_GetParameters_Android(WVR_DeviceType type, IntPtr pchValue, IntPtr retValue, uint unBufferSize);

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xEE7C98", Offset = "0xEE7C98", VA = "0xEE7C98", Slot = "68")]
	public override uint GetParameters(WVR_DeviceType type, IntPtr pchValue, IntPtr retValue, uint unBufferSize)
	{
		return default(uint);
	}

	[PreserveSig]
	[Token(Token = "0x600020B")]
	[Address(RVA = "0xEE7D24", Offset = "0xEE7D24", VA = "0xEE7D24")]
	public static extern WVR_DeviceType WVR_GetDefaultControllerRole_Android();

	[Token(Token = "0x600020C")]
	[Address(RVA = "0xEE7DB4", Offset = "0xEE7DB4", VA = "0xEE7DB4", Slot = "69")]
	public override WVR_DeviceType GetDefaultControllerRole()
	{
		return default(WVR_DeviceType);
	}

	[PreserveSig]
	[Token(Token = "0x600020D")]
	[Address(RVA = "0xEE7E10", Offset = "0xEE7E10", VA = "0xEE7E10")]
	public static extern bool WVR_SetInteractionMode_Android(WVR_InteractionMode mode);

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xEE7EB8", Offset = "0xEE7EB8", VA = "0xEE7EB8", Slot = "70")]
	public override bool SetInteractionMode(WVR_InteractionMode mode)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x600020F")]
	[Address(RVA = "0xEE7F1C", Offset = "0xEE7F1C", VA = "0xEE7F1C")]
	public static extern WVR_InteractionMode WVR_GetInteractionMode_Android();

	[Token(Token = "0x6000210")]
	[Address(RVA = "0xEE7FAC", Offset = "0xEE7FAC", VA = "0xEE7FAC", Slot = "71")]
	public override WVR_InteractionMode GetInteractionMode()
	{
		return default(WVR_InteractionMode);
	}

	[PreserveSig]
	[Token(Token = "0x6000211")]
	[Address(RVA = "0xEE8008", Offset = "0xEE8008", VA = "0xEE8008")]
	public static extern bool WVR_SetGazeTriggerType_Android(WVR_GazeTriggerType type);

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xEE80B0", Offset = "0xEE80B0", VA = "0xEE80B0", Slot = "72")]
	public override bool SetGazeTriggerType(WVR_GazeTriggerType type)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000213")]
	[Address(RVA = "0xEE8114", Offset = "0xEE8114", VA = "0xEE8114")]
	public static extern WVR_GazeTriggerType WVR_GetGazeTriggerType_Android();

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xEE81A4", Offset = "0xEE81A4", VA = "0xEE81A4", Slot = "73")]
	public override WVR_GazeTriggerType GetGazeTriggerType()
	{
		return default(WVR_GazeTriggerType);
	}

	[PreserveSig]
	[Token(Token = "0x6000215")]
	[Address(RVA = "0xEE8200", Offset = "0xEE8200", VA = "0xEE8200")]
	public static extern bool WVR_GetDeviceErrorState_Android(WVR_DeviceType dev_type, WVR_DeviceErrorState error_state);

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xEE82B8", Offset = "0xEE82B8", VA = "0xEE82B8", Slot = "74")]
	public override bool GetDeviceErrorState(WVR_DeviceType dev_type, WVR_DeviceErrorState error_state)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000217")]
	[Address(RVA = "0xEE832C", Offset = "0xEE832C", VA = "0xEE832C")]
	public static extern void WVR_GetRenderTargetSize_Android(ref uint width, ref uint height);

	[Token(Token = "0x6000218")]
	[Address(RVA = "0xEE83DC", Offset = "0xEE83DC", VA = "0xEE83DC", Slot = "75")]
	public override void GetRenderTargetSize(ref uint width, ref uint height)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000219")]
	[Address(RVA = "0xEE8450", Offset = "0xEE8450", VA = "0xEE8450")]
	public static extern WVR_Matrix4f_t WVR_GetProjection_Android(WVR_Eye eye, float near, float far);

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xEE8518", Offset = "0xEE8518", VA = "0xEE8518", Slot = "76")]
	public override WVR_Matrix4f_t GetProjection(WVR_Eye eye, float near, float far)
	{
		return default(WVR_Matrix4f_t);
	}

	[PreserveSig]
	[Token(Token = "0x600021B")]
	[Address(RVA = "0xEE85A4", Offset = "0xEE85A4", VA = "0xEE85A4")]
	public static extern void WVR_GetClippingPlaneBoundary_Android(WVR_Eye eye, ref float left, ref float right, ref float top, ref float bottom);

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xEE8674", Offset = "0xEE8674", VA = "0xEE8674", Slot = "77")]
	public override void GetClippingPlaneBoundary(WVR_Eye eye, ref float left, ref float right, ref float top, ref float bottom)
	{
	}

	[PreserveSig]
	[Token(Token = "0x600021D")]
	[Address(RVA = "0xEE8708", Offset = "0xEE8708", VA = "0xEE8708")]
	public static extern void WVR_SetOverfillRatio_Android(float ratioX, float ratioY);

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xEE87B4", Offset = "0xEE87B4", VA = "0xEE87B4", Slot = "78")]
	public override void SetOverfillRatio(float ratioX, float ratioY)
	{
	}

	[PreserveSig]
	[Token(Token = "0x600021F")]
	[Address(RVA = "0xEE8828", Offset = "0xEE8828", VA = "0xEE8828")]
	public static extern WVR_Matrix4f_t WVR_GetTransformFromEyeToHead_Android(WVR_Eye eye, WVR_NumDoF dof);

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xEE88E0", Offset = "0xEE88E0", VA = "0xEE88E0", Slot = "79")]
	public override WVR_Matrix4f_t GetTransformFromEyeToHead(WVR_Eye eye, WVR_NumDoF dof)
	{
		return default(WVR_Matrix4f_t);
	}

	[PreserveSig]
	[Token(Token = "0x6000221")]
	[Address(RVA = "0xEE895C", Offset = "0xEE895C", VA = "0xEE895C")]
	public static extern WVR_SubmitError WVR_SubmitFrame_Android(WVR_Eye eye, [In][Out] WVR_TextureParams_t[] param, [In][Out] WVR_PoseState_t[] pose, WVR_SubmitExtend extendMethod);

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xEE8B44", Offset = "0xEE8B44", VA = "0xEE8B44", Slot = "80")]
	public override WVR_SubmitError SubmitFrame(WVR_Eye eye, [In][Out] WVR_TextureParams_t[] param, [In][Out] WVR_PoseState_t[] pose, WVR_SubmitExtend extendMethod)
	{
		return default(WVR_SubmitError);
	}

	[PreserveSig]
	[Token(Token = "0x6000223")]
	[Address(RVA = "0xEE8BD0", Offset = "0xEE8BD0", VA = "0xEE8BD0")]
	public static extern void WVR_PreRenderEye_Android(WVR_Eye eye, [In][Out] WVR_TextureParams_t[] param, [In][Out] WVR_RenderFoveationParams[] foveationParams);

	[Token(Token = "0x6000224")]
	[Address(RVA = "0xEE8C98", Offset = "0xEE8C98", VA = "0xEE8C98", Slot = "82")]
	public override void PreRenderEye(WVR_Eye eye, [In][Out] WVR_TextureParams_t[] param, [In][Out] WVR_RenderFoveationParams[] foveationParams)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000225")]
	[Address(RVA = "0xEE8D14", Offset = "0xEE8D14", VA = "0xEE8D14")]
	public static extern bool WVR_RequestScreenshot_Android(uint width, uint height, WVR_ScreenshotMode mode, IntPtr filename);

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xEE8DE4", Offset = "0xEE8DE4", VA = "0xEE8DE4", Slot = "83")]
	public override bool RequestScreenshot(uint width, uint height, WVR_ScreenshotMode mode, IntPtr filename)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000227")]
	[Address(RVA = "0xEE8E70", Offset = "0xEE8E70", VA = "0xEE8E70")]
	public static extern void WVR_RenderMask_Android(WVR_Eye eye);

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xEE8F10", Offset = "0xEE8F10", VA = "0xEE8F10", Slot = "84")]
	public override void RenderMask(WVR_Eye eye)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000229")]
	[Address(RVA = "0xEE8F74", Offset = "0xEE8F74", VA = "0xEE8F74")]
	public static extern bool WVR_GetRenderProps_Android(ref WVR_RenderProps_t props);

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xEE9060", Offset = "0xEE9060", VA = "0xEE9060", Slot = "85")]
	public override bool GetRenderProps(ref WVR_RenderProps_t props)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x600022B")]
	[Address(RVA = "0xEE90C4", Offset = "0xEE90C4", VA = "0xEE90C4")]
	public static extern IntPtr WVR_ObtainTextureQueue_Android(WVR_TextureTarget target, WVR_TextureFormat format, WVR_TextureType type, uint width, uint height, int level);

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xEE91A4", Offset = "0xEE91A4", VA = "0xEE91A4", Slot = "86")]
	public override IntPtr ObtainTextureQueue(WVR_TextureTarget target, WVR_TextureFormat format, WVR_TextureType type, uint width, uint height, int level)
	{
		return default(IntPtr);
	}

	[PreserveSig]
	[Token(Token = "0x600022D")]
	[Address(RVA = "0xEE9248", Offset = "0xEE9248", VA = "0xEE9248")]
	public static extern uint WVR_GetTextureQueueLength_Android(IntPtr handle);

	[Token(Token = "0x600022E")]
	[Address(RVA = "0xEE92E8", Offset = "0xEE92E8", VA = "0xEE92E8", Slot = "87")]
	public override uint GetTextureQueueLength(IntPtr handle)
	{
		return default(uint);
	}

	[PreserveSig]
	[Token(Token = "0x600022F")]
	[Address(RVA = "0xEE934C", Offset = "0xEE934C", VA = "0xEE934C")]
	public static extern WVR_TextureParams_t WVR_GetTexture_Android(IntPtr handle, int index);

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xEE9404", Offset = "0xEE9404", VA = "0xEE9404", Slot = "88")]
	public override WVR_TextureParams_t GetTexture(IntPtr handle, int index)
	{
		return default(WVR_TextureParams_t);
	}

	[PreserveSig]
	[Token(Token = "0x6000231")]
	[Address(RVA = "0xEE9480", Offset = "0xEE9480", VA = "0xEE9480")]
	public static extern int WVR_GetAvailableTextureIndex_Android(IntPtr handle);

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xEE9520", Offset = "0xEE9520", VA = "0xEE9520", Slot = "89")]
	public override int GetAvailableTextureIndex(IntPtr handle)
	{
		return default(int);
	}

	[PreserveSig]
	[Token(Token = "0x6000233")]
	[Address(RVA = "0xEE9584", Offset = "0xEE9584", VA = "0xEE9584")]
	public static extern void WVR_ReleaseTextureQueue_Android(IntPtr handle);

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xEE9624", Offset = "0xEE9624", VA = "0xEE9624", Slot = "90")]
	public override void ReleaseTextureQueue(IntPtr handle)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000235")]
	[Address(RVA = "0xEE9688", Offset = "0xEE9688", VA = "0xEE9688")]
	public static extern bool WVR_IsRenderFoveationSupport_Android();

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xEE9720", Offset = "0xEE9720", VA = "0xEE9720", Slot = "91")]
	public override bool IsRenderFoveationSupport()
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000237")]
	[Address(RVA = "0xEE977C", Offset = "0xEE977C", VA = "0xEE977C")]
	public static extern void WVR_RenderFoveation_Android(bool enable);

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xEE981C", Offset = "0xEE981C", VA = "0xEE981C", Slot = "92")]
	public override void RenderFoveation(bool enable)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000239")]
	[Address(RVA = "0xEE9880", Offset = "0xEE9880", VA = "0xEE9880")]
	public static extern void WVR_SetPosePredictEnabled_Android(WVR_DeviceType type, bool enabled_position_predict, bool enable_rotation_predict);

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xEE9938", Offset = "0xEE9938", VA = "0xEE9938", Slot = "93")]
	public override void SetPosePredictEnabled(WVR_DeviceType type, bool enabled_position_predict, bool enable_rotation_predict)
	{
	}

	[PreserveSig]
	[Token(Token = "0x600023B")]
	[Address(RVA = "0xEE99B4", Offset = "0xEE99B4", VA = "0xEE99B4")]
	public static extern bool WVR_ShowPassthroughOverlay_Android(bool show);

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xEE9A5C", Offset = "0xEE9A5C", VA = "0xEE9A5C", Slot = "94")]
	public override bool ShowPassthroughOverlay(bool show)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x600023D")]
	[Address(RVA = "0xEE9AC0", Offset = "0xEE9AC0", VA = "0xEE9AC0")]
	public static extern void WVR_EnableAutoPassthrough_Android(bool enable);

	[Token(Token = "0x600023E")]
	[Address(RVA = "0xEE9B60", Offset = "0xEE9B60", VA = "0xEE9B60", Slot = "95")]
	public override void EnableAutoPassthrough(bool enable)
	{
	}

	[PreserveSig]
	[Token(Token = "0x600023F")]
	[Address(RVA = "0xEE9BC4", Offset = "0xEE9BC4", VA = "0xEE9BC4")]
	public static extern bool WVR_IsPassthroughOverlayVisible_Android();

	[Token(Token = "0x6000240")]
	[Address(RVA = "0xEE9C5C", Offset = "0xEE9C5C", VA = "0xEE9C5C", Slot = "96")]
	public override bool IsPassthroughOverlayVisible()
	{
		return default(bool);
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0xEE9CB8", Offset = "0xEE9CB8", VA = "0xEE9CB8", Slot = "97")]
	public override string DeployRenderModelAssets(int deviceIndex, string renderModelName)
	{
		return null;
	}

	[PreserveSig]
	[Token(Token = "0x6000242")]
	[Address(RVA = "0xEE9FA4", Offset = "0xEE9FA4", VA = "0xEE9FA4")]
	public static extern void WVR_SetFocusedController_Android(WVR_DeviceType focusController);

	[Token(Token = "0x6000243")]
	[Address(RVA = "0xEEA044", Offset = "0xEEA044", VA = "0xEEA044", Slot = "98")]
	public override void SetFocusedController(WVR_DeviceType focusController)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000244")]
	[Address(RVA = "0xEEA0A8", Offset = "0xEEA0A8", VA = "0xEEA0A8")]
	public static extern WVR_DeviceType WVR_GetFocusedController_Android();

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xEEA138", Offset = "0xEEA138", VA = "0xEEA138", Slot = "99")]
	public override WVR_DeviceType GetFocusedController()
	{
		return default(WVR_DeviceType);
	}

	[PreserveSig]
	[Token(Token = "0x6000246")]
	[Address(RVA = "0xEEA194", Offset = "0xEEA194", VA = "0xEEA194")]
	public static extern bool WVR_OpenMesh_Android(string filename, ref uint sessiionid, IntPtr errorCode, bool merge);

	[Token(Token = "0x6000247")]
	[Address(RVA = "0xEEA278", Offset = "0xEEA278", VA = "0xEEA278", Slot = "100")]
	public override bool OpenMesh(string filename, ref uint sessionid, IntPtr errorCode, bool merge)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000248")]
	[Address(RVA = "0xEEA304", Offset = "0xEEA304", VA = "0xEEA304")]
	public static extern bool WVR_getSectionCount_Android(uint sessionid, ref uint sectionCount);

	[Token(Token = "0x6000249")]
	[Address(RVA = "0xEEA3BC", Offset = "0xEEA3BC", VA = "0xEEA3BC", Slot = "101")]
	public override bool GetSectionCount(uint sessionid, ref uint sectionCount)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x600024A")]
	[Address(RVA = "0xEEA430", Offset = "0xEEA430", VA = "0xEEA430")]
	public static extern bool WVR_getMeshData_Android(uint sessionid, [In][Out] FBXInfo_t[] infoArray);

	[Token(Token = "0x600024B")]
	[Address(RVA = "0xEEA4F0", Offset = "0xEEA4F0", VA = "0xEEA4F0", Slot = "102")]
	public override bool GetMeshData(uint sessionid, [In][Out] FBXInfo_t[] infoArray)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x600024C")]
	[Address(RVA = "0xEEA564", Offset = "0xEEA564", VA = "0xEEA564")]
	public static extern bool WVR_getSectionData_Android(uint sessionid, uint sectionIndiceIndex, [In][Out] Vector3[] vecticeArray, [In][Out] Vector3[] normalArray, [In][Out] Vector2[] uvArray, [In][Out] int[] indiceArray, ref bool active);

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xEEA68C", Offset = "0xEEA68C", VA = "0xEEA68C", Slot = "103")]
	public override bool GetSectionData(uint sessionid, uint sectionIndiceIndex, [In][Out] Vector3[] vecticeArray, [In][Out] Vector3[] normalArray, [In][Out] Vector2[] uvArray, [In][Out] int[] indiceArray, ref bool active)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x600024E")]
	[Address(RVA = "0xEEA738", Offset = "0xEEA738", VA = "0xEEA738")]
	public static extern void WVR_releaseMesh_Android(uint sessionid);

	[Token(Token = "0x600024F")]
	[Address(RVA = "0xEEA7D8", Offset = "0xEEA7D8", VA = "0xEEA7D8", Slot = "104")]
	public override void ReleaseMesh(uint sessionid)
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xEEA83C", Offset = "0xEEA83C", VA = "0xEEA83C")]
	private AndroidJavaObject javaArrayFromCS(string[] values)
	{
		return null;
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0xEEAC20", Offset = "0xEEAC20", VA = "0xEEAC20", Slot = "105")]
	public override bool IsPermissionInitialed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0xEEAD1C", Offset = "0xEEAD1C", VA = "0xEEAD1C", Slot = "106")]
	public override bool ShowDialogOnScene()
	{
		return default(bool);
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xEEADC8", Offset = "0xEEADC8", VA = "0xEEADC8", Slot = "107")]
	public override bool IsPermissionGranted(string permission)
	{
		return default(bool);
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xEEAED4", Offset = "0xEEAED4", VA = "0xEEAED4", Slot = "108")]
	public override bool ShouldGrantPermission(string permission)
	{
		return default(bool);
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0xEEAFE0", Offset = "0xEEAFE0", VA = "0xEEAFE0", Slot = "109")]
	public override void RequestPermissions(string[] permissions, WVR_RequestCompleteCallback cb)
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xEEB4F4", Offset = "0xEEB4F4", VA = "0xEEB4F4", Slot = "110")]
	public override void RequestUsbPermission(WVR_RequestUsbCompleteCallback cb)
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0xEEB6D4", Offset = "0xEEB6D4", VA = "0xEEB6D4")]
	private bool initializeResourceObject()
	{
		return default(bool);
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0xEEB790", Offset = "0xEEB790", VA = "0xEEB790", Slot = "111")]
	public override string GetStringBySystemLanguage(string stringName)
	{
		return null;
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xEEB894", Offset = "0xEEB894", VA = "0xEEB894", Slot = "112")]
	public override string GetStringByLanguage(string stringName, string lang, string country)
	{
		return null;
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xEEBA38", Offset = "0xEEBA38", VA = "0xEEBA38", Slot = "113")]
	public override string GetSystemLanguage()
	{
		return null;
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xEEBAE0", Offset = "0xEEBAE0", VA = "0xEEBAE0", Slot = "114")]
	public override string GetSystemCountry()
	{
		return null;
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0xEEBB88", Offset = "0xEEBB88", VA = "0xEEBB88")]
	private static void initAJC()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0xEEBD34", Offset = "0xEEBD34", VA = "0xEEBD34", Slot = "115")]
	public override string GetOEMConfigByKey(string key)
	{
		return null;
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0xEEBF88", Offset = "0xEEBF88", VA = "0xEEBF88", Slot = "116")]
	public override void SetOEMConfigChangedCallback(WVR_OnOEMConfigChanged cb)
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xEEBFF4", Offset = "0xEEBFF4", VA = "0xEEBFF4")]
	public WVR_Android()
	{
	}
}
[Token(Token = "0x2000034")]
public class WVR_HVR : Interop.WVR_Base
{
	[PreserveSig]
	[Token(Token = "0x6000261")]
	[Address(RVA = "0xEEC5B8", Offset = "0xEEC5B8", VA = "0xEEC5B8")]
	public static extern bool WVR_PollEventQueue_HVR(ref WVR_Event_t e);

	[Token(Token = "0x6000262")]
	[Address(RVA = "0xEEC65C", Offset = "0xEEC65C", VA = "0xEEC65C", Slot = "4")]
	public override bool PollEventQueue(ref WVR_Event_t e)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000263")]
	[Address(RVA = "0xEEC664", Offset = "0xEEC664", VA = "0xEEC664")]
	public static extern int WVR_GetInputDeviceCapability_HVR(WVR_DeviceType type, WVR_InputType inputType);

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xEEC710", Offset = "0xEEC710", VA = "0xEEC710", Slot = "5")]
	public override int GetInputDeviceCapability(WVR_DeviceType type, WVR_InputType inputType)
	{
		return default(int);
	}

	[PreserveSig]
	[Token(Token = "0x6000265")]
	[Address(RVA = "0xEEC71C", Offset = "0xEEC71C", VA = "0xEEC71C")]
	public static extern WVR_AnalogType WVR_GetInputDeviceAnalogType_HVR(WVR_DeviceType type, WVR_InputId id);

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xEEC7C8", Offset = "0xEEC7C8", VA = "0xEEC7C8", Slot = "6")]
	public override WVR_AnalogType GetInputDeviceAnalogType(WVR_DeviceType type, WVR_InputId id)
	{
		return default(WVR_AnalogType);
	}

	[PreserveSig]
	[Token(Token = "0x6000267")]
	[Address(RVA = "0xEEC7D4", Offset = "0xEEC7D4", VA = "0xEEC7D4")]
	public static extern bool WVR_GetInputDeviceState_HVR(WVR_DeviceType type, uint inputMask, ref uint buttons, ref uint touches, [In][Out] WVR_AnalogState_t[] analogArray, uint analogArrayCount);

	[Token(Token = "0x6000268")]
	[Address(RVA = "0xEEC8C4", Offset = "0xEEC8C4", VA = "0xEEC8C4", Slot = "7")]
	public override bool GetInputDeviceState(WVR_DeviceType type, uint inputMask, ref uint buttons, ref uint touches, [In][Out] WVR_AnalogState_t[] analogArray, uint analogArrayCount)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000269")]
	[Address(RVA = "0xEEC8E0", Offset = "0xEEC8E0", VA = "0xEEC8E0")]
	public static extern int WVR_GetInputTypeCount_HVR(WVR_DeviceType type, WVR_InputType inputType);

	[Token(Token = "0x600026A")]
	[Address(RVA = "0xEEC98C", Offset = "0xEEC98C", VA = "0xEEC98C", Slot = "8")]
	public override int GetInputTypeCount(WVR_DeviceType type, WVR_InputType inputType)
	{
		return default(int);
	}

	[PreserveSig]
	[Token(Token = "0x600026B")]
	[Address(RVA = "0xEEC998", Offset = "0xEEC998", VA = "0xEEC998")]
	public static extern bool WVR_GetInputButtonState_HVR(WVR_DeviceType type, WVR_InputId id);

	[Token(Token = "0x600026C")]
	[Address(RVA = "0xEECA4C", Offset = "0xEECA4C", VA = "0xEECA4C", Slot = "9")]
	public override bool GetInputButtonState(WVR_DeviceType type, WVR_InputId id)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x600026D")]
	[Address(RVA = "0xEECA58", Offset = "0xEECA58", VA = "0xEECA58")]
	public static extern bool WVR_GetInputTouchState_HVR(WVR_DeviceType type, WVR_InputId id);

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xEECB0C", Offset = "0xEECB0C", VA = "0xEECB0C", Slot = "10")]
	public override bool GetInputTouchState(WVR_DeviceType type, WVR_InputId id)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x600026F")]
	[Address(RVA = "0xEECB18", Offset = "0xEECB18", VA = "0xEECB18")]
	public static extern WVR_Axis_t WVR_GetInputAnalogAxis_HVR(WVR_DeviceType type, WVR_InputId id);

	[Token(Token = "0x6000270")]
	[Address(RVA = "0xEECBC4", Offset = "0xEECBC4", VA = "0xEECBC4", Slot = "11")]
	public override WVR_Axis_t GetInputAnalogAxis(WVR_DeviceType type, WVR_InputId id)
	{
		return default(WVR_Axis_t);
	}

	[PreserveSig]
	[Token(Token = "0x6000271")]
	[Address(RVA = "0xEECBD0", Offset = "0xEECBD0", VA = "0xEECBD0")]
	public static extern void WVR_GetPoseState_HVR(WVR_DeviceType type, WVR_PoseOriginModel originModel, uint predictedMilliSec, ref WVR_PoseState_t poseState);

	[Token(Token = "0x6000272")]
	[Address(RVA = "0xEECCE8", Offset = "0xEECCE8", VA = "0xEECCE8", Slot = "13")]
	public override void GetPoseState(WVR_DeviceType type, WVR_PoseOriginModel originModel, uint predictedMilliSec, ref WVR_PoseState_t poseState)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000273")]
	[Address(RVA = "0xEECCFC", Offset = "0xEECCFC", VA = "0xEECCFC")]
	public static extern void WVR_SetTextureBounds_HVR([In][Out] WVR_TextureBound_t[] textureBound);

	[Token(Token = "0x6000274")]
	[Address(RVA = "0xEECDA0", Offset = "0xEECDA0", VA = "0xEECDA0", Slot = "12")]
	public override void SetTextureBounds([In][Out] WVR_TextureBound_t[] textureBound)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000275")]
	[Address(RVA = "0xEECEA0", Offset = "0xEECEA0", VA = "0xEECEA0")]
	public static extern void WVR_WaitGetPoseIndex_HVR(WVR_PoseOriginModel originModel, [In][Out] WVR_DevicePosePair_t[] poseArray, uint pairArrayCount, ref uint frameIndex);

	[Token(Token = "0x6000276")]
	[Address(RVA = "0xEED070", Offset = "0xEED070", VA = "0xEED070", Slot = "15")]
	public override void WaitGetPoseIndex(WVR_PoseOriginModel originModel, [In][Out] WVR_DevicePosePair_t[] poseArray, uint pairArrayCount, ref uint frameIndex)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000277")]
	[Address(RVA = "0xEED11C", Offset = "0xEED11C", VA = "0xEED11C")]
	public static extern void WVR_GetLastPoseIndex_HVR(WVR_PoseOriginModel originModel, [In][Out] WVR_DevicePosePair_t[] poseArray, uint pairArrayCount, ref uint frameIndex);

	[Token(Token = "0x6000278")]
	[Address(RVA = "0xEED2EC", Offset = "0xEED2EC", VA = "0xEED2EC", Slot = "14")]
	public override void GetLastPoseIndex(WVR_PoseOriginModel originModel, [In][Out] WVR_DevicePosePair_t[] poseArray, uint pairArrayCount, ref uint frameIndex)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000279")]
	[Address(RVA = "0xEED398", Offset = "0xEED398", VA = "0xEED398")]
	public static extern void WVR_GetSyncPose_HVR(WVR_PoseOriginModel originModel, [In][Out] WVR_DevicePosePair_t[] poseArray, uint pairArrayCount);

	[Token(Token = "0x600027A")]
	[Address(RVA = "0xEED55C", Offset = "0xEED55C", VA = "0xEED55C", Slot = "17")]
	public override void GetSyncPose(WVR_PoseOriginModel originModel, [In][Out] WVR_DevicePosePair_t[] poseArray, uint pairArrayCount)
	{
	}

	[PreserveSig]
	[Token(Token = "0x600027B")]
	[Address(RVA = "0xEED5F8", Offset = "0xEED5F8", VA = "0xEED5F8")]
	public static extern bool WVR_IsDeviceConnected_HVR(WVR_DeviceType type);

	[Token(Token = "0x600027C")]
	[Address(RVA = "0xEED6A0", Offset = "0xEED6A0", VA = "0xEED6A0", Slot = "18")]
	public override bool IsDeviceConnected(WVR_DeviceType type)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x600027D")]
	[Address(RVA = "0xEED6A8", Offset = "0xEED6A8", VA = "0xEED6A8")]
	public static extern void WVR_TriggerVibration_HVR(WVR_DeviceType type, WVR_InputId id, uint durationMicroSec, uint frequency, WVR_Intensity intensity);

	[Token(Token = "0x600027E")]
	[Address(RVA = "0xEED774", Offset = "0xEED774", VA = "0xEED774", Slot = "19")]
	public override void TriggerVibration(WVR_DeviceType type, WVR_InputId id, uint durationMicroSec, uint frequency, WVR_Intensity intensity)
	{
	}

	[PreserveSig]
	[Token(Token = "0x600027F")]
	[Address(RVA = "0xEED78C", Offset = "0xEED78C", VA = "0xEED78C")]
	public static extern void WVR_InAppRecenter_HVR(WVR_RecenterType recenterType);

	[Token(Token = "0x6000280")]
	[Address(RVA = "0xEED82C", Offset = "0xEED82C", VA = "0xEED82C", Slot = "20")]
	public override void InAppRecenter(WVR_RecenterType recenterType)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000281")]
	[Address(RVA = "0xEED834", Offset = "0xEED834", VA = "0xEED834")]
	public static extern void WVR_SetNeckModelEnabled_HVR(bool enabled);

	[Token(Token = "0x6000282")]
	[Address(RVA = "0xEED8D4", Offset = "0xEED8D4", VA = "0xEED8D4", Slot = "21")]
	public override void SetNeckModelEnabled(bool enabled)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000283")]
	[Address(RVA = "0xEED8D8", Offset = "0xEED8D8", VA = "0xEED8D8")]
	public static extern void WVR_SetNeckModel_HVR(WVR_SimulationType simulationType);

	[Token(Token = "0x6000284")]
	[Address(RVA = "0xEED978", Offset = "0xEED978", VA = "0xEED978", Slot = "22")]
	public override void SetNeckModel(WVR_SimulationType simulationType)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000285")]
	[Address(RVA = "0xEED980", Offset = "0xEED980", VA = "0xEED980")]
	public static extern void WVR_SetArmModel_HVR(WVR_SimulationType simulationType);

	[Token(Token = "0x6000286")]
	[Address(RVA = "0xEEDA20", Offset = "0xEEDA20", VA = "0xEEDA20", Slot = "23")]
	public override void SetArmModel(WVR_SimulationType simulationType)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000287")]
	[Address(RVA = "0xEEDA24", Offset = "0xEEDA24", VA = "0xEEDA24")]
	public static extern void WVR_SetArmSticky_HVR(bool stickyArm);

	[Token(Token = "0x6000288")]
	[Address(RVA = "0xEEDAC4", Offset = "0xEEDAC4", VA = "0xEEDAC4", Slot = "24")]
	public override void SetArmSticky(bool stickyArm)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000289")]
	[Address(RVA = "0xEEDAC8", Offset = "0xEEDAC8", VA = "0xEEDAC8")]
	public static extern bool WVR_SetInputRequest_HVR(WVR_DeviceType type, WVR_InputAttribute_t[] request, uint size);

	[Token(Token = "0x600028A")]
	[Address(RVA = "0xEEDB90", Offset = "0xEEDB90", VA = "0xEEDB90", Slot = "25")]
	public override bool SetInputRequest(WVR_DeviceType type, WVR_InputAttribute_t[] request, uint size)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x600028B")]
	[Address(RVA = "0xEEDBA0", Offset = "0xEEDBA0", VA = "0xEEDBA0")]
	public static extern bool WVR_GetInputMappingPair_HVR(WVR_DeviceType type, WVR_InputId destination, ref WVR_InputMappingPair_t pair);

	[Token(Token = "0x600028C")]
	[Address(RVA = "0xEEDC60", Offset = "0xEEDC60", VA = "0xEEDC60", Slot = "26")]
	public override bool GetInputMappingPair(WVR_DeviceType type, WVR_InputId destination, ref WVR_InputMappingPair_t pair)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x600028D")]
	[Address(RVA = "0xEEDC70", Offset = "0xEEDC70", VA = "0xEEDC70")]
	public static extern uint WVR_GetInputMappingTable_HVR(WVR_DeviceType type, [In][Out] WVR_InputMappingPair_t[] table, uint size);

	[Token(Token = "0x600028E")]
	[Address(RVA = "0xEEDD30", Offset = "0xEEDD30", VA = "0xEEDD30", Slot = "27")]
	public override uint GetInputMappingTable(WVR_DeviceType type, [In][Out] WVR_InputMappingPair_t[] table, uint size)
	{
		return default(uint);
	}

	[PreserveSig]
	[Token(Token = "0x600028F")]
	[Address(RVA = "0xEEDD40", Offset = "0xEEDD40", VA = "0xEEDD40")]
	public static extern WVR_Arena_t WVR_GetArena_HVR();

	[Token(Token = "0x6000290")]
	[Address(RVA = "0xEEDDD4", Offset = "0xEEDDD4", VA = "0xEEDDD4", Slot = "28")]
	public override WVR_Arena_t GetArena()
	{
		return default(WVR_Arena_t);
	}

	[PreserveSig]
	[Token(Token = "0x6000291")]
	[Address(RVA = "0xEEDDEC", Offset = "0xEEDDEC", VA = "0xEEDDEC")]
	public static extern bool WVR_SetArena_HVR(ref WVR_Arena_t arena);

	[Token(Token = "0x6000292")]
	[Address(RVA = "0xEEDE90", Offset = "0xEEDE90", VA = "0xEEDE90", Slot = "29")]
	public override bool SetArena(ref WVR_Arena_t arena)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000293")]
	[Address(RVA = "0xEEDE98", Offset = "0xEEDE98", VA = "0xEEDE98")]
	public static extern WVR_ArenaVisible WVR_GetArenaVisible_HVR();

	[Token(Token = "0x6000294")]
	[Address(RVA = "0xEEDF28", Offset = "0xEEDF28", VA = "0xEEDF28", Slot = "30")]
	public override WVR_ArenaVisible GetArenaVisible()
	{
		return default(WVR_ArenaVisible);
	}

	[PreserveSig]
	[Token(Token = "0x6000295")]
	[Address(RVA = "0xEEDF2C", Offset = "0xEEDF2C", VA = "0xEEDF2C")]
	public static extern void WVR_SetArenaVisible_HVR(WVR_ArenaVisible config);

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xEEDFCC", Offset = "0xEEDFCC", VA = "0xEEDFCC", Slot = "31")]
	public override void SetArenaVisible(WVR_ArenaVisible config)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000297")]
	[Address(RVA = "0xEEDFD4", Offset = "0xEEDFD4", VA = "0xEEDFD4")]
	public static extern bool WVR_IsOverArenaRange_HVR();

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xEEE06C", Offset = "0xEEE06C", VA = "0xEEE06C", Slot = "32")]
	public override bool IsOverArenaRange()
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000299")]
	[Address(RVA = "0xEEE070", Offset = "0xEEE070", VA = "0xEEE070")]
	public static extern float WVR_GetDeviceBatteryPercentage_HVR(WVR_DeviceType type);

	[Token(Token = "0x600029A")]
	[Address(RVA = "0xEEE110", Offset = "0xEEE110", VA = "0xEEE110", Slot = "33")]
	public override float GetDeviceBatteryPercentage(WVR_DeviceType type)
	{
		return default(float);
	}

	[PreserveSig]
	[Token(Token = "0x600029B")]
	[Address(RVA = "0xEEE118", Offset = "0xEEE118", VA = "0xEEE118")]
	public static extern WVR_BatteryStatus WVR_GetBatteryStatus_HVR(WVR_DeviceType type);

	[Token(Token = "0x600029C")]
	[Address(RVA = "0xEEE1B8", Offset = "0xEEE1B8", VA = "0xEEE1B8", Slot = "34")]
	public override WVR_BatteryStatus GetBatteryStatus(WVR_DeviceType type)
	{
		return default(WVR_BatteryStatus);
	}

	[PreserveSig]
	[Token(Token = "0x600029D")]
	[Address(RVA = "0xEEE1C0", Offset = "0xEEE1C0", VA = "0xEEE1C0")]
	public static extern WVR_ChargeStatus WVR_GetChargeStatus_HVR(WVR_DeviceType type);

	[Token(Token = "0x600029E")]
	[Address(RVA = "0xEEE260", Offset = "0xEEE260", VA = "0xEEE260", Slot = "35")]
	public override WVR_ChargeStatus GetChargeStatus(WVR_DeviceType type)
	{
		return default(WVR_ChargeStatus);
	}

	[PreserveSig]
	[Token(Token = "0x600029F")]
	[Address(RVA = "0xEEE268", Offset = "0xEEE268", VA = "0xEEE268")]
	public static extern WVR_BatteryTemperatureStatus WVR_GetBatteryTemperatureStatus_HVR(WVR_DeviceType type);

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0xEEE308", Offset = "0xEEE308", VA = "0xEEE308", Slot = "36")]
	public override WVR_BatteryTemperatureStatus GetBatteryTemperatureStatus(WVR_DeviceType type)
	{
		return default(WVR_BatteryTemperatureStatus);
	}

	[PreserveSig]
	[Token(Token = "0x60002A1")]
	[Address(RVA = "0xEEE310", Offset = "0xEEE310", VA = "0xEEE310")]
	public static extern float WVR_GetBatteryTemperature_HVR(WVR_DeviceType type);

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0xEEE3B0", Offset = "0xEEE3B0", VA = "0xEEE3B0", Slot = "37")]
	public override float GetBatteryTemperature(WVR_DeviceType type)
	{
		return default(float);
	}

	[PreserveSig]
	[Token(Token = "0x60002A3")]
	[Address(RVA = "0xEEE3B8", Offset = "0xEEE3B8", VA = "0xEEE3B8")]
	public static extern WVR_InitError WVR_Init_HVR(WVR_AppType eType);

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0xEEE454", Offset = "0xEEE454", VA = "0xEEE454", Slot = "45")]
	public override WVR_InitError Init(WVR_AppType eType)
	{
		return default(WVR_InitError);
	}

	[PreserveSig]
	[Token(Token = "0x60002A5")]
	[Address(RVA = "0xEEE4D8", Offset = "0xEEE4D8", VA = "0xEEE4D8")]
	public static extern void WVR_Quit_HVR();

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0xEEE564", Offset = "0xEEE564", VA = "0xEEE564", Slot = "47")]
	public override void Quit()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60002A7")]
	[Address(RVA = "0xEEE5E0", Offset = "0xEEE5E0", VA = "0xEEE5E0")]
	public static extern IntPtr WVR_GetInitErrorString_HVR(WVR_InitError error);

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0xEEE680", Offset = "0xEEE680", VA = "0xEEE680", Slot = "48")]
	public override IntPtr GetInitErrorString(WVR_InitError error)
	{
		return default(IntPtr);
	}

	[PreserveSig]
	[Token(Token = "0x60002A9")]
	[Address(RVA = "0xEEE704", Offset = "0xEEE704", VA = "0xEEE704")]
	public static extern uint WVR_GetWaveRuntimeVersion_HVR();

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0xEEE794", Offset = "0xEEE794", VA = "0xEEE794", Slot = "49")]
	public override uint GetWaveRuntimeVersion()
	{
		return default(uint);
	}

	[PreserveSig]
	[Token(Token = "0x60002AB")]
	[Address(RVA = "0xEEE810", Offset = "0xEEE810", VA = "0xEEE810")]
	public static extern uint WVR_GetWaveSDKVersion_HVR();

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xEEE8A0", Offset = "0xEEE8A0", VA = "0xEEE8A0", Slot = "50")]
	public override uint GetWaveSDKVersion()
	{
		return default(uint);
	}

	[PreserveSig]
	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xEEE920", Offset = "0xEEE920", VA = "0xEEE920")]
	public static extern bool WVR_IsInputFocusCapturedBySystem_HVR();

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xEEE9B8", Offset = "0xEEE9B8", VA = "0xEEE9B8", Slot = "51")]
	public override bool IsInputFocusCapturedBySystem()
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xEEEA34", Offset = "0xEEEA34", VA = "0xEEEA34")]
	internal static extern WVR_RenderError WVR_RenderInit_HVR(ref WVR_RenderInitParams_t param);

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xEEEAD0", Offset = "0xEEEAD0", VA = "0xEEEAD0", Slot = "52")]
	internal override WVR_RenderError RenderInit(ref WVR_RenderInitParams_t param)
	{
		return default(WVR_RenderError);
	}

	[PreserveSig]
	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xEEEAD8", Offset = "0xEEEAD8", VA = "0xEEEAD8")]
	internal static extern bool WVR_SetPerformanceLevels_HVR(WVR_PerfLevel cpuLevel, WVR_PerfLevel gpuLevel);

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xEEEB8C", Offset = "0xEEEB8C", VA = "0xEEEB8C", Slot = "53")]
	internal override bool SetPerformanceLevels(WVR_PerfLevel cpuLevel, WVR_PerfLevel gpuLevel)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xEEEC0C", Offset = "0xEEEC0C", VA = "0xEEEC0C")]
	internal static extern bool WVR_EnableAdaptiveQuality_HVR(bool enable, uint flags);

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xEEECC0", Offset = "0xEEECC0", VA = "0xEEECC0", Slot = "54")]
	internal override bool EnableAdaptiveQuality(bool enable, uint flags)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xEEED40", Offset = "0xEEED40", VA = "0xEEED40")]
	internal static extern bool WVR_IsAdaptiveQualityEnabled_HVR();

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xEEEDD8", Offset = "0xEEEDD8", VA = "0xEEEDD8", Slot = "55")]
	internal override bool IsAdaptiveQualityEnabled()
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xEEEE54", Offset = "0xEEEE54", VA = "0xEEEE54")]
	public static extern bool WVR_StartCamera_HVR(ref WVR_CameraInfo_t info);

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0xEEEEF8", Offset = "0xEEEEF8", VA = "0xEEEEF8", Slot = "56")]
	public override bool StartCamera(ref WVR_CameraInfo_t info)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60002B9")]
	[Address(RVA = "0xEEEF7C", Offset = "0xEEEF7C", VA = "0xEEEF7C")]
	public static extern void WVR_StopCamera_HVR();

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xEEF00C", Offset = "0xEEF00C", VA = "0xEEF00C", Slot = "57")]
	public override void StopCamera()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60002BB")]
	[Address(RVA = "0xEEF088", Offset = "0xEEF088", VA = "0xEEF088")]
	public static extern bool WVR_UpdateTexture_HVR(IntPtr textureid);

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0xEEF12C", Offset = "0xEEF12C", VA = "0xEEF12C", Slot = "58")]
	public override bool UpdateTexture(IntPtr textureid)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60002BD")]
	[Address(RVA = "0xEEF1B0", Offset = "0xEEF1B0", VA = "0xEEF1B0")]
	public static extern bool DrawTextureWithBuffer_HVR(IntPtr textureId, WVR_CameraImageFormat imgFormat, IntPtr frameBuffer, uint size, uint width, uint height);

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0xEEF298", Offset = "0xEEF298", VA = "0xEEF298", Slot = "62")]
	public override bool DrawTextureWithBuffer(IntPtr textureId, WVR_CameraImageFormat imgFormat, IntPtr frameBuffer, uint size, uint width, uint height)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60002BF")]
	[Address(RVA = "0xEEF2B4", Offset = "0xEEF2B4", VA = "0xEEF2B4")]
	public static extern bool WVR_GetCameraIntrinsic_HVR(WVR_CameraPosition position, ref WVR_CameraIntrinsic_t intrinsic);

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0xEEF36C", Offset = "0xEEF36C", VA = "0xEEF36C", Slot = "59")]
	public override bool GetCameraIntrinsic(WVR_CameraPosition position, ref WVR_CameraIntrinsic_t intrinsic)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60002C1")]
	[Address(RVA = "0xEEF400", Offset = "0xEEF400", VA = "0xEEF400")]
	public static extern bool WVR_IsDeviceSuspend_HVR(WVR_DeviceType type);

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0xEEF4A8", Offset = "0xEEF4A8", VA = "0xEEF4A8", Slot = "64")]
	public override bool IsDeviceSuspend(WVR_DeviceType type)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60002C3")]
	[Address(RVA = "0xEEF52C", Offset = "0xEEF52C", VA = "0xEEF52C")]
	public static extern void WVR_ConvertMatrixQuaternion_HVR(ref WVR_Matrix4f_t mat, ref WVR_Quatf_t quat, bool m2q);

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0xEEF5E4", Offset = "0xEEF5E4", VA = "0xEEF5E4", Slot = "65")]
	public override void ConvertMatrixQuaternion(ref WVR_Matrix4f_t mat, ref WVR_Quatf_t quat, bool m2q)
	{
	}

	[PreserveSig]
	[Token(Token = "0x60002C5")]
	[Address(RVA = "0xEEF680", Offset = "0xEEF680", VA = "0xEEF680")]
	public static extern WVR_NumDoF WVR_GetDegreeOfFreedom_HVR(WVR_DeviceType type);

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0xEEF720", Offset = "0xEEF720", VA = "0xEEF720", Slot = "66")]
	public override WVR_NumDoF GetDegreeOfFreedom(WVR_DeviceType type)
	{
		return default(WVR_NumDoF);
	}

	[PreserveSig]
	[Token(Token = "0x60002C7")]
	[Address(RVA = "0xEEF7A4", Offset = "0xEEF7A4", VA = "0xEEF7A4")]
	public static extern void WVR_SetParameters_HVR(WVR_DeviceType type, IntPtr pchValue);

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0xEEF854", Offset = "0xEEF854", VA = "0xEEF854", Slot = "67")]
	public override void SetParameters(WVR_DeviceType type, IntPtr pchValue)
	{
	}

	[PreserveSig]
	[Token(Token = "0x60002C9")]
	[Address(RVA = "0xEEF8E8", Offset = "0xEEF8E8", VA = "0xEEF8E8")]
	public static extern uint WVR_GetParameters_HVR(WVR_DeviceType type, IntPtr pchValue, IntPtr retValue, uint unBufferSize);

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xEEF9B0", Offset = "0xEEF9B0", VA = "0xEEF9B0", Slot = "68")]
	public override uint GetParameters(WVR_DeviceType type, IntPtr pchValue, IntPtr retValue, uint unBufferSize)
	{
		return default(uint);
	}

	[PreserveSig]
	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xEEFA5C", Offset = "0xEEFA5C", VA = "0xEEFA5C")]
	public static extern WVR_DeviceType WVR_GetDefaultControllerRole_HVR();

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xEEFAEC", Offset = "0xEEFAEC", VA = "0xEEFAEC", Slot = "69")]
	public override WVR_DeviceType GetDefaultControllerRole()
	{
		return default(WVR_DeviceType);
	}

	[PreserveSig]
	[Token(Token = "0x60002CD")]
	[Address(RVA = "0xEEFAF0", Offset = "0xEEFAF0", VA = "0xEEFAF0")]
	public static extern bool WVR_SetInteractionMode_HVR(WVR_InteractionMode mode);

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0xEEFB98", Offset = "0xEEFB98", VA = "0xEEFB98", Slot = "70")]
	public override bool SetInteractionMode(WVR_InteractionMode mode)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60002CF")]
	[Address(RVA = "0xEEFBA0", Offset = "0xEEFBA0", VA = "0xEEFBA0")]
	public static extern WVR_InteractionMode WVR_GetInteractionMode_HVR();

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0xEEFC30", Offset = "0xEEFC30", VA = "0xEEFC30", Slot = "71")]
	public override WVR_InteractionMode GetInteractionMode()
	{
		return default(WVR_InteractionMode);
	}

	[PreserveSig]
	[Token(Token = "0x60002D1")]
	[Address(RVA = "0xEEFC34", Offset = "0xEEFC34", VA = "0xEEFC34")]
	public static extern bool WVR_SetGazeTriggerType_HVR(WVR_GazeTriggerType type);

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xEEFCDC", Offset = "0xEEFCDC", VA = "0xEEFCDC", Slot = "72")]
	public override bool SetGazeTriggerType(WVR_GazeTriggerType type)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60002D3")]
	[Address(RVA = "0xEEFCE4", Offset = "0xEEFCE4", VA = "0xEEFCE4")]
	public static extern WVR_GazeTriggerType WVR_GetGazeTriggerType_HVR();

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xEEFD74", Offset = "0xEEFD74", VA = "0xEEFD74", Slot = "73")]
	public override WVR_GazeTriggerType GetGazeTriggerType()
	{
		return default(WVR_GazeTriggerType);
	}

	[PreserveSig]
	[Token(Token = "0x60002D5")]
	[Address(RVA = "0xEEFD78", Offset = "0xEEFD78", VA = "0xEEFD78")]
	public static extern bool WVR_GetDeviceErrorState_HVR(WVR_DeviceType dev_type, WVR_DeviceErrorState error_state);

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0xEEFE2C", Offset = "0xEEFE2C", VA = "0xEEFE2C", Slot = "74")]
	public override bool GetDeviceErrorState(WVR_DeviceType dev_type, WVR_DeviceErrorState error_state)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60002D7")]
	[Address(RVA = "0xEEFEC0", Offset = "0xEEFEC0", VA = "0xEEFEC0")]
	public static extern void WVR_GetRenderTargetSize_HVR(ref uint width, ref uint height);

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0xEEFF70", Offset = "0xEEFF70", VA = "0xEEFF70", Slot = "75")]
	public override void GetRenderTargetSize(ref uint width, ref uint height)
	{
	}

	[PreserveSig]
	[Token(Token = "0x60002D9")]
	[Address(RVA = "0xEF0004", Offset = "0xEF0004", VA = "0xEF0004")]
	public static extern WVR_Matrix4f_t WVR_GetProjection_HVR(WVR_Eye eye, float near, float far);

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0xEF00CC", Offset = "0xEF00CC", VA = "0xEF00CC", Slot = "76")]
	public override WVR_Matrix4f_t GetProjection(WVR_Eye eye, float near, float far)
	{
		return default(WVR_Matrix4f_t);
	}

	[PreserveSig]
	[Token(Token = "0x60002DB")]
	[Address(RVA = "0xEF0178", Offset = "0xEF0178", VA = "0xEF0178")]
	public static extern void WVR_GetClippingPlaneBoundary_HVR(WVR_Eye eye, ref float left, ref float right, ref float top, ref float bottom);

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0xEF0248", Offset = "0xEF0248", VA = "0xEF0248", Slot = "77")]
	public override void GetClippingPlaneBoundary(WVR_Eye eye, ref float left, ref float right, ref float top, ref float bottom)
	{
	}

	[PreserveSig]
	[Token(Token = "0x60002DD")]
	[Address(RVA = "0xEF02FC", Offset = "0xEF02FC", VA = "0xEF02FC")]
	public static extern void WVR_SetOverfillRatio_HVR(float ratioX, float ratioY);

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0xEF03A4", Offset = "0xEF03A4", VA = "0xEF03A4", Slot = "78")]
	public override void SetOverfillRatio(float ratioX, float ratioY)
	{
	}

	[PreserveSig]
	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xEF0438", Offset = "0xEF0438", VA = "0xEF0438")]
	public static extern WVR_Matrix4f_t WVR_GetTransformFromEyeToHead_HVR(WVR_Eye eye, WVR_NumDoF dof);

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xEF04EC", Offset = "0xEF04EC", VA = "0xEF04EC", Slot = "79")]
	public override WVR_Matrix4f_t GetTransformFromEyeToHead(WVR_Eye eye, WVR_NumDoF dof)
	{
		return default(WVR_Matrix4f_t);
	}

	[PreserveSig]
	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xEF0588", Offset = "0xEF0588", VA = "0xEF0588")]
	public static extern WVR_SubmitError WVR_SubmitFrame_HVR(WVR_Eye eye, [In][Out] WVR_TextureParams_t[] param, [In][Out] WVR_PoseState_t[] pose, WVR_SubmitExtend extendMethod);

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0xEF0770", Offset = "0xEF0770", VA = "0xEF0770", Slot = "80")]
	public override WVR_SubmitError SubmitFrame(WVR_Eye eye, [In][Out] WVR_TextureParams_t[] param, [In][Out] WVR_PoseState_t[] pose, WVR_SubmitExtend extendMethod)
	{
		return default(WVR_SubmitError);
	}

	[PreserveSig]
	[Token(Token = "0x60002E3")]
	[Address(RVA = "0xEF081C", Offset = "0xEF081C", VA = "0xEF081C")]
	public static extern void WVR_SetSubmitParams_HVR(WVR_Eye eye, [Out] WVR_TextureParams_t[] param, [Out] WVR_PoseState_t[] pose, WVR_SubmitExtend extendMethod);

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0xEF0A08", Offset = "0xEF0A08", VA = "0xEF0A08", Slot = "81")]
	public override void SetSubmitParams(WVR_Eye eye, [In][Out] WVR_TextureParams_t[] param, [In][Out] WVR_PoseState_t[] pose, WVR_SubmitExtend extendMethod)
	{
	}

	[PreserveSig]
	[Token(Token = "0x60002E5")]
	[Address(RVA = "0xEF0AB4", Offset = "0xEF0AB4", VA = "0xEF0AB4")]
	public static extern bool WVR_RequestScreenshot_HVR(uint width, uint height, WVR_ScreenshotMode mode, IntPtr filename);

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xEF0B84", Offset = "0xEF0B84", VA = "0xEF0B84", Slot = "83")]
	public override bool RequestScreenshot(uint width, uint height, WVR_ScreenshotMode mode, IntPtr filename)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xEF0C30", Offset = "0xEF0C30", VA = "0xEF0C30")]
	public static extern void WVR_RenderMask_HVR(WVR_Eye eye);

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0xEF0CD0", Offset = "0xEF0CD0", VA = "0xEF0CD0", Slot = "84")]
	public override void RenderMask(WVR_Eye eye)
	{
	}

	[PreserveSig]
	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xEF0D54", Offset = "0xEF0D54", VA = "0xEF0D54")]
	public static extern bool WVR_GetRenderProps_HVR(ref WVR_RenderProps_t props);

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xEF0E3C", Offset = "0xEF0E3C", VA = "0xEF0E3C", Slot = "85")]
	public override bool GetRenderProps(ref WVR_RenderProps_t props)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xEF0EC0", Offset = "0xEF0EC0", VA = "0xEF0EC0")]
	public static extern IntPtr WVR_ObtainTextureQueue_HVR(WVR_TextureTarget target, WVR_TextureFormat format, WVR_TextureType type, uint width, uint height, int level);

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0xEF0FA0", Offset = "0xEF0FA0", VA = "0xEF0FA0", Slot = "86")]
	public override IntPtr ObtainTextureQueue(WVR_TextureTarget target, WVR_TextureFormat format, WVR_TextureType type, uint width, uint height, int level)
	{
		return default(IntPtr);
	}

	[PreserveSig]
	[Token(Token = "0x60002ED")]
	[Address(RVA = "0xEF1064", Offset = "0xEF1064", VA = "0xEF1064")]
	public static extern uint WVR_GetTextureQueueLength_HVR(IntPtr handle);

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0xEF1100", Offset = "0xEF1100", VA = "0xEF1100", Slot = "87")]
	public override uint GetTextureQueueLength(IntPtr handle)
	{
		return default(uint);
	}

	[PreserveSig]
	[Token(Token = "0x60002EF")]
	[Address(RVA = "0xEF1184", Offset = "0xEF1184", VA = "0xEF1184")]
	public static extern WVR_TextureParams_t WVR_GetTexture_HVR(IntPtr handle, int index);

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xEF123C", Offset = "0xEF123C", VA = "0xEF123C", Slot = "88")]
	public override WVR_TextureParams_t GetTexture(IntPtr handle, int index)
	{
		return default(WVR_TextureParams_t);
	}

	[PreserveSig]
	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xEF12D8", Offset = "0xEF12D8", VA = "0xEF12D8")]
	public static extern int WVR_GetAvailableTextureIndex_HVR(IntPtr handle);

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0xEF1374", Offset = "0xEF1374", VA = "0xEF1374", Slot = "89")]
	public override int GetAvailableTextureIndex(IntPtr handle)
	{
		return default(int);
	}

	[PreserveSig]
	[Token(Token = "0x60002F3")]
	[Address(RVA = "0xEF13F8", Offset = "0xEF13F8", VA = "0xEF13F8")]
	public static extern void WVR_ReleaseTextureQueue_HVR(IntPtr handle);

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0xEF1494", Offset = "0xEF1494", VA = "0xEF1494", Slot = "90")]
	public override void ReleaseTextureQueue(IntPtr handle)
	{
	}

	[PreserveSig]
	[Token(Token = "0x60002F5")]
	[Address(RVA = "0xEF1518", Offset = "0xEF1518", VA = "0xEF1518")]
	public static extern bool WVR_IsRenderFoveationSupport_HVR();

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0xEF15B0", Offset = "0xEF15B0", VA = "0xEF15B0", Slot = "91")]
	public override bool IsRenderFoveationSupport()
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xEF15B4", Offset = "0xEF15B4", VA = "0xEF15B4")]
	public static extern void WVR_RenderFoveation_HVR(bool enable);

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xEF1654", Offset = "0xEF1654", VA = "0xEF1654", Slot = "92")]
	public override void RenderFoveation(bool enable)
	{
	}

	[PreserveSig]
	[Token(Token = "0x60002F9")]
	[Address(RVA = "0xEF16D8", Offset = "0xEF16D8", VA = "0xEF16D8")]
	public static extern void WVR_SetFocusedController_HVR(WVR_DeviceType focusController);

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0xEF1778", Offset = "0xEF1778", VA = "0xEF1778", Slot = "98")]
	public override void SetFocusedController(WVR_DeviceType focusController)
	{
	}

	[PreserveSig]
	[Token(Token = "0x60002FB")]
	[Address(RVA = "0xEF17FC", Offset = "0xEF17FC", VA = "0xEF17FC")]
	public static extern WVR_DeviceType WVR_GetFocusedController_HVR();

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0xEF188C", Offset = "0xEF188C", VA = "0xEF188C", Slot = "99")]
	public override WVR_DeviceType GetFocusedController()
	{
		return default(WVR_DeviceType);
	}

	[PreserveSig]
	[Token(Token = "0x60002FD")]
	[Address(RVA = "0xEF1908", Offset = "0xEF1908", VA = "0xEF1908")]
	public static extern IntPtr WVR_StoreRenderTexturesHVR(IntPtr[] texturesIDs, int size, bool eEye, WVR_TextureTarget target);

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0xEF19D8", Offset = "0xEF19D8", VA = "0xEF19D8", Slot = "16")]
	public override IntPtr StoreRenderTextures(IntPtr[] texturesIDs, int size, bool eEye, WVR_TextureTarget target)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0xEF1A84", Offset = "0xEF1A84", VA = "0xEF1A84")]
	public WVR_HVR()
	{
	}
}
[Serializable]
[Token(Token = "0x2000035")]
public class MeshObject
{
	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string MeshName;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool hasEffect;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject gameObject;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 originPosition;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material originMat;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material effectMat;

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x17D4238", Offset = "0x17D4238", VA = "0x17D4238")]
	public MeshObject()
	{
	}
}
[Token(Token = "0x2000036")]
public class WaveVR_AdaptiveControllerActions : MonoBehaviour
{
	[Token(Token = "0x2000425")]
	public class WVR_InputObject
	{
		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WVR_InputId destination;

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public WVR_InputId sourceId;

		[Token(Token = "0x600204F")]
		[Address(RVA = "0x1222C38", Offset = "0x1222C38", VA = "0x1222C38")]
		public WVR_InputObject()
		{
		}
	}

	[Token(Token = "0x2000426")]
	private enum keyMappingInputType
	{
		[Token(Token = "0x40018F6")]
		TouchDown,
		[Token(Token = "0x40018F7")]
		TouchUp,
		[Token(Token = "0x40018F8")]
		PressDown,
		[Token(Token = "0x40018F9")]
		PressUp
	}

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool enableButtonEffect;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public WaveVR_Controller.EDeviceType device;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool useSystemConfig;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color buttonEffectColor;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool collectInStart;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int volume_index;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly WVR_InputId[] pressIds;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly string[] PressEffectNames;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshObject[] pressObjectArrays;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly WVR_InputId[] touchIds;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly string[] TouchEffectNames;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshObject[] touchObjectArrays;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject touchpad;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh touchpadMesh;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Mesh toucheffectMesh;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool currentIsLeftHandMode;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int touch_index;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Material effectMat;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Material touchMat;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool mergeToOneBone;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool isTouchPadSetting;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 touchCenter;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float raidus;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 touchPtW;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 touchPtU;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 touchPtV;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float touchptHeight;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private ModelSpecify modelSpecify;

	[Token(Token = "0x6000301")]
	[Address(RVA = "0xEF66AC", Offset = "0xEF66AC", VA = "0xEF66AC")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0xEF68E4", Offset = "0xEF68E4", VA = "0xEF68E4")]
	private void PrintInfoLog(string msg)
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0xEF6B1C", Offset = "0xEF6B1C", VA = "0xEF6B1C")]
	private void onAdaptiveControllerModelReady(params object[] args)
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0xEF7F24", Offset = "0xEF7F24", VA = "0xEF7F24")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0xEF86D4", Offset = "0xEF86D4", VA = "0xEF86D4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0xEF8780", Offset = "0xEF8780", VA = "0xEF8780")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0xEF7FE8", Offset = "0xEF7FE8", VA = "0xEF7FE8")]
	private void resetButtonState()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xEF8820", Offset = "0xEF8820", VA = "0xEF8820")]
	private void Start()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xEF8858", Offset = "0xEF8858", VA = "0xEF8858")]
	private void Update()
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0xEFBA48", Offset = "0xEFBA48", VA = "0xEFBA48")]
	private bool GetTouchPadParam()
	{
		return default(bool);
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0xEFAFF4", Offset = "0xEFAFF4", VA = "0xEFAFF4")]
	private int GetPressInputMapping(int pressIds_Index, keyMappingInputType status)
	{
		return default(int);
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0xEFB570", Offset = "0xEFB570", VA = "0xEFB570")]
	private int GetTouchInputMapping(int touchIds_Index, keyMappingInputType status)
	{
		return default(int);
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0xEF6C38", Offset = "0xEF6C38", VA = "0xEF6C38")]
	private void CollectEffectObjects()
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0xEFCB9C", Offset = "0xEFCB9C", VA = "0xEFCB9C")]
	private Color StringToColor(string color_string)
	{
		return default(Color);
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0xEFCD08", Offset = "0xEFCD08", VA = "0xEFCD08")]
	private Texture2D GetTexture2D(string texture_path)
	{
		return null;
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0xEFCDA8", Offset = "0xEFCDA8", VA = "0xEFCDA8")]
	public void Circle(Texture2D tex, int cx, int cy, int r, Color col)
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0xEFC6EC", Offset = "0xEFC6EC", VA = "0xEFC6EC")]
	private void ReadJsonValues()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0xEFD000", Offset = "0xEFD000", VA = "0xEFD000")]
	public WaveVR_AdaptiveControllerActions()
	{
	}
}
[Token(Token = "0x2000037")]
public class WaveVR_ControllerInstanceManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000427")]
	private class ControllerInstance
	{
		[Token(Token = "0x40018FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WVR_DeviceType type;

		[Token(Token = "0x40018FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject instance;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int index;

		[Token(Token = "0x40018FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool eventEnabled;

		[Token(Token = "0x40018FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool showBeam;

		[Token(Token = "0x40018FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public bool showPointer;

		[Token(Token = "0x6002050")]
		[Address(RVA = "0xE2A644", Offset = "0xE2A644", VA = "0xE2A644")]
		public ControllerInstance()
		{
		}
	}

	[Token(Token = "0x2000428")]
	private enum CComponent
	{
		[Token(Token = "0x4001901")]
		Beam,
		[Token(Token = "0x4001902")]
		ControllerPointer
	}

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static WaveVR_ControllerInstanceManager instance;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int ControllerIdx;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject eventSystem;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<ControllerInstance> ctrInstanceList;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public WVR_DeviceType ControllerFocus;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private WVR_DeviceType lastControllerFocus;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool mFocusCapturedBySystem;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool EnableSingleBeam;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	private bool rConnected;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	private bool lConnected;

	[Token(Token = "0x1700001B")]
	public static WaveVR_ControllerInstanceManager Instance
	{
		[Token(Token = "0x6000315")]
		[Address(RVA = "0xE297B4", Offset = "0xE297B4", VA = "0xE297B4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0xE296D4", Offset = "0xE296D4", VA = "0xE296D4")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xE29964", Offset = "0xE29964", VA = "0xE29964")]
	private bool getEventSystemParameter(WVR_DeviceType type)
	{
		return default(bool);
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xE29BB8", Offset = "0xE29BB8", VA = "0xE29BB8")]
	private bool getComponentParameter(GameObject controller, CComponent comp)
	{
		return default(bool);
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xE29DF4", Offset = "0xE29DF4", VA = "0xE29DF4")]
	public int registerControllerInstance(WVR_DeviceType type, GameObject controller)
	{
		return default(int);
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xE2A64C", Offset = "0xE2A64C", VA = "0xE2A64C")]
	public void removeControllerInstance(int index)
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0xE2A9BC", Offset = "0xE2A9BC", VA = "0xE2A9BC")]
	private void onDeviceConnected(params object[] args)
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xE2AE60", Offset = "0xE2AE60", VA = "0xE2AE60")]
	private void onSystemFocusChanged(params object[] args)
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xE2AF48", Offset = "0xE2AF48", VA = "0xE2AF48")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xE2B1C4", Offset = "0xE2B1C4", VA = "0xE2B1C4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0xE2B2F8", Offset = "0xE2B2F8", VA = "0xE2B2F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0xE2B38C", Offset = "0xE2B38C", VA = "0xE2B38C")]
	private void onOEMConfigChanged(params object[] args)
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0xE2B3E0", Offset = "0xE2B3E0", VA = "0xE2B3E0")]
	private void ReadJsonValues()
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xE2B690", Offset = "0xE2B690", VA = "0xE2B690")]
	private void Start()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0xE2B694", Offset = "0xE2B694", VA = "0xE2B694")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0xE2B6DC", Offset = "0xE2B6DC", VA = "0xE2B6DC")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0xE2B780", Offset = "0xE2B780", VA = "0xE2B780")]
	private void Update()
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0xE2CB54", Offset = "0xE2CB54", VA = "0xE2CB54")]
	private void printAllChildren(GameObject go)
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0xE2B084", Offset = "0xE2B084", VA = "0xE2B084")]
	private void checkControllerConnected()
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0xE2C9CC", Offset = "0xE2C9CC", VA = "0xE2C9CC")]
	private void SetActiveOfEmitter()
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0xE2BD2C", Offset = "0xE2BD2C", VA = "0xE2BD2C")]
	private void ForceSetActiveOfEmitter(ControllerInstance ci, bool enabled)
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0xE2C744", Offset = "0xE2C744", VA = "0xE2C744")]
	private void ActivateEventSystem(WVR_DeviceType type, bool enabled)
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0xE2CCEC", Offset = "0xE2CCEC", VA = "0xE2CCEC")]
	public WaveVR_ControllerInstanceManager()
	{
	}
}
[Token(Token = "0x2000038")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x925318", Offset = "0x925318")]
public class WaveVR_ControllerPointer : MonoBehaviour
{
	[Token(Token = "0x40001A4")]
	private const string LOG_TAG = "WaveVR_ControllerPointer";

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WaveVR_Controller.EDeviceType device;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool ShowPointer;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool Blink;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float PointerOuterDiameterMin;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public float PointerOuterDiameter;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool UseDefaultTexture;

	[Token(Token = "0x40001AB")]
	private const string defaultPointerResource_Texture = "focused_dot";

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Texture2D defaultTexture;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture2D CustomTexture;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public string TextureName;

	[Token(Token = "0x40001AF")]
	private const float pointerDistanceMin = 0.5f;

	[Token(Token = "0x40001B0")]
	[HideInInspector]
	public const float pointerDistanceMax = 100f;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public float PointerDistanceInMeters;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool useTexture;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshFilter pointerMeshFilter;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh pointerMesh;

	[Token(Token = "0x40001B5")]
	private const string defaultPointerResource_Material = "ControllerPointer";

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material pointerMaterial;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Material pointerMaterialInstance;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Color colorFactor;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public Color PointerColor;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[HideInInspector]
	public Color borderColor;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	public Color focusColor;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public Color focusBorderColor;

	[Token(Token = "0x40001BD")]
	private const int PointerRenderQueueMin = 1000;

	[Token(Token = "0x40001BE")]
	private const int PointerRenderQueueMax = 5000;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public int PointerRenderQueue;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int reticleSegments;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[HideInInspector]
	public float kpointerGrowthAngle;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float colorFlickerTime;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool isPointerEnabled;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	private bool pointerInitialized;

	[Token(Token = "0x600032C")]
	[Address(RVA = "0xE3BEE8", Offset = "0xE3BEE8", VA = "0xE3BEE8")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0xE3BF90", Offset = "0xE3BF90", VA = "0xE3BF90")]
	private void ReadJsonValues()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0xE3D114", Offset = "0xE3D114", VA = "0xE3D114")]
	private bool IsBoolean(string value)
	{
		return default(bool);
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0xE3CF68", Offset = "0xE3CF68", VA = "0xE3CF68")]
	private bool IsFloat(string value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0xE3D6CC", Offset = "0xE3D6CC", VA = "0xE3D6CC")]
	private bool IsNumeric(string value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0xE3D2C4", Offset = "0xE3D2C4", VA = "0xE3D2C4")]
	private Color32 StringToColor32(string color_string, int value)
	{
		return default(Color32);
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0xE3D878", Offset = "0xE3D878", VA = "0xE3D878")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0xE3D87C", Offset = "0xE3D87C", VA = "0xE3D87C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0xE3D880", Offset = "0xE3D880", VA = "0xE3D880")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xE3DE10", Offset = "0xE3DE10", VA = "0xE3DE10")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0xE3DF78", Offset = "0xE3DF78", VA = "0xE3DF78")]
	private void Update()
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0xE3EDC8", Offset = "0xE3EDC8", VA = "0xE3EDC8")]
	private void CreatePointerMesh()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0xE3E99C", Offset = "0xE3E99C", VA = "0xE3E99C")]
	private void initialPointer()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0xE3DEA4", Offset = "0xE3DEA4", VA = "0xE3DEA4")]
	private void removePointer()
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xE3F21C", Offset = "0xE3F21C", VA = "0xE3F21C")]
	public void OnPointerEnter(Camera camera, GameObject target, Vector3 intersectionPosition, bool isInteractive)
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xE3F224", Offset = "0xE3F224", VA = "0xE3F224")]
	private void SetPointerTarget(Vector3 target, bool interactive)
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xE3F7E0", Offset = "0xE3F7E0", VA = "0xE3F7E0")]
	public WaveVR_ControllerPointer()
	{
	}
}
[Token(Token = "0x2000039")]
public enum ModelSpecify
{
	[Token(Token = "0x40001C6")]
	MS_Dominant,
	[Token(Token = "0x40001C7")]
	MS_NonDominant
}
[Serializable]
[Token(Token = "0x200003A")]
public class BatteryIndicator
{
	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int level;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float min;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float max;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string texturePath;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool textureLoaded;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D batteryTexture;

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xB35C80", Offset = "0xB35C80", VA = "0xB35C80")]
	public BatteryIndicator()
	{
	}
}
[Serializable]
[Token(Token = "0x200003B")]
public class TouchSetting
{
	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 touchForward;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 touchCenter;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 touchRight;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 touchPtU;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 touchPtW;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 touchPtV;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float raidus;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float touchptHeight;

	[Token(Token = "0x600033E")]
	[Address(RVA = "0xEDE8E0", Offset = "0xEDE8E0", VA = "0xEDE8E0")]
	public TouchSetting()
	{
	}
}
[Serializable]
[Token(Token = "0x200003C")]
public class ModelResource
{
	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string renderModelName;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ModelSpecify modelSpecify;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool mergeToOne;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public uint sectionCount;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FBXInfo_t[] FBXInfo;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshInfo_t[] SectionInfo;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool parserReady;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture2D modelTexture;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool isTouchSetting;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TouchSetting TouchSetting;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool isBatterySetting;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<BatteryIndicator> batteryTextureList;

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x17D4240", Offset = "0x17D4240", VA = "0x17D4240")]
	public ModelResource()
	{
	}
}
[Token(Token = "0x200003D")]
public class WaveVR_ControllerResourceHolder
{
	[Token(Token = "0x2000429")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927304", Offset = "0x927304")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WaveVR_ControllerResourceHolder <>4__this;

		[Token(Token = "0x4001904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ModelResource newMR;

		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool merge;

		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string ModelFolder;

		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ModelSpecify ms;

		[Token(Token = "0x6002051")]
		[Address(RVA = "0xE41DDC", Offset = "0xE41DDC", VA = "0xE41DDC")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x6002052")]
		[Address(RVA = "0xE46E4C", Offset = "0xE46E4C", VA = "0xE46E4C")]
		internal void <addRenderModel>b__0()
		{
		}
	}

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Thread mthread;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static WaveVR_ControllerResourceHolder instance;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<ModelResource> renderModelList;

	[Token(Token = "0x1700001C")]
	public static WaveVR_ControllerResourceHolder Instance
	{
		[Token(Token = "0x6000340")]
		[Address(RVA = "0xE378A8", Offset = "0xE378A8", VA = "0xE378A8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xE41910", Offset = "0xE41910", VA = "0xE41910")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xE419B0", Offset = "0xE419B0", VA = "0xE419B0")]
	private void PrintInfoLog(string msg)
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xE41A50", Offset = "0xE41A50", VA = "0xE41A50")]
	private void PrintWarningLog(string msg)
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0xE41AF0", Offset = "0xE41AF0", VA = "0xE41AF0")]
	public bool isRenderModelExist(string renderModel, ModelSpecify ms, bool merge)
	{
		return default(bool);
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xE41C68", Offset = "0xE41C68", VA = "0xE41C68")]
	public ModelResource getRenderModelResource(string renderModel, ModelSpecify ms, bool merge)
	{
		return null;
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xE379AC", Offset = "0xE379AC", VA = "0xE379AC")]
	public bool addRenderModel(string renderModel, string ModelFolder, ModelSpecify ms, bool merge)
	{
		return default(bool);
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xE428B4", Offset = "0xE428B4", VA = "0xE428B4")]
	private void readNativeData(ModelResource curr, bool mergeTo, string modelFolderPath, ModelSpecify ms)
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xE44FE0", Offset = "0xE44FE0", VA = "0xE44FE0")]
	private bool GetTouchPadParam(ModelResource curr, string modelFolderPath, ModelSpecify ms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xE41DE4", Offset = "0xE41DE4", VA = "0xE41DE4")]
	private bool getBatteryIndicatorParam(ModelResource curr, string modelFolderPath, ModelSpecify ms)
	{
		return default(bool);
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xE418A0", Offset = "0xE418A0", VA = "0xE418A0")]
	public WaveVR_ControllerResourceHolder()
	{
	}
}
[Token(Token = "0x200003E")]
public class WaveVR_ControllerRootToEmitter : MonoBehaviour
{
	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WaveVR_Controller.EDeviceType deviceType;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] moveToEmitter;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject emitter;

	[Token(Token = "0x600034C")]
	[Address(RVA = "0xE46EA8", Offset = "0xE46EA8", VA = "0xE46EA8")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0xE46F90", Offset = "0xE46F90", VA = "0xE46F90")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xE4703C", Offset = "0xE4703C", VA = "0xE4703C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0xE470E8", Offset = "0xE470E8", VA = "0xE470E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0xE470EC", Offset = "0xE470EC", VA = "0xE470EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0xE470F0", Offset = "0xE470F0", VA = "0xE470F0")]
	private void onAdaptiveControllerModelReady(params object[] args)
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0xE479EC", Offset = "0xE479EC", VA = "0xE479EC")]
	public WaveVR_ControllerRootToEmitter()
	{
	}
}
[Token(Token = "0x200003F")]
public class WaveVR_RenderModel : MonoBehaviour
{
	[Token(Token = "0x200042A")]
	public enum ControllerHand
	{
		[Token(Token = "0x4001909")]
		Controller_Dominant,
		[Token(Token = "0x400190A")]
		Controller_NonDominant
	}

	[Token(Token = "0x200042B")]
	public enum LoadingState
	{
		[Token(Token = "0x400190C")]
		LoadingState_NOT_LOADED,
		[Token(Token = "0x400190D")]
		LoadingState_LOADING,
		[Token(Token = "0x400190E")]
		LoadingState_LOADED
	}

	[Token(Token = "0x200042C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927314", Offset = "0x927314")]
	private sealed class <SpawnRenderModel>d__45 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400190F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaveVR_RenderModel <>4__this;

		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private uint <i>5__2;

		[Token(Token = "0x170003A6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002056")]
			[Address(RVA = "0x1333308", Offset = "0x1333308", VA = "0x1333308", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002058")]
			[Address(RVA = "0x1333378", Offset = "0x1333378", VA = "0x1333378", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002053")]
		[Address(RVA = "0x1330CDC", Offset = "0x1330CDC", VA = "0x1330CDC")]
		[DebuggerHidden]
		public <SpawnRenderModel>d__45(int <>1__state)
		{
		}

		[Token(Token = "0x6002054")]
		[Address(RVA = "0x1331080", Offset = "0x1331080", VA = "0x1331080", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002055")]
		[Address(RVA = "0x1331084", Offset = "0x1331084", VA = "0x1331084", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002057")]
		[Address(RVA = "0x1333310", Offset = "0x1333310", VA = "0x1333310", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200042D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927324", Offset = "0x927324")]
	private sealed class <checkRenderModelAndDelete>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaveVR_RenderModel <>4__this;

		[Token(Token = "0x170003A8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600205C")]
			[Address(RVA = "0x13333F8", Offset = "0x13333F8", VA = "0x13333F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003A9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600205E")]
			[Address(RVA = "0x1333468", Offset = "0x1333468", VA = "0x1333468", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002059")]
		[Address(RVA = "0x1330D90", Offset = "0x1330D90", VA = "0x1330D90")]
		[DebuggerHidden]
		public <checkRenderModelAndDelete>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x600205A")]
		[Address(RVA = "0x1333380", Offset = "0x1333380", VA = "0x1333380", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600205B")]
		[Address(RVA = "0x1333384", Offset = "0x1333384", VA = "0x1333384", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600205D")]
		[Address(RVA = "0x1333400", Offset = "0x1333400", VA = "0x1333400", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControllerHand WhichHand;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject defaultModel;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool updateDynamically;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool mergeToOneBone;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject controllerSpawned;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WaveVR_Controller.EDeviceType deviceType;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool connected;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string renderModelNamePath;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string renderModelName;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private IntPtr ptrParameterName;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private IntPtr ptrResult;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Color32> colors;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject meshCom;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject meshGO;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Mesh updateMesh;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Material modelMat;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Material ImgMaterial;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private WaitForEndOfFrame wfef;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private WaitForSeconds wfs;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool showBatterIndicator;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	private bool isBatteryIndicatorReady;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private BatteryIndicator currentBattery;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject batteryGO;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private MeshRenderer batteryMR;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private ModelResource modelResource;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ModelSpecify modelSpecify;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private LoadingState mLoadingState;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int t;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private bool IsFocusCapturedBySystemLastFrame;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private string emitterMeshName;

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x132D28C", Offset = "0x132D28C", VA = "0x132D28C")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x132D4C8", Offset = "0x132D4C8", VA = "0x132D4C8")]
	private void PrintInfoLog(string msg)
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x132D704", Offset = "0x132D704", VA = "0x132D704")]
	private void PrintWarningLog(string msg)
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x132D940", Offset = "0x132D940", VA = "0x132D940")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x132F168", Offset = "0x132F168", VA = "0x132F168")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x132F36C", Offset = "0x132F36C", VA = "0x132F36C")]
	private void onOEMConfigChanged(params object[] args)
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x132F3C4", Offset = "0x132F3C4", VA = "0x132F3C4")]
	private void ReadJsonValues()
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x132F6E8", Offset = "0x132F6E8", VA = "0x132F6E8")]
	private void onDeviceConnected(params object[] args)
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x132DD8C", Offset = "0x132DD8C", VA = "0x132DD8C")]
	private bool isRenderModelNameSameAsPrevious()
	{
		return default(bool);
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x132FE2C", Offset = "0x132FE2C", VA = "0x132FE2C")]
	private void Start()
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x13300E4", Offset = "0x13300E4", VA = "0x13300E4")]
	private void Update()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x132DF50", Offset = "0x132DF50", VA = "0x132DF50")]
	private void onLoadController(WVR_DeviceType type)
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x1330C68", Offset = "0x1330C68", VA = "0x1330C68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9387A0", Offset = "0x9387A0")]
	private IEnumerator SpawnRenderModel()
	{
		return null;
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x1330668", Offset = "0x1330668", VA = "0x1330668")]
	private void updateBatteryLevel()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x1330070", Offset = "0x1330070", VA = "0x1330070")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x938804", Offset = "0x938804")]
	private IEnumerator checkRenderModelAndDelete()
	{
		return null;
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x132DB58", Offset = "0x132DB58", VA = "0x132DB58")]
	private void deleteChild(string reason)
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x1330DBC", Offset = "0x1330DBC", VA = "0x1330DBC")]
	private void DeleteControllerWhenDisconnect()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x132DCF0", Offset = "0x132DCF0", VA = "0x132DCF0")]
	private bool checkConnection()
	{
		return default(bool);
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x1330F80", Offset = "0x1330F80", VA = "0x1330F80")]
	public WaveVR_RenderModel()
	{
	}
}
[Serializable]
[Token(Token = "0x2000040")]
public class ButtonIndication
{
	[Token(Token = "0x200042E")]
	public enum Alignment
	{
		[Token(Token = "0x4001917")]
		RIGHT,
		[Token(Token = "0x4001918")]
		LEFT
	}

	[Token(Token = "0x200042F")]
	public enum KeyIndicator
	{
		[Token(Token = "0x400191A")]
		Trigger,
		[Token(Token = "0x400191B")]
		TouchPad,
		[Token(Token = "0x400191C")]
		DigitalTrigger,
		[Token(Token = "0x400191D")]
		App,
		[Token(Token = "0x400191E")]
		Home,
		[Token(Token = "0x400191F")]
		Volume,
		[Token(Token = "0x4001920")]
		VolumeUp,
		[Token(Token = "0x4001921")]
		VolumeDown,
		[Token(Token = "0x4001922")]
		Grip,
		[Token(Token = "0x4001923")]
		DPad_Left,
		[Token(Token = "0x4001924")]
		DPad_Right,
		[Token(Token = "0x4001925")]
		DPad_Up,
		[Token(Token = "0x4001926")]
		DPad_Down
	}

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public KeyIndicator keyType;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Alignment alignment;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 indicationOffset;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool useMultiLanguage;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string indicationText;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool followButtonRotation;

	[Token(Token = "0x6000368")]
	[Address(RVA = "0xB368D4", Offset = "0xB368D4", VA = "0xB368D4")]
	public ButtonIndication()
	{
	}
}
[Serializable]
[Token(Token = "0x2000041")]
public class ComponentsIndication
{
	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string Name;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Description;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject SourceObject;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject LineIndicator;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject DestObject;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ButtonIndication.Alignment alignment;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 Offset;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool followButtonRoration;

	[Token(Token = "0x6000369")]
	[Address(RVA = "0xB36FE4", Offset = "0xB36FE4", VA = "0xB36FE4")]
	public ComponentsIndication()
	{
	}
}
[Token(Token = "0x2000042")]
public class WaveVR_ShowIndicator : MonoBehaviour
{
	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9286E4", Offset = "0x9286E4")]
	public bool showIndicator;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x92871C", Offset = "0x92871C")]
	public float showIndicatorAngle;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool hideIndicatorByRoll;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool basedOnEmitter;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x928738", Offset = "0x928738")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x928738", Offset = "0x928738")]
	public float lineLength;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x928794", Offset = "0x928794")]
	public float lineStartWidth;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9287B4", Offset = "0x9287B4")]
	public float lineEndWidth;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color lineColor;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9287D4", Offset = "0x9287D4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9287D4", Offset = "0x9287D4")]
	public float textCharacterSize;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x928830", Offset = "0x928830")]
	public float zhCharactarSize;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x928850", Offset = "0x928850")]
	public int textFontSize;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Color textColor;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x928870", Offset = "0x928870")]
	public List<ButtonIndication> buttonIndicationList;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private WaveVR_Resource rw;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string sysLang;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private string sysCountry;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int checkCount;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject indicatorPrefab;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject linePrefab;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<ComponentsIndication> compInd;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameObject _HMD;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool needRedraw;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private GameObject Emitter;

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x13380DC", Offset = "0x13380DC", VA = "0x13380DC")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x133817C", Offset = "0x133817C", VA = "0x133817C")]
	private void PrintInfoLog(string msg)
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x133821C", Offset = "0x133821C", VA = "0x133821C")]
	private void resetIndicator()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x1338504", Offset = "0x1338504", VA = "0x1338504")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x13382CC", Offset = "0x13382CC", VA = "0x13382CC")]
	private void clearResourceAndObject()
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x1338510", Offset = "0x1338510", VA = "0x1338510")]
	private void onAdaptiveControllerModelReady(params object[] args)
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x133B904", Offset = "0x133B904", VA = "0x133B904")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x133B9A4", Offset = "0x133B9A4", VA = "0x133B9A4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x133BA44", Offset = "0x133BA44", VA = "0x133BA44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x1338514", Offset = "0x1338514", VA = "0x1338514")]
	public void createIndicator()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x133BA48", Offset = "0x133BA48", VA = "0x133BA48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x133C8E0", Offset = "0x133C8E0", VA = "0x133C8E0")]
	public WaveVR_ShowIndicator()
	{
	}
}
[Token(Token = "0x2000043")]
public interface IPointerHoverHandler : IEventSystemHandler
{
	[Token(Token = "0x6000377")]
	void OnPointerHover(PointerEventData eventData);
}
[Token(Token = "0x2000044")]
public class WaveVR_AddEventSystemGUI : MonoBehaviour
{
	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool added;

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x1222C40", Offset = "0x1222C40", VA = "0x1222C40")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0x1222DE4", Offset = "0x1222DE4", VA = "0x1222DE4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x1222E70", Offset = "0x1222E70", VA = "0x1222E70")]
	public WaveVR_AddEventSystemGUI()
	{
	}
}
[Token(Token = "0x2000045")]
public class WaveVR_EventSystemControllerProvider
{
	[Token(Token = "0x2000430")]
	public class ControllerModel
	{
		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x937CB8", Offset = "0x937CB8")]
		private WaveVR_Controller.EDeviceType <DeviceType>k__BackingField;

		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x937CC8", Offset = "0x937CC8")]
		private GameObject <Model>k__BackingField;

		[Token(Token = "0x4001929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x937CD8", Offset = "0x937CD8")]
		private bool <HasLoader>k__BackingField;

		[Token(Token = "0x170003AA")]
		public WaveVR_Controller.EDeviceType DeviceType
		{
			[Token(Token = "0x600205F")]
			[Address(RVA = "0xE494F4", Offset = "0xE494F4", VA = "0xE494F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93DFB8", Offset = "0x93DFB8")]
			get
			{
				return default(WaveVR_Controller.EDeviceType);
			}
			[Token(Token = "0x6002060")]
			[Address(RVA = "0xE49774", Offset = "0xE49774", VA = "0xE49774")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93DFC8", Offset = "0x93DFC8")]
			set
			{
			}
		}

		[Token(Token = "0x170003AB")]
		public GameObject Model
		{
			[Token(Token = "0x6002061")]
			[Address(RVA = "0xE494FC", Offset = "0xE494FC", VA = "0xE494FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93DFD8", Offset = "0x93DFD8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6002062")]
			[Address(RVA = "0xE49504", Offset = "0xE49504", VA = "0xE49504")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93DFE8", Offset = "0x93DFE8")]
			set
			{
			}
		}

		[Token(Token = "0x170003AC")]
		public bool HasLoader
		{
			[Token(Token = "0x6002063")]
			[Address(RVA = "0xE49768", Offset = "0xE49768", VA = "0xE49768")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93DFF8", Offset = "0x93DFF8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002064")]
			[Address(RVA = "0xE49650", Offset = "0xE49650", VA = "0xE49650")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E008", Offset = "0x93E008")]
			set
			{
			}
		}

		[Token(Token = "0x6002065")]
		[Address(RVA = "0xE4950C", Offset = "0xE4950C", VA = "0xE4950C")]
		public ControllerModel(WaveVR_Controller.EDeviceType type, GameObject model)
		{
		}
	}

	[Token(Token = "0x4000230")]
	private const string LOG_TAG = "WaveVR_EventSystemControllerProvider";

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static WaveVR_EventSystemControllerProvider instance;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<ControllerModel> ControllerModels;

	[Token(Token = "0x1700001D")]
	public static WaveVR_EventSystemControllerProvider Instance
	{
		[Token(Token = "0x600037C")]
		[Address(RVA = "0xE3367C", Offset = "0xE3367C", VA = "0xE3367C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0xE493DC", Offset = "0xE493DC", VA = "0xE493DC")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0xE49484", Offset = "0xE49484", VA = "0xE49484")]
	private WaveVR_EventSystemControllerProvider()
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0xE371C0", Offset = "0xE371C0", VA = "0xE371C0")]
	public void SetControllerModel(WaveVR_Controller.EDeviceType type, GameObject model)
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0xE4954C", Offset = "0xE4954C", VA = "0xE4954C")]
	public GameObject GetControllerModel(WaveVR_Controller.EDeviceType type)
	{
		return null;
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0xE3373C", Offset = "0xE3373C", VA = "0xE3373C")]
	public void MarkControllerLoader(WaveVR_Controller.EDeviceType type, bool value)
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0xE4965C", Offset = "0xE4965C", VA = "0xE4965C")]
	public bool HasControllerLoader(WaveVR_Controller.EDeviceType type)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000046")]
internal static class WaveVR_EventSystemGUIProvider
{
	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<GameObject> EventGUIs;

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xE4977C", Offset = "0xE4977C", VA = "0xE4977C")]
	public static void AddEventGUI(GameObject go)
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0xE49808", Offset = "0xE49808", VA = "0xE49808")]
	public static void RemoveEventGUI(GameObject go)
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0xE49894", Offset = "0xE49894", VA = "0xE49894")]
	public static GameObject[] GetEventGUIs()
	{
		return null;
	}
}
[Token(Token = "0x2000047")]
public static class WaveVR_ExecuteEvents
{
	[Token(Token = "0x1700001E")]
	public static ExecuteEvents.EventFunction<IPointerHoverHandler> pointerHoverHandler
	{
		[Token(Token = "0x6000388")]
		[Address(RVA = "0xE49AD8", Offset = "0xE49AD8", VA = "0xE49AD8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0xE499E0", Offset = "0xE499E0", VA = "0xE499E0")]
	private static void HoverExecutor(IPointerHoverHandler handler, BaseEventData eventData)
	{
	}
}
[Token(Token = "0x2000048")]
public class WaveVR_GazeInputModule : PointerInputModule
{
	[Token(Token = "0x2000431")]
	public enum EGazeTriggerMouseKey
	{
		[Token(Token = "0x400192B")]
		LeftClick,
		[Token(Token = "0x400192C")]
		RightClick,
		[Token(Token = "0x400192D")]
		MiddleClick
	}

	[Token(Token = "0x2000432")]
	public enum EGazeInputEvent
	{
		[Token(Token = "0x400192F")]
		PointerDown,
		[Token(Token = "0x4001930")]
		PointerClick,
		[Token(Token = "0x4001931")]
		PointerSubmit
	}

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool UseWaveVRReticle;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool useWaveVRReticle;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool TimerControl;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	private bool timerControlDefault;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float TimeToGaze;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool ProgressRate;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float RateTextZPosition;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool ProgressCounter;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float CounterTextZPosition;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public EGazeInputEvent InputEvent;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool ButtonControl;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<WaveVR_Controller.EDeviceType> ButtonControlDevices;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<WaveVR_ButtonList.EButtons> ButtonControlKeys;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject Head;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool btnPressDown;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool btnPressed;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
	private bool btnPressUp;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
	private bool HmdEnterPressDown;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float currUnscaledTime;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Vector3 gazeTargetPos;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private Vector3 gazeScreenPos;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 gazeScreenPos2D;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private PointerEventData pointerData;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private List<RaycastResult> physicsRaycastResultsGaze;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private List<GameObject> physicsRaycastObjectsGaze;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private List<GameObject> prePhysicsRaycastObjectsGaze;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private List<GameObject> physicsRaycastObjectsTmp;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private List<GameObject> prePhysicsRaycastObjectsTmp;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private List<RaycastResult> graphicRaycastResultsGaze;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private List<GameObject> graphicRaycastObjectsGaze;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private List<GameObject> preGraphicRaycastObjectsGaze;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private List<GameObject> graphicRaycastObjectsTmp;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private List<GameObject> preGraphicRaycastObjectsTmp;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private float gazeTime;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Text progressText;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Text counterText;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private WaveVR_Reticle gazePointer;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private GameObject percentCanvas;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private GameObject counterCanvas;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Vector3 ringPos;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private GameObject preGazeObject;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private bool mEnabled;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x161")]
	private bool mEnableGaze;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private RingMeshDrawer ringMesh;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private bool focusCapturedBySystem;

	[Token(Token = "0x6000389")]
	[Address(RVA = "0xE49DB8", Offset = "0xE49DB8", VA = "0xE49DB8")]
	private void DEBUG(string msg)
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0xE49E98", Offset = "0xE49E98", VA = "0xE49E98")]
	public void EnableTimerControl(bool enable)
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0xE49F6C", Offset = "0xE49F6C", VA = "0xE49F6C")]
	private Vector3 GetIntersectionPosition(Camera cam, RaycastResult raycastResult)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0xE4A150", Offset = "0xE4A150", VA = "0xE4A150")]
	private void ResetPointerEventData()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0xE4A248", Offset = "0xE4A248", VA = "0xE4A248")]
	private void CastToCenterOfScreen()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0xE4B898", Offset = "0xE4B898", VA = "0xE4B898")]
	private void EnterExitPhysicsObject()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0xE4BC40", Offset = "0xE4BC40", VA = "0xE4BC40")]
	private void EnterExitGraphicObject()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0xE4BFE8", Offset = "0xE4BFE8", VA = "0xE4BFE8")]
	private void ExitAllObjects()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0xE4B3EC", Offset = "0xE4B3EC", VA = "0xE4B3EC")]
	private void PhysicsRaycast(PhysicsRaycaster raycaster)
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0xE4A41C", Offset = "0xE4A41C", VA = "0xE4A41C")]
	private void GraphicRaycast(Camera event_camera)
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0xE4C28C", Offset = "0xE4C28C", VA = "0xE4C28C")]
	private GameObject GetCurrentGameObject(PointerEventData pointerData)
	{
		return null;
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0xE4C36C", Offset = "0xE4C36C", VA = "0xE4C36C")]
	private Vector3 GetIntersectionPosition(PointerEventData pointerData)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0xE4C5AC", Offset = "0xE4C5AC", VA = "0xE4C5AC")]
	private void UpdateProgressDistance(PointerEventData pointerEvent)
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0xE4C874", Offset = "0xE4C874", VA = "0xE4C874")]
	private void UpdateReticle(GameObject preGazedObject, PointerEventData pointerEvent)
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0xE4CC40", Offset = "0xE4CC40", VA = "0xE4CC40")]
	private void UpdateButtonStates()
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0xE4CEE0", Offset = "0xE4CEE0", VA = "0xE4CEE0")]
	private void UpdateProgressText()
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0xE4D24C", Offset = "0xE4D24C", VA = "0xE4D24C")]
	private void UpdateCounterText()
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0xE4D5F4", Offset = "0xE4D5F4", VA = "0xE4D5F4")]
	private void OnTriggeGaze()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0xE4DED0", Offset = "0xE4DED0", VA = "0xE4DED0")]
	private void GazeControl()
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0xE4E09C", Offset = "0xE4E09C", VA = "0xE4E09C", Slot = "5")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0xE4E4E8", Offset = "0xE4E4E8", VA = "0xE4E4E8", Slot = "7")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0xE4EB64", Offset = "0xE4EB64", VA = "0xE4EB64", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0xE4EDBC", Offset = "0xE4EDBC", VA = "0xE4EDBC")]
	public void ActivatePointerAndRing(bool active)
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0xE4E578", Offset = "0xE4E578", VA = "0xE4E578")]
	private void ActivateGazePointerCanvas(bool active)
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0xE4E904", Offset = "0xE4E904", VA = "0xE4E904")]
	private void ActivateMeshDrawer(bool active)
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0xE4EE10", Offset = "0xE4EE10", VA = "0xE4EE10")]
	public WaveVR_GazeInputModule()
	{
	}
}
[Token(Token = "0x2000049")]
public enum WaveVR_EInputModule
{
	[Token(Token = "0x4000263")]
	Controller,
	[Token(Token = "0x4000264")]
	Gaze
}
[Token(Token = "0x200004A")]
public class WaveVR_InputModuleManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000433")]
	public class CGazeInputModule
	{
		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool UseWaveVRReticle;

		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool TimerControl;

		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float TimeToGaze;

		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool ProgressRate;

		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float RateTextZPosition;

		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool ProgressCounter;

		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float CounterTextZPosition;

		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WaveVR_GazeInputModule.EGazeInputEvent InputEvent;

		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool ButtonControl;

		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<WaveVR_Controller.EDeviceType> ButtonControlDevices;

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<WaveVR_ButtonList.EButtons> ButtonControlKeys;

		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject Head;

		[Token(Token = "0x6002066")]
		[Address(RVA = "0xD895A8", Offset = "0xD895A8", VA = "0xD895A8")]
		public CGazeInputModule()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000434")]
	public class CControllerInputModule
	{
		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool DominantEventEnabled;

		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject DominantController;

		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LayerMask DominantRaycastMask;

		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool NonDominantEventEnabled;

		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject NonDominantController;

		[Token(Token = "0x4001943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LayerMask NonDominantRaycastMask;

		[Token(Token = "0x4001944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<WaveVR_ButtonList.EButtons> ButtonToTrigger;

		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public WaveVR_ControllerInputModule.ERaycastMode RaycastMode;

		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public ERaycastStartPoint RaycastStartPoint;

		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x937CE8", Offset = "0x937CE8")]
		public string CanvasTag;

		[Token(Token = "0x6002067")]
		[Address(RVA = "0xD89660", Offset = "0xD89660", VA = "0xD89660")]
		public CControllerInputModule()
		{
		}
	}

	[Token(Token = "0x4000265")]
	private const string LOG_TAG = "WaveVR_InputModuleManager";

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableInputModule;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool OverrideSystemSettings;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool AutoGaze;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool AlwaysShowController;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public WaveVR_EInputModule CustomInputModule;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CGazeInputModule Gaze;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CControllerInputModule Controller;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float FixedBeamLength;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static WaveVR_InputModuleManager instance;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool preOverrideSystemSettings;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WaveVR_EInputModule InteractionMode_User;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private WVR_InteractionMode InteractionMode_System;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WVR_InteractionMode InteractionMode_Current;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private WVR_GazeTriggerType gazeTriggerType_User;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private WVR_GazeTriggerType gazeTriggerType_System;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private WVR_GazeTriggerType gazeTriggerType_User_pre;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject Head;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject eventSystem;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private WaveVR_GazeInputModule gazeInputModule;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private WaveVR_ControllerInputModule controllerInputModule;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private MeshRenderer gazePointerRenderer;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private MeshRenderer gazeRingRenderer;

	[Token(Token = "0x1700001F")]
	public static WaveVR_InputModuleManager Instance
	{
		[Token(Token = "0x60003A5")]
		[Address(RVA = "0xD869E8", Offset = "0xD869E8", VA = "0xD869E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0xD86940", Offset = "0xD86940", VA = "0xD86940")]
	private void DEBUG(string msg)
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0xD86A50", Offset = "0xD86A50", VA = "0xD86A50")]
	private void initInteractionModeAndGazeTriggerType()
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0xD872DC", Offset = "0xD872DC", VA = "0xD872DC")]
	private void updateInteractionModeAndGazeTriggerType()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0xD87004", Offset = "0xD87004", VA = "0xD87004")]
	private void updateGazeTriggerType_User()
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0xD877CC", Offset = "0xD877CC", VA = "0xD877CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0xD8789C", Offset = "0xD8789C", VA = "0xD8789C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0xD88068", Offset = "0xD88068", VA = "0xD88068")]
	public void Update()
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0xD87EC0", Offset = "0xD87EC0", VA = "0xD87EC0")]
	private void ActivateGazePointer(bool active)
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0xD884D4", Offset = "0xD884D4", VA = "0xD884D4")]
	private void CreateGazeInputModule()
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0xD885C4", Offset = "0xD885C4", VA = "0xD885C4")]
	private void SetGazeInputModuleParameters()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xD88870", Offset = "0xD88870", VA = "0xD88870")]
	private void updateGazeInputModule()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0xD889F4", Offset = "0xD889F4", VA = "0xD889F4")]
	private void SetActiveGaze(bool value)
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0xD88ABC", Offset = "0xD88ABC", VA = "0xD88ABC")]
	public void UseWaveVRReticle(bool use)
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0xD88B80", Offset = "0xD88B80", VA = "0xD88B80")]
	private void CreateControllerInputModule()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0xD88C70", Offset = "0xD88C70", VA = "0xD88C70")]
	private void SetControllerInputModuleParameters()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0xD89034", Offset = "0xD89034", VA = "0xD89034")]
	private void updateControllerInputModule()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0xD890D4", Offset = "0xD890D4", VA = "0xD890D4")]
	private void SetActiveController(bool value)
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0xD8919C", Offset = "0xD8919C", VA = "0xD8919C")]
	private bool IsAnyControllerConnected()
	{
		return default(bool);
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0xD87068", Offset = "0xD87068", VA = "0xD87068")]
	private void initializeInputModuleByCustomSettings()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0xD8718C", Offset = "0xD8718C", VA = "0xD8718C")]
	private void initializeInputModuleBySystemSetting()
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0xD8803C", Offset = "0xD8803C", VA = "0xD8803C")]
	private void disableAllInputModules()
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0xD87660", Offset = "0xD87660", VA = "0xD87660")]
	private void updateInputModuleByCustomSettings()
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0xD87714", Offset = "0xD87714", VA = "0xD87714")]
	private void updateInputModuleBySystemSetting()
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0xD89370", Offset = "0xD89370", VA = "0xD89370")]
	public WaveVR_ControllerInputModule.ERaycastMode GetRaycastMode()
	{
		return default(WaveVR_ControllerInputModule.ERaycastMode);
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0xD872B4", Offset = "0xD872B4", VA = "0xD872B4")]
	public WVR_InteractionMode GetInteractionMode()
	{
		return default(WVR_InteractionMode);
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0xD89418", Offset = "0xD89418", VA = "0xD89418")]
	public WVR_GazeTriggerType GetGazeTriggerType()
	{
		return default(WVR_GazeTriggerType);
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0xD89434", Offset = "0xD89434", VA = "0xD89434")]
	public WVR_GazeTriggerType GetUserGazeTriggerType()
	{
		return default(WVR_GazeTriggerType);
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0xD8943C", Offset = "0xD8943C", VA = "0xD8943C")]
	public void SetControllerBeamLength(WaveVR_Controller.EDeviceType dt, float length)
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0xD89500", Offset = "0xD89500", VA = "0xD89500")]
	public WaveVR_InputModuleManager()
	{
	}
}
[Token(Token = "0x200004B")]
public class WaveVR_RaycastResult
{
	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9288A8", Offset = "0x9288A8")]
	private GameObject <gameObject>k__BackingField;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9288B8", Offset = "0x9288B8")]
	private Vector3 <worldPosition>k__BackingField;

	[Token(Token = "0x17000020")]
	public GameObject gameObject
	{
		[Token(Token = "0x60003C3")]
		[Address(RVA = "0xD904EC", Offset = "0xD904EC", VA = "0xD904EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938868", Offset = "0x938868")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003C4")]
		[Address(RVA = "0xD904F4", Offset = "0xD904F4", VA = "0xD904F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938878", Offset = "0x938878")]
		set
		{
		}
	}

	[Token(Token = "0x17000021")]
	public Vector3 worldPosition
	{
		[Token(Token = "0x60003C5")]
		[Address(RVA = "0xD904FC", Offset = "0xD904FC", VA = "0xD904FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938888", Offset = "0x938888")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60003C6")]
		[Address(RVA = "0xD90508", Offset = "0xD90508", VA = "0xD90508")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938898", Offset = "0x938898")]
		set
		{
		}
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0xD90514", Offset = "0xD90514", VA = "0xD90514")]
	public WaveVR_RaycastResult()
	{
	}
}
[Token(Token = "0x200004C")]
public class WaveVR_RaycastResultProvider
{
	[Token(Token = "0x2000435")]
	public class ERaycastResult
	{
		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WaveVR_Controller.EDeviceType Type;

		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WaveVR_RaycastResult Result;

		[Token(Token = "0x6002068")]
		[Address(RVA = "0xD9086C", Offset = "0xD9086C", VA = "0xD9086C")]
		public ERaycastResult(WaveVR_Controller.EDeviceType type, WaveVR_RaycastResult result)
		{
		}
	}

	[Token(Token = "0x400027E")]
	private const string LOG_TAG = "WaveVR_RaycastResultProvider";

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static WaveVR_RaycastResultProvider instance;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<ERaycastResult> RaycastResults;

	[Token(Token = "0x17000022")]
	public static WaveVR_RaycastResultProvider Instance
	{
		[Token(Token = "0x60003C9")]
		[Address(RVA = "0xD9060C", Offset = "0xD9060C", VA = "0xD9060C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0xD90594", Offset = "0xD90594", VA = "0xD90594")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0xD906CC", Offset = "0xD906CC", VA = "0xD906CC")]
	private WaveVR_RaycastResultProvider()
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0xD908A8", Offset = "0xD908A8", VA = "0xD908A8")]
	public void SetRaycastResult(WaveVR_Controller.EDeviceType device, GameObject gameObject, Vector3 worldPosition)
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0xD90A24", Offset = "0xD90A24", VA = "0xD90A24")]
	public WaveVR_RaycastResult GetRaycastResult(WVR_DeviceType type)
	{
		return null;
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0xD90AA4", Offset = "0xD90AA4", VA = "0xD90AA4")]
	public WaveVR_RaycastResult GetRaycastResult(WaveVR_Controller.EDeviceType device)
	{
		return null;
	}
}
[Token(Token = "0x200004D")]
public class WaveVR_SetAsEventSystemController : MonoBehaviour
{
	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool added;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public WaveVR_Controller.EDeviceType Type;

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x1337F7C", Offset = "0x1337F7C", VA = "0x1337F7C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x133802C", Offset = "0x133802C", VA = "0x133802C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x13380CC", Offset = "0x13380CC", VA = "0x13380CC")]
	public WaveVR_SetAsEventSystemController()
	{
	}
}
[Token(Token = "0x200004E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x92537C", Offset = "0x92537C")]
public class WaveVR_GesturePointer : MonoBehaviour
{
	[Token(Token = "0x2000436")]
	private enum DrawMode
	{
		[Token(Token = "0x400194B")]
		FORWARD,
		[Token(Token = "0x400194C")]
		UPWARD
	}

	[Token(Token = "0x4000283")]
	private const string LOG_TAG = "WaveVR_GesturePointer";

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9288C8", Offset = "0x9288C8")]
	public WaveVR_GestureManager.EGestureHand Hand;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private DrawMode drawMode;

	[Token(Token = "0x4000286")]
	private const float DEF_RING_WIDTH = 0.005f;

	[Token(Token = "0x4000287")]
	private const float MIN_RING_WIDTH = 0.001f;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x928900", Offset = "0x928900")]
	public float PointerRingWidth;

	[Token(Token = "0x4000289")]
	private const float DEF_INNER_CIRCLE_RADIUS = 0.005f;

	[Token(Token = "0x400028A")]
	private const float MIN_INNER_CIRCLE_RADIUS = 0.001f;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x928938", Offset = "0x928938")]
	public float PointerCircleRadius;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 pointerOffset;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 pointerFrameOffset;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 pointerWorldPosition;

	[Token(Token = "0x400028F")]
	private const float DEF_POINTER_DISTANCE = 1f;

	[Token(Token = "0x4000290")]
	private const float MIN_POINTER_DISTANCE = 0.1f;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x928970", Offset = "0x928970")]
	public float PointerDistance;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float pointerDistance;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9289A8", Offset = "0x9289A8")]
	public Color PointerColor;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9289E0", Offset = "0x9289E0")]
	public Color ProgressColor;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Mesh mMesh;

	[Token(Token = "0x4000296")]
	private const string POINTER_MATERIAL_NAME = "RingUnlitTransparentMat";

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x928A18", Offset = "0x928A18")]
	public Material PointerMaterial;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Material pointerMaterialInstance;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private MeshRenderer pointerMeshRend;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private MeshFilter pointerMeshFilter;

	[Token(Token = "0x400029B")]
	private const int POINTER_MATERIAL_RENDER_QUEUE_MIN = 1000;

	[Token(Token = "0x400029C")]
	private const int POINTER_MATERIAL_RENDER_QUEUE_MAX = 5000;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x928A50", Offset = "0x928A50")]
	public int PointerRenderQueue;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x928A88", Offset = "0x928A88")]
	public int PointerSortingOrder;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool isHovering;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	[HideInInspector]
	public bool ShowPointer;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
	private bool mEnabled;

	[Token(Token = "0x40002A2")]
	private const int VERTEX_COUNT = 400;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3[] ringVert;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Color[] ringColor;

	[Token(Token = "0x40002A5")]
	private const int TRIANGLE_COUNT = 600;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int[] ringTriangle;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector2[] ringUv;

	[Token(Token = "0x40002A8")]
	private const float percentAngle = 3.6f;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int frameCount;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private int frameInterval;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int beginVertex;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private int endVertex;

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xD7E6E4", Offset = "0xD7E6E4", VA = "0xD7E6E4")]
	private void DEBUG(string msg)
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0xD7E78C", Offset = "0xD7E78C", VA = "0xD7E78C")]
	private bool ValidateParameters()
	{
		return default(bool);
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0xD7E8B4", Offset = "0xD7E8B4", VA = "0xD7E8B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0xD7F19C", Offset = "0xD7F19C", VA = "0xD7F19C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0xD7F268", Offset = "0xD7F268", VA = "0xD7F268")]
	private void Update()
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0xD7EC0C", Offset = "0xD7EC0C", VA = "0xD7EC0C")]
	private void SetPointerActive(bool active)
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0xD7F6E0", Offset = "0xD7F6E0", VA = "0xD7F6E0")]
	private void DrawRingRoll(float radius, float innerRadius, Vector3 offset, bool active)
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0xD80024", Offset = "0xD80024", VA = "0xD80024")]
	public Vector3 GetPointerPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0xD80030", Offset = "0xD80030", VA = "0xD80030")]
	public void OnHover(bool hovering, Vector3 intersecPosition)
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0xD7A72C", Offset = "0xD7A72C", VA = "0xD7A72C")]
	public void OnHover(bool hovering)
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0xD80044", Offset = "0xD80044", VA = "0xD80044")]
	public WaveVR_GesturePointer()
	{
	}
}
[Token(Token = "0x200004F")]
public class WaveVR_GesturePointerProvider
{
	[Token(Token = "0x2000437")]
	private class GesturePointer
	{
		[Token(Token = "0x400194D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x937D20", Offset = "0x937D20")]
		private WaveVR_GestureManager.EGestureHand <Hand>k__BackingField;

		[Token(Token = "0x400194E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x937D30", Offset = "0x937D30")]
		private GameObject <Pointer>k__BackingField;

		[Token(Token = "0x170003AD")]
		public WaveVR_GestureManager.EGestureHand Hand
		{
			[Token(Token = "0x6002069")]
			[Address(RVA = "0xD80448", Offset = "0xD80448", VA = "0xD80448")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E018", Offset = "0x93E018")]
			get
			{
				return default(WaveVR_GestureManager.EGestureHand);
			}
			[Token(Token = "0x600206A")]
			[Address(RVA = "0xD80450", Offset = "0xD80450", VA = "0xD80450")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E028", Offset = "0x93E028")]
			set
			{
			}
		}

		[Token(Token = "0x170003AE")]
		public GameObject Pointer
		{
			[Token(Token = "0x600206B")]
			[Address(RVA = "0xD80434", Offset = "0xD80434", VA = "0xD80434")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E038", Offset = "0x93E038")]
			get
			{
				return null;
			}
			[Token(Token = "0x600206C")]
			[Address(RVA = "0xD8043C", Offset = "0xD8043C", VA = "0xD8043C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E048", Offset = "0x93E048")]
			set
			{
			}
		}

		[Token(Token = "0x600206D")]
		[Address(RVA = "0xD803F8", Offset = "0xD803F8", VA = "0xD803F8")]
		public GesturePointer(WaveVR_GestureManager.EGestureHand type, GameObject pointer)
		{
		}
	}

	[Token(Token = "0x40002AD")]
	private const string LOG_TAG = "WaveVR_GesturePointerProvider";

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private List<GesturePointer> gesturePointers;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WaveVR_GestureManager.EGestureHand[] gestureHandList;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static WaveVR_GesturePointerProvider instance;

	[Token(Token = "0x17000023")]
	public static WaveVR_GesturePointerProvider Instance
	{
		[Token(Token = "0x60003DE")]
		[Address(RVA = "0xD77C20", Offset = "0xD77C20", VA = "0xD77C20")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0xD801D4", Offset = "0xD801D4", VA = "0xD801D4")]
	private void DEBUG(string msg)
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0xD8027C", Offset = "0xD8027C", VA = "0xD8027C")]
	private WaveVR_GesturePointerProvider()
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0xD7ED7C", Offset = "0xD7ED7C", VA = "0xD7ED7C")]
	public void SetGesturePointer(WaveVR_GestureManager.EGestureHand hand, GameObject pointer)
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0xD77CE0", Offset = "0xD77CE0", VA = "0xD77CE0")]
	public GameObject GetGesturePointer(WaveVR_GestureManager.EGestureHand hand)
	{
		return null;
	}
}
[Token(Token = "0x2000050")]
public class WaveVR_GestureInputModule : BaseInputModule
{
	[Token(Token = "0x40002B1")]
	private const string LOG_TAG = "WaveVR_GestureInputModule";

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x928AD0", Offset = "0x928AD0")]
	public bool EnableEvent;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x928B08", Offset = "0x928B08")]
	public WaveVR_GestureManager.EStaticGestures SelectGesture;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private bool forceModuleActive;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private WVR_HandGestureType currentGestureRight;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private WVR_HandGestureType previousGestureRight;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private WVR_HandGestureType currentGestureLeft;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private WVR_HandGestureType previousGestureLeft;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private WaveVR_GestureManager.EGestureHand gestureFocusHand;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject pointerObject;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private WaveVR_GesturePointer gesturePointer;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Camera eventCamera;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private PhysicsRaycaster pointerPhysicsRaycaster;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private PointerEventData mPointerEventData;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private readonly Vector2 centerOfScreen;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject prevRaycastedObject;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool mInputModuleEnabled;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private RaycastResult firstRaycastResult;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private GraphicRaycaster[] graphic_raycasters;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private List<RaycastResult> graphicRaycastResults;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private List<GameObject> graphicRaycastObjects;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private List<GameObject> preGraphicRaycastObjects;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private List<RaycastResult> physicsRaycastResults;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private List<GameObject> physicsRaycastObjects;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private List<GameObject> prePhysicsRaycastObjects;

	[Token(Token = "0x40002CA")]
	private const float DRAG_TIME = 0.3f;

	[Token(Token = "0x17000024")]
	public bool ForceModuleActive
	{
		[Token(Token = "0x60003E5")]
		[Address(RVA = "0xD77780", Offset = "0xD77780", VA = "0xD77780")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003E6")]
		[Address(RVA = "0xD77788", Offset = "0xD77788", VA = "0xD77788")]
		set
		{
		}
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0xD7761C", Offset = "0xD7761C", VA = "0xD7761C")]
	private void DEBUG(string msg)
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0xD77708", Offset = "0xD77708", VA = "0xD77708")]
	private void INFO(string msg)
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0xD77794", Offset = "0xD77794", VA = "0xD77794", Slot = "25")]
	public override bool IsModuleSupported()
	{
		return default(bool);
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0xD7779C", Offset = "0xD7779C", VA = "0xD7779C", Slot = "21")]
	public override bool ShouldActivateModule()
	{
		return default(bool);
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0xD777D0", Offset = "0xD777D0", VA = "0xD777D0", Slot = "22")]
	public override void DeactivateModule()
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xD777D8", Offset = "0xD777D8", VA = "0xD777D8")]
	private bool ValidateParameters()
	{
		return default(bool);
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0xD78040", Offset = "0xD78040", VA = "0xD78040")]
	private void ResetPointerEventData()
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0xD781FC", Offset = "0xD781FC", VA = "0xD781FC")]
	private GameObject GetRaycastedObject()
	{
		return null;
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0xD78260", Offset = "0xD78260", VA = "0xD78260")]
	private Vector3 GetIntersectionPosition(RaycastResult raycastResult)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0xD7842C", Offset = "0xD7842C", VA = "0xD7842C", Slot = "5")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xD78520", Offset = "0xD78520", VA = "0xD78520", Slot = "7")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0xD7858C", Offset = "0xD7858C", VA = "0xD7858C", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xD788AC", Offset = "0xD788AC", VA = "0xD788AC")]
	private void GraphicRaycast()
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xD798B4", Offset = "0xD798B4", VA = "0xD798B4")]
	private void PhysicsRaycast()
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xD79ED4", Offset = "0xD79ED4", VA = "0xD79ED4")]
	private void OnGraphicPointerEnterExit()
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0xD7A2B0", Offset = "0xD7A2B0", VA = "0xD7A2B0")]
	private void OnPhysicsPointerEnterExit()
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0xD7A68C", Offset = "0xD7A68C", VA = "0xD7A68C")]
	private void OnPointerHover()
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0xD7A738", Offset = "0xD7A738", VA = "0xD7A738")]
	private void OnPointerDown()
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0xD7AE70", Offset = "0xD7AE70", VA = "0xD7AE70")]
	private void OnPointerDrag()
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0xD7B0B0", Offset = "0xD7B0B0", VA = "0xD7B0B0")]
	private void OnPointerUp()
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0xD7B7F8", Offset = "0xD7B7F8", VA = "0xD7B7F8")]
	private void CopyList(List<GameObject> src, List<GameObject> dst)
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0xD7B8F4", Offset = "0xD7B8F4", VA = "0xD7B8F4")]
	public WaveVR_GestureInputModule()
	{
	}
}
[Token(Token = "0x2000051")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9253FC", Offset = "0x9253FC")]
public class WaveVR_GesturePointerTracker : MonoBehaviour
{
	[Token(Token = "0x40002CB")]
	private const string LOG_TAG = "WaveVR_GesturePointerTracker";

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static WaveVR_GesturePointerTracker instance;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WaveVR_GestureManager.EGestureHand gestureFocusHand;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject pointerObject;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private WaveVR_GesturePointer gesturePointer;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 pointerPosition;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 lookDirection;

	[Token(Token = "0x17000025")]
	public static WaveVR_GesturePointerTracker Instance
	{
		[Token(Token = "0x60003FC")]
		[Address(RVA = "0xD77F38", Offset = "0xD77F38", VA = "0xD77F38")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0xD80458", Offset = "0xD80458", VA = "0xD80458")]
	private void DEBUG(string msg)
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0xD80500", Offset = "0xD80500", VA = "0xD80500")]
	private bool ValidateParameters()
	{
		return default(bool);
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0xD80694", Offset = "0xD80694", VA = "0xD80694")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0xD80700", Offset = "0xD80700", VA = "0xD80700")]
	private void Start()
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0xD808DC", Offset = "0xD808DC", VA = "0xD808DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0xD77FA0", Offset = "0xD77FA0", VA = "0xD77FA0")]
	public Camera GetPointerTrackerCamera()
	{
		return null;
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0xD77FF0", Offset = "0xD77FF0", VA = "0xD77FF0")]
	public PhysicsRaycaster GetPhysicsRaycaster()
	{
		return null;
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0xD80A7C", Offset = "0xD80A7C", VA = "0xD80A7C")]
	public WaveVR_GesturePointerTracker()
	{
	}
}
[Token(Token = "0x2000052")]
public abstract class IWaveVR_BonePose : MonoBehaviour
{
	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static WaveVR_BonePoseImpl instance;

	[Token(Token = "0x17000026")]
	public static WaveVR_BonePoseImpl Instance
	{
		[Token(Token = "0x6000405")]
		[Address(RVA = "0xDC0D34", Offset = "0xDC0D34", VA = "0xDC0D34")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0xDC0E04", Offset = "0xDC0E04", VA = "0xDC0E04")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0xDC0EB0", Offset = "0xDC0EB0", VA = "0xDC0EB0")]
	public WaveVR_Utils.RigidTransform GetBoneTransform(WaveVR_BonePoseImpl.Bones bone_type)
	{
		return default(WaveVR_Utils.RigidTransform);
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0xDC0F3C", Offset = "0xDC0F3C", VA = "0xDC0F3C")]
	public bool IsBonePoseValid(WaveVR_BonePoseImpl.Bones bone_type)
	{
		return default(bool);
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0xDC0FB8", Offset = "0xDC0FB8", VA = "0xDC0FB8")]
	public bool IsHandPoseValid(WaveVR_GestureManager.EGestureHand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0xDC1034", Offset = "0xDC1034", VA = "0xDC1034")]
	protected IWaveVR_BonePose()
	{
	}
}
[Token(Token = "0x2000053")]
public class WaveVR_BonePose : IWaveVR_BonePose
{
	[Token(Token = "0x40002D3")]
	private const string LOG_TAG = "WaveVR_BonePose";

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x928B50", Offset = "0x928B50")]
	public WaveVR_BonePoseImpl.Bones BoneType;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x928B88", Offset = "0x928B88")]
	public bool HideInvalidBone;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool mEnabled;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshRenderer meshRend;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<GameObject> childrenObjects;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<bool> childrenObjectsState;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool objectsShown;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private WaveVR_Utils.RigidTransform boneTransform;

	[Token(Token = "0x17000027")]
	public bool Valid
	{
		[Token(Token = "0x600040E")]
		[Address(RVA = "0x12280B4", Offset = "0x12280B4", VA = "0x12280B4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000028")]
	public Vector3 Position
	{
		[Token(Token = "0x6000410")]
		[Address(RVA = "0x12280CC", Offset = "0x12280CC", VA = "0x12280CC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000029")]
	public Quaternion Rotation
	{
		[Token(Token = "0x6000411")]
		[Address(RVA = "0x12280FC", Offset = "0x12280FC", VA = "0x12280FC")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x1227FBC", Offset = "0x1227FBC", VA = "0x1227FBC")]
	private void DEBUG(string msg)
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x12280A8", Offset = "0x12280A8", VA = "0x12280A8")]
	public bool IsBonePoseValid()
	{
		return default(bool);
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x12280C0", Offset = "0x12280C0", VA = "0x12280C0")]
	public WaveVR_Utils.RigidTransform GetBoneTransform()
	{
		return default(WaveVR_Utils.RigidTransform);
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x122812C", Offset = "0x122812C", VA = "0x122812C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x12285E4", Offset = "0x12285E4", VA = "0x12285E4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x12288F0", Offset = "0x12288F0", VA = "0x12288F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x1228D7C", Offset = "0x1228D7C", VA = "0x1228D7C")]
	private void ActivateObjects()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x1228650", Offset = "0x1228650", VA = "0x1228650")]
	private void ForceActivateObjects(bool active)
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x1228E60", Offset = "0x1228E60", VA = "0x1228E60")]
	public WaveVR_BonePose()
	{
	}
}
[Token(Token = "0x2000054")]
public class WaveVR_BonePoseImpl
{
	[Token(Token = "0x2000438")]
	public enum Bones
	{
		[Token(Token = "0x4001950")]
		ROOT,
		[Token(Token = "0x4001951")]
		LEFT_WRIST,
		[Token(Token = "0x4001952")]
		LEFT_THUMB_JOINT1,
		[Token(Token = "0x4001953")]
		LEFT_THUMB_JOINT2,
		[Token(Token = "0x4001954")]
		LEFT_THUMB_JOINT3,
		[Token(Token = "0x4001955")]
		LEFT_THUMB_TIP,
		[Token(Token = "0x4001956")]
		LEFT_INDEX_JOINT1,
		[Token(Token = "0x4001957")]
		LEFT_INDEX_JOINT2,
		[Token(Token = "0x4001958")]
		LEFT_INDEX_JOINT3,
		[Token(Token = "0x4001959")]
		LEFT_INDEX_TIP,
		[Token(Token = "0x400195A")]
		LEFT_MIDDLE_JOINT1,
		[Token(Token = "0x400195B")]
		LEFT_MIDDLE_JOINT2,
		[Token(Token = "0x400195C")]
		LEFT_MIDDLE_JOINT3,
		[Token(Token = "0x400195D")]
		LEFT_MIDDLE_TIP,
		[Token(Token = "0x400195E")]
		LEFT_RING_JOINT1,
		[Token(Token = "0x400195F")]
		LEFT_RING_JOINT2,
		[Token(Token = "0x4001960")]
		LEFT_RING_JOINT3,
		[Token(Token = "0x4001961")]
		LEFT_RING_TIP,
		[Token(Token = "0x4001962")]
		LEFT_PINKY_JOINT1,
		[Token(Token = "0x4001963")]
		LEFT_PINKY_JOINT2,
		[Token(Token = "0x4001964")]
		LEFT_PINKY_JOINT3,
		[Token(Token = "0x4001965")]
		LEFT_PINKY_TIP,
		[Token(Token = "0x4001966")]
		RIGHT_WRIST,
		[Token(Token = "0x4001967")]
		RIGHT_THUMB_JOINT1,
		[Token(Token = "0x4001968")]
		RIGHT_THUMB_JOINT2,
		[Token(Token = "0x4001969")]
		RIGHT_THUMB_JOINT3,
		[Token(Token = "0x400196A")]
		RIGHT_THUMB_TIP,
		[Token(Token = "0x400196B")]
		RIGHT_INDEX_JOINT1,
		[Token(Token = "0x400196C")]
		RIGHT_INDEX_JOINT2,
		[Token(Token = "0x400196D")]
		RIGHT_INDEX_JOINT3,
		[Token(Token = "0x400196E")]
		RIGHT_INDEX_TIP,
		[Token(Token = "0x400196F")]
		RIGHT_MIDDLE_JOINT1,
		[Token(Token = "0x4001970")]
		RIGHT_MIDDLE_JOINT2,
		[Token(Token = "0x4001971")]
		RIGHT_MIDDLE_JOINT3,
		[Token(Token = "0x4001972")]
		RIGHT_MIDDLE_TIP,
		[Token(Token = "0x4001973")]
		RIGHT_RING_JOINT1,
		[Token(Token = "0x4001974")]
		RIGHT_RING_JOINT2,
		[Token(Token = "0x4001975")]
		RIGHT_RING_JOINT3,
		[Token(Token = "0x4001976")]
		RIGHT_RING_TIP,
		[Token(Token = "0x4001977")]
		RIGHT_PINKY_JOINT1,
		[Token(Token = "0x4001978")]
		RIGHT_PINKY_JOINT2,
		[Token(Token = "0x4001979")]
		RIGHT_PINKY_JOINT3,
		[Token(Token = "0x400197A")]
		RIGHT_PINKY_TIP
	}

	[Token(Token = "0x2000439")]
	private class BoneData
	{
		[Token(Token = "0x400197B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private WaveVR_Utils.RigidTransform rigidTransform;

		[Token(Token = "0x400197C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool valid;

		[Token(Token = "0x600206E")]
		[Address(RVA = "0x1229298", Offset = "0x1229298", VA = "0x1229298")]
		public BoneData()
		{
		}

		[Token(Token = "0x600206F")]
		[Address(RVA = "0x122C4D4", Offset = "0x122C4D4", VA = "0x122C4D4")]
		public WaveVR_Utils.RigidTransform GetTransform()
		{
			return default(WaveVR_Utils.RigidTransform);
		}

		[Token(Token = "0x6002070")]
		[Address(RVA = "0x122C7C0", Offset = "0x122C7C0", VA = "0x122C7C0")]
		public Vector3 GetPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002071")]
		[Address(RVA = "0x122C6F4", Offset = "0x122C6F4", VA = "0x122C6F4")]
		public void SetPosition(Vector3 in_pos)
		{
		}

		[Token(Token = "0x6002072")]
		[Address(RVA = "0x122C7CC", Offset = "0x122C7CC", VA = "0x122C7CC")]
		public Quaternion GetRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6002073")]
		[Address(RVA = "0x122C700", Offset = "0x122C700", VA = "0x122C700")]
		public void SetRotation(Quaternion in_rot)
		{
		}

		[Token(Token = "0x6002074")]
		[Address(RVA = "0x122C7D8", Offset = "0x122C7D8", VA = "0x122C7D8")]
		public bool IsValidPose()
		{
			return default(bool);
		}

		[Token(Token = "0x6002075")]
		[Address(RVA = "0x1229304", Offset = "0x1229304", VA = "0x1229304")]
		public void SetValidPose(bool in_valid)
		{
		}
	}

	[Token(Token = "0x40002DC")]
	private const string LOG_TAG = "WaveVR_BonePoseImpl";

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Bones[] leftBones;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Bones[] rightBones;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private BoneData[] boneDatas;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int prevFrame_tracking;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool hasHandTrackingData;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WVR_HandTrackingData_t handTrackingData;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	private WaveVR_Utils.RigidTransform rtWristLeft;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36C")]
	private WaveVR_Utils.RigidTransform rtWristRight;

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x1228F54", Offset = "0x1228F54", VA = "0x1228F54")]
	private void DEBUG(string msg)
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x1228FFC", Offset = "0x1228FFC", VA = "0x1228FFC")]
	public WaveVR_BonePoseImpl()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x1229310", Offset = "0x1229310", VA = "0x1229310")]
	private bool AllowGetTrackingData()
	{
		return default(bool);
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x1229358", Offset = "0x1229358", VA = "0x1229358")]
	public WaveVR_Utils.RigidTransform GetBoneTransform(Bones bone_type)
	{
		return default(WaveVR_Utils.RigidTransform);
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x122C4E8", Offset = "0x122C4E8", VA = "0x122C4E8")]
	public bool IsBonePoseValid(Bones bone_type)
	{
		return default(bool);
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x122C6C0", Offset = "0x122C6C0", VA = "0x122C6C0")]
	public bool IsHandPoseValid(WaveVR_GestureManager.EGestureHand hand)
	{
		return default(bool);
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x12294D8", Offset = "0x12294D8", VA = "0x12294D8")]
	private void UpdateLeftHandTrackingData()
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x122ACE8", Offset = "0x122ACE8", VA = "0x122ACE8")]
	private void UpdateRightHandTrackingData()
	{
	}
}
[Token(Token = "0x2000055")]
public class WaveVR_GestureManager : MonoBehaviour
{
	[Token(Token = "0x200043A")]
	public enum EGestureHand
	{
		[Token(Token = "0x400197E")]
		RIGHT,
		[Token(Token = "0x400197F")]
		LEFT
	}

	[Token(Token = "0x200043B")]
	public enum EStaticGestures
	{
		[Token(Token = "0x4001981")]
		FIST = 2,
		[Token(Token = "0x4001982")]
		FIVE,
		[Token(Token = "0x4001983")]
		OK,
		[Token(Token = "0x4001984")]
		THUMBUP,
		[Token(Token = "0x4001985")]
		INDEXUP
	}

	[Token(Token = "0x40002E5")]
	private const string LOG_TAG = "WaveVR_GestureManager";

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static WaveVR_GestureManager instance;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[HideInInspector]
	public static EGestureHand GestureFocusHand;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableHandGesture;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool preEnableHandGesture;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WVR_HandGestureData_t handGestureData;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool EnableHandTracking;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool preEnableHandTracking;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool hasHandGesture;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private WVR_HandGestureType prevStaticGestureLeft;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WVR_HandGestureType currStaticGestureLeft;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private WVR_HandGestureType prevStaticGestureRight;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WVR_HandGestureType currStaticGestureRight;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private WaveVR_Utils.HandGestureStatus handGestureStatus;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static ReaderWriterLockSlim handGestureStatusRWLock;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private object handGestureThreadLock;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private WaveVR_Utils.HandTrackingStatus handTrackingStatus;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static ReaderWriterLockSlim handTrackingStatusRWLock;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private object handTrackingThreadLocker;

	[Token(Token = "0x1700002A")]
	public static WaveVR_GestureManager Instance
	{
		[Token(Token = "0x6000422")]
		[Address(RVA = "0xD79E5C", Offset = "0xD79E5C", VA = "0xD79E5C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000001")]
	private event WaveVR_Utils.HandGestureResultDelegate handGestureResultCB
	{
		[Token(Token = "0x600042F")]
		[Address(RVA = "0xD7CBE0", Offset = "0xD7CBE0", VA = "0xD7CBE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9388A8", Offset = "0x9388A8")]
		add
		{
		}
		[Token(Token = "0x6000430")]
		[Address(RVA = "0xD7CCCC", Offset = "0xD7CCCC", VA = "0xD7CCCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9388B8", Offset = "0x9388B8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	private event WaveVR_Utils.HandTrackingResultDelegate handTrackingResultCB
	{
		[Token(Token = "0x600043D")]
		[Address(RVA = "0xD7DACC", Offset = "0xD7DACC", VA = "0xD7DACC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9388C8", Offset = "0x9388C8")]
		add
		{
		}
		[Token(Token = "0x600043E")]
		[Address(RVA = "0xD7DBB8", Offset = "0xD7DBB8", VA = "0xD7DBB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9388D8", Offset = "0x9388D8")]
		remove
		{
		}
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0xD7BA5C", Offset = "0xD7BA5C", VA = "0xD7BA5C")]
	private void DEBUG(string msg)
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0xD7BB04", Offset = "0xD7BB04", VA = "0xD7BB04")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0xD7BBD4", Offset = "0xD7BBD4", VA = "0xD7BBD4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0xD7BDA4", Offset = "0xD7BDA4", VA = "0xD7BDA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0xD7C388", Offset = "0xD7C388", VA = "0xD7C388")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0xD7C434", Offset = "0xD7C434", VA = "0xD7C434")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0xD7C0CC", Offset = "0xD7C0CC", VA = "0xD7C0CC")]
	private void UpdateLeftHandGestureData(WVR_HandGestureData_t data)
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0xD79ECC", Offset = "0xD79ECC", VA = "0xD79ECC")]
	public WVR_HandGestureType GetCurrentLeftHandStaticGesture()
	{
		return default(WVR_HandGestureType);
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0xD7C22C", Offset = "0xD7C22C", VA = "0xD7C22C")]
	private void UpdateRightHandGestureData(WVR_HandGestureData_t data)
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0xD79EC4", Offset = "0xD79EC4", VA = "0xD79EC4")]
	public WVR_HandGestureType GetCurrentRightHandStaticGesture()
	{
		return default(WVR_HandGestureType);
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0xD7C4E0", Offset = "0xD7C4E0", VA = "0xD7C4E0")]
	private void OnEvent(params object[] args)
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0xD7C700", Offset = "0xD7C700", VA = "0xD7C700")]
	private void SetHandGestureStatus(WaveVR_Utils.HandGestureStatus status)
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0xD7C954", Offset = "0xD7C954", VA = "0xD7C954")]
	public WaveVR_Utils.HandGestureStatus GetHandGestureStatus()
	{
		return default(WaveVR_Utils.HandGestureStatus);
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0xD7CDB8", Offset = "0xD7CDB8", VA = "0xD7CDB8")]
	private void StartHandGestureLock()
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0xD7D15C", Offset = "0xD7D15C", VA = "0xD7D15C")]
	private void StartHandGestureThread()
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0xD7BC64", Offset = "0xD7BC64", VA = "0xD7BC64")]
	private void StartHandGesture()
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0xD7D22C", Offset = "0xD7D22C", VA = "0xD7D22C")]
	private void StopHandGestureLock()
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0xD7D40C", Offset = "0xD7D40C", VA = "0xD7D40C")]
	private void StopHandGestureThread()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0xD7BEDC", Offset = "0xD7BEDC", VA = "0xD7BEDC")]
	private void StopHandGesture()
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0xD7D4DC", Offset = "0xD7D4DC", VA = "0xD7D4DC")]
	private void RestartHandGestureThread()
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0xD7C5C0", Offset = "0xD7C5C0", VA = "0xD7C5C0")]
	public void RestartHandGesture()
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0xD7D5B4", Offset = "0xD7D5B4", VA = "0xD7D5B4")]
	public void RestartHandGesture(WaveVR_Utils.HandGestureResultDelegate callback)
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0xD7C01C", Offset = "0xD7C01C", VA = "0xD7C01C")]
	private bool GetHandGestureData(ref WVR_HandGestureData_t data)
	{
		return default(bool);
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0xD7D5EC", Offset = "0xD7D5EC", VA = "0xD7D5EC")]
	private void SetHandTrackingStatus(WaveVR_Utils.HandTrackingStatus status)
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0xD7D840", Offset = "0xD7D840", VA = "0xD7D840")]
	public WaveVR_Utils.HandTrackingStatus GetHandTrackingStatus()
	{
		return default(WaveVR_Utils.HandTrackingStatus);
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0xD7DCA4", Offset = "0xD7DCA4", VA = "0xD7DCA4")]
	private void StartHandTrackingLock()
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0xD7E048", Offset = "0xD7E048", VA = "0xD7E048")]
	private void StartHandTrackingThread()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0xD7BD04", Offset = "0xD7BD04", VA = "0xD7BD04")]
	private void StartHandTracking()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0xD7E118", Offset = "0xD7E118", VA = "0xD7E118")]
	private void StopHandTrackingLock()
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0xD7E2F8", Offset = "0xD7E2F8", VA = "0xD7E2F8")]
	private void StopHandTrackingThread()
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0xD7BF7C", Offset = "0xD7BF7C", VA = "0xD7BF7C")]
	private void StopHandTracking()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0xD7E3C8", Offset = "0xD7E3C8", VA = "0xD7E3C8")]
	private void RestartHandTrackingThread()
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0xD7C660", Offset = "0xD7C660", VA = "0xD7C660")]
	public void RestartHandTracking()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0xD7E4A0", Offset = "0xD7E4A0", VA = "0xD7E4A0")]
	public void RestartHandTracking(WaveVR_Utils.HandTrackingResultDelegate callback)
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0xD7E4D8", Offset = "0xD7E4D8", VA = "0xD7E4D8")]
	public bool GetHandTrackingData(ref WVR_HandTrackingData_t data, WVR_PoseOriginModel originModel, uint predictedMilliSec)
	{
		return default(bool);
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0xD7E5A4", Offset = "0xD7E5A4", VA = "0xD7E5A4")]
	public WaveVR_GestureManager()
	{
	}
}
[Token(Token = "0x2000056")]
public class WaveVR_ControllerPoseTracker : MonoBehaviour
{
	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WaveVR_Controller.EDeviceType Type;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool InversePosition;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool TrackPosition;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public WVR_SimulationOption SimulationOption;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private WVR_SimulationOption currSimulationOption;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool bSetupSimulation;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool FollowHead;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	private bool currFollowHead;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	private bool bSetupFollowHead;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool InverseRotation;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool TrackRotation;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public WVR_TrackTiming TrackTiming;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public bool ApplyNeckOffset;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x928C00", Offset = "0x928C00")]
	public float ElbowRaiseYaxis;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x928C1C", Offset = "0x928C1C")]
	public float ElbowRaiseZaxis;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject Head;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	private bool SetCustomHand;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool cptEnabled;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WVR_DevicePosePair_t wvr_pose;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private WaveVR_Utils.RigidTransform rigid_pose;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private Vector3 v3ChangeAxisX;

	[Token(Token = "0x4000310")]
	private const float BodyAngularVelocityUpperBound = 0.2f;

	[Token(Token = "0x4000311")]
	private const float ControllerAngularVelocityUpperBound = 30f;

	[Token(Token = "0x600044B")]
	[Address(RVA = "0xE3F934", Offset = "0xE3F934", VA = "0xE3F934")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0xE3FA14", Offset = "0xE3FA14", VA = "0xE3FA14")]
	private void PrintErrorLog(string msg)
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0xE3FAFC", Offset = "0xE3FAFC", VA = "0xE3FAFC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0xE40600", Offset = "0xE40600", VA = "0xE40600")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0xE40F18", Offset = "0xE40F18", VA = "0xE40F18")]
	private void Update()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0xE40110", Offset = "0xE40110", VA = "0xE40110")]
	private void SetupPoseSimulation()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0xE41404", Offset = "0xE41404", VA = "0xE41404")]
	private void OnNewPoses(params object[] args)
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0xE410E8", Offset = "0xE410E8", VA = "0xE410E8")]
	private void updateDevicePose(WVR_DevicePosePair_t pose, WaveVR_Utils.RigidTransform rtPose)
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0xE416EC", Offset = "0xE416EC", VA = "0xE416EC")]
	private float BodyRotationFilter1(WVR_DevicePosePair_t pose)
	{
		return default(float);
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0xE417B0", Offset = "0xE417B0", VA = "0xE417B0")]
	public WaveVR_ControllerPoseTracker()
	{
	}
}
[Token(Token = "0x2000057")]
public sealed class WaveVR_DevicePoseTracker : MonoBehaviour
{
	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WaveVR_Controller.EDeviceType type;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool inversePosition;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool trackPosition;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x928C48", Offset = "0x928C48")]
	public bool EnableNeckModel;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	public bool inverseRotation;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool trackRotation;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public WVR_TrackTiming timing;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private WVR_DevicePosePair_t wvr_pose;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private WaveVR_Utils.RigidTransform rigid_pose;

	[Token(Token = "0x6000456")]
	[Address(RVA = "0xE47A58", Offset = "0xE47A58", VA = "0xE47A58")]
	private void Update()
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0xE47DA4", Offset = "0xE47DA4", VA = "0xE47DA4")]
	private void OnNewPoses(params object[] args)
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0xE47BCC", Offset = "0xE47BCC", VA = "0xE47BCC")]
	private void updatePose(WVR_DevicePosePair_t pose, WaveVR_Utils.RigidTransform rtPose)
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0xE48078", Offset = "0xE48078", VA = "0xE48078")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0xE486F8", Offset = "0xE486F8", VA = "0xE486F8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0xE487C0", Offset = "0xE487C0", VA = "0xE487C0")]
	public WaveVR_DevicePoseTracker()
	{
	}
}
[Token(Token = "0x2000058")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92547C", Offset = "0x92547C")]
public class WaveVR_PoseSimulator : MonoBehaviour
{
	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static WaveVR_PoseSimulator instance;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private WaveVR_Utils.RigidTransform rtPose_head;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private WaveVR_Utils.RigidTransform rtPose_head_onGround;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WaveVR_Utils.RigidTransform rtPose_right;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private WaveVR_Utils.RigidTransform rtPose_left;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private WaveVR_Utils.WVR_ButtonState_t btn_right;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private WaveVR_Utils.WVR_ButtonState_t btn_left;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private WVR_Axis_t axis_right;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private WVR_Axis_t axis_left;

	[Token(Token = "0x4000325")]
	private const string MOUSE_X = "Mouse X";

	[Token(Token = "0x4000326")]
	private const string MOUSE_Y = "Mouse Y";

	[Token(Token = "0x4000327")]
	private const string MOUSE_SCROLLWHEEL = "Mouse ScrollWheel";

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float shiftX_head;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float shiftY_head;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float shiftZ_head;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float angleX_head;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float angleY_head;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float angleZ_head;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float shiftX_right;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float shiftY_right;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float shiftZ_right;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float angleX_right;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float angleY_right;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float angleZ_right;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float shiftX_left;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float shiftY_left;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float shiftZ_left;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float angleX_left;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float angleY_left;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float angleZ_left;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly KeyCode[] KeyCode_Head;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly KeyCode[] KeyCode_Right;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly KeyCode[] KeyCode_Left;

	[Token(Token = "0x1700002B")]
	public static WaveVR_PoseSimulator Instance
	{
		[Token(Token = "0x600045D")]
		[Address(RVA = "0xD8BFD4", Offset = "0xD8BFD4", VA = "0xD8BFD4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0xD8C144", Offset = "0xD8C144", VA = "0xD8C144")]
	public void GetRigidTransform(WVR_DeviceType type, ref WaveVR_Utils.RigidTransform rtPose, WVR_PoseOriginModel origin)
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0xD8C1B0", Offset = "0xD8C1B0", VA = "0xD8C1B0")]
	private void UpdateHeadPose(float axis_x, float axis_y, float axis_z)
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0xD8C5F0", Offset = "0xD8C5F0", VA = "0xD8C5F0")]
	private void UpdateRightHandPose(float axis_x, float axis_y, float axis_z)
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0xD8CA8C", Offset = "0xD8CA8C", VA = "0xD8CA8C")]
	private void UpdateLefHandPose(float axis_x, float axis_y, float axis_z)
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0xD8CD48", Offset = "0xD8CD48", VA = "0xD8CD48")]
	public void Update()
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0xD8CE04", Offset = "0xD8CE04", VA = "0xD8CE04")]
	public WaveVR_PoseSimulator()
	{
	}
}
[Token(Token = "0x2000059")]
public enum WVR_TrackTiming
{
	[Token(Token = "0x400033E")]
	WhenUpdate,
	[Token(Token = "0x400033F")]
	WhenNewPoses
}
[Token(Token = "0x200005A")]
public enum WVR_SimulationOption
{
	[Token(Token = "0x4000341")]
	WhenNoPosition,
	[Token(Token = "0x4000342")]
	ForceSimulation,
	[Token(Token = "0x4000343")]
	NoSimulation
}
[Token(Token = "0x200005B")]
public class WaveVR_PoseTrackerManager : MonoBehaviour
{
	[Token(Token = "0x4000344")]
	private const string LOG_TAG = "WaveVR_PoseTrackerManager";

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WaveVR_Controller.EDeviceType Type;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool TrackPosition;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool EnableNeckModel;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public WVR_SimulationOption SimulationOption;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool FollowHead;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool TrackRotation;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public WVR_TrackTiming TrackTiming;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<GameObject> IncludedObjects;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<bool> IncludedStates;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool showTrackedObject;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool connected;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	private bool mFocusCapturedBySystem;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	public bool poseUpdated;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool hasNewPose;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	private bool gazeOnly;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private WaveVR_DevicePoseTracker devicePoseTracker;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private WaveVR_ControllerPoseTracker ctrlerPoseTracker;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool ptmEnabled;

	[Token(Token = "0x6000465")]
	[Address(RVA = "0xD8CF8C", Offset = "0xD8CF8C", VA = "0xD8CF8C")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0xD8D034", Offset = "0xD8D034", VA = "0xD8D034")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0xD8DB00", Offset = "0xD8DB00", VA = "0xD8DB00")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0xD8E2D8", Offset = "0xD8E2D8", VA = "0xD8E2D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0xD8EA94", Offset = "0xD8EA94", VA = "0xD8EA94")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0xD8EC30", Offset = "0xD8EC30", VA = "0xD8EC30")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0xD8ECB4", Offset = "0xD8ECB4", VA = "0xD8ECB4")]
	private bool hideEventController()
	{
		return default(bool);
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0xD8E78C", Offset = "0xD8E78C", VA = "0xD8E78C")]
	public void ActivateTargetObjects()
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0xD8D6F4", Offset = "0xD8D6F4", VA = "0xD8D6F4")]
	private void ForceActivateTargetObjects(bool active)
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0xD8EE6C", Offset = "0xD8EE6C", VA = "0xD8EE6C")]
	private void onDeviceConnected(params object[] args)
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0xD8F0A4", Offset = "0xD8F0A4", VA = "0xD8F0A4")]
	private void OnNewPoses(params object[] args)
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0xD8F1B0", Offset = "0xD8F1B0", VA = "0xD8F1B0")]
	private void onSystemFocusChanged(params object[] args)
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0xD8F344", Offset = "0xD8F344", VA = "0xD8F344")]
	public WaveVR_PoseTrackerManager()
	{
	}
}
[Token(Token = "0x200005C")]
public class WaveVR : IDisposable
{
	[Token(Token = "0x200043C")]
	public class Device
	{
		[Token(Token = "0x4001986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x937D40", Offset = "0x937D40")]
		private WVR_DeviceType <type>k__BackingField;

		[Token(Token = "0x4001987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x937D50", Offset = "0x937D50")]
		private int <index>k__BackingField;

		[Token(Token = "0x170003AF")]
		public WVR_DeviceType type
		{
			[Token(Token = "0x6002077")]
			[Address(RVA = "0xEF63B8", Offset = "0xEF63B8", VA = "0xEF63B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E058", Offset = "0x93E058")]
			get
			{
				return default(WVR_DeviceType);
			}
			[Token(Token = "0x6002078")]
			[Address(RVA = "0xEF63A8", Offset = "0xEF63A8", VA = "0xEF63A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E068", Offset = "0x93E068")]
			private set
			{
			}
		}

		[Token(Token = "0x170003B0")]
		public int index
		{
			[Token(Token = "0x6002079")]
			[Address(RVA = "0xEF63C0", Offset = "0xEF63C0", VA = "0xEF63C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E078", Offset = "0x93E078")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600207A")]
			[Address(RVA = "0xEF63B0", Offset = "0xEF63B0", VA = "0xEF63B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E088", Offset = "0x93E088")]
			private set
			{
			}
		}

		[Token(Token = "0x170003B1")]
		public bool connected
		{
			[Token(Token = "0x600207B")]
			[Address(RVA = "0xEF63C8", Offset = "0xEF63C8", VA = "0xEF63C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170003B2")]
		public WVR_DevicePosePair_t pose
		{
			[Token(Token = "0x600207C")]
			[Address(RVA = "0xEF6478", Offset = "0xEF6478", VA = "0xEF6478")]
			get
			{
				return default(WVR_DevicePosePair_t);
			}
		}

		[Token(Token = "0x170003B3")]
		public WaveVR_Utils.RigidTransform rigidTransform
		{
			[Token(Token = "0x600207D")]
			[Address(RVA = "0xEF6590", Offset = "0xEF6590", VA = "0xEF6590")]
			get
			{
				return default(WaveVR_Utils.RigidTransform);
			}
		}

		[Token(Token = "0x6002076")]
		[Address(RVA = "0xEF3170", Offset = "0xEF3170", VA = "0xEF3170")]
		public Device(WVR_DeviceType type)
		{
		}
	}

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public bool editor;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static WaveVR instance;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool Initialized;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong supportedFeatures;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool FocusCapturedBySystem;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool handTrackingEnabled;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	private bool handGestureEnabled;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public WVR_InteractionMode InteractionMode;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public WVR_GazeTriggerType GazeTriggerType;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x928C90", Offset = "0x928C90")]
	private Device <hmd>k__BackingField;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x928CA0", Offset = "0x928CA0")]
	private Device <controllerLeft>k__BackingField;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x928CB0", Offset = "0x928CB0")]
	private Device <controllerRight>k__BackingField;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static WVR_DeviceType[] DeviceTypes;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool[] isValidPose;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private uint[] deviceIndexMap;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public uint frameInx;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private WVR_DevicePosePair_t[] poses;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private WaveVR_Utils.RigidTransform[] rtPoses;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static WaveVR_Render.StereoRenderingPath UnityPlayerSettingsStereoRenderingPath;

	[Token(Token = "0x1700002C")]
	public static WaveVR Instance
	{
		[Token(Token = "0x6000475")]
		[Address(RVA = "0xEF2988", Offset = "0xEF2988", VA = "0xEF2988")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002D")]
	public Device hmd
	{
		[Token(Token = "0x6000476")]
		[Address(RVA = "0xEF2E70", Offset = "0xEF2E70", VA = "0xEF2E70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9388E8", Offset = "0x9388E8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000477")]
		[Address(RVA = "0xEF2E78", Offset = "0xEF2E78", VA = "0xEF2E78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9388F8", Offset = "0x9388F8")]
		private set
		{
		}
	}

	[Token(Token = "0x1700002E")]
	public Device controllerLeft
	{
		[Token(Token = "0x6000478")]
		[Address(RVA = "0xEF2E80", Offset = "0xEF2E80", VA = "0xEF2E80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938908", Offset = "0x938908")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000479")]
		[Address(RVA = "0xEF2E88", Offset = "0xEF2E88", VA = "0xEF2E88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938918", Offset = "0x938918")]
		private set
		{
		}
	}

	[Token(Token = "0x1700002F")]
	public Device controllerRight
	{
		[Token(Token = "0x600047A")]
		[Address(RVA = "0xEF2E90", Offset = "0xEF2E90", VA = "0xEF2E90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938928", Offset = "0x938928")]
		get
		{
			return null;
		}
		[Token(Token = "0x600047B")]
		[Address(RVA = "0xEF2E98", Offset = "0xEF2E98", VA = "0xEF2E98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938938", Offset = "0x938938")]
		private set
		{
		}
	}

	[Token(Token = "0x17000030")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x940E10", Offset = "0x940E10")]
	public static bool Hmd
	{
		[Token(Token = "0x600047F")]
		[Address(RVA = "0xEF3108", Offset = "0xEF3108", VA = "0xEF3108")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0xEF2774", Offset = "0xEF2774", VA = "0xEF2774")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0xEF2850", Offset = "0xEF2850", VA = "0xEF2850")]
	private void PrintInfoLog(string msg)
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0xEF28EC", Offset = "0xEF28EC", VA = "0xEF28EC")]
	private void PrintErrorLog(string msg)
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0xEF2EA0", Offset = "0xEF2EA0", VA = "0xEF2EA0")]
	public Device getDeviceByType(WVR_DeviceType type)
	{
		return null;
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0xEF2FA4", Offset = "0xEF2FA4", VA = "0xEF2FA4")]
	public Device getDeviceByType(WaveVR_Controller.EDeviceType type)
	{
		return null;
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0xEF3080", Offset = "0xEF3080", VA = "0xEF3080")]
	private void ReportError(WVR_InitError error)
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0xEF2A44", Offset = "0xEF2A44", VA = "0xEF2A44")]
	private WaveVR()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0xEF3A04", Offset = "0xEF3A04", VA = "0xEF3A04", Slot = "1")]
	~WaveVR()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0xEF3B6C", Offset = "0xEF3B6C", VA = "0xEF3B6C")]
	public void onLoadLevel()
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0xEF3A78", Offset = "0xEF3A78", VA = "0xEF3A78", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0xEF3D98", Offset = "0xEF3D98", VA = "0xEF3D98")]
	public static void SafeDispose()
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0xEF3E44", Offset = "0xEF3E44", VA = "0xEF3E44")]
	public int is6DoFTracking()
	{
		return default(int);
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0xEF3E8C", Offset = "0xEF3E8C", VA = "0xEF3E8C")]
	public void UpdateEachFrame(WVR_PoseOriginModel origin)
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0xEF3EA0", Offset = "0xEF3EA0", VA = "0xEF3EA0")]
	public void UpdateEachFrame(WVR_PoseOriginModel origin, bool isSimulator)
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0xEF54DC", Offset = "0xEF54DC", VA = "0xEF54DC")]
	public int SetQualityLevel(int level, bool applyExpensiveChanges = true)
	{
		return default(int);
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0xEF328C", Offset = "0xEF328C", VA = "0xEF328C")]
	public bool SetLeftHandedMode(bool leftHandedInEditor = false)
	{
		return default(bool);
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0xEF5428", Offset = "0xEF5428", VA = "0xEF5428")]
	private bool GetConnectionStatus(WVR_DeviceType type)
	{
		return default(bool);
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0xEF558C", Offset = "0xEF558C", VA = "0xEF558C")]
	public void SetConnectionStatus(WVR_DeviceType type, bool conn)
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0xEF3508", Offset = "0xEF3508", VA = "0xEF3508")]
	public void UpdateAllConnection()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0xEF5814", Offset = "0xEF5814", VA = "0xEF5814")]
	private void UpdateAllPoseState()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0xEF52D4", Offset = "0xEF52D4", VA = "0xEF52D4")]
	public void UpdateButtonEvents()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0xEF5D40", Offset = "0xEF5D40", VA = "0xEF5D40")]
	public void ResetAllButtonStates()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0xEF3684", Offset = "0xEF3684", VA = "0xEF3684")]
	public void SetDefaultButtons()
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0xEF5E88", Offset = "0xEF5E88", VA = "0xEF5E88")]
	public void SetPoseSimulation(WVR_SimulationType type)
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0xEF5F24", Offset = "0xEF5F24", VA = "0xEF5F24")]
	public void SetPoseSimulationFollowHead(bool follow)
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0xEF5FB8", Offset = "0xEF5FB8", VA = "0xEF5FB8")]
	public void SetNeckModelEnabled(bool enabled)
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0xEF604C", Offset = "0xEF604C", VA = "0xEF604C")]
	public bool StartHandGesture()
	{
		return default(bool);
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0xEF3CA0", Offset = "0xEF3CA0", VA = "0xEF3CA0")]
	public void StopHandGesture()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0xEF6168", Offset = "0xEF6168", VA = "0xEF6168")]
	public bool IsHandGestureEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0xEF6170", Offset = "0xEF6170", VA = "0xEF6170")]
	public bool GetHandGestureData(ref WVR_HandGestureData_t data)
	{
		return default(bool);
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0xEF61A4", Offset = "0xEF61A4", VA = "0xEF61A4")]
	public bool StartHandTracking()
	{
		return default(bool);
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0xEF3D1C", Offset = "0xEF3D1C", VA = "0xEF3D1C")]
	public void StopHandTracking()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0xEF62B8", Offset = "0xEF62B8", VA = "0xEF62B8")]
	public bool IsHandTrackingEnabled()
	{
		return default(bool);
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0xEF62C0", Offset = "0xEF62C0", VA = "0xEF62C0")]
	public bool GetHandTrackingData(ref WVR_HandTrackingData_t data, WVR_PoseOriginModel originModel, uint predictedMilliSec)
	{
		return default(bool);
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0xEF6160", Offset = "0xEF6160", VA = "0xEF6160")]
	public ulong GetSupportedFeatures()
	{
		return default(ulong);
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0xEF57F8", Offset = "0xEF57F8", VA = "0xEF57F8")]
	private bool IsDeviceConnected(WVR_DeviceType device)
	{
		return default(bool);
	}
}
[Token(Token = "0x200005D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9254B4", Offset = "0x9254B4")]
public class WaveVR_Beam : MonoBehaviour
{
	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool ShowBeam;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool ListenToDevice;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public WaveVR_Controller.EDeviceType device;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float StartWidth;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float EndWidth;

	[Token(Token = "0x4000371")]
	private const float minimal_length = 0.1f;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float preStartOffset;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float StartOffset;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public float endOffsetMin;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public float endOffsetMax;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float preEndOffset;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float EndOffset;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color32 preStartColor;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Color32 StartColor;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Color32 TailColor;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Color32 preEndColor;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Color32 EndColor;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool useDefaultMaterial;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Material customMat;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int count;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool updateEveryFrame;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	private bool makeTail;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string textureName;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int maxUVAngle;

	[Token(Token = "0x4000384")]
	private const float epsilon = 0.0001f;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool isBeamEnable;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	private bool connected;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int Count;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int verticesCount;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int indicesCount;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<Vector3> vertices;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<Vector2> uvs;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<Vector3> normals;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private List<int> indices;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private List<Color32> colors;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 position;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Mesh emptyMesh;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Mesh updateMesh;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Material materialComp;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private MeshFilter mf_beam;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool meshIsCreated;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
	private bool toUpdateBeam;

	[Token(Token = "0x4000397")]
	private const string CtrColorBeam3 = "CtrColorBeam3";

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private Matrix4x4 mat44_rot;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private Matrix4x4 mat44_uv;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private Vector3 vec3_vertices_start;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Vector3 vec3_vertices_end;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private readonly Vector2 vec2_05_05;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private readonly Vector3 vec3_0_05_0;

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x1222E78", Offset = "0x1222E78", VA = "0x1222E78")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x1222F58", Offset = "0x1222F58", VA = "0x1222F58")]
	public void SetEndOffset(float end_offset)
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x1223160", Offset = "0x1223160", VA = "0x1223160")]
	public void SetEndOffset(Vector3 target, bool interactive)
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x12231D0", Offset = "0x12231D0", VA = "0x12231D0")]
	public void ResetEndOffset()
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x1223538", Offset = "0x1223538", VA = "0x1223538")]
	private bool Color32Equal(Color32 color1, Color32 color2)
	{
		return default(bool);
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x1223580", Offset = "0x1223580", VA = "0x1223580")]
	private void ValidateBeamAttributes()
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x1223BBC", Offset = "0x1223BBC", VA = "0x1223BBC")]
	private void ReadJsonValues()
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x1225088", Offset = "0x1225088", VA = "0x1225088")]
	private bool IsBoolean(string value)
	{
		return default(bool);
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x1224758", Offset = "0x1224758", VA = "0x1224758")]
	private bool IsFloat(string value)
	{
		return default(bool);
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x122525C", Offset = "0x122525C", VA = "0x122525C")]
	private bool IsNumeric(string value)
	{
		return default(bool);
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x122542C", Offset = "0x122542C", VA = "0x122542C")]
	private void Validate()
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x12254E4", Offset = "0x12254E4", VA = "0x12254E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x1225564", Offset = "0x1225564", VA = "0x1225564")]
	private void Start()
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x1225568", Offset = "0x1225568", VA = "0x1225568")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x12262C4", Offset = "0x12262C4", VA = "0x12262C4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x12264D4", Offset = "0x12264D4", VA = "0x12264D4")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x1226574", Offset = "0x1226574", VA = "0x1226574")]
	public void Update()
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x1226E50", Offset = "0x1226E50", VA = "0x1226E50")]
	private void createMesh()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x1226D50", Offset = "0x1226D50", VA = "0x1226D50")]
	private void createBeamMesh()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x122635C", Offset = "0x122635C", VA = "0x122635C")]
	private void showBeamMesh(bool show)
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x1227840", Offset = "0x1227840", VA = "0x1227840")]
	private Color32 StringToColor32(string color_string)
	{
		return default(Color32);
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x1224928", Offset = "0x1224928", VA = "0x1224928")]
	private void UpdateStartColor(string color_string)
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x1224CE0", Offset = "0x1224CE0", VA = "0x1224CE0")]
	private void UpdateEndColor(string color_string)
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x1226D80", Offset = "0x1226D80", VA = "0x1226D80")]
	private bool checkConnection()
	{
		return default(bool);
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x1227C08", Offset = "0x1227C08", VA = "0x1227C08")]
	public WaveVR_Beam()
	{
	}
}
[Token(Token = "0x200005E")]
public class WaveVR_ButtonList : MonoBehaviour
{
	[Token(Token = "0x200043D")]
	public enum EButtons
	{
		[Token(Token = "0x4001989")]
		Unavailable = 0,
		[Token(Token = "0x400198A")]
		Menu = 1,
		[Token(Token = "0x400198B")]
		Grip = 2,
		[Token(Token = "0x400198C")]
		DPadUp = 4,
		[Token(Token = "0x400198D")]
		DPadRight = 5,
		[Token(Token = "0x400198E")]
		DPadDown = 6,
		[Token(Token = "0x400198F")]
		DPadLeft = 3,
		[Token(Token = "0x4001990")]
		VolumeUp = 7,
		[Token(Token = "0x4001991")]
		VolumeDown = 8,
		[Token(Token = "0x4001992")]
		Back = 14,
		[Token(Token = "0x4001993")]
		Enter = 15,
		[Token(Token = "0x4001994")]
		Touchpad = 16,
		[Token(Token = "0x4001995")]
		Trigger = 17,
		[Token(Token = "0x4001996")]
		Thumbstick = 18
	}

	[Token(Token = "0x200043E")]
	public enum EHmdButtons
	{
		[Token(Token = "0x4001998")]
		Menu = 1,
		[Token(Token = "0x4001999")]
		DPadUp = 4,
		[Token(Token = "0x400199A")]
		DPadRight = 5,
		[Token(Token = "0x400199B")]
		DPadDown = 6,
		[Token(Token = "0x400199C")]
		DPadLeft = 3,
		[Token(Token = "0x400199D")]
		VolumeUp = 7,
		[Token(Token = "0x400199E")]
		VolumeDown = 8,
		[Token(Token = "0x400199F")]
		Enter = 15,
		[Token(Token = "0x40019A0")]
		Touchpad = 16
	}

	[Token(Token = "0x200043F")]
	public enum EControllerButtons
	{
		[Token(Token = "0x40019A2")]
		Menu = 1,
		[Token(Token = "0x40019A3")]
		Grip = 2,
		[Token(Token = "0x40019A4")]
		DPadUp = 4,
		[Token(Token = "0x40019A5")]
		DPadRight = 5,
		[Token(Token = "0x40019A6")]
		DPadDown = 6,
		[Token(Token = "0x40019A7")]
		DPadLeft = 3,
		[Token(Token = "0x40019A8")]
		VolumeUp = 7,
		[Token(Token = "0x40019A9")]
		VolumeDown = 8,
		[Token(Token = "0x40019AA")]
		Touchpad = 16,
		[Token(Token = "0x40019AB")]
		Trigger = 17,
		[Token(Token = "0x40019AC")]
		Thumbstick = 18
	}

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<EHmdButtons> HmdButtons;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WVR_InputAttribute_t[] inputAttributes_hmd;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<WVR_InputId> usableButtons_hmd;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool hmd_connected;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<EControllerButtons> DominantButtons;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WVR_InputAttribute_t[] inputAttributes_Dominant;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<WVR_InputId> usableButtons_dominant;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool dominant_connected;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<EControllerButtons> NonDominantButtons;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private WVR_InputAttribute_t[] inputAttributes_NonDominant;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<WVR_InputId> usableButtons_nonDominant;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool nodomint_connected;

	[Token(Token = "0x40003AB")]
	private const uint inputTableSize = 32u;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private WVR_InputMappingPair_t[] inputTableHMD;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private uint inputTableHMDSize;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private WVR_InputMappingPair_t[] inputTableDominant;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private uint inputTableDominantSize;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private WVR_InputMappingPair_t[] inputTableNonDominant;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private uint inputTableNonDominantSize;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static WaveVR_ButtonList instance;

	[Token(Token = "0x17000031")]
	public static WaveVR_ButtonList Instance
	{
		[Token(Token = "0x60004BE")]
		[Address(RVA = "0x122CC14", Offset = "0x122CC14", VA = "0x122CC14")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x122C7E0", Offset = "0x122C7E0", VA = "0x122C7E0")]
	private void INFO(string msg)
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x122C880", Offset = "0x122C880", VA = "0x122C880")]
	private void DEBUG(string msg)
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x122C960", Offset = "0x122C960", VA = "0x122C960")]
	public EButtons GetEButtonsType(WVR_InputId button)
	{
		return default(EButtons);
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x122C984", Offset = "0x122C984", VA = "0x122C984")]
	private List<EButtons> ToEButtons(List<EHmdButtons> eList)
	{
		return null;
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x122CACC", Offset = "0x122CACC", VA = "0x122CACC")]
	private List<EButtons> ToEButtons(List<EControllerButtons> eList)
	{
		return null;
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x122CC7C", Offset = "0x122CC7C", VA = "0x122CC7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x122CD4C", Offset = "0x122CD4C", VA = "0x122CD4C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x122CE10", Offset = "0x122CE10", VA = "0x122CE10")]
	private void Update()
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x122D068", Offset = "0x122D068", VA = "0x122D068")]
	public bool GetInputMappingPair(WaveVR_Controller.EDeviceType device, ref EButtons destination)
	{
		return default(bool);
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x122D0B0", Offset = "0x122D0B0", VA = "0x122D0B0")]
	public bool GetInputMappingPair(WaveVR_Controller.EDeviceType device, ref WVR_InputId destination)
	{
		return default(bool);
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x122D370", Offset = "0x122D370", VA = "0x122D370")]
	private void setupButtonAttributes(WaveVR_Controller.EDeviceType device, List<EButtons> buttons, WVR_InputAttribute_t[] inputAttributes, int count)
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x122DAD8", Offset = "0x122DAD8", VA = "0x122DAD8")]
	private void createHmdRequestAttributes()
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x122DBD4", Offset = "0x122DBD4", VA = "0x122DBD4")]
	private void createDominantRequestAttributes()
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x122DC84", Offset = "0x122DC84", VA = "0x122DC84")]
	private void createNonDominantRequestAttributes()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x122DD34", Offset = "0x122DD34", VA = "0x122DD34")]
	public bool IsButtonAvailable(WaveVR_Controller.EDeviceType device, EButtons button)
	{
		return default(bool);
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x122DD38", Offset = "0x122DD38", VA = "0x122DD38")]
	public bool IsButtonAvailable(WaveVR_Controller.EDeviceType device, WVR_InputId button)
	{
		return default(bool);
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x122DDEC", Offset = "0x122DDEC", VA = "0x122DDEC")]
	private void SetHmdInputRequest()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x122E5B0", Offset = "0x122E5B0", VA = "0x122E5B0")]
	private void SetDominantInputRequest()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x122ED74", Offset = "0x122ED74", VA = "0x122ED74")]
	private void SetNonDominantInputRequest()
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x122F538", Offset = "0x122F538", VA = "0x122F538")]
	private void ResetInputRequest(WaveVR_Controller.EDeviceType device)
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x122F610", Offset = "0x122F610", VA = "0x122F610")]
	public void SetupHmdButtonList(List<EHmdButtons> list)
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x122F678", Offset = "0x122F678", VA = "0x122F678")]
	public void SetupControllerButtonList(WaveVR_Controller.EDeviceType device, List<EControllerButtons> list)
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x122CDA0", Offset = "0x122CDA0", VA = "0x122CDA0")]
	public void ResetAllInputRequest()
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x122F738", Offset = "0x122F738", VA = "0x122F738")]
	public WaveVR_ButtonList()
	{
	}
}
[Token(Token = "0x200005F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x925534", Offset = "0x925534")]
public class WaveVR_Camera : MonoBehaviour, IEquatable<Camera>
{
	[Token(Token = "0x2000440")]
	private class RenderThreadContext : wvr.render.utils.Message
	{
		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int antialiasing;

		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint textureId;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public uint depthId;

		[Token(Token = "0x600207E")]
		[Address(RVA = "0x1231ACC", Offset = "0x1231ACC", VA = "0x1231ACC")]
		public static void IssueUpdateConfig(RenderThreadSyncObject syncObj, uint textureId, uint depthId, int antialiasing)
		{
		}

		[Token(Token = "0x600207F")]
		[Address(RVA = "0x1232D10", Offset = "0x1232D10", VA = "0x1232D10")]
		public static void ReceiveBeforeOpaque(PreAllocatedQueue queue)
		{
		}

		[Token(Token = "0x6002080")]
		[Address(RVA = "0x1233008", Offset = "0x1233008", VA = "0x1233008")]
		public static void ReceiveUpdateConfig(PreAllocatedQueue queue)
		{
		}

		[Token(Token = "0x6002081")]
		[Address(RVA = "0x12331E0", Offset = "0x12331E0", VA = "0x12331E0")]
		public void CopyTo(RenderThreadContext dest)
		{
		}

		[Token(Token = "0x6002082")]
		[Address(RVA = "0x1232D08", Offset = "0x1232D08", VA = "0x1232D08")]
		public RenderThreadContext()
		{
		}
	}

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string TAG;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WVR_Eye eye;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera cam;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly RenderThreadContext contextRTOnly;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly RenderThreadSyncObject RTSOBeforeOpaque;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly RenderThreadSyncObject RTSOUpdateConfig;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Matrix4x4 unity_SingleCullMatrixP;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly Matrix4x4[] unity_StereoMatrixP;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly Matrix4x4[] unity_StereoMatrixInvP;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private readonly Matrix4x4[] unity_StereoWorldToCamera;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private readonly Matrix4x4[] unity_StereoCameraToWorld;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private readonly Matrix4x4[] unity_StereoMatrixVP;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private readonly Vector4[] eyesOffset;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private readonly Matrix4x4[] eyesOffsetMatrix;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private readonly Matrix4x4[] eyesOffsetMatrixInv;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private readonly Matrix4x4[] skybox_MatrixVP;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private readonly Vector4[] unity_StereoScaleOffset;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private readonly Vector4[] stereoWorldSpaceCameraPos;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private CommandBuffer cmdBufBeforeForwardOpaque;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private CommandBuffer cmdBufBeforeSkybox;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private CommandBuffer cmdBufAfterSkybox;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool needInitPropertyId;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private int id_unity_StereoCameraProjection;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private int id_unity_StereoCameraInvProjection;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private int id_unity_StereoMatrixP;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private int id_unity_StereoCameraToWorld;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private int id_unity_StereoWorldToCamera;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private int id_unity_StereoWorldSpaceCameraPos;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private int id_unity_StereoMatrixV;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private int id_unity_StereoMatrixInvV;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private int id_unity_StereoMatrixVP;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private int id_unity_StereoScaleOffset;

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x122F8E4", Offset = "0x122F8E4", VA = "0x122F8E4")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x122F93C", Offset = "0x122F93C", VA = "0x122F93C")]
	public Camera GetCamera()
	{
		return null;
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x122F9D4", Offset = "0x122F9D4", VA = "0x122F9D4")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x938948", Offset = "0x938948")]
	public Camera getCamera()
	{
		return null;
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x122FA6C", Offset = "0x122FA6C", VA = "0x122FA6C", Slot = "4")]
	public bool Equals(Camera other)
	{
		return default(bool);
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x122FAE8", Offset = "0x122FAE8", VA = "0x122FAE8")]
	private void OnPreRender()
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0x12302F4", Offset = "0x12302F4", VA = "0x12302F4")]
	private void OnPostRender()
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0x1230338", Offset = "0x1230338", VA = "0x1230338")]
	private void SetStereoViewAndCullingMatrix(Matrix4x4 left, Matrix4x4 right)
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0x12304CC", Offset = "0x12304CC", VA = "0x12304CC")]
	private void DebugLogMatrix(ref Matrix4x4 m, string name)
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0x123114C", Offset = "0x123114C", VA = "0x123114C")]
	private void PrepareCommandBuffers()
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0x122FAFC", Offset = "0x122FAFC", VA = "0x122FAFC")]
	private void SinglePassPreRender()
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0x1230308", Offset = "0x1230308", VA = "0x1230308")]
	private void SinglePassPostRender()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0x1231C9C", Offset = "0x1231C9C", VA = "0x1231C9C")]
	public void SetEyesPosition(Vector3 left, Vector3 right)
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0x12320F0", Offset = "0x12320F0", VA = "0x12320F0")]
	public void SetStereoCullingMatrix()
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0x1232200", Offset = "0x1232200", VA = "0x1232200")]
	public void SetStereoProjectionMatrix(Matrix4x4 left, Matrix4x4 right, Matrix4x4 cull)
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0x1231748", Offset = "0x1231748", VA = "0x1231748")]
	private static void M4Multiply(ref Matrix4x4 mout, ref Matrix4x4 lhs, ref Matrix4x4 rhs)
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0x1231C58", Offset = "0x1231C58", VA = "0x1231C58")]
	private static void V4Add(ref Vector4 vout, ref Vector4 lhs, ref Vector4 rhs)
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0x123247C", Offset = "0x123247C", VA = "0x123247C")]
	public WaveVR_Camera()
	{
	}
}
[Token(Token = "0x2000060")]
public class WaveVR_CameraTexture
{
	[Token(Token = "0x2000441")]
	public delegate void UpdateCameraCompleted(IntPtr nativeTextureId);

	[Token(Token = "0x2000442")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x927334", Offset = "0x927334")]
	public delegate void StartCameraCompleted(bool result);

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WVR_CameraInfo_t camerainfo;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool mStarted;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr nativeTextureId;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IntPtr mframeBuffer;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool syncPose;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WVR_PoseState_t mPoseState;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private WVR_PoseOriginModel origin;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static WaveVR_CameraTexture mInstance;

	[Token(Token = "0x40003DE")]
	private const bool DEBUG = false;

	[Token(Token = "0x17000032")]
	public bool isStarted
	{
		[Token(Token = "0x60004E5")]
		[Address(RVA = "0x1233258", Offset = "0x1233258", VA = "0x1233258")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000033")]
	public static WaveVR_CameraTexture instance
	{
		[Token(Token = "0x60004EB")]
		[Address(RVA = "0x1233724", Offset = "0x1233724", VA = "0x1233724")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x14000003")]
	public static event UpdateCameraCompleted UpdateCameraCompletedDelegate
	{
		[Token(Token = "0x60004E6")]
		[Address(RVA = "0x1233260", Offset = "0x1233260", VA = "0x1233260")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938980", Offset = "0x938980")]
		add
		{
		}
		[Token(Token = "0x60004E7")]
		[Address(RVA = "0x1233390", Offset = "0x1233390", VA = "0x1233390")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938990", Offset = "0x938990")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x940D68", Offset = "0x940D68")]
	public static event StartCameraCompleted StartCameraCompletedDelegate
	{
		[Token(Token = "0x60004E8")]
		[Address(RVA = "0x12334C0", Offset = "0x12334C0", VA = "0x12334C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9389A0", Offset = "0x9389A0")]
		add
		{
		}
		[Token(Token = "0x60004E9")]
		[Address(RVA = "0x12335F0", Offset = "0x12335F0", VA = "0x12335F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9389B0", Offset = "0x9389B0")]
		remove
		{
		}
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x1233720", Offset = "0x1233720", VA = "0x1233720")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x1233834", Offset = "0x1233834", VA = "0x1233834")]
	private void OnUpdateCameraCompleted(params object[] args)
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x1233D34", Offset = "0x1233D34", VA = "0x1233D34")]
	public IntPtr getNativeTextureId()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x1233D88", Offset = "0x1233D88", VA = "0x1233D88")]
	public bool startCamera()
	{
		return default(bool);
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0x1234808", Offset = "0x1234808", VA = "0x1234808")]
	public void enableSyncPose(bool enable)
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x12348F0", Offset = "0x12348F0", VA = "0x12348F0")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9389C0", Offset = "0x9389C0")]
	public WVR_CameraImageType GetCameraImageType()
	{
		return default(WVR_CameraImageType);
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x12348F8", Offset = "0x12348F8", VA = "0x12348F8")]
	public WVR_CameraImageType getImageType()
	{
		return default(WVR_CameraImageType);
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x1234910", Offset = "0x1234910", VA = "0x1234910")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9389F8", Offset = "0x9389F8")]
	public WVR_CameraImageFormat GetCameraImageFormat()
	{
		return default(WVR_CameraImageFormat);
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x1234928", Offset = "0x1234928", VA = "0x1234928")]
	public WVR_CameraImageFormat getImageFormat()
	{
		return default(WVR_CameraImageFormat);
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x1234940", Offset = "0x1234940", VA = "0x1234940")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x938A30", Offset = "0x938A30")]
	public uint GetCameraImageWidth()
	{
		return default(uint);
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x1234958", Offset = "0x1234958", VA = "0x1234958")]
	public uint getImageWidth()
	{
		return default(uint);
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x1234970", Offset = "0x1234970", VA = "0x1234970")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x938A68", Offset = "0x938A68")]
	public uint GetCameraImageHeight()
	{
		return default(uint);
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x1234988", Offset = "0x1234988", VA = "0x1234988")]
	public uint getImageHeight()
	{
		return default(uint);
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x12349A0", Offset = "0x12349A0", VA = "0x12349A0")]
	public uint getImageSize()
	{
		return default(uint);
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x12349B8", Offset = "0x12349B8", VA = "0x12349B8")]
	public bool isEnableSyncPose()
	{
		return default(bool);
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x12349D8", Offset = "0x12349D8", VA = "0x12349D8")]
	public IntPtr getNativeFrameBuffer()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x1234A2C", Offset = "0x1234A2C", VA = "0x1234A2C")]
	public void stopCamera()
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x1234C60", Offset = "0x1234C60", VA = "0x1234C60")]
	public WVR_PoseState_t getFramePose()
	{
		return default(WVR_PoseState_t);
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x1234C70", Offset = "0x1234C70", VA = "0x1234C70")]
	public void updateTexture(IntPtr textureId)
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0x12337E0", Offset = "0x12337E0", VA = "0x12337E0")]
	public WaveVR_CameraTexture()
	{
	}
}
[Token(Token = "0x2000061")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x925598", Offset = "0x925598")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x925598", Offset = "0x925598")]
public class WaveVR_CanvasEye : MonoBehaviour
{
	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Canvas canvas;

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x12350D0", Offset = "0x12350D0", VA = "0x12350D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x1235140", Offset = "0x1235140", VA = "0x1235140")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0x12352D4", Offset = "0x12352D4", VA = "0x12352D4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x1235468", Offset = "0x1235468", VA = "0x1235468")]
	private void MyRenderEye(WaveVR_Render render, WVR_Eye eye, WaveVR_Camera wvrCamera)
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x12354FC", Offset = "0x12354FC", VA = "0x12354FC")]
	public WaveVR_CanvasEye()
	{
	}
}
[Token(Token = "0x2000062")]
public class WaveVR_Controller
{
	[Token(Token = "0x2000443")]
	public enum EDeviceType
	{
		[Token(Token = "0x40019B1")]
		Head = 1,
		[Token(Token = "0x40019B2")]
		Dominant,
		[Token(Token = "0x40019B3")]
		NonDominant
	}

	[Token(Token = "0x2000444")]
	public class Device
	{
		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static WVR_InputId[] pressIds;

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int[] prevFrameCount_press;

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool[] state_press;

		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool[] prevState_press;

		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool[] event_state_press;

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static WVR_InputId[] touchIds;

		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int[] prevFrameCount_touch;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool[] state_touch;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool[] prevState_touch;

		[Token(Token = "0x40019BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool[] event_state_touch;

		[Token(Token = "0x40019BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x937D60", Offset = "0x937D60")]
		private WVR_DeviceType <DeviceType>k__BackingField;

		[Token(Token = "0x40019BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int prevFrame_connected;

		[Token(Token = "0x40019C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _connected;

		[Token(Token = "0x40019C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int prevFrame_pose;

		[Token(Token = "0x40019C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private WVR_PoseState_t pose;

		[Token(Token = "0x40019C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private WaveVR_Utils.RigidTransform rtPose;

		[Token(Token = "0x40019C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private WVR_Vector3f_t vel;

		[Token(Token = "0x40019C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Vector3 v3velocity;

		[Token(Token = "0x40019C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private WVR_Vector3f_t aVel;

		[Token(Token = "0x40019C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Vector3 v3AngularVelocity;

		[Token(Token = "0x40019C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private WVR_Axis_t axis;

		[Token(Token = "0x170003B4")]
		public WVR_DeviceType DeviceType
		{
			[Token(Token = "0x6002090")]
			[Address(RVA = "0x122DAD0", Offset = "0x122DAD0", VA = "0x122DAD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E098", Offset = "0x93E098")]
			get
			{
				return default(WVR_DeviceType);
			}
			[Token(Token = "0x6002091")]
			[Address(RVA = "0x1235FDC", Offset = "0x1235FDC", VA = "0x1235FDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E0A8", Offset = "0x93E0A8")]
			private set
			{
			}
		}

		[Token(Token = "0x170003B5")]
		public bool connected
		{
			[Token(Token = "0x6002093")]
			[Address(RVA = "0x122D060", Offset = "0x122D060", VA = "0x122D060")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6002094")]
			[Address(RVA = "0x1236E54", Offset = "0x1236E54", VA = "0x1236E54")]
			set
			{
			}
		}

		[Token(Token = "0x170003B6")]
		public WaveVR_Utils.RigidTransform transform
		{
			[Token(Token = "0x6002096")]
			[Address(RVA = "0x12370C8", Offset = "0x12370C8", VA = "0x12370C8")]
			get
			{
				return default(WaveVR_Utils.RigidTransform);
			}
		}

		[Token(Token = "0x170003B7")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x941050", Offset = "0x941050")]
		public WVR_Vector3f_t velocity
		{
			[Token(Token = "0x6002097")]
			[Address(RVA = "0x1237280", Offset = "0x1237280", VA = "0x1237280")]
			get
			{
				return default(WVR_Vector3f_t);
			}
		}

		[Token(Token = "0x170003B8")]
		public Vector3 V3Velocity
		{
			[Token(Token = "0x6002098")]
			[Address(RVA = "0x1237414", Offset = "0x1237414", VA = "0x1237414")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170003B9")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x941088", Offset = "0x941088")]
		public WVR_Vector3f_t AngularVelocity
		{
			[Token(Token = "0x6002099")]
			[Address(RVA = "0x12375E8", Offset = "0x12375E8", VA = "0x12375E8")]
			get
			{
				return default(WVR_Vector3f_t);
			}
		}

		[Token(Token = "0x170003BA")]
		public Vector3 V3AngularVelocity
		{
			[Token(Token = "0x600209A")]
			[Address(RVA = "0x123777C", Offset = "0x123777C", VA = "0x123777C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600208B")]
		[Address(RVA = "0x1235C74", Offset = "0x1235C74", VA = "0x1235C74")]
		public Device(WVR_DeviceType dt)
		{
		}

		[Token(Token = "0x600208C")]
		[Address(RVA = "0x12362EC", Offset = "0x12362EC", VA = "0x12362EC")]
		public void SetEventState_Press(WVR_InputId btn, bool down)
		{
		}

		[Token(Token = "0x600208D")]
		[Address(RVA = "0x1236734", Offset = "0x1236734", VA = "0x1236734")]
		public bool GetEventState_Press(WVR_InputId btn)
		{
			return default(bool);
		}

		[Token(Token = "0x600208E")]
		[Address(RVA = "0x123687C", Offset = "0x123687C", VA = "0x123687C")]
		public void SetEventState_Touch(WVR_InputId btn, bool down)
		{
		}

		[Token(Token = "0x600208F")]
		[Address(RVA = "0x1236CC4", Offset = "0x1236CC4", VA = "0x1236CC4")]
		public bool GetEventState_Touch(WVR_InputId btn)
		{
			return default(bool);
		}

		[Token(Token = "0x6002092")]
		[Address(RVA = "0x1236E0C", Offset = "0x1236E0C", VA = "0x1236E0C")]
		private bool AllowGetConnectionState()
		{
			return default(bool);
		}

		[Token(Token = "0x6002095")]
		[Address(RVA = "0x1237078", Offset = "0x1237078", VA = "0x1237078")]
		private bool AllowGetPoseState()
		{
			return default(bool);
		}

		[Token(Token = "0x600209B")]
		[Address(RVA = "0x1237950", Offset = "0x1237950", VA = "0x1237950")]
		private bool AllowPressActionInAFrame(WVR_InputId _id)
		{
			return default(bool);
		}

		[Token(Token = "0x600209C")]
		[Address(RVA = "0x1237AF0", Offset = "0x1237AF0", VA = "0x1237AF0")]
		private bool AllowTouchActionInAFrame(WVR_InputId _id)
		{
			return default(bool);
		}

		[Token(Token = "0x600209D")]
		[Address(RVA = "0x1237C90", Offset = "0x1237C90", VA = "0x1237C90")]
		private void Update_PressState(WVR_InputId _id)
		{
		}

		[Token(Token = "0x600209E")]
		[Address(RVA = "0x1237E54", Offset = "0x1237E54", VA = "0x1237E54")]
		private void Update_TouchState(WVR_InputId _id)
		{
		}

		[Token(Token = "0x600209F")]
		[Address(RVA = "0x1235FE4", Offset = "0x1235FE4", VA = "0x1235FE4")]
		public void ResetAllButtonStates()
		{
		}

		[Token(Token = "0x60020A0")]
		[Address(RVA = "0x1238018", Offset = "0x1238018", VA = "0x1238018")]
		public void ResetButtonEvents()
		{
		}

		[Token(Token = "0x60020A1")]
		[Address(RVA = "0x12381D8", Offset = "0x12381D8", VA = "0x12381D8")]
		public void UpdateButtonEvents()
		{
		}

		[Token(Token = "0x60020A2")]
		[Address(RVA = "0x123880C", Offset = "0x123880C", VA = "0x123880C")]
		public bool GetPress(WaveVR_ButtonList.EButtons btn)
		{
			return default(bool);
		}

		[Token(Token = "0x60020A3")]
		[Address(RVA = "0x1238810", Offset = "0x1238810", VA = "0x1238810")]
		public bool GetPress(WVR_InputId _id)
		{
			return default(bool);
		}

		[Token(Token = "0x60020A4")]
		[Address(RVA = "0x1238964", Offset = "0x1238964", VA = "0x1238964")]
		public bool GetPressDown(WaveVR_ButtonList.EButtons btn)
		{
			return default(bool);
		}

		[Token(Token = "0x60020A5")]
		[Address(RVA = "0x1238968", Offset = "0x1238968", VA = "0x1238968")]
		public bool GetPressDown(WVR_InputId _id)
		{
			return default(bool);
		}

		[Token(Token = "0x60020A6")]
		[Address(RVA = "0x1238AF8", Offset = "0x1238AF8", VA = "0x1238AF8")]
		public bool GetPressUp(WaveVR_ButtonList.EButtons btn)
		{
			return default(bool);
		}

		[Token(Token = "0x60020A7")]
		[Address(RVA = "0x1238AFC", Offset = "0x1238AFC", VA = "0x1238AFC")]
		public bool GetPressUp(WVR_InputId _id)
		{
			return default(bool);
		}

		[Token(Token = "0x60020A8")]
		[Address(RVA = "0x1238C8C", Offset = "0x1238C8C", VA = "0x1238C8C")]
		public bool GetTouch(WaveVR_ButtonList.EButtons btn)
		{
			return default(bool);
		}

		[Token(Token = "0x60020A9")]
		[Address(RVA = "0x1238C90", Offset = "0x1238C90", VA = "0x1238C90")]
		public bool GetTouch(WVR_InputId _id)
		{
			return default(bool);
		}

		[Token(Token = "0x60020AA")]
		[Address(RVA = "0x1238DE4", Offset = "0x1238DE4", VA = "0x1238DE4")]
		public bool GetTouchDown(WaveVR_ButtonList.EButtons btn)
		{
			return default(bool);
		}

		[Token(Token = "0x60020AB")]
		[Address(RVA = "0x1238DE8", Offset = "0x1238DE8", VA = "0x1238DE8")]
		public bool GetTouchDown(WVR_InputId _id)
		{
			return default(bool);
		}

		[Token(Token = "0x60020AC")]
		[Address(RVA = "0x1238F78", Offset = "0x1238F78", VA = "0x1238F78")]
		public bool GetTouchUp(WaveVR_ButtonList.EButtons btn)
		{
			return default(bool);
		}

		[Token(Token = "0x60020AD")]
		[Address(RVA = "0x1238F7C", Offset = "0x1238F7C", VA = "0x1238F7C")]
		public bool GetTouchUp(WVR_InputId _id)
		{
			return default(bool);
		}

		[Token(Token = "0x60020AE")]
		[Address(RVA = "0x123910C", Offset = "0x123910C", VA = "0x123910C")]
		public Vector2 GetAxis(WaveVR_ButtonList.EButtons btn)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60020AF")]
		[Address(RVA = "0x1239110", Offset = "0x1239110", VA = "0x1239110")]
		public Vector2 GetAxis(WVR_InputId btn)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60020B0")]
		[Address(RVA = "0x12391D0", Offset = "0x12391D0", VA = "0x12391D0")]
		public void TriggerHapticPulse(uint durationMicroSec = 1000000u, WVR_InputId id = WVR_InputId.WVR_InputId_16)
		{
		}

		[Token(Token = "0x60020B1")]
		[Address(RVA = "0x12391FC", Offset = "0x12391FC", VA = "0x12391FC")]
		public void TriggerVibration(WVR_InputId id, uint durationMicroSec, uint frequency, WVR_Intensity intensity)
		{
		}
	}

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool isLeftHanded;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static EDeviceType[] DeviceTypes;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Device[] devices;

	[Token(Token = "0x17000034")]
	public static bool IsLeftHanded
	{
		[Token(Token = "0x6000506")]
		[Address(RVA = "0x12355E4", Offset = "0x12355E4", VA = "0x12355E4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x1235504", Offset = "0x1235504", VA = "0x1235504")]
	private static void DEBUG(string msg)
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x123564C", Offset = "0x123564C", VA = "0x123564C")]
	public static void SetLeftHandedMode(bool lefthanded)
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x12356E8", Offset = "0x12356E8", VA = "0x12356E8")]
	public static EDeviceType GetEDeviceByWVRType(WVR_DeviceType type)
	{
		return default(EDeviceType);
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x12357B4", Offset = "0x12357B4", VA = "0x12357B4")]
	public static Device Input(WVR_DeviceType deviceIndex)
	{
		return null;
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0x122CF68", Offset = "0x122CF68", VA = "0x122CF68")]
	public static Device Input(EDeviceType type)
	{
		return null;
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0x1235858", Offset = "0x1235858", VA = "0x1235858")]
	private static Device ChangeRole(WVR_DeviceType deviceIndex)
	{
		return null;
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0x1235F34", Offset = "0x1235F34", VA = "0x1235F34")]
	public WaveVR_Controller()
	{
	}
}
[Token(Token = "0x2000063")]
public enum ERaycastStartPoint
{
	[Token(Token = "0x40003E5")]
	CenterOfEyes,
	[Token(Token = "0x40003E6")]
	LeftEye,
	[Token(Token = "0x40003E7")]
	RightEye
}
[Token(Token = "0x2000064")]
public class WaveVR_ControllerInputModule : BaseInputModule
{
	[Token(Token = "0x2000445")]
	public enum ERaycastMode
	{
		[Token(Token = "0x40019CA")]
		Beam,
		[Token(Token = "0x40019CB")]
		Fixed,
		[Token(Token = "0x40019CC")]
		Mouse
	}

	[Serializable]
	[Token(Token = "0x2000446")]
	public class CBeamConfig
	{
		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float StartWidth;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float EndWidth;

		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float StartOffset;

		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float EndOffset;

		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color32 StartColor;

		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color32 EndColor;

		[Token(Token = "0x60020B3")]
		[Address(RVA = "0xE29128", Offset = "0xE29128", VA = "0xE29128")]
		public void assignedTo(CBeamConfig src)
		{
		}

		[Token(Token = "0x60020B4")]
		[Address(RVA = "0xE291E8", Offset = "0xE291E8", VA = "0xE291E8")]
		public CBeamConfig()
		{
		}
	}

	[Token(Token = "0x2000447")]
	public class RaycastModeSetting
	{
		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x937D70", Offset = "0x937D70")]
		private ERaycastMode <Mode>k__BackingField;

		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x937D80", Offset = "0x937D80")]
		private CBeamConfig <Config>k__BackingField;

		[Token(Token = "0x170003BB")]
		public ERaycastMode Mode
		{
			[Token(Token = "0x60020B5")]
			[Address(RVA = "0xE29398", Offset = "0xE29398", VA = "0xE29398")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E0B8", Offset = "0x93E0B8")]
			get
			{
				return default(ERaycastMode);
			}
			[Token(Token = "0x60020B6")]
			[Address(RVA = "0xE296C4", Offset = "0xE296C4", VA = "0xE296C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E0C8", Offset = "0x93E0C8")]
			set
			{
			}
		}

		[Token(Token = "0x170003BC")]
		public CBeamConfig Config
		{
			[Token(Token = "0x60020B7")]
			[Address(RVA = "0xE293A0", Offset = "0xE293A0", VA = "0xE293A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E0D8", Offset = "0x93E0D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020B8")]
			[Address(RVA = "0xE296CC", Offset = "0xE296CC", VA = "0xE296CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E0E8", Offset = "0x93E0E8")]
			set
			{
			}
		}

		[Token(Token = "0x60020B9")]
		[Address(RVA = "0xE29688", Offset = "0xE29688", VA = "0xE29688")]
		public RaycastModeSetting(ERaycastMode mode, CBeamConfig config)
		{
		}
	}

	[Token(Token = "0x2000448")]
	public class EventController
	{
		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x937D90", Offset = "0x937D90")]
		private WaveVR_Controller.EDeviceType <device>k__BackingField;

		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x937DA0", Offset = "0x937DA0")]
		private GameObject <controller>k__BackingField;

		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x937DB0", Offset = "0x937DB0")]
		private GameObject <prevRaycastedObject>k__BackingField;

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x937DC0", Offset = "0x937DC0")]
		private PointerEventData <event_data>k__BackingField;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x937DD0", Offset = "0x937DD0")]
		private WaveVR_ControllerPointer <pointer>k__BackingField;

		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x937DE0", Offset = "0x937DE0")]
		private bool <pointerEnabled>k__BackingField;

		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x937DF0", Offset = "0x937DF0")]
		private WaveVR_Beam <beam>k__BackingField;

		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x937E00", Offset = "0x937E00")]
		private bool <beamEnabled>k__BackingField;

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<RaycastModeSetting> raycastModeSettings;

		[Token(Token = "0x40019DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x937E10", Offset = "0x937E10")]
		private bool <eligibleForButtonClick>k__BackingField;

		[Token(Token = "0x170003BD")]
		public WaveVR_Controller.EDeviceType device
		{
			[Token(Token = "0x60020BA")]
			[Address(RVA = "0xE291F0", Offset = "0xE291F0", VA = "0xE291F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E0F8", Offset = "0x93E0F8")]
			get
			{
				return default(WaveVR_Controller.EDeviceType);
			}
			[Token(Token = "0x60020BB")]
			[Address(RVA = "0xE291F8", Offset = "0xE291F8", VA = "0xE291F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E108", Offset = "0x93E108")]
			set
			{
			}
		}

		[Token(Token = "0x170003BE")]
		public GameObject controller
		{
			[Token(Token = "0x60020BC")]
			[Address(RVA = "0xE29200", Offset = "0xE29200", VA = "0xE29200")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E118", Offset = "0x93E118")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020BD")]
			[Address(RVA = "0xE29208", Offset = "0xE29208", VA = "0xE29208")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E128", Offset = "0x93E128")]
			set
			{
			}
		}

		[Token(Token = "0x170003BF")]
		public GameObject prevRaycastedObject
		{
			[Token(Token = "0x60020BE")]
			[Address(RVA = "0xE29210", Offset = "0xE29210", VA = "0xE29210")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E138", Offset = "0x93E138")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020BF")]
			[Address(RVA = "0xE29218", Offset = "0xE29218", VA = "0xE29218")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E148", Offset = "0x93E148")]
			set
			{
			}
		}

		[Token(Token = "0x170003C0")]
		public PointerEventData event_data
		{
			[Token(Token = "0x60020C0")]
			[Address(RVA = "0xE29220", Offset = "0xE29220", VA = "0xE29220")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E158", Offset = "0x93E158")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020C1")]
			[Address(RVA = "0xE29228", Offset = "0xE29228", VA = "0xE29228")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E168", Offset = "0x93E168")]
			set
			{
			}
		}

		[Token(Token = "0x170003C1")]
		public WaveVR_ControllerPointer pointer
		{
			[Token(Token = "0x60020C2")]
			[Address(RVA = "0xE29230", Offset = "0xE29230", VA = "0xE29230")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E178", Offset = "0x93E178")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020C3")]
			[Address(RVA = "0xE29238", Offset = "0xE29238", VA = "0xE29238")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E188", Offset = "0x93E188")]
			set
			{
			}
		}

		[Token(Token = "0x170003C2")]
		public bool pointerEnabled
		{
			[Token(Token = "0x60020C4")]
			[Address(RVA = "0xE29240", Offset = "0xE29240", VA = "0xE29240")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E198", Offset = "0x93E198")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60020C5")]
			[Address(RVA = "0xE29248", Offset = "0xE29248", VA = "0xE29248")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E1A8", Offset = "0x93E1A8")]
			set
			{
			}
		}

		[Token(Token = "0x170003C3")]
		public WaveVR_Beam beam
		{
			[Token(Token = "0x60020C6")]
			[Address(RVA = "0xE29254", Offset = "0xE29254", VA = "0xE29254")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E1B8", Offset = "0x93E1B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60020C7")]
			[Address(RVA = "0xE2925C", Offset = "0xE2925C", VA = "0xE2925C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E1C8", Offset = "0x93E1C8")]
			set
			{
			}
		}

		[Token(Token = "0x170003C4")]
		public bool beamEnabled
		{
			[Token(Token = "0x60020C8")]
			[Address(RVA = "0xE29264", Offset = "0xE29264", VA = "0xE29264")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E1D8", Offset = "0x93E1D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60020C9")]
			[Address(RVA = "0xE2926C", Offset = "0xE2926C", VA = "0xE2926C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E1E8", Offset = "0x93E1E8")]
			set
			{
			}
		}

		[Token(Token = "0x170003C5")]
		public bool eligibleForButtonClick
		{
			[Token(Token = "0x60020CC")]
			[Address(RVA = "0xE294AC", Offset = "0xE294AC", VA = "0xE294AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E1F8", Offset = "0x93E1F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60020CD")]
			[Address(RVA = "0xE294B4", Offset = "0xE294B4", VA = "0xE294B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E208", Offset = "0x93E208")]
			set
			{
			}
		}

		[Token(Token = "0x60020CA")]
		[Address(RVA = "0xE29278", Offset = "0xE29278", VA = "0xE29278")]
		public void SetBeamConfig(ERaycastMode mode, CBeamConfig config)
		{
		}

		[Token(Token = "0x60020CB")]
		[Address(RVA = "0xE293A8", Offset = "0xE293A8", VA = "0xE293A8")]
		public CBeamConfig GetBeamConfig(ERaycastMode mode)
		{
			return null;
		}

		[Token(Token = "0x60020CE")]
		[Address(RVA = "0xE294C0", Offset = "0xE294C0", VA = "0xE294C0")]
		public EventController(WaveVR_Controller.EDeviceType type)
		{
		}
	}

	[Token(Token = "0x40003E8")]
	private const string LOG_TAG = "WaveVR_ControllerInputModule";

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ERaycastMode[] RaycastModes;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public bool UnityMode;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[HideInInspector]
	public bool UnityMode_PriorDrag;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool DomintEventEnabled;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject DominantController;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public LayerMask DominantRaycastMask;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool NoDomtEventEnabled;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject NonDominantController;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public LayerMask NonDominantRaycastMask;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<WaveVR_ButtonList.EButtons> ButtonToTrigger;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject Head;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	public ERaycastMode RaycastMode;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[HideInInspector]
	public ERaycastStartPoint RaycastStartPoint;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x928D40", Offset = "0x928D40")]
	public string CanvasTag;

	[Token(Token = "0x40003F7")]
	private const float CLICK_TIME = 0.2f;

	[Token(Token = "0x40003F8")]
	private const float DRAG_TIME = 0.2f;

	[Token(Token = "0x40003F9")]
	private const float raycastStartPointOffset = 0.0315f;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject pointCameraNoDomt;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject pointCameraDomint;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float FixedBeamLength;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float lengthFromBeamToPointer;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Color32 FlexiblePointerColor;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ERaycastMode preRaycastMode;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool toChangeBeamPointer;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private Vector3 DomintIntersectPos_prev;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector3 NoDomtIntersectPos_prev;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[SerializeField]
	private bool mForceModuleActive;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private CBeamConfig mouseBeamConfig;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private CBeamConfig fixedBeamConfig;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private CBeamConfig flexibleBeamConfig;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private List<EventController> EventControllers;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool enableControllerInputModule;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private List<RaycastResult> physicsRaycastResultsDominant;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private List<RaycastResult> physicsRaycastResultsNoDomint;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private List<GameObject> physicsRaycastObjectsDominant;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private List<GameObject> prePhysicsRaycastObjectsDominant;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private List<GameObject> physicsRaycastObjectsNoDomint;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private List<GameObject> prePhysicsRaycastObjectsNoDomint;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private List<GameObject> physicsRaycastObjectsTmp;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private List<GameObject> prePhysicsRaycastObjectsTmp;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private List<RaycastResult> graphicRaycastResultsDominant;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private List<RaycastResult> graphicRaycastResultsNoDomint;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private List<GameObject> graphicRaycastObjectsDominant;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<GameObject> preGraphicRaycastObjectsDominant;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private List<GameObject> graphicRaycastObjectsNoDomint;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private List<GameObject> preGraphicRaycastObjectsNoDomint;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private List<GameObject> graphicRaycastObjectsTmp;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private List<GameObject> preGraphicRaycastObjectsTmp;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Vector2 centerOfScreen;

	[Token(Token = "0x17000035")]
	public bool ForceModuleActive
	{
		[Token(Token = "0x6000510")]
		[Address(RVA = "0x12393E8", Offset = "0x12393E8", VA = "0x12393E8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000511")]
		[Address(RVA = "0x12393F0", Offset = "0x12393F0", VA = "0x12393F0")]
		set
		{
		}
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0x12392C8", Offset = "0x12392C8", VA = "0x12392C8")]
	private void DEBUG(string msg)
	{
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x1239370", Offset = "0x1239370", VA = "0x1239370")]
	private void INFO(string msg)
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x12393FC", Offset = "0x12393FC", VA = "0x12393FC", Slot = "25")]
	public override bool IsModuleSupported()
	{
		return default(bool);
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x1239404", Offset = "0x1239404", VA = "0x1239404", Slot = "21")]
	public override bool ShouldActivateModule()
	{
		return default(bool);
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x1239438", Offset = "0x1239438", VA = "0x1239438", Slot = "22")]
	public override void DeactivateModule()
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x1239568", Offset = "0x1239568", VA = "0x1239568")]
	private EventController GetEventController(WaveVR_Controller.EDeviceType dt)
	{
		return null;
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x1239B04", Offset = "0x1239B04", VA = "0x1239B04")]
	private void UpdateControllerModelInProcess()
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x1239E64", Offset = "0x1239E64", VA = "0x1239E64")]
	private void SetupEventController(EventController eventController, GameObject controller_model, LayerMask mask)
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x123AADC", Offset = "0x123AADC", VA = "0x123AADC")]
	private void SetupEventControllerBeam(EventController eventController, Vector3 intersectionPosition, bool updateRaycastConfig = false)
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x123BBC8", Offset = "0x123BBC8", VA = "0x123BBC8")]
	private void SetupEventControllerPointer(EventController eventController, Camera eventCamera, Vector3 intersectionPosition)
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x123BAE4", Offset = "0x123BAE4", VA = "0x123BAE4")]
	private void SetupEventControllerPointer(EventController eventController)
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x123C660", Offset = "0x123C660", VA = "0x123C660")]
	public void ChangeBeamLength(WaveVR_Controller.EDeviceType dt, float length)
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x123C760", Offset = "0x123C760", VA = "0x123C760")]
	private void SetupPointerCamera(WaveVR_Controller.EDeviceType type)
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x123D570", Offset = "0x123D570", VA = "0x123D570", Slot = "5")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x123D898", Offset = "0x123D898", VA = "0x123D898", Slot = "7")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x123DA08", Offset = "0x123DA08", VA = "0x123DA08", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x12409AC", Offset = "0x12409AC", VA = "0x12409AC")]
	private void PhysicsRaycast(EventController event_controller, PhysicsRaycaster raycaster)
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x123F4D4", Offset = "0x123F4D4", VA = "0x123F4D4")]
	private void GraphicRaycast(EventController event_controller, Camera event_camera)
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x1244DDC", Offset = "0x1244DDC", VA = "0x1244DDC")]
	private bool IsPhysicalRaycasted(EventController event_controller, GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x1244EAC", Offset = "0x1244EAC", VA = "0x1244EAC")]
	private bool IsGraphicRaycasted(EventController event_controller, GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x1241614", Offset = "0x1241614", VA = "0x1241614")]
	private void EnterExitPhysicsObject(EventController event_controller)
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x1241068", Offset = "0x1241068", VA = "0x1241068")]
	private void EnterExitGraphicObject(EventController event_controller)
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x1239664", Offset = "0x1239664", VA = "0x1239664")]
	private void ExitAllObjects(EventController event_controller)
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x124282C", Offset = "0x124282C", VA = "0x124282C")]
	private void OnTriggerDown(WaveVR_Controller.EDeviceType type, PointerEventData event_data)
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x12430F0", Offset = "0x12430F0", VA = "0x12430F0")]
	private void OnTriggerUp(WaveVR_Controller.EDeviceType type, PointerEventData event_data)
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x1243A2C", Offset = "0x1243A2C", VA = "0x1243A2C")]
	private void OnTriggerUpMouse(WaveVR_Controller.EDeviceType type, PointerEventData event_data)
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0x1241C68", Offset = "0x1241C68", VA = "0x1241C68")]
	private void OnDrag(WaveVR_Controller.EDeviceType type, PointerEventData event_data)
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0x124249C", Offset = "0x124249C", VA = "0x124249C")]
	private void OnDragMouse(WaveVR_Controller.EDeviceType type, PointerEventData event_data)
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0x1241BC0", Offset = "0x1241BC0", VA = "0x1241BC0")]
	private void OnTriggerHover(WaveVR_Controller.EDeviceType type, PointerEventData event_data)
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0x1245078", Offset = "0x1245078", VA = "0x1245078")]
	private void OnTriggerEnterAndExit(WaveVR_Controller.EDeviceType type, PointerEventData event_data)
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x12455D4", Offset = "0x12455D4", VA = "0x12455D4")]
	private void onButtonClick(EventController event_controller)
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x123F3AC", Offset = "0x123F3AC", VA = "0x123F3AC")]
	private void ResetPointerEventData(WaveVR_Controller.EDeviceType type)
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x123F1E0", Offset = "0x123F1E0", VA = "0x123F1E0")]
	private void ResetPointerEventData_Hybrid(WaveVR_Controller.EDeviceType type, Camera eventCam)
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x1244830", Offset = "0x1244830", VA = "0x1244830")]
	private Vector3 GetIntersectionPosition(Camera cam, RaycastResult raycastResult)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x123C5E4", Offset = "0x123C5E4", VA = "0x123C5E4")]
	private GameObject GetRaycastedObject(WaveVR_Controller.EDeviceType type)
	{
		return null;
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x123EC18", Offset = "0x123EC18", VA = "0x123EC18")]
	private void CheckBeamPointerActive(EventController eventController)
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x12449FC", Offset = "0x12449FC", VA = "0x12449FC")]
	private void SetPointerCameraTracker()
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x1245AD4", Offset = "0x1245AD4", VA = "0x1245AD4")]
	private GameObject[] MergeArray(GameObject[] start, GameObject[] end)
	{
		return null;
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x1244F7C", Offset = "0x1244F7C", VA = "0x1244F7C")]
	private void CopyList(List<GameObject> src, List<GameObject> dst)
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x1245DD4", Offset = "0x1245DD4", VA = "0x1245DD4")]
	public WaveVR_ControllerInputModule()
	{
	}
}
[Token(Token = "0x2000065")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x925620", Offset = "0x925620")]
public class WaveVR_ControllerListener : MonoBehaviour
{
	[Token(Token = "0x2000449")]
	public class Device
	{
		[Token(Token = "0x200062E")]
		public delegate void ButtonEventHandler();

		[Token(Token = "0x200062F")]
		public delegate void ConnectionEventHandler(bool value);

		[Token(Token = "0x2000630")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9280E0", Offset = "0x9280E0")]
		private sealed class <PollingConnectionStatus>d__69 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002256")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002257")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002258")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Device <>4__this;

			[Token(Token = "0x17000502")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600280F")]
				[Address(RVA = "0xE300EC", Offset = "0xE300EC", VA = "0xE300EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000503")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002811")]
				[Address(RVA = "0xE3015C", Offset = "0xE3015C", VA = "0xE3015C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600280C")]
			[Address(RVA = "0xE2F5B8", Offset = "0xE2F5B8", VA = "0xE2F5B8")]
			[DebuggerHidden]
			public <PollingConnectionStatus>d__69(int <>1__state)
			{
			}

			[Token(Token = "0x600280D")]
			[Address(RVA = "0xE2FB90", Offset = "0xE2FB90", VA = "0xE2FB90", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600280E")]
			[Address(RVA = "0xE2FB94", Offset = "0xE2FB94", VA = "0xE2FB94", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002810")]
			[Address(RVA = "0xE300F4", Offset = "0xE300F4", VA = "0xE300F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000631")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9280F0", Offset = "0x9280F0")]
		private sealed class <PollingPressState_Menu>d__71 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002259")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400225A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400225B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Device <>4__this;

			[Token(Token = "0x17000504")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002815")]
				[Address(RVA = "0xE30B44", Offset = "0xE30B44", VA = "0xE30B44", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000505")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002817")]
				[Address(RVA = "0xE30BB4", Offset = "0xE30BB4", VA = "0xE30BB4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002812")]
			[Address(RVA = "0xE2F734", Offset = "0xE2F734", VA = "0xE2F734")]
			[DebuggerHidden]
			public <PollingPressState_Menu>d__71(int <>1__state)
			{
			}

			[Token(Token = "0x6002813")]
			[Address(RVA = "0xE30890", Offset = "0xE30890", VA = "0xE30890", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002814")]
			[Address(RVA = "0xE30894", Offset = "0xE30894", VA = "0xE30894", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002816")]
			[Address(RVA = "0xE30B4C", Offset = "0xE30B4C", VA = "0xE30B4C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000632")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x928100", Offset = "0x928100")]
		private sealed class <PollingPressState_Grip>d__72 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400225C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400225D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400225E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Device <>4__this;

			[Token(Token = "0x17000506")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600281B")]
				[Address(RVA = "0xE30818", Offset = "0xE30818", VA = "0xE30818", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000507")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600281D")]
				[Address(RVA = "0xE30888", Offset = "0xE30888", VA = "0xE30888", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002818")]
			[Address(RVA = "0xE2F760", Offset = "0xE2F760", VA = "0xE2F760")]
			[DebuggerHidden]
			public <PollingPressState_Grip>d__72(int <>1__state)
			{
			}

			[Token(Token = "0x6002819")]
			[Address(RVA = "0xE30164", Offset = "0xE30164", VA = "0xE30164", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600281A")]
			[Address(RVA = "0xE30168", Offset = "0xE30168", VA = "0xE30168", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600281C")]
			[Address(RVA = "0xE30820", Offset = "0xE30820", VA = "0xE30820", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000633")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x928110", Offset = "0x928110")]
		private sealed class <PollingPressState_Touchpad>d__73 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400225F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002260")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002261")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Device <>4__this;

			[Token(Token = "0x17000508")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002821")]
				[Address(RVA = "0xE30E70", Offset = "0xE30E70", VA = "0xE30E70", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000509")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002823")]
				[Address(RVA = "0xE30EE0", Offset = "0xE30EE0", VA = "0xE30EE0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600281E")]
			[Address(RVA = "0xE2F78C", Offset = "0xE2F78C", VA = "0xE2F78C")]
			[DebuggerHidden]
			public <PollingPressState_Touchpad>d__73(int <>1__state)
			{
			}

			[Token(Token = "0x600281F")]
			[Address(RVA = "0xE30BBC", Offset = "0xE30BBC", VA = "0xE30BBC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002820")]
			[Address(RVA = "0xE30BC0", Offset = "0xE30BC0", VA = "0xE30BC0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002822")]
			[Address(RVA = "0xE30E78", Offset = "0xE30E78", VA = "0xE30E78", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000634")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x928120", Offset = "0x928120")]
		private sealed class <PollingPressState_Trigger>d__74 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002262")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002263")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002264")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Device <>4__this;

			[Token(Token = "0x1700050A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002827")]
				[Address(RVA = "0xE3119C", Offset = "0xE3119C", VA = "0xE3119C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700050B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002829")]
				[Address(RVA = "0xE3120C", Offset = "0xE3120C", VA = "0xE3120C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002824")]
			[Address(RVA = "0xE2F7B8", Offset = "0xE2F7B8", VA = "0xE2F7B8")]
			[DebuggerHidden]
			public <PollingPressState_Trigger>d__74(int <>1__state)
			{
			}

			[Token(Token = "0x6002825")]
			[Address(RVA = "0xE30EE8", Offset = "0xE30EE8", VA = "0xE30EE8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002826")]
			[Address(RVA = "0xE30EEC", Offset = "0xE30EEC", VA = "0xE30EEC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002828")]
			[Address(RVA = "0xE311A4", Offset = "0xE311A4", VA = "0xE311A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000635")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x928130", Offset = "0x928130")]
		private sealed class <PollingTouchState_Touchpad>d__76 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002265")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002266")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002267")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Device <>4__this;

			[Token(Token = "0x1700050C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600282D")]
				[Address(RVA = "0xE314C8", Offset = "0xE314C8", VA = "0xE314C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700050D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600282F")]
				[Address(RVA = "0xE31538", Offset = "0xE31538", VA = "0xE31538", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600282A")]
			[Address(RVA = "0xE2F8B4", Offset = "0xE2F8B4", VA = "0xE2F8B4")]
			[DebuggerHidden]
			public <PollingTouchState_Touchpad>d__76(int <>1__state)
			{
			}

			[Token(Token = "0x600282B")]
			[Address(RVA = "0xE31214", Offset = "0xE31214", VA = "0xE31214", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600282C")]
			[Address(RVA = "0xE31218", Offset = "0xE31218", VA = "0xE31218", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600282E")]
			[Address(RVA = "0xE314D0", Offset = "0xE314D0", VA = "0xE314D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000636")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x928140", Offset = "0x928140")]
		private sealed class <PollingTouchState_Trigger>d__77 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002268")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002269")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400226A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Device <>4__this;

			[Token(Token = "0x1700050E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002833")]
				[Address(RVA = "0xE317F4", Offset = "0xE317F4", VA = "0xE317F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700050F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002835")]
				[Address(RVA = "0xE31864", Offset = "0xE31864", VA = "0xE31864", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002830")]
			[Address(RVA = "0xE2F8E0", Offset = "0xE2F8E0", VA = "0xE2F8E0")]
			[DebuggerHidden]
			public <PollingTouchState_Trigger>d__77(int <>1__state)
			{
			}

			[Token(Token = "0x6002831")]
			[Address(RVA = "0xE31540", Offset = "0xE31540", VA = "0xE31540", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002832")]
			[Address(RVA = "0xE31544", Offset = "0xE31544", VA = "0xE31544", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002834")]
			[Address(RVA = "0xE317FC", Offset = "0xE317FC", VA = "0xE317FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40019DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ulong Input_Mask_Menu;

		[Token(Token = "0x40019E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static ulong Input_Mask_Grip;

		[Token(Token = "0x40019E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static ulong Input_Mask_Touchpad;

		[Token(Token = "0x40019E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static ulong Input_Mask_Trigger;

		[Token(Token = "0x40019E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IEnumerator ieConnection;

		[Token(Token = "0x40019E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IEnumerator iePressMenu;

		[Token(Token = "0x40019E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IEnumerator iePressGrip;

		[Token(Token = "0x40019E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IEnumerator iePressTouchpad;

		[Token(Token = "0x40019E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IEnumerator iePressTrigger;

		[Token(Token = "0x40019E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IEnumerator ieTouchTouchpad;

		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IEnumerator ieTouchTrigger;

		[Token(Token = "0x40019EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x937E20", Offset = "0x937E20")]
		private WVR_DeviceType <DeviceType>k__BackingField;

		[Token(Token = "0x40019EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		internal WaveVR_Utils.RigidTransform rtPose;

		[Token(Token = "0x40019EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal WaveVR_Utils.WVR_ButtonState_t state;

		[Token(Token = "0x40019ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal WaveVR_Utils.WVR_ButtonState_t pre_state;

		[Token(Token = "0x40019EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal WVR_Axis_t axis;

		[Token(Token = "0x40019EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal WVR_PoseState_t pose;

		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private WaitForEndOfFrame waitForEndOfFrame;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x937EF0", Offset = "0x937EF0")]
		private bool <connected>k__BackingField;

		[Token(Token = "0x170003C6")]
		public WVR_DeviceType DeviceType
		{
			[Token(Token = "0x60020D0")]
			[Address(RVA = "0xE2D4BC", Offset = "0xE2D4BC", VA = "0xE2D4BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E218", Offset = "0x93E218")]
			get
			{
				return default(WVR_DeviceType);
			}
			[Token(Token = "0x60020D1")]
			[Address(RVA = "0xE2D85C", Offset = "0xE2D85C", VA = "0xE2D85C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E228", Offset = "0x93E228")]
			private set
			{
			}
		}

		[Token(Token = "0x170003C7")]
		public WaveVR_Utils.RigidTransform transform
		{
			[Token(Token = "0x60020D2")]
			[Address(RVA = "0xE2DB90", Offset = "0xE2DB90", VA = "0xE2DB90")]
			get
			{
				return default(WaveVR_Utils.RigidTransform);
			}
		}

		[Token(Token = "0x170003C8")]
		public bool connected
		{
			[Token(Token = "0x60020EB")]
			[Address(RVA = "0xE2F3C4", Offset = "0xE2F3C4", VA = "0xE2F3C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E3B8", Offset = "0x93E3B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60020EC")]
			[Address(RVA = "0xE2F3CC", Offset = "0xE2F3CC", VA = "0xE2F3CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E3C8", Offset = "0x93E3C8")]
			private set
			{
			}
		}

		[Token(Token = "0x14000069")]
		public event ButtonEventHandler PressDownListenersMenu
		{
			[Token(Token = "0x60020D3")]
			[Address(RVA = "0xE2DD44", Offset = "0xE2DD44", VA = "0xE2DD44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E238", Offset = "0x93E238")]
			add
			{
			}
			[Token(Token = "0x60020D4")]
			[Address(RVA = "0xE2DE34", Offset = "0xE2DE34", VA = "0xE2DE34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E248", Offset = "0x93E248")]
			remove
			{
			}
		}

		[Token(Token = "0x1400006A")]
		public event ButtonEventHandler PressDownListenersGrip
		{
			[Token(Token = "0x60020D5")]
			[Address(RVA = "0xE2DF24", Offset = "0xE2DF24", VA = "0xE2DF24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E258", Offset = "0x93E258")]
			add
			{
			}
			[Token(Token = "0x60020D6")]
			[Address(RVA = "0xE2E014", Offset = "0xE2E014", VA = "0xE2E014")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E268", Offset = "0x93E268")]
			remove
			{
			}
		}

		[Token(Token = "0x1400006B")]
		public event ButtonEventHandler PressDownListenersTouchpad
		{
			[Token(Token = "0x60020D7")]
			[Address(RVA = "0xE2E104", Offset = "0xE2E104", VA = "0xE2E104")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E278", Offset = "0x93E278")]
			add
			{
			}
			[Token(Token = "0x60020D8")]
			[Address(RVA = "0xE2E1F4", Offset = "0xE2E1F4", VA = "0xE2E1F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E288", Offset = "0x93E288")]
			remove
			{
			}
		}

		[Token(Token = "0x1400006C")]
		public event ButtonEventHandler PressDownListenersTrigger
		{
			[Token(Token = "0x60020D9")]
			[Address(RVA = "0xE2E2E4", Offset = "0xE2E2E4", VA = "0xE2E2E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E298", Offset = "0x93E298")]
			add
			{
			}
			[Token(Token = "0x60020DA")]
			[Address(RVA = "0xE2E3D4", Offset = "0xE2E3D4", VA = "0xE2E3D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E2A8", Offset = "0x93E2A8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400006D")]
		public event ButtonEventHandler PressUpListenersMenu
		{
			[Token(Token = "0x60020DB")]
			[Address(RVA = "0xE2E4C4", Offset = "0xE2E4C4", VA = "0xE2E4C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E2B8", Offset = "0x93E2B8")]
			add
			{
			}
			[Token(Token = "0x60020DC")]
			[Address(RVA = "0xE2E5B4", Offset = "0xE2E5B4", VA = "0xE2E5B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E2C8", Offset = "0x93E2C8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400006E")]
		public event ButtonEventHandler PressUpListenersGrip
		{
			[Token(Token = "0x60020DD")]
			[Address(RVA = "0xE2E6A4", Offset = "0xE2E6A4", VA = "0xE2E6A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E2D8", Offset = "0x93E2D8")]
			add
			{
			}
			[Token(Token = "0x60020DE")]
			[Address(RVA = "0xE2E794", Offset = "0xE2E794", VA = "0xE2E794")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E2E8", Offset = "0x93E2E8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400006F")]
		public event ButtonEventHandler PressUpListenersTouchpad
		{
			[Token(Token = "0x60020DF")]
			[Address(RVA = "0xE2E884", Offset = "0xE2E884", VA = "0xE2E884")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E2F8", Offset = "0x93E2F8")]
			add
			{
			}
			[Token(Token = "0x60020E0")]
			[Address(RVA = "0xE2E974", Offset = "0xE2E974", VA = "0xE2E974")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E308", Offset = "0x93E308")]
			remove
			{
			}
		}

		[Token(Token = "0x14000070")]
		public event ButtonEventHandler PressUpListenersTrigger
		{
			[Token(Token = "0x60020E1")]
			[Address(RVA = "0xE2EA64", Offset = "0xE2EA64", VA = "0xE2EA64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E318", Offset = "0x93E318")]
			add
			{
			}
			[Token(Token = "0x60020E2")]
			[Address(RVA = "0xE2EB54", Offset = "0xE2EB54", VA = "0xE2EB54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E328", Offset = "0x93E328")]
			remove
			{
			}
		}

		[Token(Token = "0x14000071")]
		public event ButtonEventHandler TouchDownListenersTouchpad
		{
			[Token(Token = "0x60020E3")]
			[Address(RVA = "0xE2EC44", Offset = "0xE2EC44", VA = "0xE2EC44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E338", Offset = "0x93E338")]
			add
			{
			}
			[Token(Token = "0x60020E4")]
			[Address(RVA = "0xE2ED34", Offset = "0xE2ED34", VA = "0xE2ED34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E348", Offset = "0x93E348")]
			remove
			{
			}
		}

		[Token(Token = "0x14000072")]
		public event ButtonEventHandler TouchDownListenersTrigger
		{
			[Token(Token = "0x60020E5")]
			[Address(RVA = "0xE2EE24", Offset = "0xE2EE24", VA = "0xE2EE24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E358", Offset = "0x93E358")]
			add
			{
			}
			[Token(Token = "0x60020E6")]
			[Address(RVA = "0xE2EF14", Offset = "0xE2EF14", VA = "0xE2EF14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E368", Offset = "0x93E368")]
			remove
			{
			}
		}

		[Token(Token = "0x14000073")]
		public event ButtonEventHandler TouchUpListenersTouchpad
		{
			[Token(Token = "0x60020E7")]
			[Address(RVA = "0xE2F004", Offset = "0xE2F004", VA = "0xE2F004")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E378", Offset = "0x93E378")]
			add
			{
			}
			[Token(Token = "0x60020E8")]
			[Address(RVA = "0xE2F0F4", Offset = "0xE2F0F4", VA = "0xE2F0F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E388", Offset = "0x93E388")]
			remove
			{
			}
		}

		[Token(Token = "0x14000074")]
		public event ButtonEventHandler TouchUpListenersTrigger
		{
			[Token(Token = "0x60020E9")]
			[Address(RVA = "0xE2F1E4", Offset = "0xE2F1E4", VA = "0xE2F1E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E398", Offset = "0x93E398")]
			add
			{
			}
			[Token(Token = "0x60020EA")]
			[Address(RVA = "0xE2F2D4", Offset = "0xE2F2D4", VA = "0xE2F2D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E3A8", Offset = "0x93E3A8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000075")]
		public event ConnectionEventHandler ConnectionStatusListeners
		{
			[Token(Token = "0x60020ED")]
			[Address(RVA = "0xE2F3D8", Offset = "0xE2F3D8", VA = "0xE2F3D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E3D8", Offset = "0x93E3D8")]
			add
			{
			}
			[Token(Token = "0x60020EE")]
			[Address(RVA = "0xE2F4C8", Offset = "0xE2F4C8", VA = "0xE2F4C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E3E8", Offset = "0x93E3E8")]
			remove
			{
			}
		}

		[Token(Token = "0x60020CF")]
		[Address(RVA = "0xE2D32C", Offset = "0xE2D32C", VA = "0xE2D32C")]
		public Device(WVR_DeviceType dt)
		{
		}

		[Token(Token = "0x60020EF")]
		[Address(RVA = "0xE2D864", Offset = "0xE2D864", VA = "0xE2D864")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93E3F8", Offset = "0x93E3F8")]
		private IEnumerator PollingConnectionStatus()
		{
			return null;
		}

		[Token(Token = "0x60020F0")]
		[Address(RVA = "0xE2F5E4", Offset = "0xE2F5E4", VA = "0xE2F5E4")]
		public bool GetPress(WVR_InputId _id)
		{
			return default(bool);
		}

		[Token(Token = "0x60020F1")]
		[Address(RVA = "0xE2D8D8", Offset = "0xE2D8D8", VA = "0xE2D8D8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93E45C", Offset = "0x93E45C")]
		private IEnumerator PollingPressState_Menu()
		{
			return null;
		}

		[Token(Token = "0x60020F2")]
		[Address(RVA = "0xE2D94C", Offset = "0xE2D94C", VA = "0xE2D94C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93E4C0", Offset = "0x93E4C0")]
		private IEnumerator PollingPressState_Grip()
		{
			return null;
		}

		[Token(Token = "0x60020F3")]
		[Address(RVA = "0xE2D9C0", Offset = "0xE2D9C0", VA = "0xE2D9C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93E524", Offset = "0x93E524")]
		private IEnumerator PollingPressState_Touchpad()
		{
			return null;
		}

		[Token(Token = "0x60020F4")]
		[Address(RVA = "0xE2DA34", Offset = "0xE2DA34", VA = "0xE2DA34")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93E588", Offset = "0x93E588")]
		private IEnumerator PollingPressState_Trigger()
		{
			return null;
		}

		[Token(Token = "0x60020F5")]
		[Address(RVA = "0xE2F7E4", Offset = "0xE2F7E4", VA = "0xE2F7E4")]
		public bool GetTouch(WVR_InputId _id)
		{
			return default(bool);
		}

		[Token(Token = "0x60020F6")]
		[Address(RVA = "0xE2DAA8", Offset = "0xE2DAA8", VA = "0xE2DAA8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93E5EC", Offset = "0x93E5EC")]
		private IEnumerator PollingTouchState_Touchpad()
		{
			return null;
		}

		[Token(Token = "0x60020F7")]
		[Address(RVA = "0xE2DB1C", Offset = "0xE2DB1C", VA = "0xE2DB1C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93E650", Offset = "0x93E650")]
		private IEnumerator PollingTouchState_Trigger()
		{
			return null;
		}

		[Token(Token = "0x60020F8")]
		[Address(RVA = "0xE2F90C", Offset = "0xE2F90C", VA = "0xE2F90C")]
		public Vector2 GetAxis(WVR_InputId _id)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60020F9")]
		[Address(RVA = "0xE2FA84", Offset = "0xE2FA84", VA = "0xE2FA84")]
		public void TriggerHapticPulse(uint _durationMicroSec = 1000000u, WVR_InputId _id = WVR_InputId.WVR_InputId_16)
		{
		}
	}

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static WaveVR_ControllerListener instance;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Device[] devices;

	[Token(Token = "0x17000036")]
	public static WaveVR_ControllerListener Instance
	{
		[Token(Token = "0x6000539")]
		[Address(RVA = "0xE2CDD4", Offset = "0xE2CDD4", VA = "0xE2CDD4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0xE2CF84", Offset = "0xE2CF84", VA = "0xE2CF84")]
	public Device ChangeRole(WVR_DeviceType deviceIndex)
	{
		return null;
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0xE2D4C4", Offset = "0xE2D4C4", VA = "0xE2D4C4")]
	public Device Input(WVR_DeviceType deviceIndex)
	{
		return null;
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0xE2D550", Offset = "0xE2D550", VA = "0xE2D550")]
	public Device Input(WaveVR_Controller.EDeviceType type)
	{
		return null;
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0xE2D5D8", Offset = "0xE2D5D8", VA = "0xE2D5D8")]
	private void Start()
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0xE2D7E8", Offset = "0xE2D7E8", VA = "0xE2D7E8")]
	private void Update()
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0xE2D7EC", Offset = "0xE2D7EC", VA = "0xE2D7EC")]
	public WaveVR_ControllerListener()
	{
	}
}
[Token(Token = "0x2000066")]
public class WaveVR_ControllerLoader : MonoBehaviour
{
	[Token(Token = "0x200044A")]
	public enum ControllerHand
	{
		[Token(Token = "0x4001A00")]
		Dominant,
		[Token(Token = "0x4001A01")]
		Non_Dominant
	}

	[Token(Token = "0x200044B")]
	public enum CComponent
	{
		[Token(Token = "0x4001A03")]
		One_Bone,
		[Token(Token = "0x4001A04")]
		Multi_Component
	}

	[Token(Token = "0x200044C")]
	public enum CTrackingSpace
	{
		[Token(Token = "0x4001A06")]
		REAL_POSITION_ONLY,
		[Token(Token = "0x4001A07")]
		FAKE_POSITION_ONLY,
		[Token(Token = "0x4001A08")]
		AUTO_POSITION_ONLY,
		[Token(Token = "0x4001A09")]
		ROTATION_ONLY,
		[Token(Token = "0x4001A0A")]
		ROTATION_AND_REAL_POSITION,
		[Token(Token = "0x4001A0B")]
		ROTATION_AND_FAKE_POSITION,
		[Token(Token = "0x4001A0C")]
		ROTATION_AND_AUTO_POSITION,
		[Token(Token = "0x4001A0D")]
		CTS_SYSTEM
	}

	[Token(Token = "0x200044D")]
	public enum ControllerType
	{
		[Token(Token = "0x4001A0F")]
		ControllerType_None,
		[Token(Token = "0x4001A10")]
		ControllerType_Generic,
		[Token(Token = "0x4001A11")]
		ControllerType_Resources,
		[Token(Token = "0x4001A12")]
		ControllerType_AssetBundles,
		[Token(Token = "0x4001A13")]
		ControllerType_AdaptiveController
	}

	[Token(Token = "0x200044E")]
	public enum CLoadingState
	{
		[Token(Token = "0x4001A15")]
		LoadingState_NOT_LOADED,
		[Token(Token = "0x4001A16")]
		LoadingState_LOADING,
		[Token(Token = "0x4001A17")]
		LoadingState_LOADED
	}

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x928D88", Offset = "0x928D88")]
	public ControllerHand WhichHand;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public CComponent ControllerComponents;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool TrackPosition;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public WVR_SimulationOption SimulationOption;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool FollowHead;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool TrackRotation;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x928DC0", Offset = "0x928DC0")]
	public bool overwriteIndicatorSettings;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool showIndicator;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool hideIndicatorByRoll;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool basedOnEmitter;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x928DF8", Offset = "0x928DF8")]
	public float showIndicatorAngle;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x928E14", Offset = "0x928E14")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x928E14", Offset = "0x928E14")]
	public float lineLength;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x928E70", Offset = "0x928E70")]
	public float lineStartWidth;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x928E90", Offset = "0x928E90")]
	public float lineEndWidth;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color lineColor;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x928EB0", Offset = "0x928EB0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x928EB0", Offset = "0x928EB0")]
	public float textCharacterSize;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x928F0C", Offset = "0x928F0C")]
	public float zhCharactarSize;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x928F2C", Offset = "0x928F2C")]
	public int textFontSize;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Color textColor;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x928F4C", Offset = "0x928F4C")]
	public bool useIndicatorSystemConfig;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<ButtonIndication> buttonIndicationList;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x928F84", Offset = "0x928F84")]
	public bool adaptiveLoading;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	public bool enableEmitter;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	public bool sendEvent;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x928FBC", Offset = "0x928FBC")]
	public bool enableButtonEffect;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool useEffectSystemConfig;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Color32 buttonEffectColor;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x928FF4", Offset = "0x928FF4")]
	public bool ShowBeam;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
	public bool useBeamSystemConfig;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x86")]
	public bool updateEveryFrame;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float StartWidth;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float EndWidth;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float StartOffset;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float EndOffset;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Color32 StartColor;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public Color32 EndColor;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool useDefaultMaterial;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Material customMat;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92902C", Offset = "0x92902C")]
	public bool showPointer;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
	public bool usePointerSystemConfig;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
	public bool Blink;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB3")]
	public bool UseDefaultTexture;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Texture2D customTexture;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float PointerOuterDiameterMin;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float PointerDistanceInMeters;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool useTexture;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public Color PointerColor;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Color borderColor;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private Color focusColor;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private Color focusBorderColor;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private string TextureName;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ControllerType controllerType;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private GameObject controllerPrefab;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private GameObject originalControllerPrefab;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private string controllerFileName;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private string controllerModelFoler;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private string genericControllerFileName;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private List<AssetBundle> loadedAssetBundle;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private string renderModelNamePath;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private WaveVR_Controller.EDeviceType focusController;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private WaveVR_Controller.EDeviceType deviceType;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private string renderModelName;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private bool connected;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private CLoadingState mLoadingState;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private string parameterName;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private IntPtr ptrParameterName;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private IntPtr ptrResult;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private uint resultVertLength;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
	private int bufferSize;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private WaveVR_ControllerInstanceManager CtrInstanceMgr;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private int ControllerIdx;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	private ModelSpecify modelSpecify;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private bool forceCheckRenderModelName;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A1")]
	private bool lastFrameConnection;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private GameObject eventSystem;

	[Token(Token = "0x6000541")]
	[Address(RVA = "0xE31968", Offset = "0xE31968", VA = "0xE31968")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0xE31BA4", Offset = "0xE31BA4", VA = "0xE31BA4")]
	private void PrintInfoLog(string msg)
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0xE31DE0", Offset = "0xE31DE0", VA = "0xE31DE0")]
	private void PrintWarningLog(string msg)
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0xE3201C", Offset = "0xE3201C", VA = "0xE3201C")]
	private void checkAndCreateCIM()
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0xE321E0", Offset = "0xE321E0", VA = "0xE321E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0xE322B0", Offset = "0xE322B0", VA = "0xE322B0")]
	private void resetControllerState()
	{
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0xE32324", Offset = "0xE32324", VA = "0xE32324")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0xE323D0", Offset = "0xE323D0", VA = "0xE323D0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0xE3252C", Offset = "0xE3252C", VA = "0xE3252C")]
	private void Start()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0xE33A00", Offset = "0xE33A00", VA = "0xE33A00")]
	private void onDeviceConnected(params object[] args)
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0xE32434", Offset = "0xE32434", VA = "0xE32434")]
	private void removeControllerFromMgr(string funcName)
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0xE33D14", Offset = "0xE33D14", VA = "0xE33D14")]
	private void UpdateFocusController()
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0xE3279C", Offset = "0xE3279C", VA = "0xE3279C")]
	private void onLoadController(WVR_DeviceType type)
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0xE33D58", Offset = "0xE33D58", VA = "0xE33D58")]
	private bool loadMeshAndImageByDevice(string renderModelNamePath)
	{
		return default(bool);
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0xE348F8", Offset = "0xE348F8", VA = "0xE348F8")]
	private bool tryLoadModelFromRuntime(string renderModelNamePath, string modelName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0xE37F0C", Offset = "0xE37F0C", VA = "0xE37F0C")]
	private bool verifyControllerPrefab(GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0xE34738", Offset = "0xE34738", VA = "0xE34738")]
	private int checkAssetBundlesVersion(string version)
	{
		return default(int);
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0xE34F44", Offset = "0xE34F44", VA = "0xE34F44")]
	private GameObject loadGenericControllerModelFromPackage(string tmpGeneric)
	{
		return null;
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0xE35094", Offset = "0xE35094", VA = "0xE35094")]
	private void SetControllerOptions(GameObject controller_prefab)
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0xE37FB0", Offset = "0xE37FB0", VA = "0xE37FB0")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0xE3801C", Offset = "0xE3801C", VA = "0xE3801C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0xE38240", Offset = "0xE38240", VA = "0xE38240")]
	private void checkConnectionAndModelName()
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0xE326B0", Offset = "0xE326B0", VA = "0xE326B0")]
	private bool checkConnection()
	{
		return default(bool);
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0xE35950", Offset = "0xE35950", VA = "0xE35950")]
	private void SetControllerBeamParameters(GameObject ctrlr)
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0xE36414", Offset = "0xE36414", VA = "0xE36414")]
	private void SetControllerPointerParameters(GameObject ctrlr)
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0xE39AB8", Offset = "0xE39AB8", VA = "0xE39AB8")]
	private void UpdateStartColor(string color_string)
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0xE39CF4", Offset = "0xE39CF4", VA = "0xE39CF4")]
	private void UpdateEndColor(string color_string)
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0xE389BC", Offset = "0xE389BC", VA = "0xE389BC")]
	private void ReadJsonValues_Beam()
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0xE38DD4", Offset = "0xE38DD4", VA = "0xE38DD4")]
	private void ReadJsonValues_Pointer()
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0xE39F30", Offset = "0xE39F30", VA = "0xE39F30")]
	private static bool IsFloat(string value)
	{
		return default(bool);
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0xE3A160", Offset = "0xE3A160", VA = "0xE3A160")]
	private static bool IsBoolean(string value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0xE3A398", Offset = "0xE3A398", VA = "0xE3A398")]
	private Color32 StringToColor32(string color_string, int value)
	{
		return default(Color32);
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0xE35208", Offset = "0xE35208", VA = "0xE35208")]
	private void PresetAdaptiveControllerParameters(GameObject ctrPrefab)
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0xE3760C", Offset = "0xE3760C", VA = "0xE3760C")]
	private void setEventSystemParameter()
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0xE36B8C", Offset = "0xE36B8C", VA = "0xE36B8C")]
	private void ApplyIndicatorParameters()
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xE3A7C4", Offset = "0xE3A7C4", VA = "0xE3A7C4")]
	private void addbuttonIndicationList()
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0xE3AF3C", Offset = "0xE3AF3C", VA = "0xE3AF3C")]
	public WaveVR_ControllerLoader()
	{
	}
}
[Token(Token = "0x2000067")]
public class WaveVR_ControllerManager : MonoBehaviour
{
	[Token(Token = "0x200044F")]
	public enum CIndex
	{
		[Token(Token = "0x4001A19")]
		invalid = -1,
		[Token(Token = "0x4001A1A")]
		Dominant,
		[Token(Token = "0x4001A1B")]
		NonDominant
	}

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Dominant;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject NonDominant;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject[] ControllerObjects;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool[] ControllerConnected;

	[Token(Token = "0x6000567")]
	[Address(RVA = "0xE3B294", Offset = "0xE3B294", VA = "0xE3B294")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0xE3B334", Offset = "0xE3B334", VA = "0xE3B334")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0xE3B43C", Offset = "0xE3B43C", VA = "0xE3B43C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0xE3B904", Offset = "0xE3B904", VA = "0xE3B904")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0xE3B9B0", Offset = "0xE3B9B0", VA = "0xE3B9B0")]
	private void BroadcastToObjects(CIndex index)
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0xE3B5F0", Offset = "0xE3B5F0", VA = "0xE3B5F0")]
	private void checkConnection()
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0xE3BBB0", Offset = "0xE3BBB0", VA = "0xE3BBB0")]
	private void onDeviceConnected(params object[] args)
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0xE3BE2C", Offset = "0xE3BE2C", VA = "0xE3BE2C")]
	public WaveVR_ControllerManager()
	{
	}
}
[Token(Token = "0x2000068")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x925658", Offset = "0x925658")]
public class WaveVR_Distortion : MonoBehaviour
{
	[Token(Token = "0x6000570")]
	[Address(RVA = "0xE4887C", Offset = "0xE4887C", VA = "0xE4887C")]
	public WaveVR_Distortion()
	{
	}
}
[Token(Token = "0x2000069")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x9256BC", Offset = "0x9256BC")]
public class WaveVR_FPS : MonoBehaviour
{
	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text textField;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float fps;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float targetfps;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float accTime;

	[Token(Token = "0x6000571")]
	[Address(RVA = "0xE49B4C", Offset = "0xE49B4C", VA = "0xE49B4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0xE49BA8", Offset = "0xE49BA8", VA = "0xE49BA8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0xE49D70", Offset = "0xE49D70", VA = "0xE49D70")]
	private void Start()
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0xE49DA4", Offset = "0xE49DA4", VA = "0xE49DA4")]
	public WaveVR_FPS()
	{
	}
}
[Token(Token = "0x200006A")]
public class WaveVR_IMEManager
{
	[Token(Token = "0x2000450")]
	public class InputResult
	{
		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int mId;

		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string mContent;

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int mErrorCode;

		[Token(Token = "0x170003C9")]
		public string InputContent
		{
			[Token(Token = "0x60020FC")]
			[Address(RVA = "0xD82364", Offset = "0xD82364", VA = "0xD82364")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CA")]
		public int ErrorCode
		{
			[Token(Token = "0x60020FD")]
			[Address(RVA = "0xD8236C", Offset = "0xD8236C", VA = "0xD8236C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170003CB")]
		public int Id
		{
			[Token(Token = "0x60020FE")]
			[Address(RVA = "0xD82374", Offset = "0xD82374", VA = "0xD82374")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60020FB")]
		[Address(RVA = "0xD82320", Offset = "0xD82320", VA = "0xD82320")]
		public InputResult(int id, string content, int errorCode)
		{
		}
	}

	[Token(Token = "0x2000451")]
	public class IMEParameter
	{
		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int type;

		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int mode;

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string exist;

		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int cursor;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int selectStart;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int selectEnd;

		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public double[] pos;

		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public double[] rot;

		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int width;

		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int height;

		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int shadow;

		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string locale;

		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string title;

		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int buttonId;

		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int extraInt;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string extraString;

		[Token(Token = "0x60020FF")]
		[Address(RVA = "0xD81F54", Offset = "0xD81F54", VA = "0xD81F54")]
		public IMEParameter(int id, int type, int mode, string exist, int cursor, int selectStart, int selectEnd, double[] pos, double[] rot, int width, int height, int shadow, string locale, string title, int extraInt, string extraString, int buttonId)
		{
		}

		[Token(Token = "0x6002100")]
		[Address(RVA = "0xD8204C", Offset = "0xD8204C", VA = "0xD8204C")]
		public IMEParameter(int id, int type, int mode, string exist, int cursor, int selectStart, int selectEnd, double[] pos, double[] rot, int width, int height, int shadow, string locale, string title, int buttonId)
		{
		}

		[Token(Token = "0x6002101")]
		[Address(RVA = "0xD82128", Offset = "0xD82128", VA = "0xD82128")]
		public IMEParameter(int id, int type, int mode, string exist, int cursor, double[] pos, double[] rot, int width, int height, int shadow, string locale, string title, int buttonId)
		{
		}

		[Token(Token = "0x6002102")]
		[Address(RVA = "0xD821F0", Offset = "0xD821F0", VA = "0xD821F0")]
		public IMEParameter(int id, int type, int mode, double[] pos, double[] rot, int width, int height, int shadow, string locale, string title, int buttonId)
		{
		}

		[Token(Token = "0x6002103")]
		[Address(RVA = "0xD82290", Offset = "0xD82290", VA = "0xD82290")]
		public IMEParameter(int id, int type, int mode, double[] pos, double[] rot, int width, int height, int shadow, int buttonId)
		{
		}
	}

	[Token(Token = "0x2000452")]
	public delegate void inputCompleteCallback(InputResult results);

	[Token(Token = "0x2000453")]
	private class RequestCompleteHandler : AndroidJavaProxy
	{
		[Token(Token = "0x6002108")]
		[Address(RVA = "0xD81BFC", Offset = "0xD81BFC", VA = "0xD81BFC")]
		internal RequestCompleteHandler()
		{
		}

		[Token(Token = "0x6002109")]
		[Address(RVA = "0xD8237C", Offset = "0xD8237C", VA = "0xD8237C")]
		public void onInputCompletedwithObject(AndroidJavaObject resultObject)
		{
		}
	}

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4000473")]
	private const string IME_MANAGER_CLASSNAME = "com.htc.vr.ime.client.IMEManager";

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AndroidJavaObject imeManager;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static WaveVR_IMEManager mInstance;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inited;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static inputCompleteCallback mCallback;

	[Token(Token = "0x17000037")]
	public static WaveVR_IMEManager instance
	{
		[Token(Token = "0x6000575")]
		[Address(RVA = "0xD80B08", Offset = "0xD80B08", VA = "0xD80B08")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0xD80BD0", Offset = "0xD80BD0", VA = "0xD80BD0")]
	private AndroidJavaObject javaArrayFromCS(string[] values)
	{
		return null;
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0xD80FB4", Offset = "0xD80FB4", VA = "0xD80FB4")]
	private AndroidJavaObject javaIMEParameterFromCS(IMEParameter parameter)
	{
		return null;
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0xD81658", Offset = "0xD81658", VA = "0xD81658")]
	private void initializeJavaObject()
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0xD8187C", Offset = "0xD8187C", VA = "0xD8187C")]
	public bool isInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0xD81988", Offset = "0xD81988", VA = "0xD81988")]
	public void showKeyboard(IMEParameter parameter, inputCompleteCallback cb)
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0xD81C90", Offset = "0xD81C90", VA = "0xD81C90")]
	public void hideKeyboard()
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0xD81DE0", Offset = "0xD81DE0", VA = "0xD81DE0")]
	public int getKeyboardState()
	{
		return default(int);
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0xD80BC8", Offset = "0xD80BC8", VA = "0xD80BC8")]
	public WaveVR_IMEManager()
	{
	}
}
[Token(Token = "0x200006B")]
public class WaveVR_IMEManagerWrapper
{
	[Token(Token = "0x2000454")]
	public enum Locale
	{
		[Token(Token = "0x4001A31")]
		en_US,
		[Token(Token = "0x4001A32")]
		zh_CN
	}

	[Token(Token = "0x2000455")]
	public enum Action
	{
		[Token(Token = "0x4001A34")]
		Done,
		[Token(Token = "0x4001A35")]
		Enter,
		[Token(Token = "0x4001A36")]
		Search,
		[Token(Token = "0x4001A37")]
		Go,
		[Token(Token = "0x4001A38")]
		Send,
		[Token(Token = "0x4001A39")]
		Next,
		[Token(Token = "0x4001A3A")]
		Submit
	}

	[Token(Token = "0x2000456")]
	public delegate void InputDoneCallback(InputResult results);

	[Token(Token = "0x2000457")]
	public class InputResult
	{
		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string mContent;

		[Token(Token = "0x600210E")]
		[Address(RVA = "0xD83560", Offset = "0xD83560", VA = "0xD83560")]
		public InputResult(string content)
		{
		}

		[Token(Token = "0x600210F")]
		[Address(RVA = "0xD83D90", Offset = "0xD83D90", VA = "0xD83D90")]
		public string GetContent()
		{
			return null;
		}
	}

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int VERSION_ID;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static WaveVR_IMEManager mIMEManager;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static WaveVR_IMEManagerWrapper mInstance;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private WaveVR_IMEManager.IMEParameter mParameter;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static InputDoneCallback mCallback;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static int CONTROLLER_BUTTON_DEFAULT;

	[Token(Token = "0x600057F")]
	[Address(RVA = "0xD82D3C", Offset = "0xD82D3C", VA = "0xD82D3C")]
	private WaveVR_IMEManagerWrapper()
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0xD82ED4", Offset = "0xD82ED4", VA = "0xD82ED4")]
	public static WaveVR_IMEManagerWrapper GetInstance()
	{
		return null;
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0xD83098", Offset = "0xD83098", VA = "0xD83098")]
	public void SetText(string text)
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0xD830C8", Offset = "0xD830C8", VA = "0xD830C8")]
	public void SetTitle(string title)
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0xD830F8", Offset = "0xD830F8", VA = "0xD830F8")]
	public void SetLocale(Locale locale)
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0xD83238", Offset = "0xD83238", VA = "0xD83238")]
	public void SetCallback(InputDoneCallback callback)
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0xD832A4", Offset = "0xD832A4", VA = "0xD832A4")]
	public void Show()
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0xD83360", Offset = "0xD83360", VA = "0xD83360")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0xD833D8", Offset = "0xD833D8", VA = "0xD833D8")]
	public void SetAction(Action action)
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0xD82D64", Offset = "0xD82D64", VA = "0xD82D64")]
	public void InitParameter()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0xD83470", Offset = "0xD83470", VA = "0xD83470")]
	private void inputDoneCallback(WaveVR_IMEManager.InputResult results)
	{
	}
}
[Token(Token = "0x200006C")]
public class WaveVR_Init : MonoBehaviour
{
	[Token(Token = "0x400047F")]
	private const string LOG_TAG = "WaveVR_Init";

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static WaveVR_Init _instance;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool toCheckStatesWhenNoEvent;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private WVR_Event_t vrevent;

	[Token(Token = "0x17000038")]
	public static WaveVR_Init Instance
	{
		[Token(Token = "0x600058C")]
		[Address(RVA = "0xD83E40", Offset = "0xD83E40", VA = "0xD83E40")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0xD83D98", Offset = "0xD83D98", VA = "0xD83D98")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0xD83FC0", Offset = "0xD83FC0", VA = "0xD83FC0")]
	private void signalSurfaceState(string msg)
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0xD8426C", Offset = "0xD8426C", VA = "0xD8426C")]
	private void Start()
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0xD843AC", Offset = "0xD843AC", VA = "0xD843AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0xD84580", Offset = "0xD84580", VA = "0xD84580")]
	private void CheckStatesWhenNoEvent()
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0xD84650", Offset = "0xD84650", VA = "0xD84650")]
	private void Update()
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0xD86088", Offset = "0xD86088", VA = "0xD86088")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0xD846B8", Offset = "0xD846B8", VA = "0xD846B8")]
	private void processVREvent(WVR_Event_t vrEvent)
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0xD8689C", Offset = "0xD8689C", VA = "0xD8689C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0xD86938", Offset = "0xD86938", VA = "0xD86938")]
	public WaveVR_Init()
	{
	}
}
[Token(Token = "0x200006D")]
public class WaveVR_PermissionManager
{
	[Token(Token = "0x2000458")]
	public class RequestResult
	{
		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string mPermission;

		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool mGranted;

		[Token(Token = "0x170003CC")]
		public string PermissionName
		{
			[Token(Token = "0x6002111")]
			[Address(RVA = "0xD8BA74", Offset = "0xD8BA74", VA = "0xD8BA74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CD")]
		public bool Granted
		{
			[Token(Token = "0x6002112")]
			[Address(RVA = "0xD8BA7C", Offset = "0xD8BA7C", VA = "0xD8BA7C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6002110")]
		[Address(RVA = "0xD8A770", Offset = "0xD8A770", VA = "0xD8A770")]
		public RequestResult(string name, bool granted)
		{
		}
	}

	[Token(Token = "0x2000459")]
	public delegate void requestCompleteCallback(List<RequestResult> results);

	[Token(Token = "0x200045A")]
	public delegate void requestUsbCompleteCallback(bool result);

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static WaveVR_PermissionManager mInstance;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static requestCompleteCallback mCallback;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static requestUsbCompleteCallback mUsbCallback;

	[Token(Token = "0x17000039")]
	public static WaveVR_PermissionManager instance
	{
		[Token(Token = "0x6000596")]
		[Address(RVA = "0xD8A458", Offset = "0xD8A458", VA = "0xD8A458")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0xD8A520", Offset = "0xD8A520", VA = "0xD8A520")]
	public static void requestDoneCallback(List<WVR_RequestResult> results)
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0xD8AEE4", Offset = "0xD8AEE4", VA = "0xD8AEE4")]
	public static void requestUsbDoneCallback(bool result)
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0xD8B42C", Offset = "0xD8B42C", VA = "0xD8B42C")]
	public bool isInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0xD8B518", Offset = "0xD8B518", VA = "0xD8B518")]
	public void requestPermissions(string[] permissions, requestCompleteCallback cb)
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0xD8B614", Offset = "0xD8B614", VA = "0xD8B614")]
	public void requestUsbPermission(requestUsbCompleteCallback cb)
	{
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0xD8B708", Offset = "0xD8B708", VA = "0xD8B708")]
	public bool isPermissionGranted(string permission)
	{
		return default(bool);
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0xD8B80C", Offset = "0xD8B80C", VA = "0xD8B80C")]
	public bool shouldGrantPermission(string permission)
	{
		return default(bool);
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0xD8B910", Offset = "0xD8B910", VA = "0xD8B910")]
	public bool showDialogOnScene()
	{
		return default(bool);
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0xD8A518", Offset = "0xD8A518", VA = "0xD8A518")]
	public WaveVR_PermissionManager()
	{
	}
}
[Token(Token = "0x200006E")]
public class WaveVR_PointerCameraTracker : MonoBehaviour
{
	[Token(Token = "0x4000487")]
	private const string LOG_TAG = "WaveVR_PointerCameraTracker";

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject reticleObject;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public WaveVR_Controller.EDeviceType type;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private WaveVR_ControllerPointer reticle;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 pointer_location;

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0xD8BB70", Offset = "0xD8BB70", VA = "0xD8BB70")]
	private void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0xD8BBE8", Offset = "0xD8BBE8", VA = "0xD8BBE8")]
	private void Start()
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0xD8BC88", Offset = "0xD8BC88", VA = "0xD8BC88")]
	private void Update()
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0xD8BFC4", Offset = "0xD8BFC4", VA = "0xD8BFC4")]
	public void setDeviceType(WaveVR_Controller.EDeviceType value)
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0xD8BFCC", Offset = "0xD8BFCC", VA = "0xD8BFCC")]
	public WaveVR_PointerCameraTracker()
	{
	}
}
[Token(Token = "0x200006F")]
public class WaveVR_Render : MonoBehaviour
{
	[Token(Token = "0x200045B")]
	public enum StereoRenderingPath
	{
		[Token(Token = "0x4001A3F")]
		MultiPass = 0,
		[Token(Token = "0x4001A40")]
		SinglePass = 1,
		[Token(Token = "0x4001A41")]
		Auto = 1,
		[Token(Token = "0x4001A42")]
		Instancing = 2
	}

	[Token(Token = "0x200045C")]
	public delegate void RenderCallback(WaveVR_Render render);

	[Token(Token = "0x200045D")]
	public delegate void RenderCallbackWithEye(WaveVR_Render render, WVR_Eye eye);

	[Token(Token = "0x200045E")]
	public delegate void RenderCallbackWithEyeAndCamera(WaveVR_Render render, WVR_Eye eye, WaveVR_Camera wvrCamera);

	[Token(Token = "0x200045F")]
	public class RenderThreadSynchronizer
	{
		[Token(Token = "0x4001A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private RenderTexture mutable;

		[Token(Token = "0x6002127")]
		[Address(RVA = "0x1329ADC", Offset = "0x1329ADC", VA = "0x1329ADC")]
		public RenderThreadSynchronizer()
		{
		}

		[Token(Token = "0x6002128")]
		[Address(RVA = "0x1329B8C", Offset = "0x1329B8C", VA = "0x1329B8C")]
		public void sync()
		{
		}
	}

	[Token(Token = "0x2000460")]
	private class RenderThreadContext : wvr.render.utils.Message
	{
		[Token(Token = "0x4001A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public WVR_Eye eye;

		[Token(Token = "0x4001A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int textureCount;

		[Token(Token = "0x4001A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WVR_TextureParams_t[] textureParam;

		[Token(Token = "0x4001A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int foveationCount;

		[Token(Token = "0x4001A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WVR_RenderFoveationParams[] foveationParams;

		[Token(Token = "0x4001A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int poseCount;

		[Token(Token = "0x4001A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public WVR_PoseState_t[] pose;

		[Token(Token = "0x4001A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public WVR_SubmitExtend flag;

		[Token(Token = "0x4001A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int renderEvent;

		[Token(Token = "0x4001A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public WVR_RenderInitParams_t renderInitParams;

		[Token(Token = "0x6002129")]
		[Address(RVA = "0x1328320", Offset = "0x1328320", VA = "0x1328320")]
		public RenderThreadContext()
		{
		}

		[Token(Token = "0x600212A")]
		[Address(RVA = "0x13283B8", Offset = "0x13283B8", VA = "0x13283B8")]
		public static void IssueRenderEvent(RenderThreadSyncObject syncObj, int renderEvent, WVR_RenderInitParams_t renderInitParams)
		{
		}

		[Token(Token = "0x600212B")]
		[Address(RVA = "0x1328530", Offset = "0x1328530", VA = "0x1328530")]
		public static void ReceiveRenderEvent(PreAllocatedQueue queue)
		{
		}

		[Token(Token = "0x600212C")]
		[Address(RVA = "0x1328B14", Offset = "0x1328B14", VA = "0x1328B14")]
		public static void IssueBefore(RenderThreadSyncObject syncObj, WVR_Eye eye, int textureCount, WVR_TextureParams_t textureParam0, WVR_TextureParams_t textureParam1, int foveationCount, WVR_RenderFoveationParams foveationParams0, WVR_RenderFoveationParams foveationParams1)
		{
		}

		[Token(Token = "0x600212D")]
		[Address(RVA = "0x1328DD4", Offset = "0x1328DD4", VA = "0x1328DD4")]
		public static void IssueAfter(RenderThreadSyncObject syncObj, WVR_Eye eye, int textureCount, WVR_TextureParams_t textureParam0, WVR_TextureParams_t textureParam1, int poseCount, WVR_PoseState_t pose0, WVR_SubmitExtend flag)
		{
		}

		[Token(Token = "0x600212E")]
		[Address(RVA = "0x132908C", Offset = "0x132908C", VA = "0x132908C")]
		public static void ReceiveBefore(PreAllocatedQueue queue)
		{
		}

		[Token(Token = "0x600212F")]
		[Address(RVA = "0x1329598", Offset = "0x1329598", VA = "0x1329598")]
		public static void ReceiveAfter(PreAllocatedQueue queue)
		{
		}

		[Token(Token = "0x6002130")]
		[Address(RVA = "0x13287B8", Offset = "0x13287B8", VA = "0x13287B8")]
		public void CopyTo(RenderThreadContext dest)
		{
		}
	}

	[Token(Token = "0x2000461")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92736C", Offset = "0x92736C")]
	private sealed class <RenderLoop>d__116 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaveVR_Render <>4__this;

		[Token(Token = "0x4001A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <tim>5__2;

		[Token(Token = "0x170003CE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002134")]
			[Address(RVA = "0x13280F4", Offset = "0x13280F4", VA = "0x13280F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003CF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002136")]
			[Address(RVA = "0x1328164", Offset = "0x1328164", VA = "0x1328164", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002131")]
		[Address(RVA = "0x13276F0", Offset = "0x13276F0", VA = "0x13276F0")]
		[DebuggerHidden]
		public <RenderLoop>d__116(int <>1__state)
		{
		}

		[Token(Token = "0x6002132")]
		[Address(RVA = "0x132771C", Offset = "0x132771C", VA = "0x132771C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002133")]
		[Address(RVA = "0x1327720", Offset = "0x1327720", VA = "0x1327720", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002135")]
		[Address(RVA = "0x13280FC", Offset = "0x13280FC", VA = "0x13280FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000462")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92737C", Offset = "0x92737C")]
	private sealed class <>c__DisplayClass137_0
	{
		[Token(Token = "0x4001A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WaveVR_Render <>4__this;

		[Token(Token = "0x4001A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WaveVR_Camera vrcamera;

		[Token(Token = "0x6002137")]
		[Address(RVA = "0x1325E6C", Offset = "0x1325E6C", VA = "0x1325E6C")]
		public <>c__DisplayClass137_0()
		{
		}

		[Token(Token = "0x6002138")]
		[Address(RVA = "0x1325E74", Offset = "0x1325E74", VA = "0x1325E74")]
		internal void <CreateCenterCamera>b__0(RenderCallbackWithEye a)
		{
		}

		[Token(Token = "0x6002139")]
		[Address(RVA = "0x132662C", Offset = "0x132662C", VA = "0x132662C")]
		internal void <CreateCenterCamera>b__1(RenderCallbackWithEyeAndCamera a)
		{
		}
	}

	[Token(Token = "0x2000463")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92738C", Offset = "0x92738C")]
	private sealed class <>c__DisplayClass138_0
	{
		[Token(Token = "0x4001A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WaveVR_Render <>4__this;

		[Token(Token = "0x4001A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WaveVR_Camera vrcamera;

		[Token(Token = "0x600213A")]
		[Address(RVA = "0x1326E30", Offset = "0x1326E30", VA = "0x1326E30")]
		public <>c__DisplayClass138_0()
		{
		}

		[Token(Token = "0x600213B")]
		[Address(RVA = "0x1326E38", Offset = "0x1326E38", VA = "0x1326E38")]
		internal void <CreateEyeBoth>b__0(RenderCallbackWithEye a)
		{
		}

		[Token(Token = "0x600213C")]
		[Address(RVA = "0x1326E70", Offset = "0x1326E70", VA = "0x1326E70")]
		internal void <CreateEyeBoth>b__1(RenderCallbackWithEyeAndCamera a)
		{
		}
	}

	[Token(Token = "0x2000464")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92739C", Offset = "0x92739C")]
	private sealed class <>c__DisplayClass139_0
	{
		[Token(Token = "0x4001A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WaveVR_Render <>4__this;

		[Token(Token = "0x4001A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WVR_Eye eye;

		[Token(Token = "0x4001A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaveVR_Camera vrcamera;

		[Token(Token = "0x600213D")]
		[Address(RVA = "0x1326EB4", Offset = "0x1326EB4", VA = "0x1326EB4")]
		public <>c__DisplayClass139_0()
		{
		}

		[Token(Token = "0x600213E")]
		[Address(RVA = "0x1326EBC", Offset = "0x1326EBC", VA = "0x1326EBC")]
		internal void <CreateEye>b__0(RenderCallbackWithEye a)
		{
		}

		[Token(Token = "0x600213F")]
		[Address(RVA = "0x1326F00", Offset = "0x1326F00", VA = "0x1326F00")]
		internal void <CreateEye>b__1(RenderCallbackWithEyeAndCamera a)
		{
		}
	}

	[Token(Token = "0x2000465")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9273AC", Offset = "0x9273AC")]
	private sealed class <>c__DisplayClass142_0
	{
		[Token(Token = "0x4001A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WaveVR_Render head;

		[Token(Token = "0x6002140")]
		[Address(RVA = "0x1326F4C", Offset = "0x1326F4C", VA = "0x1326F4C")]
		public <>c__DisplayClass142_0()
		{
		}

		[Token(Token = "0x6002141")]
		[Address(RVA = "0x1326F54", Offset = "0x1326F54", VA = "0x1326F54")]
		internal void <Expand>b__0(RenderCallback a)
		{
		}

		[Token(Token = "0x6002142")]
		[Address(RVA = "0x13276BC", Offset = "0x13276BC", VA = "0x13276BC")]
		internal void <Expand>b__1(RenderCallback a)
		{
		}
	}

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string TAG;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static WaveVR_Render instance;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x929064", Offset = "0x929064")]
	public float ipd;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int targetFPS;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool surfaceChanged;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	private static bool isNeedTimeout;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	private static bool isGraphicInitialized;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
	private static bool isDuringFirstFrame;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static bool isSetActiveSceneChangedCB;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92909C", Offset = "0x92909C")]
	private uint <recommendedWidth>k__BackingField;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9290AC", Offset = "0x9290AC")]
	private uint <recommendedHeight>k__BackingField;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9290BC", Offset = "0x9290BC")]
	private float <sceneWidth>k__BackingField;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9290CC", Offset = "0x9290CC")]
	private float <sceneHeight>k__BackingField;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float[] projRawL;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] projRawR;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private WaveVR_Utils.RigidTransform[] _eyes;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9290DC", Offset = "0x9290DC")]
	public bool configurationChanged;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x929114", Offset = "0x929114")]
	[SerializeField]
	private StereoRenderingPath PreferredStereoRenderingPath;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x929160", Offset = "0x929160")]
	private bool <IsSinglePass>k__BackingField;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RenderCallback beforeRenderExpand;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RenderCallbackWithEye beforeEyeExpand;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public RenderCallbackWithEyeAndCamera afterEyeExpand;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public RenderCallback afterRenderExpand;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public RenderCallback onConfigurationChanged;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public RenderCallback onSDKGraphicReady;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public RenderCallback onFirstFrame;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public RenderCallbackWithEyeAndCamera beforeRenderEye;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public RenderCallbackWithEyeAndCamera afterRenderEye;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private RenderThreadSynchronizer synchronizer;

	[Token(Token = "0x40004A9")]
	private const string OBJ_NAME_EYE_CENTER = "Eye Center";

	[Token(Token = "0x40004AA")]
	private const string OBJ_NAME_LEFT_EYE = "Eye Left";

	[Token(Token = "0x40004AB")]
	private const string OBJ_NAME_RIGHT_EYE = "Eye Right";

	[Token(Token = "0x40004AC")]
	private const string OBJ_NAME_BOTH_EYES = "Eye Both";

	[Token(Token = "0x40004AD")]
	private const string OBJ_NAME_EAR = "Ear";

	[Token(Token = "0x40004AE")]
	private const string OBJ_NAME_DISTORTION = "Distortion";

	[Token(Token = "0x40004AF")]
	private const string OBJ_NAME_RETICLE = "Reticle";

	[Token(Token = "0x40004B0")]
	private const string OBJ_NAME_LOADING = "Loading";

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public WaveVR_Camera centerWVRCamera;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public WaveVR_Camera lefteye;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public WaveVR_Camera righteye;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public WaveVR_Camera botheyes;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public WaveVR_Distortion distortion;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject loadingCanvas;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject ear;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x929170", Offset = "0x929170")]
	private bool useLoadingCanvas;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9291BC", Offset = "0x9291BC")]
	private Color loadingBlockerColor;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static TextureManager _textureManager;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static int globalOrigin;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public static int globalPreferredStereoRenderingPath;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x929208", Offset = "0x929208")]
	private ColorSpace <QSColorSpace>k__BackingField;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public WVR_PoseOriginModel _origin;

	[Token(Token = "0x40004BF")]
	private const string WVRSinglePassDeviceName = "mockhmd";

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Coroutine renderLooperCoroutine;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private WaitForEndOfFrame cachedWaitForEndOfFrame;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private bool isPartialTexture;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x929218", Offset = "0x929218")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x929218", Offset = "0x929218")]
	private float pixelDensity;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x929280", Offset = "0x929280")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x929280", Offset = "0x929280")]
	private float overDraw;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private float resolutionScale;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private readonly Rect fullViewport;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Rect drawViewport;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private WVR_TextureParams_t[] textureParams;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool previousInputFocus;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x149")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9292D4", Offset = "0x9292D4")]
	public bool needTimeControl;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static readonly WVR_RenderFoveationParams[] foveationParams;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static RenderThreadContext contextRTOnly;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static readonly RenderThreadSyncObject RenderCommandRenderEvent;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static readonly RenderThreadSyncObject RenderCommandBeforeEyeTemplate;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly RenderThreadSyncObject RenderCommandAfterEyeTemplate;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static readonly RenderThreadSyncObject[] RenderCommandBeforeEye;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static readonly RenderThreadSyncObject[] RenderCommandAfterEye;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static WVR_PoseState_t poseUsedOnSubmit;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private static WVR_SubmitExtend submitExtendFlag;

	[Token(Token = "0x1700003A")]
	public static WaveVR_Render Instance
	{
		[Token(Token = "0x60005A6")]
		[Address(RVA = "0xD80874", Offset = "0xD80874", VA = "0xD80874")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003B")]
	public bool IsGraphicReady
	{
		[Token(Token = "0x60005A7")]
		[Address(RVA = "0xD90BAC", Offset = "0xD90BAC", VA = "0xD90BAC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700003C")]
	public uint recommendedWidth
	{
		[Token(Token = "0x60005A8")]
		[Address(RVA = "0xD90C14", Offset = "0xD90C14", VA = "0xD90C14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938AA0", Offset = "0x938AA0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60005A9")]
		[Address(RVA = "0xD90C1C", Offset = "0xD90C1C", VA = "0xD90C1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938AB0", Offset = "0x938AB0")]
		private set
		{
		}
	}

	[Token(Token = "0x1700003D")]
	public uint recommendedHeight
	{
		[Token(Token = "0x60005AA")]
		[Address(RVA = "0xD90C24", Offset = "0xD90C24", VA = "0xD90C24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938AC0", Offset = "0x938AC0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60005AB")]
		[Address(RVA = "0xD90C2C", Offset = "0xD90C2C", VA = "0xD90C2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938AD0", Offset = "0x938AD0")]
		private set
		{
		}
	}

	[Token(Token = "0x1700003E")]
	public float sceneWidth
	{
		[Token(Token = "0x60005AC")]
		[Address(RVA = "0xD90C34", Offset = "0xD90C34", VA = "0xD90C34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938AE0", Offset = "0x938AE0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005AD")]
		[Address(RVA = "0xD90C3C", Offset = "0xD90C3C", VA = "0xD90C3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938AF0", Offset = "0x938AF0")]
		private set
		{
		}
	}

	[Token(Token = "0x1700003F")]
	public float sceneHeight
	{
		[Token(Token = "0x60005AE")]
		[Address(RVA = "0xD90C44", Offset = "0xD90C44", VA = "0xD90C44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938B00", Offset = "0x938B00")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60005AF")]
		[Address(RVA = "0xD90C4C", Offset = "0xD90C4C", VA = "0xD90C4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938B10", Offset = "0x938B10")]
		private set
		{
		}
	}

	[Token(Token = "0x17000040")]
	public WaveVR_Utils.RigidTransform[] eyes
	{
		[Token(Token = "0x60005B0")]
		[Address(RVA = "0xD90C54", Offset = "0xD90C54", VA = "0xD90C54")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005B1")]
		[Address(RVA = "0xD90C5C", Offset = "0xD90C5C", VA = "0xD90C5C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000041")]
	public StereoRenderingPath acturalStereoRenderingPath
	{
		[Token(Token = "0x60005B2")]
		[Address(RVA = "0xD90C64", Offset = "0xD90C64", VA = "0xD90C64")]
		get
		{
			return default(StereoRenderingPath);
		}
	}

	[Token(Token = "0x17000042")]
	public bool IsSinglePass
	{
		[Token(Token = "0x60005B3")]
		[Address(RVA = "0xD90C6C", Offset = "0xD90C6C", VA = "0xD90C6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938B20", Offset = "0x938B20")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60005B4")]
		[Address(RVA = "0xD90C74", Offset = "0xD90C74", VA = "0xD90C74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938B30", Offset = "0x938B30")]
		private set
		{
		}
	}

	[Token(Token = "0x17000043")]
	public bool isExpanded
	{
		[Token(Token = "0x60005B6")]
		[Address(RVA = "0xD90C80", Offset = "0xD90C80", VA = "0xD90C80")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000044")]
	public Camera centerCamera
	{
		[Token(Token = "0x60005B7")]
		[Address(RVA = "0xD90EEC", Offset = "0xD90EEC", VA = "0xD90EEC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000045")]
	public TextureManager textureManager
	{
		[Token(Token = "0x60005B8")]
		[Address(RVA = "0xD90F8C", Offset = "0xD90F8C", VA = "0xD90F8C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60005B9")]
		[Address(RVA = "0xD90FF4", Offset = "0xD90FF4", VA = "0xD90FF4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000046")]
	[HideInInspector]
	public ColorSpace QSColorSpace
	{
		[Token(Token = "0x60005BA")]
		[Address(RVA = "0xD91060", Offset = "0xD91060", VA = "0xD91060")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938B40", Offset = "0x938B40")]
		get
		{
			return default(ColorSpace);
		}
		[Token(Token = "0x60005BB")]
		[Address(RVA = "0xD91068", Offset = "0xD91068", VA = "0xD91068")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938B50", Offset = "0x938B50")]
		private set
		{
		}
	}

	[Token(Token = "0x17000047")]
	public WVR_PoseOriginModel origin
	{
		[Token(Token = "0x60005BC")]
		[Address(RVA = "0xD91070", Offset = "0xD91070", VA = "0xD91070")]
		get
		{
			return default(WVR_PoseOriginModel);
		}
		[Token(Token = "0x60005BD")]
		[Address(RVA = "0xD91078", Offset = "0xD91078", VA = "0xD91078")]
		set
		{
		}
	}

	[Token(Token = "0x17000048")]
	public float PixelDensity
	{
		[Token(Token = "0x60005D4")]
		[Address(RVA = "0xD977B4", Offset = "0xD977B4", VA = "0xD977B4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000049")]
	public float OverDraw
	{
		[Token(Token = "0x60005D5")]
		[Address(RVA = "0xD977BC", Offset = "0xD977BC", VA = "0xD977BC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700004A")]
	public float ResolutionScale
	{
		[Token(Token = "0x60005D6")]
		[Address(RVA = "0xD977C4", Offset = "0xD977C4", VA = "0xD977C4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60005B5")]
	public T GetComponentFromChildren<T>(string name)
	{
		return (T)null;
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0xD925DC", Offset = "0xD925DC", VA = "0xD925DC")]
	public static void InitializeGraphic([Optional] RenderThreadSynchronizer synchronizer)
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0xD91080", Offset = "0xD91080", VA = "0xD91080")]
	public void OnIpdChanged(params object[] args)
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0xD9284C", Offset = "0xD9284C", VA = "0xD9284C")]
	public static bool IsVRSinglePassBuildTimeSupported()
	{
		return default(bool);
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0xD92854", Offset = "0xD92854", VA = "0xD92854")]
	private bool checkVRSinglePassSupport()
	{
		return default(bool);
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0xD93034", Offset = "0xD93034", VA = "0xD93034")]
	private void SwitchDeviceView(bool enableSinglepass)
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0xD93050", Offset = "0xD93050", VA = "0xD93050")]
	private void SwitchKeyword(bool enable)
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0xD930D8", Offset = "0xD930D8", VA = "0xD930D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0xD93604", Offset = "0xD93604", VA = "0xD93604")]
	private void enableRenderLoop(bool start)
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0xD936E8", Offset = "0xD936E8", VA = "0xD936E8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0xD93A18", Offset = "0xD93A18", VA = "0xD93A18")]
	private void Start()
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0xD93D74", Offset = "0xD93D74", VA = "0xD93D74")]
	private static void OnSceneLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0xD84024", Offset = "0xD84024", VA = "0xD84024")]
	public static void signalSurfaceState(string msg)
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0xD94DF4", Offset = "0xD94DF4", VA = "0xD94DF4")]
	private static bool checkSurfaceChanged()
	{
		return default(bool);
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0xD94F88", Offset = "0xD94F88", VA = "0xD94F88")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0xD95270", Offset = "0xD95270", VA = "0xD95270")]
	public int SetQualityLevel(int level, bool applyExpensiveChanges = true)
	{
		return default(int);
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0xD9531C", Offset = "0xD9531C", VA = "0xD9531C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0xD95398", Offset = "0xD95398", VA = "0xD95398")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0xD95438", Offset = "0xD95438", VA = "0xD95438")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0xD958F0", Offset = "0xD958F0", VA = "0xD958F0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0xD93674", Offset = "0xD93674", VA = "0xD93674")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x938B60", Offset = "0x938B60")]
	private IEnumerator RenderLoop()
	{
		return null;
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0xD95AC0", Offset = "0xD95AC0", VA = "0xD95AC0")]
	private void RenderCycle()
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0xD9766C", Offset = "0xD9766C", VA = "0xD9766C")]
	private void GetSubmitTextureParams(WVR_Eye eye, IntPtr texture, [Out] WVR_TextureParams_t[] textureParams, ref WVR_SubmitExtend flag)
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0xD92734", Offset = "0xD92734", VA = "0xD92734")]
	private void UpdateViewports()
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0xD977CC", Offset = "0xD977CC", VA = "0xD977CC")]
	public void SetResolutionScale(float scale)
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0xD95DF4", Offset = "0xD95DF4", VA = "0xD95DF4")]
	private void RenderEyeBoth(WaveVR_Camera wvrCamera)
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0xD9687C", Offset = "0xD9687C", VA = "0xD9687C")]
	private void RenderEye(WaveVR_Camera wvrCamera, WVR_Eye eye)
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0xD979D0", Offset = "0xD979D0", VA = "0xD979D0")]
	private static void AddRaycaster(GameObject obj)
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0xD97C04", Offset = "0xD97C04", VA = "0xD97C04")]
	private WaveVR_Camera CreateCenterCamera()
	{
		return null;
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0xD98584", Offset = "0xD98584", VA = "0xD98584")]
	private WaveVR_Camera CreateEyeBoth()
	{
		return null;
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0xD9A1A0", Offset = "0xD9A1A0", VA = "0xD9A1A0")]
	private WaveVR_Camera CreateEye(WVR_Eye eye)
	{
		return null;
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0xD9AC00", Offset = "0xD9AC00", VA = "0xD9AC00")]
	private void createLoadingBlack()
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0xD93958", Offset = "0xD93958", VA = "0xD93958")]
	private void setLoadingCanvas(bool enabled)
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0xD8626C", Offset = "0xD8626C", VA = "0xD8626C")]
	public static void Expand(WaveVR_Render head)
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0xD9B070", Offset = "0xD9B070", VA = "0xD9B070")]
	public static void Collapse(WaveVR_Render head)
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0xD9AAFC", Offset = "0xD9AAFC", VA = "0xD9AAFC")]
	private float GetFieldOfView(float[] projRaw)
	{
		return default(float);
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0xD9B42C", Offset = "0xD9B42C", VA = "0xD9B42C")]
	private static float[] GetEditorProjectionRaw(float fov, float width, float height)
	{
		return null;
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0xD9B5F8", Offset = "0xD9B5F8", VA = "0xD9B5F8")]
	public static void debugLogMatrix(Matrix4x4 m, string name)
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0xD9933C", Offset = "0xD9933C", VA = "0xD9933C")]
	private static Matrix4x4 MakeCullingProjectionMatrix(float[] projRawL, float[] projRawR, float near, float far, Vector3 leftEyePosition, Vector3 rightEyePosition, bool lrtbWithNear1 = false)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0xD99144", Offset = "0xD99144", VA = "0xD99144")]
	private static Matrix4x4 GetProjection(float[] projRaw, float near, float far)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0xD9C278", Offset = "0xD9C278", VA = "0xD9C278")]
	public static Matrix4x4 MakeProjection(float l, float r, float t, float b, float n, float f, bool lrtbWithNear1 = false)
	{
		return default(Matrix4x4);
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0xD973B4", Offset = "0xD973B4", VA = "0xD973B4")]
	private void TimeControl()
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0xD97858", Offset = "0xD97858", VA = "0xD97858")]
	public void SafeExecuteRenderEyeCallback(RenderCallbackWithEyeAndCamera multi, WVR_Eye eye, WaveVR_Camera wvrCamera)
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0xD9C440", Offset = "0xD9C440", VA = "0xD9C440")]
	public static void SetFoveatedRenderingParameter(WVR_Eye eye, float ndcFocalPointX, float ndcFocalPointY, float clearVisionFOV, WVR_PeripheralQuality peripheralQuality)
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0xD9C5D0", Offset = "0xD9C5D0", VA = "0xD9C5D0")]
	public static void SetPoseUsedOnSubmit(WVR_PoseState_t pose)
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0xD9C660", Offset = "0xD9C660", VA = "0xD9C660")]
	public static void ResetPoseUsedOnSubmit()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0xD9C6C8", Offset = "0xD9C6C8", VA = "0xD9C6C8")]
	public static void SetSubmitExtendedFlag(WVR_SubmitExtend flag)
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0xD9C734", Offset = "0xD9C734", VA = "0xD9C734")]
	public WaveVR_Render()
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0xD9CF40", Offset = "0xD9CF40", VA = "0xD9CF40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938BC4", Offset = "0x938BC4")]
	private void <Start>b__105_0(RenderCallback a)
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0xD9CF78", Offset = "0xD9CF78", VA = "0xD9CF78")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938BD4", Offset = "0x938BD4")]
	private void <RenderLoop>b__116_0(RenderCallback a)
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0xD9CFB0", Offset = "0xD9CFB0", VA = "0xD9CFB0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938BE4", Offset = "0x938BE4")]
	private void <RenderLoop>b__116_1(RenderCallback a)
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0xD9CFE8", Offset = "0xD9CFE8", VA = "0xD9CFE8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938BF4", Offset = "0x938BF4")]
	private void <RenderCycle>b__117_0(RenderCallback a)
	{
	}
}
[Token(Token = "0x2000070")]
public class WaveVR_RenderMask : MonoBehaviour
{
	[Token(Token = "0x2000466")]
	private class Data
	{
		[Token(Token = "0x4001A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WVR_Eye eye;

		[Token(Token = "0x4001A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera camera;

		[Token(Token = "0x4001A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaveVR_Camera wvrCamera;

		[Token(Token = "0x4001A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CommandBuffer cmdBuf;

		[Token(Token = "0x4001A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Mesh mesh;

		[Token(Token = "0x6002143")]
		[Address(RVA = "0x132A314", Offset = "0x132A314", VA = "0x132A314")]
		public Data()
		{
		}
	}

	[Token(Token = "0x2000467")]
	public delegate void BeforeCreateMaskCommandBuffer(WaveVR_RenderMask renderMask);

	[Token(Token = "0x2000468")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9273BC", Offset = "0x9273BC")]
	private sealed class <Initialization>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WaveVR_RenderMask <>4__this;

		[Token(Token = "0x4001A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private WaveVR_Render <render>5__2;

		[Token(Token = "0x170003D0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600214B")]
			[Address(RVA = "0x132D1D4", Offset = "0x132D1D4", VA = "0x132D1D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003D1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600214D")]
			[Address(RVA = "0x132D244", Offset = "0x132D244", VA = "0x132D244", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002148")]
		[Address(RVA = "0x132B650", Offset = "0x132B650", VA = "0x132B650")]
		[DebuggerHidden]
		public <Initialization>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6002149")]
		[Address(RVA = "0x132CDD4", Offset = "0x132CDD4", VA = "0x132CDD4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600214A")]
		[Address(RVA = "0x132CDD8", Offset = "0x132CDD8", VA = "0x132CDD8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600214C")]
		[Address(RVA = "0x132D1DC", Offset = "0x132D1DC", VA = "0x132D1DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string TAG;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Data> data;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isGraphicReady;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool isCameraReady;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Shader renderMaskShader;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material renderMaskMaterial;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Mesh renderMaskMeshLeft;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Mesh renderMaskMeshRight;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Mesh renderMaskMeshBoth;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color32 color;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public BeforeCreateMaskCommandBuffer beforeCreateMaskCommandBuffer;

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x1329C80", Offset = "0x1329C80", VA = "0x1329C80")]
	private bool CheckCameras()
	{
		return default(bool);
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x1329E14", Offset = "0x1329E14", VA = "0x1329E14")]
	private bool CheckCommandBuffers()
	{
		return default(bool);
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x1329F2C", Offset = "0x1329F2C", VA = "0x1329F2C")]
	private void PrepareCameras(WaveVR_Render render)
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0x132A348", Offset = "0x132A348", VA = "0x132A348")]
	private void MyPreCull(Camera cam)
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x132ABD8", Offset = "0x132ABD8", VA = "0x132ABD8")]
	private void MyPreRender(Camera cam)
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x132AF78", Offset = "0x132AF78", VA = "0x132AF78")]
	private void OnConfigurationChanged(WaveVR_Render render)
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0x132AF7C", Offset = "0x132AF7C", VA = "0x132AF7C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0x132B128", Offset = "0x132B128", VA = "0x132B128")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x132B5DC", Offset = "0x132B5DC", VA = "0x132B5DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x938C04", Offset = "0x938C04")]
	private IEnumerator Initialization()
	{
		return null;
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0x132B67C", Offset = "0x132B67C", VA = "0x132B67C")]
	public void SetMaskColor(Color32 c)
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0x132B774", Offset = "0x132B774", VA = "0x132B774")]
	private Mesh GetStencilMesh(WVR_Eye eye)
	{
		return null;
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x132C118", Offset = "0x132C118", VA = "0x132C118")]
	private Mesh GetEyeBothMesh(Mesh l, Mesh r)
	{
		return null;
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x132A37C", Offset = "0x132A37C", VA = "0x132A37C")]
	private void createMaskCommandBuffer()
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0x132AF18", Offset = "0x132AF18", VA = "0x132AF18")]
	private void addRenderMaskCommandBuffer(Data d)
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0x132AD78", Offset = "0x132AD78", VA = "0x132AD78")]
	private void removeRenderMaskCommandBuffer(Data d)
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0x132B564", Offset = "0x132B564", VA = "0x132B564")]
	private void cleanData()
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0x132C58C", Offset = "0x132C58C", VA = "0x132C58C")]
	public WaveVR_RenderMask()
	{
	}

	[Token(Token = "0x6000607")]
	[Address(RVA = "0x132C66C", Offset = "0x132C66C", VA = "0x132C66C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938C68", Offset = "0x938C68")]
	private void <createMaskCommandBuffer>b__25_0(BeforeCreateMaskCommandBuffer a)
	{
	}
}
[Token(Token = "0x2000071")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x925720", Offset = "0x925720")]
public class WaveVR_Reticle : MonoBehaviour
{
	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool ListenToDevice;

	[Token(Token = "0x40004E0")]
	private const string LOG_TAG = "WaveVR_Reticle";

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public WaveVR_Controller.EDeviceType device;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int reticleSegments;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float reticleGrowthSpeed;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color reticleColor;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool colorFlickerPerSecond;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool deepeningColorRotation;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int rotationSpeed;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float reticleInnerDiameter;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float reticleOuterDiameter;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float interactObjInnerDiameter;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float interactObjOuterDiameter;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float kReticleDistanceMax;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material materialComp;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Mesh mesh;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float reticleDistanceInMeters;

	[Token(Token = "0x40004F0")]
	private const float kReticleDistanceMin = 1f;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float reticleInnerAngle;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float reticleOuterAngle;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float kReticleMinInnerAngle;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float kReticleMinOuterAngle;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float kReticleGrowthInnerAngle;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float kReticleGrowthOuterAngle;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Color colorFactor;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float colorFlickerTime;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float progressTime;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool isTriggerProgress;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int rotSpeedLimit;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private bool enabledReticle;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
	private bool meshIsCreated;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int internalRotationSpeed;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int colorIter;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float[] colorRotation;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int[] rotSpeedBound;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private MaterialPropertyBlock materialProperty;

	[Token(Token = "0x4000503")]
	private const float reticleInnerDiameterMin = 0f;

	[Token(Token = "0x4000504")]
	private const float reticleInnerDiameterMax = 0.0002f;

	[Token(Token = "0x4000505")]
	private const float reticleOuterDiameterMin = 0.005f;

	[Token(Token = "0x4000506")]
	private const float reticleOuterDiameterMax = 0.01f;

	[Token(Token = "0x4000507")]
	private const float interactObjInnerDiameterMin = 0.015f;

	[Token(Token = "0x4000508")]
	private const float interactObjInnerDiameterMax = 0.022f;

	[Token(Token = "0x4000509")]
	private const float interactObjOuterDiameterMin = 0.026f;

	[Token(Token = "0x400050A")]
	private const float interactObjOuterDiameterMax = 0.035f;

	[Token(Token = "0x400050B")]
	private const float kReticleDistanceValidateMax = 10f;

	[Token(Token = "0x6000608")]
	[Address(RVA = "0x1333F34", Offset = "0x1333F34", VA = "0x1333F34")]
	private void DEBUG(string msg)
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x1333FDC", Offset = "0x1333FDC", VA = "0x1333FDC")]
	private void Start()
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x1335A24", Offset = "0x1335A24", VA = "0x1335A24")]
	private void setReticleAngle()
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x1335B10", Offset = "0x1335B10", VA = "0x1335B10")]
	private void Update()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x133592C", Offset = "0x133592C", VA = "0x133592C")]
	private void initialReticle()
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x13359E8", Offset = "0x13359E8", VA = "0x13359E8")]
	private void removeReticle()
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x133689C", Offset = "0x133689C", VA = "0x133689C")]
	private void CreateGazePointer()
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x13365F8", Offset = "0x13365F8", VA = "0x13365F8")]
	private void UpdateRotSpeedBound(int speedSetting)
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x1336CD8", Offset = "0x1336CD8", VA = "0x1336CD8")]
	public void ShowReticle()
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x1336CE4", Offset = "0x1336CE4", VA = "0x1336CE4")]
	public void RemoveReticle()
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x1336CEC", Offset = "0x1336CEC", VA = "0x1336CEC")]
	public void SetColorFlicker(bool switchOn)
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x1336CF8", Offset = "0x1336CF8", VA = "0x1336CF8")]
	public bool GetColorFlicker()
	{
		return default(bool);
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x1336D00", Offset = "0x1336D00", VA = "0x1336D00")]
	public void OnGazeEnter(Camera camera, GameObject target, Vector3 intersectionPosition, bool isInteractive)
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x1336E04", Offset = "0x1336E04", VA = "0x1336E04")]
	public void OnGazeStay(Camera camera, GameObject target, Vector3 intersectionPosition, bool isInteractive)
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x1336E0C", Offset = "0x1336E0C", VA = "0x1336E0C")]
	public void OnGazeExit(Camera camera, GameObject target)
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x1336E20", Offset = "0x1336E20", VA = "0x1336E20")]
	public void OnGazeTriggerStart(Camera camera)
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0x1336E24", Offset = "0x1336E24", VA = "0x1336E24")]
	public void OnGazeTriggerEnd(Camera camera)
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0x1336E28", Offset = "0x1336E28", VA = "0x1336E28")]
	public void GetPointerRadius(out float innerRadius, out float outerRadius)
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x1336EDC", Offset = "0x1336EDC", VA = "0x1336EDC")]
	public void setProgressBarTime(float time)
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x1336EE4", Offset = "0x1336EE4", VA = "0x1336EE4")]
	public float getReticleCurrentDistance()
	{
		return default(float);
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x1336EEC", Offset = "0x1336EEC", VA = "0x1336EEC")]
	public void triggerProgressBar(bool switchOn)
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x1336D08", Offset = "0x1336D08", VA = "0x1336D08")]
	private void SetGazeTarget(Vector3 target, bool interactive)
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x1336FA0", Offset = "0x1336FA0", VA = "0x1336FA0")]
	public void SetReticleColor(Color reticle_color)
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x1334038", Offset = "0x1334038", VA = "0x1334038")]
	private void ReadJsonValues()
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x133771C", Offset = "0x133771C", VA = "0x133771C")]
	private bool IsBoolean(string value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x1337018", Offset = "0x1337018", VA = "0x1337018")]
	private bool IsFloat(string value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x13371C4", Offset = "0x13371C4", VA = "0x13371C4")]
	private bool IsNumeric(string value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x1335874", Offset = "0x1335874", VA = "0x1335874")]
	private void Validate()
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x133738C", Offset = "0x133738C", VA = "0x133738C")]
	private Color32 StringToColor32(string color_string)
	{
		return default(Color32);
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x13378CC", Offset = "0x13378CC", VA = "0x13378CC")]
	public WaveVR_Reticle()
	{
	}
}
[Token(Token = "0x2000072")]
public class WaveVR_Screenshot
{
	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string LOG_TAG;

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x1337964", Offset = "0x1337964", VA = "0x1337964")]
	private static void PrintDebugLog(string msg)
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x1337A04", Offset = "0x1337A04", VA = "0x1337A04")]
	public static bool requestScreenshot(WVR_ScreenshotMode mode, string filename)
	{
		return default(bool);
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x1337F18", Offset = "0x1337F18", VA = "0x1337F18")]
	public WaveVR_Screenshot()
	{
	}
}
[Token(Token = "0x2000073")]
[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x925784", Offset = "0x925784")]
public class WaveVR_TrackedButtons : MonoBehaviour
{
	[Token(Token = "0x2000469")]
	public struct ClickedEventArgs
	{
		[Token(Token = "0x4001A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_DeviceType device;

		[Token(Token = "0x4001A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint flags;

		[Token(Token = "0x4001A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 axis;
	}

	[Token(Token = "0x200046A")]
	public delegate void ClickedEventHandler(object sender, ClickedEventArgs e);

	[Token(Token = "0x400050D")]
	public const string LOG_TAG = "WaveVR_TrackedButtons";

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ulong Input_Mask_Menu;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static ulong Input_Mask_Grip;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static ulong Input_Mask_DPad_Left;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static ulong Input_Mask_DPad_Up;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static ulong Input_Mask_DPad_Right;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static ulong Input_Mask_DPad_Down;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static ulong Input_Mask_Volume_Up;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static ulong Input_Mask_Volume_Down;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static ulong Input_Mask_Hmd_Enter;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static ulong Input_Mask_Touchpad;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static ulong Input_Mask_Trigger;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static ulong Input_Mask_DigitalTrigger;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WaveVR_Controller.EDeviceType device;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool triggerPressed;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool menuPressed;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	private bool padPressed;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	private bool gripPressed;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool padTouched;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool hmdEnterPressed;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private uint inputMask;

	[Token(Token = "0x14000005")]
	public event ClickedEventHandler MenuButtonClicked
	{
		[Token(Token = "0x600062A")]
		[Address(RVA = "0x133CA40", Offset = "0x133CA40", VA = "0x133CA40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938C78", Offset = "0x938C78")]
		add
		{
		}
		[Token(Token = "0x600062B")]
		[Address(RVA = "0x133CB2C", Offset = "0x133CB2C", VA = "0x133CB2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938C88", Offset = "0x938C88")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event ClickedEventHandler MenuButtonUnclicked
	{
		[Token(Token = "0x600062C")]
		[Address(RVA = "0x133CC18", Offset = "0x133CC18", VA = "0x133CC18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938C98", Offset = "0x938C98")]
		add
		{
		}
		[Token(Token = "0x600062D")]
		[Address(RVA = "0x133CD04", Offset = "0x133CD04", VA = "0x133CD04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938CA8", Offset = "0x938CA8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event ClickedEventHandler TriggerClicked
	{
		[Token(Token = "0x600062E")]
		[Address(RVA = "0x133CDF0", Offset = "0x133CDF0", VA = "0x133CDF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938CB8", Offset = "0x938CB8")]
		add
		{
		}
		[Token(Token = "0x600062F")]
		[Address(RVA = "0x133CEDC", Offset = "0x133CEDC", VA = "0x133CEDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938CC8", Offset = "0x938CC8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event ClickedEventHandler TriggerUnclicked
	{
		[Token(Token = "0x6000630")]
		[Address(RVA = "0x133CFC8", Offset = "0x133CFC8", VA = "0x133CFC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938CD8", Offset = "0x938CD8")]
		add
		{
		}
		[Token(Token = "0x6000631")]
		[Address(RVA = "0x133D0B4", Offset = "0x133D0B4", VA = "0x133D0B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938CE8", Offset = "0x938CE8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event ClickedEventHandler PadClicked
	{
		[Token(Token = "0x6000632")]
		[Address(RVA = "0x133D1A0", Offset = "0x133D1A0", VA = "0x133D1A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938CF8", Offset = "0x938CF8")]
		add
		{
		}
		[Token(Token = "0x6000633")]
		[Address(RVA = "0x133D28C", Offset = "0x133D28C", VA = "0x133D28C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938D08", Offset = "0x938D08")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event ClickedEventHandler PadUnclicked
	{
		[Token(Token = "0x6000634")]
		[Address(RVA = "0x133D378", Offset = "0x133D378", VA = "0x133D378")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938D18", Offset = "0x938D18")]
		add
		{
		}
		[Token(Token = "0x6000635")]
		[Address(RVA = "0x133D464", Offset = "0x133D464", VA = "0x133D464")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938D28", Offset = "0x938D28")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event ClickedEventHandler PadTouched
	{
		[Token(Token = "0x6000636")]
		[Address(RVA = "0x133D550", Offset = "0x133D550", VA = "0x133D550")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938D38", Offset = "0x938D38")]
		add
		{
		}
		[Token(Token = "0x6000637")]
		[Address(RVA = "0x133D63C", Offset = "0x133D63C", VA = "0x133D63C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938D48", Offset = "0x938D48")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event ClickedEventHandler PadUntouched
	{
		[Token(Token = "0x6000638")]
		[Address(RVA = "0x133D728", Offset = "0x133D728", VA = "0x133D728")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938D58", Offset = "0x938D58")]
		add
		{
		}
		[Token(Token = "0x6000639")]
		[Address(RVA = "0x133D814", Offset = "0x133D814", VA = "0x133D814")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938D68", Offset = "0x938D68")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event ClickedEventHandler Gripped
	{
		[Token(Token = "0x600063A")]
		[Address(RVA = "0x133D900", Offset = "0x133D900", VA = "0x133D900")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938D78", Offset = "0x938D78")]
		add
		{
		}
		[Token(Token = "0x600063B")]
		[Address(RVA = "0x133D9EC", Offset = "0x133D9EC", VA = "0x133D9EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938D88", Offset = "0x938D88")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event ClickedEventHandler Ungripped
	{
		[Token(Token = "0x600063C")]
		[Address(RVA = "0x133DAD8", Offset = "0x133DAD8", VA = "0x133DAD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938D98", Offset = "0x938D98")]
		add
		{
		}
		[Token(Token = "0x600063D")]
		[Address(RVA = "0x133DBC4", Offset = "0x133DBC4", VA = "0x133DBC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938DA8", Offset = "0x938DA8")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event ClickedEventHandler HmdEnterClicked
	{
		[Token(Token = "0x600063E")]
		[Address(RVA = "0x133DCB0", Offset = "0x133DCB0", VA = "0x133DCB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938DB8", Offset = "0x938DB8")]
		add
		{
		}
		[Token(Token = "0x600063F")]
		[Address(RVA = "0x133DD9C", Offset = "0x133DD9C", VA = "0x133DD9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938DC8", Offset = "0x938DC8")]
		remove
		{
		}
	}

	[Token(Token = "0x14000010")]
	public event ClickedEventHandler HmdEnterUnclicked
	{
		[Token(Token = "0x6000640")]
		[Address(RVA = "0x133DE88", Offset = "0x133DE88", VA = "0x133DE88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938DD8", Offset = "0x938DD8")]
		add
		{
		}
		[Token(Token = "0x6000641")]
		[Address(RVA = "0x133DF74", Offset = "0x133DF74", VA = "0x133DF74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938DE8", Offset = "0x938DE8")]
		remove
		{
		}
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x133E060", Offset = "0x133E060", VA = "0x133E060", Slot = "4")]
	public virtual void OnTriggerClicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x133E8D8", Offset = "0x133E8D8", VA = "0x133E8D8", Slot = "5")]
	public virtual void OnTriggerUnclicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x133E990", Offset = "0x133E990", VA = "0x133E990", Slot = "6")]
	public virtual void OnMenuClicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x133EA48", Offset = "0x133EA48", VA = "0x133EA48", Slot = "7")]
	public virtual void OnMenuUnclicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x133EB00", Offset = "0x133EB00", VA = "0x133EB00", Slot = "8")]
	public virtual void OnPadClicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x133EBB8", Offset = "0x133EBB8", VA = "0x133EBB8", Slot = "9")]
	public virtual void OnPadUnclicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x133EC70", Offset = "0x133EC70", VA = "0x133EC70", Slot = "10")]
	public virtual void OnPadTouched(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x133ED28", Offset = "0x133ED28", VA = "0x133ED28", Slot = "11")]
	public virtual void OnPadUntouched(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x133EDE0", Offset = "0x133EDE0", VA = "0x133EDE0", Slot = "12")]
	public virtual void OnGripped(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x133EE98", Offset = "0x133EE98", VA = "0x133EE98", Slot = "13")]
	public virtual void OnUngripped(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x133EF50", Offset = "0x133EF50", VA = "0x133EF50", Slot = "14")]
	public virtual void OnHmdEnterClicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x133F008", Offset = "0x133F008", VA = "0x133F008", Slot = "15")]
	public virtual void OnHmdEnterUnclicked(ClickedEventArgs e)
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x133F0C0", Offset = "0x133F0C0", VA = "0x133F0C0")]
	private Vector2 GetAxis(WVR_AnalogState_t[] analogArray, WVR_InputId _id, WVR_AnalogType aType, int _count)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x133F6E8", Offset = "0x133F6E8", VA = "0x133F6E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x133FE7C", Offset = "0x133FE7C", VA = "0x133FE7C")]
	public WaveVR_TrackedButtons()
	{
	}
}
[Token(Token = "0x2000074")]
public static class WaveVR_Utils
{
	[Token(Token = "0x200046B")]
	public enum DegreeField
	{
		[Token(Token = "0x4001A67")]
		DOF3,
		[Token(Token = "0x4001A68")]
		DOF6
	}

	[Token(Token = "0x200046C")]
	public enum WVR_PerfLevel
	{
		[Token(Token = "0x4001A6A")]
		System,
		[Token(Token = "0x4001A6B")]
		Minimum,
		[Token(Token = "0x4001A6C")]
		Medium,
		[Token(Token = "0x4001A6D")]
		Maximum
	}

	[Token(Token = "0x200046D")]
	public struct WVR_ButtonState_t
	{
		[Token(Token = "0x4001A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong BtnPressed;

		[Token(Token = "0x4001A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong BtnTouched;
	}

	[Token(Token = "0x200046E")]
	public class OEMConfig
	{
		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool isSetCallback;

		[Token(Token = "0x6002152")]
		[Address(RVA = "0x1344188", Offset = "0x1344188", VA = "0x1344188")]
		public static void OEMConfig_Changed()
		{
		}

		[Token(Token = "0x6002153")]
		[Address(RVA = "0x134424C", Offset = "0x134424C", VA = "0x134424C")]
		public static void initOEMConfig()
		{
		}

		[Token(Token = "0x6002154")]
		[Address(RVA = "0x1336FAC", Offset = "0x1336FAC", VA = "0x1336FAC")]
		public static string getControllerConfig()
		{
			return null;
		}

		[Token(Token = "0x6002155")]
		[Address(RVA = "0x132F67C", Offset = "0x132F67C", VA = "0x132F67C")]
		public static string getBatteryConfig()
		{
			return null;
		}

		[Token(Token = "0x6002156")]
		[Address(RVA = "0x1344468", Offset = "0x1344468", VA = "0x1344468")]
		public static string getSingleBeamEnableConfig()
		{
			return null;
		}

		[Token(Token = "0x6002157")]
		[Address(RVA = "0x13444D4", Offset = "0x13444D4", VA = "0x13444D4")]
		public OEMConfig()
		{
		}
	}

	[Token(Token = "0x200046F")]
	public class Event
	{
		[Token(Token = "0x2000637")]
		public delegate void Handler(params object[] args);

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string DEVICE_CONNECTED;

		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string NEW_POSES;

		[Token(Token = "0x4001A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string AFTER_NEW_POSES;

		[Token(Token = "0x4001A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string ALL_VREVENT;

		[Token(Token = "0x4001A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static string BATTERY_STATUS_UPDATE;

		[Token(Token = "0x4001A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static string CONTROLLER_MODEL_LOADED;

		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static string CONTROLLER_MODEL_UNLOADED;

		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static string PRE_CULL_LEFT;

		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static string PRE_CULL_RIGHT;

		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static string SWIPE_EVENT;

		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static string SYSTEMFOCUS_CHANGED;

		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static string INTERACTION_MODE_CHANGED;

		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static string ADAPTIVE_CONTROLLER_READY;

		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static string RENDER_CONFIGURATION_CHANGED;

		[Token(Token = "0x4001A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x937F10", Offset = "0x937F10")]
		public static string DEVICE_ROLE_CHANGED;

		[Token(Token = "0x4001A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static string DS_ASSETS_NOT_FOUND;

		[Token(Token = "0x4001A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static string OEM_CONFIG_CHANGED;

		[Token(Token = "0x4001A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static string DEVICE_STATUS_UPDATE;

		[Token(Token = "0x4001A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public static string IPD_CHANGED;

		[Token(Token = "0x4001A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public static string HAND_STATIC_GESTURE_LEFT;

		[Token(Token = "0x4001A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public static string HAND_STATIC_GESTURE_RIGHT;

		[Token(Token = "0x4001A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public static string HAND_DYNAMIC_GESTURE_LEFT;

		[Token(Token = "0x4001A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public static string HAND_DYNAMIC_GESTURE_RIGHT;

		[Token(Token = "0x4001A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public static string HAND_GESTURE_STATUS;

		[Token(Token = "0x4001A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public static string HAND_TRACKING_STATUS;

		[Token(Token = "0x4001A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private static Dictionary<string, List<Handler>> listeners;

		[Token(Token = "0x6002159")]
		[Address(RVA = "0x132EEE8", Offset = "0x132EEE8", VA = "0x132EEE8")]
		public static void Listen(string message, Handler action)
		{
		}

		[Token(Token = "0x600215A")]
		[Address(RVA = "0x132F280", Offset = "0x132F280", VA = "0x132F280")]
		public static void Remove(string message, Handler action)
		{
		}

		[Token(Token = "0x600215B")]
		[Address(RVA = "0x1333094", Offset = "0x1333094", VA = "0x1333094")]
		public static void Send(string message, params object[] args)
		{
		}

		[Token(Token = "0x600215C")]
		[Address(RVA = "0x1342E64", Offset = "0x1342E64", VA = "0x1342E64")]
		public Event()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000470")]
	public struct RigidTransform
	{
		[Token(Token = "0x4001A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 pos;

		[Token(Token = "0x4001A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion rot;

		[Token(Token = "0x170003D2")]
		public static RigidTransform identity
		{
			[Token(Token = "0x600215E")]
			[Address(RVA = "0x13449B8", Offset = "0x13449B8", VA = "0x13449B8")]
			get
			{
				return default(RigidTransform);
			}
		}

		[Token(Token = "0x600215F")]
		[Address(RVA = "0x9E1E84", Offset = "0x9E1E84", VA = "0x9E1E84")]
		public RigidTransform(Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x6002160")]
		[Address(RVA = "0x9E1E98", Offset = "0x9E1E98", VA = "0x9E1E98")]
		public RigidTransform(Transform t)
		{
		}

		[Token(Token = "0x6002161")]
		[Address(RVA = "0x9E1EA0", Offset = "0x9E1EA0", VA = "0x9E1EA0")]
		public RigidTransform(WVR_Matrix4f_t pose)
		{
		}

		[Token(Token = "0x6002162")]
		[Address(RVA = "0x1332AAC", Offset = "0x1332AAC", VA = "0x1332AAC")]
		public static Matrix4x4 toMatrix44(WVR_Matrix4f_t pose, bool glToUnity = true)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6002163")]
		[Address(RVA = "0x1344C34", Offset = "0x1344C34", VA = "0x1344C34")]
		public static WVR_Matrix4f_t ToWVRMatrix(Matrix4x4 m, bool unityToGL = true)
		{
			return default(WVR_Matrix4f_t);
		}

		[Token(Token = "0x6002164")]
		[Address(RVA = "0x1344E54", Offset = "0x1344E54", VA = "0x1344E54")]
		public static Vector3 ToUnityPos(Vector3 glPos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6002165")]
		[Address(RVA = "0x9E1EE4", Offset = "0x9E1EE4", VA = "0x9E1EE4")]
		public void update(WVR_Matrix4f_t pose)
		{
		}

		[Token(Token = "0x6002166")]
		[Address(RVA = "0x9E1F28", Offset = "0x9E1F28", VA = "0x9E1F28")]
		public void update(Vector3 position, Quaternion orientation)
		{
		}

		[Token(Token = "0x6002167")]
		[Address(RVA = "0x9E1F3C", Offset = "0x9E1F3C", VA = "0x9E1F3C", Slot = "0")]
		public override bool Equals(object o)
		{
			return default(bool);
		}

		[Token(Token = "0x6002168")]
		[Address(RVA = "0x9E1F44", Offset = "0x9E1F44", VA = "0x9E1F44", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6002169")]
		[Address(RVA = "0x1345144", Offset = "0x1345144", VA = "0x1345144")]
		public static bool operator ==(RigidTransform a, RigidTransform b)
		{
			return default(bool);
		}

		[Token(Token = "0x600216A")]
		[Address(RVA = "0x134527C", Offset = "0x134527C", VA = "0x134527C")]
		public static bool operator !=(RigidTransform a, RigidTransform b)
		{
			return default(bool);
		}

		[Token(Token = "0x600216B")]
		[Address(RVA = "0x13453B4", Offset = "0x13453B4", VA = "0x13453B4")]
		public static RigidTransform operator *(RigidTransform a, RigidTransform b)
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x600216C")]
		[Address(RVA = "0x9E1F80", Offset = "0x9E1F80", VA = "0x9E1F80")]
		public void Inverse()
		{
		}

		[Token(Token = "0x600216D")]
		[Address(RVA = "0x9E1F88", Offset = "0x9E1F88", VA = "0x9E1F88")]
		public RigidTransform GetInverse()
		{
			return default(RigidTransform);
		}

		[Token(Token = "0x600216E")]
		[Address(RVA = "0x9E1F90", Offset = "0x9E1F90", VA = "0x9E1F90")]
		public Vector3 TransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600216F")]
		[Address(RVA = "0x1345778", Offset = "0x1345778", VA = "0x1345778")]
		public static Vector3 operator *(RigidTransform t, Vector3 v)
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x2000471")]
	public class Trace
	{
		[Token(Token = "0x6002170")]
		[Address(RVA = "0x134577C", Offset = "0x134577C", VA = "0x134577C")]
		public static void BeginSection(string sectionName, bool inRenderThread = true)
		{
		}

		[Token(Token = "0x6002171")]
		[Address(RVA = "0x13458F8", Offset = "0x13458F8", VA = "0x13458F8")]
		public static void EndSection(bool inRenderThread = true)
		{
		}

		[Token(Token = "0x6002172")]
		[Address(RVA = "0x134597C", Offset = "0x134597C", VA = "0x134597C")]
		public Trace()
		{
		}
	}

	[Token(Token = "0x2000472")]
	private delegate void RenderEventDelegate(int e);

	[Token(Token = "0x2000473")]
	public delegate void CustomRenderThreadFunc();

	[Token(Token = "0x2000474")]
	public enum EngineThreadID
	{
		[Token(Token = "0x4001A8E")]
		JAVA_THREAD,
		[Token(Token = "0x4001A8F")]
		GAME_THREAD,
		[Token(Token = "0x4001A90")]
		RENDER_THREAD,
		[Token(Token = "0x4001A91")]
		WORKER1_THREAD,
		[Token(Token = "0x4001A92")]
		WORKER2_THREAD
	}

	[Token(Token = "0x2000475")]
	public enum EngineEventID
	{
		[Token(Token = "0x4001A94")]
		ENGINE_EVENT_ID_BEGIN = 40960,
		[Token(Token = "0x4001A95")]
		HMD_CREATE,
		[Token(Token = "0x4001A96")]
		HMD_INITIAILZED,
		[Token(Token = "0x4001A97")]
		HMD_RESUME,
		[Token(Token = "0x4001A98")]
		HMD_PAUSE,
		[Token(Token = "0x4001A99")]
		HMD_TERMINATED,
		[Token(Token = "0x4001A9A")]
		FIRST_FRAME,
		[Token(Token = "0x4001A9B")]
		FRAME_START,
		[Token(Token = "0x4001A9C")]
		FRAME_END,
		[Token(Token = "0x4001A9D")]
		UNITY_AWAKE,
		[Token(Token = "0x4001A9E")]
		UNITY_ENABLE,
		[Token(Token = "0x4001A9F")]
		UNITY_DISABLE,
		[Token(Token = "0x4001AA0")]
		UNITY_START,
		[Token(Token = "0x4001AA1")]
		UNITY_DESTROY,
		[Token(Token = "0x4001AA2")]
		UNITY_APPLICATION_RESUME,
		[Token(Token = "0x4001AA3")]
		UNITY_APPLICATION_PAUSE,
		[Token(Token = "0x4001AA4")]
		UNITY_APPLICATION_QUIT,
		[Token(Token = "0x4001AA5")]
		ENGINE_EVENT_ID_END
	}

	[Token(Token = "0x2000476")]
	public delegate void HandGestureResultDelegate(object sender, bool result);

	[Token(Token = "0x2000477")]
	public enum HandGestureStatus
	{
		[Token(Token = "0x4001AA7")]
		NOT_START,
		[Token(Token = "0x4001AA8")]
		START_FAILURE,
		[Token(Token = "0x4001AA9")]
		STARTING,
		[Token(Token = "0x4001AAA")]
		STOPING,
		[Token(Token = "0x4001AAB")]
		AVAILABLE,
		[Token(Token = "0x4001AAC")]
		UNSUPPORT
	}

	[Token(Token = "0x2000478")]
	public delegate void HandTrackingResultDelegate(object sender, bool result);

	[Token(Token = "0x2000479")]
	public enum HandTrackingStatus
	{
		[Token(Token = "0x4001AAE")]
		NOT_START,
		[Token(Token = "0x4001AAF")]
		START_FAILURE,
		[Token(Token = "0x4001AB0")]
		STARTING,
		[Token(Token = "0x4001AB1")]
		STOPING,
		[Token(Token = "0x4001AB2")]
		AVAILABLE,
		[Token(Token = "0x4001AB3")]
		UNSUPPORT
	}

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string LOG_TAG;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Queue TraceSessionNameQueue;

	[Token(Token = "0x4000530")]
	public const int k_nRenderEventID_SubmitL = 1;

	[Token(Token = "0x4000531")]
	public const int k_nRenderEventID_SubmitR = 2;

	[Token(Token = "0x4000532")]
	public const int k_nRenderEventID_SubmitBoth = 3;

	[Token(Token = "0x4000533")]
	public const int k_nRenderEventID_GraphicInitial = 8;

	[Token(Token = "0x4000534")]
	public const int k_nRenderEventID_GraphicShutdown = 9;

	[Token(Token = "0x4000535")]
	public const int k_nRenderEventID_RenderEyeL = 256;

	[Token(Token = "0x4000536")]
	public const int k_nRenderEventID_RenderEyeR = 257;

	[Token(Token = "0x4000537")]
	public const int k_nRenderEventID_RenderEyeEndL = 258;

	[Token(Token = "0x4000538")]
	public const int k_nRenderEventID_RenderEyeEndR = 259;

	[Token(Token = "0x4000539")]
	public const int k_nRenderEventID_RenderEyeBoth = 273;

	[Token(Token = "0x400053A")]
	public const int k_nRenderEventID_RenderEyeEndBoth = 274;

	[Token(Token = "0x400053B")]
	public const int RENDEREVENTID_INIT_GRAPHIC = 0;

	[Token(Token = "0x400053C")]
	public const int RENDEREVENTID_SHUTDOWN_GRAPHIC = 1;

	[Token(Token = "0x400053D")]
	public const int RENDEREVENTID_Systrace_BeginSession = 4;

	[Token(Token = "0x400053E")]
	public const int RENDEREVENTID_Systrace_EndSession = 5;

	[Token(Token = "0x400053F")]
	public const int RENDEREVENTID_StartCamera = 21;

	[Token(Token = "0x4000540")]
	public const int RENDEREVENTID_StopCamera = 22;

	[Token(Token = "0x4000541")]
	public const int RENDEREVENTID_UpdateCamera = 23;

	[Token(Token = "0x4000542")]
	public const int RENDEREVENTID_DrawTextureWithBuffer = 24;

	[Token(Token = "0x4000543")]
	public const int RENDEREVENTID_ReleaseTexture = 25;

	[Token(Token = "0x4000544")]
	public const int RENDEREVENTID_RenderMaskLeft = 30;

	[Token(Token = "0x4000545")]
	public const int RENDEREVENTID_RenderMaskRight = 31;

	[Token(Token = "0x4000546")]
	public const int RENDEREVENTID_SinglePassPrepare = 90;

	[Token(Token = "0x4000547")]
	public const int RENDEREVENTID_SinglePassPrepareWithAntiAliasing2x = 92;

	[Token(Token = "0x4000548")]
	public const int RENDEREVENTID_SinglePassPrepareWithAntiAliasing4x = 94;

	[Token(Token = "0x4000549")]
	public const int RENDEREVENTID_SinglePassPrepareWithAntiAliasing8x = 98;

	[Token(Token = "0x400054A")]
	public const int RENDEREVENTID_SinglePassBeforeForwardOpaque = 86;

	[Token(Token = "0x400054B")]
	public const int RENDEREVENTID_SinglePassPostRender = 87;

	[Token(Token = "0x400054C")]
	public const int RENDEREVENTID_ExecuteCustomFunction = 45;

	[Token(Token = "0x400054D")]
	public const int RENDEREVENTID_EditorEmptyOperation = 65536;

	[Token(Token = "0x400054E")]
	public const int RENDEREVENTID_SubmitL = 1001;

	[Token(Token = "0x400054F")]
	public const int RENDEREVENTID_SubmitR = 1002;

	[Token(Token = "0x4000550")]
	public const uint RENDEREVENTID_SubmitL_Index_Min = 1100u;

	[Token(Token = "0x4000551")]
	public const uint RENDEREVENTID_SubmitR_Index_Min = 1200u;

	[Token(Token = "0x4000552")]
	public const uint RENDEREVENTID_Wait_Get_Poses = 2000u;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static RenderEventDelegate RenderEventHandle;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static IntPtr RenderEventHandlePtr;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static CustomRenderThreadFunc mCustomRenderThreadFunc;

	[Token(Token = "0x6000652")]
	public static void SafeExecuteAllDelegate<T>(Delegate multi, Action<T> invoker, bool throws = false)
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0x13409C4", Offset = "0x13409C4", VA = "0x13409C4")]
	private static float _copysign(float sizeval, float signval)
	{
		return default(float);
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0x1332D44", Offset = "0x1332D44", VA = "0x1332D44")]
	public static Quaternion GetRotation(Matrix4x4 matrix)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x1340A80", Offset = "0x1340A80", VA = "0x1340A80")]
	public static Quaternion GetRotation(WVR_Quatf_t glQuat)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x1332D08", Offset = "0x1332D08", VA = "0x1332D08")]
	public static Vector3 GetPosition(this Matrix4x4 matrix)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x1340AC4", Offset = "0x1340AC4", VA = "0x1340AC4")]
	public static Vector3 GetPosition(WVR_Vector3f_t glVector)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0x1340AFC", Offset = "0x1340AFC", VA = "0x1340AFC")]
	public static void GetVectorFromGL(WVR_Vector3f_t gl_vec, out Vector3 unity_vec)
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x1332FCC", Offset = "0x1332FCC", VA = "0x1332FCC")]
	public static Vector3 GetScale(this Matrix4x4 matrix)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x1340B0C", Offset = "0x1340B0C", VA = "0x1340B0C")]
	public static string GetControllerName(WaveVR_Controller.EDeviceType type)
	{
		return null;
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x1340E58", Offset = "0x1340E58", VA = "0x1340E58")]
	public static void notifyActivityUnityStarted()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600065C")]
	[Address(RVA = "0x1340F40", Offset = "0x1340F40", VA = "0x1340F40")]
	public static extern void NativeRenderEvent(int eventID);

	[PreserveSig]
	[Token(Token = "0x600065D")]
	[Address(RVA = "0x1340FE0", Offset = "0x1340FE0", VA = "0x1340FE0")]
	public static extern void SetColorSpace(int colorspace);

	[PreserveSig]
	[Token(Token = "0x600065E")]
	[Address(RVA = "0x1341080", Offset = "0x1341080", VA = "0x1341080")]
	public static extern void SetSubmitOptionalArgument([Out] WVR_PoseState_t[] poses, int submit_extend_flag);

	[PreserveSig]
	[Token(Token = "0x600065F")]
	[Address(RVA = "0x13411F8", Offset = "0x13411F8", VA = "0x13411F8")]
	public static extern void NativeProcessEngineEvent(uint tID, uint eventID);

	[PreserveSig]
	[Token(Token = "0x6000660")]
	[Address(RVA = "0x13412A4", Offset = "0x13412A4", VA = "0x13412A4")]
	public static extern int IsSinglePassSupported();

	[PreserveSig]
	[Token(Token = "0x6000661")]
	[Address(RVA = "0x1341334", Offset = "0x1341334", VA = "0x1341334")]
	public static extern IntPtr PrepareSinglePassTexture(int antiAliasing, int width, int height);

	[PreserveSig]
	[Token(Token = "0x6000662")]
	[Address(RVA = "0x13413EC", Offset = "0x13413EC", VA = "0x13413EC")]
	public static extern void SinglePassBeforeForwardOpaque();

	[PreserveSig]
	[Token(Token = "0x6000663")]
	[Address(RVA = "0x134147C", Offset = "0x134147C", VA = "0x134147C")]
	public static extern void SinglePassPostRender();

	[PreserveSig]
	[Token(Token = "0x6000664")]
	[Address(RVA = "0x134150C", Offset = "0x134150C", VA = "0x134150C")]
	private static extern void TraceBeginSection(string name);

	[PreserveSig]
	[Token(Token = "0x6000665")]
	[Address(RVA = "0x13415B4", Offset = "0x13415B4", VA = "0x13415B4")]
	private static extern void TraceEndSection();

	[PreserveSig]
	[Token(Token = "0x6000666")]
	[Address(RVA = "0x1327FE8", Offset = "0x1327FE8", VA = "0x1327FE8")]
	public static extern bool WVR_IsATWActive();

	[PreserveSig]
	[Token(Token = "0x6000667")]
	[Address(RVA = "0x1341644", Offset = "0x1341644", VA = "0x1341644")]
	public static extern int WVR_GetNumberOfTextures();

	[PreserveSig]
	[Token(Token = "0x6000668")]
	[Address(RVA = "0x13416D4", Offset = "0x13416D4", VA = "0x13416D4")]
	public static extern IntPtr WVR_StoreRenderTextures(int[] texturesIDs, int size, bool eEye, WVR_TextureTarget target);

	[PreserveSig]
	[Token(Token = "0x6000669")]
	[Address(RVA = "0x13417A4", Offset = "0x13417A4", VA = "0x13417A4")]
	public static extern IntPtr WVR_ReplaceCurrentTextureID(IntPtr queue, IntPtr imageHandle);

	[PreserveSig]
	[Token(Token = "0x600066A")]
	[Address(RVA = "0x1341854", Offset = "0x1341854", VA = "0x1341854")]
	public static extern uint WVR_GetAvailableTextureID(IntPtr queue);

	[PreserveSig]
	[Token(Token = "0x600066B")]
	[Address(RVA = "0x13418F4", Offset = "0x13418F4", VA = "0x13418F4")]
	public static extern bool WVR_IsPresentedOnExternal();

	[PreserveSig]
	[Token(Token = "0x600066C")]
	[Address(RVA = "0x134198C", Offset = "0x134198C", VA = "0x134198C")]
	public static extern int WVR_LoadCriteriaData(string criteriaData);

	[PreserveSig]
	[Token(Token = "0x600066D")]
	[Address(RVA = "0x1341A44", Offset = "0x1341A44", VA = "0x1341A44")]
	public static extern int WVR_StartPerformanceTest(string sceneID);

	[PreserveSig]
	[Token(Token = "0x600066E")]
	[Address(RVA = "0x1341AFC", Offset = "0x1341AFC", VA = "0x1341AFC")]
	public static extern int WVR_EndPerformanceTest(StringBuilder pReport, uint ReportSize);

	[PreserveSig]
	[Token(Token = "0x600066F")]
	[Address(RVA = "0x1341BD0", Offset = "0x1341BD0", VA = "0x1341BD0")]
	public static extern uint WVR_GetPerformanceReportSize();

	[PreserveSig]
	[Token(Token = "0x6000670")]
	[Address(RVA = "0x1341C60", Offset = "0x1341C60", VA = "0x1341C60")]
	public static extern bool WVR_SetPerformanceLevels(WVR_PerfLevel cpuLevel, WVR_PerfLevel gpuLevel);

	[PreserveSig]
	[Token(Token = "0x6000671")]
	[Address(RVA = "0x132C020", Offset = "0x132C020", VA = "0x132C020")]
	public static extern void WVR_GetStencilMesh(WVR_Eye eEye, ref uint vertexCount, ref uint triangleCount, uint floatArrayCount, [In][Out] float[] vertexData, uint intArrayCount, [In][Out] int[] indexData);

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x1340020", Offset = "0x1340020", VA = "0x1340020")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x938E18", Offset = "0x938E18")]
	private static void RenderEvent(int eventId)
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x1342478", Offset = "0x1342478", VA = "0x1342478")]
	private static IntPtr GetFunctionPointerForDelegate(Delegate del)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x13424E0", Offset = "0x13424E0", VA = "0x13424E0")]
	public static void SendRenderEvent(int eventId)
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x1328080", Offset = "0x1328080", VA = "0x1328080")]
	public static void IssueEngineEvent(EngineEventID eventID)
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x1342554", Offset = "0x1342554", VA = "0x1342554")]
	public static void IssueEngineEvent(EngineThreadID tID, EngineEventID eventID)
	{
	}
}
namespace WaveVR_Log
{
	[Token(Token = "0x2000075")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9257CC", Offset = "0x9257CC")]
	public class Log
	{
		[Token(Token = "0x200047A")]
		public class EnterAndExit : IDisposable
		{
			[Token(Token = "0x4001AB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private string tag;

			[Token(Token = "0x4001AB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private string message;

			[Token(Token = "0x4001AB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private string enter;

			[Token(Token = "0x4001AB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private string exit;

			[Token(Token = "0x4001AB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool logInEditor;

			[Token(Token = "0x6002183")]
			[Address(RVA = "0xD89A90", Offset = "0xD89A90", VA = "0xD89A90")]
			public EnterAndExit(string tag, string message, string postfixEnter, string postfixExit, bool logInEditor = false)
			{
			}

			[Token(Token = "0x6002184")]
			[Address(RVA = "0xD89DE0", Offset = "0xD89DE0", VA = "0xD89DE0", Slot = "4")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x200047B")]
		public class PeriodLog
		{
			[Token(Token = "0x2000638")]
			public delegate string StringProcessDelegate();

			[Token(Token = "0x4001AB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float interval;

			[Token(Token = "0x4001ABA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float lastTime;

			[Token(Token = "0x4001ABB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private bool print;

			[Token(Token = "0x6002185")]
			[Address(RVA = "0xD89DA0", Offset = "0xD89DA0", VA = "0xD89DA0")]
			public PeriodLog()
			{
			}

			[Token(Token = "0x6002186")]
			[Address(RVA = "0xD89E64", Offset = "0xD89E64", VA = "0xD89E64")]
			public void check()
			{
			}

			[Token(Token = "0x6002187")]
			[Address(RVA = "0xD89EA8", Offset = "0xD89EA8", VA = "0xD89EA8")]
			public void d(string tag, string message, bool logInEditor = false)
			{
			}

			[Token(Token = "0x6002188")]
			[Address(RVA = "0xD89F3C", Offset = "0xD89F3C", VA = "0xD89F3C")]
			public void d(string tag, StringProcessDelegate strDelegate, bool logInEditor = false)
			{
			}
		}

		[Token(Token = "0x4000556")]
		private const int ANDROID_LOG_VERBOSE = 2;

		[Token(Token = "0x4000557")]
		private const int ANDROID_LOG_DEBUG = 3;

		[Token(Token = "0x4000558")]
		private const int ANDROID_LOG_INFO = 4;

		[Token(Token = "0x4000559")]
		private const int ANDROID_LOG_WARN = 5;

		[Token(Token = "0x400055A")]
		private const int ANDROID_LOG_ERROR = 6;

		[Token(Token = "0x400055B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static PeriodLog gpl;

		[PreserveSig]
		[Token(Token = "0x6000678")]
		[Address(RVA = "0xD89718", Offset = "0xD89718", VA = "0xD89718")]
		internal static extern int __android_log_print(int prio, string tag, string fmt, IntPtr ptr);

		[Token(Token = "0x6000679")]
		[Address(RVA = "0xD8980C", Offset = "0xD8980C", VA = "0xD8980C")]
		public static void d(string tag, string message, bool logInEditor = false)
		{
		}

		[Token(Token = "0x600067A")]
		[Address(RVA = "0xD89888", Offset = "0xD89888", VA = "0xD89888")]
		public static void i(string tag, string message, bool logInEditor = false)
		{
		}

		[Token(Token = "0x600067B")]
		[Address(RVA = "0xD89904", Offset = "0xD89904", VA = "0xD89904")]
		public static void w(string tag, string message, bool logInEditor = false)
		{
		}

		[Token(Token = "0x600067C")]
		[Address(RVA = "0xD89980", Offset = "0xD89980", VA = "0xD89980")]
		public static void e(string tag, string message, bool logInEditor = false)
		{
		}

		[Token(Token = "0x600067D")]
		[Address(RVA = "0xD899FC", Offset = "0xD899FC", VA = "0xD899FC")]
		public static EnterAndExit ee(string message, bool logInEditor = false)
		{
			return null;
		}

		[Token(Token = "0x600067E")]
		[Address(RVA = "0xD89B5C", Offset = "0xD89B5C", VA = "0xD89B5C")]
		public static EnterAndExit ee(string tag, string message, bool logInEditor = false)
		{
			return null;
		}

		[Token(Token = "0x600067F")]
		[Address(RVA = "0xD89BEC", Offset = "0xD89BEC", VA = "0xD89BEC")]
		public static EnterAndExit ee(string tag, string postfixEnter, string postfixExit, bool logInEditor = false)
		{
			return null;
		}

		[Token(Token = "0x6000680")]
		[Address(RVA = "0xD89C80", Offset = "0xD89C80", VA = "0xD89C80")]
		public static EnterAndExit ee(string tag, string message, string postfixEnter, string postfixExit, bool logInEditor = false)
		{
			return null;
		}

		[Token(Token = "0x6000681")]
		[Address(RVA = "0xD89D10", Offset = "0xD89D10", VA = "0xD89D10")]
		public Log()
		{
		}
	}
}
namespace WVR_Log
{
	[Token(Token = "0x2000076")]
	public class Log
	{
		[Token(Token = "0x200047C")]
		public class EnterAndExit : IDisposable
		{
			[Token(Token = "0x4001ABC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private string tag;

			[Token(Token = "0x4001ABD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private string message;

			[Token(Token = "0x4001ABE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private string enter;

			[Token(Token = "0x4001ABF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private string exit;

			[Token(Token = "0x4001AC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool logInEditor;

			[Token(Token = "0x6002189")]
			[Address(RVA = "0xEF1D60", Offset = "0xEF1D60", VA = "0xEF1D60")]
			public EnterAndExit(string tag, string message, string postfixEnter, string postfixExit, bool logInEditor = false)
			{
			}

			[Token(Token = "0x600218A")]
			[Address(RVA = "0xEF20F0", Offset = "0xEF20F0", VA = "0xEF20F0", Slot = "4")]
			public void Dispose()
			{
			}
		}

		[Token(Token = "0x200047D")]
		public class PeriodLog
		{
			[Token(Token = "0x2000639")]
			public delegate string StringProcessDelegate();

			[Token(Token = "0x4001AC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float interval;

			[Token(Token = "0x4001AC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float lastTime;

			[Token(Token = "0x4001AC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x937F20", Offset = "0x937F20")]
			private bool <Print>k__BackingField;

			[Token(Token = "0x170003D3")]
			public bool Print
			{
				[Token(Token = "0x600218B")]
				[Address(RVA = "0xEE3880", Offset = "0xEE3880", VA = "0xEE3880")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E754", Offset = "0x93E754")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x600218C")]
				[Address(RVA = "0xEF2174", Offset = "0xEF2174", VA = "0xEF2174")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93E764", Offset = "0x93E764")]
				private set
				{
				}
			}

			[Token(Token = "0x600218D")]
			[Address(RVA = "0xEF20B8", Offset = "0xEF20B8", VA = "0xEF20B8")]
			public PeriodLog()
			{
			}

			[Token(Token = "0x600218E")]
			[Address(RVA = "0xEF2180", Offset = "0xEF2180", VA = "0xEF2180")]
			public void check()
			{
			}

			[Token(Token = "0x600218F")]
			[Address(RVA = "0xEF21C4", Offset = "0xEF21C4", VA = "0xEF21C4")]
			public void d(string tag, string message, bool logInEditor = false)
			{
			}

			[Token(Token = "0x6002190")]
			[Address(RVA = "0xEF2258", Offset = "0xEF2258", VA = "0xEF2258")]
			[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x93E774", Offset = "0x93E774")]
			public void d(string tag, StringProcessDelegate strDelegate, bool logInEditor = false)
			{
			}
		}

		[Token(Token = "0x400055C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool EnableDebugLog;

		[Token(Token = "0x400055D")]
		private const int LOG_VERBOSE = 2;

		[Token(Token = "0x400055E")]
		private const int LOG_DEBUG = 3;

		[Token(Token = "0x400055F")]
		private const int LOG_INFO = 4;

		[Token(Token = "0x4000560")]
		private const int LOG_WARN = 5;

		[Token(Token = "0x4000561")]
		private const int LOG_ERROR = 6;

		[Token(Token = "0x4000562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int SBLength;

		[Token(Token = "0x4000563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly StringBuilder SB;

		[Token(Token = "0x4000564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static PeriodLog gpl;

		[Token(Token = "0x1700004B")]
		public static StringBuilder CSB
		{
			[Token(Token = "0x6000683")]
			[Address(RVA = "0xEF1AEC", Offset = "0xEF1AEC", VA = "0xEF1AEC")]
			get
			{
				return null;
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000684")]
		[Address(RVA = "0xEF1B68", Offset = "0xEF1B68", VA = "0xEF1B68")]
		internal static extern int __log_print(int prio, string tag, string fmt, IntPtr ptr);

		[Token(Token = "0x6000685")]
		[Address(RVA = "0xEF1C5C", Offset = "0xEF1C5C", VA = "0xEF1C5C")]
		public static void v(string tag, string message, bool logInEditor = false)
		{
		}

		[Token(Token = "0x6000686")]
		[Address(RVA = "0xEDED00", Offset = "0xEDED00", VA = "0xEDED00")]
		public static void d(string tag, string message, bool logInEditor = false)
		{
		}

		[Token(Token = "0x6000687")]
		[Address(RVA = "0xEECE24", Offset = "0xEECE24", VA = "0xEECE24")]
		public static void i(string tag, string message, bool logInEditor = false)
		{
		}

		[Token(Token = "0x6000688")]
		[Address(RVA = "0xEE08D0", Offset = "0xEE08D0", VA = "0xEE08D0")]
		public static void w(string tag, string message, bool logInEditor = false)
		{
		}

		[Token(Token = "0x6000689")]
		[Address(RVA = "0xEE06CC", Offset = "0xEE06CC", VA = "0xEE06CC")]
		public static void e(string tag, string message, bool logInEditor = false)
		{
		}

		[Token(Token = "0x600068A")]
		[Address(RVA = "0xEF1CD8", Offset = "0xEF1CD8", VA = "0xEF1CD8")]
		public static EnterAndExit ee(string message)
		{
			return null;
		}

		[Token(Token = "0x600068B")]
		[Address(RVA = "0xEF1E2C", Offset = "0xEF1E2C", VA = "0xEF1E2C")]
		public static EnterAndExit ee(string tag, string message)
		{
			return null;
		}

		[Token(Token = "0x600068C")]
		[Address(RVA = "0xEF1EB8", Offset = "0xEF1EB8", VA = "0xEF1EB8")]
		public static EnterAndExit ee(string tag, string postfixEnter, string postfixExit)
		{
			return null;
		}

		[Token(Token = "0x600068D")]
		[Address(RVA = "0xEF1F40", Offset = "0xEF1F40", VA = "0xEF1F40")]
		public static EnterAndExit ee(string tag, string message, string postfixEnter, string postfixExit)
		{
			return null;
		}

		[Token(Token = "0x600068E")]
		[Address(RVA = "0xEF1FCC", Offset = "0xEF1FCC", VA = "0xEF1FCC")]
		public Log()
		{
		}
	}
}
namespace wvr
{
	[Token(Token = "0x2000077")]
	public enum WVR_AppType
	{
		[Token(Token = "0x4000566")]
		WVR_AppType_VRContent = 1,
		[Token(Token = "0x4000567")]
		WVR_AppType_NonVRContent
	}
	[Token(Token = "0x2000078")]
	public enum WVR_InitError
	{
		[Token(Token = "0x4000569")]
		WVR_InitError_None,
		[Token(Token = "0x400056A")]
		WVR_InitError_Unknown,
		[Token(Token = "0x400056B")]
		WVR_InitError_NotInitialized
	}
	[Token(Token = "0x2000079")]
	public enum WVR_EventType
	{
		[Token(Token = "0x400056D")]
		WVR_EventType_Quit = 1000,
		[Token(Token = "0x400056E")]
		WVR_EventType_SystemInteractionModeChanged = 1001,
		[Token(Token = "0x400056F")]
		WVR_EventType_SystemGazeTriggerTypeChanged = 1002,
		[Token(Token = "0x4000570")]
		WVR_EventType_TrackingModeChanged = 1003,
		[Token(Token = "0x4000571")]
		WVR_EventType_RecommendedQuality_Lower = 1004,
		[Token(Token = "0x4000572")]
		WVR_EventType_RecommendedQuality_Higher = 1005,
		[Token(Token = "0x4000573")]
		WVR_EventType_HandGesture_Changed = 1006,
		[Token(Token = "0x4000574")]
		WVR_EventType_HandGesture_Abnormal = 1007,
		[Token(Token = "0x4000575")]
		WVR_EventType_HandTracking_Abnormal = 1008,
		[Token(Token = "0x4000576")]
		WVR_EventType_DeviceConnected = 2000,
		[Token(Token = "0x4000577")]
		WVR_EventType_DeviceDisconnected = 2001,
		[Token(Token = "0x4000578")]
		WVR_EventType_DeviceStatusUpdate = 2002,
		[Token(Token = "0x4000579")]
		WVR_EventType_DeviceSuspend = 2003,
		[Token(Token = "0x400057A")]
		WVR_EventType_DeviceResume = 2004,
		[Token(Token = "0x400057B")]
		WVR_EventType_IpdChanged = 2005,
		[Token(Token = "0x400057C")]
		WVR_EventType_DeviceRoleChanged = 2006,
		[Token(Token = "0x400057D")]
		WVR_EventType_BatteryStatusUpdate = 2007,
		[Token(Token = "0x400057E")]
		WVR_EventType_ChargeStatusUpdate = 2008,
		[Token(Token = "0x400057F")]
		WVR_EventType_DeviceErrorStatusUpdate = 2009,
		[Token(Token = "0x4000580")]
		WVR_EventType_BatteryTemperatureStatusUpdate = 2010,
		[Token(Token = "0x4000581")]
		WVR_EventType_RecenterSuccess = 2011,
		[Token(Token = "0x4000582")]
		WVR_EventType_RecenterFail = 2012,
		[Token(Token = "0x4000583")]
		WVR_EventType_RecenterSuccess3DoF = 2013,
		[Token(Token = "0x4000584")]
		WVR_EventType_RecenterFail3DoF = 2014,
		[Token(Token = "0x4000585")]
		WVR_EventType_PassThroughOverlayShownBySystem = 2100,
		[Token(Token = "0x4000586")]
		WVR_EventType_PassThroughOverlayHiddenBySystem = 2101,
		[Token(Token = "0x4000587")]
		WVR_EventType_ButtonPressed = 3000,
		[Token(Token = "0x4000588")]
		WVR_EventType_ButtonUnpressed = 3001,
		[Token(Token = "0x4000589")]
		WVR_EventType_TouchTapped = 3002,
		[Token(Token = "0x400058A")]
		WVR_EventType_TouchUntapped = 3003,
		[Token(Token = "0x400058B")]
		WVR_EventType_LeftToRightSwipe = 3004,
		[Token(Token = "0x400058C")]
		WVR_EventType_RightToLeftSwipe = 3005,
		[Token(Token = "0x400058D")]
		WVR_EventType_DownToUpSwipe = 3006,
		[Token(Token = "0x400058E")]
		WVR_EventType_UpToDownSwipe = 3007
	}
	[Token(Token = "0x200007A")]
	public enum WVR_PeripheralQuality
	{
		[Token(Token = "0x4000590")]
		Low,
		[Token(Token = "0x4000591")]
		Middle,
		[Token(Token = "0x4000592")]
		High
	}
	[Token(Token = "0x200007B")]
	public enum WVR_DeviceType
	{
		[Token(Token = "0x4000594")]
		WVR_DeviceType_Invalid,
		[Token(Token = "0x4000595")]
		WVR_DeviceType_HMD,
		[Token(Token = "0x4000596")]
		WVR_DeviceType_Controller_Right,
		[Token(Token = "0x4000597")]
		WVR_DeviceType_Controller_Left
	}
	[Token(Token = "0x200007C")]
	public enum WVR_RecenterType
	{
		[Token(Token = "0x4000599")]
		WVR_RecenterType_Disabled,
		[Token(Token = "0x400059A")]
		WVR_RecenterType_YawOnly,
		[Token(Token = "0x400059B")]
		WVR_RecenterType_YawAndPosition,
		[Token(Token = "0x400059C")]
		WVR_RecenterType_RotationAndPosition
	}
	[Token(Token = "0x200007D")]
	public enum WVR_InputType
	{
		[Token(Token = "0x400059E")]
		WVR_InputType_Button = 1,
		[Token(Token = "0x400059F")]
		WVR_InputType_Touch = 2,
		[Token(Token = "0x40005A0")]
		WVR_InputType_Analog = 4
	}
	[Token(Token = "0x200007E")]
	public enum WVR_BatteryStatus
	{
		[Token(Token = "0x40005A2")]
		WVR_BatteryStatus_Unknown,
		[Token(Token = "0x40005A3")]
		WVR_BatteryStatus_Normal,
		[Token(Token = "0x40005A4")]
		WVR_BatteryStatus_Low,
		[Token(Token = "0x40005A5")]
		WVR_BatteryStatus_UltraLow
	}
	[Token(Token = "0x200007F")]
	public enum WVR_ChargeStatus
	{
		[Token(Token = "0x40005A7")]
		WVR_ChargeStatus_Unknown,
		[Token(Token = "0x40005A8")]
		WVR_ChargeStatus_Discharging,
		[Token(Token = "0x40005A9")]
		WVR_ChargeStatus_Charging,
		[Token(Token = "0x40005AA")]
		WVR_ChargeStatus_Full
	}
	[Token(Token = "0x2000080")]
	public enum WVR_BatteryTemperatureStatus
	{
		[Token(Token = "0x40005AC")]
		WVR_BatteryTemperature_Unknown,
		[Token(Token = "0x40005AD")]
		WVR_BatteryTemperature_Normal,
		[Token(Token = "0x40005AE")]
		WVR_BatteryTemperature_Overheat,
		[Token(Token = "0x40005AF")]
		WVR_BatteryTemperature_UltraOverheat
	}
	[Token(Token = "0x2000081")]
	public enum WVR_DeviceErrorStatus
	{
		[Token(Token = "0x40005B1")]
		WVR_DeviceErrorStatus_None = 0,
		[Token(Token = "0x40005B2")]
		WVR_DeviceErrorStatus_BatteryOverheat = 1,
		[Token(Token = "0x40005B3")]
		WVR_DeviceErrorStatus_BatteryOverheatRestore = 2,
		[Token(Token = "0x40005B4")]
		WVR_DeviceErrorStatus_BatteryOvervoltage = 4,
		[Token(Token = "0x40005B5")]
		WVR_DeviceErrorStatus_BatteryOvervoltageRestore = 8,
		[Token(Token = "0x40005B6")]
		WVR_DeviceErrorStatus_DeviceConnectFail = 0x10,
		[Token(Token = "0x40005B7")]
		WVR_DeviceErrorStatus_DeviceConnectRestore = 0x20,
		[Token(Token = "0x40005B8")]
		WVR_DeviceErrorStatus_DeviceLostTracking = 0x40,
		[Token(Token = "0x40005B9")]
		WVR_DeviceErrorStatus_DeviceLostTrackingRestore = 0x80,
		[Token(Token = "0x40005BA")]
		WVR_DeviceErrorStatus_ChargeFail = 0x100,
		[Token(Token = "0x40005BB")]
		WVR_DeviceErrorStatus_ChargeRestore = 0x200
	}
	[Token(Token = "0x2000082")]
	public enum WVR_DeviceErrorState
	{
		[Token(Token = "0x40005BD")]
		WVR_DeviceErrorState_None,
		[Token(Token = "0x40005BE")]
		WVR_DeviceErrorState_BatteryOverheat,
		[Token(Token = "0x40005BF")]
		WVR_DeviceErrorState_BatteryOvervoltage,
		[Token(Token = "0x40005C0")]
		WVR_DeviceErrorState_DeviceConnectFail,
		[Token(Token = "0x40005C1")]
		WVR_DeviceErrorState_DeviceLostTracking,
		[Token(Token = "0x40005C2")]
		WVR_DeviceErrorState_ChargeFail
	}
	[Token(Token = "0x2000083")]
	public enum WVR_InputId
	{
		[Token(Token = "0x40005C4")]
		WVR_InputId_0 = 0,
		[Token(Token = "0x40005C5")]
		WVR_InputId_1 = 1,
		[Token(Token = "0x40005C6")]
		WVR_InputId_2 = 2,
		[Token(Token = "0x40005C7")]
		WVR_InputId_3 = 3,
		[Token(Token = "0x40005C8")]
		WVR_InputId_4 = 4,
		[Token(Token = "0x40005C9")]
		WVR_InputId_5 = 5,
		[Token(Token = "0x40005CA")]
		WVR_InputId_6 = 6,
		[Token(Token = "0x40005CB")]
		WVR_InputId_7 = 7,
		[Token(Token = "0x40005CC")]
		WVR_InputId_8 = 8,
		[Token(Token = "0x40005CD")]
		WVR_InputId_9 = 9,
		[Token(Token = "0x40005CE")]
		WVR_InputId_14 = 14,
		[Token(Token = "0x40005CF")]
		WVR_InputId_15 = 15,
		[Token(Token = "0x40005D0")]
		WVR_InputId_16 = 16,
		[Token(Token = "0x40005D1")]
		WVR_InputId_17 = 17,
		[Token(Token = "0x40005D2")]
		WVR_InputId_18 = 18,
		[Token(Token = "0x40005D3")]
		WVR_InputId_Alias1_System = 0,
		[Token(Token = "0x40005D4")]
		WVR_InputId_Alias1_Menu = 1,
		[Token(Token = "0x40005D5")]
		WVR_InputId_Alias1_Grip = 2,
		[Token(Token = "0x40005D6")]
		WVR_InputId_Alias1_DPad_Left = 3,
		[Token(Token = "0x40005D7")]
		WVR_InputId_Alias1_DPad_Up = 4,
		[Token(Token = "0x40005D8")]
		WVR_InputId_Alias1_DPad_Right = 5,
		[Token(Token = "0x40005D9")]
		WVR_InputId_Alias1_DPad_Down = 6,
		[Token(Token = "0x40005DA")]
		WVR_InputId_Alias1_Volume_Up = 7,
		[Token(Token = "0x40005DB")]
		WVR_InputId_Alias1_Volume_Down = 8,
		[Token(Token = "0x40005DC")]
		WVR_InputId_Alias1_Digital_Trigger = 9,
		[Token(Token = "0x40005DD")]
		WVR_InputId_Alias1_Back = 14,
		[Token(Token = "0x40005DE")]
		WVR_InputId_Alias1_Enter = 15,
		[Token(Token = "0x40005DF")]
		WVR_InputId_Alias1_Touchpad = 16,
		[Token(Token = "0x40005E0")]
		WVR_InputId_Alias1_Trigger = 17,
		[Token(Token = "0x40005E1")]
		WVR_InputId_Alias1_Thumbstick = 18,
		[Token(Token = "0x40005E2")]
		WVR_InputId_Max = 32
	}
	[Token(Token = "0x2000084")]
	public enum WVR_AnalogType
	{
		[Token(Token = "0x40005E4")]
		WVR_AnalogType_None,
		[Token(Token = "0x40005E5")]
		WVR_AnalogType_2D,
		[Token(Token = "0x40005E6")]
		WVR_AnalogType_1D
	}
	[Token(Token = "0x2000085")]
	public enum WVR_Intensity
	{
		[Token(Token = "0x40005E8")]
		WVR_Intensity_Weak = 1,
		[Token(Token = "0x40005E9")]
		WVR_Intensity_Light,
		[Token(Token = "0x40005EA")]
		WVR_Intensity_Normal,
		[Token(Token = "0x40005EB")]
		WVR_Intensity_Strong,
		[Token(Token = "0x40005EC")]
		WVR_Intensity_Severe
	}
	[Token(Token = "0x2000086")]
	public enum WVR_PoseOriginModel
	{
		[Token(Token = "0x40005EE")]
		WVR_PoseOriginModel_OriginOnHead,
		[Token(Token = "0x40005EF")]
		WVR_PoseOriginModel_OriginOnGround,
		[Token(Token = "0x40005F0")]
		WVR_PoseOriginModel_OriginOnTrackingObserver,
		[Token(Token = "0x40005F1")]
		WVR_PoseOriginModel_OriginOnHead_3DoF
	}
	[Token(Token = "0x2000087")]
	public enum WVR_ArenaVisible
	{
		[Token(Token = "0x40005F3")]
		WVR_ArenaVisible_Auto,
		[Token(Token = "0x40005F4")]
		WVR_ArenaVisible_ForceOn,
		[Token(Token = "0x40005F5")]
		WVR_ArenaVisible_ForceOff
	}
	[Token(Token = "0x2000088")]
	public enum WVR_GraphicsApiType
	{
		[Token(Token = "0x40005F7")]
		WVR_GraphicsApiType_OpenGL = 1
	}
	[Token(Token = "0x2000089")]
	public enum WVR_ScreenshotMode
	{
		[Token(Token = "0x40005F9")]
		WVR_ScreenshotMode_Default,
		[Token(Token = "0x40005FA")]
		WVR_ScreenshotMode_Raw,
		[Token(Token = "0x40005FB")]
		WVR_ScreenshotMode_Distorted
	}
	[Token(Token = "0x200008A")]
	public enum WVR_SubmitError
	{
		[Token(Token = "0x40005FD")]
		WVR_SubmitError_None = 0,
		[Token(Token = "0x40005FE")]
		WVR_SubmitError_InvalidTexture = 400,
		[Token(Token = "0x40005FF")]
		WVR_SubmitError_ThreadStop = 401,
		[Token(Token = "0x4000600")]
		WVR_SubmitError_BufferSubmitFailed = 402,
		[Token(Token = "0x4000601")]
		WVR_SubmitError_Max = 65535
	}
	[Token(Token = "0x200008B")]
	public enum WVR_SubmitExtend
	{
		[Token(Token = "0x4000603")]
		WVR_SubmitExtend_Default = 0,
		[Token(Token = "0x4000604")]
		WVR_SubmitExtend_DisableDistortion = 1,
		[Token(Token = "0x4000605")]
		WVR_SubmitExtend_PartialTexture = 0x10
	}
	[Token(Token = "0x200008C")]
	public enum WVR_Eye
	{
		[Token(Token = "0x4000607")]
		WVR_Eye_Left,
		[Token(Token = "0x4000608")]
		WVR_Eye_Right,
		[Token(Token = "0x4000609")]
		WVR_Eye_Both,
		[Token(Token = "0x400060A")]
		WVR_Eye_None
	}
	[Token(Token = "0x200008D")]
	public enum WVR_TextureTarget
	{
		[Token(Token = "0x400060C")]
		WVR_TextureTarget_2D,
		[Token(Token = "0x400060D")]
		WVR_TextureTarget_2D_ARRAY
	}
	[Token(Token = "0x200008E")]
	public enum WVR_TextureFormat
	{
		[Token(Token = "0x400060F")]
		WVR_TextureFormat_RGBA
	}
	[Token(Token = "0x200008F")]
	public enum WVR_TextureType
	{
		[Token(Token = "0x4000611")]
		WVR_TextureType_UnsignedByte
	}
	[Token(Token = "0x2000090")]
	public enum WVR_RenderError
	{
		[Token(Token = "0x4000613")]
		WVR_RenderError_None = 0,
		[Token(Token = "0x4000614")]
		WVR_RenderError_RuntimeInitFailed = 410,
		[Token(Token = "0x4000615")]
		WVR_RenderError_ContextSetupFailed = 411,
		[Token(Token = "0x4000616")]
		WVR_RenderError_DisplaySetupFailed = 412,
		[Token(Token = "0x4000617")]
		WVR_RenderError_LibNotSupported = 413,
		[Token(Token = "0x4000618")]
		WVR_RenderError_NullPtr = 414,
		[Token(Token = "0x4000619")]
		WVR_RenderError_Max = 65535
	}
	[Token(Token = "0x2000091")]
	public enum WVR_RenderConfig
	{
		[Token(Token = "0x400061B")]
		WVR_RenderConfig_Default = 0,
		[Token(Token = "0x400061C")]
		WVR_RenderConfig_Disable_SingleBuffer = 1,
		[Token(Token = "0x400061D")]
		WVR_RenderConfig_Disable_Reprojection = 2,
		[Token(Token = "0x400061E")]
		WVR_RenderConfig_sRGB = 4
	}
	[Token(Token = "0x2000092")]
	public enum WVR_CameraImageType
	{
		[Token(Token = "0x4000620")]
		WVR_CameraImageType_Invalid,
		[Token(Token = "0x4000621")]
		WVR_CameraImageType_SingleEye,
		[Token(Token = "0x4000622")]
		WVR_CameraImageType_DualEye
	}
	[Token(Token = "0x2000093")]
	public enum WVR_CameraImageFormat
	{
		[Token(Token = "0x4000624")]
		WVR_CameraImageFormat_Invalid,
		[Token(Token = "0x4000625")]
		WVR_CameraImageFormat_YUV_420,
		[Token(Token = "0x4000626")]
		WVR_CameraImageFormat_Grayscale
	}
	[Token(Token = "0x2000094")]
	public enum WVR_CameraPosition
	{
		[Token(Token = "0x4000628")]
		WVR_CameraPosition_Invalid,
		[Token(Token = "0x4000629")]
		WVR_CameraPosition_left,
		[Token(Token = "0x400062A")]
		WVR_CameraPosition_Right
	}
	[Token(Token = "0x2000095")]
	public enum WVR_OverlayError
	{
		[Token(Token = "0x400062C")]
		WVR_OverlayError_None = 0,
		[Token(Token = "0x400062D")]
		WVR_OverlayError_UnknownOverlay = 10,
		[Token(Token = "0x400062E")]
		WVR_OverlayError_OverlayUnavailable = 11,
		[Token(Token = "0x400062F")]
		WVR_OverlayError_InvalidParameter = 20
	}
	[Token(Token = "0x2000096")]
	public enum WVR_OverlayTransformType
	{
		[Token(Token = "0x4000631")]
		WVR_OverlayTransformType_None,
		[Token(Token = "0x4000632")]
		WVR_OverlayTransformType_Absolute,
		[Token(Token = "0x4000633")]
		WVR_OverlayTransformType_Fixed
	}
	[Token(Token = "0x2000097")]
	public enum WVR_NumDoF
	{
		[Token(Token = "0x4000635")]
		WVR_NumDoF_3DoF,
		[Token(Token = "0x4000636")]
		WVR_NumDoF_6DoF
	}
	[Token(Token = "0x2000098")]
	public enum WVR_ArenaShape
	{
		[Token(Token = "0x4000638")]
		WVR_ArenaShape_None,
		[Token(Token = "0x4000639")]
		WVR_ArenaShape_Rectangle,
		[Token(Token = "0x400063A")]
		WVR_ArenaShape_Round
	}
	[Token(Token = "0x2000099")]
	public enum WVR_InteractionMode
	{
		[Token(Token = "0x400063C")]
		WVR_InteractionMode_SystemDefault = 1,
		[Token(Token = "0x400063D")]
		WVR_InteractionMode_Gaze,
		[Token(Token = "0x400063E")]
		WVR_InteractionMode_Controller
	}
	[Token(Token = "0x200009A")]
	public enum WVR_GazeTriggerType
	{
		[Token(Token = "0x4000640")]
		WVR_GazeTriggerType_Timeout = 1,
		[Token(Token = "0x4000641")]
		WVR_GazeTriggerType_Button,
		[Token(Token = "0x4000642")]
		WVR_GazeTriggerType_TimeoutButton
	}
	[Token(Token = "0x200009B")]
	public enum WVR_PerfLevel
	{
		[Token(Token = "0x4000644")]
		WVR_PerfLevel_System,
		[Token(Token = "0x4000645")]
		WVR_PerfLevel_Minimum,
		[Token(Token = "0x4000646")]
		WVR_PerfLevel_Medium,
		[Token(Token = "0x4000647")]
		WVR_PerfLevel_Maximum,
		[Token(Token = "0x4000648")]
		WVR_PerfLevel_NumPerfLevels
	}
	[Token(Token = "0x200009C")]
	public enum WVR_RenderQuality
	{
		[Token(Token = "0x400064A")]
		WVR_RenderQuality_Low = 1,
		[Token(Token = "0x400064B")]
		WVR_RenderQuality_Medium,
		[Token(Token = "0x400064C")]
		WVR_RenderQuality_High,
		[Token(Token = "0x400064D")]
		WVR_RenderQuality_NumRenderQuality
	}
	[Token(Token = "0x200009D")]
	public enum WVR_SimulationType
	{
		[Token(Token = "0x400064F")]
		WVR_SimulationType_Auto,
		[Token(Token = "0x4000650")]
		WVR_SimulationType_ForceOn,
		[Token(Token = "0x4000651")]
		WVR_SimulationType_ForceOff
	}
	[Token(Token = "0x200009E")]
	public enum WVR_EyePoseStatus
	{
		[Token(Token = "0x4000653")]
		WVR_GazePointValid = 1,
		[Token(Token = "0x4000654")]
		WVR_GazeVectorValid = 2,
		[Token(Token = "0x4000655")]
		WVR_EyeOpennessValid = 4,
		[Token(Token = "0x4000656")]
		WVR_EyePupilDilationValid = 8,
		[Token(Token = "0x4000657")]
		WVR_EyePositionGuideValid = 0x10
	}
	[Token(Token = "0x200009F")]
	public struct WVR_RenderInitParams_t
	{
		[Token(Token = "0x4000658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_GraphicsApiType graphicsApi;

		[Token(Token = "0x4000659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong renderConfig;
	}
	[Token(Token = "0x20000A0")]
	public struct WVR_Matrix4f_t
	{
		[Token(Token = "0x400065A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m0;

		[Token(Token = "0x400065B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m1;

		[Token(Token = "0x400065C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m2;

		[Token(Token = "0x400065D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m3;

		[Token(Token = "0x400065E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m4;

		[Token(Token = "0x400065F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m5;

		[Token(Token = "0x4000660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m6;

		[Token(Token = "0x4000661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m7;

		[Token(Token = "0x4000662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m8;

		[Token(Token = "0x4000663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m9;

		[Token(Token = "0x4000664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m10;

		[Token(Token = "0x4000665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m11;

		[Token(Token = "0x4000666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m12;

		[Token(Token = "0x4000667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m13;

		[Token(Token = "0x4000668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m14;

		[Token(Token = "0x4000669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m15;
	}
	[Token(Token = "0x20000A1")]
	public struct WVR_Vector2f_t
	{
		[Token(Token = "0x400066A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x400066B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;
	}
	[Token(Token = "0x20000A2")]
	public struct WVR_Vector3f_t
	{
		[Token(Token = "0x400066C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x400066D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;

		[Token(Token = "0x400066E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float v2;
	}
	[Token(Token = "0x20000A3")]
	public struct WVR_CameraIntrinsic_t
	{
		[Token(Token = "0x400066F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_Vector2f_t focalLength;

		[Token(Token = "0x4000670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public WVR_Vector2f_t principalPoint;
	}
	[Token(Token = "0x20000A4")]
	public struct WVR_CameraInfo_t
	{
		[Token(Token = "0x4000671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_CameraImageType imgType;

		[Token(Token = "0x4000672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public WVR_CameraImageFormat imgFormat;

		[Token(Token = "0x4000673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint width;

		[Token(Token = "0x4000674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint height;

		[Token(Token = "0x4000675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint size;
	}
	[Token(Token = "0x20000A5")]
	public struct WVR_Quatf_t
	{
		[Token(Token = "0x4000676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float w;

		[Token(Token = "0x4000677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float x;

		[Token(Token = "0x4000678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float y;

		[Token(Token = "0x4000679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float z;
	}
	[StructLayout(2)]
	[Token(Token = "0x20000A6")]
	public struct WVR_PoseState_t
	{
		[Token(Token = "0x400067A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool IsValidPose;

		[Token(Token = "0x400067B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public WVR_Matrix4f_t PoseMatrix;

		[Token(Token = "0x400067C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public WVR_Vector3f_t Velocity;

		[Token(Token = "0x400067D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public WVR_Vector3f_t AngularVelocity;

		[Token(Token = "0x400067E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool Is6DoFPose;

		[Token(Token = "0x400067F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public long PoseTimestamp_ns;

		[Token(Token = "0x4000680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public WVR_Vector3f_t Acceleration;

		[Token(Token = "0x4000681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public WVR_Vector3f_t AngularAcceleration;

		[Token(Token = "0x4000682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float PredictedMilliSec;

		[Token(Token = "0x4000683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public WVR_PoseOriginModel OriginModel;

		[Token(Token = "0x4000684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public WVR_Pose_t RawPose;
	}
	[StructLayout(2)]
	[Token(Token = "0x20000A7")]
	public struct WVR_DevicePosePair_t
	{
		[Token(Token = "0x4000685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_DeviceType type;

		[Token(Token = "0x4000686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public WVR_PoseState_t pose;
	}
	[StructLayout(2)]
	[Token(Token = "0x20000A8")]
	public struct WVR_TextureLayout_t
	{
		[Token(Token = "0x4000687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_Vector2f_t leftLowUVs;

		[Token(Token = "0x4000688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public WVR_Vector2f_t rightUpUVs;
	}
	[StructLayout(2)]
	[Token(Token = "0x20000A9")]
	public struct WVR_TextureBound_t
	{
		[Token(Token = "0x4000689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float uMin;

		[Token(Token = "0x400068A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float vMin;

		[Token(Token = "0x400068B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float uMax;

		[Token(Token = "0x400068C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float vMax;
	}
	[Token(Token = "0x20000AA")]
	public struct WVR_TextureParams_t
	{
		[Token(Token = "0x400068D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr id;

		[Token(Token = "0x400068E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public WVR_TextureTarget target;

		[Token(Token = "0x400068F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public WVR_TextureLayout_t layout;
	}
	[Token(Token = "0x20000AB")]
	public struct WVR_RenderProps_t
	{
		[Token(Token = "0x4000690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float refreshRate;

		[Token(Token = "0x4000691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool hasExternal;

		[Token(Token = "0x4000692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float ipdMeter;
	}
	[Token(Token = "0x20000AC")]
	public struct WVR_CommonEvent_t
	{
		[Token(Token = "0x4000693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_EventType type;

		[Token(Token = "0x4000694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public long timestamp;
	}
	[Token(Token = "0x20000AD")]
	public struct WVR_DeviceEvent_t
	{
		[Token(Token = "0x4000695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_CommonEvent_t common;

		[Token(Token = "0x4000696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WVR_DeviceType type;
	}
	[Token(Token = "0x20000AE")]
	public struct WVR_InputEvent_t
	{
		[Token(Token = "0x4000697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_DeviceEvent_t device;

		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WVR_InputId inputId;
	}
	[StructLayout(2)]
	[Token(Token = "0x20000AF")]
	public struct WVR_Event_t
	{
		[Token(Token = "0x4000699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_CommonEvent_t common;

		[Token(Token = "0x400069A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_DeviceEvent_t device;

		[Token(Token = "0x400069B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_InputEvent_t input;
	}
	[Token(Token = "0x20000B0")]
	public struct WVR_Axis_t
	{
		[Token(Token = "0x400069C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x400069D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;
	}
	[StructLayout(2)]
	[Token(Token = "0x20000B1")]
	public struct WVR_AnalogState_t
	{
		[Token(Token = "0x400069E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_InputId id;

		[Token(Token = "0x400069F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public WVR_AnalogType type;

		[Token(Token = "0x40006A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public WVR_Axis_t axis;
	}
	[Token(Token = "0x20000B2")]
	public struct WVR_InputAttribute_t
	{
		[Token(Token = "0x40006A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_InputId id;

		[Token(Token = "0x40006A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint capability;

		[Token(Token = "0x40006A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public WVR_AnalogType axis_type;
	}
	[Token(Token = "0x20000B3")]
	public struct WVR_InputMappingPair_t
	{
		[Token(Token = "0x40006A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_InputAttribute_t destination;

		[Token(Token = "0x40006A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public WVR_InputAttribute_t source;
	}
	[StructLayout(2)]
	[Token(Token = "0x20000B4")]
	public struct WVR_Pose_t
	{
		[Token(Token = "0x40006A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_Vector3f_t position;

		[Token(Token = "0x40006A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public WVR_Quatf_t rotation;
	}
	[Token(Token = "0x20000B5")]
	public struct WVR_OverlayPosition_t
	{
		[Token(Token = "0x40006A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x40006A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x40006AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;
	}
	[Token(Token = "0x20000B6")]
	public struct WVR_OverlayBlendColor_t
	{
		[Token(Token = "0x40006AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float r;

		[Token(Token = "0x40006AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float g;

		[Token(Token = "0x40006AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float b;
	}
	[Token(Token = "0x20000B7")]
	public struct WVR_OverlayTexture_t
	{
		[Token(Token = "0x40006AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint textureId;

		[Token(Token = "0x40006AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint width;

		[Token(Token = "0x40006B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint height;
	}
	[Token(Token = "0x20000B8")]
	public struct WVR_ArenaRectangle_t
	{
		[Token(Token = "0x40006B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float width;

		[Token(Token = "0x40006B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float length;
	}
	[Token(Token = "0x20000B9")]
	public struct WVR_ArenaRound_t
	{
		[Token(Token = "0x40006B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float diameter;
	}
	[StructLayout(2)]
	[Token(Token = "0x20000BA")]
	public struct WVR_ArenaArea_t
	{
		[Token(Token = "0x40006B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_ArenaRectangle_t rectangle;

		[Token(Token = "0x40006B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_ArenaRound_t round;
	}
	[Token(Token = "0x20000BB")]
	public struct WVR_Arena_t
	{
		[Token(Token = "0x40006B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_ArenaShape shape;

		[Token(Token = "0x40006B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public WVR_ArenaArea_t area;
	}
	[Token(Token = "0x20000BC")]
	public delegate void WVR_OverlayInputEventCallback(int overlayId, WVR_EventType type, WVR_InputId inputId);
	[Token(Token = "0x20000BD")]
	public struct WVR_OverlayInputEvent_t
	{
		[Token(Token = "0x40006B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int overlayId;

		[Token(Token = "0x40006B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr callback;
	}
	[Token(Token = "0x20000BE")]
	public struct WVR_RenderFoveationParams
	{
		[Token(Token = "0x40006BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float focalX;

		[Token(Token = "0x40006BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float focalY;

		[Token(Token = "0x40006BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float fovealFov;

		[Token(Token = "0x40006BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public WVR_PeripheralQuality periQuality;
	}
	[Token(Token = "0x20000BF")]
	public struct FBXInfo_t
	{
		[Token(Token = "0x40006BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_Matrix4f_t matrix;

		[Token(Token = "0x40006BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public uint verticeCount;

		[Token(Token = "0x40006C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public uint normalCount;

		[Token(Token = "0x40006C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public uint uvCount;

		[Token(Token = "0x40006C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public uint indiceCount;

		[Token(Token = "0x40006C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public IntPtr meshName;
	}
	[Token(Token = "0x20000C0")]
	public struct MeshInfo_t
	{
		[Token(Token = "0x40006C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3[] _vectice;

		[Token(Token = "0x40006C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3[] _normal;

		[Token(Token = "0x40006C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector2[] _uv;

		[Token(Token = "0x40006C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] _indice;

		[Token(Token = "0x40006C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool _active;
	}
	[Token(Token = "0x20000C1")]
	public struct StencilMesh_t
	{
		[Token(Token = "0x40006C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint vertCount;

		[Token(Token = "0x40006CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr vertData;

		[Token(Token = "0x40006CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint triCount;

		[Token(Token = "0x40006CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntPtr indexData;
	}
	[Token(Token = "0x20000C2")]
	public struct WVR_RequestResult
	{
		[Token(Token = "0x40006CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string mPermission;

		[Token(Token = "0x40006CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool mGranted;
	}
	[Token(Token = "0x20000C3")]
	public struct WVR_EyeData_t
	{
		[Token(Token = "0x40006CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int leftEyeDataStatus;

		[Token(Token = "0x40006D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int rightEyeDataStatus;

		[Token(Token = "0x40006D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int combinedEyeDataStatus;

		[Token(Token = "0x40006D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public WVR_Vector3f_t leftEyeGazePoint;

		[Token(Token = "0x40006D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WVR_Vector3f_t rightEyeGazePoint;

		[Token(Token = "0x40006D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public WVR_Vector3f_t combinedEyeGazePoint;

		[Token(Token = "0x40006D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WVR_Vector3f_t leftEyeGazeVector;

		[Token(Token = "0x40006D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public WVR_Vector3f_t rightEyeGazeVector;

		[Token(Token = "0x40006D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public WVR_Vector3f_t combinedEyeGazeVector;

		[Token(Token = "0x40006D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float leftEyeOpenness;

		[Token(Token = "0x40006D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float rightEyeOpenness;

		[Token(Token = "0x40006DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float leftEyePupilDilation;

		[Token(Token = "0x40006DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float rightEyePupilDilation;

		[Token(Token = "0x40006DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public WVR_Vector3f_t leftEyePositionGuide;

		[Token(Token = "0x40006DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public WVR_Vector3f_t rightEyePositionGuide;

		[Token(Token = "0x40006DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public long timestamp;
	}
	[Token(Token = "0x20000C4")]
	public enum WVR_EyeDataStatus
	{
		[Token(Token = "0x40006E0")]
		WVR_GazePointValid = 1,
		[Token(Token = "0x40006E1")]
		WVR_GazeVectorValid = 2,
		[Token(Token = "0x40006E2")]
		WVR_EyeOpennessValid = 4,
		[Token(Token = "0x40006E3")]
		WVR_EyePupilDilationValid = 8,
		[Token(Token = "0x40006E4")]
		WVR_EyePositionGuideValid = 0x10
	}
	[Token(Token = "0x20000C5")]
	public enum WVR_QualityStrategy
	{
		[Token(Token = "0x40006E6")]
		WVR_QualityStrategy_Default = 1,
		[Token(Token = "0x40006E7")]
		WVR_QualityStrategy_SendQualityEvent = 2,
		[Token(Token = "0x40006E8")]
		WVR_QualityStrategy_AutoFoveation = 4,
		[Token(Token = "0x40006E9")]
		WVR_QualityStrategy_Reserved = 0x40000000
	}
	[Token(Token = "0x20000C6")]
	public enum WVR_Result
	{
		[Token(Token = "0x40006EB")]
		WVR_Success,
		[Token(Token = "0x40006EC")]
		WVR_Error_SystemInvalid,
		[Token(Token = "0x40006ED")]
		WVR_Error_InvalidArgument,
		[Token(Token = "0x40006EE")]
		WVR_Error_OutOfMemory,
		[Token(Token = "0x40006EF")]
		WVR_Error_FeatureNotSupport,
		[Token(Token = "0x40006F0")]
		WVR_Error_RuntimeVersionNotSupport
	}
	[Token(Token = "0x20000C7")]
	public enum WVR_HandGestureType
	{
		[Token(Token = "0x40006F2")]
		WVR_HandGestureType_Invalid,
		[Token(Token = "0x40006F3")]
		WVR_HandGestureType_Unknown,
		[Token(Token = "0x40006F4")]
		WVR_HandGestureType_Fist,
		[Token(Token = "0x40006F5")]
		WVR_HandGestureType_Five,
		[Token(Token = "0x40006F6")]
		WVR_HandGestureType_OK,
		[Token(Token = "0x40006F7")]
		WVR_HandGestureType_ThumbUp,
		[Token(Token = "0x40006F8")]
		WVR_HandGestureType_IndexUp,
		[Token(Token = "0x40006F9")]
		WVR_HandGestureType_Pinch
	}
	[Token(Token = "0x20000C8")]
	public struct WVR_HandGestureData_t
	{
		[Token(Token = "0x40006FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public long timestamp;

		[Token(Token = "0x40006FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public WVR_HandGestureType right;

		[Token(Token = "0x40006FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public WVR_HandGestureType left;
	}
	[Token(Token = "0x20000C9")]
	public struct WVR_SingleFinger_t
	{
		[Token(Token = "0x40006FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_Vector3f_t joint1;

		[Token(Token = "0x40006FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public WVR_Vector3f_t joint2;

		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WVR_Vector3f_t joint3;

		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public WVR_Vector3f_t tip;
	}
	[Token(Token = "0x20000CA")]
	public struct WVR_Fingers_t
	{
		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_SingleFinger_t thumb;

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WVR_SingleFinger_t index;

		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public WVR_SingleFinger_t middle;

		[Token(Token = "0x4000704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public WVR_SingleFinger_t ring;

		[Token(Token = "0x4000705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public WVR_SingleFinger_t pinky;
	}
	[Token(Token = "0x20000CB")]
	public struct WVR_HandTrackingData_t
	{
		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public WVR_PoseState_t right;

		[Token(Token = "0x4000707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public WVR_Fingers_t rightFinger;

		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public WVR_PoseState_t left;

		[Token(Token = "0x4000709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public WVR_Fingers_t leftFinger;
	}
	[Token(Token = "0x20000CC")]
	public enum WVR_SupportedFeature
	{
		[Token(Token = "0x400070B")]
		WVR_SupportedFeature_PassthroughImage = 1,
		[Token(Token = "0x400070C")]
		WVR_SupportedFeature_PassthroughOverlay = 2,
		[Token(Token = "0x400070D")]
		WVR_SupportedFeature_HandTracking = 0x10,
		[Token(Token = "0x400070E")]
		WVR_SupportedFeature_HandGesture = 0x20
	}
	[Token(Token = "0x20000CD")]
	public delegate void WVR_RequestCompleteCallback(List<WVR_RequestResult> results);
	[Token(Token = "0x20000CE")]
	public delegate void WVR_RequestUsbCompleteCallback(bool result);
	[Token(Token = "0x20000CF")]
	public delegate void WVR_OnOEMConfigChanged();
	[Token(Token = "0x20000D0")]
	public class Interop
	{
		[Token(Token = "0x200047E")]
		public class WVR_Base
		{
			[Token(Token = "0x4001AC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static WVR_Base instance;

			[Token(Token = "0x170003D4")]
			public static WVR_Base Instance
			{
				[Token(Token = "0x6002191")]
				[Address(RVA = "0x1D826D8", Offset = "0x1D826D8", VA = "0x1D826D8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002192")]
			[Address(RVA = "0x1D827A8", Offset = "0x1D827A8", VA = "0x1D827A8", Slot = "4")]
			public virtual bool PollEventQueue(ref WVR_Event_t e)
			{
				return default(bool);
			}

			[Token(Token = "0x6002193")]
			[Address(RVA = "0x1D827B0", Offset = "0x1D827B0", VA = "0x1D827B0", Slot = "5")]
			public virtual int GetInputDeviceCapability(WVR_DeviceType type, WVR_InputType inputType)
			{
				return default(int);
			}

			[Token(Token = "0x6002194")]
			[Address(RVA = "0x1D827B8", Offset = "0x1D827B8", VA = "0x1D827B8", Slot = "6")]
			public virtual WVR_AnalogType GetInputDeviceAnalogType(WVR_DeviceType type, WVR_InputId id)
			{
				return default(WVR_AnalogType);
			}

			[Token(Token = "0x6002195")]
			[Address(RVA = "0x1D827C0", Offset = "0x1D827C0", VA = "0x1D827C0", Slot = "7")]
			public virtual bool GetInputDeviceState(WVR_DeviceType type, uint inputMask, ref uint buttons, ref uint touches, [In][Out] WVR_AnalogState_t[] analogArray, uint analogArrayCount)
			{
				return default(bool);
			}

			[Token(Token = "0x6002196")]
			[Address(RVA = "0x1D827C8", Offset = "0x1D827C8", VA = "0x1D827C8", Slot = "8")]
			public virtual int GetInputTypeCount(WVR_DeviceType type, WVR_InputType inputType)
			{
				return default(int);
			}

			[Token(Token = "0x6002197")]
			[Address(RVA = "0x1D827D0", Offset = "0x1D827D0", VA = "0x1D827D0", Slot = "9")]
			public virtual bool GetInputButtonState(WVR_DeviceType type, WVR_InputId id)
			{
				return default(bool);
			}

			[Token(Token = "0x6002198")]
			[Address(RVA = "0x1D827D8", Offset = "0x1D827D8", VA = "0x1D827D8", Slot = "10")]
			public virtual bool GetInputTouchState(WVR_DeviceType type, WVR_InputId id)
			{
				return default(bool);
			}

			[Token(Token = "0x6002199")]
			[Address(RVA = "0x1D827E0", Offset = "0x1D827E0", VA = "0x1D827E0", Slot = "11")]
			public virtual WVR_Axis_t GetInputAnalogAxis(WVR_DeviceType type, WVR_InputId id)
			{
				return default(WVR_Axis_t);
			}

			[Token(Token = "0x600219A")]
			[Address(RVA = "0x1D827EC", Offset = "0x1D827EC", VA = "0x1D827EC", Slot = "12")]
			public virtual void SetTextureBounds([In][Out] WVR_TextureBound_t[] textureBounds)
			{
			}

			[Token(Token = "0x600219B")]
			[Address(RVA = "0x1D827F0", Offset = "0x1D827F0", VA = "0x1D827F0", Slot = "13")]
			public virtual void GetPoseState(WVR_DeviceType type, WVR_PoseOriginModel originModel, uint predictedMilliSec, ref WVR_PoseState_t poseState)
			{
			}

			[Token(Token = "0x600219C")]
			[Address(RVA = "0x1D827F4", Offset = "0x1D827F4", VA = "0x1D827F4", Slot = "14")]
			public virtual void GetLastPoseIndex(WVR_PoseOriginModel originModel, [In][Out] WVR_DevicePosePair_t[] poseArray, uint pairArrayCount, ref uint frameIndex)
			{
			}

			[Token(Token = "0x600219D")]
			[Address(RVA = "0x1D827F8", Offset = "0x1D827F8", VA = "0x1D827F8", Slot = "15")]
			public virtual void WaitGetPoseIndex(WVR_PoseOriginModel originModel, [In][Out] WVR_DevicePosePair_t[] poseArray, uint pairArrayCount, ref uint frameIndex)
			{
			}

			[Token(Token = "0x600219E")]
			[Address(RVA = "0x1D827FC", Offset = "0x1D827FC", VA = "0x1D827FC", Slot = "16")]
			public virtual IntPtr StoreRenderTextures(IntPtr[] texturesIDs, int size, bool eEye, WVR_TextureTarget target)
			{
				return default(IntPtr);
			}

			[Token(Token = "0x600219F")]
			[Address(RVA = "0x1D8283C", Offset = "0x1D8283C", VA = "0x1D8283C", Slot = "17")]
			public virtual void GetSyncPose(WVR_PoseOriginModel originModel, [In][Out] WVR_DevicePosePair_t[] poseArray, uint pairArrayCount)
			{
			}

			[Token(Token = "0x60021A0")]
			[Address(RVA = "0x1D82840", Offset = "0x1D82840", VA = "0x1D82840", Slot = "18")]
			public virtual bool IsDeviceConnected(WVR_DeviceType type)
			{
				return default(bool);
			}

			[Token(Token = "0x60021A1")]
			[Address(RVA = "0x1D82848", Offset = "0x1D82848", VA = "0x1D82848", Slot = "19")]
			public virtual void TriggerVibration(WVR_DeviceType type, WVR_InputId id, uint durationMicroSec, uint frequency, WVR_Intensity intensity)
			{
			}

			[Token(Token = "0x60021A2")]
			[Address(RVA = "0x1D8284C", Offset = "0x1D8284C", VA = "0x1D8284C", Slot = "20")]
			public virtual void InAppRecenter(WVR_RecenterType recenterType)
			{
			}

			[Token(Token = "0x60021A3")]
			[Address(RVA = "0x1D82850", Offset = "0x1D82850", VA = "0x1D82850", Slot = "21")]
			public virtual void SetNeckModelEnabled(bool enabled)
			{
			}

			[Token(Token = "0x60021A4")]
			[Address(RVA = "0x1D82854", Offset = "0x1D82854", VA = "0x1D82854", Slot = "22")]
			public virtual void SetNeckModel(WVR_SimulationType simulationType)
			{
			}

			[Token(Token = "0x60021A5")]
			[Address(RVA = "0x1D82858", Offset = "0x1D82858", VA = "0x1D82858", Slot = "23")]
			public virtual void SetArmModel(WVR_SimulationType simulationType)
			{
			}

			[Token(Token = "0x60021A6")]
			[Address(RVA = "0x1D8285C", Offset = "0x1D8285C", VA = "0x1D8285C", Slot = "24")]
			public virtual void SetArmSticky(bool stickyArm)
			{
			}

			[Token(Token = "0x60021A7")]
			[Address(RVA = "0x1D82860", Offset = "0x1D82860", VA = "0x1D82860", Slot = "25")]
			public virtual bool SetInputRequest(WVR_DeviceType type, WVR_InputAttribute_t[] request, uint size)
			{
				return default(bool);
			}

			[Token(Token = "0x60021A8")]
			[Address(RVA = "0x1D82868", Offset = "0x1D82868", VA = "0x1D82868", Slot = "26")]
			public virtual bool GetInputMappingPair(WVR_DeviceType type, WVR_InputId destination, ref WVR_InputMappingPair_t pair)
			{
				return default(bool);
			}

			[Token(Token = "0x60021A9")]
			[Address(RVA = "0x1D82870", Offset = "0x1D82870", VA = "0x1D82870", Slot = "27")]
			public virtual uint GetInputMappingTable(WVR_DeviceType type, [In][Out] WVR_InputMappingPair_t[] table, uint size)
			{
				return default(uint);
			}

			[Token(Token = "0x60021AA")]
			[Address(RVA = "0x1D82878", Offset = "0x1D82878", VA = "0x1D82878", Slot = "28")]
			public virtual WVR_Arena_t GetArena()
			{
				return default(WVR_Arena_t);
			}

			[Token(Token = "0x60021AB")]
			[Address(RVA = "0x1D82884", Offset = "0x1D82884", VA = "0x1D82884", Slot = "29")]
			public virtual bool SetArena(ref WVR_Arena_t arena)
			{
				return default(bool);
			}

			[Token(Token = "0x60021AC")]
			[Address(RVA = "0x1D8288C", Offset = "0x1D8288C", VA = "0x1D8288C", Slot = "30")]
			public virtual WVR_ArenaVisible GetArenaVisible()
			{
				return default(WVR_ArenaVisible);
			}

			[Token(Token = "0x60021AD")]
			[Address(RVA = "0x1D82894", Offset = "0x1D82894", VA = "0x1D82894", Slot = "31")]
			public virtual void SetArenaVisible(WVR_ArenaVisible config)
			{
			}

			[Token(Token = "0x60021AE")]
			[Address(RVA = "0x1D82898", Offset = "0x1D82898", VA = "0x1D82898", Slot = "32")]
			public virtual bool IsOverArenaRange()
			{
				return default(bool);
			}

			[Token(Token = "0x60021AF")]
			[Address(RVA = "0x1D828A0", Offset = "0x1D828A0", VA = "0x1D828A0", Slot = "33")]
			public virtual float GetDeviceBatteryPercentage(WVR_DeviceType type)
			{
				return default(float);
			}

			[Token(Token = "0x60021B0")]
			[Address(RVA = "0x1D828A8", Offset = "0x1D828A8", VA = "0x1D828A8", Slot = "34")]
			public virtual WVR_BatteryStatus GetBatteryStatus(WVR_DeviceType type)
			{
				return default(WVR_BatteryStatus);
			}

			[Token(Token = "0x60021B1")]
			[Address(RVA = "0x1D828B0", Offset = "0x1D828B0", VA = "0x1D828B0", Slot = "35")]
			public virtual WVR_ChargeStatus GetChargeStatus(WVR_DeviceType type)
			{
				return default(WVR_ChargeStatus);
			}

			[Token(Token = "0x60021B2")]
			[Address(RVA = "0x1D828B8", Offset = "0x1D828B8", VA = "0x1D828B8", Slot = "36")]
			public virtual WVR_BatteryTemperatureStatus GetBatteryTemperatureStatus(WVR_DeviceType type)
			{
				return default(WVR_BatteryTemperatureStatus);
			}

			[Token(Token = "0x60021B3")]
			[Address(RVA = "0x1D828C0", Offset = "0x1D828C0", VA = "0x1D828C0", Slot = "37")]
			public virtual float GetBatteryTemperature(WVR_DeviceType type)
			{
				return default(float);
			}

			[Token(Token = "0x60021B4")]
			[Address(RVA = "0x1D828C8", Offset = "0x1D828C8", VA = "0x1D828C8", Slot = "38")]
			public virtual WVR_Result StartHandGesture()
			{
				return default(WVR_Result);
			}

			[Token(Token = "0x60021B5")]
			[Address(RVA = "0x1D828D0", Offset = "0x1D828D0", VA = "0x1D828D0", Slot = "39")]
			public virtual void StopHandGesture()
			{
			}

			[Token(Token = "0x60021B6")]
			[Address(RVA = "0x1D828D4", Offset = "0x1D828D4", VA = "0x1D828D4", Slot = "40")]
			public virtual WVR_Result GetHandGestureData(ref WVR_HandGestureData_t data)
			{
				return default(WVR_Result);
			}

			[Token(Token = "0x60021B7")]
			[Address(RVA = "0x1D828E0", Offset = "0x1D828E0", VA = "0x1D828E0", Slot = "41")]
			public virtual WVR_Result StartHandTracking()
			{
				return default(WVR_Result);
			}

			[Token(Token = "0x60021B8")]
			[Address(RVA = "0x1D828E8", Offset = "0x1D828E8", VA = "0x1D828E8", Slot = "42")]
			public virtual void StopHandTracking()
			{
			}

			[Token(Token = "0x60021B9")]
			[Address(RVA = "0x1D828EC", Offset = "0x1D828EC", VA = "0x1D828EC", Slot = "43")]
			public virtual WVR_Result GetHandTrackingData(ref WVR_HandTrackingData_t data, WVR_PoseOriginModel originModel, uint predictedMilliSec)
			{
				return default(WVR_Result);
			}

			[Token(Token = "0x60021BA")]
			[Address(RVA = "0x1D828F4", Offset = "0x1D828F4", VA = "0x1D828F4", Slot = "44")]
			public virtual ulong GetSupportedFeatures()
			{
				return default(ulong);
			}

			[Token(Token = "0x60021BB")]
			[Address(RVA = "0x1D828FC", Offset = "0x1D828FC", VA = "0x1D828FC", Slot = "45")]
			public virtual WVR_InitError Init(WVR_AppType eType)
			{
				return default(WVR_InitError);
			}

			[Token(Token = "0x60021BC")]
			[Address(RVA = "0x1D82904", Offset = "0x1D82904", VA = "0x1D82904", Slot = "46")]
			public virtual void PostInit()
			{
			}

			[Token(Token = "0x60021BD")]
			[Address(RVA = "0x1D82908", Offset = "0x1D82908", VA = "0x1D82908", Slot = "47")]
			public virtual void Quit()
			{
			}

			[Token(Token = "0x60021BE")]
			[Address(RVA = "0x1D8290C", Offset = "0x1D8290C", VA = "0x1D8290C", Slot = "48")]
			public virtual IntPtr GetInitErrorString(WVR_InitError error)
			{
				return default(IntPtr);
			}

			[Token(Token = "0x60021BF")]
			[Address(RVA = "0x1D82914", Offset = "0x1D82914", VA = "0x1D82914", Slot = "49")]
			public virtual uint GetWaveRuntimeVersion()
			{
				return default(uint);
			}

			[Token(Token = "0x60021C0")]
			[Address(RVA = "0x1D8291C", Offset = "0x1D8291C", VA = "0x1D8291C", Slot = "50")]
			public virtual uint GetWaveSDKVersion()
			{
				return default(uint);
			}

			[Token(Token = "0x60021C1")]
			[Address(RVA = "0x1D82924", Offset = "0x1D82924", VA = "0x1D82924", Slot = "51")]
			public virtual bool IsInputFocusCapturedBySystem()
			{
				return default(bool);
			}

			[Token(Token = "0x60021C2")]
			[Address(RVA = "0x1D8292C", Offset = "0x1D8292C", VA = "0x1D8292C", Slot = "52")]
			internal virtual WVR_RenderError RenderInit(ref WVR_RenderInitParams_t param)
			{
				return default(WVR_RenderError);
			}

			[Token(Token = "0x60021C3")]
			[Address(RVA = "0x1D82934", Offset = "0x1D82934", VA = "0x1D82934", Slot = "53")]
			internal virtual bool SetPerformanceLevels(WVR_PerfLevel cpuLevel, WVR_PerfLevel gpuLevel)
			{
				return default(bool);
			}

			[Token(Token = "0x60021C4")]
			[Address(RVA = "0x1D8293C", Offset = "0x1D8293C", VA = "0x1D8293C", Slot = "54")]
			internal virtual bool EnableAdaptiveQuality(bool enable, uint flags)
			{
				return default(bool);
			}

			[Token(Token = "0x60021C5")]
			[Address(RVA = "0x1D82944", Offset = "0x1D82944", VA = "0x1D82944", Slot = "55")]
			internal virtual bool IsAdaptiveQualityEnabled()
			{
				return default(bool);
			}

			[Token(Token = "0x60021C6")]
			[Address(RVA = "0x1D8294C", Offset = "0x1D8294C", VA = "0x1D8294C", Slot = "56")]
			public virtual bool StartCamera(ref WVR_CameraInfo_t info)
			{
				return default(bool);
			}

			[Token(Token = "0x60021C7")]
			[Address(RVA = "0x1D82954", Offset = "0x1D82954", VA = "0x1D82954", Slot = "57")]
			public virtual void StopCamera()
			{
			}

			[Token(Token = "0x60021C8")]
			[Address(RVA = "0x1D82958", Offset = "0x1D82958", VA = "0x1D82958", Slot = "58")]
			public virtual bool UpdateTexture(IntPtr textureid)
			{
				return default(bool);
			}

			[Token(Token = "0x60021C9")]
			[Address(RVA = "0x1D82960", Offset = "0x1D82960", VA = "0x1D82960", Slot = "59")]
			public virtual bool GetCameraIntrinsic(WVR_CameraPosition position, ref WVR_CameraIntrinsic_t intrinsic)
			{
				return default(bool);
			}

			[Token(Token = "0x60021CA")]
			[Address(RVA = "0x1D82968", Offset = "0x1D82968", VA = "0x1D82968", Slot = "60")]
			public virtual bool GetCameraFrameBuffer(IntPtr pFramebuffer, uint frameBufferSize)
			{
				return default(bool);
			}

			[Token(Token = "0x60021CB")]
			[Address(RVA = "0x1D82970", Offset = "0x1D82970", VA = "0x1D82970", Slot = "61")]
			public virtual bool GetFrameBufferWithPoseState(IntPtr frameBuffer, uint frameBufferSize, WVR_PoseOriginModel origin, uint predictInMs, ref WVR_PoseState_t poseState)
			{
				return default(bool);
			}

			[Token(Token = "0x60021CC")]
			[Address(RVA = "0x1D82978", Offset = "0x1D82978", VA = "0x1D82978", Slot = "62")]
			public virtual bool DrawTextureWithBuffer(IntPtr textureId, WVR_CameraImageFormat imgFormat, IntPtr frameBuffer, uint size, uint width, uint height)
			{
				return default(bool);
			}

			[Token(Token = "0x60021CD")]
			[Address(RVA = "0x1D82980", Offset = "0x1D82980", VA = "0x1D82980", Slot = "63")]
			public virtual void ReleaseCameraTexture()
			{
			}

			[Token(Token = "0x60021CE")]
			[Address(RVA = "0x1D82984", Offset = "0x1D82984", VA = "0x1D82984", Slot = "64")]
			public virtual bool IsDeviceSuspend(WVR_DeviceType type)
			{
				return default(bool);
			}

			[Token(Token = "0x60021CF")]
			[Address(RVA = "0x1D8298C", Offset = "0x1D8298C", VA = "0x1D8298C", Slot = "65")]
			public virtual void ConvertMatrixQuaternion(ref WVR_Matrix4f_t mat, ref WVR_Quatf_t quat, bool m2q)
			{
			}

			[Token(Token = "0x60021D0")]
			[Address(RVA = "0x1D82990", Offset = "0x1D82990", VA = "0x1D82990", Slot = "66")]
			public virtual WVR_NumDoF GetDegreeOfFreedom(WVR_DeviceType type)
			{
				return default(WVR_NumDoF);
			}

			[Token(Token = "0x60021D1")]
			[Address(RVA = "0x1D82998", Offset = "0x1D82998", VA = "0x1D82998", Slot = "67")]
			public virtual void SetParameters(WVR_DeviceType type, IntPtr pchValue)
			{
			}

			[Token(Token = "0x60021D2")]
			[Address(RVA = "0x1D8299C", Offset = "0x1D8299C", VA = "0x1D8299C", Slot = "68")]
			public virtual uint GetParameters(WVR_DeviceType type, IntPtr pchValue, IntPtr retValue, uint unBufferSize)
			{
				return default(uint);
			}

			[Token(Token = "0x60021D3")]
			[Address(RVA = "0x1D829A4", Offset = "0x1D829A4", VA = "0x1D829A4", Slot = "69")]
			public virtual WVR_DeviceType GetDefaultControllerRole()
			{
				return default(WVR_DeviceType);
			}

			[Token(Token = "0x60021D4")]
			[Address(RVA = "0x1D829AC", Offset = "0x1D829AC", VA = "0x1D829AC", Slot = "70")]
			public virtual bool SetInteractionMode(WVR_InteractionMode mode)
			{
				return default(bool);
			}

			[Token(Token = "0x60021D5")]
			[Address(RVA = "0x1D829B4", Offset = "0x1D829B4", VA = "0x1D829B4", Slot = "71")]
			public virtual WVR_InteractionMode GetInteractionMode()
			{
				return default(WVR_InteractionMode);
			}

			[Token(Token = "0x60021D6")]
			[Address(RVA = "0x1D829BC", Offset = "0x1D829BC", VA = "0x1D829BC", Slot = "72")]
			public virtual bool SetGazeTriggerType(WVR_GazeTriggerType type)
			{
				return default(bool);
			}

			[Token(Token = "0x60021D7")]
			[Address(RVA = "0x1D829C4", Offset = "0x1D829C4", VA = "0x1D829C4", Slot = "73")]
			public virtual WVR_GazeTriggerType GetGazeTriggerType()
			{
				return default(WVR_GazeTriggerType);
			}

			[Token(Token = "0x60021D8")]
			[Address(RVA = "0x1D829CC", Offset = "0x1D829CC", VA = "0x1D829CC", Slot = "74")]
			public virtual bool GetDeviceErrorState(WVR_DeviceType dev_type, WVR_DeviceErrorState error_state)
			{
				return default(bool);
			}

			[Token(Token = "0x60021D9")]
			[Address(RVA = "0x1D829D4", Offset = "0x1D829D4", VA = "0x1D829D4", Slot = "75")]
			public virtual void GetRenderTargetSize(ref uint width, ref uint height)
			{
			}

			[Token(Token = "0x60021DA")]
			[Address(RVA = "0x1D829D8", Offset = "0x1D829D8", VA = "0x1D829D8", Slot = "76")]
			public virtual WVR_Matrix4f_t GetProjection(WVR_Eye eye, float near, float far)
			{
				return default(WVR_Matrix4f_t);
			}

			[Token(Token = "0x60021DB")]
			[Address(RVA = "0x1D829E8", Offset = "0x1D829E8", VA = "0x1D829E8", Slot = "77")]
			public virtual void GetClippingPlaneBoundary(WVR_Eye eye, ref float left, ref float right, ref float top, ref float bottom)
			{
			}

			[Token(Token = "0x60021DC")]
			[Address(RVA = "0x1D829EC", Offset = "0x1D829EC", VA = "0x1D829EC", Slot = "78")]
			public virtual void SetOverfillRatio(float ratioX, float ratioY)
			{
			}

			[Token(Token = "0x60021DD")]
			[Address(RVA = "0x1D829F0", Offset = "0x1D829F0", VA = "0x1D829F0", Slot = "79")]
			public virtual WVR_Matrix4f_t GetTransformFromEyeToHead(WVR_Eye eye, WVR_NumDoF dof)
			{
				return default(WVR_Matrix4f_t);
			}

			[Token(Token = "0x60021DE")]
			[Address(RVA = "0x1D82A00", Offset = "0x1D82A00", VA = "0x1D82A00", Slot = "80")]
			public virtual WVR_SubmitError SubmitFrame(WVR_Eye eye, [In][Out] WVR_TextureParams_t[] param, [In][Out] WVR_PoseState_t[] pose, WVR_SubmitExtend extendMethod)
			{
				return default(WVR_SubmitError);
			}

			[Token(Token = "0x60021DF")]
			[Address(RVA = "0x1D82A08", Offset = "0x1D82A08", VA = "0x1D82A08", Slot = "81")]
			public virtual void SetSubmitParams(WVR_Eye eye, [In][Out] WVR_TextureParams_t[] param, [In][Out] WVR_PoseState_t[] pose, WVR_SubmitExtend extendMethod)
			{
			}

			[Token(Token = "0x60021E0")]
			[Address(RVA = "0x1D82A0C", Offset = "0x1D82A0C", VA = "0x1D82A0C", Slot = "82")]
			public virtual void PreRenderEye(WVR_Eye eye, [Out] WVR_TextureParams_t[] param, [Out] WVR_RenderFoveationParams[] foveationParams)
			{
			}

			[Token(Token = "0x60021E1")]
			[Address(RVA = "0x1D82A10", Offset = "0x1D82A10", VA = "0x1D82A10", Slot = "83")]
			public virtual bool RequestScreenshot(uint width, uint height, WVR_ScreenshotMode mode, IntPtr filename)
			{
				return default(bool);
			}

			[Token(Token = "0x60021E2")]
			[Address(RVA = "0x1D82A18", Offset = "0x1D82A18", VA = "0x1D82A18", Slot = "84")]
			public virtual void RenderMask(WVR_Eye eye)
			{
			}

			[Token(Token = "0x60021E3")]
			[Address(RVA = "0x1D82A1C", Offset = "0x1D82A1C", VA = "0x1D82A1C", Slot = "85")]
			public virtual bool GetRenderProps(ref WVR_RenderProps_t props)
			{
				return default(bool);
			}

			[Token(Token = "0x60021E4")]
			[Address(RVA = "0x1D82A24", Offset = "0x1D82A24", VA = "0x1D82A24", Slot = "86")]
			public virtual IntPtr ObtainTextureQueue(WVR_TextureTarget target, WVR_TextureFormat format, WVR_TextureType type, uint width, uint height, int level)
			{
				return default(IntPtr);
			}

			[Token(Token = "0x60021E5")]
			[Address(RVA = "0x1D82A2C", Offset = "0x1D82A2C", VA = "0x1D82A2C", Slot = "87")]
			public virtual uint GetTextureQueueLength(IntPtr handle)
			{
				return default(uint);
			}

			[Token(Token = "0x60021E6")]
			[Address(RVA = "0x1D82A34", Offset = "0x1D82A34", VA = "0x1D82A34", Slot = "88")]
			public virtual WVR_TextureParams_t GetTexture(IntPtr handle, int index)
			{
				return default(WVR_TextureParams_t);
			}

			[Token(Token = "0x60021E7")]
			[Address(RVA = "0x1D82A40", Offset = "0x1D82A40", VA = "0x1D82A40", Slot = "89")]
			public virtual int GetAvailableTextureIndex(IntPtr handle)
			{
				return default(int);
			}

			[Token(Token = "0x60021E8")]
			[Address(RVA = "0x1D82A48", Offset = "0x1D82A48", VA = "0x1D82A48", Slot = "90")]
			public virtual void ReleaseTextureQueue(IntPtr handle)
			{
			}

			[Token(Token = "0x60021E9")]
			[Address(RVA = "0x1D82A4C", Offset = "0x1D82A4C", VA = "0x1D82A4C", Slot = "91")]
			public virtual bool IsRenderFoveationSupport()
			{
				return default(bool);
			}

			[Token(Token = "0x60021EA")]
			[Address(RVA = "0x1D82A54", Offset = "0x1D82A54", VA = "0x1D82A54", Slot = "92")]
			public virtual void RenderFoveation(bool enable)
			{
			}

			[Token(Token = "0x60021EB")]
			[Address(RVA = "0x1D82A58", Offset = "0x1D82A58", VA = "0x1D82A58", Slot = "93")]
			public virtual void SetPosePredictEnabled(WVR_DeviceType type, bool enabled_position_predict, bool enable_rotation_predict)
			{
			}

			[Token(Token = "0x60021EC")]
			[Address(RVA = "0x1D82A5C", Offset = "0x1D82A5C", VA = "0x1D82A5C", Slot = "94")]
			public virtual bool ShowPassthroughOverlay(bool show)
			{
				return default(bool);
			}

			[Token(Token = "0x60021ED")]
			[Address(RVA = "0x1D82A64", Offset = "0x1D82A64", VA = "0x1D82A64", Slot = "95")]
			public virtual void EnableAutoPassthrough(bool enable)
			{
			}

			[Token(Token = "0x60021EE")]
			[Address(RVA = "0x1D82A68", Offset = "0x1D82A68", VA = "0x1D82A68", Slot = "96")]
			public virtual bool IsPassthroughOverlayVisible()
			{
				return default(bool);
			}

			[Token(Token = "0x60021EF")]
			[Address(RVA = "0x1D82A70", Offset = "0x1D82A70", VA = "0x1D82A70", Slot = "97")]
			public virtual string DeployRenderModelAssets(int deviceIndex, string renderModelName)
			{
				return null;
			}

			[Token(Token = "0x60021F0")]
			[Address(RVA = "0x1D82AB8", Offset = "0x1D82AB8", VA = "0x1D82AB8", Slot = "98")]
			public virtual void SetFocusedController(WVR_DeviceType focusController)
			{
			}

			[Token(Token = "0x60021F1")]
			[Address(RVA = "0x1D82ABC", Offset = "0x1D82ABC", VA = "0x1D82ABC", Slot = "99")]
			public virtual WVR_DeviceType GetFocusedController()
			{
				return default(WVR_DeviceType);
			}

			[Token(Token = "0x60021F2")]
			[Address(RVA = "0x1D82AC4", Offset = "0x1D82AC4", VA = "0x1D82AC4", Slot = "100")]
			public virtual bool OpenMesh(string filename, ref uint sessiionid, IntPtr errorCode, bool merge)
			{
				return default(bool);
			}

			[Token(Token = "0x60021F3")]
			[Address(RVA = "0x1D82ACC", Offset = "0x1D82ACC", VA = "0x1D82ACC", Slot = "101")]
			public virtual bool GetSectionCount(uint sessionid, ref uint sectionCount)
			{
				return default(bool);
			}

			[Token(Token = "0x60021F4")]
			[Address(RVA = "0x1D82AD4", Offset = "0x1D82AD4", VA = "0x1D82AD4", Slot = "102")]
			public virtual bool GetMeshData(uint sessionid, [In][Out] FBXInfo_t[] infoArray)
			{
				return default(bool);
			}

			[Token(Token = "0x60021F5")]
			[Address(RVA = "0x1D82ADC", Offset = "0x1D82ADC", VA = "0x1D82ADC", Slot = "103")]
			public virtual bool GetSectionData(uint sessionid, uint sectionIndiceIndex, [In][Out] Vector3[] vecticeArray, [In][Out] Vector3[] normalArray, [In][Out] Vector2[] uvArray, [In][Out] int[] indiceArray, ref bool active)
			{
				return default(bool);
			}

			[Token(Token = "0x60021F6")]
			[Address(RVA = "0x1D82AE4", Offset = "0x1D82AE4", VA = "0x1D82AE4", Slot = "104")]
			public virtual void ReleaseMesh(uint sessionid)
			{
			}

			[Token(Token = "0x60021F7")]
			[Address(RVA = "0x1D82AE8", Offset = "0x1D82AE8", VA = "0x1D82AE8", Slot = "105")]
			public virtual bool IsPermissionInitialed()
			{
				return default(bool);
			}

			[Token(Token = "0x60021F8")]
			[Address(RVA = "0x1D82AF0", Offset = "0x1D82AF0", VA = "0x1D82AF0", Slot = "106")]
			public virtual bool ShowDialogOnScene()
			{
				return default(bool);
			}

			[Token(Token = "0x60021F9")]
			[Address(RVA = "0x1D82AF8", Offset = "0x1D82AF8", VA = "0x1D82AF8", Slot = "107")]
			public virtual bool IsPermissionGranted(string permission)
			{
				return default(bool);
			}

			[Token(Token = "0x60021FA")]
			[Address(RVA = "0x1D82B00", Offset = "0x1D82B00", VA = "0x1D82B00", Slot = "108")]
			public virtual bool ShouldGrantPermission(string permission)
			{
				return default(bool);
			}

			[Token(Token = "0x60021FB")]
			[Address(RVA = "0x1D82B08", Offset = "0x1D82B08", VA = "0x1D82B08", Slot = "109")]
			public virtual void RequestPermissions(string[] permissions, WVR_RequestCompleteCallback cb)
			{
			}

			[Token(Token = "0x60021FC")]
			[Address(RVA = "0x1D8334C", Offset = "0x1D8334C", VA = "0x1D8334C", Slot = "110")]
			public virtual void RequestUsbPermission(WVR_RequestUsbCompleteCallback cb)
			{
			}

			[Token(Token = "0x60021FD")]
			[Address(RVA = "0x1D837BC", Offset = "0x1D837BC", VA = "0x1D837BC", Slot = "111")]
			public virtual string GetStringBySystemLanguage(string stringName)
			{
				return null;
			}

			[Token(Token = "0x60021FE")]
			[Address(RVA = "0x1D837C4", Offset = "0x1D837C4", VA = "0x1D837C4", Slot = "112")]
			public virtual string GetStringByLanguage(string stringName, string lang, string country)
			{
				return null;
			}

			[Token(Token = "0x60021FF")]
			[Address(RVA = "0x1D837CC", Offset = "0x1D837CC", VA = "0x1D837CC", Slot = "113")]
			public virtual string GetSystemLanguage()
			{
				return null;
			}

			[Token(Token = "0x6002200")]
			[Address(RVA = "0x1D83814", Offset = "0x1D83814", VA = "0x1D83814", Slot = "114")]
			public virtual string GetSystemCountry()
			{
				return null;
			}

			[Token(Token = "0x6002201")]
			[Address(RVA = "0x1D8385C", Offset = "0x1D8385C", VA = "0x1D8385C", Slot = "115")]
			public virtual string GetOEMConfigByKey(string key)
			{
				return null;
			}

			[Token(Token = "0x6002202")]
			[Address(RVA = "0x1D838A4", Offset = "0x1D838A4", VA = "0x1D838A4", Slot = "116")]
			public virtual void SetOEMConfigChangedCallback(WVR_OnOEMConfigChanged cb)
			{
			}

			[Token(Token = "0x6002203")]
			[Address(RVA = "0x1D838A8", Offset = "0x1D838A8", VA = "0x1D838A8")]
			public WVR_Base()
			{
			}
		}

		[Token(Token = "0x60006A0")]
		[Address(RVA = "0x1345984", Offset = "0x1345984", VA = "0x1345984")]
		public static bool WVR_PollEventQueue(ref WVR_Event_t e)
		{
			return default(bool);
		}

		[Token(Token = "0x60006A1")]
		[Address(RVA = "0x1345A08", Offset = "0x1345A08", VA = "0x1345A08")]
		public static int WVR_GetInputDeviceCapability(WVR_DeviceType type, WVR_InputType inputType)
		{
			return default(int);
		}

		[Token(Token = "0x60006A2")]
		[Address(RVA = "0x1345A9C", Offset = "0x1345A9C", VA = "0x1345A9C")]
		public static WVR_AnalogType WVR_GetInputDeviceAnalogType(WVR_DeviceType type, WVR_InputId id)
		{
			return default(WVR_AnalogType);
		}

		[Token(Token = "0x60006A3")]
		[Address(RVA = "0x133FDB8", Offset = "0x133FDB8", VA = "0x133FDB8")]
		public static bool WVR_GetInputDeviceState(WVR_DeviceType type, uint inputMask, ref uint buttons, ref uint touches, [In][Out] WVR_AnalogState_t[] analogArray, uint analogArrayCount)
		{
			return default(bool);
		}

		[Token(Token = "0x60006A4")]
		[Address(RVA = "0x133FD24", Offset = "0x133FD24", VA = "0x133FD24")]
		public static int WVR_GetInputTypeCount(WVR_DeviceType type, WVR_InputType inputType)
		{
			return default(int);
		}

		[Token(Token = "0x60006A5")]
		[Address(RVA = "0x1345B30", Offset = "0x1345B30", VA = "0x1345B30")]
		public static bool WVR_GetInputButtonState(WVR_DeviceType type, WVR_InputId id)
		{
			return default(bool);
		}

		[Token(Token = "0x60006A6")]
		[Address(RVA = "0x1345BC4", Offset = "0x1345BC4", VA = "0x1345BC4")]
		public static bool WVR_GetInputTouchState(WVR_DeviceType type, WVR_InputId id)
		{
			return default(bool);
		}

		[Token(Token = "0x60006A7")]
		[Address(RVA = "0x1345C58", Offset = "0x1345C58", VA = "0x1345C58")]
		public static WVR_Axis_t WVR_GetInputAnalogAxis(WVR_DeviceType type, WVR_InputId id)
		{
			return default(WVR_Axis_t);
		}

		[Token(Token = "0x60006A8")]
		[Address(RVA = "0x1345CEC", Offset = "0x1345CEC", VA = "0x1345CEC")]
		public static void WVR_GetPoseState(WVR_DeviceType type, WVR_PoseOriginModel originModel, uint predictedMilliSec, ref WVR_PoseState_t poseState)
		{
		}

		[Token(Token = "0x60006A9")]
		[Address(RVA = "0x1345D98", Offset = "0x1345D98", VA = "0x1345D98")]
		public static void WVR_SetTextureBounds([In][Out] WVR_TextureBound_t[] textureBounds)
		{
		}

		[Token(Token = "0x60006AA")]
		[Address(RVA = "0x1345E1C", Offset = "0x1345E1C", VA = "0x1345E1C")]
		public static void WVR_GetLastPoseIndex(WVR_PoseOriginModel originModel, [In][Out] WVR_DevicePosePair_t[] poseArray, uint pairArrayCount, ref uint frameIndex)
		{
		}

		[Token(Token = "0x60006AB")]
		[Address(RVA = "0x1345ECC", Offset = "0x1345ECC", VA = "0x1345ECC")]
		public static void WVR_WaitGetPoseIndex(WVR_PoseOriginModel originModel, [In][Out] WVR_DevicePosePair_t[] poseArray, uint pairArrayCount, ref uint frameIndex)
		{
		}

		[Token(Token = "0x60006AC")]
		[Address(RVA = "0x1345F7C", Offset = "0x1345F7C", VA = "0x1345F7C")]
		public static IntPtr WVR_StoreRenderTextures(IntPtr[] texturesIDs, int size, bool eEye, WVR_TextureTarget target)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60006AD")]
		[Address(RVA = "0x134602C", Offset = "0x134602C", VA = "0x134602C")]
		public static void WVR_GetSyncPose(WVR_PoseOriginModel originModel, [In][Out] WVR_DevicePosePair_t[] poseArray, uint pairArrayCount)
		{
		}

		[Token(Token = "0x60006AE")]
		[Address(RVA = "0x13460CC", Offset = "0x13460CC", VA = "0x13460CC")]
		public static bool WVR_IsDeviceConnected(WVR_DeviceType type)
		{
			return default(bool);
		}

		[Token(Token = "0x60006AF")]
		[Address(RVA = "0x1346154", Offset = "0x1346154", VA = "0x1346154")]
		public static void WVR_TriggerVibration(WVR_DeviceType type, WVR_InputId id, uint durationMicroSec, uint frequency, WVR_Intensity intensity)
		{
		}

		[Token(Token = "0x60006B0")]
		[Address(RVA = "0x134620C", Offset = "0x134620C", VA = "0x134620C")]
		public static void WVR_InAppRecenter(WVR_RecenterType recenterType)
		{
		}

		[Token(Token = "0x60006B1")]
		[Address(RVA = "0x1346294", Offset = "0x1346294", VA = "0x1346294")]
		public static void WVR_SetNeckModelEnabled(bool enabled)
		{
		}

		[Token(Token = "0x60006B2")]
		[Address(RVA = "0x134631C", Offset = "0x134631C", VA = "0x134631C")]
		public static void WVR_SetNeckModel(WVR_SimulationType simulationType)
		{
		}

		[Token(Token = "0x60006B3")]
		[Address(RVA = "0x13463A4", Offset = "0x13463A4", VA = "0x13463A4")]
		public static void WVR_SetArmModel(WVR_SimulationType simulationType)
		{
		}

		[Token(Token = "0x60006B4")]
		[Address(RVA = "0x134642C", Offset = "0x134642C", VA = "0x134642C")]
		public static void WVR_SetArmSticky(bool stickyArm)
		{
		}

		[Token(Token = "0x60006B5")]
		[Address(RVA = "0x13464B4", Offset = "0x13464B4", VA = "0x13464B4")]
		public static bool WVR_SetInputRequest(WVR_DeviceType type, WVR_InputAttribute_t[] request, uint size)
		{
			return default(bool);
		}

		[Token(Token = "0x60006B6")]
		[Address(RVA = "0x1346554", Offset = "0x1346554", VA = "0x1346554")]
		public static bool WVR_GetInputMappingPair(WVR_DeviceType type, WVR_InputId destination, ref WVR_InputMappingPair_t pair)
		{
			return default(bool);
		}

		[Token(Token = "0x60006B7")]
		[Address(RVA = "0x13465F4", Offset = "0x13465F4", VA = "0x13465F4")]
		public static uint WVR_GetInputMappingTable(WVR_DeviceType type, [In][Out] WVR_InputMappingPair_t[] table, uint size)
		{
			return default(uint);
		}

		[Token(Token = "0x60006B8")]
		[Address(RVA = "0x1346694", Offset = "0x1346694", VA = "0x1346694")]
		public static WVR_Arena_t WVR_GetArena()
		{
			return default(WVR_Arena_t);
		}

		[Token(Token = "0x60006B9")]
		[Address(RVA = "0x134671C", Offset = "0x134671C", VA = "0x134671C")]
		public static bool WVR_SetArena(ref WVR_Arena_t arena)
		{
			return default(bool);
		}

		[Token(Token = "0x60006BA")]
		[Address(RVA = "0x13467A4", Offset = "0x13467A4", VA = "0x13467A4")]
		public static WVR_ArenaVisible WVR_GetArenaVisible()
		{
			return default(WVR_ArenaVisible);
		}

		[Token(Token = "0x60006BB")]
		[Address(RVA = "0x1346824", Offset = "0x1346824", VA = "0x1346824")]
		public static void WVR_SetArenaVisible(WVR_ArenaVisible config)
		{
		}

		[Token(Token = "0x60006BC")]
		[Address(RVA = "0x13468AC", Offset = "0x13468AC", VA = "0x13468AC")]
		public static bool WVR_IsOverArenaRange()
		{
			return default(bool);
		}

		[Token(Token = "0x60006BD")]
		[Address(RVA = "0x1330D08", Offset = "0x1330D08", VA = "0x1330D08")]
		public static float WVR_GetDeviceBatteryPercentage(WVR_DeviceType type)
		{
			return default(float);
		}

		[Token(Token = "0x60006BE")]
		[Address(RVA = "0x134692C", Offset = "0x134692C", VA = "0x134692C")]
		public static WVR_BatteryStatus WVR_GetBatteryStatus(WVR_DeviceType type)
		{
			return default(WVR_BatteryStatus);
		}

		[Token(Token = "0x60006BF")]
		[Address(RVA = "0x13469B4", Offset = "0x13469B4", VA = "0x13469B4")]
		public static WVR_ChargeStatus WVR_GetChargeStatus(WVR_DeviceType type)
		{
			return default(WVR_ChargeStatus);
		}

		[Token(Token = "0x60006C0")]
		[Address(RVA = "0x1346A3C", Offset = "0x1346A3C", VA = "0x1346A3C")]
		public static WVR_BatteryTemperatureStatus WVR_GetBatteryTemperatureStatus(WVR_DeviceType type)
		{
			return default(WVR_BatteryTemperatureStatus);
		}

		[Token(Token = "0x60006C1")]
		[Address(RVA = "0x1346AC4", Offset = "0x1346AC4", VA = "0x1346AC4")]
		public static float WVR_GetBatteryTemperature(WVR_DeviceType type)
		{
			return default(float);
		}

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0x1346B4C", Offset = "0x1346B4C", VA = "0x1346B4C")]
		public static WVR_Result WVR_StartHandGesture()
		{
			return default(WVR_Result);
		}

		[Token(Token = "0x60006C3")]
		[Address(RVA = "0x1346BCC", Offset = "0x1346BCC", VA = "0x1346BCC")]
		public static void WVR_StopHandGesture()
		{
		}

		[Token(Token = "0x60006C4")]
		[Address(RVA = "0x1346C4C", Offset = "0x1346C4C", VA = "0x1346C4C")]
		public static WVR_Result WVR_GetHandGestureData(ref WVR_HandGestureData_t data)
		{
			return default(WVR_Result);
		}

		[Token(Token = "0x60006C5")]
		[Address(RVA = "0x1346CD4", Offset = "0x1346CD4", VA = "0x1346CD4")]
		public static WVR_Result WVR_StartHandTracking()
		{
			return default(WVR_Result);
		}

		[Token(Token = "0x60006C6")]
		[Address(RVA = "0x1346D54", Offset = "0x1346D54", VA = "0x1346D54")]
		public static void WVR_StopHandTracking()
		{
		}

		[Token(Token = "0x60006C7")]
		[Address(RVA = "0x1346DD4", Offset = "0x1346DD4", VA = "0x1346DD4")]
		public static WVR_Result WVR_GetHandTrackingData(ref WVR_HandTrackingData_t data, WVR_PoseOriginModel originModel, uint predictedMilliSec)
		{
			return default(WVR_Result);
		}

		[Token(Token = "0x60006C8")]
		[Address(RVA = "0x1346E74", Offset = "0x1346E74", VA = "0x1346E74")]
		public static ulong WVR_GetSupportedFeatures()
		{
			return default(ulong);
		}

		[Token(Token = "0x60006C9")]
		[Address(RVA = "0x1346EF4", Offset = "0x1346EF4", VA = "0x1346EF4")]
		public static WVR_InitError WVR_Init(WVR_AppType eType)
		{
			return default(WVR_InitError);
		}

		[Token(Token = "0x60006CA")]
		[Address(RVA = "0x1346F7C", Offset = "0x1346F7C", VA = "0x1346F7C")]
		public static void WVR_PostInit()
		{
		}

		[Token(Token = "0x60006CB")]
		[Address(RVA = "0x1346FFC", Offset = "0x1346FFC", VA = "0x1346FFC")]
		public static void WVR_Quit()
		{
		}

		[Token(Token = "0x60006CC")]
		[Address(RVA = "0x134707C", Offset = "0x134707C", VA = "0x134707C")]
		public static IntPtr WVR_GetInitErrorString(WVR_InitError error)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60006CD")]
		[Address(RVA = "0x1330B50", Offset = "0x1330B50", VA = "0x1330B50")]
		public static uint WVR_GetWaveRuntimeVersion()
		{
			return default(uint);
		}

		[Token(Token = "0x60006CE")]
		[Address(RVA = "0x1347104", Offset = "0x1347104", VA = "0x1347104")]
		public static uint WVR_GetWaveSDKVersion()
		{
			return default(uint);
		}

		[Token(Token = "0x60006CF")]
		[Address(RVA = "0x13305E8", Offset = "0x13305E8", VA = "0x13305E8")]
		public static bool WVR_IsInputFocusCapturedBySystem()
		{
			return default(bool);
		}

		[Token(Token = "0x60006D0")]
		[Address(RVA = "0x1328A8C", Offset = "0x1328A8C", VA = "0x1328A8C")]
		internal static WVR_RenderError WVR_RenderInit(ref WVR_RenderInitParams_t param)
		{
			return default(WVR_RenderError);
		}

		[Token(Token = "0x60006D1")]
		[Address(RVA = "0x1347184", Offset = "0x1347184", VA = "0x1347184")]
		public static bool WVR_SetPerformanceLevels(WVR_PerfLevel cpuLevel, WVR_PerfLevel gpuLevel)
		{
			return default(bool);
		}

		[Token(Token = "0x60006D2")]
		[Address(RVA = "0x134721C", Offset = "0x134721C", VA = "0x134721C")]
		public static bool WVR_EnableAdaptiveQuality(bool enable, uint flags)
		{
			return default(bool);
		}

		[Token(Token = "0x60006D3")]
		[Address(RVA = "0x13472B4", Offset = "0x13472B4", VA = "0x13472B4")]
		public static bool WVR_IsAdaptiveQualityEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x60006D4")]
		[Address(RVA = "0x1341D18", Offset = "0x1341D18", VA = "0x1341D18")]
		public static bool WVR_StartCamera(ref WVR_CameraInfo_t info)
		{
			return default(bool);
		}

		[Token(Token = "0x60006D5")]
		[Address(RVA = "0x1341DA0", Offset = "0x1341DA0", VA = "0x1341DA0")]
		public static void WVR_StopCamera()
		{
		}

		[Token(Token = "0x60006D6")]
		[Address(RVA = "0x1341E20", Offset = "0x1341E20", VA = "0x1341E20")]
		public static bool WVR_UpdateTexture(IntPtr textureid)
		{
			return default(bool);
		}

		[Token(Token = "0x60006D7")]
		[Address(RVA = "0x1347334", Offset = "0x1347334", VA = "0x1347334")]
		public static bool WVR_GetCameraIntrinsic(WVR_CameraPosition position, ref WVR_CameraIntrinsic_t intrinsic)
		{
			return default(bool);
		}

		[Token(Token = "0x60006D8")]
		[Address(RVA = "0x13473CC", Offset = "0x13473CC", VA = "0x13473CC")]
		public static bool WVR_GetCameraFrameBuffer(IntPtr pFramebuffer, uint frameBufferSize)
		{
			return default(bool);
		}

		[Token(Token = "0x60006D9")]
		[Address(RVA = "0x1347464", Offset = "0x1347464", VA = "0x1347464")]
		public static bool WVR_GetFrameBufferWithPoseState(IntPtr frameBuffer, uint frameBufferSize, WVR_PoseOriginModel origin, uint predictInMs, ref WVR_PoseState_t poseState)
		{
			return default(bool);
		}

		[Token(Token = "0x60006DA")]
		[Address(RVA = "0x1341EA8", Offset = "0x1341EA8", VA = "0x1341EA8")]
		public static bool WVR_DrawTextureWithBuffer(IntPtr textureId, WVR_CameraImageFormat imgFormat, IntPtr frameBuffer, uint size, uint width, uint height)
		{
			return default(bool);
		}

		[Token(Token = "0x60006DB")]
		[Address(RVA = "0x1341F70", Offset = "0x1341F70", VA = "0x1341F70")]
		public static void WVR_ReleaseCameraTexture()
		{
		}

		[Token(Token = "0x60006DC")]
		[Address(RVA = "0x134751C", Offset = "0x134751C", VA = "0x134751C")]
		public static bool WVR_IsDeviceSuspend(WVR_DeviceType type)
		{
			return default(bool);
		}

		[Token(Token = "0x60006DD")]
		[Address(RVA = "0x13475A4", Offset = "0x13475A4", VA = "0x13475A4")]
		public static void WVR_ConvertMatrixQuaternion(ref WVR_Matrix4f_t mat, ref WVR_Quatf_t quat, bool m2q)
		{
		}

		[Token(Token = "0x60006DE")]
		[Address(RVA = "0x1347644", Offset = "0x1347644", VA = "0x1347644")]
		public static WVR_NumDoF WVR_GetDegreeOfFreedom(WVR_DeviceType type)
		{
			return default(WVR_NumDoF);
		}

		[Token(Token = "0x60006DF")]
		[Address(RVA = "0x13476CC", Offset = "0x13476CC", VA = "0x13476CC")]
		public static void WVR_SetParameters(WVR_DeviceType type, IntPtr pchValue)
		{
		}

		[Token(Token = "0x60006E0")]
		[Address(RVA = "0x132FD7C", Offset = "0x132FD7C", VA = "0x132FD7C")]
		public static uint WVR_GetParameters(WVR_DeviceType type, IntPtr pchValue, IntPtr retValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x60006E1")]
		[Address(RVA = "0x1347764", Offset = "0x1347764", VA = "0x1347764")]
		public static WVR_DeviceType WVR_GetDefaultControllerRole()
		{
			return default(WVR_DeviceType);
		}

		[Token(Token = "0x60006E2")]
		[Address(RVA = "0x13477E4", Offset = "0x13477E4", VA = "0x13477E4")]
		public static bool WVR_SetInteractionMode(WVR_InteractionMode mode)
		{
			return default(bool);
		}

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0x134786C", Offset = "0x134786C", VA = "0x134786C")]
		public static WVR_InteractionMode WVR_GetInteractionMode()
		{
			return default(WVR_InteractionMode);
		}

		[Token(Token = "0x60006E4")]
		[Address(RVA = "0x13478EC", Offset = "0x13478EC", VA = "0x13478EC")]
		public static bool WVR_SetGazeTriggerType(WVR_GazeTriggerType type)
		{
			return default(bool);
		}

		[Token(Token = "0x60006E5")]
		[Address(RVA = "0x1347974", Offset = "0x1347974", VA = "0x1347974")]
		public static WVR_GazeTriggerType WVR_GetGazeTriggerType()
		{
			return default(WVR_GazeTriggerType);
		}

		[Token(Token = "0x60006E6")]
		[Address(RVA = "0x13479F4", Offset = "0x13479F4", VA = "0x13479F4")]
		public static bool WVR_GetDeviceErrorState(WVR_DeviceType dev_type, WVR_DeviceErrorState error_state)
		{
			return default(bool);
		}

		[Token(Token = "0x60006E7")]
		[Address(RVA = "0x1337DD0", Offset = "0x1337DD0", VA = "0x1337DD0")]
		public static void WVR_GetRenderTargetSize(ref uint width, ref uint height)
		{
		}

		[Token(Token = "0x60006E8")]
		[Address(RVA = "0x1347A8C", Offset = "0x1347A8C", VA = "0x1347A8C")]
		public static WVR_Matrix4f_t WVR_GetProjection(WVR_Eye eye, float near, float far)
		{
			return default(WVR_Matrix4f_t);
		}

		[Token(Token = "0x60006E9")]
		[Address(RVA = "0x1347B3C", Offset = "0x1347B3C", VA = "0x1347B3C")]
		public static void WVR_GetClippingPlaneBoundary(WVR_Eye eye, ref float left, ref float right, ref float top, ref float bottom)
		{
		}

		[Token(Token = "0x60006EA")]
		[Address(RVA = "0x1347BF4", Offset = "0x1347BF4", VA = "0x1347BF4")]
		public static void WVR_SetOverfillRatio(float ratioX, float ratioY)
		{
		}

		[Token(Token = "0x60006EB")]
		[Address(RVA = "0x1347C8C", Offset = "0x1347C8C", VA = "0x1347C8C")]
		public static WVR_Matrix4f_t WVR_GetTransformFromEyeToHead(WVR_Eye eye, WVR_NumDoF dof)
		{
			return default(WVR_Matrix4f_t);
		}

		[Token(Token = "0x60006EC")]
		[Address(RVA = "0x1329A2C", Offset = "0x1329A2C", VA = "0x1329A2C")]
		public static WVR_SubmitError WVR_SubmitFrame(WVR_Eye eye, [In][Out] WVR_TextureParams_t[] param, [In][Out] WVR_PoseState_t[] pose, WVR_SubmitExtend extendMethod)
		{
			return default(WVR_SubmitError);
		}

		[Token(Token = "0x60006ED")]
		[Address(RVA = "0x1347D2C", Offset = "0x1347D2C", VA = "0x1347D2C")]
		public static void WVR_SetSubmitParams(WVR_Eye eye, [In][Out] WVR_TextureParams_t[] param, [In][Out] WVR_PoseState_t[] pose, WVR_SubmitExtend extendMethod)
		{
		}

		[Token(Token = "0x60006EE")]
		[Address(RVA = "0x13294F8", Offset = "0x13294F8", VA = "0x13294F8")]
		public static void WVR_PreRenderEye(WVR_Eye eye, [In][Out] WVR_TextureParams_t[] param, [In][Out] WVR_RenderFoveationParams[] foveationParams)
		{
		}

		[Token(Token = "0x60006EF")]
		[Address(RVA = "0x1337E68", Offset = "0x1337E68", VA = "0x1337E68")]
		public static bool WVR_RequestScreenshot(uint width, uint height, WVR_ScreenshotMode mode, IntPtr filename)
		{
			return default(bool);
		}

		[Token(Token = "0x60006F0")]
		[Address(RVA = "0x1341FF0", Offset = "0x1341FF0", VA = "0x1341FF0")]
		public static void WVR_RenderMask(WVR_Eye eye)
		{
		}

		[Token(Token = "0x60006F1")]
		[Address(RVA = "0x1347DDC", Offset = "0x1347DDC", VA = "0x1347DDC")]
		public static bool WVR_GetRenderProps(ref WVR_RenderProps_t props)
		{
			return default(bool);
		}

		[Token(Token = "0x60006F2")]
		[Address(RVA = "0x1347E64", Offset = "0x1347E64", VA = "0x1347E64")]
		public static IntPtr WVR_ObtainTextureQueue(WVR_TextureTarget target, WVR_TextureFormat format, WVR_TextureType type, uint width, uint height, int level)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60006F3")]
		[Address(RVA = "0x1347F2C", Offset = "0x1347F2C", VA = "0x1347F2C")]
		public static uint WVR_GetTextureQueueLength(IntPtr handle)
		{
			return default(uint);
		}

		[Token(Token = "0x60006F4")]
		[Address(RVA = "0x1347FB4", Offset = "0x1347FB4", VA = "0x1347FB4")]
		public static WVR_TextureParams_t WVR_GetTexture(IntPtr handle, int index)
		{
			return default(WVR_TextureParams_t);
		}

		[Token(Token = "0x60006F5")]
		[Address(RVA = "0x1348054", Offset = "0x1348054", VA = "0x1348054")]
		public static int WVR_GetAvailableTextureIndex(IntPtr handle)
		{
			return default(int);
		}

		[Token(Token = "0x60006F6")]
		[Address(RVA = "0x13480DC", Offset = "0x13480DC", VA = "0x13480DC")]
		public static void WVR_ReleaseTextureQueue(IntPtr handle)
		{
		}

		[Token(Token = "0x60006F7")]
		[Address(RVA = "0x1348164", Offset = "0x1348164", VA = "0x1348164")]
		public static bool WVR_IsRenderFoveationSupport()
		{
			return default(bool);
		}

		[Token(Token = "0x60006F8")]
		[Address(RVA = "0x13481E4", Offset = "0x13481E4", VA = "0x13481E4")]
		public static void WVR_RenderFoveation(bool enable)
		{
		}

		[Token(Token = "0x60006F9")]
		[Address(RVA = "0x134826C", Offset = "0x134826C", VA = "0x134826C")]
		public static bool WVR_IsPermissionInitialed()
		{
			return default(bool);
		}

		[Token(Token = "0x60006FA")]
		[Address(RVA = "0x13482EC", Offset = "0x13482EC", VA = "0x13482EC")]
		public static bool WVR_ShowDialogOnScene()
		{
			return default(bool);
		}

		[Token(Token = "0x60006FB")]
		[Address(RVA = "0x134836C", Offset = "0x134836C", VA = "0x134836C")]
		public static bool WVR_IsPermissionGranted(string permission)
		{
			return default(bool);
		}

		[Token(Token = "0x60006FC")]
		[Address(RVA = "0x13483F4", Offset = "0x13483F4", VA = "0x13483F4")]
		public static bool WVR_ShouldGrantPermission(string permission)
		{
			return default(bool);
		}

		[Token(Token = "0x60006FD")]
		[Address(RVA = "0x134847C", Offset = "0x134847C", VA = "0x134847C")]
		public static void WVR_RequestPermissions(string[] permissions, WVR_RequestCompleteCallback cb)
		{
		}

		[Token(Token = "0x60006FE")]
		[Address(RVA = "0x1348514", Offset = "0x1348514", VA = "0x1348514")]
		public static void WVR_RequestUsbPermission(WVR_RequestUsbCompleteCallback cb)
		{
		}

		[Token(Token = "0x60006FF")]
		[Address(RVA = "0x13336F8", Offset = "0x13336F8", VA = "0x13336F8")]
		public static string WVR_GetStringBySystemLanguage(string stringName)
		{
			return null;
		}

		[Token(Token = "0x6000700")]
		[Address(RVA = "0x1333780", Offset = "0x1333780", VA = "0x1333780")]
		public static string WVR_GetStringByLanguage(string stringName, string lang, string country)
		{
			return null;
		}

		[Token(Token = "0x6000701")]
		[Address(RVA = "0x1333C0C", Offset = "0x1333C0C", VA = "0x1333C0C")]
		public static string WVR_GetSystemLanguage()
		{
			return null;
		}

		[Token(Token = "0x6000702")]
		[Address(RVA = "0x1333D60", Offset = "0x1333D60", VA = "0x1333D60")]
		public static string WVR_GetSystemCountry()
		{
			return null;
		}

		[Token(Token = "0x6000703")]
		[Address(RVA = "0x134859C", Offset = "0x134859C", VA = "0x134859C")]
		public static void WVR_SetPosePredictEnabled(WVR_DeviceType type, bool enabled_position_predict, bool enable_rotation_predict)
		{
		}

		[Token(Token = "0x6000704")]
		[Address(RVA = "0x134863C", Offset = "0x134863C", VA = "0x134863C")]
		public static bool WVR_ShowPassthroughOverlay(bool show)
		{
			return default(bool);
		}

		[Token(Token = "0x6000705")]
		[Address(RVA = "0x13486C4", Offset = "0x13486C4", VA = "0x13486C4")]
		public static void WVR_EnableAutoPassthrough(bool enable)
		{
		}

		[Token(Token = "0x6000706")]
		[Address(RVA = "0x134874C", Offset = "0x134874C", VA = "0x134874C")]
		public static bool WVR_IsPassthroughOverlayVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6000707")]
		[Address(RVA = "0x1330BD0", Offset = "0x1330BD0", VA = "0x1330BD0")]
		public static string WVR_DeployRenderModelAssets(int deviceIndex, string renderModelName)
		{
			return null;
		}

		[Token(Token = "0x6000708")]
		[Address(RVA = "0x13487CC", Offset = "0x13487CC", VA = "0x13487CC")]
		public static void WVR_SetFocusedController(WVR_DeviceType focusController)
		{
		}

		[Token(Token = "0x6000709")]
		[Address(RVA = "0x1348854", Offset = "0x1348854", VA = "0x1348854")]
		public static WVR_DeviceType WVR_GetFocusedController()
		{
			return default(WVR_DeviceType);
		}

		[Token(Token = "0x600070A")]
		[Address(RVA = "0x13488D4", Offset = "0x13488D4", VA = "0x13488D4")]
		public static bool WVR_OpenMesh(string filename, ref uint sessionid, IntPtr errorCode, bool merge)
		{
			return default(bool);
		}

		[Token(Token = "0x600070B")]
		[Address(RVA = "0x1348984", Offset = "0x1348984", VA = "0x1348984")]
		public static bool WVR_GetSectionCount(uint sessionid, ref uint sectionCount)
		{
			return default(bool);
		}

		[Token(Token = "0x600070C")]
		[Address(RVA = "0x1348A1C", Offset = "0x1348A1C", VA = "0x1348A1C")]
		public static bool WVR_GetMeshData(uint sessionid, [In][Out] FBXInfo_t[] infoArray)
		{
			return default(bool);
		}

		[Token(Token = "0x600070D")]
		[Address(RVA = "0x1348AB4", Offset = "0x1348AB4", VA = "0x1348AB4")]
		public static bool WVR_GetSectionData(uint sessionid, uint sectionIndiceIndex, [In][Out] Vector3[] vecticeArray, [In][Out] Vector3[] normalArray, [In][Out] Vector2[] uvArray, [In][Out] int[] indiceArray, ref bool active)
		{
			return default(bool);
		}

		[Token(Token = "0x600070E")]
		[Address(RVA = "0x1348B98", Offset = "0x1348B98", VA = "0x1348B98")]
		public static void WVR_ReleaseMesh(uint sessiionid)
		{
		}

		[Token(Token = "0x600070F")]
		[Address(RVA = "0x13443E0", Offset = "0x13443E0", VA = "0x13443E0")]
		public static string WVR_GetOEMConfigByKey(string key)
		{
			return null;
		}

		[Token(Token = "0x6000710")]
		[Address(RVA = "0x1344358", Offset = "0x1344358", VA = "0x1344358")]
		public static void WVR_SetOEMConfigChangedCallback(WVR_OnOEMConfigChanged cb)
		{
		}

		[Token(Token = "0x6000711")]
		[Address(RVA = "0x1348C20", Offset = "0x1348C20", VA = "0x1348C20")]
		public Interop()
		{
		}
	}
	[Token(Token = "0x20000D1")]
	public class WaveVR_AdaptiveQuality : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200047F")]
		public class AQSerializableClass
		{
			[Token(Token = "0x4001AC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x937F30", Offset = "0x937F30")]
			public bool SendQualityEvent;

			[Token(Token = "0x4001AC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x937F68", Offset = "0x937F68")]
			public bool AutoFoveation;

			[Token(Token = "0x6002205")]
			[Address(RVA = "0x1D84DC8", Offset = "0x1D84DC8", VA = "0x1D84DC8")]
			public AQSerializableClass()
			{
			}
		}

		[Token(Token = "0x2000480")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9273CC", Offset = "0x9273CC")]
		private sealed class <RunEnableAQ>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001AC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WaveVR_AdaptiveQuality <>4__this;

			[Token(Token = "0x170003D5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002209")]
				[Address(RVA = "0x1D84D50", Offset = "0x1D84D50", VA = "0x1D84D50", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600220B")]
				[Address(RVA = "0x1D84DC0", Offset = "0x1D84DC0", VA = "0x1D84DC0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002206")]
			[Address(RVA = "0x1D845C8", Offset = "0x1D845C8", VA = "0x1D845C8")]
			[DebuggerHidden]
			public <RunEnableAQ>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6002207")]
			[Address(RVA = "0x1D84AEC", Offset = "0x1D84AEC", VA = "0x1D84AEC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002208")]
			[Address(RVA = "0x1D84AF0", Offset = "0x1D84AF0", VA = "0x1D84AF0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600220A")]
			[Address(RVA = "0x1D84D58", Offset = "0x1D84D58", VA = "0x1D84D58", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400070F")]
		private const string TAG = "WVRAQ";

		[Token(Token = "0x4000710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool isEnabled;

		[Token(Token = "0x4000711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9293CC", Offset = "0x9293CC")]
		public AQSerializableClass m_RenderingPerformanceImproveStrategy;

		[Token(Token = "0x6000712")]
		[Address(RVA = "0x1D84554", Offset = "0x1D84554", VA = "0x1D84554")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x938E7C", Offset = "0x938E7C")]
		private IEnumerator RunEnableAQ()
		{
			return null;
		}

		[Token(Token = "0x6000713")]
		[Address(RVA = "0x1D845F4", Offset = "0x1D845F4", VA = "0x1D845F4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000714")]
		[Address(RVA = "0x1D84648", Offset = "0x1D84648", VA = "0x1D84648")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000715")]
		[Address(RVA = "0x1D84AE0", Offset = "0x1D84AE0", VA = "0x1D84AE0")]
		public WaveVR_AdaptiveQuality()
		{
		}
	}
}
namespace wvr.TypeExtensions
{
	[Token(Token = "0x20000D2")]
	public static class ClassExtensions
	{
	}
	[Token(Token = "0x20000D3")]
	public static class EnumExtensions
	{
		[Token(Token = "0x6000717")]
		[Address(RVA = "0x1D838B4", Offset = "0x1D838B4", VA = "0x1D838B4")]
		public static string Name(this WVR_DeviceType e)
		{
			return null;
		}

		[Token(Token = "0x6000718")]
		[Address(RVA = "0x1D8391C", Offset = "0x1D8391C", VA = "0x1D8391C")]
		public static string Name(this WVR_InputId e)
		{
			return null;
		}
	}
}
namespace wvr.render
{
	[Token(Token = "0x20000D4")]
	public class WaveVR_DynamicResolution : MonoBehaviour
	{
		[Token(Token = "0x2000481")]
		public enum AQEvent
		{
			[Token(Token = "0x4001ACB")]
			None,
			[Token(Token = "0x4001ACC")]
			ManualHigher,
			[Token(Token = "0x4001ACD")]
			ManualLower,
			[Token(Token = "0x4001ACE")]
			Higher,
			[Token(Token = "0x4001ACF")]
			Lower
		}

		[Serializable]
		[Token(Token = "0x2000482")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9273DC", Offset = "0x9273DC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001AD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001AD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<float, string> <>9__23_0;

			[Token(Token = "0x600220D")]
			[Address(RVA = "0x1D88AC0", Offset = "0x1D88AC0", VA = "0x1D88AC0")]
			public <>c()
			{
			}

			[Token(Token = "0x600220E")]
			[Address(RVA = "0x1D88AC8", Offset = "0x1D88AC8", VA = "0x1D88AC8")]
			internal string <GetResScaleFromDMM>b__23_0(float p)
			{
				return null;
			}
		}

		[Token(Token = "0x4000712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x929404", Offset = "0x929404")]
		[SerializeField]
		private List<float> resolutionScaleList;

		[Token(Token = "0x4000713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x929450", Offset = "0x929450")]
		[SerializeField]
		private int defaultIndex;

		[Token(Token = "0x4000714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int index;

		[Token(Token = "0x4000715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x92949C", Offset = "0x92949C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x92949C", Offset = "0x92949C")]
		private int textSize;

		[Token(Token = "0x4000716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float currentLowerBound;

		[Token(Token = "0x4000717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool isInitialized;

		[Token(Token = "0x4000718")]
		private const string LOG_TAG = "WVRDynRes";

		[Token(Token = "0x4000719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x929504", Offset = "0x929504")]
		private AQEvent <CurrentAQEvent>k__BackingField;

		[Token(Token = "0x1700004C")]
		public float CurrentScale
		{
			[Token(Token = "0x6000719")]
			[Address(RVA = "0x1D87374", Offset = "0x1D87374", VA = "0x1D87374")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700004D")]
		public AQEvent CurrentAQEvent
		{
			[Token(Token = "0x600071A")]
			[Address(RVA = "0x1D873DC", Offset = "0x1D873DC", VA = "0x1D873DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938F00", Offset = "0x938F00")]
			get
			{
				return default(AQEvent);
			}
			[Token(Token = "0x600071B")]
			[Address(RVA = "0x1D873E4", Offset = "0x1D873E4", VA = "0x1D873E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938F10", Offset = "0x938F10")]
			private set
			{
			}
		}

		[Token(Token = "0x600071C")]
		[Address(RVA = "0x1D873EC", Offset = "0x1D873EC", VA = "0x1D873EC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600071D")]
		[Address(RVA = "0x1D87664", Offset = "0x1D87664", VA = "0x1D87664")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600071E")]
		[Address(RVA = "0x1D87838", Offset = "0x1D87838", VA = "0x1D87838")]
		public void Higher()
		{
		}

		[Token(Token = "0x600071F")]
		[Address(RVA = "0x1D87898", Offset = "0x1D87898", VA = "0x1D87898")]
		private void HigherHandler(params object[] args)
		{
		}

		[Token(Token = "0x6000720")]
		[Address(RVA = "0x1D87B94", Offset = "0x1D87B94", VA = "0x1D87B94")]
		public void Lower()
		{
		}

		[Token(Token = "0x6000721")]
		[Address(RVA = "0x1D87BF4", Offset = "0x1D87BF4", VA = "0x1D87BF4")]
		private void LowerHandler(params object[] args)
		{
		}

		[Token(Token = "0x6000722")]
		[Address(RVA = "0x1D847E8", Offset = "0x1D847E8", VA = "0x1D847E8")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000723")]
		[Address(RVA = "0x1D87F3C", Offset = "0x1D87F3C", VA = "0x1D87F3C")]
		private void InitDynamicResolution(WaveVR_Render waveVR_Render)
		{
		}

		[Token(Token = "0x6000724")]
		[Address(RVA = "0x1D8806C", Offset = "0x1D8806C", VA = "0x1D8806C")]
		private void SetListLowerBound()
		{
		}

		[Token(Token = "0x6000725")]
		[Address(RVA = "0x1D8832C", Offset = "0x1D8832C", VA = "0x1D8832C")]
		private float GetResScaleFromDMM()
		{
			return default(float);
		}

		[Token(Token = "0x6000726")]
		[Address(RVA = "0x1D87F6C", Offset = "0x1D87F6C", VA = "0x1D87F6C")]
		private void DefineLowerBound()
		{
		}

		[Token(Token = "0x6000727")]
		[Address(RVA = "0x1D88278", Offset = "0x1D88278", VA = "0x1D88278")]
		private void FormatResolutionScaleList()
		{
		}

		[Token(Token = "0x6000728")]
		[Address(RVA = "0x1D8890C", Offset = "0x1D8890C", VA = "0x1D8890C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000729")]
		[Address(RVA = "0x1D889DC", Offset = "0x1D889DC", VA = "0x1D889DC")]
		public WaveVR_DynamicResolution()
		{
		}
	}
	[Token(Token = "0x20000D5")]
	internal class FloatComparer : IComparer<float>
	{
		[Token(Token = "0x600072A")]
		[Address(RVA = "0x1D84E6C", Offset = "0x1D84E6C", VA = "0x1D84E6C", Slot = "4")]
		public int Compare(float x, float y)
		{
			return default(int);
		}

		[Token(Token = "0x600072B")]
		[Address(RVA = "0x1D84E94", Offset = "0x1D84E94", VA = "0x1D84E94")]
		public FloatComparer()
		{
		}
	}
	[Token(Token = "0x20000D6")]
	public class WaveVR_FoveatedRendering : MonoBehaviour
	{
		[Token(Token = "0x2000483")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9273EC", Offset = "0x9273EC")]
		private sealed class <SetEnableCoroutine>d__48 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001AD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001AD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001AD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WaveVR_FoveatedRendering <>4__this;

			[Token(Token = "0x170003D7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002212")]
				[Address(RVA = "0x1D8A280", Offset = "0x1D8A280", VA = "0x1D8A280", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002214")]
				[Address(RVA = "0x1D8A2F0", Offset = "0x1D8A2F0", VA = "0x1D8A2F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600220F")]
			[Address(RVA = "0x1D895F0", Offset = "0x1D895F0", VA = "0x1D895F0")]
			[DebuggerHidden]
			public <SetEnableCoroutine>d__48(int <>1__state)
			{
			}

			[Token(Token = "0x6002210")]
			[Address(RVA = "0x1D89FB8", Offset = "0x1D89FB8", VA = "0x1D89FB8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002211")]
			[Address(RVA = "0x1D89FBC", Offset = "0x1D89FBC", VA = "0x1D89FBC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002213")]
			[Address(RVA = "0x1D8A288", Offset = "0x1D8A288", VA = "0x1D8A288", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400071A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string TAG;

		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string StaticTrackedObjectName;

		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x929514", Offset = "0x929514")]
		private static WaveVR_FoveatedRendering <Instance>k__BackingField;

		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static bool useValuesInInspector;

		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x929524", Offset = "0x929524")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x929524", Offset = "0x929524")]
		[SerializeField]
		private float leftClearVisionFOV;

		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x92958C", Offset = "0x92958C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x92958C", Offset = "0x92958C")]
		[SerializeField]
		private float rightClearVisionFOV;

		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9295F4", Offset = "0x9295F4")]
		[SerializeField]
		private WVR_PeripheralQuality leftPeripheralQuality;

		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x929640", Offset = "0x929640")]
		[SerializeField]
		private WVR_PeripheralQuality rightPeripheralQuality;

		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x92968C", Offset = "0x92968C")]
		[SerializeField]
		private Vector3 staticFocalPoint;

		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private static bool isEnabled;

		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9296D8", Offset = "0x9296D8")]
		[SerializeField]
		private GameObject trackedObject;

		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject staticTrackedObject;

		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x929724", Offset = "0x929724")]
		private Vector2 <LeftNDCSpace>k__BackingField;

		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x929734", Offset = "0x929734")]
		private Vector2 <RightNDCSpace>k__BackingField;

		[Token(Token = "0x4000728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isDirty;

		[Token(Token = "0x1700004E")]
		public static WaveVR_FoveatedRendering Instance
		{
			[Token(Token = "0x600072C")]
			[Address(RVA = "0x1D88AF0", Offset = "0x1D88AF0", VA = "0x1D88AF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938F20", Offset = "0x938F20")]
			get
			{
				return null;
			}
			[Token(Token = "0x600072D")]
			[Address(RVA = "0x1D88B58", Offset = "0x1D88B58", VA = "0x1D88B58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938F30", Offset = "0x938F30")]
			private set
			{
			}
		}

		[Token(Token = "0x1700004F")]
		public float LeftClearVisionFOV
		{
			[Token(Token = "0x600072E")]
			[Address(RVA = "0x1D88BC4", Offset = "0x1D88BC4", VA = "0x1D88BC4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600072F")]
			[Address(RVA = "0x1D88BCC", Offset = "0x1D88BCC", VA = "0x1D88BCC")]
			set
			{
			}
		}

		[Token(Token = "0x17000050")]
		public float RightClearVisionFOV
		{
			[Token(Token = "0x6000730")]
			[Address(RVA = "0x1D88C5C", Offset = "0x1D88C5C", VA = "0x1D88C5C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000731")]
			[Address(RVA = "0x1D88C64", Offset = "0x1D88C64", VA = "0x1D88C64")]
			set
			{
			}
		}

		[Token(Token = "0x17000051")]
		public WVR_PeripheralQuality LeftPeripheralQuality
		{
			[Token(Token = "0x6000732")]
			[Address(RVA = "0x1D88CF4", Offset = "0x1D88CF4", VA = "0x1D88CF4")]
			get
			{
				return default(WVR_PeripheralQuality);
			}
			[Token(Token = "0x6000733")]
			[Address(RVA = "0x1D88CFC", Offset = "0x1D88CFC", VA = "0x1D88CFC")]
			set
			{
			}
		}

		[Token(Token = "0x17000052")]
		public WVR_PeripheralQuality RightPeripheralQuality
		{
			[Token(Token = "0x6000734")]
			[Address(RVA = "0x1D88D0C", Offset = "0x1D88D0C", VA = "0x1D88D0C")]
			get
			{
				return default(WVR_PeripheralQuality);
			}
			[Token(Token = "0x6000735")]
			[Address(RVA = "0x1D88D14", Offset = "0x1D88D14", VA = "0x1D88D14")]
			set
			{
			}
		}

		[Token(Token = "0x17000053")]
		public Vector3 StaticFocalPoint
		{
			[Token(Token = "0x6000736")]
			[Address(RVA = "0x1D88D24", Offset = "0x1D88D24", VA = "0x1D88D24")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000737")]
			[Address(RVA = "0x1D88D30", Offset = "0x1D88D30", VA = "0x1D88D30")]
			set
			{
			}
		}

		[Token(Token = "0x17000054")]
		public GameObject TrackedObject
		{
			[Token(Token = "0x6000738")]
			[Address(RVA = "0x1D88D44", Offset = "0x1D88D44", VA = "0x1D88D44")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000739")]
			[Address(RVA = "0x1D88D4C", Offset = "0x1D88D4C", VA = "0x1D88D4C")]
			set
			{
			}
		}

		[Token(Token = "0x17000055")]
		public Vector2 LeftNDCSpace
		{
			[Token(Token = "0x600073A")]
			[Address(RVA = "0x1D88D5C", Offset = "0x1D88D5C", VA = "0x1D88D5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938F40", Offset = "0x938F40")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x600073B")]
			[Address(RVA = "0x1D88D64", Offset = "0x1D88D64", VA = "0x1D88D64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938F50", Offset = "0x938F50")]
			private set
			{
			}
		}

		[Token(Token = "0x17000056")]
		public Vector2 RightNDCSpace
		{
			[Token(Token = "0x600073C")]
			[Address(RVA = "0x1D88D6C", Offset = "0x1D88D6C", VA = "0x1D88D6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938F60", Offset = "0x938F60")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x600073D")]
			[Address(RVA = "0x1D88D74", Offset = "0x1D88D74", VA = "0x1D88D74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938F70", Offset = "0x938F70")]
			private set
			{
			}
		}

		[Token(Token = "0x600073E")]
		[Address(RVA = "0x1D88D7C", Offset = "0x1D88D7C", VA = "0x1D88D7C")]
		public void Apply()
		{
		}

		[Token(Token = "0x600073F")]
		[Address(RVA = "0x1D892B0", Offset = "0x1D892B0", VA = "0x1D892B0")]
		private void ValidateFOV(float fov)
		{
		}

		[Token(Token = "0x6000740")]
		[Address(RVA = "0x1D89358", Offset = "0x1D89358", VA = "0x1D89358")]
		private void ValidateQuality(WVR_PeripheralQuality quality)
		{
		}

		[Token(Token = "0x6000741")]
		[Address(RVA = "0x1D893E4", Offset = "0x1D893E4", VA = "0x1D893E4")]
		public void Validate()
		{
		}

		[Token(Token = "0x6000742")]
		[Address(RVA = "0x1D8941C", Offset = "0x1D8941C", VA = "0x1D8941C")]
		public void Set(WVR_Eye eye, float clearVisionFOV, WVR_PeripheralQuality quality)
		{
		}

		[Token(Token = "0x6000743")]
		[Address(RVA = "0x1D89534", Offset = "0x1D89534", VA = "0x1D89534")]
		public void Set(float clearVisionFOV, WVR_PeripheralQuality quality)
		{
		}

		[Token(Token = "0x6000744")]
		[Address(RVA = "0x1D8957C", Offset = "0x1D8957C", VA = "0x1D8957C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x938F80", Offset = "0x938F80")]
		private IEnumerator SetEnableCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000745")]
		[Address(RVA = "0x1D8961C", Offset = "0x1D8961C", VA = "0x1D8961C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000746")]
		[Address(RVA = "0x1D896AC", Offset = "0x1D896AC", VA = "0x1D896AC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000747")]
		[Address(RVA = "0x1D897E0", Offset = "0x1D897E0", VA = "0x1D897E0")]
		private void CreateTrackedObject(WaveVR_Render render)
		{
		}

		[Token(Token = "0x6000748")]
		[Address(RVA = "0x1D89A3C", Offset = "0x1D89A3C", VA = "0x1D89A3C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000749")]
		[Address(RVA = "0x1D88DF0", Offset = "0x1D88DF0", VA = "0x1D88DF0")]
		private void doUpdate()
		{
		}

		[Token(Token = "0x600074A")]
		[Address(RVA = "0x1D89A4C", Offset = "0x1D89A4C", VA = "0x1D89A4C")]
		public static Vector2 WorldToNDC_GL(Camera camera, Vector3 worldPoint)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600074B")]
		[Address(RVA = "0x1D89BEC", Offset = "0x1D89BEC", VA = "0x1D89BEC")]
		private static void SetFoveatedRenderingParameterCheck(WVR_Eye eye, float ndcFocalPointX, float ndcFocalPointY, float clearVisionFOV, WVR_PeripheralQuality quality)
		{
		}

		[Token(Token = "0x600074C")]
		[Address(RVA = "0x1D89D58", Offset = "0x1D89D58", VA = "0x1D89D58")]
		public static void SetFoveatedRenderingParameter(WVR_Eye eye, float ndcFocalPointX, float ndcFocalPointY, float clearVisionFOV, WVR_PeripheralQuality quality)
		{
		}

		[Token(Token = "0x600074D")]
		[Address(RVA = "0x1D89E04", Offset = "0x1D89E04", VA = "0x1D89E04")]
		public static void SetFoveatedRenderingParameter(WVR_Eye eye, Vector2 ndcSpace, float clearVisionFOV, WVR_PeripheralQuality quality)
		{
		}

		[Token(Token = "0x600074E")]
		[Address(RVA = "0x1D89EB8", Offset = "0x1D89EB8", VA = "0x1D89EB8")]
		public WaveVR_FoveatedRendering()
		{
		}
	}
	[Token(Token = "0x20000D7")]
	public struct TextureConfig
	{
		[Token(Token = "0x4000729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int w;

		[Token(Token = "0x400072A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int h;

		[Token(Token = "0x400072B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int depth;

		[Token(Token = "0x400072C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public RenderTextureFormat format;

		[Token(Token = "0x400072D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool useMipMap;

		[Token(Token = "0x400072E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int anisoLevel;

		[Token(Token = "0x400072F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FilterMode filterMode;

		[Token(Token = "0x4000730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public TextureWrapMode wrapMode;

		[Token(Token = "0x4000731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int antiAliasing;

		[Token(Token = "0x6000750")]
		[Address(RVA = "0xA07154", Offset = "0xA07154", VA = "0xA07154", Slot = "0")]
		public override bool Equals(object a)
		{
			return default(bool);
		}

		[Token(Token = "0x6000751")]
		[Address(RVA = "0xA0715C", Offset = "0xA0715C", VA = "0xA0715C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000752")]
		[Address(RVA = "0x1D84FA0", Offset = "0x1D84FA0", VA = "0x1D84FA0")]
		public static bool operator ==(TextureConfig a, TextureConfig b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000753")]
		[Address(RVA = "0x1D84FE4", Offset = "0x1D84FE4", VA = "0x1D84FE4")]
		public static bool operator !=(TextureConfig a, TextureConfig b)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20000D8")]
	public class EyeConfig
	{
		[Token(Token = "0x4000732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x929744", Offset = "0x929744")]
		private bool <isBoth>k__BackingField;

		[Token(Token = "0x4000733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x929754", Offset = "0x929754")]
		private bool <isLeft>k__BackingField;

		[Token(Token = "0x4000734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x929764", Offset = "0x929764")]
		private bool <isRight>k__BackingField;

		[Token(Token = "0x17000057")]
		public bool isBoth
		{
			[Token(Token = "0x6000755")]
			[Address(RVA = "0x1D84E5C", Offset = "0x1D84E5C", VA = "0x1D84E5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938FE4", Offset = "0x938FE4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000756")]
			[Address(RVA = "0x1D84E48", Offset = "0x1D84E48", VA = "0x1D84E48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938FF4", Offset = "0x938FF4")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000058")]
		public bool isLeft
		{
			[Token(Token = "0x6000757")]
			[Address(RVA = "0x1D84E54", Offset = "0x1D84E54", VA = "0x1D84E54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939004", Offset = "0x939004")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000758")]
			[Address(RVA = "0x1D84E30", Offset = "0x1D84E30", VA = "0x1D84E30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939014", Offset = "0x939014")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000059")]
		public bool isRight
		{
			[Token(Token = "0x6000759")]
			[Address(RVA = "0x1D84E64", Offset = "0x1D84E64", VA = "0x1D84E64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939024", Offset = "0x939024")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600075A")]
			[Address(RVA = "0x1D84E3C", Offset = "0x1D84E3C", VA = "0x1D84E3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939034", Offset = "0x939034")]
			protected set
			{
			}
		}

		[Token(Token = "0x6000754")]
		[Address(RVA = "0x1D84DD8", Offset = "0x1D84DD8", VA = "0x1D84DD8")]
		public EyeConfig(WVR_Eye eye)
		{
		}
	}
	[Token(Token = "0x20000D9")]
	public abstract class TexturePool<T> : EyeConfig where T : class
	{
		[Token(Token = "0x4000735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private IntPtr queue;

		[Token(Token = "0x4000736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<T> rts;

		[Token(Token = "0x4000737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<int, T> textures;

		[Token(Token = "0x4000738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<int, int> depthes;

		[Token(Token = "0x4000739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<int, TextureConfig> cfgs;

		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected TextureConfig cfg;

		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x929774", Offset = "0x929774")]
		private int <size>k__BackingField;

		[Token(Token = "0x400073C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x929784", Offset = "0x929784")]
		private T <currentRt>k__BackingField;

		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x929794", Offset = "0x929794")]
		private int <currentPtr>k__BackingField;

		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9297A4", Offset = "0x9297A4")]
		private int <currentDepthPtr>k__BackingField;

		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9297B4", Offset = "0x9297B4")]
		private bool <isReleased>k__BackingField;

		[Token(Token = "0x4000740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9297C4", Offset = "0x9297C4")]
		private bool <isTextureChanged>k__BackingField;

		[Token(Token = "0x4000741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int[] keyArray;

		[Token(Token = "0x1700005A")]
		public TextureConfig Config
		{
			[Token(Token = "0x600075B")]
			get
			{
				return default(TextureConfig);
			}
			[Token(Token = "0x600075C")]
			set
			{
			}
		}

		[Token(Token = "0x1700005B")]
		public int size
		{
			[Token(Token = "0x600075D")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939044", Offset = "0x939044")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600075E")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939054", Offset = "0x939054")]
			private set
			{
			}
		}

		[Token(Token = "0x1700005C")]
		public T currentRt
		{
			[Token(Token = "0x600075F")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939064", Offset = "0x939064")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000760")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939074", Offset = "0x939074")]
			private set
			{
			}
		}

		[Token(Token = "0x1700005D")]
		public int currentPtr
		{
			[Token(Token = "0x6000761")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939084", Offset = "0x939084")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000762")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939094", Offset = "0x939094")]
			private set
			{
			}
		}

		[Token(Token = "0x1700005E")]
		public int currentDepthPtr
		{
			[Token(Token = "0x6000763")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9390A4", Offset = "0x9390A4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000764")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9390B4", Offset = "0x9390B4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700005F")]
		public bool isReleased
		{
			[Token(Token = "0x6000765")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9390C4", Offset = "0x9390C4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000766")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9390D4", Offset = "0x9390D4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000060")]
		public bool isTextureChanged
		{
			[Token(Token = "0x6000767")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9390E4", Offset = "0x9390E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000768")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9390F4", Offset = "0x9390F4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000769")]
		protected abstract T CreateTexture(TextureConfig cfg);

		[Token(Token = "0x600076A")]
		protected abstract int GetNativePtr(T rt);

		[Token(Token = "0x600076B")]
		protected abstract int GetNativeDepthBufferPtr(T rt);

		[Token(Token = "0x600076C")]
		protected abstract void ReleaseTexture(T rt);

		[Token(Token = "0x600076D")]
		public TexturePool(TextureConfig cfg, int size, WVR_Eye eye)
		{
		}

		[Token(Token = "0x600076E")]
		~TexturePool()
		{
		}

		[Token(Token = "0x600076F")]
		private T GetRenderTextureByPtr(int ptr)
		{
			return null;
		}

		[Token(Token = "0x6000770")]
		private int GetDepthByPtr(int ptr)
		{
			return default(int);
		}

		[Token(Token = "0x6000771")]
		public void next()
		{
		}

		[Token(Token = "0x6000772")]
		private bool CfgValidate(int nativePtr)
		{
			return default(bool);
		}

		[Token(Token = "0x6000773")]
		private void ReplaceCurrentWithNewTexture()
		{
		}

		[Token(Token = "0x6000774")]
		public void Release()
		{
		}
	}
	[Token(Token = "0x20000DA")]
	public class TexturePool2DArray : TexturePool<Texture2DArray>
	{
		[Token(Token = "0x6000775")]
		[Address(RVA = "0x1D869E0", Offset = "0x1D869E0", VA = "0x1D869E0")]
		public TexturePool2DArray(TextureConfig cfg, int size)
		{
		}

		[Token(Token = "0x6000776")]
		[Address(RVA = "0x1D86A80", Offset = "0x1D86A80", VA = "0x1D86A80", Slot = "4")]
		protected override Texture2DArray CreateTexture(TextureConfig cfg)
		{
			return null;
		}

		[Token(Token = "0x6000777")]
		[Address(RVA = "0x1D86B6C", Offset = "0x1D86B6C", VA = "0x1D86B6C", Slot = "5")]
		protected override int GetNativePtr(Texture2DArray rt)
		{
			return default(int);
		}

		[Token(Token = "0x6000778")]
		[Address(RVA = "0x1D86C0C", Offset = "0x1D86C0C", VA = "0x1D86C0C", Slot = "6")]
		protected override int GetNativeDepthBufferPtr(Texture2DArray rt)
		{
			return default(int);
		}

		[Token(Token = "0x6000779")]
		[Address(RVA = "0x1D86C14", Offset = "0x1D86C14", VA = "0x1D86C14", Slot = "7")]
		protected override void ReleaseTexture(Texture2DArray rt)
		{
		}
	}
	[Token(Token = "0x20000DB")]
	public class TexturePoolRenderTexture2DArray : TexturePool<RenderTexture>
	{
		[Token(Token = "0x600077A")]
		[Address(RVA = "0x1D8602C", Offset = "0x1D8602C", VA = "0x1D8602C")]
		public TexturePoolRenderTexture2DArray(TextureConfig cfg, int size)
		{
		}

		[Token(Token = "0x600077B")]
		[Address(RVA = "0x1D86F8C", Offset = "0x1D86F8C", VA = "0x1D86F8C", Slot = "4")]
		protected override RenderTexture CreateTexture(TextureConfig cfg)
		{
			return null;
		}

		[Token(Token = "0x600077C")]
		[Address(RVA = "0x1D8717C", Offset = "0x1D8717C", VA = "0x1D8717C", Slot = "5")]
		protected override int GetNativePtr(RenderTexture rt)
		{
			return default(int);
		}

		[Token(Token = "0x600077D")]
		[Address(RVA = "0x1D8721C", Offset = "0x1D8721C", VA = "0x1D8721C", Slot = "6")]
		protected override int GetNativeDepthBufferPtr(RenderTexture rt)
		{
			return default(int);
		}

		[Token(Token = "0x600077E")]
		[Address(RVA = "0x1D872BC", Offset = "0x1D872BC", VA = "0x1D872BC", Slot = "7")]
		protected override void ReleaseTexture(RenderTexture rt)
		{
		}
	}
	[Token(Token = "0x20000DC")]
	public class TexturePoolRenderTexture : TexturePool<RenderTexture>
	{
		[Token(Token = "0x600077F")]
		[Address(RVA = "0x1D860CC", Offset = "0x1D860CC", VA = "0x1D860CC")]
		public TexturePoolRenderTexture(TextureConfig cfg, int size, WVR_Eye eye)
		{
		}

		[Token(Token = "0x6000780")]
		[Address(RVA = "0x1D86C18", Offset = "0x1D86C18", VA = "0x1D86C18", Slot = "4")]
		protected override RenderTexture CreateTexture(TextureConfig cfg)
		{
			return null;
		}

		[Token(Token = "0x6000781")]
		[Address(RVA = "0x1D86D94", Offset = "0x1D86D94", VA = "0x1D86D94", Slot = "5")]
		protected override int GetNativePtr(RenderTexture rt)
		{
			return default(int);
		}

		[Token(Token = "0x6000782")]
		[Address(RVA = "0x1D86E34", Offset = "0x1D86E34", VA = "0x1D86E34", Slot = "6")]
		protected override int GetNativeDepthBufferPtr(RenderTexture rt)
		{
			return default(int);
		}

		[Token(Token = "0x6000783")]
		[Address(RVA = "0x1D86ED4", Offset = "0x1D86ED4", VA = "0x1D86ED4", Slot = "7")]
		protected override void ReleaseTexture(RenderTexture rt)
		{
		}
	}
	[Token(Token = "0x20000DD")]
	public class TextureManager
	{
		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string TAG;

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int poolSize;

		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9297D4", Offset = "0x9297D4")]
		private bool <IsSinglePass>k__BackingField;

		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9297E4", Offset = "0x9297E4")]
		private bool <AllowAntiAliasing>k__BackingField;

		[Token(Token = "0x4000746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9297F4", Offset = "0x9297F4")]
		private TexturePoolRenderTexture <left>k__BackingField;

		[Token(Token = "0x4000747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x929804", Offset = "0x929804")]
		private TexturePoolRenderTexture <right>k__BackingField;

		[Token(Token = "0x4000748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x929814", Offset = "0x929814")]
		private TexturePoolRenderTexture2DArray <both>k__BackingField;

		[Token(Token = "0x4000749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int screenWidth;

		[Token(Token = "0x400074A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int screenHeight;

		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly float pixelDensity;

		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float resolutionScale;

		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x929824", Offset = "0x929824")]
		private bool <isTextureChanged>k__BackingField;

		[Token(Token = "0x17000061")]
		public bool IsSinglePass
		{
			[Token(Token = "0x6000784")]
			[Address(RVA = "0x1D85020", Offset = "0x1D85020", VA = "0x1D85020")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939104", Offset = "0x939104")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000785")]
			[Address(RVA = "0x1D85028", Offset = "0x1D85028", VA = "0x1D85028")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939114", Offset = "0x939114")]
			private set
			{
			}
		}

		[Token(Token = "0x17000062")]
		public bool AllowAntiAliasing
		{
			[Token(Token = "0x6000786")]
			[Address(RVA = "0x1D85034", Offset = "0x1D85034", VA = "0x1D85034")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939124", Offset = "0x939124")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000787")]
			[Address(RVA = "0x1D8503C", Offset = "0x1D8503C", VA = "0x1D8503C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939134", Offset = "0x939134")]
			private set
			{
			}
		}

		[Token(Token = "0x17000063")]
		public TexturePoolRenderTexture left
		{
			[Token(Token = "0x6000788")]
			[Address(RVA = "0x1D85048", Offset = "0x1D85048", VA = "0x1D85048")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939144", Offset = "0x939144")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000789")]
			[Address(RVA = "0x1D85050", Offset = "0x1D85050", VA = "0x1D85050")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939154", Offset = "0x939154")]
			private set
			{
			}
		}

		[Token(Token = "0x17000064")]
		public TexturePoolRenderTexture right
		{
			[Token(Token = "0x600078A")]
			[Address(RVA = "0x1D85058", Offset = "0x1D85058", VA = "0x1D85058")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939164", Offset = "0x939164")]
			get
			{
				return null;
			}
			[Token(Token = "0x600078B")]
			[Address(RVA = "0x1D85060", Offset = "0x1D85060", VA = "0x1D85060")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939174", Offset = "0x939174")]
			private set
			{
			}
		}

		[Token(Token = "0x17000065")]
		public TexturePoolRenderTexture2DArray both
		{
			[Token(Token = "0x600078C")]
			[Address(RVA = "0x1D85068", Offset = "0x1D85068", VA = "0x1D85068")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939184", Offset = "0x939184")]
			get
			{
				return null;
			}
			[Token(Token = "0x600078D")]
			[Address(RVA = "0x1D85070", Offset = "0x1D85070", VA = "0x1D85070")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939194", Offset = "0x939194")]
			private set
			{
			}
		}

		[Token(Token = "0x17000066")]
		public float PixelDensity
		{
			[Token(Token = "0x600078E")]
			[Address(RVA = "0x1D85078", Offset = "0x1D85078", VA = "0x1D85078")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000067")]
		public float ResolutionScale
		{
			[Token(Token = "0x600078F")]
			[Address(RVA = "0x1D85080", Offset = "0x1D85080", VA = "0x1D85080")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000068")]
		public float FinalScale
		{
			[Token(Token = "0x6000790")]
			[Address(RVA = "0x1D85088", Offset = "0x1D85088", VA = "0x1D85088")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000069")]
		public bool isTextureChanged
		{
			[Token(Token = "0x6000791")]
			[Address(RVA = "0x1D85094", Offset = "0x1D85094", VA = "0x1D85094")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9391A4", Offset = "0x9391A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000792")]
			[Address(RVA = "0x1D8509C", Offset = "0x1D8509C", VA = "0x1D8509C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9391B4", Offset = "0x9391B4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000793")]
		[Address(RVA = "0x1D850A8", Offset = "0x1D850A8", VA = "0x1D850A8")]
		public TextureManager(TextureManager oldTextureManager, bool isSinglePass, bool allowAntiAliasing, float pixelDensity = 1f, float resolutionScale = 1f)
		{
		}

		[Token(Token = "0x6000794")]
		[Address(RVA = "0x1D85DA0", Offset = "0x1D85DA0", VA = "0x1D85DA0")]
		public void ReleaseTexturePools()
		{
		}

		[Token(Token = "0x6000795")]
		[Address(RVA = "0x1D85F68", Offset = "0x1D85F68", VA = "0x1D85F68")]
		private float GetPreviewImageRatio()
		{
			return default(float);
		}

		[Token(Token = "0x6000796")]
		[Address(RVA = "0x1D85F70", Offset = "0x1D85F70", VA = "0x1D85F70")]
		private static int ToMultipleOfTwo(int value)
		{
			return default(int);
		}

		[Token(Token = "0x6000797")]
		[Address(RVA = "0x1D854B0", Offset = "0x1D854B0", VA = "0x1D854B0")]
		public void reset()
		{
		}

		[Token(Token = "0x6000798")]
		[Address(RVA = "0x1D85F7C", Offset = "0x1D85F7C", VA = "0x1D85F7C")]
		public bool validate()
		{
			return default(bool);
		}

		[Token(Token = "0x6000799")]
		[Address(RVA = "0x1D86178", Offset = "0x1D86178", VA = "0x1D86178")]
		public void Resize(float resolutionScale = 1f)
		{
		}

		[Token(Token = "0x600079A")]
		[Address(RVA = "0x1D86580", Offset = "0x1D86580", VA = "0x1D86580")]
		public void Next()
		{
		}

		[Token(Token = "0x600079B")]
		[Address(RVA = "0x1D86684", Offset = "0x1D86684", VA = "0x1D86684")]
		public int GetNativePtr(WVR_Eye eye)
		{
			return default(int);
		}

		[Token(Token = "0x600079C")]
		[Address(RVA = "0x1D86730", Offset = "0x1D86730", VA = "0x1D86730")]
		public int GetNativePtrLR(bool isLeftEye)
		{
			return default(int);
		}

		[Token(Token = "0x600079D")]
		[Address(RVA = "0x1D867A8", Offset = "0x1D867A8", VA = "0x1D867A8")]
		public int GetNativePtrBoth()
		{
			return default(int);
		}

		[Token(Token = "0x600079E")]
		[Address(RVA = "0x1D86808", Offset = "0x1D86808", VA = "0x1D86808")]
		public Texture GetRenderTexture(WVR_Eye eye)
		{
			return null;
		}

		[Token(Token = "0x600079F")]
		[Address(RVA = "0x1D868AC", Offset = "0x1D868AC", VA = "0x1D868AC")]
		public RenderTexture GetRenderTextureBoth()
		{
			return null;
		}

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0x1D8690C", Offset = "0x1D8690C", VA = "0x1D8690C")]
		public RenderTexture GetRenderTextureLR(bool isLeftEye)
		{
			return null;
		}
	}
}
namespace wvr.render.gl
{
	[Token(Token = "0x20000DE")]
	public static class UGL
	{
		[Token(Token = "0x2000484")]
		public enum GLenum2
		{
			[Token(Token = "0x4001AD6")]
			GL_DEPTH_BUFFER_BIT = 256,
			[Token(Token = "0x4001AD7")]
			GL_STENCIL_BUFFER_BIT = 1024,
			[Token(Token = "0x4001AD8")]
			GL_COLOR_BUFFER_BIT = 16384,
			[Token(Token = "0x4001AD9")]
			GL_FALSE = 0,
			[Token(Token = "0x4001ADA")]
			GL_TRUE = 1,
			[Token(Token = "0x4001ADB")]
			GL_POINTS = 0,
			[Token(Token = "0x4001ADC")]
			GL_LINES = 1,
			[Token(Token = "0x4001ADD")]
			GL_LINE_LOOP = 2,
			[Token(Token = "0x4001ADE")]
			GL_LINE_STRIP = 3,
			[Token(Token = "0x4001ADF")]
			GL_TRIANGLES = 4,
			[Token(Token = "0x4001AE0")]
			GL_TRIANGLE_STRIP = 5,
			[Token(Token = "0x4001AE1")]
			GL_TRIANGLE_FAN = 6,
			[Token(Token = "0x4001AE2")]
			GL_ZERO = 0,
			[Token(Token = "0x4001AE3")]
			GL_ONE = 1,
			[Token(Token = "0x4001AE4")]
			GL_SRC_COLOR = 768,
			[Token(Token = "0x4001AE5")]
			GL_ONE_MINUS_SRC_COLOR = 769,
			[Token(Token = "0x4001AE6")]
			GL_SRC_ALPHA = 770,
			[Token(Token = "0x4001AE7")]
			GL_ONE_MINUS_SRC_ALPHA = 771,
			[Token(Token = "0x4001AE8")]
			GL_DST_ALPHA = 772,
			[Token(Token = "0x4001AE9")]
			GL_ONE_MINUS_DST_ALPHA = 773,
			[Token(Token = "0x4001AEA")]
			GL_DST_COLOR = 774,
			[Token(Token = "0x4001AEB")]
			GL_ONE_MINUS_DST_COLOR = 775,
			[Token(Token = "0x4001AEC")]
			GL_SRC_ALPHA_SATURATE = 776,
			[Token(Token = "0x4001AED")]
			GL_FUNC_ADD = 32774,
			[Token(Token = "0x4001AEE")]
			GL_BLEND_EQUATION = 32777,
			[Token(Token = "0x4001AEF")]
			GL_BLEND_EQUATION_RGB = 32777,
			[Token(Token = "0x4001AF0")]
			GL_BLEND_EQUATION_ALPHA = 34877,
			[Token(Token = "0x4001AF1")]
			GL_FUNC_SUBTRACT = 32778,
			[Token(Token = "0x4001AF2")]
			GL_FUNC_REVERSE_SUBTRACT = 32779,
			[Token(Token = "0x4001AF3")]
			GL_BLEND_DST_RGB = 32968,
			[Token(Token = "0x4001AF4")]
			GL_BLEND_SRC_RGB = 32969,
			[Token(Token = "0x4001AF5")]
			GL_BLEND_DST_ALPHA = 32970,
			[Token(Token = "0x4001AF6")]
			GL_BLEND_SRC_ALPHA = 32971,
			[Token(Token = "0x4001AF7")]
			GL_CONSTANT_COLOR = 32769,
			[Token(Token = "0x4001AF8")]
			GL_ONE_MINUS_CONSTANT_COLOR = 32770,
			[Token(Token = "0x4001AF9")]
			GL_CONSTANT_ALPHA = 32771,
			[Token(Token = "0x4001AFA")]
			GL_ONE_MINUS_CONSTANT_ALPHA = 32772,
			[Token(Token = "0x4001AFB")]
			GL_BLEND_COLOR = 32773,
			[Token(Token = "0x4001AFC")]
			GL_ARRAY_BUFFER = 34962,
			[Token(Token = "0x4001AFD")]
			GL_ELEMENT_ARRAY_BUFFER = 34963,
			[Token(Token = "0x4001AFE")]
			GL_ARRAY_BUFFER_BINDING = 34964,
			[Token(Token = "0x4001AFF")]
			GL_ELEMENT_ARRAY_BUFFER_BINDING = 34965,
			[Token(Token = "0x4001B00")]
			GL_STREAM_DRAW = 35040,
			[Token(Token = "0x4001B01")]
			GL_STATIC_DRAW = 35044,
			[Token(Token = "0x4001B02")]
			GL_DYNAMIC_DRAW = 35048,
			[Token(Token = "0x4001B03")]
			GL_BUFFER_SIZE = 34660,
			[Token(Token = "0x4001B04")]
			GL_BUFFER_USAGE = 34661,
			[Token(Token = "0x4001B05")]
			GL_CURRENT_VERTEX_ATTRIB = 34342,
			[Token(Token = "0x4001B06")]
			GL_FRONT = 1028,
			[Token(Token = "0x4001B07")]
			GL_BACK = 1029,
			[Token(Token = "0x4001B08")]
			GL_FRONT_AND_BACK = 1032,
			[Token(Token = "0x4001B09")]
			GL_TEXTURE_2D = 3553,
			[Token(Token = "0x4001B0A")]
			GL_CULL_FACE = 2884,
			[Token(Token = "0x4001B0B")]
			GL_BLEND = 3042,
			[Token(Token = "0x4001B0C")]
			GL_DITHER = 3024,
			[Token(Token = "0x4001B0D")]
			GL_STENCIL_TEST = 2960,
			[Token(Token = "0x4001B0E")]
			GL_DEPTH_TEST = 2929,
			[Token(Token = "0x4001B0F")]
			GL_SCISSOR_TEST = 3089,
			[Token(Token = "0x4001B10")]
			GL_POLYGON_OFFSET_FILL = 32823,
			[Token(Token = "0x4001B11")]
			GL_SAMPLE_ALPHA_TO_COVERAGE = 32926,
			[Token(Token = "0x4001B12")]
			GL_SAMPLE_COVERAGE = 32928,
			[Token(Token = "0x4001B13")]
			GL_NO_ERROR = 0,
			[Token(Token = "0x4001B14")]
			GL_INVALID_ENUM = 1280,
			[Token(Token = "0x4001B15")]
			GL_INVALID_VALUE = 1281,
			[Token(Token = "0x4001B16")]
			GL_INVALID_OPERATION = 1282,
			[Token(Token = "0x4001B17")]
			GL_OUT_OF_MEMORY = 1285,
			[Token(Token = "0x4001B18")]
			GL_CW = 2304,
			[Token(Token = "0x4001B19")]
			GL_CCW = 2305,
			[Token(Token = "0x4001B1A")]
			GL_LINE_WIDTH = 2849,
			[Token(Token = "0x4001B1B")]
			GL_ALIASED_POINT_SIZE_RANGE = 33901,
			[Token(Token = "0x4001B1C")]
			GL_ALIASED_LINE_WIDTH_RANGE = 33902,
			[Token(Token = "0x4001B1D")]
			GL_CULL_FACE_MODE = 2885,
			[Token(Token = "0x4001B1E")]
			GL_FRONT_FACE = 2886,
			[Token(Token = "0x4001B1F")]
			GL_DEPTH_RANGE = 2928,
			[Token(Token = "0x4001B20")]
			GL_DEPTH_WRITEMASK = 2930,
			[Token(Token = "0x4001B21")]
			GL_DEPTH_CLEAR_VALUE = 2931,
			[Token(Token = "0x4001B22")]
			GL_DEPTH_FUNC = 2932,
			[Token(Token = "0x4001B23")]
			GL_STENCIL_CLEAR_VALUE = 2961,
			[Token(Token = "0x4001B24")]
			GL_STENCIL_FUNC = 2962,
			[Token(Token = "0x4001B25")]
			GL_STENCIL_FAIL = 2964,
			[Token(Token = "0x4001B26")]
			GL_STENCIL_PASS_DEPTH_FAIL = 2965,
			[Token(Token = "0x4001B27")]
			GL_STENCIL_PASS_DEPTH_PASS = 2966,
			[Token(Token = "0x4001B28")]
			GL_STENCIL_REF = 2967,
			[Token(Token = "0x4001B29")]
			GL_STENCIL_VALUE_MASK = 2963,
			[Token(Token = "0x4001B2A")]
			GL_STENCIL_WRITEMASK = 2968,
			[Token(Token = "0x4001B2B")]
			GL_STENCIL_BACK_FUNC = 34816,
			[Token(Token = "0x4001B2C")]
			GL_STENCIL_BACK_FAIL = 34817,
			[Token(Token = "0x4001B2D")]
			GL_STENCIL_BACK_PASS_DEPTH_FAIL = 34818,
			[Token(Token = "0x4001B2E")]
			GL_STENCIL_BACK_PASS_DEPTH_PASS = 34819,
			[Token(Token = "0x4001B2F")]
			GL_STENCIL_BACK_REF = 36003,
			[Token(Token = "0x4001B30")]
			GL_STENCIL_BACK_VALUE_MASK = 36004,
			[Token(Token = "0x4001B31")]
			GL_STENCIL_BACK_WRITEMASK = 36005,
			[Token(Token = "0x4001B32")]
			GL_VIEWPORT = 2978,
			[Token(Token = "0x4001B33")]
			GL_SCISSOR_BOX = 3088,
			[Token(Token = "0x4001B34")]
			GL_COLOR_CLEAR_VALUE = 3106,
			[Token(Token = "0x4001B35")]
			GL_COLOR_WRITEMASK = 3107,
			[Token(Token = "0x4001B36")]
			GL_UNPACK_ALIGNMENT = 3317,
			[Token(Token = "0x4001B37")]
			GL_PACK_ALIGNMENT = 3333,
			[Token(Token = "0x4001B38")]
			GL_MAX_TEXTURE_SIZE = 3379,
			[Token(Token = "0x4001B39")]
			GL_MAX_VIEWPORT_DIMS = 3386,
			[Token(Token = "0x4001B3A")]
			GL_SUBPIXEL_BITS = 3408,
			[Token(Token = "0x4001B3B")]
			GL_RED_BITS = 3410,
			[Token(Token = "0x4001B3C")]
			GL_GREEN_BITS = 3411,
			[Token(Token = "0x4001B3D")]
			GL_BLUE_BITS = 3412,
			[Token(Token = "0x4001B3E")]
			GL_ALPHA_BITS = 3413,
			[Token(Token = "0x4001B3F")]
			GL_DEPTH_BITS = 3414,
			[Token(Token = "0x4001B40")]
			GL_STENCIL_BITS = 3415,
			[Token(Token = "0x4001B41")]
			GL_POLYGON_OFFSET_UNITS = 10752,
			[Token(Token = "0x4001B42")]
			GL_POLYGON_OFFSET_FACTOR = 32824,
			[Token(Token = "0x4001B43")]
			GL_TEXTURE_BINDING_2D = 32873,
			[Token(Token = "0x4001B44")]
			GL_SAMPLE_BUFFERS = 32936,
			[Token(Token = "0x4001B45")]
			GL_SAMPLES = 32937,
			[Token(Token = "0x4001B46")]
			GL_SAMPLE_COVERAGE_VALUE = 32938,
			[Token(Token = "0x4001B47")]
			GL_SAMPLE_COVERAGE_INVERT = 32939,
			[Token(Token = "0x4001B48")]
			GL_NUM_COMPRESSED_TEXTURE_FORMATS = 34466,
			[Token(Token = "0x4001B49")]
			GL_COMPRESSED_TEXTURE_FORMATS = 34467,
			[Token(Token = "0x4001B4A")]
			GL_DONT_CARE = 4352,
			[Token(Token = "0x4001B4B")]
			GL_FASTEST = 4353,
			[Token(Token = "0x4001B4C")]
			GL_NICEST = 4354,
			[Token(Token = "0x4001B4D")]
			GL_GENERATE_MIPMAP_HINT = 33170,
			[Token(Token = "0x4001B4E")]
			GL_BYTE = 5120,
			[Token(Token = "0x4001B4F")]
			GL_UNSIGNED_BYTE = 5121,
			[Token(Token = "0x4001B50")]
			GL_SHORT = 5122,
			[Token(Token = "0x4001B51")]
			GL_UNSIGNED_SHORT = 5123,
			[Token(Token = "0x4001B52")]
			GL_INT = 5124,
			[Token(Token = "0x4001B53")]
			GL_UNSIGNED_INT = 5125,
			[Token(Token = "0x4001B54")]
			GL_FLOAT = 5126,
			[Token(Token = "0x4001B55")]
			GL_FIXED = 5132,
			[Token(Token = "0x4001B56")]
			GL_DEPTH_COMPONENT = 6402,
			[Token(Token = "0x4001B57")]
			GL_ALPHA = 6406,
			[Token(Token = "0x4001B58")]
			GL_RGB = 6407,
			[Token(Token = "0x4001B59")]
			GL_RGBA = 6408,
			[Token(Token = "0x4001B5A")]
			GL_LUMINANCE = 6409,
			[Token(Token = "0x4001B5B")]
			GL_LUMINANCE_ALPHA = 6410,
			[Token(Token = "0x4001B5C")]
			GL_UNSIGNED_SHORT_4_4_4_4 = 32819,
			[Token(Token = "0x4001B5D")]
			GL_UNSIGNED_SHORT_5_5_5_1 = 32820,
			[Token(Token = "0x4001B5E")]
			GL_UNSIGNED_SHORT_5_6_5 = 33635,
			[Token(Token = "0x4001B5F")]
			GL_FRAGMENT_SHADER = 35632,
			[Token(Token = "0x4001B60")]
			GL_VERTEX_SHADER = 35633,
			[Token(Token = "0x4001B61")]
			GL_MAX_VERTEX_ATTRIBS = 34921,
			[Token(Token = "0x4001B62")]
			GL_MAX_VERTEX_UNIFORM_VECTORS = 36347,
			[Token(Token = "0x4001B63")]
			GL_MAX_VARYING_VECTORS = 36348,
			[Token(Token = "0x4001B64")]
			GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = 35661,
			[Token(Token = "0x4001B65")]
			GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = 35660,
			[Token(Token = "0x4001B66")]
			GL_MAX_TEXTURE_IMAGE_UNITS = 34930,
			[Token(Token = "0x4001B67")]
			GL_MAX_FRAGMENT_UNIFORM_VECTORS = 36349,
			[Token(Token = "0x4001B68")]
			GL_SHADER_TYPE = 35663,
			[Token(Token = "0x4001B69")]
			GL_DELETE_STATUS = 35712,
			[Token(Token = "0x4001B6A")]
			GL_LINK_STATUS = 35714,
			[Token(Token = "0x4001B6B")]
			GL_VALIDATE_STATUS = 35715,
			[Token(Token = "0x4001B6C")]
			GL_ATTACHED_SHADERS = 35717,
			[Token(Token = "0x4001B6D")]
			GL_ACTIVE_UNIFORMS = 35718,
			[Token(Token = "0x4001B6E")]
			GL_ACTIVE_UNIFORM_MAX_LENGTH = 35719,
			[Token(Token = "0x4001B6F")]
			GL_ACTIVE_ATTRIBUTES = 35721,
			[Token(Token = "0x4001B70")]
			GL_ACTIVE_ATTRIBUTE_MAX_LENGTH = 35722,
			[Token(Token = "0x4001B71")]
			GL_SHADING_LANGUAGE_VERSION = 35724,
			[Token(Token = "0x4001B72")]
			GL_CURRENT_PROGRAM = 35725,
			[Token(Token = "0x4001B73")]
			GL_NEVER = 512,
			[Token(Token = "0x4001B74")]
			GL_LESS = 513,
			[Token(Token = "0x4001B75")]
			GL_EQUAL = 514,
			[Token(Token = "0x4001B76")]
			GL_LEQUAL = 515,
			[Token(Token = "0x4001B77")]
			GL_GREATER = 516,
			[Token(Token = "0x4001B78")]
			GL_NOTEQUAL = 517,
			[Token(Token = "0x4001B79")]
			GL_GEQUAL = 518,
			[Token(Token = "0x4001B7A")]
			GL_ALWAYS = 519,
			[Token(Token = "0x4001B7B")]
			GL_KEEP = 7680,
			[Token(Token = "0x4001B7C")]
			GL_REPLACE = 7681,
			[Token(Token = "0x4001B7D")]
			GL_INCR = 7682,
			[Token(Token = "0x4001B7E")]
			GL_DECR = 7683,
			[Token(Token = "0x4001B7F")]
			GL_INVERT = 5386,
			[Token(Token = "0x4001B80")]
			GL_INCR_WRAP = 34055,
			[Token(Token = "0x4001B81")]
			GL_DECR_WRAP = 34056,
			[Token(Token = "0x4001B82")]
			GL_VENDOR = 7936,
			[Token(Token = "0x4001B83")]
			GL_RENDERER = 7937,
			[Token(Token = "0x4001B84")]
			GL_VERSION = 7938,
			[Token(Token = "0x4001B85")]
			GL_EXTENSIONS = 7939,
			[Token(Token = "0x4001B86")]
			GL_NEAREST = 9728,
			[Token(Token = "0x4001B87")]
			GL_LINEAR = 9729,
			[Token(Token = "0x4001B88")]
			GL_NEAREST_MIPMAP_NEAREST = 9984,
			[Token(Token = "0x4001B89")]
			GL_LINEAR_MIPMAP_NEAREST = 9985,
			[Token(Token = "0x4001B8A")]
			GL_NEAREST_MIPMAP_LINEAR = 9986,
			[Token(Token = "0x4001B8B")]
			GL_LINEAR_MIPMAP_LINEAR = 9987,
			[Token(Token = "0x4001B8C")]
			GL_TEXTURE_MAG_FILTER = 10240,
			[Token(Token = "0x4001B8D")]
			GL_TEXTURE_MIN_FILTER = 10241,
			[Token(Token = "0x4001B8E")]
			GL_TEXTURE_WRAP_S = 10242,
			[Token(Token = "0x4001B8F")]
			GL_TEXTURE_WRAP_T = 10243,
			[Token(Token = "0x4001B90")]
			GL_TEXTURE = 5890,
			[Token(Token = "0x4001B91")]
			GL_TEXTURE_CUBE_MAP = 34067,
			[Token(Token = "0x4001B92")]
			GL_TEXTURE_BINDING_CUBE_MAP = 34068,
			[Token(Token = "0x4001B93")]
			GL_TEXTURE_CUBE_MAP_POSITIVE_X = 34069,
			[Token(Token = "0x4001B94")]
			GL_TEXTURE_CUBE_MAP_NEGATIVE_X = 34070,
			[Token(Token = "0x4001B95")]
			GL_TEXTURE_CUBE_MAP_POSITIVE_Y = 34071,
			[Token(Token = "0x4001B96")]
			GL_TEXTURE_CUBE_MAP_NEGATIVE_Y = 34072,
			[Token(Token = "0x4001B97")]
			GL_TEXTURE_CUBE_MAP_POSITIVE_Z = 34073,
			[Token(Token = "0x4001B98")]
			GL_TEXTURE_CUBE_MAP_NEGATIVE_Z = 34074,
			[Token(Token = "0x4001B99")]
			GL_MAX_CUBE_MAP_TEXTURE_SIZE = 34076,
			[Token(Token = "0x4001B9A")]
			GL_TEXTURE0 = 33984,
			[Token(Token = "0x4001B9B")]
			GL_TEXTURE1 = 33985,
			[Token(Token = "0x4001B9C")]
			GL_TEXTURE2 = 33986,
			[Token(Token = "0x4001B9D")]
			GL_TEXTURE3 = 33987,
			[Token(Token = "0x4001B9E")]
			GL_TEXTURE4 = 33988,
			[Token(Token = "0x4001B9F")]
			GL_TEXTURE5 = 33989,
			[Token(Token = "0x4001BA0")]
			GL_TEXTURE6 = 33990,
			[Token(Token = "0x4001BA1")]
			GL_TEXTURE7 = 33991,
			[Token(Token = "0x4001BA2")]
			GL_TEXTURE8 = 33992,
			[Token(Token = "0x4001BA3")]
			GL_TEXTURE9 = 33993,
			[Token(Token = "0x4001BA4")]
			GL_TEXTURE10 = 33994,
			[Token(Token = "0x4001BA5")]
			GL_TEXTURE11 = 33995,
			[Token(Token = "0x4001BA6")]
			GL_TEXTURE12 = 33996,
			[Token(Token = "0x4001BA7")]
			GL_TEXTURE13 = 33997,
			[Token(Token = "0x4001BA8")]
			GL_TEXTURE14 = 33998,
			[Token(Token = "0x4001BA9")]
			GL_TEXTURE15 = 33999,
			[Token(Token = "0x4001BAA")]
			GL_TEXTURE16 = 34000,
			[Token(Token = "0x4001BAB")]
			GL_TEXTURE17 = 34001,
			[Token(Token = "0x4001BAC")]
			GL_TEXTURE18 = 34002,
			[Token(Token = "0x4001BAD")]
			GL_TEXTURE19 = 34003,
			[Token(Token = "0x4001BAE")]
			GL_TEXTURE20 = 34004,
			[Token(Token = "0x4001BAF")]
			GL_TEXTURE21 = 34005,
			[Token(Token = "0x4001BB0")]
			GL_TEXTURE22 = 34006,
			[Token(Token = "0x4001BB1")]
			GL_TEXTURE23 = 34007,
			[Token(Token = "0x4001BB2")]
			GL_TEXTURE24 = 34008,
			[Token(Token = "0x4001BB3")]
			GL_TEXTURE25 = 34009,
			[Token(Token = "0x4001BB4")]
			GL_TEXTURE26 = 34010,
			[Token(Token = "0x4001BB5")]
			GL_TEXTURE27 = 34011,
			[Token(Token = "0x4001BB6")]
			GL_TEXTURE28 = 34012,
			[Token(Token = "0x4001BB7")]
			GL_TEXTURE29 = 34013,
			[Token(Token = "0x4001BB8")]
			GL_TEXTURE30 = 34014,
			[Token(Token = "0x4001BB9")]
			GL_TEXTURE31 = 34015,
			[Token(Token = "0x4001BBA")]
			GL_ACTIVE_TEXTURE = 34016,
			[Token(Token = "0x4001BBB")]
			GL_REPEAT = 10497,
			[Token(Token = "0x4001BBC")]
			GL_CLAMP_TO_EDGE = 33071,
			[Token(Token = "0x4001BBD")]
			GL_MIRRORED_REPEAT = 33648,
			[Token(Token = "0x4001BBE")]
			GL_FLOAT_VEC2 = 35664,
			[Token(Token = "0x4001BBF")]
			GL_FLOAT_VEC3 = 35665,
			[Token(Token = "0x4001BC0")]
			GL_FLOAT_VEC4 = 35666,
			[Token(Token = "0x4001BC1")]
			GL_INT_VEC2 = 35667,
			[Token(Token = "0x4001BC2")]
			GL_INT_VEC3 = 35668,
			[Token(Token = "0x4001BC3")]
			GL_INT_VEC4 = 35669,
			[Token(Token = "0x4001BC4")]
			GL_BOOL = 35670,
			[Token(Token = "0x4001BC5")]
			GL_BOOL_VEC2 = 35671,
			[Token(Token = "0x4001BC6")]
			GL_BOOL_VEC3 = 35672,
			[Token(Token = "0x4001BC7")]
			GL_BOOL_VEC4 = 35673,
			[Token(Token = "0x4001BC8")]
			GL_FLOAT_MAT2 = 35674,
			[Token(Token = "0x4001BC9")]
			GL_FLOAT_MAT3 = 35675,
			[Token(Token = "0x4001BCA")]
			GL_FLOAT_MAT4 = 35676,
			[Token(Token = "0x4001BCB")]
			GL_SAMPLER_2D = 35678,
			[Token(Token = "0x4001BCC")]
			GL_SAMPLER_CUBE = 35680,
			[Token(Token = "0x4001BCD")]
			GL_VERTEX_ATTRIB_ARRAY_ENABLED = 34338,
			[Token(Token = "0x4001BCE")]
			GL_VERTEX_ATTRIB_ARRAY_SIZE = 34339,
			[Token(Token = "0x4001BCF")]
			GL_VERTEX_ATTRIB_ARRAY_STRIDE = 34340,
			[Token(Token = "0x4001BD0")]
			GL_VERTEX_ATTRIB_ARRAY_TYPE = 34341,
			[Token(Token = "0x4001BD1")]
			GL_VERTEX_ATTRIB_ARRAY_NORMALIZED = 34922,
			[Token(Token = "0x4001BD2")]
			GL_VERTEX_ATTRIB_ARRAY_POINTER = 34373,
			[Token(Token = "0x4001BD3")]
			GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 34975,
			[Token(Token = "0x4001BD4")]
			GL_IMPLEMENTATION_COLOR_READ_TYPE = 35738,
			[Token(Token = "0x4001BD5")]
			GL_IMPLEMENTATION_COLOR_READ_FORMAT = 35739,
			[Token(Token = "0x4001BD6")]
			GL_COMPILE_STATUS = 35713,
			[Token(Token = "0x4001BD7")]
			GL_INFO_LOG_LENGTH = 35716,
			[Token(Token = "0x4001BD8")]
			GL_SHADER_SOURCE_LENGTH = 35720,
			[Token(Token = "0x4001BD9")]
			GL_SHADER_COMPILER = 36346,
			[Token(Token = "0x4001BDA")]
			GL_SHADER_BINARY_FORMATS = 36344,
			[Token(Token = "0x4001BDB")]
			GL_NUM_SHADER_BINARY_FORMATS = 36345,
			[Token(Token = "0x4001BDC")]
			GL_LOW_FLOAT = 36336,
			[Token(Token = "0x4001BDD")]
			GL_MEDIUM_FLOAT = 36337,
			[Token(Token = "0x4001BDE")]
			GL_HIGH_FLOAT = 36338,
			[Token(Token = "0x4001BDF")]
			GL_LOW_INT = 36339,
			[Token(Token = "0x4001BE0")]
			GL_MEDIUM_INT = 36340,
			[Token(Token = "0x4001BE1")]
			GL_HIGH_INT = 36341,
			[Token(Token = "0x4001BE2")]
			GL_FRAMEBUFFER = 36160,
			[Token(Token = "0x4001BE3")]
			GL_RENDERBUFFER = 36161,
			[Token(Token = "0x4001BE4")]
			GL_RGBA4 = 32854,
			[Token(Token = "0x4001BE5")]
			GL_RGB5_A1 = 32855,
			[Token(Token = "0x4001BE6")]
			GL_RGB565 = 36194,
			[Token(Token = "0x4001BE7")]
			GL_DEPTH_COMPONENT16 = 33189,
			[Token(Token = "0x4001BE8")]
			GL_STENCIL_INDEX8 = 36168,
			[Token(Token = "0x4001BE9")]
			GL_RENDERBUFFER_WIDTH = 36162,
			[Token(Token = "0x4001BEA")]
			GL_RENDERBUFFER_HEIGHT = 36163,
			[Token(Token = "0x4001BEB")]
			GL_RENDERBUFFER_INTERNAL_FORMAT = 36164,
			[Token(Token = "0x4001BEC")]
			GL_RENDERBUFFER_RED_SIZE = 36176,
			[Token(Token = "0x4001BED")]
			GL_RENDERBUFFER_GREEN_SIZE = 36177,
			[Token(Token = "0x4001BEE")]
			GL_RENDERBUFFER_BLUE_SIZE = 36178,
			[Token(Token = "0x4001BEF")]
			GL_RENDERBUFFER_ALPHA_SIZE = 36179,
			[Token(Token = "0x4001BF0")]
			GL_RENDERBUFFER_DEPTH_SIZE = 36180,
			[Token(Token = "0x4001BF1")]
			GL_RENDERBUFFER_STENCIL_SIZE = 36181,
			[Token(Token = "0x4001BF2")]
			GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 36048,
			[Token(Token = "0x4001BF3")]
			GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 36049,
			[Token(Token = "0x4001BF4")]
			GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 36050,
			[Token(Token = "0x4001BF5")]
			GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 36051,
			[Token(Token = "0x4001BF6")]
			GL_COLOR_ATTACHMENT0 = 36064,
			[Token(Token = "0x4001BF7")]
			GL_DEPTH_ATTACHMENT = 36096,
			[Token(Token = "0x4001BF8")]
			GL_STENCIL_ATTACHMENT = 36128,
			[Token(Token = "0x4001BF9")]
			GL_NONE = 0,
			[Token(Token = "0x4001BFA")]
			GL_FRAMEBUFFER_COMPLETE = 36053,
			[Token(Token = "0x4001BFB")]
			GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 36054,
			[Token(Token = "0x4001BFC")]
			GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 36055,
			[Token(Token = "0x4001BFD")]
			GL_FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 36057,
			[Token(Token = "0x4001BFE")]
			GL_FRAMEBUFFER_UNSUPPORTED = 36061,
			[Token(Token = "0x4001BFF")]
			GL_FRAMEBUFFER_BINDING = 36006,
			[Token(Token = "0x4001C00")]
			GL_RENDERBUFFER_BINDING = 36007,
			[Token(Token = "0x4001C01")]
			GL_MAX_RENDERBUFFER_SIZE = 34024,
			[Token(Token = "0x4001C02")]
			GL_INVALID_FRAMEBUFFER_OPERATION = 1286
		}

		[Token(Token = "0x2000485")]
		public enum GLenum3
		{
			[Token(Token = "0x4001C04")]
			GL_READ_BUFFER = 3074,
			[Token(Token = "0x4001C05")]
			GL_UNPACK_ROW_LENGTH = 3314,
			[Token(Token = "0x4001C06")]
			GL_UNPACK_SKIP_ROWS = 3315,
			[Token(Token = "0x4001C07")]
			GL_UNPACK_SKIP_PIXELS = 3316,
			[Token(Token = "0x4001C08")]
			GL_PACK_ROW_LENGTH = 3330,
			[Token(Token = "0x4001C09")]
			GL_PACK_SKIP_ROWS = 3331,
			[Token(Token = "0x4001C0A")]
			GL_PACK_SKIP_PIXELS = 3332,
			[Token(Token = "0x4001C0B")]
			GL_COLOR = 6144,
			[Token(Token = "0x4001C0C")]
			GL_DEPTH = 6145,
			[Token(Token = "0x4001C0D")]
			GL_STENCIL = 6146,
			[Token(Token = "0x4001C0E")]
			GL_RED = 6403,
			[Token(Token = "0x4001C0F")]
			GL_RGB8 = 32849,
			[Token(Token = "0x4001C10")]
			GL_RGBA8 = 32856,
			[Token(Token = "0x4001C11")]
			GL_RGB10_A2 = 32857,
			[Token(Token = "0x4001C12")]
			GL_TEXTURE_BINDING_3D = 32874,
			[Token(Token = "0x4001C13")]
			GL_UNPACK_SKIP_IMAGES = 32877,
			[Token(Token = "0x4001C14")]
			GL_UNPACK_IMAGE_HEIGHT = 32878,
			[Token(Token = "0x4001C15")]
			GL_TEXTURE_3D = 32879,
			[Token(Token = "0x4001C16")]
			GL_TEXTURE_WRAP_R = 32882,
			[Token(Token = "0x4001C17")]
			GL_MAX_3D_TEXTURE_SIZE = 32883,
			[Token(Token = "0x4001C18")]
			GL_UNSIGNED_INT_2_10_10_10_REV = 33640,
			[Token(Token = "0x4001C19")]
			GL_MAX_ELEMENTS_VERTICES = 33000,
			[Token(Token = "0x4001C1A")]
			GL_MAX_ELEMENTS_INDICES = 33001,
			[Token(Token = "0x4001C1B")]
			GL_TEXTURE_MIN_LOD = 33082,
			[Token(Token = "0x4001C1C")]
			GL_TEXTURE_MAX_LOD = 33083,
			[Token(Token = "0x4001C1D")]
			GL_TEXTURE_BASE_LEVEL = 33084,
			[Token(Token = "0x4001C1E")]
			GL_TEXTURE_MAX_LEVEL = 33085,
			[Token(Token = "0x4001C1F")]
			GL_MIN = 32775,
			[Token(Token = "0x4001C20")]
			GL_MAX = 32776,
			[Token(Token = "0x4001C21")]
			GL_DEPTH_COMPONENT24 = 33190,
			[Token(Token = "0x4001C22")]
			GL_MAX_TEXTURE_LOD_BIAS = 34045,
			[Token(Token = "0x4001C23")]
			GL_TEXTURE_COMPARE_MODE = 34892,
			[Token(Token = "0x4001C24")]
			GL_TEXTURE_COMPARE_FUNC = 34893,
			[Token(Token = "0x4001C25")]
			GL_CURRENT_QUERY = 34917,
			[Token(Token = "0x4001C26")]
			GL_QUERY_RESULT = 34918,
			[Token(Token = "0x4001C27")]
			GL_QUERY_RESULT_AVAILABLE = 34919,
			[Token(Token = "0x4001C28")]
			GL_BUFFER_MAPPED = 35004,
			[Token(Token = "0x4001C29")]
			GL_BUFFER_MAP_POINTER = 35005,
			[Token(Token = "0x4001C2A")]
			GL_STREAM_READ = 35041,
			[Token(Token = "0x4001C2B")]
			GL_STREAM_COPY = 35042,
			[Token(Token = "0x4001C2C")]
			GL_STATIC_READ = 35045,
			[Token(Token = "0x4001C2D")]
			GL_STATIC_COPY = 35046,
			[Token(Token = "0x4001C2E")]
			GL_DYNAMIC_READ = 35049,
			[Token(Token = "0x4001C2F")]
			GL_DYNAMIC_COPY = 35050,
			[Token(Token = "0x4001C30")]
			GL_MAX_DRAW_BUFFERS = 34852,
			[Token(Token = "0x4001C31")]
			GL_DRAW_BUFFER0 = 34853,
			[Token(Token = "0x4001C32")]
			GL_DRAW_BUFFER1 = 34854,
			[Token(Token = "0x4001C33")]
			GL_DRAW_BUFFER2 = 34855,
			[Token(Token = "0x4001C34")]
			GL_DRAW_BUFFER3 = 34856,
			[Token(Token = "0x4001C35")]
			GL_DRAW_BUFFER4 = 34857,
			[Token(Token = "0x4001C36")]
			GL_DRAW_BUFFER5 = 34858,
			[Token(Token = "0x4001C37")]
			GL_DRAW_BUFFER6 = 34859,
			[Token(Token = "0x4001C38")]
			GL_DRAW_BUFFER7 = 34860,
			[Token(Token = "0x4001C39")]
			GL_DRAW_BUFFER8 = 34861,
			[Token(Token = "0x4001C3A")]
			GL_DRAW_BUFFER9 = 34862,
			[Token(Token = "0x4001C3B")]
			GL_DRAW_BUFFER10 = 34863,
			[Token(Token = "0x4001C3C")]
			GL_DRAW_BUFFER11 = 34864,
			[Token(Token = "0x4001C3D")]
			GL_DRAW_BUFFER12 = 34865,
			[Token(Token = "0x4001C3E")]
			GL_DRAW_BUFFER13 = 34866,
			[Token(Token = "0x4001C3F")]
			GL_DRAW_BUFFER14 = 34867,
			[Token(Token = "0x4001C40")]
			GL_DRAW_BUFFER15 = 34868,
			[Token(Token = "0x4001C41")]
			GL_MAX_FRAGMENT_UNIFORM_COMPONENTS = 35657,
			[Token(Token = "0x4001C42")]
			GL_MAX_VERTEX_UNIFORM_COMPONENTS = 35658,
			[Token(Token = "0x4001C43")]
			GL_SAMPLER_3D = 35679,
			[Token(Token = "0x4001C44")]
			GL_SAMPLER_2D_SHADOW = 35682,
			[Token(Token = "0x4001C45")]
			GL_FRAGMENT_SHADER_DERIVATIVE_HINT = 35723,
			[Token(Token = "0x4001C46")]
			GL_PIXEL_PACK_BUFFER = 35051,
			[Token(Token = "0x4001C47")]
			GL_PIXEL_UNPACK_BUFFER = 35052,
			[Token(Token = "0x4001C48")]
			GL_PIXEL_PACK_BUFFER_BINDING = 35053,
			[Token(Token = "0x4001C49")]
			GL_PIXEL_UNPACK_BUFFER_BINDING = 35055,
			[Token(Token = "0x4001C4A")]
			GL_FLOAT_MAT2x3 = 35685,
			[Token(Token = "0x4001C4B")]
			GL_FLOAT_MAT2x4 = 35686,
			[Token(Token = "0x4001C4C")]
			GL_FLOAT_MAT3x2 = 35687,
			[Token(Token = "0x4001C4D")]
			GL_FLOAT_MAT3x4 = 35688,
			[Token(Token = "0x4001C4E")]
			GL_FLOAT_MAT4x2 = 35689,
			[Token(Token = "0x4001C4F")]
			GL_FLOAT_MAT4x3 = 35690,
			[Token(Token = "0x4001C50")]
			GL_SRGB = 35904,
			[Token(Token = "0x4001C51")]
			GL_SRGB8 = 35905,
			[Token(Token = "0x4001C52")]
			GL_SRGB8_ALPHA8 = 35907,
			[Token(Token = "0x4001C53")]
			GL_COMPARE_REF_TO_TEXTURE = 34894,
			[Token(Token = "0x4001C54")]
			GL_MAJOR_VERSION = 33307,
			[Token(Token = "0x4001C55")]
			GL_MINOR_VERSION = 33308,
			[Token(Token = "0x4001C56")]
			GL_NUM_EXTENSIONS = 33309,
			[Token(Token = "0x4001C57")]
			GL_RGBA32F = 34836,
			[Token(Token = "0x4001C58")]
			GL_RGB32F = 34837,
			[Token(Token = "0x4001C59")]
			GL_RGBA16F = 34842,
			[Token(Token = "0x4001C5A")]
			GL_RGB16F = 34843,
			[Token(Token = "0x4001C5B")]
			GL_VERTEX_ATTRIB_ARRAY_INTEGER = 35069,
			[Token(Token = "0x4001C5C")]
			GL_MAX_ARRAY_TEXTURE_LAYERS = 35071,
			[Token(Token = "0x4001C5D")]
			GL_MIN_PROGRAM_TEXEL_OFFSET = 35076,
			[Token(Token = "0x4001C5E")]
			GL_MAX_PROGRAM_TEXEL_OFFSET = 35077,
			[Token(Token = "0x4001C5F")]
			GL_MAX_VARYING_COMPONENTS = 35659,
			[Token(Token = "0x4001C60")]
			GL_TEXTURE_2D_ARRAY = 35866,
			[Token(Token = "0x4001C61")]
			GL_TEXTURE_BINDING_2D_ARRAY = 35869,
			[Token(Token = "0x4001C62")]
			GL_R11F_G11F_B10F = 35898,
			[Token(Token = "0x4001C63")]
			GL_UNSIGNED_INT_10F_11F_11F_REV = 35899,
			[Token(Token = "0x4001C64")]
			GL_RGB9_E5 = 35901,
			[Token(Token = "0x4001C65")]
			GL_UNSIGNED_INT_5_9_9_9_REV = 35902,
			[Token(Token = "0x4001C66")]
			GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH = 35958,
			[Token(Token = "0x4001C67")]
			GL_TRANSFORM_FEEDBACK_BUFFER_MODE = 35967,
			[Token(Token = "0x4001C68")]
			GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = 35968,
			[Token(Token = "0x4001C69")]
			GL_TRANSFORM_FEEDBACK_VARYINGS = 35971,
			[Token(Token = "0x4001C6A")]
			GL_TRANSFORM_FEEDBACK_BUFFER_START = 35972,
			[Token(Token = "0x4001C6B")]
			GL_TRANSFORM_FEEDBACK_BUFFER_SIZE = 35973,
			[Token(Token = "0x4001C6C")]
			GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = 35976,
			[Token(Token = "0x4001C6D")]
			GL_RASTERIZER_DISCARD = 35977,
			[Token(Token = "0x4001C6E")]
			GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = 35978,
			[Token(Token = "0x4001C6F")]
			GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = 35979,
			[Token(Token = "0x4001C70")]
			GL_INTERLEAVED_ATTRIBS = 35980,
			[Token(Token = "0x4001C71")]
			GL_SEPARATE_ATTRIBS = 35981,
			[Token(Token = "0x4001C72")]
			GL_TRANSFORM_FEEDBACK_BUFFER = 35982,
			[Token(Token = "0x4001C73")]
			GL_TRANSFORM_FEEDBACK_BUFFER_BINDING = 35983,
			[Token(Token = "0x4001C74")]
			GL_RGBA32UI = 36208,
			[Token(Token = "0x4001C75")]
			GL_RGB32UI = 36209,
			[Token(Token = "0x4001C76")]
			GL_RGBA16UI = 36214,
			[Token(Token = "0x4001C77")]
			GL_RGB16UI = 36215,
			[Token(Token = "0x4001C78")]
			GL_RGBA8UI = 36220,
			[Token(Token = "0x4001C79")]
			GL_RGB8UI = 36221,
			[Token(Token = "0x4001C7A")]
			GL_RGBA32I = 36226,
			[Token(Token = "0x4001C7B")]
			GL_RGB32I = 36227,
			[Token(Token = "0x4001C7C")]
			GL_RGBA16I = 36232,
			[Token(Token = "0x4001C7D")]
			GL_RGB16I = 36233,
			[Token(Token = "0x4001C7E")]
			GL_RGBA8I = 36238,
			[Token(Token = "0x4001C7F")]
			GL_RGB8I = 36239,
			[Token(Token = "0x4001C80")]
			GL_RED_INTEGER = 36244,
			[Token(Token = "0x4001C81")]
			GL_RGB_INTEGER = 36248,
			[Token(Token = "0x4001C82")]
			GL_RGBA_INTEGER = 36249,
			[Token(Token = "0x4001C83")]
			GL_SAMPLER_2D_ARRAY = 36289,
			[Token(Token = "0x4001C84")]
			GL_SAMPLER_2D_ARRAY_SHADOW = 36292,
			[Token(Token = "0x4001C85")]
			GL_SAMPLER_CUBE_SHADOW = 36293,
			[Token(Token = "0x4001C86")]
			GL_UNSIGNED_INT_VEC2 = 36294,
			[Token(Token = "0x4001C87")]
			GL_UNSIGNED_INT_VEC3 = 36295,
			[Token(Token = "0x4001C88")]
			GL_UNSIGNED_INT_VEC4 = 36296,
			[Token(Token = "0x4001C89")]
			GL_INT_SAMPLER_2D = 36298,
			[Token(Token = "0x4001C8A")]
			GL_INT_SAMPLER_3D = 36299,
			[Token(Token = "0x4001C8B")]
			GL_INT_SAMPLER_CUBE = 36300,
			[Token(Token = "0x4001C8C")]
			GL_INT_SAMPLER_2D_ARRAY = 36303,
			[Token(Token = "0x4001C8D")]
			GL_UNSIGNED_INT_SAMPLER_2D = 36306,
			[Token(Token = "0x4001C8E")]
			GL_UNSIGNED_INT_SAMPLER_3D = 36307,
			[Token(Token = "0x4001C8F")]
			GL_UNSIGNED_INT_SAMPLER_CUBE = 36308,
			[Token(Token = "0x4001C90")]
			GL_UNSIGNED_INT_SAMPLER_2D_ARRAY = 36311,
			[Token(Token = "0x4001C91")]
			GL_BUFFER_ACCESS_FLAGS = 37151,
			[Token(Token = "0x4001C92")]
			GL_BUFFER_MAP_LENGTH = 37152,
			[Token(Token = "0x4001C93")]
			GL_BUFFER_MAP_OFFSET = 37153,
			[Token(Token = "0x4001C94")]
			GL_DEPTH_COMPONENT32F = 36012,
			[Token(Token = "0x4001C95")]
			GL_DEPTH32F_STENCIL8 = 36013,
			[Token(Token = "0x4001C96")]
			GL_FLOAT_32_UNSIGNED_INT_24_8_REV = 36269,
			[Token(Token = "0x4001C97")]
			GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = 33296,
			[Token(Token = "0x4001C98")]
			GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = 33297,
			[Token(Token = "0x4001C99")]
			GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE = 33298,
			[Token(Token = "0x4001C9A")]
			GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = 33299,
			[Token(Token = "0x4001C9B")]
			GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = 33300,
			[Token(Token = "0x4001C9C")]
			GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = 33301,
			[Token(Token = "0x4001C9D")]
			GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = 33302,
			[Token(Token = "0x4001C9E")]
			GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = 33303,
			[Token(Token = "0x4001C9F")]
			GL_FRAMEBUFFER_DEFAULT = 33304,
			[Token(Token = "0x4001CA0")]
			GL_FRAMEBUFFER_UNDEFINED = 33305,
			[Token(Token = "0x4001CA1")]
			GL_DEPTH_STENCIL_ATTACHMENT = 33306,
			[Token(Token = "0x4001CA2")]
			GL_DEPTH_STENCIL = 34041,
			[Token(Token = "0x4001CA3")]
			GL_UNSIGNED_INT_24_8 = 34042,
			[Token(Token = "0x4001CA4")]
			GL_DEPTH24_STENCIL8 = 35056,
			[Token(Token = "0x4001CA5")]
			GL_UNSIGNED_NORMALIZED = 35863,
			[Token(Token = "0x4001CA6")]
			GL_DRAW_FRAMEBUFFER_BINDING = 36006,
			[Token(Token = "0x4001CA7")]
			GL_READ_FRAMEBUFFER = 36008,
			[Token(Token = "0x4001CA8")]
			GL_DRAW_FRAMEBUFFER = 36009,
			[Token(Token = "0x4001CA9")]
			GL_READ_FRAMEBUFFER_BINDING = 36010,
			[Token(Token = "0x4001CAA")]
			GL_RENDERBUFFER_SAMPLES = 36011,
			[Token(Token = "0x4001CAB")]
			GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = 36052,
			[Token(Token = "0x4001CAC")]
			GL_MAX_COLOR_ATTACHMENTS = 36063,
			[Token(Token = "0x4001CAD")]
			GL_COLOR_ATTACHMENT1 = 36065,
			[Token(Token = "0x4001CAE")]
			GL_COLOR_ATTACHMENT2 = 36066,
			[Token(Token = "0x4001CAF")]
			GL_COLOR_ATTACHMENT3 = 36067,
			[Token(Token = "0x4001CB0")]
			GL_COLOR_ATTACHMENT4 = 36068,
			[Token(Token = "0x4001CB1")]
			GL_COLOR_ATTACHMENT5 = 36069,
			[Token(Token = "0x4001CB2")]
			GL_COLOR_ATTACHMENT6 = 36070,
			[Token(Token = "0x4001CB3")]
			GL_COLOR_ATTACHMENT7 = 36071,
			[Token(Token = "0x4001CB4")]
			GL_COLOR_ATTACHMENT8 = 36072,
			[Token(Token = "0x4001CB5")]
			GL_COLOR_ATTACHMENT9 = 36073,
			[Token(Token = "0x4001CB6")]
			GL_COLOR_ATTACHMENT10 = 36074,
			[Token(Token = "0x4001CB7")]
			GL_COLOR_ATTACHMENT11 = 36075,
			[Token(Token = "0x4001CB8")]
			GL_COLOR_ATTACHMENT12 = 36076,
			[Token(Token = "0x4001CB9")]
			GL_COLOR_ATTACHMENT13 = 36077,
			[Token(Token = "0x4001CBA")]
			GL_COLOR_ATTACHMENT14 = 36078,
			[Token(Token = "0x4001CBB")]
			GL_COLOR_ATTACHMENT15 = 36079,
			[Token(Token = "0x4001CBC")]
			GL_COLOR_ATTACHMENT16 = 36080,
			[Token(Token = "0x4001CBD")]
			GL_COLOR_ATTACHMENT17 = 36081,
			[Token(Token = "0x4001CBE")]
			GL_COLOR_ATTACHMENT18 = 36082,
			[Token(Token = "0x4001CBF")]
			GL_COLOR_ATTACHMENT19 = 36083,
			[Token(Token = "0x4001CC0")]
			GL_COLOR_ATTACHMENT20 = 36084,
			[Token(Token = "0x4001CC1")]
			GL_COLOR_ATTACHMENT21 = 36085,
			[Token(Token = "0x4001CC2")]
			GL_COLOR_ATTACHMENT22 = 36086,
			[Token(Token = "0x4001CC3")]
			GL_COLOR_ATTACHMENT23 = 36087,
			[Token(Token = "0x4001CC4")]
			GL_COLOR_ATTACHMENT24 = 36088,
			[Token(Token = "0x4001CC5")]
			GL_COLOR_ATTACHMENT25 = 36089,
			[Token(Token = "0x4001CC6")]
			GL_COLOR_ATTACHMENT26 = 36090,
			[Token(Token = "0x4001CC7")]
			GL_COLOR_ATTACHMENT27 = 36091,
			[Token(Token = "0x4001CC8")]
			GL_COLOR_ATTACHMENT28 = 36092,
			[Token(Token = "0x4001CC9")]
			GL_COLOR_ATTACHMENT29 = 36093,
			[Token(Token = "0x4001CCA")]
			GL_COLOR_ATTACHMENT30 = 36094,
			[Token(Token = "0x4001CCB")]
			GL_COLOR_ATTACHMENT31 = 36095,
			[Token(Token = "0x4001CCC")]
			GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE = 36182,
			[Token(Token = "0x4001CCD")]
			GL_MAX_SAMPLES = 36183,
			[Token(Token = "0x4001CCE")]
			GL_HALF_FLOAT = 5131,
			[Token(Token = "0x4001CCF")]
			GL_MAP_READ_BIT = 1,
			[Token(Token = "0x4001CD0")]
			GL_MAP_WRITE_BIT = 2,
			[Token(Token = "0x4001CD1")]
			GL_MAP_INVALIDATE_RANGE_BIT = 4,
			[Token(Token = "0x4001CD2")]
			GL_MAP_INVALIDATE_BUFFER_BIT = 8,
			[Token(Token = "0x4001CD3")]
			GL_MAP_FLUSH_EXPLICIT_BIT = 16,
			[Token(Token = "0x4001CD4")]
			GL_MAP_UNSYNCHRONIZED_BIT = 32,
			[Token(Token = "0x4001CD5")]
			GL_RG = 33319,
			[Token(Token = "0x4001CD6")]
			GL_RG_INTEGER = 33320,
			[Token(Token = "0x4001CD7")]
			GL_R8 = 33321,
			[Token(Token = "0x4001CD8")]
			GL_RG8 = 33323,
			[Token(Token = "0x4001CD9")]
			GL_R16F = 33325,
			[Token(Token = "0x4001CDA")]
			GL_R32F = 33326,
			[Token(Token = "0x4001CDB")]
			GL_RG16F = 33327,
			[Token(Token = "0x4001CDC")]
			GL_RG32F = 33328,
			[Token(Token = "0x4001CDD")]
			GL_R8I = 33329,
			[Token(Token = "0x4001CDE")]
			GL_R8UI = 33330,
			[Token(Token = "0x4001CDF")]
			GL_R16I = 33331,
			[Token(Token = "0x4001CE0")]
			GL_R16UI = 33332,
			[Token(Token = "0x4001CE1")]
			GL_R32I = 33333,
			[Token(Token = "0x4001CE2")]
			GL_R32UI = 33334,
			[Token(Token = "0x4001CE3")]
			GL_RG8I = 33335,
			[Token(Token = "0x4001CE4")]
			GL_RG8UI = 33336,
			[Token(Token = "0x4001CE5")]
			GL_RG16I = 33337,
			[Token(Token = "0x4001CE6")]
			GL_RG16UI = 33338,
			[Token(Token = "0x4001CE7")]
			GL_RG32I = 33339,
			[Token(Token = "0x4001CE8")]
			GL_RG32UI = 33340,
			[Token(Token = "0x4001CE9")]
			GL_VERTEX_ARRAY_BINDING = 34229,
			[Token(Token = "0x4001CEA")]
			GL_R8_SNORM = 36756,
			[Token(Token = "0x4001CEB")]
			GL_RG8_SNORM = 36757,
			[Token(Token = "0x4001CEC")]
			GL_RGB8_SNORM = 36758,
			[Token(Token = "0x4001CED")]
			GL_RGBA8_SNORM = 36759,
			[Token(Token = "0x4001CEE")]
			GL_SIGNED_NORMALIZED = 36764,
			[Token(Token = "0x4001CEF")]
			GL_PRIMITIVE_RESTART_FIXED_INDEX = 36201,
			[Token(Token = "0x4001CF0")]
			GL_COPY_READ_BUFFER = 36662,
			[Token(Token = "0x4001CF1")]
			GL_COPY_WRITE_BUFFER = 36663,
			[Token(Token = "0x4001CF2")]
			GL_COPY_READ_BUFFER_BINDING = 36662,
			[Token(Token = "0x4001CF3")]
			GL_COPY_WRITE_BUFFER_BINDING = 36663,
			[Token(Token = "0x4001CF4")]
			GL_UNIFORM_BUFFER = 35345,
			[Token(Token = "0x4001CF5")]
			GL_UNIFORM_BUFFER_BINDING = 35368,
			[Token(Token = "0x4001CF6")]
			GL_UNIFORM_BUFFER_START = 35369,
			[Token(Token = "0x4001CF7")]
			GL_UNIFORM_BUFFER_SIZE = 35370,
			[Token(Token = "0x4001CF8")]
			GL_MAX_VERTEX_UNIFORM_BLOCKS = 35371,
			[Token(Token = "0x4001CF9")]
			GL_MAX_FRAGMENT_UNIFORM_BLOCKS = 35373,
			[Token(Token = "0x4001CFA")]
			GL_MAX_COMBINED_UNIFORM_BLOCKS = 35374,
			[Token(Token = "0x4001CFB")]
			GL_MAX_UNIFORM_BUFFER_BINDINGS = 35375,
			[Token(Token = "0x4001CFC")]
			GL_MAX_UNIFORM_BLOCK_SIZE = 35376,
			[Token(Token = "0x4001CFD")]
			GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = 35377,
			[Token(Token = "0x4001CFE")]
			GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = 35379,
			[Token(Token = "0x4001CFF")]
			GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT = 35380,
			[Token(Token = "0x4001D00")]
			GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH = 35381,
			[Token(Token = "0x4001D01")]
			GL_ACTIVE_UNIFORM_BLOCKS = 35382,
			[Token(Token = "0x4001D02")]
			GL_UNIFORM_TYPE = 35383,
			[Token(Token = "0x4001D03")]
			GL_UNIFORM_SIZE = 35384,
			[Token(Token = "0x4001D04")]
			GL_UNIFORM_NAME_LENGTH = 35385,
			[Token(Token = "0x4001D05")]
			GL_UNIFORM_BLOCK_INDEX = 35386,
			[Token(Token = "0x4001D06")]
			GL_UNIFORM_OFFSET = 35387,
			[Token(Token = "0x4001D07")]
			GL_UNIFORM_ARRAY_STRIDE = 35388,
			[Token(Token = "0x4001D08")]
			GL_UNIFORM_MATRIX_STRIDE = 35389,
			[Token(Token = "0x4001D09")]
			GL_UNIFORM_IS_ROW_MAJOR = 35390,
			[Token(Token = "0x4001D0A")]
			GL_UNIFORM_BLOCK_BINDING = 35391,
			[Token(Token = "0x4001D0B")]
			GL_UNIFORM_BLOCK_DATA_SIZE = 35392,
			[Token(Token = "0x4001D0C")]
			GL_UNIFORM_BLOCK_NAME_LENGTH = 35393,
			[Token(Token = "0x4001D0D")]
			GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS = 35394,
			[Token(Token = "0x4001D0E")]
			GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES = 35395,
			[Token(Token = "0x4001D0F")]
			GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER = 35396,
			[Token(Token = "0x4001D10")]
			GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = 35398,
			[Token(Token = "0x4001D11")]
			GL_MAX_VERTEX_OUTPUT_COMPONENTS = 37154,
			[Token(Token = "0x4001D12")]
			GL_MAX_FRAGMENT_INPUT_COMPONENTS = 37157,
			[Token(Token = "0x4001D13")]
			GL_MAX_SERVER_WAIT_TIMEOUT = 37137,
			[Token(Token = "0x4001D14")]
			GL_OBJECT_TYPE = 37138,
			[Token(Token = "0x4001D15")]
			GL_SYNC_CONDITION = 37139,
			[Token(Token = "0x4001D16")]
			GL_SYNC_STATUS = 37140,
			[Token(Token = "0x4001D17")]
			GL_SYNC_FLAGS = 37141,
			[Token(Token = "0x4001D18")]
			GL_SYNC_FENCE = 37142,
			[Token(Token = "0x4001D19")]
			GL_SYNC_GPU_COMMANDS_COMPLETE = 37143,
			[Token(Token = "0x4001D1A")]
			GL_UNSIGNALED = 37144,
			[Token(Token = "0x4001D1B")]
			GL_SIGNALED = 37145,
			[Token(Token = "0x4001D1C")]
			GL_ALREADY_SIGNALED = 37146,
			[Token(Token = "0x4001D1D")]
			GL_TIMEOUT_EXPIRED = 37147,
			[Token(Token = "0x4001D1E")]
			GL_CONDITION_SATISFIED = 37148,
			[Token(Token = "0x4001D1F")]
			GL_WAIT_FAILED = 37149,
			[Token(Token = "0x4001D20")]
			GL_SYNC_FLUSH_COMMANDS_BIT = 1,
			[Token(Token = "0x4001D21")]
			GL_VERTEX_ATTRIB_ARRAY_DIVISOR = 35070,
			[Token(Token = "0x4001D22")]
			GL_ANY_SAMPLES_PASSED = 35887,
			[Token(Token = "0x4001D23")]
			GL_ANY_SAMPLES_PASSED_CONSERVATIVE = 36202,
			[Token(Token = "0x4001D24")]
			GL_SAMPLER_BINDING = 35097,
			[Token(Token = "0x4001D25")]
			GL_RGB10_A2UI = 36975,
			[Token(Token = "0x4001D26")]
			GL_TEXTURE_SWIZZLE_R = 36418,
			[Token(Token = "0x4001D27")]
			GL_TEXTURE_SWIZZLE_G = 36419,
			[Token(Token = "0x4001D28")]
			GL_TEXTURE_SWIZZLE_B = 36420,
			[Token(Token = "0x4001D29")]
			GL_TEXTURE_SWIZZLE_A = 36421,
			[Token(Token = "0x4001D2A")]
			GL_GREEN = 6404,
			[Token(Token = "0x4001D2B")]
			GL_BLUE = 6405,
			[Token(Token = "0x4001D2C")]
			GL_INT_2_10_10_10_REV = 36255,
			[Token(Token = "0x4001D2D")]
			GL_TRANSFORM_FEEDBACK = 36386,
			[Token(Token = "0x4001D2E")]
			GL_TRANSFORM_FEEDBACK_PAUSED = 36387,
			[Token(Token = "0x4001D2F")]
			GL_TRANSFORM_FEEDBACK_ACTIVE = 36388,
			[Token(Token = "0x4001D30")]
			GL_TRANSFORM_FEEDBACK_BINDING = 36389,
			[Token(Token = "0x4001D31")]
			GL_PROGRAM_BINARY_RETRIEVABLE_HINT = 33367,
			[Token(Token = "0x4001D32")]
			GL_PROGRAM_BINARY_LENGTH = 34625,
			[Token(Token = "0x4001D33")]
			GL_NUM_PROGRAM_BINARY_FORMATS = 34814,
			[Token(Token = "0x4001D34")]
			GL_PROGRAM_BINARY_FORMATS = 34815,
			[Token(Token = "0x4001D35")]
			GL_COMPRESSED_R11_EAC = 37488,
			[Token(Token = "0x4001D36")]
			GL_COMPRESSED_SIGNED_R11_EAC = 37489,
			[Token(Token = "0x4001D37")]
			GL_COMPRESSED_RG11_EAC = 37490,
			[Token(Token = "0x4001D38")]
			GL_COMPRESSED_SIGNED_RG11_EAC = 37491,
			[Token(Token = "0x4001D39")]
			GL_COMPRESSED_RGB8_ETC2 = 37492,
			[Token(Token = "0x4001D3A")]
			GL_COMPRESSED_SRGB8_ETC2 = 37493,
			[Token(Token = "0x4001D3B")]
			GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 37494,
			[Token(Token = "0x4001D3C")]
			GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 37495,
			[Token(Token = "0x4001D3D")]
			GL_COMPRESSED_RGBA8_ETC2_EAC = 37496,
			[Token(Token = "0x4001D3E")]
			GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC = 37497,
			[Token(Token = "0x4001D3F")]
			GL_TEXTURE_IMMUTABLE_FORMAT = 37167,
			[Token(Token = "0x4001D40")]
			GL_MAX_ELEMENT_INDEX = 36203,
			[Token(Token = "0x4001D41")]
			GL_NUM_SAMPLE_COUNTS = 37760,
			[Token(Token = "0x4001D42")]
			GL_TEXTURE_IMMUTABLE_LEVELS = 33503
		}

		[PreserveSig]
		[Token(Token = "0x60007A2")]
		[Address(RVA = "0x1D8A2F8", Offset = "0x1D8A2F8", VA = "0x1D8A2F8")]
		public static extern void GenTextures(int n, [Out] uint[] textures);

		[PreserveSig]
		[Token(Token = "0x60007A3")]
		[Address(RVA = "0x1D8A424", Offset = "0x1D8A424", VA = "0x1D8A424")]
		public static extern void BindTexture(int target, uint texture);

		[PreserveSig]
		[Token(Token = "0x60007A4")]
		[Address(RVA = "0x1D8A4D4", Offset = "0x1D8A4D4", VA = "0x1D8A4D4")]
		public static extern void DeleteTextures(int n, [Out] uint[] textures);

		[PreserveSig]
		[Token(Token = "0x60007A5")]
		[Address(RVA = "0x1D8A600", Offset = "0x1D8A600", VA = "0x1D8A600")]
		public static extern void TexStorage3D(int target, int levels, int internalformat, int width, int height, int depth);

		[PreserveSig]
		[Token(Token = "0x60007A6")]
		[Address(RVA = "0x1D8A6E0", Offset = "0x1D8A6E0", VA = "0x1D8A6E0")]
		public static extern void GetTexParameteriv(int target, uint pname, ref int params_k);

		[PreserveSig]
		[Token(Token = "0x60007A7")]
		[Address(RVA = "0x1D8A798", Offset = "0x1D8A798", VA = "0x1D8A798")]
		public static extern void FramebufferTexture2D(int target, int attachment, int textarget, uint texture, int level);

		[PreserveSig]
		[Token(Token = "0x60007A8")]
		[Address(RVA = "0x1D8A868", Offset = "0x1D8A868", VA = "0x1D8A868")]
		public static extern void FramebufferRenderbuffer(int target, int attachment, int renderbuffertarget, uint renderbuffer);

		[PreserveSig]
		[Token(Token = "0x60007A9")]
		[Address(RVA = "0x1D8A930", Offset = "0x1D8A930", VA = "0x1D8A930")]
		public static extern void FramebufferTextureMultisampleMultiviewOVR(int target, int attachment, uint texture, int level, int samples, int baseViewIndex, int numViews);

		[PreserveSig]
		[Token(Token = "0x60007AA")]
		[Address(RVA = "0x1D8AA18", Offset = "0x1D8AA18", VA = "0x1D8AA18")]
		public static extern void FramebufferTextureMultiviewOVR(int target, int attachment, uint texture, int level, int baseViewIndex, int numViews);

		[PreserveSig]
		[Token(Token = "0x60007AB")]
		[Address(RVA = "0x1D8AAF8", Offset = "0x1D8AAF8", VA = "0x1D8AAF8")]
		public static extern void Clear(uint mask);

		[PreserveSig]
		[Token(Token = "0x60007AC")]
		[Address(RVA = "0x1D8AB98", Offset = "0x1D8AB98", VA = "0x1D8AB98")]
		public static extern void TexParameteri(uint texture, int pname, int param);
	}
}
namespace wvr.render.thread
{
	[Token(Token = "0x20000DF")]
	public class RenderThreadSyncObject
	{
		[Token(Token = "0x2000486")]
		public delegate void RenderEventDelegate(int e);

		[Token(Token = "0x2000487")]
		public delegate void Receiver(PreAllocatedQueue dataQueue);

		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly RenderEventDelegate handle;

		[Token(Token = "0x400074F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly IntPtr handlePtr;

		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<RenderThreadSyncObject> CommandList;

		[Token(Token = "0x4000751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly PreAllocatedQueue queue;

		[Token(Token = "0x4000752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Receiver receiver;

		[Token(Token = "0x4000753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly int id;

		[Token(Token = "0x1700006A")]
		public PreAllocatedQueue Queue
		{
			[Token(Token = "0x60007AE")]
			[Address(RVA = "0x1D8AD58", Offset = "0x1D8AD58", VA = "0x1D8AD58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007AD")]
		[Address(RVA = "0x1D8ACF0", Offset = "0x1D8ACF0", VA = "0x1D8ACF0")]
		private static IntPtr GetFunctionPointerForDelegate(Delegate del)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60007AF")]
		[Address(RVA = "0x1D8AD60", Offset = "0x1D8AD60", VA = "0x1D8AD60")]
		public RenderThreadSyncObject(Receiver render)
		{
		}

		[Token(Token = "0x60007B0")]
		[Address(RVA = "0x1D8AF74", Offset = "0x1D8AF74", VA = "0x1D8AF74", Slot = "1")]
		~RenderThreadSyncObject()
		{
		}

		[Token(Token = "0x60007B1")]
		[Address(RVA = "0x1D8B070", Offset = "0x1D8B070", VA = "0x1D8B070")]
		private void IssuePluginEvent(IntPtr callback, int eventID)
		{
		}

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0x1D8B080", Offset = "0x1D8B080", VA = "0x1D8B080")]
		private void IssuePluginEvent(CommandBuffer cmdBuf, IntPtr callback, int eventID)
		{
		}

		[Token(Token = "0x60007B3")]
		[Address(RVA = "0x1D8B0C8", Offset = "0x1D8B0C8", VA = "0x1D8B0C8")]
		public void IssueEvent()
		{
		}

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0x1D8B13C", Offset = "0x1D8B13C", VA = "0x1D8B13C")]
		public void IssueInCommandBuffer(CommandBuffer cmdBuf)
		{
		}

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0x1D8B1D4", Offset = "0x1D8B1D4", VA = "0x1D8B1D4")]
		private void Receive()
		{
		}

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0x1D8AC50", Offset = "0x1D8AC50", VA = "0x1D8AC50")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x9391C4", Offset = "0x9391C4")]
		private static void RunSyncObjectInRenderThread(int id)
		{
		}
	}
	[Token(Token = "0x20000E0")]
	public class WaveVR_RenderThreadExample
	{
		[Token(Token = "0x2000488")]
		public class TestMessage : wvr.render.utils.Message
		{
			[Token(Token = "0x4001D43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int textureId;

			[Token(Token = "0x600221D")]
			[Address(RVA = "0x1D8C490", Offset = "0x1D8C490", VA = "0x1D8C490")]
			public TestMessage()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000489")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9273FC", Offset = "0x9273FC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001D44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001D45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static RenderThreadSyncObject.Receiver <>9__1_0;

			[Token(Token = "0x600221F")]
			[Address(RVA = "0x1D8C24C", Offset = "0x1D8C24C", VA = "0x1D8C24C")]
			public <>c()
			{
			}

			[Token(Token = "0x6002220")]
			[Address(RVA = "0x1D8C254", Offset = "0x1D8C254", VA = "0x1D8C254")]
			internal void <Example1>b__1_0(PreAllocatedQueue queue)
			{
			}
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0x1D8BF24", Offset = "0x1D8BF24", VA = "0x1D8BF24")]
		private static void Example1()
		{
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0x1D8C1E0", Offset = "0x1D8C1E0", VA = "0x1D8C1E0")]
		public WaveVR_RenderThreadExample()
		{
		}
	}
}
namespace wvr.render.utils
{
	[Token(Token = "0x20000E1")]
	public class Message
	{
		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isFree;

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0x1D8C4A0", Offset = "0x1D8C4A0", VA = "0x1D8C4A0")]
		public Message()
		{
		}
	}
	[Token(Token = "0x20000E2")]
	public class MessagePool
	{
		[Token(Token = "0x4000755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<Message> pool;

		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int index;

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0x1D8C4B0", Offset = "0x1D8C4B0", VA = "0x1D8C4B0")]
		public MessagePool()
		{
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0x1D8C524", Offset = "0x1D8C524", VA = "0x1D8C524")]
		private int Next(int value)
		{
			return default(int);
		}

		[Token(Token = "0x60007BD")]
		public T Obtain<T>() where T : Message, new()
		{
			return null;
		}

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0x1D8C5A0", Offset = "0x1D8C5A0", VA = "0x1D8C5A0")]
		public void Lock(Message msg)
		{
		}

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0x1D8C460", Offset = "0x1D8C460", VA = "0x1D8C460")]
		public void Release(Message msg)
		{
		}
	}
	[Token(Token = "0x20000E3")]
	public class PreAllocatedQueue : MessagePool
	{
		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly List<Message> list;

		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int queueBegin;

		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int queueEnd;

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0x1D8AEA4", Offset = "0x1D8AEA4", VA = "0x1D8AEA4")]
		public PreAllocatedQueue()
		{
		}

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0x1D8C5CC", Offset = "0x1D8C5CC", VA = "0x1D8C5CC")]
		private int Next(int value)
		{
			return default(int);
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0x1D8C0F8", Offset = "0x1D8C0F8", VA = "0x1D8C0F8")]
		public void Enqueue(Message msg)
		{
		}

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0x1D8C3E0", Offset = "0x1D8C3E0", VA = "0x1D8C3E0")]
		public Message Dequeue()
		{
			return null;
		}
	}
}
namespace SimpleJSON
{
	[Token(Token = "0x20000E4")]
	public enum JSONNodeType
	{
		[Token(Token = "0x400075B")]
		Array = 1,
		[Token(Token = "0x400075C")]
		Object = 2,
		[Token(Token = "0x400075D")]
		String = 3,
		[Token(Token = "0x400075E")]
		Number = 4,
		[Token(Token = "0x400075F")]
		NullValue = 5,
		[Token(Token = "0x4000760")]
		Boolean = 6,
		[Token(Token = "0x4000761")]
		None = 7,
		[Token(Token = "0x4000762")]
		Custom = 255
	}
	[Token(Token = "0x20000E5")]
	public enum JSONTextMode
	{
		[Token(Token = "0x4000764")]
		Compact,
		[Token(Token = "0x4000765")]
		Indent
	}
	[Token(Token = "0x20000E6")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x925814", Offset = "0x925814")]
	public abstract class JSONNode
	{
		[Token(Token = "0x200048A")]
		public struct Enumerator
		{
			[Token(Token = "0x200063A")]
			private enum Type
			{
				[Token(Token = "0x400226C")]
				None,
				[Token(Token = "0x400226D")]
				Array,
				[Token(Token = "0x400226E")]
				Object
			}

			[Token(Token = "0x4001D46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Type type;

			[Token(Token = "0x4001D47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private Dictionary<string, JSONNode>.Enumerator m_Object;

			[Token(Token = "0x4001D48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<JSONNode>.Enumerator m_Array;

			[Token(Token = "0x170003D9")]
			public bool IsValid
			{
				[Token(Token = "0x6002221")]
				[Address(RVA = "0x9D27C8", Offset = "0x9D27C8", VA = "0x9D27C8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170003DA")]
			public KeyValuePair<string, JSONNode> Current
			{
				[Token(Token = "0x6002224")]
				[Address(RVA = "0x9D285C", Offset = "0x9D285C", VA = "0x9D285C")]
				get
				{
					return default(KeyValuePair<string, JSONNode>);
				}
			}

			[Token(Token = "0x6002222")]
			[Address(RVA = "0x9D27D8", Offset = "0x9D27D8", VA = "0x9D27D8")]
			public Enumerator(List<JSONNode>.Enumerator aArrayEnum)
			{
			}

			[Token(Token = "0x6002223")]
			[Address(RVA = "0x9D2818", Offset = "0x9D2818", VA = "0x9D2818")]
			public Enumerator(Dictionary<string, JSONNode>.Enumerator aDictEnum)
			{
			}

			[Token(Token = "0x6002225")]
			[Address(RVA = "0x9D2864", Offset = "0x9D2864", VA = "0x9D2864")]
			public bool MoveNext()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200048B")]
		public struct ValueEnumerator
		{
			[Token(Token = "0x4001D49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Enumerator m_Enumerator;

			[Token(Token = "0x170003DB")]
			public JSONNode Current
			{
				[Token(Token = "0x6002229")]
				[Address(RVA = "0x9D2A74", Offset = "0x9D2A74", VA = "0x9D2A74")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002226")]
			[Address(RVA = "0x9D29CC", Offset = "0x9D29CC", VA = "0x9D29CC")]
			public ValueEnumerator(List<JSONNode>.Enumerator aArrayEnum)
			{
			}

			[Token(Token = "0x6002227")]
			[Address(RVA = "0x9D2A10", Offset = "0x9D2A10", VA = "0x9D2A10")]
			public ValueEnumerator(Dictionary<string, JSONNode>.Enumerator aDictEnum)
			{
			}

			[Token(Token = "0x6002228")]
			[Address(RVA = "0x9D2A58", Offset = "0x9D2A58", VA = "0x9D2A58")]
			public ValueEnumerator(Enumerator aEnumerator)
			{
			}

			[Token(Token = "0x600222A")]
			[Address(RVA = "0x9D2A7C", Offset = "0x9D2A7C", VA = "0x9D2A7C")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600222B")]
			[Address(RVA = "0x9D2A84", Offset = "0x9D2A84", VA = "0x9D2A84")]
			public ValueEnumerator GetEnumerator()
			{
				return default(ValueEnumerator);
			}
		}

		[Token(Token = "0x200048C")]
		public struct KeyEnumerator
		{
			[Token(Token = "0x4001D4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private Enumerator m_Enumerator;

			[Token(Token = "0x170003DC")]
			public JSONNode Current
			{
				[Token(Token = "0x600222F")]
				[Address(RVA = "0x9D2960", Offset = "0x9D2960", VA = "0x9D2960")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600222C")]
			[Address(RVA = "0x9D28B8", Offset = "0x9D28B8", VA = "0x9D28B8")]
			public KeyEnumerator(List<JSONNode>.Enumerator aArrayEnum)
			{
			}

			[Token(Token = "0x600222D")]
			[Address(RVA = "0x9D28FC", Offset = "0x9D28FC", VA = "0x9D28FC")]
			public KeyEnumerator(Dictionary<string, JSONNode>.Enumerator aDictEnum)
			{
			}

			[Token(Token = "0x600222E")]
			[Address(RVA = "0x9D2944", Offset = "0x9D2944", VA = "0x9D2944")]
			public KeyEnumerator(Enumerator aEnumerator)
			{
			}

			[Token(Token = "0x6002230")]
			[Address(RVA = "0x9D2968", Offset = "0x9D2968", VA = "0x9D2968")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002231")]
			[Address(RVA = "0x9D2970", Offset = "0x9D2970", VA = "0x9D2970")]
			public KeyEnumerator GetEnumerator()
			{
				return default(KeyEnumerator);
			}
		}

		[Token(Token = "0x200048D")]
		public class LinqEnumerator : IEnumerator<KeyValuePair<string, JSONNode>>, IEnumerator, IDisposable, IEnumerable<KeyValuePair<string, JSONNode>>, IEnumerable
		{
			[Token(Token = "0x4001D4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private JSONNode m_Node;

			[Token(Token = "0x4001D4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Enumerator m_Enumerator;

			[Token(Token = "0x170003DD")]
			public KeyValuePair<string, JSONNode> Current
			{
				[Token(Token = "0x6002233")]
				[Address(RVA = "0xDCE678", Offset = "0xDCE678", VA = "0xDCE678", Slot = "4")]
				get
				{
					return default(KeyValuePair<string, JSONNode>);
				}
			}

			[Token(Token = "0x170003DE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002234")]
				[Address(RVA = "0xDCE680", Offset = "0xDCE680", VA = "0xDCE680", Slot = "7")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002232")]
			[Address(RVA = "0xDCC85C", Offset = "0xDCC85C", VA = "0xDCC85C")]
			internal LinqEnumerator(JSONNode aNode)
			{
			}

			[Token(Token = "0x6002235")]
			[Address(RVA = "0xDCE6EC", Offset = "0xDCE6EC", VA = "0xDCE6EC", Slot = "6")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002236")]
			[Address(RVA = "0xDCE6F4", Offset = "0xDCE6F4", VA = "0xDCE6F4", Slot = "5")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002237")]
			[Address(RVA = "0xDCE714", Offset = "0xDCE714", VA = "0xDCE714", Slot = "9")]
			public IEnumerator<KeyValuePair<string, JSONNode>> GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002238")]
			[Address(RVA = "0xDCE778", Offset = "0xDCE778", VA = "0xDCE778", Slot = "8")]
			public void Reset()
			{
			}

			[Token(Token = "0x6002239")]
			[Address(RVA = "0xDCE82C", Offset = "0xDCE82C", VA = "0xDCE82C", Slot = "10")]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x200048E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92740C", Offset = "0x92740C")]
		private sealed class <get_Children>d__39 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4001D4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x170003DF")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x600223D")]
				[Address(RVA = "0xDCDB04", Offset = "0xDCDB04", VA = "0xDCDB04", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600223F")]
				[Address(RVA = "0xDCDB74", Offset = "0xDCDB74", VA = "0xDCDB74", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600223A")]
			[Address(RVA = "0xDCC5CC", Offset = "0xDCC5CC", VA = "0xDCC5CC")]
			[DebuggerHidden]
			public <get_Children>d__39(int <>1__state)
			{
			}

			[Token(Token = "0x600223B")]
			[Address(RVA = "0xDCDAE8", Offset = "0xDCDAE8", VA = "0xDCDAE8", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600223C")]
			[Address(RVA = "0xDCDAEC", Offset = "0xDCDAEC", VA = "0xDCDAEC", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600223E")]
			[Address(RVA = "0xDCDB0C", Offset = "0xDCDB0C", VA = "0xDCDB0C", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002240")]
			[Address(RVA = "0xDCDB7C", Offset = "0xDCDB7C", VA = "0xDCDB7C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002241")]
			[Address(RVA = "0xDCDC14", Offset = "0xDCDC14", VA = "0xDCDC14", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x200048F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92741C", Offset = "0x92741C")]
		private sealed class <get_DeepChildren>d__41 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4001D52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001D53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONNode <>4__this;

			[Token(Token = "0x4001D54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<JSONNode> <>7__wrap1;

			[Token(Token = "0x4001D55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<JSONNode> <>7__wrap2;

			[Token(Token = "0x170003E1")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6002247")]
				[Address(RVA = "0xDCE24C", Offset = "0xDCE24C", VA = "0xDCE24C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002249")]
				[Address(RVA = "0xDCE2BC", Offset = "0xDCE2BC", VA = "0xDCE2BC", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002242")]
			[Address(RVA = "0xDCC688", Offset = "0xDCC688", VA = "0xDCC688")]
			[DebuggerHidden]
			public <get_DeepChildren>d__41(int <>1__state)
			{
			}

			[Token(Token = "0x6002243")]
			[Address(RVA = "0xDCDC18", Offset = "0xDCDC18", VA = "0xDCDC18", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002244")]
			[Address(RVA = "0xDCDE10", Offset = "0xDCDE10", VA = "0xDCDE10", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002245")]
			[Address(RVA = "0xDCDD50", Offset = "0xDCDD50", VA = "0xDCDD50")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002246")]
			[Address(RVA = "0xDCDC90", Offset = "0xDCDC90", VA = "0xDCDC90")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x6002248")]
			[Address(RVA = "0xDCE254", Offset = "0xDCE254", VA = "0xDCE254", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600224A")]
			[Address(RVA = "0xDCE2C4", Offset = "0xDCE2C4", VA = "0xDCE2C4", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600224B")]
			[Address(RVA = "0xDCE374", Offset = "0xDCE374", VA = "0xDCE374", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool forceASCII;

		[Token(Token = "0x4000767")]
		[ThreadStatic]
		private static StringBuilder m_EscapeBuilder;

		[Token(Token = "0x1700006B")]
		public abstract JSONNodeType Tag
		{
			[Token(Token = "0x60007C4")]
			get;
		}

		[Token(Token = "0x1700006C")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x60007C5")]
			[Address(RVA = "0xDCC42C", Offset = "0xDCC42C", VA = "0xDCC42C", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007C6")]
			[Address(RVA = "0xDCC434", Offset = "0xDCC434", VA = "0xDCC434", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x1700006D")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x60007C7")]
			[Address(RVA = "0xDCC438", Offset = "0xDCC438", VA = "0xDCC438", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007C8")]
			[Address(RVA = "0xDCC440", Offset = "0xDCC440", VA = "0xDCC440", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x1700006E")]
		public virtual string Value
		{
			[Token(Token = "0x60007C9")]
			[Address(RVA = "0xDCC444", Offset = "0xDCC444", VA = "0xDCC444", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007CA")]
			[Address(RVA = "0xDCC48C", Offset = "0xDCC48C", VA = "0xDCC48C", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x1700006F")]
		public virtual int Count
		{
			[Token(Token = "0x60007CB")]
			[Address(RVA = "0xDCC490", Offset = "0xDCC490", VA = "0xDCC490", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000070")]
		public virtual bool IsNumber
		{
			[Token(Token = "0x60007CC")]
			[Address(RVA = "0xDCC498", Offset = "0xDCC498", VA = "0xDCC498", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000071")]
		public virtual bool IsString
		{
			[Token(Token = "0x60007CD")]
			[Address(RVA = "0xDCC4A0", Offset = "0xDCC4A0", VA = "0xDCC4A0", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000072")]
		public virtual bool IsBoolean
		{
			[Token(Token = "0x60007CE")]
			[Address(RVA = "0xDCC4A8", Offset = "0xDCC4A8", VA = "0xDCC4A8", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000073")]
		public virtual bool IsNull
		{
			[Token(Token = "0x60007CF")]
			[Address(RVA = "0xDCC4B0", Offset = "0xDCC4B0", VA = "0xDCC4B0", Slot = "15")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000074")]
		public virtual bool IsArray
		{
			[Token(Token = "0x60007D0")]
			[Address(RVA = "0xDCC4B8", Offset = "0xDCC4B8", VA = "0xDCC4B8", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000075")]
		public virtual bool IsObject
		{
			[Token(Token = "0x60007D1")]
			[Address(RVA = "0xDCC4C0", Offset = "0xDCC4C0", VA = "0xDCC4C0", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000076")]
		public virtual bool Inline
		{
			[Token(Token = "0x60007D2")]
			[Address(RVA = "0xDCC4C8", Offset = "0xDCC4C8", VA = "0xDCC4C8", Slot = "18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007D3")]
			[Address(RVA = "0xDCC4D0", Offset = "0xDCC4D0", VA = "0xDCC4D0", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x17000077")]
		public virtual IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x60007D9")]
			[Address(RVA = "0xDCC55C", Offset = "0xDCC55C", VA = "0xDCC55C", Slot = "25")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x939228", Offset = "0x939228")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000078")]
		public IEnumerable<JSONNode> DeepChildren
		{
			[Token(Token = "0x60007DA")]
			[Address(RVA = "0xDCC604", Offset = "0xDCC604", VA = "0xDCC604")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93928C", Offset = "0x93928C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000079")]
		public IEnumerable<KeyValuePair<string, JSONNode>> Linq
		{
			[Token(Token = "0x60007DF")]
			[Address(RVA = "0xDCC7FC", Offset = "0xDCC7FC", VA = "0xDCC7FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007A")]
		public KeyEnumerator Keys
		{
			[Token(Token = "0x60007E0")]
			[Address(RVA = "0xDCC928", Offset = "0xDCC928", VA = "0xDCC928")]
			get
			{
				return default(KeyEnumerator);
			}
		}

		[Token(Token = "0x1700007B")]
		public ValueEnumerator Values
		{
			[Token(Token = "0x60007E1")]
			[Address(RVA = "0xDCC988", Offset = "0xDCC988", VA = "0xDCC988")]
			get
			{
				return default(ValueEnumerator);
			}
		}

		[Token(Token = "0x1700007C")]
		public virtual double AsDouble
		{
			[Token(Token = "0x60007E2")]
			[Address(RVA = "0xDCC9E8", Offset = "0xDCC9E8", VA = "0xDCC9E8", Slot = "29")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x60007E3")]
			[Address(RVA = "0xDCCA8C", Offset = "0xDCCA8C", VA = "0xDCCA8C", Slot = "30")]
			set
			{
			}
		}

		[Token(Token = "0x1700007D")]
		public virtual int AsInt
		{
			[Token(Token = "0x60007E4")]
			[Address(RVA = "0xDCCACC", Offset = "0xDCCACC", VA = "0xDCCACC", Slot = "31")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60007E5")]
			[Address(RVA = "0xDCCAF0", Offset = "0xDCCAF0", VA = "0xDCCAF0", Slot = "32")]
			set
			{
			}
		}

		[Token(Token = "0x1700007E")]
		public virtual float AsFloat
		{
			[Token(Token = "0x60007E6")]
			[Address(RVA = "0xDCCB08", Offset = "0xDCCB08", VA = "0xDCCB08", Slot = "33")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60007E7")]
			[Address(RVA = "0xDCCB2C", Offset = "0xDCCB2C", VA = "0xDCCB2C", Slot = "34")]
			set
			{
			}
		}

		[Token(Token = "0x1700007F")]
		public virtual bool AsBool
		{
			[Token(Token = "0x60007E8")]
			[Address(RVA = "0xDCCB40", Offset = "0xDCCB40", VA = "0xDCCB40", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007E9")]
			[Address(RVA = "0xDCCC08", Offset = "0xDCCC08", VA = "0xDCCC08", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x17000080")]
		public virtual JSONArray AsArray
		{
			[Token(Token = "0x60007EA")]
			[Address(RVA = "0xDCCC8C", Offset = "0xDCCC8C", VA = "0xDCCC8C", Slot = "37")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000081")]
		public virtual JSONObject AsObject
		{
			[Token(Token = "0x60007EB")]
			[Address(RVA = "0xDCCD0C", Offset = "0xDCCD0C", VA = "0xDCCD0C", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000082")]
		internal static StringBuilder EscapeBuilder
		{
			[Token(Token = "0x60007FB")]
			[Address(RVA = "0xDCD3F0", Offset = "0xDCD3F0", VA = "0xDCD3F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007D4")]
		[Address(RVA = "0xDCC4D4", Offset = "0xDCC4D4", VA = "0xDCC4D4", Slot = "20")]
		public virtual void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x60007D5")]
		[Address(RVA = "0xDCC4D8", Offset = "0xDCC4D8", VA = "0xDCC4D8", Slot = "21")]
		public virtual void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x60007D6")]
		[Address(RVA = "0xDCC544", Offset = "0xDCC544", VA = "0xDCC544", Slot = "22")]
		public virtual JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x60007D7")]
		[Address(RVA = "0xDCC54C", Offset = "0xDCC54C", VA = "0xDCC54C", Slot = "23")]
		public virtual JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x60007D8")]
		[Address(RVA = "0xDCC554", Offset = "0xDCC554", VA = "0xDCC554", Slot = "24")]
		public virtual JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x60007DB")]
		[Address(RVA = "0xDCC6C0", Offset = "0xDCC6C0", VA = "0xDCC6C0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0xDCC758", Offset = "0xDCC758", VA = "0xDCC758", Slot = "26")]
		public virtual string ToString(int aIndent)
		{
			return null;
		}

		[Token(Token = "0x60007DD")]
		internal abstract void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode);

		[Token(Token = "0x60007DE")]
		public abstract Enumerator GetEnumerator();

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0xDCCD8C", Offset = "0xDCCD8C", VA = "0xDCCD8C")]
		public static implicit operator JSONNode(string s)
		{
			return null;
		}

		[Token(Token = "0x60007ED")]
		[Address(RVA = "0xDCCE68", Offset = "0xDCCE68", VA = "0xDCCE68")]
		public static implicit operator string(JSONNode d)
		{
			return null;
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0xDCCF00", Offset = "0xDCCF00", VA = "0xDCCF00")]
		public static implicit operator JSONNode(double n)
		{
			return null;
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0xDCCF68", Offset = "0xDCCF68", VA = "0xDCCF68")]
		public static implicit operator double(JSONNode d)
		{
			return default(double);
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0xDCD004", Offset = "0xDCD004", VA = "0xDCD004")]
		public static implicit operator JSONNode(float n)
		{
			return null;
		}

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0xDCD06C", Offset = "0xDCD06C", VA = "0xDCD06C")]
		public static implicit operator float(JSONNode d)
		{
			return default(float);
		}

		[Token(Token = "0x60007F2")]
		[Address(RVA = "0xDCD108", Offset = "0xDCD108", VA = "0xDCD108")]
		public static implicit operator JSONNode(int n)
		{
			return null;
		}

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0xDCD168", Offset = "0xDCD168", VA = "0xDCD168")]
		public static implicit operator int(JSONNode d)
		{
			return default(int);
		}

		[Token(Token = "0x60007F4")]
		[Address(RVA = "0xDCD204", Offset = "0xDCD204", VA = "0xDCD204")]
		public static implicit operator JSONNode(bool b)
		{
			return null;
		}

		[Token(Token = "0x60007F5")]
		[Address(RVA = "0xDCD264", Offset = "0xDCD264", VA = "0xDCD264")]
		public static implicit operator bool(JSONNode d)
		{
			return default(bool);
		}

		[Token(Token = "0x60007F6")]
		[Address(RVA = "0xDCD300", Offset = "0xDCD300", VA = "0xDCD300")]
		public static implicit operator JSONNode(KeyValuePair<string, JSONNode> aKeyValue)
		{
			return null;
		}

		[Token(Token = "0x60007F7")]
		[Address(RVA = "0xDCAAB0", Offset = "0xDCAAB0", VA = "0xDCAAB0")]
		public static bool operator ==(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x60007F8")]
		[Address(RVA = "0xDCD35C", Offset = "0xDCD35C", VA = "0xDCD35C")]
		public static bool operator !=(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x60007F9")]
		[Address(RVA = "0xDCD3DC", Offset = "0xDCD3DC", VA = "0xDCD3DC", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0xDCD3E8", Offset = "0xDCD3E8", VA = "0xDCD3E8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60007FC")]
		[Address(RVA = "0xDCD4CC", Offset = "0xDCD4CC", VA = "0xDCD4CC")]
		internal static string Escape(string aText)
		{
			return null;
		}

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0xDCD8E0", Offset = "0xDCD8E0", VA = "0xDCD8E0")]
		private static void ParseElement(JSONNode ctx, string token, string tokenName, bool quoted)
		{
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0xDCA00C", Offset = "0xDCA00C", VA = "0xDCA00C")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0xDCB3CC", Offset = "0xDCB3CC", VA = "0xDCB3CC")]
		protected JSONNode()
		{
		}
	}
	[Token(Token = "0x20000E7")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x92584C", Offset = "0x92584C")]
	public class JSONArray : JSONNode
	{
		[Token(Token = "0x2000490")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92742C", Offset = "0x92742C")]
		private sealed class <get_Children>d__22 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4001D58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001D59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONArray <>4__this;

			[Token(Token = "0x4001D5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170003E3")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x6002250")]
				[Address(RVA = "0xDCB5BC", Offset = "0xDCB5BC", VA = "0xDCB5BC", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002252")]
				[Address(RVA = "0xDCB62C", Offset = "0xDCB62C", VA = "0xDCB62C", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600224C")]
			[Address(RVA = "0xDCB108", Offset = "0xDCB108", VA = "0xDCB108")]
			[DebuggerHidden]
			public <get_Children>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x600224D")]
			[Address(RVA = "0xDCB3D4", Offset = "0xDCB3D4", VA = "0xDCB3D4", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600224E")]
			[Address(RVA = "0xDCB448", Offset = "0xDCB448", VA = "0xDCB448", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600224F")]
			[Address(RVA = "0xDCB3F0", Offset = "0xDCB3F0", VA = "0xDCB3F0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002251")]
			[Address(RVA = "0xDCB5C4", Offset = "0xDCB5C4", VA = "0xDCB5C4", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x6002253")]
			[Address(RVA = "0xDCB634", Offset = "0xDCB634", VA = "0xDCB634", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002254")]
			[Address(RVA = "0xDCB6E4", Offset = "0xDCB6E4", VA = "0xDCB6E4", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<JSONNode> m_List;

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inline;

		[Token(Token = "0x17000083")]
		public override bool Inline
		{
			[Token(Token = "0x6000801")]
			[Address(RVA = "0xDCA73C", Offset = "0xDCA73C", VA = "0xDCA73C", Slot = "18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000802")]
			[Address(RVA = "0xDCA744", Offset = "0xDCA744", VA = "0xDCA744", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x17000084")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6000803")]
			[Address(RVA = "0xDCA750", Offset = "0xDCA750", VA = "0xDCA750", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x17000085")]
		public override bool IsArray
		{
			[Token(Token = "0x6000804")]
			[Address(RVA = "0xDCA758", Offset = "0xDCA758", VA = "0xDCA758", Slot = "16")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000086")]
		public override JSONNode Item
		{
			[Token(Token = "0x6000806")]
			[Address(RVA = "0xDCA834", Offset = "0xDCA834", VA = "0xDCA834", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000807")]
			[Address(RVA = "0xDCA97C", Offset = "0xDCA97C", VA = "0xDCA97C", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x17000087")]
		public override JSONNode Item
		{
			[Token(Token = "0x6000808")]
			[Address(RVA = "0xDCACE0", Offset = "0xDCACE0", VA = "0xDCACE0", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000809")]
			[Address(RVA = "0xDCAD40", Offset = "0xDCAD40", VA = "0xDCAD40", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000088")]
		public override int Count
		{
			[Token(Token = "0x600080A")]
			[Address(RVA = "0xDCAE08", Offset = "0xDCAE08", VA = "0xDCAE08", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000089")]
		public override IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x600080E")]
			[Address(RVA = "0xDCB084", Offset = "0xDCB084", VA = "0xDCB084", Slot = "25")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9392F0", Offset = "0x9392F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000805")]
		[Address(RVA = "0xDCA760", Offset = "0xDCA760", VA = "0xDCA760", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x600080B")]
		[Address(RVA = "0xDCAE68", Offset = "0xDCAE68", VA = "0xDCAE68", Slot = "20")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x600080C")]
		[Address(RVA = "0xDCAF30", Offset = "0xDCAF30", VA = "0xDCAF30", Slot = "23")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x600080D")]
		[Address(RVA = "0xDCB00C", Offset = "0xDCB00C", VA = "0xDCB00C", Slot = "24")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x600080F")]
		[Address(RVA = "0xDCB140", Offset = "0xDCB140", VA = "0xDCB140", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6000810")]
		[Address(RVA = "0xDCB33C", Offset = "0xDCB33C", VA = "0xDCB33C")]
		public JSONArray()
		{
		}
	}
	[Token(Token = "0x20000E8")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x925884", Offset = "0x925884")]
	public class JSONObject : JSONNode
	{
		[Token(Token = "0x2000491")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92743C", Offset = "0x92743C")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x4001D5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public JSONNode aNode;

			[Token(Token = "0x6002255")]
			[Address(RVA = "0xDCFA80", Offset = "0xDCFA80", VA = "0xDCFA80")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6002256")]
			[Address(RVA = "0xDCFEEC", Offset = "0xDCFEEC", VA = "0xDCFEEC")]
			internal bool <Remove>b__0(KeyValuePair<string, JSONNode> k)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000492")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92744C", Offset = "0x92744C")]
		private sealed class <get_Children>d__23 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4001D5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4001D5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONObject <>4__this;

			[Token(Token = "0x4001D60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170003E5")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x600225B")]
				[Address(RVA = "0xDD01A0", Offset = "0xDD01A0", VA = "0xDD01A0", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600225D")]
				[Address(RVA = "0xDD0210", Offset = "0xDD0210", VA = "0xDD0210", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002257")]
			[Address(RVA = "0xDCFB0C", Offset = "0xDCFB0C", VA = "0xDCFB0C")]
			[DebuggerHidden]
			public <get_Children>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6002258")]
			[Address(RVA = "0xDCFF88", Offset = "0xDCFF88", VA = "0xDCFF88", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002259")]
			[Address(RVA = "0xDCFFFC", Offset = "0xDCFFFC", VA = "0xDCFFFC", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600225A")]
			[Address(RVA = "0xDCFFA4", Offset = "0xDCFFA4", VA = "0xDCFFA4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600225C")]
			[Address(RVA = "0xDD01A8", Offset = "0xDD01A8", VA = "0xDD01A8", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x600225E")]
			[Address(RVA = "0xDD0218", Offset = "0xDD0218", VA = "0xDD0218", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600225F")]
			[Address(RVA = "0xDD02C8", Offset = "0xDD02C8", VA = "0xDD02C8", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, JSONNode> m_Dict;

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inline;

		[Token(Token = "0x1700008A")]
		public override bool Inline
		{
			[Token(Token = "0x6000811")]
			[Address(RVA = "0xDCF024", Offset = "0xDCF024", VA = "0xDCF024", Slot = "18")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000812")]
			[Address(RVA = "0xDCF02C", Offset = "0xDCF02C", VA = "0xDCF02C", Slot = "19")]
			set
			{
			}
		}

		[Token(Token = "0x1700008B")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6000813")]
			[Address(RVA = "0xDCF038", Offset = "0xDCF038", VA = "0xDCF038", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x1700008C")]
		public override bool IsObject
		{
			[Token(Token = "0x6000814")]
			[Address(RVA = "0xDCF040", Offset = "0xDCF040", VA = "0xDCF040", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700008D")]
		public override JSONNode Item
		{
			[Token(Token = "0x6000816")]
			[Address(RVA = "0xDCF0EC", Offset = "0xDCF0EC", VA = "0xDCF0EC", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000817")]
			[Address(RVA = "0xDCF1BC", Offset = "0xDCF1BC", VA = "0xDCF1BC", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x1700008E")]
		public override JSONNode Item
		{
			[Token(Token = "0x6000818")]
			[Address(RVA = "0xDCF2E8", Offset = "0xDCF2E8", VA = "0xDCF2E8", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000819")]
			[Address(RVA = "0xDCF3AC", Offset = "0xDCF3AC", VA = "0xDCF3AC", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x1700008F")]
		public override int Count
		{
			[Token(Token = "0x600081A")]
			[Address(RVA = "0xDCF4F8", Offset = "0xDCF4F8", VA = "0xDCF4F8", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000090")]
		public override IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x600081F")]
			[Address(RVA = "0xDCFA88", Offset = "0xDCFA88", VA = "0xDCFA88", Slot = "25")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x939354", Offset = "0x939354")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000815")]
		[Address(RVA = "0xDCF048", Offset = "0xDCF048", VA = "0xDCF048", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x600081B")]
		[Address(RVA = "0xDCF558", Offset = "0xDCF558", VA = "0xDCF558", Slot = "20")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x600081C")]
		[Address(RVA = "0xDCF6F4", Offset = "0xDCF6F4", VA = "0xDCF6F4", Slot = "22")]
		public override JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x600081D")]
		[Address(RVA = "0xDCF7CC", Offset = "0xDCF7CC", VA = "0xDCF7CC", Slot = "23")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x600081E")]
		[Address(RVA = "0xDCF8CC", Offset = "0xDCF8CC", VA = "0xDCF8CC", Slot = "24")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6000820")]
		[Address(RVA = "0xDCFB44", Offset = "0xDCFB44", VA = "0xDCFB44", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6000821")]
		[Address(RVA = "0xDCBD08", Offset = "0xDCBD08", VA = "0xDCBD08")]
		public JSONObject()
		{
		}
	}
	[Token(Token = "0x20000E9")]
	public class JSONString : JSONNode
	{
		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_Data;

		[Token(Token = "0x17000091")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6000822")]
			[Address(RVA = "0xDD02CC", Offset = "0xDD02CC", VA = "0xDD02CC", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x17000092")]
		public override bool IsString
		{
			[Token(Token = "0x6000823")]
			[Address(RVA = "0xDD02D4", Offset = "0xDD02D4", VA = "0xDD02D4", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000093")]
		public override string Value
		{
			[Token(Token = "0x6000825")]
			[Address(RVA = "0xDD02FC", Offset = "0xDD02FC", VA = "0xDD02FC", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000826")]
			[Address(RVA = "0xDD0304", Offset = "0xDD0304", VA = "0xDD0304", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x6000824")]
		[Address(RVA = "0xDD02DC", Offset = "0xDD02DC", VA = "0xDD02DC", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6000827")]
		[Address(RVA = "0xDCCDEC", Offset = "0xDCCDEC", VA = "0xDCCDEC")]
		public JSONString(string aData)
		{
		}

		[Token(Token = "0x6000828")]
		[Address(RVA = "0xDD030C", Offset = "0xDD030C", VA = "0xDD030C", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6000829")]
		[Address(RVA = "0xDD03E0", Offset = "0xDD03E0", VA = "0xDD03E0", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600082A")]
		[Address(RVA = "0xDD04FC", Offset = "0xDD04FC", VA = "0xDD04FC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20000EA")]
	public class JSONNumber : JSONNode
	{
		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private double m_Data;

		[Token(Token = "0x17000094")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x600082B")]
			[Address(RVA = "0xDCEC0C", Offset = "0xDCEC0C", VA = "0xDCEC0C", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x17000095")]
		public override bool IsNumber
		{
			[Token(Token = "0x600082C")]
			[Address(RVA = "0xDCEC14", Offset = "0xDCEC14", VA = "0xDCEC14", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000096")]
		public override string Value
		{
			[Token(Token = "0x600082E")]
			[Address(RVA = "0xDCEC3C", Offset = "0xDCEC3C", VA = "0xDCEC3C", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x600082F")]
			[Address(RVA = "0xDCEC48", Offset = "0xDCEC48", VA = "0xDCEC48", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x17000097")]
		public override double AsDouble
		{
			[Token(Token = "0x6000830")]
			[Address(RVA = "0xDCECD4", Offset = "0xDCECD4", VA = "0xDCECD4", Slot = "29")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000831")]
			[Address(RVA = "0xDCECDC", Offset = "0xDCECDC", VA = "0xDCECDC", Slot = "30")]
			set
			{
			}
		}

		[Token(Token = "0x600082D")]
		[Address(RVA = "0xDCEC1C", Offset = "0xDCEC1C", VA = "0xDCEC1C", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6000832")]
		[Address(RVA = "0xDCBF7C", Offset = "0xDCBF7C", VA = "0xDCBF7C")]
		public JSONNumber(double aData)
		{
		}

		[Token(Token = "0x6000833")]
		[Address(RVA = "0xDCECE4", Offset = "0xDCECE4", VA = "0xDCECE4")]
		public JSONNumber(string aData)
		{
		}

		[Token(Token = "0x6000834")]
		[Address(RVA = "0xDCED6C", Offset = "0xDCED6C", VA = "0xDCED6C", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6000835")]
		[Address(RVA = "0xDCEDAC", Offset = "0xDCEDAC", VA = "0xDCEDAC")]
		private static bool IsNumeric(object value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000836")]
		[Address(RVA = "0xDCEEDC", Offset = "0xDCEEDC", VA = "0xDCEEDC", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000837")]
		[Address(RVA = "0xDCF018", Offset = "0xDCF018", VA = "0xDCF018", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20000EB")]
	public class JSONBool : JSONNode
	{
		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_Data;

		[Token(Token = "0x17000098")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6000838")]
			[Address(RVA = "0xDCB6E8", Offset = "0xDCB6E8", VA = "0xDCB6E8", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x17000099")]
		public override bool IsBoolean
		{
			[Token(Token = "0x6000839")]
			[Address(RVA = "0xDCB6F0", Offset = "0xDCB6F0", VA = "0xDCB6F0", Slot = "14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700009A")]
		public override string Value
		{
			[Token(Token = "0x600083B")]
			[Address(RVA = "0xDCB718", Offset = "0xDCB718", VA = "0xDCB718", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x600083C")]
			[Address(RVA = "0xDCB724", Offset = "0xDCB724", VA = "0xDCB724", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x1700009B")]
		public override bool AsBool
		{
			[Token(Token = "0x600083D")]
			[Address(RVA = "0xDCB7B0", Offset = "0xDCB7B0", VA = "0xDCB7B0", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600083E")]
			[Address(RVA = "0xDCB7B8", Offset = "0xDCB7B8", VA = "0xDCB7B8", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x600083A")]
		[Address(RVA = "0xDCB6F8", Offset = "0xDCB6F8", VA = "0xDCB6F8", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x600083F")]
		[Address(RVA = "0xDCB7C4", Offset = "0xDCB7C4", VA = "0xDCB7C4")]
		public JSONBool(bool aData)
		{
		}

		[Token(Token = "0x6000840")]
		[Address(RVA = "0xDCB844", Offset = "0xDCB844", VA = "0xDCB844")]
		public JSONBool(string aData)
		{
		}

		[Token(Token = "0x6000841")]
		[Address(RVA = "0xDCB8CC", Offset = "0xDCB8CC", VA = "0xDCB8CC", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x6000842")]
		[Address(RVA = "0xDCB950", Offset = "0xDCB950", VA = "0xDCB950", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000843")]
		[Address(RVA = "0xDCB9D8", Offset = "0xDCB9D8", VA = "0xDCB9D8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x20000EC")]
	public class JSONNull : JSONNode
	{
		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static JSONNull m_StaticInstance;

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool reuseSameInstance;

		[Token(Token = "0x1700009C")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6000846")]
			[Address(RVA = "0xDCEA10", Offset = "0xDCEA10", VA = "0xDCEA10", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x1700009D")]
		public override bool IsNull
		{
			[Token(Token = "0x6000847")]
			[Address(RVA = "0xDCEA18", Offset = "0xDCEA18", VA = "0xDCEA18", Slot = "15")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700009E")]
		public override string Value
		{
			[Token(Token = "0x6000849")]
			[Address(RVA = "0xDCEA40", Offset = "0xDCEA40", VA = "0xDCEA40", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x600084A")]
			[Address(RVA = "0xDCEA88", Offset = "0xDCEA88", VA = "0xDCEA88", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x1700009F")]
		public override bool AsBool
		{
			[Token(Token = "0x600084B")]
			[Address(RVA = "0xDCEA8C", Offset = "0xDCEA8C", VA = "0xDCEA8C", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600084C")]
			[Address(RVA = "0xDCEA94", Offset = "0xDCEA94", VA = "0xDCEA94", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x6000844")]
		[Address(RVA = "0xDCAC40", Offset = "0xDCAC40", VA = "0xDCAC40")]
		public static JSONNull CreateOrGet()
		{
			return null;
		}

		[Token(Token = "0x6000845")]
		[Address(RVA = "0xDCE9A8", Offset = "0xDCE9A8", VA = "0xDCE9A8")]
		private JSONNull()
		{
		}

		[Token(Token = "0x6000848")]
		[Address(RVA = "0xDCEA20", Offset = "0xDCEA20", VA = "0xDCEA20", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0xDCEA98", Offset = "0xDCEA98", VA = "0xDCEA98", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600084E")]
		[Address(RVA = "0xDCEB34", Offset = "0xDCEB34", VA = "0xDCEB34", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600084F")]
		[Address(RVA = "0xDCEB3C", Offset = "0xDCEB3C", VA = "0xDCEB3C", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}
	}
	[Token(Token = "0x20000ED")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9258BC", Offset = "0x9258BC")]
	internal class JSONLazyCreator : JSONNode
	{
		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private JSONNode m_Node;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_Key;

		[Token(Token = "0x170000A0")]
		public override JSONNodeType Tag
		{
			[Token(Token = "0x6000851")]
			[Address(RVA = "0xDCB9E4", Offset = "0xDCB9E4", VA = "0xDCB9E4", Slot = "4")]
			get
			{
				return default(JSONNodeType);
			}
		}

		[Token(Token = "0x170000A1")]
		public override JSONNode Item
		{
			[Token(Token = "0x6000856")]
			[Address(RVA = "0xDCBB10", Offset = "0xDCBB10", VA = "0xDCBB10", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000857")]
			[Address(RVA = "0xDCBB70", Offset = "0xDCBB70", VA = "0xDCBB70", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170000A2")]
		public override JSONNode Item
		{
			[Token(Token = "0x6000858")]
			[Address(RVA = "0xDCBC00", Offset = "0xDCBC00", VA = "0xDCBC00", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000859")]
			[Address(RVA = "0xDCBC70", Offset = "0xDCBC70", VA = "0xDCBC70", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170000A3")]
		public override int AsInt
		{
			[Token(Token = "0x6000860")]
			[Address(RVA = "0xDCBF10", Offset = "0xDCBF10", VA = "0xDCBF10", Slot = "31")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000861")]
			[Address(RVA = "0xDCBFF8", Offset = "0xDCBFF8", VA = "0xDCBFF8", Slot = "32")]
			set
			{
			}
		}

		[Token(Token = "0x170000A4")]
		public override float AsFloat
		{
			[Token(Token = "0x6000862")]
			[Address(RVA = "0xDCC068", Offset = "0xDCC068", VA = "0xDCC068", Slot = "33")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000863")]
			[Address(RVA = "0xDCC0D4", Offset = "0xDCC0D4", VA = "0xDCC0D4", Slot = "34")]
			set
			{
			}
		}

		[Token(Token = "0x170000A5")]
		public override double AsDouble
		{
			[Token(Token = "0x6000864")]
			[Address(RVA = "0xDCC144", Offset = "0xDCC144", VA = "0xDCC144", Slot = "29")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000865")]
			[Address(RVA = "0xDCC1B0", Offset = "0xDCC1B0", VA = "0xDCC1B0", Slot = "30")]
			set
			{
			}
		}

		[Token(Token = "0x170000A6")]
		public override bool AsBool
		{
			[Token(Token = "0x6000866")]
			[Address(RVA = "0xDCC220", Offset = "0xDCC220", VA = "0xDCC220", Slot = "35")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000867")]
			[Address(RVA = "0xDCC28C", Offset = "0xDCC28C", VA = "0xDCC28C", Slot = "36")]
			set
			{
			}
		}

		[Token(Token = "0x170000A7")]
		public override JSONArray AsArray
		{
			[Token(Token = "0x6000868")]
			[Address(RVA = "0xDCC2FC", Offset = "0xDCC2FC", VA = "0xDCC2FC", Slot = "37")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A8")]
		public override JSONObject AsObject
		{
			[Token(Token = "0x6000869")]
			[Address(RVA = "0xDCC364", Offset = "0xDCC364", VA = "0xDCC364", Slot = "38")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000852")]
		[Address(RVA = "0xDCB9EC", Offset = "0xDCB9EC", VA = "0xDCB9EC", Slot = "28")]
		public override Enumerator GetEnumerator()
		{
			return default(Enumerator);
		}

		[Token(Token = "0x6000853")]
		[Address(RVA = "0xDCA900", Offset = "0xDCA900", VA = "0xDCA900")]
		public JSONLazyCreator(JSONNode aNode)
		{
		}

		[Token(Token = "0x6000854")]
		[Address(RVA = "0xDCBA0C", Offset = "0xDCBA0C", VA = "0xDCBA0C")]
		public JSONLazyCreator(JSONNode aNode, string aKey)
		{
		}

		[Token(Token = "0x6000855")]
		[Address(RVA = "0xDCBA8C", Offset = "0xDCBA8C", VA = "0xDCBA8C")]
		private void Set(JSONNode aVal)
		{
		}

		[Token(Token = "0x600085A")]
		[Address(RVA = "0xDCBD98", Offset = "0xDCBD98", VA = "0xDCBD98", Slot = "21")]
		public override void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0xDCBE28", Offset = "0xDCBE28", VA = "0xDCBE28", Slot = "20")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x600085C")]
		[Address(RVA = "0xDCBEC0", Offset = "0xDCBEC0", VA = "0xDCBEC0")]
		public static bool operator ==(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0xDCBED8", Offset = "0xDCBED8", VA = "0xDCBED8")]
		public static bool operator !=(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x600085E")]
		[Address(RVA = "0xDCBEF0", Offset = "0xDCBEF0", VA = "0xDCBEF0", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600085F")]
		[Address(RVA = "0xDCBF08", Offset = "0xDCBF08", VA = "0xDCBF08", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0xDCC3CC", Offset = "0xDCC3CC", VA = "0xDCC3CC", Slot = "27")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}
	}
	[Token(Token = "0x20000EE")]
	public static class JSON
	{
		[Token(Token = "0x600086B")]
		[Address(RVA = "0xDC9FA8", Offset = "0xDC9FA8", VA = "0xDC9FA8")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}
	}
}
namespace TMPro
{
	[Serializable]
	[Token(Token = "0x20000EF")]
	public class TMP_DigitValidator : TMP_InputValidator
	{
		[Token(Token = "0x600086C")]
		[Address(RVA = "0xEDD6EC", Offset = "0xEDD6EC", VA = "0xEDD6EC", Slot = "4")]
		public override char Validate(ref string text, ref int pos, char ch)
		{
			return default(char);
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0xEDD718", Offset = "0xEDD718", VA = "0xEDD718")]
		public TMP_DigitValidator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000F0")]
	public class TMP_PhoneNumberValidator : TMP_InputValidator
	{
		[Token(Token = "0x600086E")]
		[Address(RVA = "0xEDD720", Offset = "0xEDD720", VA = "0xEDD720", Slot = "4")]
		public override char Validate(ref string text, ref int pos, char ch)
		{
			return default(char);
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0xEDDAFC", Offset = "0xEDDAFC", VA = "0xEDDAFC")]
		public TMP_PhoneNumberValidator()
		{
		}
	}
	[Token(Token = "0x20000F1")]
	public class TMP_TextEventHandler : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Serializable]
		[Token(Token = "0x2000493")]
		public class CharacterSelectionEvent : UnityEvent<char, int>
		{
			[Token(Token = "0x6002260")]
			[Address(RVA = "0xEDE750", Offset = "0xEDE750", VA = "0xEDE750")]
			public CharacterSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000494")]
		public class SpriteSelectionEvent : UnityEvent<char, int>
		{
			[Token(Token = "0x6002261")]
			[Address(RVA = "0xEDE7A0", Offset = "0xEDE7A0", VA = "0xEDE7A0")]
			public SpriteSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000495")]
		public class WordSelectionEvent : UnityEvent<string, int, int>
		{
			[Token(Token = "0x6002262")]
			[Address(RVA = "0xEDE7F0", Offset = "0xEDE7F0", VA = "0xEDE7F0")]
			public WordSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000496")]
		public class LineSelectionEvent : UnityEvent<string, int, int>
		{
			[Token(Token = "0x6002263")]
			[Address(RVA = "0xEDE840", Offset = "0xEDE840", VA = "0xEDE840")]
			public LineSelectionEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000497")]
		public class LinkSelectionEvent : UnityEvent<string, string, int>
		{
			[Token(Token = "0x6002264")]
			[Address(RVA = "0xEDE890", Offset = "0xEDE890", VA = "0xEDE890")]
			public LinkSelectionEvent()
			{
			}
		}

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CharacterSelectionEvent m_OnCharacterSelection;

		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SpriteSelectionEvent m_OnSpriteSelection;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private WordSelectionEvent m_OnWordSelection;

		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LineSelectionEvent m_OnLineSelection;

		[Token(Token = "0x4000777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LinkSelectionEvent m_OnLinkSelection;

		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4000779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Camera m_Camera;

		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Canvas m_Canvas;

		[Token(Token = "0x400077B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_selectedLink;

		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_lastCharIndex;

		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_lastWordIndex;

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int m_lastLineIndex;

		[Token(Token = "0x170000A9")]
		public CharacterSelectionEvent onCharacterSelection
		{
			[Token(Token = "0x6000870")]
			[Address(RVA = "0xEDDB04", Offset = "0xEDDB04", VA = "0xEDDB04")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000871")]
			[Address(RVA = "0xEDDB0C", Offset = "0xEDDB0C", VA = "0xEDDB0C")]
			set
			{
			}
		}

		[Token(Token = "0x170000AA")]
		public SpriteSelectionEvent onSpriteSelection
		{
			[Token(Token = "0x6000872")]
			[Address(RVA = "0xEDDB14", Offset = "0xEDDB14", VA = "0xEDDB14")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000873")]
			[Address(RVA = "0xEDDB1C", Offset = "0xEDDB1C", VA = "0xEDDB1C")]
			set
			{
			}
		}

		[Token(Token = "0x170000AB")]
		public WordSelectionEvent onWordSelection
		{
			[Token(Token = "0x6000874")]
			[Address(RVA = "0xEDDB24", Offset = "0xEDDB24", VA = "0xEDDB24")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000875")]
			[Address(RVA = "0xEDDB2C", Offset = "0xEDDB2C", VA = "0xEDDB2C")]
			set
			{
			}
		}

		[Token(Token = "0x170000AC")]
		public LineSelectionEvent onLineSelection
		{
			[Token(Token = "0x6000876")]
			[Address(RVA = "0xEDDB34", Offset = "0xEDDB34", VA = "0xEDDB34")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000877")]
			[Address(RVA = "0xEDDB3C", Offset = "0xEDDB3C", VA = "0xEDDB3C")]
			set
			{
			}
		}

		[Token(Token = "0x170000AD")]
		public LinkSelectionEvent onLinkSelection
		{
			[Token(Token = "0x6000878")]
			[Address(RVA = "0xEDDB44", Offset = "0xEDDB44", VA = "0xEDDB44")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000879")]
			[Address(RVA = "0xEDDB4C", Offset = "0xEDDB4C", VA = "0xEDDB4C")]
			set
			{
			}
		}

		[Token(Token = "0x600087A")]
		[Address(RVA = "0xEDDB54", Offset = "0xEDDB54", VA = "0xEDDB54")]
		private void Awake()
		{
		}

		[Token(Token = "0x600087B")]
		[Address(RVA = "0xEDDCF4", Offset = "0xEDDCF4", VA = "0xEDDCF4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600087C")]
		[Address(RVA = "0xEDE66C", Offset = "0xEDE66C", VA = "0xEDE66C", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600087D")]
		[Address(RVA = "0xEDE670", Offset = "0xEDE670", VA = "0xEDE670", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600087E")]
		[Address(RVA = "0xEDE3C4", Offset = "0xEDE3C4", VA = "0xEDE3C4")]
		private void SendOnCharacterSelection(char character, int characterIndex)
		{
		}

		[Token(Token = "0x600087F")]
		[Address(RVA = "0xEDE440", Offset = "0xEDE440", VA = "0xEDE440")]
		private void SendOnSpriteSelection(char character, int characterIndex)
		{
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0xEDE4BC", Offset = "0xEDE4BC", VA = "0xEDE4BC")]
		private void SendOnWordSelection(string word, int charIndex, int length)
		{
		}

		[Token(Token = "0x6000881")]
		[Address(RVA = "0xEDE54C", Offset = "0xEDE54C", VA = "0xEDE54C")]
		private void SendOnLineSelection(string line, int charIndex, int length)
		{
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0xEDE5DC", Offset = "0xEDE5DC", VA = "0xEDE5DC")]
		private void SendOnLinkSelection(string linkID, string linkText, int linkIndex)
		{
		}

		[Token(Token = "0x6000883")]
		[Address(RVA = "0xEDE674", Offset = "0xEDE674", VA = "0xEDE674")]
		public TMP_TextEventHandler()
		{
		}
	}
}
namespace TMPro.Examples
{
	[Token(Token = "0x20000F2")]
	public class Benchmark01 : MonoBehaviour
	{
		[Token(Token = "0x2000498")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92745C", Offset = "0x92745C")]
		private sealed class <Start>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Benchmark01 <>4__this;

			[Token(Token = "0x4001D64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x170003E7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002268")]
				[Address(RVA = "0xDD0CA8", Offset = "0xDD0CA8", VA = "0xDD0CA8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600226A")]
				[Address(RVA = "0xDD0D18", Offset = "0xDD0D18", VA = "0xDD0D18", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002265")]
			[Address(RVA = "0xDD05A4", Offset = "0xDD05A4", VA = "0xDD05A4")]
			[DebuggerHidden]
			public <Start>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6002266")]
			[Address(RVA = "0xDD05D8", Offset = "0xDD05D8", VA = "0xDD05D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002267")]
			[Address(RVA = "0xDD05DC", Offset = "0xDD05DC", VA = "0xDD05DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002269")]
			[Address(RVA = "0xDD0CB0", Offset = "0xDD0CB0", VA = "0xDD0CB0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int BenchmarkType;

		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TMP_FontAsset TMProFont;

		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Font TextMeshFont;

		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextContainer m_textContainer;

		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TextMesh m_textMesh;

		[Token(Token = "0x4000785")]
		private const string label01 = "The <#0050FF>count is: </color>{0}";

		[Token(Token = "0x4000786")]
		private const string label02 = "The <color=#0050FF>count is: </color>";

		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_material01;

		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_material02;

		[Token(Token = "0x6000884")]
		[Address(RVA = "0xDD0530", Offset = "0xDD0530", VA = "0xDD0530")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9393B8", Offset = "0x9393B8")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000885")]
		[Address(RVA = "0xDD05D0", Offset = "0xDD05D0", VA = "0xDD05D0")]
		public Benchmark01()
		{
		}
	}
	[Token(Token = "0x20000F3")]
	public class Benchmark01_UGUI : MonoBehaviour
	{
		[Token(Token = "0x2000499")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92746C", Offset = "0x92746C")]
		private sealed class <Start>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Benchmark01_UGUI <>4__this;

			[Token(Token = "0x4001D68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x170003E9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600226E")]
				[Address(RVA = "0xDD136C", Offset = "0xDD136C", VA = "0xDD136C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003EA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002270")]
				[Address(RVA = "0xDD13DC", Offset = "0xDD13DC", VA = "0xDD13DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600226B")]
			[Address(RVA = "0xDD0D94", Offset = "0xDD0D94", VA = "0xDD0D94")]
			[DebuggerHidden]
			public <Start>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x600226C")]
			[Address(RVA = "0xDD0DC8", Offset = "0xDD0DC8", VA = "0xDD0DC8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600226D")]
			[Address(RVA = "0xDD0DCC", Offset = "0xDD0DCC", VA = "0xDD0DCC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600226F")]
			[Address(RVA = "0xDD1374", Offset = "0xDD1374", VA = "0xDD1374", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int BenchmarkType;

		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Canvas canvas;

		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TMP_FontAsset TMProFont;

		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Font TextMeshFont;

		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TextMeshProUGUI m_textMeshPro;

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Text m_textMesh;

		[Token(Token = "0x400078F")]
		private const string label01 = "The <#0050FF>count is: </color>";

		[Token(Token = "0x4000790")]
		private const string label02 = "The <color=#0050FF>count is: </color>";

		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_material01;

		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material m_material02;

		[Token(Token = "0x6000886")]
		[Address(RVA = "0xDD0D20", Offset = "0xDD0D20", VA = "0xDD0D20")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93941C", Offset = "0x93941C")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000887")]
		[Address(RVA = "0xDD0DC0", Offset = "0xDD0DC0", VA = "0xDD0DC0")]
		public Benchmark01_UGUI()
		{
		}
	}
	[Token(Token = "0x20000F4")]
	public class Benchmark02 : MonoBehaviour
	{
		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int NumberOfNPC;

		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshProFloatingText floatingText_Script;

		[Token(Token = "0x6000888")]
		[Address(RVA = "0xDD13E4", Offset = "0xDD13E4", VA = "0xDD13E4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000889")]
		[Address(RVA = "0xDD1C68", Offset = "0xDD1C68", VA = "0xDD1C68")]
		public Benchmark02()
		{
		}
	}
	[Token(Token = "0x20000F5")]
	public class Benchmark03 : MonoBehaviour
	{
		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int NumberOfNPC;

		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Font TheFont;

		[Token(Token = "0x600088A")]
		[Address(RVA = "0xDD1C78", Offset = "0xDD1C78", VA = "0xDD1C78")]
		private void Awake()
		{
		}

		[Token(Token = "0x600088B")]
		[Address(RVA = "0xDD1C7C", Offset = "0xDD1C7C", VA = "0xDD1C7C")]
		private void Start()
		{
		}

		[Token(Token = "0x600088C")]
		[Address(RVA = "0xDD2080", Offset = "0xDD2080", VA = "0xDD2080")]
		public Benchmark03()
		{
		}
	}
	[Token(Token = "0x20000F6")]
	public class Benchmark04 : MonoBehaviour
	{
		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int MinPointSize;

		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int MaxPointSize;

		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int Steps;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform m_Transform;

		[Token(Token = "0x600088D")]
		[Address(RVA = "0xDD2090", Offset = "0xDD2090", VA = "0xDD2090")]
		private void Start()
		{
		}

		[Token(Token = "0x600088E")]
		[Address(RVA = "0xDD24DC", Offset = "0xDD24DC", VA = "0xDD24DC")]
		public Benchmark04()
		{
		}
	}
	[Token(Token = "0x20000F7")]
	public class CameraController : MonoBehaviour
	{
		[Token(Token = "0x200049A")]
		public enum CameraModes
		{
			[Token(Token = "0x4001D6A")]
			Follow,
			[Token(Token = "0x4001D6B")]
			Isometric,
			[Token(Token = "0x4001D6C")]
			Free
		}

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform cameraTransform;

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform dummyTarget;

		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform CameraTarget;

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float FollowDistance;

		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float MaxFollowDistance;

		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float MinFollowDistance;

		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float ElevationAngle;

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float MaxElevationAngle;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float MinElevationAngle;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float OrbitalAngle;

		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public CameraModes CameraMode;

		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool MovementSmoothing;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool RotationSmoothing;

		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		private bool previousSmoothing;

		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float MovementSmoothingValue;

		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float RotationSmoothingValue;

		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float MoveSensitivity;

		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 currentVelocity;

		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 desiredPosition;

		[Token(Token = "0x40007B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float mouseX;

		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float mouseY;

		[Token(Token = "0x40007B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 moveVector;

		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float mouseWheel;

		[Token(Token = "0x40007B5")]
		private const string event_SmoothingValue = "Slider - Smoothing Value";

		[Token(Token = "0x40007B6")]
		private const string event_FollowDistance = "Slider - Camera Zoom";

		[Token(Token = "0x600088F")]
		[Address(RVA = "0xDD24F8", Offset = "0xDD24F8", VA = "0xDD24F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000890")]
		[Address(RVA = "0xDD257C", Offset = "0xDD257C", VA = "0xDD257C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000891")]
		[Address(RVA = "0xDD2638", Offset = "0xDD2638", VA = "0xDD2638")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000892")]
		[Address(RVA = "0xDD2B6C", Offset = "0xDD2B6C", VA = "0xDD2B6C")]
		private void GetPlayerInput()
		{
		}

		[Token(Token = "0x6000893")]
		[Address(RVA = "0xDD34F8", Offset = "0xDD34F8", VA = "0xDD34F8")]
		public CameraController()
		{
		}
	}
	[Token(Token = "0x20000F8")]
	public class ObjectSpin : MonoBehaviour
	{
		[Token(Token = "0x200049B")]
		public enum MotionType
		{
			[Token(Token = "0x4001D6E")]
			Rotation,
			[Token(Token = "0x4001D6F")]
			BackAndForth,
			[Token(Token = "0x4001D70")]
			Translation
		}

		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float SpinSpeed;

		[Token(Token = "0x40007B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int RotationRange;

		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_transform;

		[Token(Token = "0x40007BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_time;

		[Token(Token = "0x40007BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 m_prevPOS;

		[Token(Token = "0x40007BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_initial_Rotation;

		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 m_initial_Position;

		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Color32 m_lightColor;

		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int frames;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public MotionType Motion;

		[Token(Token = "0x6000894")]
		[Address(RVA = "0xDD35A0", Offset = "0xDD35A0", VA = "0xDD35A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000895")]
		[Address(RVA = "0xDD36D4", Offset = "0xDD36D4", VA = "0xDD36D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000896")]
		[Address(RVA = "0xDD396C", Offset = "0xDD396C", VA = "0xDD396C")]
		public ObjectSpin()
		{
		}
	}
	[Token(Token = "0x20000F9")]
	public class ShaderPropAnimator : MonoBehaviour
	{
		[Token(Token = "0x200049C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92747C", Offset = "0x92747C")]
		private sealed class <AnimateProperties>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShaderPropAnimator <>4__this;

			[Token(Token = "0x170003EB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002274")]
				[Address(RVA = "0xDD3C64", Offset = "0xDD3C64", VA = "0xDD3C64", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003EC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002276")]
				[Address(RVA = "0xDD3CD4", Offset = "0xDD3CD4", VA = "0xDD3CD4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002271")]
			[Address(RVA = "0xDD3A94", Offset = "0xDD3A94", VA = "0xDD3A94")]
			[DebuggerHidden]
			public <AnimateProperties>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6002272")]
			[Address(RVA = "0xDD3AC8", Offset = "0xDD3AC8", VA = "0xDD3AC8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002273")]
			[Address(RVA = "0xDD3ACC", Offset = "0xDD3ACC", VA = "0xDD3ACC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002275")]
			[Address(RVA = "0xDD3C6C", Offset = "0xDD3C6C", VA = "0xDD3C6C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Renderer m_Renderer;

		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material m_Material;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve GlowCurve;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_frame;

		[Token(Token = "0x6000897")]
		[Address(RVA = "0xDD3980", Offset = "0xDD3980", VA = "0xDD3980")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000898")]
		[Address(RVA = "0xDD39F4", Offset = "0xDD39F4", VA = "0xDD39F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0xDD3A20", Offset = "0xDD3A20", VA = "0xDD3A20")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x939480", Offset = "0x939480")]
		private IEnumerator AnimateProperties()
		{
			return null;
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0xDD3AC0", Offset = "0xDD3AC0", VA = "0xDD3AC0")]
		public ShaderPropAnimator()
		{
		}
	}
	[Token(Token = "0x20000FA")]
	public class SimpleScript : MonoBehaviour
	{
		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x40007C6")]
		private const string label = "The <#0050FF>count is: </color>{0:2}";

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_frame;

		[Token(Token = "0x600089B")]
		[Address(RVA = "0xDD3CDC", Offset = "0xDD3CDC", VA = "0xDD3CDC")]
		private void Start()
		{
		}

		[Token(Token = "0x600089C")]
		[Address(RVA = "0xDD3DD0", Offset = "0xDD3DD0", VA = "0xDD3DD0")]
		private void Update()
		{
		}

		[Token(Token = "0x600089D")]
		[Address(RVA = "0xDD3E74", Offset = "0xDD3E74", VA = "0xDD3E74")]
		public SimpleScript()
		{
		}
	}
	[Token(Token = "0x20000FB")]
	public class SkewTextExample : MonoBehaviour
	{
		[Token(Token = "0x200049D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92748C", Offset = "0x92748C")]
		private sealed class <WarpText>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SkewTextExample <>4__this;

			[Token(Token = "0x4001D77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <old_CurveScale>5__2;

			[Token(Token = "0x4001D78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <old_ShearValue>5__3;

			[Token(Token = "0x4001D79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AnimationCurve <old_curve>5__4;

			[Token(Token = "0x170003ED")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600227A")]
				[Address(RVA = "0xDD53C0", Offset = "0xDD53C0", VA = "0xDD53C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003EE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600227C")]
				[Address(RVA = "0xDD5430", Offset = "0xDD5430", VA = "0xDD5430", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002277")]
			[Address(RVA = "0xDD4024", Offset = "0xDD4024", VA = "0xDD4024")]
			[DebuggerHidden]
			public <WarpText>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6002278")]
			[Address(RVA = "0xDD42C4", Offset = "0xDD42C4", VA = "0xDD42C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002279")]
			[Address(RVA = "0xDD42C8", Offset = "0xDD42C8", VA = "0xDD42C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600227B")]
			[Address(RVA = "0xDD53C8", Offset = "0xDD53C8", VA = "0xDD53C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40007C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x40007C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve VertexCurve;

		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float CurveScale;

		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float ShearAmount;

		[Token(Token = "0x600089E")]
		[Address(RVA = "0xDD3E7C", Offset = "0xDD3E7C", VA = "0xDD3E7C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600089F")]
		[Address(RVA = "0xDD3EEC", Offset = "0xDD3EEC", VA = "0xDD3EEC")]
		private void Start()
		{
		}

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0xDD3F8C", Offset = "0xDD3F8C", VA = "0xDD3F8C")]
		private AnimationCurve CopyAnimationCurve(AnimationCurve curve)
		{
			return null;
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0xDD3F18", Offset = "0xDD3F18", VA = "0xDD3F18")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9394E4", Offset = "0x9394E4")]
		private IEnumerator WarpText()
		{
			return null;
		}

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0xDD4050", Offset = "0xDD4050", VA = "0xDD4050")]
		public SkewTextExample()
		{
		}
	}
	[Token(Token = "0x20000FC")]
	public class TeleType : MonoBehaviour
	{
		[Token(Token = "0x200049E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92749C", Offset = "0x92749C")]
		private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TeleType <>4__this;

			[Token(Token = "0x4001D7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <totalVisibleCharacters>5__2;

			[Token(Token = "0x4001D7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <counter>5__3;

			[Token(Token = "0x170003EF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002280")]
				[Address(RVA = "0xDDBCF4", Offset = "0xDDBCF4", VA = "0xDDBCF4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002282")]
				[Address(RVA = "0xDDBD64", Offset = "0xDDBD64", VA = "0xDDBD64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600227D")]
			[Address(RVA = "0xDDB9A8", Offset = "0xDDB9A8", VA = "0xDDB9A8")]
			[DebuggerHidden]
			public <Start>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x600227E")]
			[Address(RVA = "0xDDBA3C", Offset = "0xDDBA3C", VA = "0xDDBA3C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600227F")]
			[Address(RVA = "0xDDBA40", Offset = "0xDDBA40", VA = "0xDDBA40", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002281")]
			[Address(RVA = "0xDDBCFC", Offset = "0xDDBCFC", VA = "0xDDBCFC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string label01;

		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string label02;

		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_textMeshPro;

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0xDDB878", Offset = "0xDDB878", VA = "0xDDB878")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0xDDB934", Offset = "0xDDB934", VA = "0xDDB934")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x939548", Offset = "0x939548")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0xDDB9D4", Offset = "0xDDB9D4", VA = "0xDDB9D4")]
		public TeleType()
		{
		}
	}
	[Token(Token = "0x20000FD")]
	public class TextConsoleSimulator : MonoBehaviour
	{
		[Token(Token = "0x200049F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9274AC", Offset = "0x9274AC")]
		private sealed class <RevealCharacters>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TMP_Text textComponent;

			[Token(Token = "0x4001D82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TextConsoleSimulator <>4__this;

			[Token(Token = "0x4001D83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4001D84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <totalVisibleCharacters>5__3;

			[Token(Token = "0x4001D85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int <visibleCount>5__4;

			[Token(Token = "0x170003F1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002286")]
				[Address(RVA = "0xDDC2B4", Offset = "0xDDC2B4", VA = "0xDDC2B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002288")]
				[Address(RVA = "0xDDC324", Offset = "0xDDC324", VA = "0xDDC324", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002283")]
			[Address(RVA = "0xDDC040", Offset = "0xDDC040", VA = "0xDDC040")]
			[DebuggerHidden]
			public <RevealCharacters>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6002284")]
			[Address(RVA = "0xDDC114", Offset = "0xDDC114", VA = "0xDDC114", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002285")]
			[Address(RVA = "0xDDC118", Offset = "0xDDC118", VA = "0xDDC118", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002287")]
			[Address(RVA = "0xDDC2BC", Offset = "0xDDC2BC", VA = "0xDDC2BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9274BC", Offset = "0x9274BC")]
		private sealed class <RevealWords>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TMP_Text textComponent;

			[Token(Token = "0x4001D89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <totalWordCount>5__2;

			[Token(Token = "0x4001D8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <totalVisibleCharacters>5__3;

			[Token(Token = "0x4001D8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <counter>5__4;

			[Token(Token = "0x4001D8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <visibleCount>5__5;

			[Token(Token = "0x170003F3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600228C")]
				[Address(RVA = "0xDDC59C", Offset = "0xDDC59C", VA = "0xDDC59C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600228E")]
				[Address(RVA = "0xDDC60C", Offset = "0xDDC60C", VA = "0xDDC60C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002289")]
			[Address(RVA = "0xDDC0E0", Offset = "0xDDC0E0", VA = "0xDDC0E0")]
			[DebuggerHidden]
			public <RevealWords>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x600228A")]
			[Address(RVA = "0xDDC32C", Offset = "0xDDC32C", VA = "0xDDC32C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600228B")]
			[Address(RVA = "0xDDC330", Offset = "0xDDC330", VA = "0xDDC330", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600228D")]
			[Address(RVA = "0xDDC5A4", Offset = "0xDDC5A4", VA = "0xDDC5A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x40007D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool hasTextChanged;

		[Token(Token = "0x60008A6")]
		[Address(RVA = "0xDDBD6C", Offset = "0xDDBD6C", VA = "0xDDBD6C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008A7")]
		[Address(RVA = "0xDDBDDC", Offset = "0xDDBDDC", VA = "0xDDBDDC")]
		private void Start()
		{
		}

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0xDDBEA4", Offset = "0xDDBEA4", VA = "0xDDBEA4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60008A9")]
		[Address(RVA = "0xDDBF6C", Offset = "0xDDBF6C", VA = "0xDDBF6C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60008AA")]
		[Address(RVA = "0xDDC034", Offset = "0xDDC034", VA = "0xDDC034")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x60008AB")]
		[Address(RVA = "0xDDBE0C", Offset = "0xDDBE0C", VA = "0xDDBE0C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9395AC", Offset = "0x9395AC")]
		private IEnumerator RevealCharacters(TMP_Text textComponent)
		{
			return null;
		}

		[Token(Token = "0x60008AC")]
		[Address(RVA = "0xDDC06C", Offset = "0xDDC06C", VA = "0xDDC06C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x939610", Offset = "0x939610")]
		private IEnumerator RevealWords(TMP_Text textComponent)
		{
			return null;
		}

		[Token(Token = "0x60008AD")]
		[Address(RVA = "0xDDC10C", Offset = "0xDDC10C", VA = "0xDDC10C")]
		public TextConsoleSimulator()
		{
		}
	}
	[Token(Token = "0x20000FE")]
	public class TextMeshProFloatingText : MonoBehaviour
	{
		[Token(Token = "0x20004A1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9274CC", Offset = "0x9274CC")]
		private sealed class <DisplayTextMeshProFloatingText>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextMeshProFloatingText <>4__this;

			[Token(Token = "0x4001D90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <CountDuration>5__2;

			[Token(Token = "0x4001D91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <starting_Count>5__3;

			[Token(Token = "0x4001D92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <current_Count>5__4;

			[Token(Token = "0x4001D93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <start_pos>5__5;

			[Token(Token = "0x4001D94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Color32 <start_color>5__6;

			[Token(Token = "0x4001D95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <alpha>5__7;

			[Token(Token = "0x4001D96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <fadeDuration>5__8;

			[Token(Token = "0x170003F5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002292")]
				[Address(RVA = "0xDDDAC0", Offset = "0xDDDAC0", VA = "0xDDDAC0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002294")]
				[Address(RVA = "0xDDDB30", Offset = "0xDDDB30", VA = "0xDDDB30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600228F")]
			[Address(RVA = "0xDDCD80", Offset = "0xDDCD80", VA = "0xDDCD80")]
			[DebuggerHidden]
			public <DisplayTextMeshProFloatingText>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6002290")]
			[Address(RVA = "0xDDD4D4", Offset = "0xDDD4D4", VA = "0xDDD4D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002291")]
			[Address(RVA = "0xDDD4D8", Offset = "0xDDD4D8", VA = "0xDDD4D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002293")]
			[Address(RVA = "0xDDDAC8", Offset = "0xDDDAC8", VA = "0xDDDAC8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9274DC", Offset = "0x9274DC")]
		private sealed class <DisplayTextMeshFloatingText>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001D97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001D98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001D99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextMeshProFloatingText <>4__this;

			[Token(Token = "0x4001D9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <CountDuration>5__2;

			[Token(Token = "0x4001D9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <starting_Count>5__3;

			[Token(Token = "0x4001D9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <current_Count>5__4;

			[Token(Token = "0x4001D9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <start_pos>5__5;

			[Token(Token = "0x4001D9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Color32 <start_color>5__6;

			[Token(Token = "0x4001D9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <alpha>5__7;

			[Token(Token = "0x4001DA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <fadeDuration>5__8;

			[Token(Token = "0x170003F7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002298")]
				[Address(RVA = "0xDDD45C", Offset = "0xDDD45C", VA = "0xDDD45C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600229A")]
				[Address(RVA = "0xDDD4CC", Offset = "0xDDD4CC", VA = "0xDDD4CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002295")]
			[Address(RVA = "0xDDCDAC", Offset = "0xDDCDAC", VA = "0xDDCDAC")]
			[DebuggerHidden]
			public <DisplayTextMeshFloatingText>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002296")]
			[Address(RVA = "0xDDCE80", Offset = "0xDDCE80", VA = "0xDDCE80", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002297")]
			[Address(RVA = "0xDDCE84", Offset = "0xDDCE84", VA = "0xDDCE84", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002299")]
			[Address(RVA = "0xDDD464", Offset = "0xDDD464", VA = "0xDDD464", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Font TheFont;

		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject m_floatingText;

		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshPro m_textMeshPro;

		[Token(Token = "0x40007D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMesh m_textMesh;

		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform m_transform;

		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform m_floatingText_Transform;

		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform m_cameraTransform;

		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 lastPOS;

		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Quaternion lastRotation;

		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int SpawnType;

		[Token(Token = "0x60008AE")]
		[Address(RVA = "0xDDC614", Offset = "0xDDC614", VA = "0xDDC614")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008AF")]
		[Address(RVA = "0xDDC6DC", Offset = "0xDDC6DC", VA = "0xDDC6DC")]
		private void Start()
		{
		}

		[Token(Token = "0x60008B0")]
		[Address(RVA = "0xDDCC98", Offset = "0xDDCC98", VA = "0xDDCC98")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x939674", Offset = "0x939674")]
		public IEnumerator DisplayTextMeshProFloatingText()
		{
			return null;
		}

		[Token(Token = "0x60008B1")]
		[Address(RVA = "0xDDCD0C", Offset = "0xDDCD0C", VA = "0xDDCD0C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9396D8", Offset = "0x9396D8")]
		public IEnumerator DisplayTextMeshFloatingText()
		{
			return null;
		}

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0xDDCDD8", Offset = "0xDDCDD8", VA = "0xDDCDD8")]
		public TextMeshProFloatingText()
		{
		}
	}
	[Token(Token = "0x20000FF")]
	public class TextMeshSpawner : MonoBehaviour
	{
		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int SpawnType;

		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int NumberOfNPC;

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Font TheFont;

		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshProFloatingText floatingText_Script;

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0xDDDB38", Offset = "0xDDDB38", VA = "0xDDDB38")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0xDDDB3C", Offset = "0xDDDB3C", VA = "0xDDDB3C")]
		private void Start()
		{
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0xDDDFB8", Offset = "0xDDDFB8", VA = "0xDDDFB8")]
		public TextMeshSpawner()
		{
		}
	}
	[Token(Token = "0x2000100")]
	public class TMP_ExampleScript_01 : MonoBehaviour
	{
		[Token(Token = "0x20004A3")]
		public enum objectType
		{
			[Token(Token = "0x4001DA2")]
			TextMeshPro,
			[Token(Token = "0x4001DA3")]
			TextMeshProUGUI
		}

		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public objectType ObjectType;

		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool isStatic;

		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TMP_Text m_text;

		[Token(Token = "0x40007E2")]
		private const string k_label = "The count is <#0080ff>{0}</color>";

		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int count;

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0xDD5438", Offset = "0xDD5438", VA = "0xDD5438")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008B7")]
		[Address(RVA = "0xDD5674", Offset = "0xDD5674", VA = "0xDD5674")]
		private void Update()
		{
		}

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0xDD5720", Offset = "0xDD5720", VA = "0xDD5720")]
		public TMP_ExampleScript_01()
		{
		}
	}
	[Token(Token = "0x2000101")]
	public class TMP_FrameRateCounter : MonoBehaviour
	{
		[Token(Token = "0x20004A4")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x4001DA5")]
			TopLeft,
			[Token(Token = "0x4001DA6")]
			BottomLeft,
			[Token(Token = "0x4001DA7")]
			TopRight,
			[Token(Token = "0x4001DA8")]
			BottomRight
		}

		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float UpdateInterval;

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_LastInterval;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_Frames;

		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string htmlColorTag;

		[Token(Token = "0x40007E9")]
		private const string fpsLabel = "{0:2}</color> <#8080ff>FPS \n<#FF8000>{1:2} <#8080ff>MS";

		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform m_frameCounter_transform;

		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Camera m_camera;

		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private FpsCounterAnchorPositions last_AnchorPosition;

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0xDD5728", Offset = "0xDD5728", VA = "0xDD5728")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0xDD5D1C", Offset = "0xDD5D1C", VA = "0xDD5D1C")]
		private void Start()
		{
		}

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0xDD5D48", Offset = "0xDD5D48", VA = "0xDD5D48")]
		private void Update()
		{
		}

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0xDD59B0", Offset = "0xDD59B0", VA = "0xDD59B0")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0xDD5EB8", Offset = "0xDD5EB8", VA = "0xDD5EB8")]
		public TMP_FrameRateCounter()
		{
		}
	}
	[Token(Token = "0x2000102")]
	public class TMP_TextEventCheck : MonoBehaviour
	{
		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TMP_TextEventHandler TextEventHandler;

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0xDD5ED0", Offset = "0xDD5ED0", VA = "0xDD5ED0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0xDD61A4", Offset = "0xDD61A4", VA = "0xDD61A4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0xDD6478", Offset = "0xDD6478", VA = "0xDD6478")]
		private void OnCharacterSelection(char c, int index)
		{
		}

		[Token(Token = "0x60008C1")]
		[Address(RVA = "0xDD66D8", Offset = "0xDD66D8", VA = "0xDD66D8")]
		private void OnSpriteSelection(char c, int index)
		{
		}

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0xDD6938", Offset = "0xDD6938", VA = "0xDD6938")]
		private void OnWordSelection(string word, int firstCharacterIndex, int length)
		{
		}

		[Token(Token = "0x60008C3")]
		[Address(RVA = "0xDD6C44", Offset = "0xDD6C44", VA = "0xDD6C44")]
		private void OnLineSelection(string lineText, int firstCharacterIndex, int length)
		{
		}

		[Token(Token = "0x60008C4")]
		[Address(RVA = "0xDD6F50", Offset = "0xDD6F50", VA = "0xDD6F50")]
		private void OnLinkSelection(string linkID, string linkText, int linkIndex)
		{
		}

		[Token(Token = "0x60008C5")]
		[Address(RVA = "0xDD7248", Offset = "0xDD7248", VA = "0xDD7248")]
		public TMP_TextEventCheck()
		{
		}
	}
	[Token(Token = "0x2000103")]
	[ExecuteInEditMode]
	public class TMP_TextInfoDebugTool : MonoBehaviour
	{
		[Token(Token = "0x40007EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool ShowCharacters;

		[Token(Token = "0x40007F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool ShowWords;

		[Token(Token = "0x40007F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool ShowLinks;

		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool ShowLines;

		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool ShowMeshBounds;

		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool ShowTextBounds;

		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x929894", Offset = "0x929894")]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x929894", Offset = "0x929894")]
		public string ObjectStats;

		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x40007F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform m_Transform;

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0xDD7250", Offset = "0xDD7250", VA = "0xDD7250")]
		public TMP_TextInfoDebugTool()
		{
		}
	}
	[Token(Token = "0x2000104")]
	public class TMP_TextSelector_A : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x40007F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x40007F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Camera m_Camera;

		[Token(Token = "0x40007FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_isHoveringObject;

		[Token(Token = "0x40007FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int m_selectedLink;

		[Token(Token = "0x40007FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_lastCharIndex;

		[Token(Token = "0x40007FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int m_lastWordIndex;

		[Token(Token = "0x60008C7")]
		[Address(RVA = "0xDD7258", Offset = "0xDD7258", VA = "0xDD7258")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008C8")]
		[Address(RVA = "0xDD72F4", Offset = "0xDD72F4", VA = "0xDD72F4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60008C9")]
		[Address(RVA = "0xDD7F80", Offset = "0xDD7F80", VA = "0xDD7F80", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60008CA")]
		[Address(RVA = "0xDD7FFC", Offset = "0xDD7FFC", VA = "0xDD7FFC", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60008CB")]
		[Address(RVA = "0xDD8074", Offset = "0xDD8074", VA = "0xDD8074")]
		public TMP_TextSelector_A()
		{
		}
	}
	[Token(Token = "0x2000105")]
	public class TMP_TextSelector_B : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IPointerClickHandler, IPointerUpHandler
	{
		[Token(Token = "0x40007FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RectTransform TextPopup_Prefab_01;

		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform m_TextPopup_RectTransform;

		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextMeshProUGUI m_TextPopup_TMPComponent;

		[Token(Token = "0x4000801")]
		private const string k_LinkText = "You have selected link <#ffff00>";

		[Token(Token = "0x4000802")]
		private const string k_WordText = "Word Index: <#ffff00>";

		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshProUGUI m_TextMeshPro;

		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Canvas m_Canvas;

		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Camera m_Camera;

		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool isHoveringObject;

		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int m_selectedWord;

		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_selectedLink;

		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_lastIndex;

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Matrix4x4 m_matrix;

		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TMP_MeshInfo[] m_cachedMeshInfoVertexData;

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0xDD808C", Offset = "0xDD808C", VA = "0xDD808C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0xDD8254", Offset = "0xDD8254", VA = "0xDD8254")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0xDD831C", Offset = "0xDD831C", VA = "0xDD831C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0xDD83E4", Offset = "0xDD83E4", VA = "0xDD83E4")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0xDD84A0", Offset = "0xDD84A0", VA = "0xDD84A0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0xDDABE8", Offset = "0xDDABE8", VA = "0xDDABE8", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0xDDABF4", Offset = "0xDDABF4", VA = "0xDDABF4", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0xDDABFC", Offset = "0xDDABFC", VA = "0xDDABFC", Slot = "6")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0xDDAC00", Offset = "0xDDAC00", VA = "0xDDAC00", Slot = "7")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0xDD9B80", Offset = "0xDD9B80", VA = "0xDD9B80")]
		private void RestoreCachedVertexAttributes(int index)
		{
		}

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0xDDAC04", Offset = "0xDDAC04", VA = "0xDDAC04")]
		public TMP_TextSelector_B()
		{
		}
	}
	[Token(Token = "0x2000106")]
	public class TMP_UiFrameRateCounter : MonoBehaviour
	{
		[Token(Token = "0x20004A5")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x4001DAA")]
			TopLeft,
			[Token(Token = "0x4001DAB")]
			BottomLeft,
			[Token(Token = "0x4001DAC")]
			TopRight,
			[Token(Token = "0x4001DAD")]
			BottomRight
		}

		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float UpdateInterval;

		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_LastInterval;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int m_Frames;

		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string htmlColorTag;

		[Token(Token = "0x4000811")]
		private const string fpsLabel = "{0:2}</color> <#8080ff>FPS \n<#FF8000>{1:2} <#8080ff>MS";

		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMeshProUGUI m_TextMeshPro;

		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RectTransform m_frameCounter_transform;

		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private FpsCounterAnchorPositions last_AnchorPosition;

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0xDDAC1C", Offset = "0xDDAC1C", VA = "0xDDAC1C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0xDDB23C", Offset = "0xDDB23C", VA = "0xDDB23C")]
		private void Start()
		{
		}

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0xDDB268", Offset = "0xDDB268", VA = "0xDDB268")]
		private void Update()
		{
		}

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0xDDAE24", Offset = "0xDDAE24", VA = "0xDDAE24")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0xDDB3D8", Offset = "0xDDB3D8", VA = "0xDDB3D8")]
		public TMP_UiFrameRateCounter()
		{
		}
	}
	[Token(Token = "0x2000107")]
	public class TMPro_InstructionOverlay : MonoBehaviour
	{
		[Token(Token = "0x20004A6")]
		public enum FpsCounterAnchorPositions
		{
			[Token(Token = "0x4001DAF")]
			TopLeft,
			[Token(Token = "0x4001DB0")]
			BottomLeft,
			[Token(Token = "0x4001DB1")]
			TopRight,
			[Token(Token = "0x4001DB2")]
			BottomRight
		}

		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FpsCounterAnchorPositions AnchorPosition;

		[Token(Token = "0x4000816")]
		private const string instructions = "Camera Control - <#ffff00>Shift + RMB\n</color>Zoom - <#ffff00>Mouse wheel.";

		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshPro m_TextMeshPro;

		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TextContainer m_textContainer;

		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform m_frameCounter_transform;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Camera m_camera;

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0xDDB3F0", Offset = "0xDDB3F0", VA = "0xDDB3F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0xDDB6A4", Offset = "0xDDB6A4", VA = "0xDDB6A4")]
		private void Set_FrameCounter_Position(FpsCounterAnchorPositions anchor_position)
		{
		}

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0xDDB868", Offset = "0xDDB868", VA = "0xDDB868")]
		public TMPro_InstructionOverlay()
		{
		}
	}
	[Token(Token = "0x2000108")]
	public class VertexColorCycler : MonoBehaviour
	{
		[Token(Token = "0x20004A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9274EC", Offset = "0x9274EC")]
		private sealed class <AnimateVertexColors>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexColorCycler <>4__this;

			[Token(Token = "0x4001DB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4001DB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <currentCharacter>5__3;

			[Token(Token = "0x170003F9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600229E")]
				[Address(RVA = "0xDDE4EC", Offset = "0xDDE4EC", VA = "0xDDE4EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003FA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022A0")]
				[Address(RVA = "0xDDE55C", Offset = "0xDDE55C", VA = "0xDDE55C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600229B")]
			[Address(RVA = "0xDDE0C0", Offset = "0xDDE0C0", VA = "0xDDE0C0")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x600229C")]
			[Address(RVA = "0xDDE0F4", Offset = "0xDDE0F4", VA = "0xDDE0F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600229D")]
			[Address(RVA = "0xDDE0F8", Offset = "0xDDE0F8", VA = "0xDDE0F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600229F")]
			[Address(RVA = "0xDDE4F4", Offset = "0xDDE4F4", VA = "0xDDE4F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0xDDDFC8", Offset = "0xDDDFC8", VA = "0xDDDFC8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0xDDE020", Offset = "0xDDE020", VA = "0xDDE020")]
		private void Start()
		{
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0xDDE04C", Offset = "0xDDE04C", VA = "0xDDE04C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93973C", Offset = "0x93973C")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0xDDE0EC", Offset = "0xDDE0EC", VA = "0xDDE0EC")]
		public VertexColorCycler()
		{
		}
	}
	[Token(Token = "0x2000109")]
	public class VertexJitter : MonoBehaviour
	{
		[Token(Token = "0x20004A8")]
		private struct VertexAnim
		{
			[Token(Token = "0x4001DB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float angleRange;

			[Token(Token = "0x4001DB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float angle;

			[Token(Token = "0x4001DBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float speed;
		}

		[Token(Token = "0x20004A9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9274FC", Offset = "0x9274FC")]
		private sealed class <AnimateVertexColors>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexJitter <>4__this;

			[Token(Token = "0x4001DBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4001DBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <loopCount>5__3;

			[Token(Token = "0x4001DC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private VertexAnim[] <vertexAnim>5__4;

			[Token(Token = "0x4001DC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private TMP_MeshInfo[] <cachedMeshInfo>5__5;

			[Token(Token = "0x170003FB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022A4")]
				[Address(RVA = "0xDDF780", Offset = "0xDDF780", VA = "0xDDF780", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003FC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022A6")]
				[Address(RVA = "0xDDF7F0", Offset = "0xDDF7F0", VA = "0xDDF7F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022A1")]
			[Address(RVA = "0xDDE878", Offset = "0xDDE878", VA = "0xDDE878")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60022A2")]
			[Address(RVA = "0xDDE8BC", Offset = "0xDDE8BC", VA = "0xDDE8BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022A3")]
			[Address(RVA = "0xDDE8C0", Offset = "0xDDE8C0", VA = "0xDDE8C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022A5")]
			[Address(RVA = "0xDDF788", Offset = "0xDDF788", VA = "0xDDF788", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CurveScale;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x60008E3")]
		[Address(RVA = "0xDDE564", Offset = "0xDDE564", VA = "0xDDE564")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008E4")]
		[Address(RVA = "0xDDE5BC", Offset = "0xDDE5BC", VA = "0xDDE5BC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0xDDE684", Offset = "0xDDE684", VA = "0xDDE684")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60008E6")]
		[Address(RVA = "0xDDE74C", Offset = "0xDDE74C", VA = "0xDDE74C")]
		private void Start()
		{
		}

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0xDDE7EC", Offset = "0xDDE7EC", VA = "0xDDE7EC")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0xDDE778", Offset = "0xDDE778", VA = "0xDDE778")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9397A0", Offset = "0x9397A0")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0xDDE8A4", Offset = "0xDDE8A4", VA = "0xDDE8A4")]
		public VertexJitter()
		{
		}
	}
	[Token(Token = "0x200010A")]
	public class VertexShakeA : MonoBehaviour
	{
		[Token(Token = "0x20004AA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92750C", Offset = "0x92750C")]
		private sealed class <AnimateVertexColors>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexShakeA <>4__this;

			[Token(Token = "0x4001DC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4001DC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3[][] <copyOfVertices>5__3;

			[Token(Token = "0x170003FD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022AA")]
				[Address(RVA = "0xDE0D74", Offset = "0xDE0D74", VA = "0xDE0D74", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003FE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022AC")]
				[Address(RVA = "0xDE0DE4", Offset = "0xDE0DE4", VA = "0xDE0DE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022A7")]
			[Address(RVA = "0xDDFAFC", Offset = "0xDDFAFC", VA = "0xDDFAFC")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60022A8")]
			[Address(RVA = "0xDDFB38", Offset = "0xDDFB38", VA = "0xDDFB38", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022A9")]
			[Address(RVA = "0xDDFB3C", Offset = "0xDDFB3C", VA = "0xDDFB3C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022AB")]
			[Address(RVA = "0xDE0D7C", Offset = "0xDE0D7C", VA = "0xDE0D7C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float ScaleMultiplier;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RotationMultiplier;

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0xDDF7F8", Offset = "0xDDF7F8", VA = "0xDDF7F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0xDDF850", Offset = "0xDDF850", VA = "0xDDF850")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0xDDF918", Offset = "0xDDF918", VA = "0xDDF918")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0xDDF9E0", Offset = "0xDDF9E0", VA = "0xDDF9E0")]
		private void Start()
		{
		}

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0xDDFA80", Offset = "0xDDFA80", VA = "0xDDFA80")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0xDDFA0C", Offset = "0xDDFA0C", VA = "0xDDFA0C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x939804", Offset = "0x939804")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0xDDFB28", Offset = "0xDDFB28", VA = "0xDDFB28")]
		public VertexShakeA()
		{
		}
	}
	[Token(Token = "0x200010B")]
	public class VertexShakeB : MonoBehaviour
	{
		[Token(Token = "0x20004AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92751C", Offset = "0x92751C")]
		private sealed class <AnimateVertexColors>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexShakeB <>4__this;

			[Token(Token = "0x4001DCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4001DCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3[][] <copyOfVertices>5__3;

			[Token(Token = "0x170003FF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022B0")]
				[Address(RVA = "0xEDAB48", Offset = "0xEDAB48", VA = "0xEDAB48", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000400")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022B2")]
				[Address(RVA = "0xEDABB8", Offset = "0xEDABB8", VA = "0xEDABB8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022AD")]
			[Address(RVA = "0xED9004", Offset = "0xED9004", VA = "0xED9004")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60022AE")]
			[Address(RVA = "0xED9030", Offset = "0xED9030", VA = "0xED9030", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022AF")]
			[Address(RVA = "0xED9034", Offset = "0xED9034", VA = "0xED9034", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022B1")]
			[Address(RVA = "0xEDAB50", Offset = "0xEDAB50", VA = "0xEDAB50", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CurveScale;

		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0xDE0DEC", Offset = "0xDE0DEC", VA = "0xDE0DEC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0xDE0E44", Offset = "0xDE0E44", VA = "0xDE0E44")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0xDE0F0C", Offset = "0xDE0F0C", VA = "0xDE0F0C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0xDE0FD4", Offset = "0xDE0FD4", VA = "0xDE0FD4")]
		private void Start()
		{
		}

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0xDE1074", Offset = "0xDE1074", VA = "0xDE1074")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0xDE1000", Offset = "0xDE1000", VA = "0xDE1000")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x939868", Offset = "0x939868")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0xDE10F0", Offset = "0xDE10F0", VA = "0xDE10F0")]
		public VertexShakeB()
		{
		}
	}
	[Token(Token = "0x200010C")]
	public class VertexZoom : MonoBehaviour
	{
		[Token(Token = "0x20004AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92752C", Offset = "0x92752C")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4001DCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<float> modifiedCharScale;

			[Token(Token = "0x4001DCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Comparison<int> <>9__0;

			[Token(Token = "0x60022B3")]
			[Address(RVA = "0xEDAF18", Offset = "0xEDAF18", VA = "0xEDAF18")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x60022B4")]
			[Address(RVA = "0xEDAF20", Offset = "0xEDAF20", VA = "0xEDAF20")]
			internal int <AnimateVertexColors>b__0(int a, int b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x20004AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92753C", Offset = "0x92753C")]
		private sealed class <AnimateVertexColors>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VertexZoom <>4__this;

			[Token(Token = "0x4001DD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass10_0 <>8__1;

			[Token(Token = "0x4001DD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private TMP_TextInfo <textInfo>5__2;

			[Token(Token = "0x4001DD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private TMP_MeshInfo[] <cachedMeshInfoVertexData>5__3;

			[Token(Token = "0x4001DD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<int> <scaleSortingOrder>5__4;

			[Token(Token = "0x17000401")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022B8")]
				[Address(RVA = "0xEDC3A8", Offset = "0xEDC3A8", VA = "0xEDC3A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000402")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022BA")]
				[Address(RVA = "0xEDC418", Offset = "0xEDC418", VA = "0xEDC418", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022B5")]
			[Address(RVA = "0xEDAED4", Offset = "0xEDAED4", VA = "0xEDAED4")]
			[DebuggerHidden]
			public <AnimateVertexColors>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60022B6")]
			[Address(RVA = "0xEDAFD4", Offset = "0xEDAFD4", VA = "0xEDAFD4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022B7")]
			[Address(RVA = "0xEDAFD8", Offset = "0xEDAFD8", VA = "0xEDAFD8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022B9")]
			[Address(RVA = "0xEDC3B0", Offset = "0xEDC3B0", VA = "0xEDC3B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float AngleMultiplier;

		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float SpeedMultiplier;

		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CurveScale;

		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool hasTextChanged;

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0xEDABC0", Offset = "0xEDABC0", VA = "0xEDABC0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0xEDAC18", Offset = "0xEDAC18", VA = "0xEDAC18")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0xEDACE0", Offset = "0xEDACE0", VA = "0xEDACE0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0xEDADA8", Offset = "0xEDADA8", VA = "0xEDADA8")]
		private void Start()
		{
		}

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0xEDAE48", Offset = "0xEDAE48", VA = "0xEDAE48")]
		private void ON_TEXT_CHANGED(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0xEDADD4", Offset = "0xEDADD4", VA = "0xEDADD4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9398CC", Offset = "0x9398CC")]
		private IEnumerator AnimateVertexColors()
		{
			return null;
		}

		[Token(Token = "0x60008FE")]
		[Address(RVA = "0xEDAF00", Offset = "0xEDAF00", VA = "0xEDAF00")]
		public VertexZoom()
		{
		}
	}
	[Token(Token = "0x200010D")]
	public class WarpTextExample : MonoBehaviour
	{
		[Token(Token = "0x20004AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92754C", Offset = "0x92754C")]
		private sealed class <WarpText>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WarpTextExample <>4__this;

			[Token(Token = "0x4001DD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <old_CurveScale>5__2;

			[Token(Token = "0x4001DD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AnimationCurve <old_curve>5__3;

			[Token(Token = "0x17000403")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022BE")]
				[Address(RVA = "0xEDD674", Offset = "0xEDD674", VA = "0xEDD674", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000404")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022C0")]
				[Address(RVA = "0xEDD6E4", Offset = "0xEDD6E4", VA = "0xEDD6E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022BB")]
			[Address(RVA = "0xEDC5C8", Offset = "0xEDC5C8", VA = "0xEDC5C8")]
			[DebuggerHidden]
			public <WarpText>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x60022BC")]
			[Address(RVA = "0xEDC870", Offset = "0xEDC870", VA = "0xEDC870", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022BD")]
			[Address(RVA = "0xEDC874", Offset = "0xEDC874", VA = "0xEDC874", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022BF")]
			[Address(RVA = "0xEDD67C", Offset = "0xEDD67C", VA = "0xEDD67C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_TextComponent;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve VertexCurve;

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float AngleMultiplier;

		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float SpeedMultiplier;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float CurveScale;

		[Token(Token = "0x60008FF")]
		[Address(RVA = "0xEDC420", Offset = "0xEDC420", VA = "0xEDC420")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000900")]
		[Address(RVA = "0xEDC490", Offset = "0xEDC490", VA = "0xEDC490")]
		private void Start()
		{
		}

		[Token(Token = "0x6000901")]
		[Address(RVA = "0xEDC530", Offset = "0xEDC530", VA = "0xEDC530")]
		private AnimationCurve CopyAnimationCurve(AnimationCurve curve)
		{
			return null;
		}

		[Token(Token = "0x6000902")]
		[Address(RVA = "0xEDC4BC", Offset = "0xEDC4BC", VA = "0xEDC4BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x939930", Offset = "0x939930")]
		private IEnumerator WarpText()
		{
			return null;
		}

		[Token(Token = "0x6000903")]
		[Address(RVA = "0xEDC5F4", Offset = "0xEDC5F4", VA = "0xEDC5F4")]
		public WarpTextExample()
		{
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x200010E")]
	public enum FaceType : uint
	{
		[Token(Token = "0x4000837")]
		TRIANGLES,
		[Token(Token = "0x4000838")]
		QUADS
	}
	[Token(Token = "0x200010F")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x400083A")]
		ABSORPTION,
		[Token(Token = "0x400083B")]
		TRANSMISSION,
		[Token(Token = "0x400083C")]
		SCATTERING
	}
	[Token(Token = "0x2000110")]
	public struct MeshGroup
	{
		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace OVR
{
	[Token(Token = "0x2000111")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0x9298D8", Offset = "0x9298D8")]
		public SoundFXRef testSound1;

		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x6000904")]
		[Address(RVA = "0xDC4B94", Offset = "0xDC4B94", VA = "0xDC4B94")]
		private void Start()
		{
		}

		[Token(Token = "0x6000905")]
		[Address(RVA = "0xDC4B98", Offset = "0xDC4B98", VA = "0xDC4B98")]
		private void Update()
		{
		}

		[Token(Token = "0x6000906")]
		[Address(RVA = "0xDC4CA0", Offset = "0xDC4CA0", VA = "0xDC4CA0")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x2000112")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x929924", Offset = "0x929924")]
		public bool autoRetrigger;

		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x92995C", Offset = "0x92995C")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x929980", Offset = "0x929980")]
		public Transform[] playPositions;

		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x6000907")]
		[Address(RVA = "0x17E7C80", Offset = "0x17E7C80", VA = "0x17E7C80")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000908")]
		[Address(RVA = "0x17E7DFC", Offset = "0x17E7DFC", VA = "0x17E7DFC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000909")]
		[Address(RVA = "0x17E8084", Offset = "0x17E8084", VA = "0x17E8084")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x600090A")]
		[Address(RVA = "0x17E7E5C", Offset = "0x17E7E5C", VA = "0x17E7E5C")]
		public void Play()
		{
		}

		[Token(Token = "0x600090B")]
		[Address(RVA = "0x17E8164", Offset = "0x17E8164", VA = "0x17E8164")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x600090C")]
		[Address(RVA = "0x17E82F8", Offset = "0x17E82F8", VA = "0x17E82F8")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x2000113")]
	public enum PreloadSounds
	{
		[Token(Token = "0x400084E")]
		Default,
		[Token(Token = "0x400084F")]
		Preload,
		[Token(Token = "0x4000850")]
		ManualPreload
	}
	[Token(Token = "0x2000114")]
	public enum Fade
	{
		[Token(Token = "0x4000852")]
		In,
		[Token(Token = "0x4000853")]
		Out
	}
	[Serializable]
	[Token(Token = "0x2000115")]
	public class SoundGroup
	{
		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9299B8", Offset = "0x9299B8")]
		public int maxPlayingSounds;

		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x600090D")]
		[Address(RVA = "0xDC4954", Offset = "0xDC4954", VA = "0xDC4954")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x600090E")]
		[Address(RVA = "0xDC49E8", Offset = "0xDC49E8", VA = "0xDC49E8")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x600090F")]
		[Address(RVA = "0xDC4A74", Offset = "0xDC4A74", VA = "0xDC4A74")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x6000910")]
		[Address(RVA = "0xDC4B04", Offset = "0xDC4B04", VA = "0xDC4B04")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x6000911")]
		[Address(RVA = "0xDC3E58", Offset = "0xDC3E58", VA = "0xDC3E58")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000116")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x20004AF")]
		public enum Fade
		{
			[Token(Token = "0x4001DDB")]
			In,
			[Token(Token = "0x4001DDC")]
			Out
		}

		[Token(Token = "0x20004B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92755C", Offset = "0x92755C")]
		private sealed class <>c__DisplayClass77_0
		{
			[Token(Token = "0x4001DDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x60022C1")]
			[Address(RVA = "0x17ED51C", Offset = "0x17ED51C", VA = "0x17ED51C")]
			public <>c__DisplayClass77_0()
			{
			}

			[Token(Token = "0x60022C2")]
			[Address(RVA = "0x17EFE20", Offset = "0x17EFE20", VA = "0x17EFE20")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20004B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92756C", Offset = "0x92756C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001DDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001DDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__77_1;

			[Token(Token = "0x60022C4")]
			[Address(RVA = "0x17EFD84", Offset = "0x17EFD84", VA = "0x17EFD84")]
			public <>c()
			{
			}

			[Token(Token = "0x60022C5")]
			[Address(RVA = "0x17EFD8C", Offset = "0x17EFD8C", VA = "0x17EFD8C")]
			internal bool <FindFreeEmitter>b__77_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9299E4", Offset = "0x9299E4")]
		public bool makePersistent;

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x929A1C", Offset = "0x929A1C")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x929A54", Offset = "0x929A54")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x929A8C", Offset = "0x929A8C")]
		public AudioMixer audioMixer;

		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x929AC4", Offset = "0x929AC4")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x929AFC", Offset = "0x929AFC")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x929B34", Offset = "0x929B34")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x929B6C", Offset = "0x929B6C")]
		public bool verboseLogging;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x929BA4", Offset = "0x929BA4")]
		public int maxSoundEmitters;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x929BDC", Offset = "0x929BDC")]
		public float volumeSoundFX;

		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x929C14", Offset = "0x929C14")]
		public float soundFxFadeSecs;

		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x170000AE")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x6000912")]
			[Address(RVA = "0x17E83B4", Offset = "0x17E83B4", VA = "0x17E83B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000AF")]
		public static AudioManager Instance
		{
			[Token(Token = "0x6000913")]
			[Address(RVA = "0x17E8498", Offset = "0x17E8498", VA = "0x17E8498")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B0")]
		public static float NearFallOff
		{
			[Token(Token = "0x6000914")]
			[Address(RVA = "0x17E8500", Offset = "0x17E8500", VA = "0x17E8500")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000B1")]
		public static float FarFallOff
		{
			[Token(Token = "0x6000915")]
			[Address(RVA = "0x17E8578", Offset = "0x17E8578", VA = "0x17E8578")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000B2")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x6000916")]
			[Address(RVA = "0x17E85F0", Offset = "0x17E85F0", VA = "0x17E85F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B3")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x6000917")]
			[Address(RVA = "0x17E8668", Offset = "0x17E8668", VA = "0x17E8668")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B4")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x6000918")]
			[Address(RVA = "0x17E86E0", Offset = "0x17E86E0", VA = "0x17E86E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B5")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x6000923")]
			[Address(RVA = "0x17EAD54", Offset = "0x17EAD54", VA = "0x17EAD54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000919")]
		[Address(RVA = "0x17E8758", Offset = "0x17E8758", VA = "0x17E8758")]
		private void Awake()
		{
		}

		[Token(Token = "0x600091A")]
		[Address(RVA = "0x17E8990", Offset = "0x17E8990", VA = "0x17E8990")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600091B")]
		[Address(RVA = "0x17E875C", Offset = "0x17E875C", VA = "0x17E875C")]
		private void Init()
		{
		}

		[Token(Token = "0x600091C")]
		[Address(RVA = "0x17E9B50", Offset = "0x17E9B50", VA = "0x17E9B50")]
		private void Update()
		{
		}

		[Token(Token = "0x600091D")]
		[Address(RVA = "0x17E8AE8", Offset = "0x17E8AE8", VA = "0x17E8AE8")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x600091E")]
		[Address(RVA = "0x17EA2DC", Offset = "0x17EA2DC", VA = "0x17EA2DC")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x600091F")]
		[Address(RVA = "0x17EA48C", Offset = "0x17EA48C", VA = "0x17EA48C")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x6000920")]
		[Address(RVA = "0x17EA644", Offset = "0x17EA644", VA = "0x17EA644")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6000921")]
		[Address(RVA = "0x17EA74C", Offset = "0x17EA74C", VA = "0x17EA74C")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x6000922")]
		[Address(RVA = "0x17EA810", Offset = "0x17EA810", VA = "0x17EA810")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x6000924")]
		[Address(RVA = "0x17EADBC", Offset = "0x17EADBC", VA = "0x17EADBC")]
		private static int CalculateMaxEmittersSize()
		{
			return default(int);
		}

		[Token(Token = "0x6000925")]
		[Address(RVA = "0x17EAE38", Offset = "0x17EAE38", VA = "0x17EAE38")]
		private static bool ValidateEmitterIndex(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000926")]
		[Address(RVA = "0x17E92E0", Offset = "0x17E92E0", VA = "0x17E92E0")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x6000927")]
		[Address(RVA = "0x17E9B54", Offset = "0x17E9B54", VA = "0x17E9B54")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x6000928")]
		[Address(RVA = "0x17EB12C", Offset = "0x17EB12C", VA = "0x17EB12C")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x6000929")]
		[Address(RVA = "0x17EB228", Offset = "0x17EB228", VA = "0x17EB228")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x600092A")]
		[Address(RVA = "0x17EB328", Offset = "0x17EB328", VA = "0x17EB328")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0x17EAFAC", Offset = "0x17EAFAC", VA = "0x17EAFAC")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0x17EB508", Offset = "0x17EB508", VA = "0x17EB508")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0x17EB690", Offset = "0x17EB690", VA = "0x17EB690")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600092E")]
		[Address(RVA = "0x17EB8C8", Offset = "0x17EB8C8", VA = "0x17EB8C8")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0x17E8094", Offset = "0x17E8094", VA = "0x17E8094")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6000930")]
		[Address(RVA = "0x17E8228", Offset = "0x17E8228", VA = "0x17E8228")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0x17EBAA4", Offset = "0x17EBAA4", VA = "0x17EBAA4")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x6000932")]
		[Address(RVA = "0x17EBB88", Offset = "0x17EBB88", VA = "0x17EBB88")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x6000933")]
		[Address(RVA = "0x17EBC54", Offset = "0x17EBC54", VA = "0x17EBC54")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x6000934")]
		[Address(RVA = "0x17EBD80", Offset = "0x17EBD80", VA = "0x17EBD80")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000935")]
		[Address(RVA = "0x17EBE40", Offset = "0x17EBE40", VA = "0x17EBE40")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x6000936")]
		[Address(RVA = "0x17EBF58", Offset = "0x17EBF58", VA = "0x17EBF58")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000937")]
		[Address(RVA = "0x17ECD34", Offset = "0x17ECD34", VA = "0x17ECD34")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x6000938")]
		[Address(RVA = "0x17ED524", Offset = "0x17ED524", VA = "0x17ED524")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000939")]
		[Address(RVA = "0x17ED6D0", Offset = "0x17ED6D0", VA = "0x17ED6D0")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x600093A")]
		[Address(RVA = "0x17EE5D0", Offset = "0x17EE5D0", VA = "0x17EE5D0")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0x17EC12C", Offset = "0x17EC12C", VA = "0x17EC12C")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x600093C")]
		[Address(RVA = "0x17EE6F4", Offset = "0x17EE6F4", VA = "0x17EE6F4")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0x17EE7EC", Offset = "0x17EE7EC", VA = "0x17EE7EC")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x600093E")]
		[Address(RVA = "0x17EE8E8", Offset = "0x17EE8E8", VA = "0x17EE8E8")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x600093F")]
		[Address(RVA = "0x17EED90", Offset = "0x17EED90", VA = "0x17EED90")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x6000940")]
		[Address(RVA = "0x17EEFE0", Offset = "0x17EEFE0", VA = "0x17EEFE0")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x6000941")]
		[Address(RVA = "0x17EF10C", Offset = "0x17EF10C", VA = "0x17EF10C")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0x17EF2FC", Offset = "0x17EF2FC", VA = "0x17EF2FC")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6000943")]
		[Address(RVA = "0x17EF3D8", Offset = "0x17EF3D8", VA = "0x17EF3D8")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0x17EF528", Offset = "0x17EF528", VA = "0x17EF528")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x6000945")]
		[Address(RVA = "0x17EF9E4", Offset = "0x17EF9E4", VA = "0x17EF9E4")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x2000117")]
	public enum EmitterChannel
	{
		[Token(Token = "0x400087B")]
		None = -1,
		[Token(Token = "0x400087C")]
		Reserved,
		[Token(Token = "0x400087D")]
		Any
	}
	[Serializable]
	[Token(Token = "0x2000118")]
	public class MixerSnapshot
	{
		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x6000947")]
		[Address(RVA = "0x17EFF20", Offset = "0x17EFF20", VA = "0x17EFF20")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x2000119")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minDefaultVal;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDefaultVal;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float min;

		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float max;

		[Token(Token = "0x6000948")]
		[Address(RVA = "0x17EFEC4", Offset = "0x17EFEC4", VA = "0x17EFEC4")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x200011A")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x20004B2")]
		public enum FadeState
		{
			[Token(Token = "0x4001DE1")]
			Null,
			[Token(Token = "0x4001DE2")]
			FadingIn,
			[Token(Token = "0x4001DE3")]
			FadingOut,
			[Token(Token = "0x4001DE4")]
			Ducking
		}

		[Token(Token = "0x20004B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92757C", Offset = "0x92757C")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4001DE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x4001DE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x4001DEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x17000405")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022C9")]
				[Address(RVA = "0x17F0AC8", Offset = "0x17F0AC8", VA = "0x17F0AC8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000406")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022CB")]
				[Address(RVA = "0x17F0B38", Offset = "0x17F0B38", VA = "0x17F0B38", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022C6")]
			[Address(RVA = "0x17F0704", Offset = "0x17F0704", VA = "0x17F0704")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x60022C7")]
			[Address(RVA = "0x17F09B0", Offset = "0x17F09B0", VA = "0x17F09B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022C8")]
			[Address(RVA = "0x17F09B4", Offset = "0x17F09B4", VA = "0x17F09B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022CA")]
			[Address(RVA = "0x17F0AD0", Offset = "0x17F0AD0", VA = "0x17F0AD0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92758C", Offset = "0x92758C")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4001DEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x4001DEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x4001DF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x4001DF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x4001DF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4001DF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x17000407")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022CF")]
				[Address(RVA = "0x17F1034", Offset = "0x17F1034", VA = "0x17F1034", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000408")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022D1")]
				[Address(RVA = "0x17F10A4", Offset = "0x17F10A4", VA = "0x17F10A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022CC")]
			[Address(RVA = "0x17F0940", Offset = "0x17F0940", VA = "0x17F0940")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x60022CD")]
			[Address(RVA = "0x17F0E90", Offset = "0x17F0E90", VA = "0x17F0E90", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022CE")]
			[Address(RVA = "0x17F0E94", Offset = "0x17F0E94", VA = "0x17F0E94", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022D0")]
			[Address(RVA = "0x17F103C", Offset = "0x17F103C", VA = "0x17F103C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92759C", Offset = "0x92759C")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001DF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x4001DF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x4001DF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x4001DF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4001DFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x4001DFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x4001DFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x4001DFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x4001DFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x4001DFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x17000409")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60022D5")]
				[Address(RVA = "0x17F0E18", Offset = "0x17F0E18", VA = "0x17F0E18", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700040A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60022D7")]
				[Address(RVA = "0x17F0E88", Offset = "0x17F0E88", VA = "0x17F0E88", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60022D2")]
			[Address(RVA = "0x17F096C", Offset = "0x17F096C", VA = "0x17F096C")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x60022D3")]
			[Address(RVA = "0x17F0B40", Offset = "0x17F0B40", VA = "0x17F0B40", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60022D4")]
			[Address(RVA = "0x17F0B44", Offset = "0x17F0B44", VA = "0x17F0B44", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60022D6")]
			[Address(RVA = "0x17F0E20", Offset = "0x17F0E20", VA = "0x17F0E20", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x170000B6")]
		public float volume
		{
			[Token(Token = "0x6000949")]
			[Address(RVA = "0x17EE5A0", Offset = "0x17EE5A0", VA = "0x17EE5A0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600094A")]
			[Address(RVA = "0x17EFFC0", Offset = "0x17EFFC0", VA = "0x17EFFC0")]
			set
			{
			}
		}

		[Token(Token = "0x170000B7")]
		public float pitch
		{
			[Token(Token = "0x600094B")]
			[Address(RVA = "0x17F0000", Offset = "0x17F0000", VA = "0x17F0000")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600094C")]
			[Address(RVA = "0x17F0030", Offset = "0x17F0030", VA = "0x17F0030")]
			set
			{
			}
		}

		[Token(Token = "0x170000B8")]
		public AudioClip clip
		{
			[Token(Token = "0x600094D")]
			[Address(RVA = "0x17F0070", Offset = "0x17F0070", VA = "0x17F0070")]
			get
			{
				return null;
			}
			[Token(Token = "0x600094E")]
			[Address(RVA = "0x17F00A0", Offset = "0x17F00A0", VA = "0x17F00A0")]
			set
			{
			}
		}

		[Token(Token = "0x170000B9")]
		public float time
		{
			[Token(Token = "0x600094F")]
			[Address(RVA = "0x17F00D8", Offset = "0x17F00D8", VA = "0x17F00D8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000950")]
			[Address(RVA = "0x17EBF18", Offset = "0x17EBF18", VA = "0x17EBF18")]
			set
			{
			}
		}

		[Token(Token = "0x170000BA")]
		public float length
		{
			[Token(Token = "0x6000951")]
			[Address(RVA = "0x17F0108", Offset = "0x17F0108", VA = "0x17F0108")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000BB")]
		public bool loop
		{
			[Token(Token = "0x6000952")]
			[Address(RVA = "0x17F01E0", Offset = "0x17F01E0", VA = "0x17F01E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000953")]
			[Address(RVA = "0x17F0210", Offset = "0x17F0210", VA = "0x17F0210")]
			set
			{
			}
		}

		[Token(Token = "0x170000BC")]
		public bool mute
		{
			[Token(Token = "0x6000954")]
			[Address(RVA = "0x17F0248", Offset = "0x17F0248", VA = "0x17F0248")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000955")]
			[Address(RVA = "0x17F0278", Offset = "0x17F0278", VA = "0x17F0278")]
			set
			{
			}
		}

		[Token(Token = "0x170000BD")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x6000956")]
			[Address(RVA = "0x17F02B0", Offset = "0x17F02B0", VA = "0x17F02B0")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x6000957")]
			[Address(RVA = "0x17F02E0", Offset = "0x17F02E0", VA = "0x17F02E0")]
			set
			{
			}
		}

		[Token(Token = "0x170000BE")]
		public bool isPlaying
		{
			[Token(Token = "0x6000958")]
			[Address(RVA = "0x17F0318", Offset = "0x17F0318", VA = "0x17F0318")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000959")]
		[Address(RVA = "0x17F0348", Offset = "0x17F0348", VA = "0x17F0348")]
		private void Awake()
		{
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0x17EE588", Offset = "0x17EE588", VA = "0x17EE588")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0x17EE7E4", Offset = "0x17EE7E4", VA = "0x17EE7E4")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0x17EE8E0", Offset = "0x17EE8E0", VA = "0x17EE8E0")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0x17EAEB8", Offset = "0x17EAEB8", VA = "0x17EAEB8")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x600095E")]
		[Address(RVA = "0x17EAEB0", Offset = "0x17EAEB0", VA = "0x17EAEB0")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x600095F")]
		[Address(RVA = "0x17EF24C", Offset = "0x17EF24C", VA = "0x17EF24C")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0x17EB0C4", Offset = "0x17EB0C4", VA = "0x17EB0C4")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0x17F04F0", Offset = "0x17F04F0", VA = "0x17F04F0")]
		public void Play()
		{
		}

		[Token(Token = "0x6000962")]
		[Address(RVA = "0x17F0558", Offset = "0x17F0558", VA = "0x17F0558")]
		public void Pause()
		{
		}

		[Token(Token = "0x6000963")]
		[Address(RVA = "0x17EAEC0", Offset = "0x17EAEC0", VA = "0x17EAEC0")]
		public void Stop()
		{
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0x17F0598", Offset = "0x17F0598", VA = "0x17F0598")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x6000965")]
		[Address(RVA = "0x17EEC80", Offset = "0x17EEC80", VA = "0x17EEC80")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x6000966")]
		[Address(RVA = "0x17EEEFC", Offset = "0x17EEEFC", VA = "0x17EEEFC")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6000967")]
		[Address(RVA = "0x17EB4B8", Offset = "0x17EB4B8", VA = "0x17EB4B8")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x6000968")]
		[Address(RVA = "0x17F060C", Offset = "0x17F060C", VA = "0x17F060C")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6000969")]
		[Address(RVA = "0x17F0638", Offset = "0x17F0638", VA = "0x17F0638")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x939994", Offset = "0x939994")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x600096A")]
		[Address(RVA = "0x17F0730", Offset = "0x17F0730", VA = "0x17F0730")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x600096B")]
		[Address(RVA = "0x17EB9A0", Offset = "0x17EB9A0", VA = "0x17EB9A0")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x600096C")]
		[Address(RVA = "0x17EBA24", Offset = "0x17EBA24", VA = "0x17EBA24")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0x17EB81C", Offset = "0x17EB81C", VA = "0x17EB81C")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x600096E")]
		[Address(RVA = "0x17EB5E0", Offset = "0x17EB5E0", VA = "0x17EB5E0")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0x17F07A8", Offset = "0x17F07A8", VA = "0x17F07A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x9399F8", Offset = "0x9399F8")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6000970")]
		[Address(RVA = "0x17F0854", Offset = "0x17F0854", VA = "0x17F0854")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x939A5C", Offset = "0x939A5C")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x6000971")]
		[Address(RVA = "0x17F0998", Offset = "0x17F0998", VA = "0x17F0998")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x200011B")]
	public enum SoundFXNext
	{
		[Token(Token = "0x4000894")]
		Random,
		[Token(Token = "0x4000895")]
		Sequential
	}
	[Token(Token = "0x200011C")]
	public enum FreqHint
	{
		[Token(Token = "0x4000897")]
		None,
		[Token(Token = "0x4000898")]
		Wide,
		[Token(Token = "0x4000899")]
		Narrow
	}
	[Token(Token = "0x200011D")]
	public enum SoundPriority
	{
		[Token(Token = "0x400089B")]
		VeryLow = -2,
		[Token(Token = "0x400089C")]
		Low,
		[Token(Token = "0x400089D")]
		Default,
		[Token(Token = "0x400089E")]
		High,
		[Token(Token = "0x400089F")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x200011E")]
	public class OSPProps
	{
		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x929CFC", Offset = "0x929CFC")]
		public bool enableSpatialization;

		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x929D34", Offset = "0x929D34")]
		public bool useFastOverride;

		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x929D6C", Offset = "0x929D6C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x929D6C", Offset = "0x929D6C")]
		public float gain;

		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x929DC0", Offset = "0x929DC0")]
		public bool enableInvSquare;

		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x929DF8", Offset = "0x929DF8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x929DF8", Offset = "0x929DF8")]
		public float volumetric;

		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x929E50", Offset = "0x929E50")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x929E50", Offset = "0x929E50")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x6000972")]
		[Address(RVA = "0x17EFF30", Offset = "0x17EFF30", VA = "0x17EFF30")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200011F")]
	public class SoundFX
	{
		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x929EB0", Offset = "0x929EB0")]
		public string name;

		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x929EE8", Offset = "0x929EE8")]
		public SoundFXNext playback;

		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x929F20", Offset = "0x929F20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x929F20", Offset = "0x929F20")]
		public float volume;

		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x929F74", Offset = "0x929F74")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x929F74", Offset = "0x929F74")]
		public Vector2 pitchVariance;

		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x929FD0", Offset = "0x929FD0")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x929FD0", Offset = "0x929FD0")]
		public Vector2 falloffDistance;

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x92A030", Offset = "0x92A030")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x92A068", Offset = "0x92A068")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x92A0A0", Offset = "0x92A0A0")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x92A0D8", Offset = "0x92A0D8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x92A0D8", Offset = "0x92A0D8")]
		public float spread;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x92A130", Offset = "0x92A130")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x92A130", Offset = "0x92A130")]
		public float pctChanceToPlay;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x92A184", Offset = "0x92A184")]
		public SoundPriority priority;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x92A1BC", Offset = "0x92A1BC")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x92A1BC", Offset = "0x92A1BC")]
		public Vector2 delay;

		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x92A218", Offset = "0x92A218")]
		public bool looping;

		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x92A250", Offset = "0x92A250")]
		public AudioClip[] soundClips;

		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x170000BF")]
		public int Length
		{
			[Token(Token = "0x6000974")]
			[Address(RVA = "0xDC3AF4", Offset = "0xDC3AF4", VA = "0xDC3AF4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000C0")]
		public bool IsValid
		{
			[Token(Token = "0x6000975")]
			[Address(RVA = "0xDC3B20", Offset = "0xDC3B20", VA = "0xDC3B20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C1")]
		public SoundGroup Group
		{
			[Token(Token = "0x6000976")]
			[Address(RVA = "0xDC3BE0", Offset = "0xDC3BE0", VA = "0xDC3BE0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000977")]
			[Address(RVA = "0xDC3BE8", Offset = "0xDC3BE8", VA = "0xDC3BE8")]
			set
			{
			}
		}

		[Token(Token = "0x170000C2")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x6000978")]
			[Address(RVA = "0xDC3BF0", Offset = "0xDC3BF0", VA = "0xDC3BF0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000C3")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x6000979")]
			[Address(RVA = "0xDC3BFC", Offset = "0xDC3BFC", VA = "0xDC3BFC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0xDC3578", Offset = "0xDC3578", VA = "0xDC3578")]
		public SoundFX()
		{
		}

		[Token(Token = "0x600097A")]
		[Address(RVA = "0xDC3C14", Offset = "0xDC3C14", VA = "0xDC3C14")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0xDC3D8C", Offset = "0xDC3D8C", VA = "0xDC3D8C")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x600097C")]
		[Address(RVA = "0xDC3E30", Offset = "0xDC3E30", VA = "0xDC3E30")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x600097D")]
		[Address(RVA = "0xDC3E78", Offset = "0xDC3E78", VA = "0xDC3E78")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x600097E")]
		[Address(RVA = "0xDC3FC8", Offset = "0xDC3FC8", VA = "0xDC3FC8")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x600097F")]
		[Address(RVA = "0xDC3FD4", Offset = "0xDC3FD4", VA = "0xDC3FD4")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0xDC40B4", Offset = "0xDC40B4", VA = "0xDC40B4")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0xDC41CC", Offset = "0xDC41CC", VA = "0xDC41CC")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0xDC425C", Offset = "0xDC425C", VA = "0xDC425C")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000983")]
		[Address(RVA = "0xDC42F4", Offset = "0xDC42F4", VA = "0xDC42F4")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6000984")]
		[Address(RVA = "0xDC4384", Offset = "0xDC4384", VA = "0xDC4384")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6000985")]
		[Address(RVA = "0xDC4414", Offset = "0xDC4414", VA = "0xDC4414")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000120")]
	public class SoundFXRef
	{
		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x170000C4")]
		public SoundFX soundFX
		{
			[Token(Token = "0x6000986")]
			[Address(RVA = "0xDC4490", Offset = "0xDC4490", VA = "0xDC4490")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C5")]
		public string name
		{
			[Token(Token = "0x6000987")]
			[Address(RVA = "0xDC458C", Offset = "0xDC458C", VA = "0xDC458C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000988")]
			[Address(RVA = "0xDC4594", Offset = "0xDC4594", VA = "0xDC4594")]
			set
			{
			}
		}

		[Token(Token = "0x170000C6")]
		public int Length
		{
			[Token(Token = "0x600098A")]
			[Address(RVA = "0xDC459C", Offset = "0xDC459C", VA = "0xDC459C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000C7")]
		public bool IsValid
		{
			[Token(Token = "0x600098B")]
			[Address(RVA = "0xDC45EC", Offset = "0xDC45EC", VA = "0xDC45EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000989")]
		[Address(RVA = "0xDC44C0", Offset = "0xDC44C0", VA = "0xDC44C0")]
		private void Init()
		{
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0xDC462C", Offset = "0xDC462C", VA = "0xDC462C")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x600098D")]
		[Address(RVA = "0xDC466C", Offset = "0xDC466C", VA = "0xDC466C")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x600098E")]
		[Address(RVA = "0xDC46B4", Offset = "0xDC46B4", VA = "0xDC46B4")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0xDC4704", Offset = "0xDC4704", VA = "0xDC4704")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0xDC478C", Offset = "0xDC478C", VA = "0xDC478C")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000991")]
		[Address(RVA = "0xDC47D4", Offset = "0xDC47D4", VA = "0xDC47D4")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000992")]
		[Address(RVA = "0xDC482C", Offset = "0xDC482C", VA = "0xDC482C")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6000993")]
		[Address(RVA = "0xDC486C", Offset = "0xDC486C", VA = "0xDC486C")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6000994")]
		[Address(RVA = "0xDC48B4", Offset = "0xDC48B4", VA = "0xDC48B4")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0xDC48F4", Offset = "0xDC48F4", VA = "0xDC48F4")]
		public SoundFXRef()
		{
		}
	}
}
namespace HTC.UnityPlugin.VRModuleManagement
{
	[Token(Token = "0x2000121")]
	public class VRModule : SingletonBehaviour<VRModule>
	{
		[Token(Token = "0x20004B6")]
		public abstract class ModuleBase
		{
			[Token(Token = "0x200063B")]
			protected enum DefaultModuleOrder
			{
				[Token(Token = "0x4002270")]
				Simulator = 1,
				[Token(Token = "0x4002271")]
				UnityNativeVR,
				[Token(Token = "0x4002272")]
				UnityXR,
				[Token(Token = "0x4002273")]
				SteamVR,
				[Token(Token = "0x4002274")]
				OculusVR,
				[Token(Token = "0x4002275")]
				DayDream,
				[Token(Token = "0x4002276")]
				WaveVR
			}

			[Token(Token = "0x4001E00")]
			[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x937FA0", Offset = "0x937FA0")]
			protected const uint MAX_DEVICE_COUNT = 64u;

			[Token(Token = "0x4001E01")]
			protected const uint INVALID_DEVICE_INDEX = uint.MaxValue;

			[Token(Token = "0x4001E02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static readonly Regex s_viveRgx;

			[Token(Token = "0x4001E03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private static readonly Regex s_viveCosmosRgx;

			[Token(Token = "0x4001E04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private static readonly Regex s_oculusRgx;

			[Token(Token = "0x4001E05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private static readonly Regex s_indexRgx;

			[Token(Token = "0x4001E06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private static readonly Regex s_knucklesRgx;

			[Token(Token = "0x4001E07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private static readonly Regex s_daydreamRgx;

			[Token(Token = "0x4001E08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private static readonly Regex s_wmrRgx;

			[Token(Token = "0x4001E09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private static readonly Regex s_magicLeapRgx;

			[Token(Token = "0x4001E0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private static readonly Regex s_viveFocusRgx;

			[Token(Token = "0x4001E0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private static readonly Regex s_leftRgx;

			[Token(Token = "0x4001E0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private static readonly Regex s_rightRgx;

			[Token(Token = "0x4001E0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x937FD8", Offset = "0x937FD8")]
			private bool <isActivated>k__BackingField;

			[Token(Token = "0x1700040B")]
			public bool isActivated
			{
				[Token(Token = "0x60022D8")]
				[Address(RVA = "0xCFF7F4", Offset = "0xCFF7F4", VA = "0xCFF7F4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93EFAC", Offset = "0x93EFAC")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x60022D9")]
				[Address(RVA = "0xCFF7FC", Offset = "0xCFF7FC", VA = "0xCFF7FC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93EFBC", Offset = "0x93EFBC")]
				private set
				{
				}
			}

			[Token(Token = "0x1700040C")]
			public virtual int moduleOrder
			{
				[Token(Token = "0x60022DA")]
				[Address(RVA = "0xCFF808", Offset = "0xCFF808", VA = "0xCFF808", Slot = "4")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x1700040D")]
			public abstract int moduleIndex
			{
				[Token(Token = "0x60022DB")]
				get;
			}

			[Token(Token = "0x60022DC")]
			[Address(RVA = "0xCFF814", Offset = "0xCFF814", VA = "0xCFF814", Slot = "6")]
			public virtual bool ShouldActiveModule()
			{
				return default(bool);
			}

			[Token(Token = "0x60022DD")]
			[Address(RVA = "0xCFF81C", Offset = "0xCFF81C", VA = "0xCFF81C")]
			public void Activated()
			{
			}

			[Token(Token = "0x60022DE")]
			[Address(RVA = "0xCFF830", Offset = "0xCFF830", VA = "0xCFF830")]
			public void Deactivated()
			{
			}

			[Token(Token = "0x60022DF")]
			[Address(RVA = "0xCFF840", Offset = "0xCFF840", VA = "0xCFF840", Slot = "7")]
			public virtual void OnActivated()
			{
			}

			[Token(Token = "0x60022E0")]
			[Address(RVA = "0xCFF844", Offset = "0xCFF844", VA = "0xCFF844", Slot = "8")]
			public virtual void OnDeactivated()
			{
			}

			[Token(Token = "0x60022E1")]
			[Address(RVA = "0xCFF848", Offset = "0xCFF848", VA = "0xCFF848", Slot = "9")]
			public virtual bool HasInputFocus()
			{
				return default(bool);
			}

			[Token(Token = "0x60022E2")]
			[Address(RVA = "0xCFF850", Offset = "0xCFF850", VA = "0xCFF850", Slot = "10")]
			public virtual uint GetLeftControllerDeviceIndex()
			{
				return default(uint);
			}

			[Token(Token = "0x60022E3")]
			[Address(RVA = "0xCFF858", Offset = "0xCFF858", VA = "0xCFF858", Slot = "11")]
			public virtual uint GetRightControllerDeviceIndex()
			{
				return default(uint);
			}

			[Token(Token = "0x60022E4")]
			[Address(RVA = "0xCFF860", Offset = "0xCFF860", VA = "0xCFF860", Slot = "12")]
			public virtual void UpdateTrackingSpaceType()
			{
			}

			[Token(Token = "0x60022E5")]
			[Address(RVA = "0xCFF864", Offset = "0xCFF864", VA = "0xCFF864", Slot = "13")]
			public virtual void Update()
			{
			}

			[Token(Token = "0x60022E6")]
			[Address(RVA = "0xCFF868", Offset = "0xCFF868", VA = "0xCFF868", Slot = "14")]
			public virtual void FixedUpdate()
			{
			}

			[Token(Token = "0x60022E7")]
			[Address(RVA = "0xCFF86C", Offset = "0xCFF86C", VA = "0xCFF86C", Slot = "15")]
			public virtual void LateUpdate()
			{
			}

			[Token(Token = "0x60022E8")]
			[Address(RVA = "0xCFF870", Offset = "0xCFF870", VA = "0xCFF870", Slot = "16")]
			public virtual void BeforeRenderUpdate()
			{
			}

			[Token(Token = "0x60022E9")]
			[Address(RVA = "0xCFF874", Offset = "0xCFF874", VA = "0xCFF874", Slot = "17")]
			[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x93EFCC", Offset = "0x93EFCC")]
			public virtual void UpdateDeviceState(IVRModuleDeviceState[] prevState, IVRModuleDeviceStateRW[] currState)
			{
			}

			[Token(Token = "0x60022EA")]
			[Address(RVA = "0xCFF878", Offset = "0xCFF878", VA = "0xCFF878", Slot = "18")]
			public virtual void TriggerViveControllerHaptic(uint deviceIndex, ushort durationMicroSec = 500)
			{
			}

			[Token(Token = "0x60022EB")]
			[Address(RVA = "0xCFF87C", Offset = "0xCFF87C", VA = "0xCFF87C", Slot = "19")]
			public virtual void TriggerHapticVibration(uint deviceIndex, float durationSeconds = 0.01f, float frequency = 85f, float amplitude = 0.125f, float startSecondsFromNow = 0f)
			{
			}

			[Token(Token = "0x60022EC")]
			[Address(RVA = "0xCFF880", Offset = "0xCFF880", VA = "0xCFF880")]
			protected void InvokeInputFocusEvent(bool value)
			{
			}

			[Token(Token = "0x60022ED")]
			[Address(RVA = "0xCFF8E8", Offset = "0xCFF8E8", VA = "0xCFF8E8")]
			protected void InvokeControllerRoleChangedEvent()
			{
			}

			[Token(Token = "0x60022EE")]
			[Address(RVA = "0xCFF948", Offset = "0xCFF948", VA = "0xCFF948")]
			protected uint GetDeviceStateLength()
			{
				return default(uint);
			}

			[Token(Token = "0x60022EF")]
			[Address(RVA = "0xCFF9C8", Offset = "0xCFF9C8", VA = "0xCFF9C8")]
			protected void EnsureDeviceStateLength(uint capacity)
			{
			}

			[Token(Token = "0x60022F0")]
			[Address(RVA = "0xCFFA50", Offset = "0xCFFA50", VA = "0xCFFA50")]
			protected bool TryGetValidDeviceState(uint index, out IVRModuleDeviceState prevState, out IVRModuleDeviceStateRW currState)
			{
				return default(bool);
			}

			[Token(Token = "0x60022F1")]
			[Address(RVA = "0xCFFAF0", Offset = "0xCFFAF0", VA = "0xCFFAF0")]
			protected void EnsureValidDeviceState(uint index, out IVRModuleDeviceState prevState, out IVRModuleDeviceStateRW currState)
			{
			}

			[Token(Token = "0x60022F2")]
			[Address(RVA = "0xCFFB90", Offset = "0xCFFB90", VA = "0xCFFB90")]
			protected void FlushDeviceState()
			{
			}

			[Token(Token = "0x60022F3")]
			[Address(RVA = "0xCFFC10", Offset = "0xCFFC10", VA = "0xCFFC10")]
			protected void ProcessConnectedDeviceChanged()
			{
			}

			[Token(Token = "0x60022F4")]
			[Address(RVA = "0xCFFC90", Offset = "0xCFFC90", VA = "0xCFFC90")]
			protected void ProcessDevicePoseChanged()
			{
			}

			[Token(Token = "0x60022F5")]
			[Address(RVA = "0xCFFCF0", Offset = "0xCFFCF0", VA = "0xCFFCF0")]
			protected void ProcessDeviceInputChanged()
			{
			}

			[Token(Token = "0x60022F6")]
			[Address(RVA = "0xCFFD50", Offset = "0xCFFD50", VA = "0xCFFD50")]
			protected static void SetupKnownDeviceModel(IVRModuleDeviceStateRW deviceState)
			{
			}

			[Token(Token = "0x60022F7")]
			[Address(RVA = "0xD0270C", Offset = "0xD0270C", VA = "0xD0270C")]
			public static bool AxisToPress(bool previousPressedState, float currentAxisValue, float setThreshold, float unsetThreshold)
			{
				return default(bool);
			}

			[Token(Token = "0x60022F8")]
			[Address(RVA = "0xD02728", Offset = "0xD02728", VA = "0xD02728")]
			protected ModuleBase()
			{
			}
		}

		[Token(Token = "0x20004B7")]
		private sealed class DefaultModule : ModuleBase
		{
			[Token(Token = "0x1700040E")]
			public override int moduleIndex
			{
				[Token(Token = "0x60022FA")]
				[Address(RVA = "0x13E22B8", Offset = "0x13E22B8", VA = "0x13E22B8", Slot = "5")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x60022FB")]
			[Address(RVA = "0x13E08D4", Offset = "0x13E08D4", VA = "0x13E08D4")]
			public DefaultModule()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004B8")]
		private class DeviceState : IVRModuleDeviceState, IVRModuleDeviceStateRW
		{
			[Token(Token = "0x4001E0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			private string m_serialNumber;

			[Token(Token = "0x4001E0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[SerializeField]
			private string m_modelNumber;

			[Token(Token = "0x4001E10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[SerializeField]
			private string m_renderModelName;

			[Token(Token = "0x4001E11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[SerializeField]
			private VRModuleDeviceClass m_deviceClass;

			[Token(Token = "0x4001E12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[SerializeField]
			private VRModuleDeviceModel m_deviceModel;

			[Token(Token = "0x4001E13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[SerializeField]
			private VRModuleInput2DType m_input2DType;

			[Token(Token = "0x4001E14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[SerializeField]
			private bool m_isPoseValid;

			[Token(Token = "0x4001E15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
			[SerializeField]
			private bool m_isConnected;

			[Token(Token = "0x4001E16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
			[SerializeField]
			private bool m_isOutOfRange;

			[Token(Token = "0x4001E17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
			[SerializeField]
			private bool m_isCalibrating;

			[Token(Token = "0x4001E18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[SerializeField]
			private bool m_isUninitialized;

			[Token(Token = "0x4001E19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			[SerializeField]
			private Vector3 m_velocity;

			[Token(Token = "0x4001E1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[SerializeField]
			private Vector3 m_angularVelocity;

			[Token(Token = "0x4001E1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			[SerializeField]
			private Vector3 m_position;

			[Token(Token = "0x4001E1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[SerializeField]
			private Quaternion m_rotation;

			[Token(Token = "0x4001E1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9380D8", Offset = "0x9380D8")]
			private uint <deviceIndex>k__BackingField;

			[Token(Token = "0x4001E1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[SerializeField]
			private ulong m_buttonPressed;

			[Token(Token = "0x4001E1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[SerializeField]
			private ulong m_buttonTouched;

			[Token(Token = "0x4001E20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[SerializeField]
			private float[] m_axisValue;

			[Token(Token = "0x1700040F")]
			public uint deviceIndex
			{
				[Token(Token = "0x60022FC")]
				[Address(RVA = "0x13E238C", Offset = "0x13E238C", VA = "0x13E238C", Slot = "26")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93EFDC", Offset = "0x93EFDC")]
				get
				{
					return default(uint);
				}
				[Token(Token = "0x60022FD")]
				[Address(RVA = "0x13E2394", Offset = "0x13E2394", VA = "0x13E2394")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93EFEC", Offset = "0x93EFEC")]
				private set
				{
				}
			}

			[Token(Token = "0x17000410")]
			public string serialNumber
			{
				[Token(Token = "0x60022FE")]
				[Address(RVA = "0x13E1E80", Offset = "0x13E1E80", VA = "0x13E1E80", Slot = "27")]
				get
				{
					return null;
				}
				[Token(Token = "0x60022FF")]
				[Address(RVA = "0x13E239C", Offset = "0x13E239C", VA = "0x13E239C", Slot = "28")]
				set
				{
				}
			}

			[Token(Token = "0x17000411")]
			public string modelNumber
			{
				[Token(Token = "0x6002300")]
				[Address(RVA = "0x13E23A4", Offset = "0x13E23A4", VA = "0x13E23A4", Slot = "29")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002301")]
				[Address(RVA = "0x13E23AC", Offset = "0x13E23AC", VA = "0x13E23AC", Slot = "30")]
				set
				{
				}
			}

			[Token(Token = "0x17000412")]
			public string renderModelName
			{
				[Token(Token = "0x6002302")]
				[Address(RVA = "0x13E23B4", Offset = "0x13E23B4", VA = "0x13E23B4", Slot = "31")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002303")]
				[Address(RVA = "0x13E23BC", Offset = "0x13E23BC", VA = "0x13E23BC", Slot = "32")]
				set
				{
				}
			}

			[Token(Token = "0x17000413")]
			public VRModuleDeviceClass deviceClass
			{
				[Token(Token = "0x6002304")]
				[Address(RVA = "0x13E23C4", Offset = "0x13E23C4", VA = "0x13E23C4", Slot = "33")]
				get
				{
					return default(VRModuleDeviceClass);
				}
				[Token(Token = "0x6002305")]
				[Address(RVA = "0x13E23CC", Offset = "0x13E23CC", VA = "0x13E23CC", Slot = "34")]
				set
				{
				}
			}

			[Token(Token = "0x17000414")]
			public VRModuleDeviceModel deviceModel
			{
				[Token(Token = "0x6002306")]
				[Address(RVA = "0x13E23D4", Offset = "0x13E23D4", VA = "0x13E23D4", Slot = "35")]
				get
				{
					return default(VRModuleDeviceModel);
				}
				[Token(Token = "0x6002307")]
				[Address(RVA = "0x13E23DC", Offset = "0x13E23DC", VA = "0x13E23DC", Slot = "36")]
				set
				{
				}
			}

			[Token(Token = "0x17000415")]
			public VRModuleInput2DType input2DType
			{
				[Token(Token = "0x6002308")]
				[Address(RVA = "0x13E23E4", Offset = "0x13E23E4", VA = "0x13E23E4", Slot = "37")]
				get
				{
					return default(VRModuleInput2DType);
				}
				[Token(Token = "0x6002309")]
				[Address(RVA = "0x13E23EC", Offset = "0x13E23EC", VA = "0x13E23EC", Slot = "38")]
				set
				{
				}
			}

			[Token(Token = "0x17000416")]
			public bool isPoseValid
			{
				[Token(Token = "0x600230A")]
				[Address(RVA = "0x13E23F4", Offset = "0x13E23F4", VA = "0x13E23F4", Slot = "41")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x600230B")]
				[Address(RVA = "0x13E23FC", Offset = "0x13E23FC", VA = "0x13E23FC", Slot = "42")]
				set
				{
				}
			}

			[Token(Token = "0x17000417")]
			public bool isConnected
			{
				[Token(Token = "0x600230C")]
				[Address(RVA = "0x13E1414", Offset = "0x13E1414", VA = "0x13E1414", Slot = "39")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x600230D")]
				[Address(RVA = "0x13E2408", Offset = "0x13E2408", VA = "0x13E2408", Slot = "40")]
				set
				{
				}
			}

			[Token(Token = "0x17000418")]
			public bool isOutOfRange
			{
				[Token(Token = "0x600230E")]
				[Address(RVA = "0x13E2414", Offset = "0x13E2414", VA = "0x13E2414", Slot = "43")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x600230F")]
				[Address(RVA = "0x13E241C", Offset = "0x13E241C", VA = "0x13E241C", Slot = "44")]
				set
				{
				}
			}

			[Token(Token = "0x17000419")]
			public bool isCalibrating
			{
				[Token(Token = "0x6002310")]
				[Address(RVA = "0x13E2428", Offset = "0x13E2428", VA = "0x13E2428", Slot = "45")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002311")]
				[Address(RVA = "0x13E2430", Offset = "0x13E2430", VA = "0x13E2430", Slot = "46")]
				set
				{
				}
			}

			[Token(Token = "0x1700041A")]
			public bool isUninitialized
			{
				[Token(Token = "0x6002312")]
				[Address(RVA = "0x13E243C", Offset = "0x13E243C", VA = "0x13E243C", Slot = "47")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002313")]
				[Address(RVA = "0x13E2444", Offset = "0x13E2444", VA = "0x13E2444", Slot = "48")]
				set
				{
				}
			}

			[Token(Token = "0x1700041B")]
			public Vector3 velocity
			{
				[Token(Token = "0x6002314")]
				[Address(RVA = "0x13E2450", Offset = "0x13E2450", VA = "0x13E2450", Slot = "49")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6002315")]
				[Address(RVA = "0x13E245C", Offset = "0x13E245C", VA = "0x13E245C", Slot = "50")]
				set
				{
				}
			}

			[Token(Token = "0x1700041C")]
			public Vector3 angularVelocity
			{
				[Token(Token = "0x6002316")]
				[Address(RVA = "0x13E2468", Offset = "0x13E2468", VA = "0x13E2468", Slot = "51")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6002317")]
				[Address(RVA = "0x13E2474", Offset = "0x13E2474", VA = "0x13E2474", Slot = "52")]
				set
				{
				}
			}

			[Token(Token = "0x1700041D")]
			public Vector3 position
			{
				[Token(Token = "0x6002318")]
				[Address(RVA = "0x13E2480", Offset = "0x13E2480", VA = "0x13E2480", Slot = "53")]
				get
				{
					return default(Vector3);
				}
				[Token(Token = "0x6002319")]
				[Address(RVA = "0x13E248C", Offset = "0x13E248C", VA = "0x13E248C", Slot = "54")]
				set
				{
				}
			}

			[Token(Token = "0x1700041E")]
			public Quaternion rotation
			{
				[Token(Token = "0x600231A")]
				[Address(RVA = "0x13E2498", Offset = "0x13E2498", VA = "0x13E2498", Slot = "55")]
				get
				{
					return default(Quaternion);
				}
				[Token(Token = "0x600231B")]
				[Address(RVA = "0x13E24A4", Offset = "0x13E24A4", VA = "0x13E24A4", Slot = "56")]
				set
				{
				}
			}

			[Token(Token = "0x1700041F")]
			public RigidPose pose
			{
				[Token(Token = "0x600231C")]
				[Address(RVA = "0x13E24B0", Offset = "0x13E24B0", VA = "0x13E24B0", Slot = "57")]
				get
				{
					return default(RigidPose);
				}
				[Token(Token = "0x600231D")]
				[Address(RVA = "0x13E24CC", Offset = "0x13E24CC", VA = "0x13E24CC", Slot = "58")]
				set
				{
				}
			}

			[Token(Token = "0x17000420")]
			public ulong buttonPressed
			{
				[Token(Token = "0x600231E")]
				[Address(RVA = "0x13E24F8", Offset = "0x13E24F8", VA = "0x13E24F8", Slot = "59")]
				get
				{
					return default(ulong);
				}
				[Token(Token = "0x600231F")]
				[Address(RVA = "0x13E2500", Offset = "0x13E2500", VA = "0x13E2500", Slot = "60")]
				set
				{
				}
			}

			[Token(Token = "0x17000421")]
			public ulong buttonTouched
			{
				[Token(Token = "0x6002320")]
				[Address(RVA = "0x13E2508", Offset = "0x13E2508", VA = "0x13E2508", Slot = "61")]
				get
				{
					return default(ulong);
				}
				[Token(Token = "0x6002321")]
				[Address(RVA = "0x13E2510", Offset = "0x13E2510", VA = "0x13E2510", Slot = "62")]
				set
				{
				}
			}

			[Token(Token = "0x17000422")]
			public float[] axisValue
			{
				[Token(Token = "0x6002322")]
				[Address(RVA = "0x13E2518", Offset = "0x13E2518", VA = "0x13E2518", Slot = "63")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002323")]
			[Address(RVA = "0x13E2520", Offset = "0x13E2520", VA = "0x13E2520", Slot = "64")]
			public bool GetButtonPress(VRModuleRawButton button)
			{
				return default(bool);
			}

			[Token(Token = "0x6002324")]
			[Address(RVA = "0x13E25B4", Offset = "0x13E25B4", VA = "0x13E25B4", Slot = "65")]
			public bool GetButtonTouch(VRModuleRawButton button)
			{
				return default(bool);
			}

			[Token(Token = "0x6002325")]
			[Address(RVA = "0x13E2648", Offset = "0x13E2648", VA = "0x13E2648", Slot = "66")]
			public float GetAxisValue(VRModuleRawAxis axis)
			{
				return default(float);
			}

			[Token(Token = "0x6002326")]
			[Address(RVA = "0x13E269C", Offset = "0x13E269C", VA = "0x13E269C", Slot = "67")]
			public void SetButtonPress(VRModuleRawButton button, bool value)
			{
			}

			[Token(Token = "0x6002327")]
			[Address(RVA = "0x13E2770", Offset = "0x13E2770", VA = "0x13E2770", Slot = "68")]
			public void SetButtonTouch(VRModuleRawButton button, bool value)
			{
			}

			[Token(Token = "0x6002328")]
			[Address(RVA = "0x13E2844", Offset = "0x13E2844", VA = "0x13E2844", Slot = "69")]
			public void SetAxisValue(VRModuleRawAxis axis, float value)
			{
			}

			[Token(Token = "0x6002329")]
			[Address(RVA = "0x13E28A4", Offset = "0x13E28A4", VA = "0x13E28A4", Slot = "70")]
			public void ResetAxisValues()
			{
			}

			[Token(Token = "0x600232A")]
			[Address(RVA = "0x13DF490", Offset = "0x13DF490", VA = "0x13DF490")]
			public DeviceState(uint deviceIndex)
			{
			}

			[Token(Token = "0x600232B")]
			[Address(RVA = "0x13E141C", Offset = "0x13E141C", VA = "0x13E141C")]
			public void CopyFrom(DeviceState state)
			{
			}

			[Token(Token = "0x600232C")]
			[Address(RVA = "0x13E1658", Offset = "0x13E1658", VA = "0x13E1658", Slot = "71")]
			public void Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004B9")]
		public class NewPosesEvent : UnityEvent
		{
			[Token(Token = "0x600232D")]
			[Address(RVA = "0xD02DEC", Offset = "0xD02DEC", VA = "0xD02DEC")]
			public NewPosesEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004BA")]
		public class NewInputEvent : UnityEvent
		{
			[Token(Token = "0x600232E")]
			[Address(RVA = "0xD02DE4", Offset = "0xD02DE4", VA = "0xD02DE4")]
			public NewInputEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004BB")]
		public class ControllerRoleChangedEvent : UnityEvent
		{
			[Token(Token = "0x600232F")]
			[Address(RVA = "0x13E1FC8", Offset = "0x13E1FC8", VA = "0x13E1FC8")]
			public ControllerRoleChangedEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004BC")]
		public class InputFocusEvent : UnityEvent<bool>
		{
			[Token(Token = "0x6002330")]
			[Address(RVA = "0xCFF2B8", Offset = "0xCFF2B8", VA = "0xCFF2B8")]
			public InputFocusEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004BD")]
		public class DeviceConnectedEvent : UnityEvent<uint, bool>
		{
			[Token(Token = "0x6002331")]
			[Address(RVA = "0x13E1FD0", Offset = "0x13E1FD0", VA = "0x13E1FD0")]
			public DeviceConnectedEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004BE")]
		public class ActiveModuleChangedEvent : UnityEvent<VRModuleActiveEnum>
		{
			[Token(Token = "0x6002332")]
			[Address(RVA = "0x13E2020", Offset = "0x13E2020", VA = "0x13E2020")]
			public ActiveModuleChangedEvent()
			{
			}
		}

		[Token(Token = "0x20004BF")]
		public delegate void NewPosesListener();

		[Token(Token = "0x20004C0")]
		public delegate void NesInputListener();

		[Token(Token = "0x20004C1")]
		public delegate void ControllerRoleChangedListener();

		[Token(Token = "0x20004C2")]
		public delegate void InputFocusListener(bool value);

		[Token(Token = "0x20004C3")]
		public delegate void DeviceConnectedListener(uint deviceIndex, bool connected);

		[Token(Token = "0x20004C4")]
		public delegate void ActiveModuleChangedListener(VRModuleActiveEnum activeModule);

		[Serializable]
		[Token(Token = "0x20004C5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9275AC", Offset = "0x9275AC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001E21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001E22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Type, bool> <>9__111_0;

			[Token(Token = "0x600234C")]
			[Address(RVA = "0x13E20D4", Offset = "0x13E20D4", VA = "0x13E20D4")]
			public <>c()
			{
			}

			[Token(Token = "0x600234D")]
			[Address(RVA = "0x13E20DC", Offset = "0x13E20DC", VA = "0x13E20DC")]
			internal bool <OnSingletonBehaviourInitialized>b__111_0(Type t)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly bool isGoogleVRPluginDetected;

		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static readonly bool isGoogleVRSupported;

		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public static readonly bool isOculusVRPluginDetected;

		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public static readonly bool isOculusVRDesktopSupported;

		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly bool isOculusVRAndroidSupported;

		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public static readonly bool isOculusVRAvatarSupported;

		[Token(Token = "0x40008C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public static readonly bool isSimulatorSupported;

		[Token(Token = "0x40008C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public static readonly bool isSteamVRPluginDetected;

		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly bool isOpenVRSupported;

		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public static readonly bool isWaveVRPluginDetected;

		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		public static readonly bool isWaveVRSupported;

		[Token(Token = "0x40008C7")]
		public const uint MAX_DEVICE_COUNT = 64u;

		[Token(Token = "0x40008C8")]
		public const uint INVALID_DEVICE_INDEX = uint.MaxValue;

		[Token(Token = "0x40008C9")]
		public const uint HMD_DEVICE_INDEX = 0u;

		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static NewPosesListener s_onNewPoses;

		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static NesInputListener s_onNewInput;

		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static ControllerRoleChangedListener s_onControllerRoleChanged;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static InputFocusListener s_onInputFocus;

		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static DeviceConnectedListener s_onDeviceConnected;

		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static ActiveModuleChangedListener s_onActiveModuleChanged;

		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly DeviceState s_defaultState;

		[Token(Token = "0x40008D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static readonly SimulatorVRModule s_simulator;

		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static readonly Dictionary<string, uint> s_deviceSerialNumberTable;

		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_dontDestroyOnLoad;

		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[SerializeField]
		private bool m_lockPhysicsUpdateRateToRenderFrequency;

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private VRModuleSelectEnum m_selectModule;

		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private VRModuleTrackingSpaceType m_trackingSpaceType;

		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private NewPosesEvent m_onNewPoses;

		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private NewInputEvent m_onNewInput;

		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ControllerRoleChangedEvent m_onControllerRoleChanged;

		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private InputFocusEvent m_onInputFocus;

		[Token(Token = "0x40008DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private DeviceConnectedEvent m_onDeviceConnected;

		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private ActiveModuleChangedEvent m_onActiveModuleChanged;

		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_delayDeactivate;

		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool m_isDestoryed;

		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ModuleBase[] m_modules;

		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ModuleBase[] m_modulesOrdered;

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private VRModuleActiveEnum m_activatedModule;

		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ModuleBase m_activatedModuleBase;

		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private DeviceState[] m_prevStates;

		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private DeviceState[] m_currStates;

		[Token(Token = "0x170000C8")]
		public static bool lockPhysicsUpdateRateToRenderFrequency
		{
			[Token(Token = "0x6000996")]
			[Address(RVA = "0x13C8704", Offset = "0x13C8704", VA = "0x13C8704")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000997")]
			[Address(RVA = "0x13DC164", Offset = "0x13DC164", VA = "0x13DC164")]
			set
			{
			}
		}

		[Token(Token = "0x170000C9")]
		public static VRModuleSelectEnum selectModule
		{
			[Token(Token = "0x6000998")]
			[Address(RVA = "0x13DC24C", Offset = "0x13DC24C", VA = "0x13DC24C")]
			get
			{
				return default(VRModuleSelectEnum);
			}
			[Token(Token = "0x6000999")]
			[Address(RVA = "0x13DC334", Offset = "0x13DC334", VA = "0x13DC334")]
			set
			{
			}
		}

		[Token(Token = "0x170000CA")]
		public static VRModuleActiveEnum activeModule
		{
			[Token(Token = "0x600099A")]
			[Address(RVA = "0x13DC418", Offset = "0x13DC418", VA = "0x13DC418")]
			get
			{
				return default(VRModuleActiveEnum);
			}
		}

		[Token(Token = "0x170000CB")]
		public static IVRModuleDeviceState defaultDeviceState
		{
			[Token(Token = "0x600099B")]
			[Address(RVA = "0x13DC500", Offset = "0x13DC500", VA = "0x13DC500")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CC")]
		public static VRModuleTrackingSpaceType trackingSpaceType
		{
			[Token(Token = "0x60009A7")]
			[Address(RVA = "0x13C8568", Offset = "0x13C8568", VA = "0x13C8568")]
			get
			{
				return default(VRModuleTrackingSpaceType);
			}
			[Token(Token = "0x60009A8")]
			[Address(RVA = "0x13DCE88", Offset = "0x13DCE88", VA = "0x13DCE88")]
			set
			{
			}
		}

		[Token(Token = "0x170000CD")]
		public static ISimulatorVRModule Simulator
		{
			[Token(Token = "0x60009A9")]
			[Address(RVA = "0x13DCFE0", Offset = "0x13DCFE0", VA = "0x13DCFE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000011")]
		public static event NewPosesListener onNewPoses
		{
			[Token(Token = "0x60009AC")]
			[Address(RVA = "0x13DD37C", Offset = "0x13DD37C", VA = "0x13DD37C")]
			add
			{
			}
			[Token(Token = "0x60009AD")]
			[Address(RVA = "0x13DD46C", Offset = "0x13DD46C", VA = "0x13DD46C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000012")]
		public static event NesInputListener onNewInput
		{
			[Token(Token = "0x60009AE")]
			[Address(RVA = "0x13DD55C", Offset = "0x13DD55C", VA = "0x13DD55C")]
			add
			{
			}
			[Token(Token = "0x60009AF")]
			[Address(RVA = "0x13DD64C", Offset = "0x13DD64C", VA = "0x13DD64C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000013")]
		public static event ControllerRoleChangedListener onControllerRoleChanged
		{
			[Token(Token = "0x60009B0")]
			[Address(RVA = "0x13DD73C", Offset = "0x13DD73C", VA = "0x13DD73C")]
			add
			{
			}
			[Token(Token = "0x60009B1")]
			[Address(RVA = "0x13DD82C", Offset = "0x13DD82C", VA = "0x13DD82C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000014")]
		public static event InputFocusListener onInputFocus
		{
			[Token(Token = "0x60009B2")]
			[Address(RVA = "0x13DD91C", Offset = "0x13DD91C", VA = "0x13DD91C")]
			add
			{
			}
			[Token(Token = "0x60009B3")]
			[Address(RVA = "0x13DDA0C", Offset = "0x13DDA0C", VA = "0x13DDA0C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000015")]
		public static event DeviceConnectedListener onDeviceConnected
		{
			[Token(Token = "0x60009B4")]
			[Address(RVA = "0x13DDAFC", Offset = "0x13DDAFC", VA = "0x13DDAFC")]
			add
			{
			}
			[Token(Token = "0x60009B5")]
			[Address(RVA = "0x13DDBEC", Offset = "0x13DDBEC", VA = "0x13DDBEC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000016")]
		public static event ActiveModuleChangedListener onActiveModuleChanged
		{
			[Token(Token = "0x60009B6")]
			[Address(RVA = "0x13DDCDC", Offset = "0x13DDCDC", VA = "0x13DDCDC")]
			add
			{
			}
			[Token(Token = "0x60009B7")]
			[Address(RVA = "0x13DDDCC", Offset = "0x13DDDCC", VA = "0x13DDDCC")]
			remove
			{
			}
		}

		[Token(Token = "0x600099C")]
		[Address(RVA = "0x13CB3A8", Offset = "0x13CB3A8", VA = "0x13CB3A8")]
		public static bool IsValidDeviceIndex(uint deviceIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x600099D")]
		[Address(RVA = "0x13DC580", Offset = "0x13DC580", VA = "0x13DC580")]
		public static bool HasInputFocus()
		{
			return default(bool);
		}

		[Token(Token = "0x600099E")]
		[Address(RVA = "0x13DC6C0", Offset = "0x13DC6C0", VA = "0x13DC6C0")]
		public static bool IsDeviceConnected(string deviceSerialNumber)
		{
			return default(bool);
		}

		[Token(Token = "0x600099F")]
		[Address(RVA = "0x13DC794", Offset = "0x13DC794", VA = "0x13DC794")]
		public static uint GetConnectedDeviceIndex(string deviceSerialNumber)
		{
			return default(uint);
		}

		[Token(Token = "0x60009A0")]
		[Address(RVA = "0x13DC880", Offset = "0x13DC880", VA = "0x13DC880")]
		public static bool TryGetConnectedDeviceIndex(string deviceSerialNumber, out uint deviceIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x13DC970", Offset = "0x13DC970", VA = "0x13DC970")]
		public static uint GetDeviceStateCount()
		{
			return default(uint);
		}

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0x13D4C48", Offset = "0x13D4C48", VA = "0x13D4C48")]
		public static IVRModuleDeviceState GetCurrentDeviceState(uint deviceIndex)
		{
			return null;
		}

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0x13DCA60", Offset = "0x13DCA60", VA = "0x13DCA60")]
		public static IVRModuleDeviceState GetPreviousDeviceState(uint deviceIndex)
		{
			return null;
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x13D30AC", Offset = "0x13D30AC", VA = "0x13D30AC")]
		public static IVRModuleDeviceState GetDeviceState(uint deviceIndex, bool usePrevious = false)
		{
			return null;
		}

		[Token(Token = "0x60009A5")]
		[Address(RVA = "0x13DCC08", Offset = "0x13DCC08", VA = "0x13DCC08")]
		public static uint GetLeftControllerDeviceIndex()
		{
			return default(uint);
		}

		[Token(Token = "0x60009A6")]
		[Address(RVA = "0x13DCD48", Offset = "0x13DCD48", VA = "0x13DCD48")]
		public static uint GetRightControllerDeviceIndex()
		{
			return default(uint);
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0x13DD048", Offset = "0x13DD048", VA = "0x13DD048")]
		public static void TriggerViveControllerHaptic(uint deviceIndex, ushort durationMicroSec = 500)
		{
		}

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0x13DD1D0", Offset = "0x13DD1D0", VA = "0x13DD1D0")]
		public static void TriggerHapticVibration(uint deviceIndex, float durationSeconds = 0.01f, float frequency = 85f, float amplitude = 0.125f, float startSecondsFromNow = 0f)
		{
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0x13DDEBC", Offset = "0x13DDEBC", VA = "0x13DDEBC")]
		private static void InvokeNewPosesEvent()
		{
		}

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0x13DDFF0", Offset = "0x13DDFF0", VA = "0x13DDFF0")]
		private static void InvokeNewInputEvent()
		{
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0x13DE124", Offset = "0x13DE124", VA = "0x13DE124")]
		private static void InvokeControllerRoleChangedEvent()
		{
		}

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0x13DE654", Offset = "0x13DE654", VA = "0x13DE654")]
		private static void InvokeInputFocusEvent(bool value)
		{
		}

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0x13DE79C", Offset = "0x13DE79C", VA = "0x13DE79C")]
		private static void InvokeDeviceConnectedEvent(uint deviceIndex, bool connected)
		{
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0x13DED60", Offset = "0x13DED60", VA = "0x13DED60")]
		private static void InvokeActiveModuleChangedEvent(VRModuleActiveEnum activeModule)
		{
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0x13DF2E4", Offset = "0x13DF2E4", VA = "0x13DF2E4")]
		static VRModule()
		{
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x13DF574", Offset = "0x13DF574", VA = "0x13DF574")]
		private static GameObject GetDefaultInitGameObject()
		{
			return null;
		}

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x13DF5DC", Offset = "0x13DF5DC", VA = "0x13DF5DC")]
		public static GameObject GetInstanceGameObject()
		{
			return null;
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0x13DF65C", Offset = "0x13DF65C", VA = "0x13DF65C", Slot = "4")]
		protected override void OnSingletonBehaviourInitialized()
		{
		}

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0x13DC568", Offset = "0x13DC568", VA = "0x13DC568")]
		private uint GetDeviceStateLength()
		{
			return default(uint);
		}

		[Token(Token = "0x60009C3")]
		[Address(RVA = "0x13E093C", Offset = "0x13E093C", VA = "0x13E093C")]
		private void EnsureDeviceStateLength(uint capacity)
		{
		}

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0x13E09FC", Offset = "0x13E09FC", VA = "0x13E09FC")]
		private bool TryGetValidDeviceState(uint index, out IVRModuleDeviceState prevState, out IVRModuleDeviceStateRW currState)
		{
			return default(bool);
		}

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x13E0A5C", Offset = "0x13E0A5C", VA = "0x13E0A5C")]
		private bool TryGetValidDeviceState(uint index, out DeviceState prevState, out DeviceState currState)
		{
			return default(bool);
		}

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0x13E0B4C", Offset = "0x13E0B4C", VA = "0x13E0B4C")]
		private void EnsureValidDeviceState(uint index, out IVRModuleDeviceState prevState, out IVRModuleDeviceStateRW currState)
		{
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x13E0CBC", Offset = "0x13E0CBC", VA = "0x13E0CBC")]
		private void Update()
		{
		}

		[Token(Token = "0x60009C8")]
		[Address(RVA = "0x13E1288", Offset = "0x13E1288", VA = "0x13E1288")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0x13E1300", Offset = "0x13E1300", VA = "0x13E1300")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0x13E1378", Offset = "0x13E1378", VA = "0x13E1378", Slot = "6")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0x13E0D6C", Offset = "0x13E0D6C", VA = "0x13E0D6C")]
		private VRModuleActiveEnum GetShouldActivateModule()
		{
			return default(VRModuleActiveEnum);
		}

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0x13E10B8", Offset = "0x13E10B8", VA = "0x13E10B8")]
		private void ActivateModule(VRModuleActiveEnum module)
		{
		}

		[Token(Token = "0x60009CD")]
		[Address(RVA = "0x13E13F8", Offset = "0x13E13F8", VA = "0x13E13F8")]
		private void BeforeRenderUpdateModule()
		{
		}

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0x13E0EEC", Offset = "0x13E0EEC", VA = "0x13E0EEC")]
		private void DeactivateModule()
		{
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0x13E1864", Offset = "0x13E1864", VA = "0x13E1864")]
		private void ModuleFlushDeviceState()
		{
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x13E1910", Offset = "0x13E1910", VA = "0x13E1910")]
		private void ModuleConnectedDeviceChanged()
		{
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0x13E1760", Offset = "0x13E1760", VA = "0x13E1760")]
		private void SendAllDeviceConnectedEvent()
		{
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0x13E1E88", Offset = "0x13E1E88", VA = "0x13E1E88")]
		public VRModule()
		{
		}
	}
	[Token(Token = "0x2000122")]
	public sealed class GoogleVRModule : VRModule.ModuleBase
	{
		[Token(Token = "0x170000CE")]
		public override int moduleOrder
		{
			[Token(Token = "0x60009D3")]
			[Address(RVA = "0x13C7B60", Offset = "0x13C7B60", VA = "0x13C7B60", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000CF")]
		public override int moduleIndex
		{
			[Token(Token = "0x60009D4")]
			[Address(RVA = "0x13C7B68", Offset = "0x13C7B68", VA = "0x13C7B68", Slot = "5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0x13C7B70", Offset = "0x13C7B70", VA = "0x13C7B70")]
		public GoogleVRModule()
		{
		}
	}
	[Token(Token = "0x2000123")]
	public sealed class OculusVRModule : VRModule.ModuleBase
	{
		[Token(Token = "0x20004C6")]
		private class CameraCreator : VRCameraHook.CameraCreator
		{
			[Token(Token = "0x17000423")]
			public override bool shouldActive
			{
				[Token(Token = "0x600234E")]
				[Address(RVA = "0x13CAF60", Offset = "0x13CAF60", VA = "0x13CAF60", Slot = "4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x600234F")]
			[Address(RVA = "0x13CB014", Offset = "0x13CB014", VA = "0x13CB014", Slot = "5")]
			public override void CreateCamera(VRCameraHook hook)
			{
			}

			[Token(Token = "0x6002350")]
			[Address(RVA = "0x13CB018", Offset = "0x13CB018", VA = "0x13CB018")]
			public CameraCreator()
			{
			}
		}

		[Token(Token = "0x20004C7")]
		private class RenderModelCreator : RenderModelHook.RenderModelCreator
		{
			[Token(Token = "0x4001E23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private uint m_index;

			[Token(Token = "0x4001E24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private VIUOculusVRRenderModel m_model;

			[Token(Token = "0x17000424")]
			public override bool shouldActive
			{
				[Token(Token = "0x6002351")]
				[Address(RVA = "0x13CB020", Offset = "0x13CB020", VA = "0x13CB020", Slot = "4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002352")]
			[Address(RVA = "0x13CB0D4", Offset = "0x13CB0D4", VA = "0x13CB0D4", Slot = "5")]
			public override void UpdateRenderModel()
			{
			}

			[Token(Token = "0x6002353")]
			[Address(RVA = "0x13CB46C", Offset = "0x13CB46C", VA = "0x13CB46C", Slot = "6")]
			public override void CleanUpRenderModel()
			{
			}

			[Token(Token = "0x6002354")]
			[Address(RVA = "0x13CB540", Offset = "0x13CB540", VA = "0x13CB540")]
			public RenderModelCreator()
			{
			}
		}

		[Token(Token = "0x40008E5")]
		public const string OCULUS_XR_LOADER_NAME = "Oculus Loader";

		[Token(Token = "0x40008E6")]
		public const string OCULUS_XR_LOADER_CLASS_NAME = "OculusLoader";

		[Token(Token = "0x40008E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static OculusVRModule s_moduleInstance;

		[Token(Token = "0x40008E8")]
		public const int VALID_NODE_COUNT = 7;

		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly OVRPlugin.Node[] s_index2node;

		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly uint[] s_node2index;

		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly VRModuleDeviceClass[] s_node2class;

		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private OVRPlugin.TrackingOrigin m_prevTrackingSpace;

		[Token(Token = "0x170000D0")]
		public override int moduleOrder
		{
			[Token(Token = "0x60009D6")]
			[Address(RVA = "0x13C7BD8", Offset = "0x13C7BD8", VA = "0x13C7BD8", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000D1")]
		public override int moduleIndex
		{
			[Token(Token = "0x60009D7")]
			[Address(RVA = "0x13C7BE0", Offset = "0x13C7BE0", VA = "0x13C7BE0", Slot = "5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0x13C7BE8", Offset = "0x13C7BE8", VA = "0x13C7BE8")]
		static OculusVRModule()
		{
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0x13C82E0", Offset = "0x13C82E0", VA = "0x13C82E0", Slot = "6")]
		public override bool ShouldActiveModule()
		{
			return default(bool);
		}

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0x13C837C", Offset = "0x13C837C", VA = "0x13C837C", Slot = "7")]
		public override void OnActivated()
		{
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0x13C8434", Offset = "0x13C8434", VA = "0x13C8434", Slot = "8")]
		public override void OnDeactivated()
		{
		}

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0x13C84A0", Offset = "0x13C84A0", VA = "0x13C84A0", Slot = "12")]
		public override void UpdateTrackingSpaceType()
		{
		}

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0x13C8650", Offset = "0x13C8650", VA = "0x13C8650", Slot = "13")]
		public override void Update()
		{
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x13C87F4", Offset = "0x13C87F4", VA = "0x13C87F4", Slot = "10")]
		public override uint GetLeftControllerDeviceIndex()
		{
			return default(uint);
		}

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0x13C8888", Offset = "0x13C8888", VA = "0x13C8888", Slot = "11")]
		public override uint GetRightControllerDeviceIndex()
		{
			return default(uint);
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0x13C891C", Offset = "0x13C891C", VA = "0x13C891C")]
		private static RigidPose ToPose(OVRPlugin.Posef value)
		{
			return default(RigidPose);
		}

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0x13C8978", Offset = "0x13C8978", VA = "0x13C8978", Slot = "16")]
		public override void BeforeRenderUpdate()
		{
		}

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0x13CAEF8", Offset = "0x13CAEF8", VA = "0x13CAEF8")]
		public OculusVRModule()
		{
		}
	}
	[Token(Token = "0x2000124")]
	public interface ISimulatorVRModule
	{
		[Token(Token = "0x14000017")]
		event Action onActivated;

		[Token(Token = "0x14000018")]
		event Action onDeactivated;

		[Token(Token = "0x14000019")]
		event SimulatorVRModule.UpdateDeviceStateHandler onUpdateDeviceState;
	}
	[Token(Token = "0x2000125")]
	public sealed class SimulatorVRModule : VRModule.ModuleBase, ISimulatorVRModule
	{
		[Token(Token = "0x20004C8")]
		public delegate void UpdateDeviceStateHandler(IVRModuleDeviceState[] prevState, IVRModuleDeviceStateRW[] currState);

		[Token(Token = "0x20004C9")]
		private class IMGUIHandle : MonoBehaviour
		{
			[Token(Token = "0x4001E25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938118", Offset = "0x938118")]
			private SimulatorVRModule <simulator>k__BackingField;

			[Token(Token = "0x4001E26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938128", Offset = "0x938128")]
			private bool <showGUI>k__BackingField;

			[Token(Token = "0x17000425")]
			public SimulatorVRModule simulator
			{
				[Token(Token = "0x6002359")]
				[Address(RVA = "0x13D32E0", Offset = "0x13D32E0", VA = "0x13D32E0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93EFFC", Offset = "0x93EFFC")]
				get
				{
					return null;
				}
				[Token(Token = "0x600235A")]
				[Address(RVA = "0x13CBDEC", Offset = "0x13CBDEC", VA = "0x13CBDEC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F00C", Offset = "0x93F00C")]
				set
				{
				}
			}

			[Token(Token = "0x17000426")]
			private bool showGUI
			{
				[Token(Token = "0x600235B")]
				[Address(RVA = "0x13D32E8", Offset = "0x13D32E8", VA = "0x13D32E8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F01C", Offset = "0x93F01C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x600235C")]
				[Address(RVA = "0x13D32F0", Offset = "0x13D32F0", VA = "0x13D32F0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F02C", Offset = "0x93F02C")]
				set
				{
				}
			}

			[Token(Token = "0x600235D")]
			[Address(RVA = "0x13D32FC", Offset = "0x13D32FC", VA = "0x13D32FC")]
			private void Start()
			{
			}

			[Token(Token = "0x600235E")]
			[Address(RVA = "0x13D3308", Offset = "0x13D3308", VA = "0x13D3308")]
			private void Update()
			{
			}

			[Token(Token = "0x600235F")]
			[Address(RVA = "0x13D3340", Offset = "0x13D3340", VA = "0x13D3340")]
			private static string Bold(string s)
			{
				return null;
			}

			[Token(Token = "0x6002360")]
			[Address(RVA = "0x13D33A0", Offset = "0x13D33A0", VA = "0x13D33A0")]
			private static string SetColor(string s, string color)
			{
				return null;
			}

			[Token(Token = "0x6002361")]
			[Address(RVA = "0x13D359C", Offset = "0x13D359C", VA = "0x13D359C")]
			private void OnGUI()
			{
			}

			[Token(Token = "0x6002362")]
			[Address(RVA = "0x13D4DF0", Offset = "0x13D4DF0", VA = "0x13D4DF0")]
			public IMGUIHandle()
			{
			}
		}

		[Token(Token = "0x40008ED")]
		public const uint SIMULATOR_MAX_DEVICE_COUNT = 16u;

		[Token(Token = "0x40008EE")]
		private const uint RIGHT_INDEX = 1u;

		[Token(Token = "0x40008EF")]
		private const uint LEFT_INDEX = 2u;

		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly RigidPose s_initHmdPose;

		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private static RigidPose s_offsetLeftController;

		[Token(Token = "0x40008F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static RigidPose s_offsetRightController;

		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private static RigidPose s_offsetTracker;

		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool m_prevXREnabled;

		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		private bool m_resetDevices;

		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IMGUIHandle m_guiHandle;

		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IVRModuleDeviceState[] m_prevStates;

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IVRModuleDeviceStateRW[] m_currStates;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92A358", Offset = "0x92A358")]
		private uint <selectedDeviceIndex>k__BackingField;

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92A368", Offset = "0x92A368")]
		private bool <hasControlFocus>k__BackingField;

		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		private bool m_autoTrackMainCam;

		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RigidPose m_mainCamStartPose;

		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_menuKeyPressed;

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		private bool m_resetDevicesKeyPressed;

		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
		private bool m_resetAllKeyPressed;

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
		private bool m_escapeKeyPressed;

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_shiftKeyPressed;

		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_backQuotePressed;

		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool[] m_alphaKeyDownState;

		[Token(Token = "0x170000D2")]
		public override int moduleOrder
		{
			[Token(Token = "0x60009EF")]
			[Address(RVA = "0x13CBAD8", Offset = "0x13CBAD8", VA = "0x13CBAD8", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000D3")]
		public override int moduleIndex
		{
			[Token(Token = "0x60009F0")]
			[Address(RVA = "0x13CBAE0", Offset = "0x13CBAE0", VA = "0x13CBAE0", Slot = "5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000D4")]
		public uint selectedDeviceIndex
		{
			[Token(Token = "0x60009F1")]
			[Address(RVA = "0x13CBAE8", Offset = "0x13CBAE8", VA = "0x13CBAE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939B80", Offset = "0x939B80")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x60009F2")]
			[Address(RVA = "0x13CBAF0", Offset = "0x13CBAF0", VA = "0x13CBAF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939B90", Offset = "0x939B90")]
			private set
			{
			}
		}

		[Token(Token = "0x170000D5")]
		public bool hasControlFocus
		{
			[Token(Token = "0x60009F3")]
			[Address(RVA = "0x13CBAF8", Offset = "0x13CBAF8", VA = "0x13CBAF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939BA0", Offset = "0x939BA0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009F4")]
			[Address(RVA = "0x13CBB00", Offset = "0x13CBB00", VA = "0x13CBB00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939BB0", Offset = "0x939BB0")]
			private set
			{
			}
		}

		[Token(Token = "0x1400001A")]
		public event Action onActivated
		{
			[Token(Token = "0x60009E9")]
			[Address(RVA = "0x13CB550", Offset = "0x13CB550", VA = "0x13CB550", Slot = "20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939B20", Offset = "0x939B20")]
			add
			{
			}
			[Token(Token = "0x60009EA")]
			[Address(RVA = "0x13CB63C", Offset = "0x13CB63C", VA = "0x13CB63C", Slot = "21")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939B30", Offset = "0x939B30")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001B")]
		public event Action onDeactivated
		{
			[Token(Token = "0x60009EB")]
			[Address(RVA = "0x13CB728", Offset = "0x13CB728", VA = "0x13CB728", Slot = "22")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939B40", Offset = "0x939B40")]
			add
			{
			}
			[Token(Token = "0x60009EC")]
			[Address(RVA = "0x13CB814", Offset = "0x13CB814", VA = "0x13CB814", Slot = "23")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939B50", Offset = "0x939B50")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001C")]
		public event UpdateDeviceStateHandler onUpdateDeviceState
		{
			[Token(Token = "0x60009ED")]
			[Address(RVA = "0x13CB900", Offset = "0x13CB900", VA = "0x13CB900", Slot = "24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939B60", Offset = "0x939B60")]
			add
			{
			}
			[Token(Token = "0x60009EE")]
			[Address(RVA = "0x13CB9EC", Offset = "0x13CB9EC", VA = "0x13CB9EC", Slot = "25")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939B70", Offset = "0x939B70")]
			remove
			{
			}
		}

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0x13CBB0C", Offset = "0x13CBB0C", VA = "0x13CBB0C", Slot = "6")]
		public override bool ShouldActiveModule()
		{
			return default(bool);
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x13CBB6C", Offset = "0x13CBB6C", VA = "0x13CBB6C", Slot = "7")]
		public override void OnActivated()
		{
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x13CBDF4", Offset = "0x13CBDF4", VA = "0x13CBDF4", Slot = "8")]
		public override void OnDeactivated()
		{
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0x13CC1E4", Offset = "0x13CC1E4", VA = "0x13CC1E4", Slot = "11")]
		public override uint GetRightControllerDeviceIndex()
		{
			return default(uint);
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x13CC1EC", Offset = "0x13CC1EC", VA = "0x13CC1EC", Slot = "10")]
		public override uint GetLeftControllerDeviceIndex()
		{
			return default(uint);
		}

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0x13CC1F4", Offset = "0x13CC1F4", VA = "0x13CC1F4", Slot = "13")]
		public override void Update()
		{
		}

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0x13CC6D8", Offset = "0x13CC6D8", VA = "0x13CC6D8", Slot = "16")]
		public override void BeforeRenderUpdate()
		{
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0x13CC728", Offset = "0x13CC728", VA = "0x13CC728")]
		public void InternalUpdateDeviceState(IVRModuleDeviceState[] prevState, IVRModuleDeviceStateRW[] currState)
		{
		}

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x13CBEE4", Offset = "0x13CBEE4", VA = "0x13CBEE4")]
		private void UpdateMainCamTracking()
		{
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x13D0290", Offset = "0x13D0290", VA = "0x13D0290")]
		private bool IsSelectedDevice(IVRModuleDeviceStateRW state)
		{
			return default(bool);
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x13CD538", Offset = "0x13CD538", VA = "0x13CD538")]
		private bool IsDeviceSelected()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x13D035C", Offset = "0x13D035C", VA = "0x13D035C")]
		private void SelectDevice(IVRModuleDeviceStateRW state)
		{
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0x13CD5A0", Offset = "0x13CD5A0", VA = "0x13CD5A0")]
		private void DeselectDevice()
		{
		}

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0x13CC290", Offset = "0x13CC290", VA = "0x13CC290")]
		private void UpdateKeyDown()
		{
		}

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0x13D3144", Offset = "0x13D3144", VA = "0x13D3144")]
		private bool IsMenuKeyDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x13CD5AC", Offset = "0x13CD5AC", VA = "0x13CD5AC")]
		private bool IsResetAllKeyDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x13CFC2C", Offset = "0x13CFC2C", VA = "0x13CFC2C")]
		private bool IsResetDevicesKeyDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0x13CD530", Offset = "0x13CD530", VA = "0x13CD530")]
		private bool IsEscapeKeyDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0x13D0288", Offset = "0x13D0288", VA = "0x13D0288")]
		private bool IsShiftKeyPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x13CFC34", Offset = "0x13CFC34", VA = "0x13CFC34")]
		private bool GetDeviceByInputDownKeyCode(IVRModuleDeviceStateRW[] deviceStates, out IVRModuleDeviceStateRW deviceState)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x13CD5B4", Offset = "0x13CD5B4", VA = "0x13CD5B4")]
		private void InitializeDevice(IVRModuleDeviceStateRW hmdState, IVRModuleDeviceStateRW deviceState)
		{
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x13D0420", Offset = "0x13D0420", VA = "0x13D0420")]
		private void ControlDevice(IVRModuleDeviceStateRW deviceState)
		{
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x13D15DC", Offset = "0x13D15DC", VA = "0x13D15DC")]
		private void ControlDeviceGroup(IVRModuleDeviceStateRW[] deviceStates)
		{
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x13D21B4", Offset = "0x13D21B4", VA = "0x13D21B4")]
		private void ControlCamera(IVRModuleDeviceStateRW deviceState)
		{
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x13D0CA4", Offset = "0x13D0CA4", VA = "0x13D0CA4")]
		private void HandleDeviceInput(IVRModuleDeviceStateRW deviceState)
		{
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x13D314C", Offset = "0x13D314C", VA = "0x13D314C")]
		public SimulatorVRModule()
		{
		}
	}
	[Token(Token = "0x2000126")]
	public sealed class SteamVRModule : VRModule.ModuleBase
	{
		[Token(Token = "0x4000907")]
		public const string OPENVR_XR_LOADER_NAME = "Open VR Loader";

		[Token(Token = "0x4000908")]
		public const string OPENVR_XR_LOADER_CLASS_NAME = "OpenVRLoader";

		[Token(Token = "0x170000D6")]
		public override int moduleOrder
		{
			[Token(Token = "0x6000A10")]
			[Address(RVA = "0x13D4E44", Offset = "0x13D4E44", VA = "0x13D4E44", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000D7")]
		public override int moduleIndex
		{
			[Token(Token = "0x6000A11")]
			[Address(RVA = "0x13D4E4C", Offset = "0x13D4E4C", VA = "0x13D4E4C", Slot = "5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x13D4E54", Offset = "0x13D4E54", VA = "0x13D4E54")]
		public SteamVRModule()
		{
		}
	}
	[Token(Token = "0x2000127")]
	public sealed class UnityEngineVRModule : VRModule.ModuleBase
	{
		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static KeyCode[] s_keyCodes;

		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string[] s_axisNames;

		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly VRModuleDeviceClass[] s_nodeType2DeviceClass;

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private uint m_leftIndex;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private uint m_rightIndex;

		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<XRNodeState> m_nodeStateList;

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<ulong, uint> m_node2Index;

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ulong[] m_index2nodeID;

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool[] m_index2nodeValidity;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool[] m_index2nodeTouched;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TrackingSpaceType m_prevTrackingSpace;

		[Token(Token = "0x170000D8")]
		public override int moduleOrder
		{
			[Token(Token = "0x6000A13")]
			[Address(RVA = "0x13D4EBC", Offset = "0x13D4EBC", VA = "0x13D4EBC", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000D9")]
		public override int moduleIndex
		{
			[Token(Token = "0x6000A14")]
			[Address(RVA = "0x13D4EC4", Offset = "0x13D4EC4", VA = "0x13D4EC4", Slot = "5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x13D4ECC", Offset = "0x13D4ECC", VA = "0x13D4ECC")]
		public static bool GetUnityButton(int id)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0x13D4F70", Offset = "0x13D4F70", VA = "0x13D4F70")]
		public static float GetUnityAxis(int id)
		{
			return default(float);
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0x13D5018", Offset = "0x13D5018", VA = "0x13D5018", Slot = "6")]
		public override bool ShouldActiveModule()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0x13D5094", Offset = "0x13D5094", VA = "0x13D5094", Slot = "13")]
		public override void Update()
		{
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0x13D5148", Offset = "0x13D5148", VA = "0x13D5148")]
		private static void UpdateLeftControllerInput(IVRModuleDeviceState prevState, IVRModuleDeviceStateRW currState)
		{
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0x13D7364", Offset = "0x13D7364", VA = "0x13D7364")]
		private static void UpdateRightControllerInput(IVRModuleDeviceState prevState, IVRModuleDeviceStateRW currState)
		{
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x13D532C", Offset = "0x13D532C", VA = "0x13D532C")]
		private static void Update_L_Vive(IVRModuleDeviceState prevState, IVRModuleDeviceStateRW currState)
		{
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x13D7548", Offset = "0x13D7548", VA = "0x13D7548")]
		private static void Update_R_Vive(IVRModuleDeviceState prevState, IVRModuleDeviceStateRW currState)
		{
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x13D5928", Offset = "0x13D5928", VA = "0x13D5928")]
		private static void Update_L_OculusTouch(IVRModuleDeviceState prevState, IVRModuleDeviceStateRW currState)
		{
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x13D7B44", Offset = "0x13D7B44", VA = "0x13D7B44")]
		private static void Update_R_OculusTouch(IVRModuleDeviceState prevState, IVRModuleDeviceStateRW currState)
		{
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x13D6340", Offset = "0x13D6340", VA = "0x13D6340")]
		private static void Update_L_Knuckles(IVRModuleDeviceState prevState, IVRModuleDeviceStateRW currState)
		{
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x13D84D4", Offset = "0x13D84D4", VA = "0x13D84D4")]
		private static void Update_R_Knuckles(IVRModuleDeviceState prevState, IVRModuleDeviceStateRW currState)
		{
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x13D6C58", Offset = "0x13D6C58", VA = "0x13D6C58")]
		private static void Update_L_MicrosoftMR(IVRModuleDeviceState prevState, IVRModuleDeviceStateRW currState)
		{
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x13D8DEC", Offset = "0x13D8DEC", VA = "0x13D8DEC")]
		private static void Update_R_MicrosoftMR(IVRModuleDeviceState prevState, IVRModuleDeviceStateRW currState)
		{
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0x13D94F8", Offset = "0x13D94F8", VA = "0x13D94F8")]
		static UnityEngineVRModule()
		{
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0x13DA0EC", Offset = "0x13DA0EC", VA = "0x13DA0EC", Slot = "7")]
		public override void OnActivated()
		{
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0x13DA1E8", Offset = "0x13DA1E8", VA = "0x13DA1E8", Slot = "8")]
		public override void OnDeactivated()
		{
		}

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0x13DA410", Offset = "0x13DA410", VA = "0x13DA410", Slot = "10")]
		public override uint GetLeftControllerDeviceIndex()
		{
			return default(uint);
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0x13DA418", Offset = "0x13DA418", VA = "0x13DA418", Slot = "11")]
		public override uint GetRightControllerDeviceIndex()
		{
			return default(uint);
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0x13DA420", Offset = "0x13DA420", VA = "0x13DA420", Slot = "12")]
		public override void UpdateTrackingSpaceType()
		{
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0x13DA4E8", Offset = "0x13DA4E8", VA = "0x13DA4E8")]
		private bool IsTrackingDeviceNode(XRNodeState nodeState)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0x13DA510", Offset = "0x13DA510", VA = "0x13DA510")]
		private bool TryGetAndTouchNodeDeviceIndex(XRNodeState nodeState, out uint deviceIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0x13DACB0", Offset = "0x13DACB0", VA = "0x13DACB0")]
		private void TrimUntouchedNodes(Action<uint> onTrimmed)
		{
		}

		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0x13DA264", Offset = "0x13DA264", VA = "0x13DA264")]
		private void RemoveAllValidNodes()
		{
		}

		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0x13DAE90", Offset = "0x13DAE90", VA = "0x13DAE90", Slot = "16")]
		public override void BeforeRenderUpdate()
		{
		}

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0x13DBF38", Offset = "0x13DBF38", VA = "0x13DBF38")]
		public UnityEngineVRModule()
		{
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0x13DBFF8", Offset = "0x13DBFF8", VA = "0x13DBFF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939BC0", Offset = "0x939BC0")]
		private void <BeforeRenderUpdate>b__39_0(uint trimmedIndex)
		{
		}
	}
	[Token(Token = "0x2000128")]
	public enum XRInputSubsystemType
	{
		[Token(Token = "0x4000915")]
		Unknown,
		[Token(Token = "0x4000916")]
		OpenVR,
		[Token(Token = "0x4000917")]
		Oculus,
		[Token(Token = "0x4000918")]
		WMR,
		[Token(Token = "0x4000919")]
		MagicLeap
	}
	[Token(Token = "0x2000129")]
	public sealed class UnityXRModule : VRModule.ModuleBase
	{
		[Token(Token = "0x400091A")]
		public const string WAVE_XR_LOADER_NAME = "Wave XR Loader";

		[Token(Token = "0x400091B")]
		public const string WAVE_XR_LOADER_CLASS_NAME = "WaveXRLoader";

		[Token(Token = "0x170000DA")]
		public override int moduleOrder
		{
			[Token(Token = "0x6000A30")]
			[Address(RVA = "0x13DC0EC", Offset = "0x13DC0EC", VA = "0x13DC0EC", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000DB")]
		public override int moduleIndex
		{
			[Token(Token = "0x6000A31")]
			[Address(RVA = "0x13DC0F4", Offset = "0x13DC0F4", VA = "0x13DC0F4", Slot = "5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0x13DC0FC", Offset = "0x13DC0FC", VA = "0x13DC0FC")]
		public UnityXRModule()
		{
		}
	}
	[Token(Token = "0x200012A")]
	public sealed class WaveVRModule : VRModule.ModuleBase
	{
		[Token(Token = "0x20004CA")]
		private class CameraCreator : VRCameraHook.CameraCreator
		{
			[Token(Token = "0x17000427")]
			public override bool shouldActive
			{
				[Token(Token = "0x6002363")]
				[Address(RVA = "0xD08138", Offset = "0xD08138", VA = "0xD08138", Slot = "4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002364")]
			[Address(RVA = "0xD081E4", Offset = "0xD081E4", VA = "0xD081E4", Slot = "5")]
			public override void CreateCamera(VRCameraHook hook)
			{
			}

			[Token(Token = "0x6002365")]
			[Address(RVA = "0xD0842C", Offset = "0xD0842C", VA = "0xD0842C")]
			public CameraCreator()
			{
			}
		}

		[Token(Token = "0x20004CB")]
		private class RenderModelCreator : RenderModelHook.RenderModelCreator
		{
			[Token(Token = "0x4001E27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private uint m_index;

			[Token(Token = "0x4001E28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private GameObject m_model;

			[Token(Token = "0x4001E29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private WVR_DeviceType m_loadedHandType;

			[Token(Token = "0x17000428")]
			public override bool shouldActive
			{
				[Token(Token = "0x6002366")]
				[Address(RVA = "0xD08434", Offset = "0xD08434", VA = "0xD08434", Slot = "4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002367")]
			[Address(RVA = "0xD084E0", Offset = "0xD084E0", VA = "0xD084E0", Slot = "5")]
			public override void UpdateRenderModel()
			{
			}

			[Token(Token = "0x6002368")]
			[Address(RVA = "0xD09124", Offset = "0xD09124", VA = "0xD09124", Slot = "6")]
			public override void CleanUpRenderModel()
			{
			}

			[Token(Token = "0x6002369")]
			[Address(RVA = "0xD08E24", Offset = "0xD08E24", VA = "0xD08E24")]
			private Transform FindWaveVRControllerActionsObjInChildren()
			{
				return null;
			}

			[Token(Token = "0x600236A")]
			[Address(RVA = "0xD091D0", Offset = "0xD091D0", VA = "0xD091D0")]
			public RenderModelCreator()
			{
			}
		}

		[Token(Token = "0x20004CC")]
		private enum Simulate6DoFControllerMode
		{
			[Token(Token = "0x4001E2B")]
			KeyboardWASD,
			[Token(Token = "0x4001E2C")]
			KeyboardModifierTrackpad
		}

		[Token(Token = "0x400091C")]
		private const uint DEVICE_COUNT = 3u;

		[Token(Token = "0x400091D")]
		private const uint HEAD_INDEX = 0u;

		[Token(Token = "0x400091E")]
		private const uint RIGHT_INDEX = 1u;

		[Token(Token = "0x400091F")]
		private const uint LEFT_INDEX = 2u;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Vector3 RIGHT_ARM_MULTIPLIER;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static readonly Vector3 LEFT_ARM_MULTIPLIER;

		[Token(Token = "0x4000922")]
		public const float DEFAULT_ELBOW_BEND_RATIO = 0.6f;

		[Token(Token = "0x4000923")]
		public const float MIN_EXTENSION_ANGLE = 7f;

		[Token(Token = "0x4000924")]
		public const float MAX_EXTENSION_ANGLE = 60f;

		[Token(Token = "0x4000925")]
		public const float EXTENSION_WEIGHT = 0.4f;

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static WaveVRModule s_moduleInstance;

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly WVR_DeviceType[] s_index2type;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static readonly uint[] s_type2index;

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static readonly VRModuleDeviceClass[] s_type2class;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly VRModuleDeviceModel[] s_type2model;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly bool[] m_index2deviceTouched;

		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IVRModuleDeviceStateRW m_headState;

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IVRModuleDeviceStateRW m_rightState;

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IVRModuleDeviceStateRW m_leftState;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WaveVR_ControllerLoader.ControllerHand[] m_deviceHands;

		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static Simulate6DoFControllerMode s_simulationMode;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static Vector3[] s_simulatedCtrlPosArray;

		[Token(Token = "0x170000DC")]
		public override int moduleOrder
		{
			[Token(Token = "0x6000A33")]
			[Address(RVA = "0xD03244", Offset = "0xD03244", VA = "0xD03244", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000DD")]
		public override int moduleIndex
		{
			[Token(Token = "0x6000A34")]
			[Address(RVA = "0xD0324C", Offset = "0xD0324C", VA = "0xD0324C", Slot = "5")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0xD03254", Offset = "0xD03254", VA = "0xD03254")]
		static WaveVRModule()
		{
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0xD038A4", Offset = "0xD038A4", VA = "0xD038A4", Slot = "6")]
		public override bool ShouldActiveModule()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0xD03904", Offset = "0xD03904", VA = "0xD03904", Slot = "7")]
		public override void OnActivated()
		{
		}

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0xD03D98", Offset = "0xD03D98", VA = "0xD03D98", Slot = "8")]
		public override void OnDeactivated()
		{
		}

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0xD03EBC", Offset = "0xD03EBC", VA = "0xD03EBC", Slot = "12")]
		public override void UpdateTrackingSpaceType()
		{
		}

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0xD040A8", Offset = "0xD040A8", VA = "0xD040A8", Slot = "13")]
		public override void Update()
		{
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0xD040F4", Offset = "0xD040F4", VA = "0xD040F4")]
		private WaveVR_Controller.Device GetWVRControllerDevice(WVR_DeviceType deviceType)
		{
			return null;
		}

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0xD05044", Offset = "0xD05044", VA = "0xD05044")]
		private WaveVR.Device GetWVRDevice(WVR_DeviceType deviceType)
		{
			return null;
		}

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0xD041F4", Offset = "0xD041F4", VA = "0xD041F4")]
		private void UpdateDeviceInput(uint deviceIndex, WaveVR_Controller.Device deviceInput)
		{
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0xD051D4", Offset = "0xD051D4", VA = "0xD051D4")]
		private IVRModuleDeviceStateRW UpdateDevicePose(uint deviceIndex, WaveVR.Device content)
		{
			return null;
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0xD05C9C", Offset = "0xD05C9C", VA = "0xD05C9C")]
		private void OnNewPoses(params object[] args)
		{
		}

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0xD07198", Offset = "0xD07198", VA = "0xD07198", Slot = "11")]
		public override uint GetRightControllerDeviceIndex()
		{
			return default(uint);
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0xD071A0", Offset = "0xD071A0", VA = "0xD071A0", Slot = "10")]
		public override uint GetLeftControllerDeviceIndex()
		{
			return default(uint);
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0xD071A8", Offset = "0xD071A8", VA = "0xD071A8")]
		private bool TryGetAndTouchDeviceIndexByType(WVR_DeviceType type, out uint deviceIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0xD07328", Offset = "0xD07328", VA = "0xD07328")]
		private int ResetAndDisconnectUntouchedDevices()
		{
			return default(int);
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0xD03E84", Offset = "0xD03E84", VA = "0xD03E84")]
		private void ResetTouchState()
		{
		}

		[Token(Token = "0x6000A45")]
		[Address(RVA = "0xD05F48", Offset = "0xD05F48", VA = "0xD05F48")]
		private void ApplyVirtualArmAndSimulateInput(IVRModuleDeviceStateRW ctrlState, IVRModuleDeviceStateRW headState, Vector3 handSideMultiplier)
		{
		}

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0xD0753C", Offset = "0xD0753C", VA = "0xD0753C")]
		private static RigidPose GetNeckPose(RigidPose headPose)
		{
			return default(RigidPose);
		}

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0xD07B60", Offset = "0xD07B60", VA = "0xD07B60")]
		private static float GetExtensionRatio(Vector3 v)
		{
			return default(float);
		}

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0xD07C48", Offset = "0xD07C48", VA = "0xD07C48")]
		private static Quaternion GetLerpRotation(Quaternion xyRotation, float extensionRatio)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0xD07700", Offset = "0xD07700", VA = "0xD07700")]
		private static Vector3 GetControllerPositionWithVirtualArm(RigidPose neckPose, Quaternion ctrlRot, Vector3 sideMultiplier)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0xD07D94", Offset = "0xD07D94", VA = "0xD07D94", Slot = "18")]
		public override void TriggerViveControllerHaptic(uint deviceIndex, ushort durationMicroSec = 500)
		{
		}

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0xD07E8C", Offset = "0xD07E8C", VA = "0xD07E8C", Slot = "19")]
		public override void TriggerHapticVibration(uint deviceIndex, float durationSeconds = 0.01f, float frequency = 85f, float amplitude = 0.125f, float startSecondsFromNow = 0f)
		{
		}

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0xD080A0", Offset = "0xD080A0", VA = "0xD080A0")]
		public WaveVRModule()
		{
		}
	}
	[Token(Token = "0x200012B")]
	public enum VRModuleTrackingSpaceType
	{
		[Token(Token = "0x4000933")]
		Stationary,
		[Token(Token = "0x4000934")]
		RoomScale
	}
	[Token(Token = "0x200012C")]
	public enum VRModuleSelectEnum
	{
		[Token(Token = "0x4000936")]
		Auto = -1,
		[Token(Token = "0x4000937")]
		None,
		[Token(Token = "0x4000938")]
		Simulator,
		[Token(Token = "0x4000939")]
		UnityNativeVR,
		[Token(Token = "0x400093A")]
		SteamVR,
		[Token(Token = "0x400093B")]
		OculusVR,
		[Token(Token = "0x400093C")]
		DayDream,
		[Token(Token = "0x400093D")]
		WaveVR,
		[Token(Token = "0x400093E")]
		UnityXR
	}
	[Token(Token = "0x200012D")]
	public enum VRModuleActiveEnum
	{
		[Token(Token = "0x4000940")]
		Uninitialized = -1,
		[Token(Token = "0x4000941")]
		None,
		[Token(Token = "0x4000942")]
		Simulator,
		[Token(Token = "0x4000943")]
		UnityNativeVR,
		[Token(Token = "0x4000944")]
		SteamVR,
		[Token(Token = "0x4000945")]
		OculusVR,
		[Token(Token = "0x4000946")]
		DayDream,
		[Token(Token = "0x4000947")]
		WaveVR,
		[Token(Token = "0x4000948")]
		UnityXR
	}
	[Token(Token = "0x200012E")]
	public enum VRModuleDeviceClass
	{
		[Token(Token = "0x400094A")]
		Invalid,
		[Token(Token = "0x400094B")]
		HMD,
		[Token(Token = "0x400094C")]
		Controller,
		[Token(Token = "0x400094D")]
		GenericTracker,
		[Token(Token = "0x400094E")]
		TrackingReference
	}
	[Token(Token = "0x200012F")]
	public enum VRModuleDeviceModel
	{
		[Token(Token = "0x4000950")]
		Unknown = 0,
		[Token(Token = "0x4000951")]
		ViveHMD = 1,
		[Token(Token = "0x4000952")]
		ViveController = 2,
		[Token(Token = "0x4000953")]
		ViveTracker = 3,
		[Token(Token = "0x4000954")]
		ViveBaseStation = 4,
		[Token(Token = "0x4000955")]
		OculusHMD = 5,
		[Token(Token = "0x4000956")]
		OculusTouchLeft = 6,
		[Token(Token = "0x4000957")]
		OculusTouchRight = 7,
		[Token(Token = "0x4000958")]
		OculusSensor = 8,
		[Token(Token = "0x4000959")]
		KnucklesLeft = 9,
		[Token(Token = "0x400095A")]
		KnucklesRight = 10,
		[Token(Token = "0x400095B")]
		DaydreamHMD = 11,
		[Token(Token = "0x400095C")]
		DaydreamController = 12,
		[Token(Token = "0x400095D")]
		ViveFocusHMD = 13,
		[Token(Token = "0x400095E")]
		ViveFocusFinch = 14,
		[Token(Token = "0x400095F")]
		ViveFocusChirp = 15,
		[Token(Token = "0x4000960")]
		OculusGoController = 16,
		[Token(Token = "0x4000961")]
		OculusGearVrController = 17,
		[Token(Token = "0x4000962")]
		WMRHMD = 18,
		[Token(Token = "0x4000963")]
		WMRControllerLeft = 19,
		[Token(Token = "0x4000964")]
		WMRControllerRight = 20,
		[Token(Token = "0x4000965")]
		ViveCosmosControllerLeft = 21,
		[Token(Token = "0x4000966")]
		ViveCosmosControllerRight = 22,
		[Token(Token = "0x4000967")]
		OculusQuestControllerLeft = 23,
		[Token(Token = "0x4000968")]
		OculusQuestControllerRight = 24,
		[Token(Token = "0x4000969")]
		OculusQuestOrRiftSControllerLeft = 23,
		[Token(Token = "0x400096A")]
		OculusQuestOrRiftSControllerRight = 24,
		[Token(Token = "0x400096B")]
		IndexHMD = 25,
		[Token(Token = "0x400096C")]
		IndexControllerLeft = 26,
		[Token(Token = "0x400096D")]
		IndexControllerRight = 27,
		[Token(Token = "0x400096E")]
		MagicLeapHMD = 28,
		[Token(Token = "0x400096F")]
		MagicLeapController = 29
	}
	[Token(Token = "0x2000130")]
	public enum VRModuleRawButton
	{
		[Token(Token = "0x4000971")]
		System = 0,
		[Token(Token = "0x4000972")]
		ApplicationMenu = 1,
		[Token(Token = "0x4000973")]
		Grip = 2,
		[Token(Token = "0x4000974")]
		DPadLeft = 3,
		[Token(Token = "0x4000975")]
		DPadUp = 4,
		[Token(Token = "0x4000976")]
		DPadRight = 5,
		[Token(Token = "0x4000977")]
		DPadDown = 6,
		[Token(Token = "0x4000978")]
		A = 7,
		[Token(Token = "0x4000979")]
		ProximitySensor = 31,
		[Token(Token = "0x400097A")]
		DashboardBack = 2,
		[Token(Token = "0x400097B")]
		Touchpad = 32,
		[Token(Token = "0x400097C")]
		Trigger = 33,
		[Token(Token = "0x400097D")]
		CapSenseGrip = 34,
		[Token(Token = "0x400097E")]
		Bumper = 35,
		[Token(Token = "0x400097F")]
		Axis0 = 32,
		[Token(Token = "0x4000980")]
		Axis1 = 33,
		[Token(Token = "0x4000981")]
		Axis2 = 34,
		[Token(Token = "0x4000982")]
		Axis3 = 35,
		[Token(Token = "0x4000983")]
		Axis4 = 36
	}
	[Token(Token = "0x2000131")]
	public enum VRModuleRawAxis
	{
		[Token(Token = "0x4000985")]
		TouchpadX = 0,
		[Token(Token = "0x4000986")]
		TouchpadY = 1,
		[Token(Token = "0x4000987")]
		Trigger = 2,
		[Token(Token = "0x4000988")]
		CapSenseGrip = 4,
		[Token(Token = "0x4000989")]
		IndexCurl = 6,
		[Token(Token = "0x400098A")]
		MiddleCurl = 7,
		[Token(Token = "0x400098B")]
		RingCurl = 8,
		[Token(Token = "0x400098C")]
		PinkyCurl = 9,
		[Token(Token = "0x400098D")]
		JoystickX = 4,
		[Token(Token = "0x400098E")]
		JoystickY = 5,
		[Token(Token = "0x400098F")]
		Axis0X = 0,
		[Token(Token = "0x4000990")]
		Axis0Y = 1,
		[Token(Token = "0x4000991")]
		Axis1X = 2,
		[Token(Token = "0x4000992")]
		Axis1Y = 3,
		[Token(Token = "0x4000993")]
		Axis2X = 4,
		[Token(Token = "0x4000994")]
		Axis2Y = 5,
		[Token(Token = "0x4000995")]
		Axis3X = 6,
		[Token(Token = "0x4000996")]
		Axis3Y = 7,
		[Token(Token = "0x4000997")]
		Axis4X = 8,
		[Token(Token = "0x4000998")]
		Axis4Y = 9
	}
	[Token(Token = "0x2000132")]
	public enum VRModuleInput2DType
	{
		[Token(Token = "0x400099A")]
		None = 0,
		[Token(Token = "0x400099B")]
		Unknown = 1,
		[Token(Token = "0x400099C")]
		TouchpadOnly = 2,
		[Token(Token = "0x400099D")]
		ThumbstickOnly = 3,
		[Token(Token = "0x400099E")]
		Both = 4,
		[Token(Token = "0x400099F")]
		TrackpadOnly = 2,
		[Token(Token = "0x40009A0")]
		JoystickOnly = 3
	}
	[Token(Token = "0x2000133")]
	public interface IVRModuleDeviceStateRW
	{
		[Token(Token = "0x170000DE")]
		uint deviceIndex
		{
			[Token(Token = "0x6000A4D")]
			get;
		}

		[Token(Token = "0x170000DF")]
		string serialNumber
		{
			[Token(Token = "0x6000A4E")]
			get;
			[Token(Token = "0x6000A4F")]
			set;
		}

		[Token(Token = "0x170000E0")]
		string modelNumber
		{
			[Token(Token = "0x6000A50")]
			get;
			[Token(Token = "0x6000A51")]
			set;
		}

		[Token(Token = "0x170000E1")]
		string renderModelName
		{
			[Token(Token = "0x6000A52")]
			get;
			[Token(Token = "0x6000A53")]
			set;
		}

		[Token(Token = "0x170000E2")]
		VRModuleDeviceClass deviceClass
		{
			[Token(Token = "0x6000A54")]
			get;
			[Token(Token = "0x6000A55")]
			set;
		}

		[Token(Token = "0x170000E3")]
		VRModuleDeviceModel deviceModel
		{
			[Token(Token = "0x6000A56")]
			get;
			[Token(Token = "0x6000A57")]
			set;
		}

		[Token(Token = "0x170000E4")]
		VRModuleInput2DType input2DType
		{
			[Token(Token = "0x6000A58")]
			get;
			[Token(Token = "0x6000A59")]
			set;
		}

		[Token(Token = "0x170000E5")]
		bool isConnected
		{
			[Token(Token = "0x6000A5A")]
			get;
			[Token(Token = "0x6000A5B")]
			set;
		}

		[Token(Token = "0x170000E6")]
		bool isPoseValid
		{
			[Token(Token = "0x6000A5C")]
			get;
			[Token(Token = "0x6000A5D")]
			set;
		}

		[Token(Token = "0x170000E7")]
		bool isOutOfRange
		{
			[Token(Token = "0x6000A5E")]
			get;
			[Token(Token = "0x6000A5F")]
			set;
		}

		[Token(Token = "0x170000E8")]
		bool isCalibrating
		{
			[Token(Token = "0x6000A60")]
			get;
			[Token(Token = "0x6000A61")]
			set;
		}

		[Token(Token = "0x170000E9")]
		bool isUninitialized
		{
			[Token(Token = "0x6000A62")]
			get;
			[Token(Token = "0x6000A63")]
			set;
		}

		[Token(Token = "0x170000EA")]
		Vector3 velocity
		{
			[Token(Token = "0x6000A64")]
			get;
			[Token(Token = "0x6000A65")]
			set;
		}

		[Token(Token = "0x170000EB")]
		Vector3 angularVelocity
		{
			[Token(Token = "0x6000A66")]
			get;
			[Token(Token = "0x6000A67")]
			set;
		}

		[Token(Token = "0x170000EC")]
		Vector3 position
		{
			[Token(Token = "0x6000A68")]
			get;
			[Token(Token = "0x6000A69")]
			set;
		}

		[Token(Token = "0x170000ED")]
		Quaternion rotation
		{
			[Token(Token = "0x6000A6A")]
			get;
			[Token(Token = "0x6000A6B")]
			set;
		}

		[Token(Token = "0x170000EE")]
		RigidPose pose
		{
			[Token(Token = "0x6000A6C")]
			get;
			[Token(Token = "0x6000A6D")]
			set;
		}

		[Token(Token = "0x170000EF")]
		ulong buttonPressed
		{
			[Token(Token = "0x6000A6E")]
			get;
			[Token(Token = "0x6000A6F")]
			set;
		}

		[Token(Token = "0x170000F0")]
		ulong buttonTouched
		{
			[Token(Token = "0x6000A70")]
			get;
			[Token(Token = "0x6000A71")]
			set;
		}

		[Token(Token = "0x170000F1")]
		float[] axisValue
		{
			[Token(Token = "0x6000A72")]
			get;
		}

		[Token(Token = "0x6000A73")]
		bool GetButtonPress(VRModuleRawButton button);

		[Token(Token = "0x6000A74")]
		bool GetButtonTouch(VRModuleRawButton button);

		[Token(Token = "0x6000A75")]
		float GetAxisValue(VRModuleRawAxis axis);

		[Token(Token = "0x6000A76")]
		void SetButtonPress(VRModuleRawButton button, bool value);

		[Token(Token = "0x6000A77")]
		void SetButtonTouch(VRModuleRawButton button, bool value);

		[Token(Token = "0x6000A78")]
		void SetAxisValue(VRModuleRawAxis axis, float value);

		[Token(Token = "0x6000A79")]
		void ResetAxisValues();

		[Token(Token = "0x6000A7A")]
		void Reset();
	}
	[Token(Token = "0x2000134")]
	public interface IVRModuleDeviceState
	{
		[Token(Token = "0x170000F2")]
		uint deviceIndex
		{
			[Token(Token = "0x6000A7B")]
			get;
		}

		[Token(Token = "0x170000F3")]
		string serialNumber
		{
			[Token(Token = "0x6000A7C")]
			get;
		}

		[Token(Token = "0x170000F4")]
		string modelNumber
		{
			[Token(Token = "0x6000A7D")]
			get;
		}

		[Token(Token = "0x170000F5")]
		string renderModelName
		{
			[Token(Token = "0x6000A7E")]
			get;
		}

		[Token(Token = "0x170000F6")]
		VRModuleDeviceClass deviceClass
		{
			[Token(Token = "0x6000A7F")]
			get;
		}

		[Token(Token = "0x170000F7")]
		VRModuleDeviceModel deviceModel
		{
			[Token(Token = "0x6000A80")]
			get;
		}

		[Token(Token = "0x170000F8")]
		VRModuleInput2DType input2DType
		{
			[Token(Token = "0x6000A81")]
			get;
		}

		[Token(Token = "0x170000F9")]
		bool isConnected
		{
			[Token(Token = "0x6000A82")]
			get;
		}

		[Token(Token = "0x170000FA")]
		bool isPoseValid
		{
			[Token(Token = "0x6000A83")]
			get;
		}

		[Token(Token = "0x170000FB")]
		bool isOutOfRange
		{
			[Token(Token = "0x6000A84")]
			get;
		}

		[Token(Token = "0x170000FC")]
		bool isCalibrating
		{
			[Token(Token = "0x6000A85")]
			get;
		}

		[Token(Token = "0x170000FD")]
		bool isUninitialized
		{
			[Token(Token = "0x6000A86")]
			get;
		}

		[Token(Token = "0x170000FE")]
		Vector3 velocity
		{
			[Token(Token = "0x6000A87")]
			get;
		}

		[Token(Token = "0x170000FF")]
		Vector3 angularVelocity
		{
			[Token(Token = "0x6000A88")]
			get;
		}

		[Token(Token = "0x17000100")]
		Vector3 position
		{
			[Token(Token = "0x6000A89")]
			get;
		}

		[Token(Token = "0x17000101")]
		Quaternion rotation
		{
			[Token(Token = "0x6000A8A")]
			get;
		}

		[Token(Token = "0x17000102")]
		RigidPose pose
		{
			[Token(Token = "0x6000A8B")]
			get;
		}

		[Token(Token = "0x17000103")]
		ulong buttonPressed
		{
			[Token(Token = "0x6000A8C")]
			get;
		}

		[Token(Token = "0x17000104")]
		ulong buttonTouched
		{
			[Token(Token = "0x6000A8D")]
			get;
		}

		[Token(Token = "0x6000A8E")]
		bool GetButtonPress(VRModuleRawButton button);

		[Token(Token = "0x6000A8F")]
		bool GetButtonTouch(VRModuleRawButton button);

		[Token(Token = "0x6000A90")]
		float GetAxisValue(VRModuleRawAxis axis);
	}
}
namespace HTC.UnityPlugin.Vive
{
	[Token(Token = "0x2000135")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x925904", Offset = "0x925904")]
	public class BasicGrabbable : GrabbableBase<BasicGrabbable.Grabber>, IColliderEventDragStartHandler, IEventSystemHandler, IColliderEventDragFixedUpdateHandler, IColliderEventDragUpdateHandler, IColliderEventDragEndHandler
	{
		[Serializable]
		[Token(Token = "0x20004CD")]
		public class UnityEventGrabbable : UnityEvent<BasicGrabbable>
		{
			[Token(Token = "0x600236B")]
			[Address(RVA = "0xD0A2B0", Offset = "0xD0A2B0", VA = "0xD0A2B0")]
			public UnityEventGrabbable()
			{
			}
		}

		[Token(Token = "0x20004CE")]
		public class Grabber : IGrabber
		{
			[Serializable]
			[Token(Token = "0x200063C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x928150", Offset = "0x928150")]
			private sealed class <>c
			{
				[Token(Token = "0x4002277")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public static readonly <>c <>9;

				[Token(Token = "0x4002278")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public static Func<Grabber> <>9__1_0;

				[Token(Token = "0x6002843")]
				[Address(RVA = "0xD0A4B4", Offset = "0xD0A4B4", VA = "0xD0A4B4")]
				public <>c()
				{
				}

				[Token(Token = "0x6002844")]
				[Address(RVA = "0xD0A4BC", Offset = "0xD0A4BC", VA = "0xD0A4BC")]
				internal Grabber <Get>b__1_0()
				{
					return null;
				}
			}

			[Token(Token = "0x4001E2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static ObjectPool<Grabber> m_pool;

			[Token(Token = "0x4001E2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938138", Offset = "0x938138")]
			private ColliderButtonEventData <eventData>k__BackingField;

			[Token(Token = "0x4001E2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938148", Offset = "0x938148")]
			private RigidPose <grabOffset>k__BackingField;

			[Token(Token = "0x17000429")]
			public ColliderButtonEventData eventData
			{
				[Token(Token = "0x600236E")]
				[Address(RVA = "0xD0933C", Offset = "0xD0933C", VA = "0xD0933C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F03C", Offset = "0x93F03C")]
				get
				{
					return null;
				}
				[Token(Token = "0x600236F")]
				[Address(RVA = "0xD0A42C", Offset = "0xD0A42C", VA = "0xD0A42C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F04C", Offset = "0x93F04C")]
				private set
				{
				}
			}

			[Token(Token = "0x1700042A")]
			public RigidPose grabberOrigin
			{
				[Token(Token = "0x6002370")]
				[Address(RVA = "0xD09E90", Offset = "0xD09E90", VA = "0xD09E90", Slot = "4")]
				get
				{
					return default(RigidPose);
				}
			}

			[Token(Token = "0x1700042B")]
			public RigidPose grabOffset
			{
				[Token(Token = "0x6002371")]
				[Address(RVA = "0xD0A434", Offset = "0xD0A434", VA = "0xD0A434", Slot = "5")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F05C", Offset = "0x93F05C")]
				get
				{
					return default(RigidPose);
				}
				[Token(Token = "0x6002372")]
				[Address(RVA = "0xD09F84", Offset = "0xD09F84", VA = "0xD09F84")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F06C", Offset = "0x93F06C")]
				set
				{
				}
			}

			[Token(Token = "0x600236C")]
			[Address(RVA = "0xD09D20", Offset = "0xD09D20", VA = "0xD09D20")]
			public static Grabber Get(ColliderButtonEventData eventData)
			{
				return null;
			}

			[Token(Token = "0x600236D")]
			[Address(RVA = "0xD099B0", Offset = "0xD099B0", VA = "0xD099B0")]
			public static void Release(Grabber grabber)
			{
			}

			[Token(Token = "0x6002373")]
			[Address(RVA = "0xD0A448", Offset = "0xD0A448", VA = "0xD0A448")]
			public Grabber()
			{
			}
		}

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private IndexedTable<ColliderButtonEventData, Grabber> m_eventGrabberSet;

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool alignPosition;

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		public bool alignRotation;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public Vector3 alignPositionOffset;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Vector3 alignRotationOffset;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x92A378", Offset = "0x92A378")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x92A378", Offset = "0x92A378")]
		[SerializeField]
		private float m_followingDuration;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x92A3E0", Offset = "0x92A3E0")]
		[SerializeField]
		private bool m_overrideMaxAngularVelocity;

		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x92A42C", Offset = "0x92A42C")]
		[SerializeField]
		private bool m_unblockableGrab;

		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[AttributeAttribute(Name = "FlagsFromEnumAttribute", RVA = "0x92A478", Offset = "0x92A478")]
		private ulong m_primaryGrabButton;

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[AttributeAttribute(Name = "FlagsFromEnumAttribute", RVA = "0x92A4EC", Offset = "0x92A4EC")]
		private uint m_secondaryGrabButton;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		[HideInInspector]
		private ColliderButtonEventData.InputButton m_grabButton;

		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private bool m_allowMultipleGrabbers;

		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x92A5A8", Offset = "0x92A5A8")]
		[SerializeField]
		private UnityEventGrabbable m_afterGrabbed;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x92A5F4", Offset = "0x92A5F4")]
		[SerializeField]
		private UnityEventGrabbable m_beforeRelease;

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x92A640", Offset = "0x92A640")]
		[SerializeField]
		private UnityEventGrabbable m_onDrop;

		[Token(Token = "0x17000105")]
		public override float followingDuration
		{
			[Token(Token = "0x6000A91")]
			[Address(RVA = "0xD091E8", Offset = "0xD091E8", VA = "0xD091E8", Slot = "6")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A92")]
			[Address(RVA = "0xD091F0", Offset = "0xD091F0", VA = "0xD091F0", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000106")]
		public override bool overrideMaxAngularVelocity
		{
			[Token(Token = "0x6000A93")]
			[Address(RVA = "0xD09278", Offset = "0xD09278", VA = "0xD09278", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A94")]
			[Address(RVA = "0xD09280", Offset = "0xD09280", VA = "0xD09280", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000107")]
		public bool unblockableGrab
		{
			[Token(Token = "0x6000A95")]
			[Address(RVA = "0xD0928C", Offset = "0xD0928C", VA = "0xD0928C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A96")]
			[Address(RVA = "0xD09294", Offset = "0xD09294", VA = "0xD09294")]
			set
			{
			}
		}

		[Token(Token = "0x17000108")]
		public UnityEventGrabbable afterGrabbed
		{
			[Token(Token = "0x6000A97")]
			[Address(RVA = "0xD092A0", Offset = "0xD092A0", VA = "0xD092A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000109")]
		public UnityEventGrabbable beforeRelease
		{
			[Token(Token = "0x6000A98")]
			[Address(RVA = "0xD092A8", Offset = "0xD092A8", VA = "0xD092A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010A")]
		public UnityEventGrabbable onDrop
		{
			[Token(Token = "0x6000A99")]
			[Address(RVA = "0xD092B0", Offset = "0xD092B0", VA = "0xD092B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010B")]
		public ColliderButtonEventData grabbedEvent
		{
			[Token(Token = "0x6000A9A")]
			[Address(RVA = "0xD092B8", Offset = "0xD092B8", VA = "0xD092B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010C")]
		public ulong primaryGrabButton
		{
			[Token(Token = "0x6000A9B")]
			[Address(RVA = "0xD09344", Offset = "0xD09344", VA = "0xD09344")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6000A9C")]
			[Address(RVA = "0xD0934C", Offset = "0xD0934C", VA = "0xD0934C")]
			set
			{
			}
		}

		[Token(Token = "0x1700010D")]
		public uint secondaryGrabButton
		{
			[Token(Token = "0x6000A9D")]
			[Address(RVA = "0xD09354", Offset = "0xD09354", VA = "0xD09354")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6000A9E")]
			[Address(RVA = "0xD0935C", Offset = "0xD0935C", VA = "0xD0935C")]
			set
			{
			}
		}

		[Token(Token = "0x1700010E")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x940E58", Offset = "0x940E58")]
		public ColliderButtonEventData.InputButton grabButton
		{
			[Token(Token = "0x6000A9F")]
			[Address(RVA = "0xD09364", Offset = "0xD09364", VA = "0xD09364")]
			get
			{
				return default(ColliderButtonEventData.InputButton);
			}
			[Token(Token = "0x6000AA0")]
			[Address(RVA = "0xD09388", Offset = "0xD09388", VA = "0xD09388")]
			set
			{
			}
		}

		[Token(Token = "0x1700010F")]
		private bool moveByVelocity
		{
			[Token(Token = "0x6000AA1")]
			[Address(RVA = "0xD0939C", Offset = "0xD0939C", VA = "0xD0939C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000110")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x940E90", Offset = "0x940E90")]
		public Rigidbody rigid
		{
			[Token(Token = "0x6000AA8")]
			[Address(RVA = "0xD09680", Offset = "0xD09680", VA = "0xD09680")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AA9")]
			[Address(RVA = "0xD096D0", Offset = "0xD096D0", VA = "0xD096D0")]
			set
			{
			}
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0xD09470", Offset = "0xD09470", VA = "0xD09470")]
		public bool IsPrimeryGrabButtonOn(ControllerButton btn)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0xD094EC", Offset = "0xD094EC", VA = "0xD094EC")]
		public void SetPrimeryGrabButton(ControllerButton btn, bool isOn = true)
		{
		}

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0xD09570", Offset = "0xD09570", VA = "0xD09570")]
		public void ClearPrimeryGrabButton()
		{
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0xD09578", Offset = "0xD09578", VA = "0xD09578")]
		public bool IsSecondaryGrabButtonOn(ColliderButtonEventData.InputButton btn)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0xD095F4", Offset = "0xD095F4", VA = "0xD095F4")]
		public void SetSecondaryGrabButton(ColliderButtonEventData.InputButton btn, bool isOn = true)
		{
		}

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0xD09678", Offset = "0xD09678", VA = "0xD09678")]
		public void ClearSecondaryGrabButton()
		{
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0xD09730", Offset = "0xD09730", VA = "0xD09730")]
		private void RestoreObsoleteGrabButton()
		{
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0xD09768", Offset = "0xD09768", VA = "0xD09768", Slot = "10")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0xD09898", Offset = "0xD09898", VA = "0xD09898", Slot = "16")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0xD098F4", Offset = "0xD098F4", VA = "0xD098F4")]
		private void ClearEventGrabberSet()
		{
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0xD09A34", Offset = "0xD09A34", VA = "0xD09A34")]
		protected bool IsValidGrabButton(ColliderButtonEventData eventData)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0xD09AE8", Offset = "0xD09AE8", VA = "0xD09AE8", Slot = "17")]
		public virtual void OnColliderEventDragStart(ColliderButtonEventData eventData)
		{
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0xD09FA0", Offset = "0xD09FA0", VA = "0xD09FA0", Slot = "18")]
		public virtual void OnColliderEventDragFixedUpdate(ColliderButtonEventData eventData)
		{
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0xD0A05C", Offset = "0xD0A05C", VA = "0xD0A05C", Slot = "19")]
		public virtual void OnColliderEventDragUpdate(ColliderButtonEventData eventData)
		{
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0xD0A138", Offset = "0xD0A138", VA = "0xD0A138", Slot = "20")]
		public virtual void OnColliderEventDragEnd(ColliderButtonEventData eventData)
		{
		}

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0xD0A1F4", Offset = "0xD0A1F4", VA = "0xD0A1F4")]
		public BasicGrabbable()
		{
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0xD0A300", Offset = "0xD0A300", VA = "0xD0A300")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939BD0", Offset = "0x939BD0")]
		private void <Awake>b__55_0()
		{
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0xD0A364", Offset = "0xD0A364", VA = "0xD0A364")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939BE0", Offset = "0x939BE0")]
		private void <Awake>b__55_1()
		{
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0xD0A3C8", Offset = "0xD0A3C8", VA = "0xD0A3C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939BF0", Offset = "0x939BF0")]
		private void <Awake>b__55_2()
		{
		}
	}
	[Token(Token = "0x2000136")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x925940", Offset = "0x925940")]
	[DisallowMultipleComponent]
	public class ExternalCameraHook : SingletonBehaviour<ExternalCameraHook>, INewPoseListener, IViveRoleComponent
	{
		[Token(Token = "0x40009B0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92A68C", Offset = "0x92A68C")]
		public const string AUTO_LOAD_CONFIG_PATH = "externalcamera.cfg";

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ViveRoleProperty m_viveRole;

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_origin;

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string m_configPath;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_quadViewSwitch;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool m_configInterfaceSwitch;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject m_configUI;

		[Token(Token = "0x17000111")]
		public ViveRoleProperty viveRole
		{
			[Token(Token = "0x6000AB7")]
			[Address(RVA = "0xD155DC", Offset = "0xD155DC", VA = "0xD155DC", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000112")]
		public Transform origin
		{
			[Token(Token = "0x6000AB8")]
			[Address(RVA = "0xD15A6C", Offset = "0xD15A6C", VA = "0xD15A6C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AB9")]
			[Address(RVA = "0xD15A7C", Offset = "0xD15A7C", VA = "0xD15A7C")]
			set
			{
			}
		}

		[Token(Token = "0x17000113")]
		public bool isTrackingDevice
		{
			[Token(Token = "0x6000ABA")]
			[Address(RVA = "0xD159C0", Offset = "0xD159C0", VA = "0xD159C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000114")]
		public string configPath
		{
			[Token(Token = "0x6000ABB")]
			[Address(RVA = "0xD15A84", Offset = "0xD15A84", VA = "0xD15A84")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000ABC")]
			[Address(RVA = "0xD15A8C", Offset = "0xD15A8C", VA = "0xD15A8C")]
			set
			{
			}
		}

		[Token(Token = "0x17000115")]
		public bool quadViewEnabled
		{
			[Token(Token = "0x6000ABD")]
			[Address(RVA = "0xD15A94", Offset = "0xD15A94", VA = "0xD15A94")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000ABE")]
			[Address(RVA = "0xD15A9C", Offset = "0xD15A9C", VA = "0xD15A9C")]
			set
			{
			}
		}

		[Token(Token = "0x17000116")]
		public bool configInterfaceEnabled
		{
			[Token(Token = "0x6000ABF")]
			[Address(RVA = "0xD15B20", Offset = "0xD15B20", VA = "0xD15B20")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AC0")]
			[Address(RVA = "0xD15B28", Offset = "0xD15B28", VA = "0xD15B28")]
			set
			{
			}
		}

		[Token(Token = "0x17000117")]
		public bool isQuadViewActive
		{
			[Token(Token = "0x6000AC1")]
			[Address(RVA = "0xD15BA8", Offset = "0xD15BA8", VA = "0xD15BA8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000118")]
		public bool isConfigInterfaceActive
		{
			[Token(Token = "0x6000AC2")]
			[Address(RVA = "0xD15BB0", Offset = "0xD15BB0", VA = "0xD15BB0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0xD15C60", Offset = "0xD15C60", VA = "0xD15C60")]
		static ExternalCameraHook()
		{
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0xD15D00", Offset = "0xD15D00", VA = "0xD15D00")]
		private static GameObject DefaultInitGameObject()
		{
			return null;
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0xD15DFC", Offset = "0xD15DFC", VA = "0xD15DFC", Slot = "11")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0xD15B1C", Offset = "0xD15B1C", VA = "0xD15B1C")]
		private void UpdateActivity()
		{
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0xD15E68", Offset = "0xD15E68", VA = "0xD15E68", Slot = "12")]
		public virtual void BeforeNewPoses()
		{
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0xD15E6C", Offset = "0xD15E6C", VA = "0xD15E6C", Slot = "13")]
		public virtual void OnNewPoses()
		{
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0xD15E70", Offset = "0xD15E70", VA = "0xD15E70", Slot = "14")]
		public virtual void AfterNewPoses()
		{
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0xD15E74", Offset = "0xD15E74", VA = "0xD15E74")]
		public void Recenter()
		{
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0xD15E78", Offset = "0xD15E78", VA = "0xD15E78")]
		public ExternalCameraHook()
		{
		}
	}
	[Token(Token = "0x2000137")]
	public abstract class GrabbableBase<TGrabber> : BasePoseTracker where TGrabber : class, GrabbableBase<TGrabber>.IGrabber
	{
		[Token(Token = "0x20004CF")]
		public interface IGrabber
		{
			[Token(Token = "0x1700042C")]
			RigidPose grabberOrigin
			{
				[Token(Token = "0x6002374")]
				get;
			}

			[Token(Token = "0x1700042D")]
			RigidPose grabOffset
			{
				[Token(Token = "0x6002375")]
				get;
			}
		}

		[Token(Token = "0x20004D0")]
		private struct PoseSample
		{
			[Token(Token = "0x4001E30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float time;

			[Token(Token = "0x4001E31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public RigidPose pose;
		}

		[Token(Token = "0x40009B7")]
		public const float MIN_FOLLOWING_DURATION = 0.02f;

		[Token(Token = "0x40009B8")]
		public const float DEFAULT_FOLLOWING_DURATION = 0.04f;

		[Token(Token = "0x40009B9")]
		public const float MAX_FOLLOWING_DURATION = 0.5f;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Queue<PoseSample> m_poseSamples;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private OrderedIndexedSet<TGrabber> m_grabbers;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool m_grabMutex;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Action m_afterGrabberGrabbed;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Action m_beforeGrabberReleased;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Action m_onGrabberDrop;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92A6F4", Offset = "0x92A6F4")]
		private TGrabber <currentGrabber>k__BackingField;

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92A704", Offset = "0x92A704")]
		private Rigidbody <grabRigidbody>k__BackingField;

		[Token(Token = "0x17000119")]
		public virtual float followingDuration
		{
			[Token(Token = "0x6000ACC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000ACD")]
			set
			{
			}
		}

		[Token(Token = "0x1700011A")]
		public virtual bool overrideMaxAngularVelocity
		{
			[Token(Token = "0x6000ACE")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000ACF")]
			set
			{
			}
		}

		[Token(Token = "0x1700011B")]
		public TGrabber currentGrabber
		{
			[Token(Token = "0x6000AD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939C00", Offset = "0x939C00")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AD1")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939C10", Offset = "0x939C10")]
			private set
			{
			}
		}

		[Token(Token = "0x1700011C")]
		public bool isGrabbed
		{
			[Token(Token = "0x6000AD2")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700011D")]
		public Rigidbody grabRigidbody
		{
			[Token(Token = "0x6000AD3")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939C20", Offset = "0x939C20")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939C30", Offset = "0x939C30")]
			set
			{
			}
		}

		[Token(Token = "0x1400001D")]
		public event Action afterGrabberGrabbed
		{
			[Token(Token = "0x6000AD5")]
			add
			{
			}
			[Token(Token = "0x6000AD6")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001E")]
		public event Action beforeGrabberReleased
		{
			[Token(Token = "0x6000AD7")]
			add
			{
			}
			[Token(Token = "0x6000AD8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001F")]
		public event Action onGrabberDrop
		{
			[Token(Token = "0x6000AD9")]
			add
			{
			}
			[Token(Token = "0x6000ADA")]
			remove
			{
			}
		}

		[Token(Token = "0x6000ADB")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000ADC")]
		protected bool AddGrabber(TGrabber grabber)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ADD")]
		protected bool RemoveGrabber(TGrabber grabber)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ADE")]
		protected void ClearGrabbers(bool doDrop)
		{
		}

		[Token(Token = "0x6000ADF")]
		protected void OnGrabRigidbody()
		{
		}

		[Token(Token = "0x6000AE0")]
		protected virtual void OnGrabTransform()
		{
		}

		[Token(Token = "0x6000AE1")]
		protected void RecordLatestPosesForDrop(float currentTime, float recordLength)
		{
		}

		[Token(Token = "0x6000AE2")]
		private void CheckRecursiveException(string func)
		{
		}

		[Token(Token = "0x6000AE3")]
		protected GrabbableBase()
		{
		}
	}
	[Token(Token = "0x2000138")]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x925990", Offset = "0x925990")]
	public class RenderModelHook : MonoBehaviour, IViveRoleComponent
	{
		[Token(Token = "0x20004D1")]
		[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x9275BC", Offset = "0x9275BC")]
		public class CreatorPriorityAttirbute : Attribute
		{
			[Token(Token = "0x4001E32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938158", Offset = "0x938158")]
			private int <priority>k__BackingField;

			[Token(Token = "0x1700042E")]
			public int priority
			{
				[Token(Token = "0x6002376")]
				[Address(RVA = "0xD194F4", Offset = "0xD194F4", VA = "0xD194F4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F07C", Offset = "0x93F07C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002377")]
				[Address(RVA = "0xD194FC", Offset = "0xD194FC", VA = "0xD194FC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F08C", Offset = "0x93F08C")]
				set
				{
				}
			}

			[Token(Token = "0x6002378")]
			[Address(RVA = "0xD19504", Offset = "0xD19504", VA = "0xD19504")]
			public CreatorPriorityAttirbute(int priority = 0)
			{
			}
		}

		[Token(Token = "0x20004D2")]
		public abstract class RenderModelCreator
		{
			[Token(Token = "0x4001E33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938168", Offset = "0x938168")]
			private RenderModelHook <hook>k__BackingField;

			[Token(Token = "0x1700042F")]
			public abstract bool shouldActive
			{
				[Token(Token = "0x6002379")]
				get;
			}

			[Token(Token = "0x17000430")]
			protected RenderModelHook hook
			{
				[Token(Token = "0x600237A")]
				[Address(RVA = "0xD08DB0", Offset = "0xD08DB0", VA = "0xD08DB0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F09C", Offset = "0x93F09C")]
				get
				{
					return null;
				}
				[Token(Token = "0x600237B")]
				[Address(RVA = "0xD19AFC", Offset = "0xD19AFC", VA = "0xD19AFC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F0AC", Offset = "0x93F0AC")]
				private set
				{
				}
			}

			[Token(Token = "0x600237C")]
			[Address(RVA = "0xD18D24", Offset = "0xD18D24", VA = "0xD18D24")]
			public void Initialize(RenderModelHook hook)
			{
			}

			[Token(Token = "0x600237D")]
			public abstract void UpdateRenderModel();

			[Token(Token = "0x600237E")]
			public abstract void CleanUpRenderModel();

			[Token(Token = "0x600237F")]
			[Address(RVA = "0xD091E0", Offset = "0xD091E0", VA = "0xD091E0")]
			protected RenderModelCreator()
			{
			}
		}

		[Token(Token = "0x20004D3")]
		[AttributeAttribute(Name = "CreatorPriorityAttirbute", RVA = "0x9275D0", Offset = "0x9275D0")]
		public class DefaultRenderModelCreator : RenderModelCreator
		{
			[Token(Token = "0x4001E34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private VRModuleDeviceModel m_loadedModelEnum;

			[Token(Token = "0x4001E35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			protected GameObject m_model;

			[Token(Token = "0x17000431")]
			public override bool shouldActive
			{
				[Token(Token = "0x6002380")]
				[Address(RVA = "0xD19530", Offset = "0xD19530", VA = "0xD19530", Slot = "4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6002381")]
			[Address(RVA = "0xD19538", Offset = "0xD19538", VA = "0xD19538", Slot = "5")]
			public override void UpdateRenderModel()
			{
			}

			[Token(Token = "0x6002382")]
			[Address(RVA = "0xD19A40", Offset = "0xD19A40", VA = "0xD19A40", Slot = "6")]
			public override void CleanUpRenderModel()
			{
			}

			[Token(Token = "0x6002383")]
			[Address(RVA = "0xD19AEC", Offset = "0xD19AEC", VA = "0xD19AEC")]
			public DefaultRenderModelCreator()
			{
			}
		}

		[Token(Token = "0x20004D4")]
		public enum Mode
		{
			[Token(Token = "0x4001E37")]
			Disable,
			[Token(Token = "0x4001E38")]
			ViveRole,
			[Token(Token = "0x4001E39")]
			DeivceIndex
		}

		[Token(Token = "0x20004D5")]
		public enum Index
		{
			[Token(Token = "0x4001E3B")]
			None = -1,
			[Token(Token = "0x4001E3C")]
			Hmd,
			[Token(Token = "0x4001E3D")]
			Device1,
			[Token(Token = "0x4001E3E")]
			Device2,
			[Token(Token = "0x4001E3F")]
			Device3,
			[Token(Token = "0x4001E40")]
			Device4,
			[Token(Token = "0x4001E41")]
			Device5,
			[Token(Token = "0x4001E42")]
			Device6,
			[Token(Token = "0x4001E43")]
			Device7,
			[Token(Token = "0x4001E44")]
			Device8,
			[Token(Token = "0x4001E45")]
			Device9,
			[Token(Token = "0x4001E46")]
			Device10,
			[Token(Token = "0x4001E47")]
			Device11,
			[Token(Token = "0x4001E48")]
			Device12,
			[Token(Token = "0x4001E49")]
			Device13,
			[Token(Token = "0x4001E4A")]
			Device14,
			[Token(Token = "0x4001E4B")]
			Device15
		}

		[Token(Token = "0x20004D6")]
		public enum OverrideModelEnum
		{
			[Token(Token = "0x4001E4D")]
			DontOverride = 0,
			[Token(Token = "0x4001E4E")]
			ViveController = 2,
			[Token(Token = "0x4001E4F")]
			ViveTracker = 3,
			[Token(Token = "0x4001E50")]
			ViveBaseStation = 4,
			[Token(Token = "0x4001E51")]
			OculusTouchLeft = 6,
			[Token(Token = "0x4001E52")]
			OculusTouchRight = 7,
			[Token(Token = "0x4001E53")]
			OculusSensor = 8,
			[Token(Token = "0x4001E54")]
			KnucklesLeft = 9,
			[Token(Token = "0x4001E55")]
			KnucklesRight = 10,
			[Token(Token = "0x4001E56")]
			DaydreamController = 12,
			[Token(Token = "0x4001E57")]
			ViveFocusFinch = 14,
			[Token(Token = "0x4001E58")]
			OculusGoController = 16,
			[Token(Token = "0x4001E59")]
			OculusGearVrController = 17,
			[Token(Token = "0x4001E5A")]
			WMRControllerLeft = 19,
			[Token(Token = "0x4001E5B")]
			WMRControllerRight = 20,
			[Token(Token = "0x4001E5C")]
			ViveCosmosControllerLeft = 21,
			[Token(Token = "0x4001E5D")]
			ViveCosmosControllerRight = 22,
			[Token(Token = "0x4001E5E")]
			OculusQuestControllerLeft = 23,
			[Token(Token = "0x4001E5F")]
			OculusQuestControllerRight = 24,
			[Token(Token = "0x4001E60")]
			IndexHMD = 25,
			[Token(Token = "0x4001E61")]
			IndexControllerLeft = 26,
			[Token(Token = "0x4001E62")]
			IndexControllerRight = 27
		}

		[Serializable]
		[Token(Token = "0x20004D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9275E4", Offset = "0x9275E4")]
		private sealed class <>c
		{
			[Token(Token = "0x4001E63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x6002385")]
			[Address(RVA = "0xD19248", Offset = "0xD19248", VA = "0xD19248")]
			public <>c()
			{
			}

			[Token(Token = "0x6002386")]
			[Address(RVA = "0xD19250", Offset = "0xD19250", VA = "0xD19250")]
			internal bool <.cctor>b__32_1(Type t)
			{
				return default(bool);
			}

			[Token(Token = "0x6002387")]
			[Address(RVA = "0xD19334", Offset = "0xD19334", VA = "0xD19334")]
			internal int <.cctor>b__32_0(Type t)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Mode m_mode;

		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ViveRoleProperty m_viveRole;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_origin;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Index m_deviceIndex;

		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private OverrideModelEnum m_overrideModel;

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Shader m_overrideShader;

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Type[] s_creatorTypes;

		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RenderModelCreator[] m_creators;

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int m_activeCreatorIndex;

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int m_defaultCreatorIndex;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_isQuiting;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92A774", Offset = "0x92A774")]
		private bool <applyTracking>k__BackingField;

		[Token(Token = "0x1700011E")]
		public ViveRoleProperty viveRole
		{
			[Token(Token = "0x6000AE4")]
			[Address(RVA = "0xD183F8", Offset = "0xD183F8", VA = "0xD183F8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700011F")]
		public Transform origin
		{
			[Token(Token = "0x6000AE5")]
			[Address(RVA = "0xD18400", Offset = "0xD18400", VA = "0xD18400")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AE6")]
			[Address(RVA = "0xD18408", Offset = "0xD18408", VA = "0xD18408")]
			set
			{
			}
		}

		[Token(Token = "0x17000120")]
		public bool applyTracking
		{
			[Token(Token = "0x6000AE7")]
			[Address(RVA = "0xD18410", Offset = "0xD18410", VA = "0xD18410")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939C40", Offset = "0x939C40")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AE8")]
			[Address(RVA = "0xD18418", Offset = "0xD18418", VA = "0xD18418")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939C50", Offset = "0x939C50")]
			set
			{
			}
		}

		[Token(Token = "0x17000121")]
		public OverrideModelEnum overrideModel
		{
			[Token(Token = "0x6000AE9")]
			[Address(RVA = "0xD18424", Offset = "0xD18424", VA = "0xD18424")]
			get
			{
				return default(OverrideModelEnum);
			}
			[Token(Token = "0x6000AEA")]
			[Address(RVA = "0xD1842C", Offset = "0xD1842C", VA = "0xD1842C")]
			set
			{
			}
		}

		[Token(Token = "0x17000122")]
		public Shader overrideShader
		{
			[Token(Token = "0x6000AEB")]
			[Address(RVA = "0xD18434", Offset = "0xD18434", VA = "0xD18434")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AEC")]
			[Address(RVA = "0xD1843C", Offset = "0xD1843C", VA = "0xD1843C")]
			set
			{
			}
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0xD18444", Offset = "0xD18444", VA = "0xD18444")]
		static RenderModelHook()
		{
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0xD189C0", Offset = "0xD189C0", VA = "0xD189C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0xD18D2C", Offset = "0xD18D2C", VA = "0xD18D2C", Slot = "5")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0xD19004", Offset = "0xD19004", VA = "0xD19004", Slot = "6")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0xD19140", Offset = "0xD19140", VA = "0xD19140")]
		private void OnDeviceIndexChanged(uint deviceIndex)
		{
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0xD19144", Offset = "0xD19144", VA = "0xD19144")]
		private void OnActiveModuleChanged(VRModuleActiveEnum module)
		{
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0xD19148", Offset = "0xD19148", VA = "0xD19148")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0xD08DB8", Offset = "0xD08DB8", VA = "0xD08DB8")]
		public uint GetModelDeviceIndex()
		{
			return default(uint);
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0xD18E68", Offset = "0xD18E68", VA = "0xD18E68")]
		private void UpdateModel()
		{
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0xD19154", Offset = "0xD19154", VA = "0xD19154")]
		public RenderModelHook()
		{
		}
	}
	[Token(Token = "0x2000139")]
	[ExecuteInEditMode]
	public class SteamVRCameraHook : MonoBehaviour
	{
		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0xD19B04", Offset = "0xD19B04", VA = "0xD19B04")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0xD19C04", Offset = "0xD19C04", VA = "0xD19C04")]
		public SteamVRCameraHook()
		{
		}
	}
	[Token(Token = "0x200013A")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x9259F0", Offset = "0x9259F0")]
	public class StickyGrabbable : GrabbableBase<StickyGrabbable.Grabber>, IColliderEventPressDownHandler, IEventSystemHandler
	{
		[Token(Token = "0x20004D8")]
		public class Grabber : IGrabber
		{
			[Serializable]
			[Token(Token = "0x200063D")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x928160", Offset = "0x928160")]
			private sealed class <>c
			{
				[Token(Token = "0x4002279")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public static readonly <>c <>9;

				[Token(Token = "0x400227A")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public static Func<Grabber> <>9__19_0;

				[Token(Token = "0x6002846")]
				[Address(RVA = "0xD1CC60", Offset = "0xD1CC60", VA = "0xD1CC60")]
				public <>c()
				{
				}

				[Token(Token = "0x6002847")]
				[Address(RVA = "0xD1CC68", Offset = "0xD1CC68", VA = "0xD1CC68")]
				internal Grabber <Get>b__19_0()
				{
					return null;
				}
			}

			[Token(Token = "0x4001E64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static ObjectPool<Grabber> m_pool;

			[Token(Token = "0x4001E65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938178", Offset = "0x938178")]
			private ColliderButtonEventData <eventData>k__BackingField;

			[Token(Token = "0x4001E66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938188", Offset = "0x938188")]
			private RigidPose <grabOffset>k__BackingField;

			[Token(Token = "0x4001E67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x938198", Offset = "0x938198")]
			private int <grabFrame>k__BackingField;

			[Token(Token = "0x4001E68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9381A8", Offset = "0x9381A8")]
			private bool <redeayForRelease>k__BackingField;

			[Token(Token = "0x17000432")]
			public ColliderButtonEventData eventData
			{
				[Token(Token = "0x6002388")]
				[Address(RVA = "0xD1B9C8", Offset = "0xD1B9C8", VA = "0xD1B9C8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F0BC", Offset = "0x93F0BC")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002389")]
				[Address(RVA = "0xD1CBD8", Offset = "0xD1CBD8", VA = "0xD1CBD8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F0CC", Offset = "0x93F0CC")]
				private set
				{
				}
			}

			[Token(Token = "0x17000433")]
			public RigidPose grabberOrigin
			{
				[Token(Token = "0x600238A")]
				[Address(RVA = "0xD1C5EC", Offset = "0xD1C5EC", VA = "0xD1C5EC", Slot = "4")]
				get
				{
					return default(RigidPose);
				}
			}

			[Token(Token = "0x17000434")]
			public RigidPose grabOffset
			{
				[Token(Token = "0x600238B")]
				[Address(RVA = "0xD1CBE0", Offset = "0xD1CBE0", VA = "0xD1CBE0", Slot = "5")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F0DC", Offset = "0x93F0DC")]
				get
				{
					return default(RigidPose);
				}
				[Token(Token = "0x600238C")]
				[Address(RVA = "0xD1C6E0", Offset = "0xD1C6E0", VA = "0xD1C6E0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F0EC", Offset = "0x93F0EC")]
				set
				{
				}
			}

			[Token(Token = "0x17000435")]
			public int grabFrame
			{
				[Token(Token = "0x600238D")]
				[Address(RVA = "0xD1CBBC", Offset = "0xD1CBBC", VA = "0xD1CBBC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F0FC", Offset = "0x93F0FC")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600238E")]
				[Address(RVA = "0xD1C6FC", Offset = "0xD1C6FC", VA = "0xD1C6FC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F10C", Offset = "0x93F10C")]
				set
				{
				}
			}

			[Token(Token = "0x17000436")]
			public bool redeayForRelease
			{
				[Token(Token = "0x600238F")]
				[Address(RVA = "0xD1CBC4", Offset = "0xD1CBC4", VA = "0xD1CBC4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F11C", Offset = "0x93F11C")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002390")]
				[Address(RVA = "0xD1CBCC", Offset = "0xD1CBCC", VA = "0xD1CBCC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F12C", Offset = "0x93F12C")]
				set
				{
				}
			}

			[Token(Token = "0x6002391")]
			[Address(RVA = "0xD1C464", Offset = "0xD1C464", VA = "0xD1C464")]
			public static Grabber Get(ColliderButtonEventData eventData)
			{
				return null;
			}

			[Token(Token = "0x6002392")]
			[Address(RVA = "0xD1C03C", Offset = "0xD1C03C", VA = "0xD1C03C")]
			public static void Release(Grabber grabber)
			{
			}

			[Token(Token = "0x6002393")]
			[Address(RVA = "0xD1CBF4", Offset = "0xD1CBF4", VA = "0xD1CBF4")]
			public Grabber()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004D9")]
		public class UnityEventGrabbable : UnityEvent<StickyGrabbable>
		{
			[Token(Token = "0x6002394")]
			[Address(RVA = "0xD1C950", Offset = "0xD1C950", VA = "0xD1C950")]
			public UnityEventGrabbable()
			{
			}
		}

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private IndexedTable<ColliderButtonEventData, Grabber> m_eventGrabberSet;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool alignPosition;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		public bool alignRotation;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public Vector3 alignPositionOffset;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Vector3 alignRotationOffset;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x92A784", Offset = "0x92A784")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x92A784", Offset = "0x92A784")]
		[SerializeField]
		private float m_followingDuration;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x92A7EC", Offset = "0x92A7EC")]
		[SerializeField]
		private bool m_overrideMaxAngularVelocity;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x92A838", Offset = "0x92A838")]
		[SerializeField]
		private bool m_unblockableGrab;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[AttributeAttribute(Name = "FlagsFromEnumAttribute", RVA = "0x92A884", Offset = "0x92A884")]
		private ulong m_primaryGrabButton;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[AttributeAttribute(Name = "FlagsFromEnumAttribute", RVA = "0x92A8F8", Offset = "0x92A8F8")]
		private uint m_secondaryGrabButton;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		[HideInInspector]
		private ColliderButtonEventData.InputButton m_grabButton;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private bool m_toggleToRelease;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x92A9B4", Offset = "0x92A9B4")]
		[SerializeField]
		private bool m_allowMultipleGrabbers;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x92AA00", Offset = "0x92AA00")]
		[SerializeField]
		private UnityEventGrabbable m_afterGrabbed;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x92AA4C", Offset = "0x92AA4C")]
		[SerializeField]
		private UnityEventGrabbable m_beforeRelease;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x92AA98", Offset = "0x92AA98")]
		[SerializeField]
		private UnityEventGrabbable m_onDrop;

		[Token(Token = "0x17000123")]
		public override float followingDuration
		{
			[Token(Token = "0x6000AF9")]
			[Address(RVA = "0xD1B85C", Offset = "0xD1B85C", VA = "0xD1B85C", Slot = "6")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AFA")]
			[Address(RVA = "0xD1B864", Offset = "0xD1B864", VA = "0xD1B864", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000124")]
		public override bool overrideMaxAngularVelocity
		{
			[Token(Token = "0x6000AFB")]
			[Address(RVA = "0xD1B8EC", Offset = "0xD1B8EC", VA = "0xD1B8EC", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AFC")]
			[Address(RVA = "0xD1B8F4", Offset = "0xD1B8F4", VA = "0xD1B8F4", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000125")]
		public bool unblockableGrab
		{
			[Token(Token = "0x6000AFD")]
			[Address(RVA = "0xD1B904", Offset = "0xD1B904", VA = "0xD1B904")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AFE")]
			[Address(RVA = "0xD1B90C", Offset = "0xD1B90C", VA = "0xD1B90C")]
			set
			{
			}
		}

		[Token(Token = "0x17000126")]
		public bool toggleToRelease
		{
			[Token(Token = "0x6000AFF")]
			[Address(RVA = "0xD1B918", Offset = "0xD1B918", VA = "0xD1B918")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B00")]
			[Address(RVA = "0xD1B920", Offset = "0xD1B920", VA = "0xD1B920")]
			set
			{
			}
		}

		[Token(Token = "0x17000127")]
		public UnityEventGrabbable afterGrabbed
		{
			[Token(Token = "0x6000B01")]
			[Address(RVA = "0xD1B92C", Offset = "0xD1B92C", VA = "0xD1B92C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000128")]
		public UnityEventGrabbable beforeRelease
		{
			[Token(Token = "0x6000B02")]
			[Address(RVA = "0xD1B934", Offset = "0xD1B934", VA = "0xD1B934")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000129")]
		public UnityEventGrabbable onDrop
		{
			[Token(Token = "0x6000B03")]
			[Address(RVA = "0xD1B93C", Offset = "0xD1B93C", VA = "0xD1B93C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012A")]
		public ColliderButtonEventData grabbedEvent
		{
			[Token(Token = "0x6000B04")]
			[Address(RVA = "0xD1B944", Offset = "0xD1B944", VA = "0xD1B944")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700012B")]
		public ulong primaryGrabButton
		{
			[Token(Token = "0x6000B05")]
			[Address(RVA = "0xD1B9D0", Offset = "0xD1B9D0", VA = "0xD1B9D0")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6000B06")]
			[Address(RVA = "0xD1B9D8", Offset = "0xD1B9D8", VA = "0xD1B9D8")]
			set
			{
			}
		}

		[Token(Token = "0x1700012C")]
		public uint secondaryGrabButton
		{
			[Token(Token = "0x6000B07")]
			[Address(RVA = "0xD1B9E0", Offset = "0xD1B9E0", VA = "0xD1B9E0")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6000B08")]
			[Address(RVA = "0xD1B9E8", Offset = "0xD1B9E8", VA = "0xD1B9E8")]
			set
			{
			}
		}

		[Token(Token = "0x1700012D")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x940EC8", Offset = "0x940EC8")]
		public ColliderButtonEventData.InputButton grabButton
		{
			[Token(Token = "0x6000B09")]
			[Address(RVA = "0xD1B9F0", Offset = "0xD1B9F0", VA = "0xD1B9F0")]
			get
			{
				return default(ColliderButtonEventData.InputButton);
			}
			[Token(Token = "0x6000B0A")]
			[Address(RVA = "0xD1BA14", Offset = "0xD1BA14", VA = "0xD1BA14")]
			set
			{
			}
		}

		[Token(Token = "0x1700012E")]
		private bool moveByVelocity
		{
			[Token(Token = "0x6000B0B")]
			[Address(RVA = "0xD1BA28", Offset = "0xD1BA28", VA = "0xD1BA28")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700012F")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x940F00", Offset = "0x940F00")]
		public Rigidbody rigid
		{
			[Token(Token = "0x6000B12")]
			[Address(RVA = "0xD1BD0C", Offset = "0xD1BD0C", VA = "0xD1BD0C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B13")]
			[Address(RVA = "0xD1BD5C", Offset = "0xD1BD5C", VA = "0xD1BD5C")]
			set
			{
			}
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0xD1BAFC", Offset = "0xD1BAFC", VA = "0xD1BAFC")]
		public bool IsPrimeryGrabButtonOn(ControllerButton btn)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0xD1BB78", Offset = "0xD1BB78", VA = "0xD1BB78")]
		public void SetPrimeryGrabButton(ControllerButton btn, bool isOn = true)
		{
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0xD1BBFC", Offset = "0xD1BBFC", VA = "0xD1BBFC")]
		public void ClearPrimeryGrabButton()
		{
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0xD1BC04", Offset = "0xD1BC04", VA = "0xD1BC04")]
		public bool IsSecondaryGrabButtonOn(ColliderButtonEventData.InputButton btn)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0xD1BC80", Offset = "0xD1BC80", VA = "0xD1BC80")]
		public void SetSecondaryGrabButton(ColliderButtonEventData.InputButton btn, bool isOn = true)
		{
		}

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0xD1BD04", Offset = "0xD1BD04", VA = "0xD1BD04")]
		public void ClearSecondaryGrabButton()
		{
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0xD1BDBC", Offset = "0xD1BDBC", VA = "0xD1BDBC")]
		private void RestoreObsoleteGrabButton()
		{
		}

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0xD1BDF4", Offset = "0xD1BDF4", VA = "0xD1BDF4", Slot = "10")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0xD1BF24", Offset = "0xD1BF24", VA = "0xD1BF24", Slot = "13")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0xD1BF80", Offset = "0xD1BF80", VA = "0xD1BF80")]
		private void ClearEventGrabberSet()
		{
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0xD1C0C0", Offset = "0xD1C0C0", VA = "0xD1C0C0")]
		protected bool IsValidGrabButton(ColliderButtonEventData eventData)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0xD1C174", Offset = "0xD1C174", VA = "0xD1C174", Slot = "14")]
		public virtual void OnColliderEventPressDown(ColliderButtonEventData eventData)
		{
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0xD1C704", Offset = "0xD1C704", VA = "0xD1C704", Slot = "15")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0xD1C784", Offset = "0xD1C784", VA = "0xD1C784", Slot = "16")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0xD1C894", Offset = "0xD1C894", VA = "0xD1C894")]
		public StickyGrabbable()
		{
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0xD1C9A0", Offset = "0xD1C9A0", VA = "0xD1C9A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939C60", Offset = "0x939C60")]
		private void <Awake>b__59_0()
		{
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0xD1CA04", Offset = "0xD1CA04", VA = "0xD1CA04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939C70", Offset = "0x939C70")]
		private void <Awake>b__59_1()
		{
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0xD1CA68", Offset = "0xD1CA68", VA = "0xD1CA68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939C80", Offset = "0x939C80")]
		private void <Awake>b__59_2()
		{
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0xD1CACC", Offset = "0xD1CACC", VA = "0xD1CACC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939C90", Offset = "0x939C90")]
		private bool <Update>b__65_0(KeyValuePair<ColliderButtonEventData, Grabber> pair)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200013B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x925A2C", Offset = "0x925A2C")]
	public class Teleportable : MonoBehaviour, ReticlePoser.IMaterialChanger, IPointerDownHandler, IEventSystemHandler, IPointerClickHandler, IPointer3DPressExitHandler
	{
		[Token(Token = "0x20004DA")]
		public enum TeleportButton
		{
			[Token(Token = "0x4001E6A")]
			None = -1,
			[Token(Token = "0x4001E6B")]
			MouseButtonLeft = 0,
			[Token(Token = "0x4001E6C")]
			MouseButtonRight = 1,
			[Token(Token = "0x4001E6D")]
			MouseButtonMiddle = 2,
			[Token(Token = "0x4001E6E")]
			Trigger = 0,
			[Token(Token = "0x4001E6F")]
			Pad = 1,
			[Token(Token = "0x4001E70")]
			Grip = 2
		}

		[Token(Token = "0x20004DB")]
		public enum TriggeredTypeEnum
		{
			[Token(Token = "0x4001E72")]
			ButtonUp,
			[Token(Token = "0x4001E73")]
			ButtonDown,
			[Token(Token = "0x4001E74")]
			ButtonClick
		}

		[Serializable]
		[Token(Token = "0x20004DC")]
		public class UnityEventTeleport : UnityEvent<Teleportable, RaycastResult, float>
		{
			[Token(Token = "0x6002395")]
			[Address(RVA = "0xD9EE84", Offset = "0xD9EE84", VA = "0xD9EE84")]
			public UnityEventTeleport()
			{
			}
		}

		[Token(Token = "0x20004DD")]
		public delegate void OnTeleportAction(Teleportable src, RaycastResult hitResult, float delay);

		[Token(Token = "0x20004DE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9275F4", Offset = "0x9275F4")]
		private sealed class <StartTeleport>d__75 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4001E78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Teleportable <>4__this;

			[Token(Token = "0x4001E79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Vector3 position;

			[Token(Token = "0x4001E7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public Quaternion rotation;

			[Token(Token = "0x4001E7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public RaycastResult hitResult;

			[Token(Token = "0x17000437")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600239D")]
				[Address(RVA = "0xD9ED34", Offset = "0xD9ED34", VA = "0xD9ED34", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000438")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600239F")]
				[Address(RVA = "0xD9EDA4", Offset = "0xD9EDA4", VA = "0xD9EDA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600239A")]
			[Address(RVA = "0xD9E020", Offset = "0xD9E020", VA = "0xD9E020")]
			[DebuggerHidden]
			public <StartTeleport>d__75(int <>1__state)
			{
			}

			[Token(Token = "0x600239B")]
			[Address(RVA = "0xD9E04C", Offset = "0xD9E04C", VA = "0xD9E04C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600239C")]
			[Address(RVA = "0xD9E050", Offset = "0xD9E050", VA = "0xD9E050", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600239E")]
			[Address(RVA = "0xD9ED3C", Offset = "0xD9ED3C", VA = "0xD9ED3C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform pivot;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeDuration;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "FlagsFromEnumAttribute", RVA = "0x92AAE4", Offset = "0x92AAE4")]
		private ulong primaryTeleportButton;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "FlagsFromEnumAttribute", RVA = "0x92AB58", Offset = "0x92AB58")]
		private uint secondaryTeleportButton;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[HideInInspector]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x92ABCC", Offset = "0x92ABCC")]
		private TeleportButton _teleportButton;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TriggeredTypeEnum triggeredType;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Material m_reticleMaterial;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool rotateToHitObjectFront;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x92AC58", Offset = "0x92AC58")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x92AC58", Offset = "0x92AC58")]
		private bool teleportToHitObjectPivot;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x92ACC8", Offset = "0x92ACC8")]
		private bool useSteamVRFade;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private UnityEventTeleport onBeforeTeleport;

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private UnityEventTeleport onAfterTeleport;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Quaternion additionalTeleportRotation;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool abort;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Coroutine teleportCoroutine;

		[Token(Token = "0x17000130")]
		public ulong PrimeryTeleportButton
		{
			[Token(Token = "0x6000B21")]
			[Address(RVA = "0xD1CCC4", Offset = "0xD1CCC4", VA = "0xD1CCC4")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6000B22")]
			[Address(RVA = "0xD1CCCC", Offset = "0xD1CCCC", VA = "0xD1CCCC")]
			set
			{
			}
		}

		[Token(Token = "0x17000131")]
		public uint SecondaryTeleportButton
		{
			[Token(Token = "0x6000B23")]
			[Address(RVA = "0xD1CCD4", Offset = "0xD1CCD4", VA = "0xD1CCD4")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6000B24")]
			[Address(RVA = "0xD1CCDC", Offset = "0xD1CCDC", VA = "0xD1CCDC")]
			set
			{
			}
		}

		[Token(Token = "0x17000132")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x940F38", Offset = "0x940F38")]
		public TeleportButton teleportButton
		{
			[Token(Token = "0x6000B25")]
			[Address(RVA = "0xD1CCE4", Offset = "0xD1CCE4", VA = "0xD1CCE4")]
			get
			{
				return default(TeleportButton);
			}
			[Token(Token = "0x6000B26")]
			[Address(RVA = "0xD1CD08", Offset = "0xD1CD08", VA = "0xD1CD08")]
			set
			{
			}
		}

		[Token(Token = "0x17000133")]
		public TriggeredTypeEnum TriggeredType
		{
			[Token(Token = "0x6000B27")]
			[Address(RVA = "0xD1CD1C", Offset = "0xD1CD1C", VA = "0xD1CD1C")]
			get
			{
				return default(TriggeredTypeEnum);
			}
			[Token(Token = "0x6000B28")]
			[Address(RVA = "0xD1CD24", Offset = "0xD1CD24", VA = "0xD1CD24")]
			set
			{
			}
		}

		[Token(Token = "0x17000134")]
		public Material reticleMaterial
		{
			[Token(Token = "0x6000B29")]
			[Address(RVA = "0xD1CD2C", Offset = "0xD1CD2C", VA = "0xD1CD2C", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B2A")]
			[Address(RVA = "0xD1CD34", Offset = "0xD1CD34", VA = "0xD1CD34")]
			set
			{
			}
		}

		[Token(Token = "0x17000135")]
		public bool RotateToHitObjectFront
		{
			[Token(Token = "0x6000B2B")]
			[Address(RVA = "0xD1CD3C", Offset = "0xD1CD3C", VA = "0xD1CD3C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B2C")]
			[Address(RVA = "0xD1CD44", Offset = "0xD1CD44", VA = "0xD1CD44")]
			set
			{
			}
		}

		[Token(Token = "0x17000136")]
		public bool TeleportToHitObjectPivot
		{
			[Token(Token = "0x6000B2D")]
			[Address(RVA = "0xD1CD50", Offset = "0xD1CD50", VA = "0xD1CD50")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B2E")]
			[Address(RVA = "0xD1CD58", Offset = "0xD1CD58", VA = "0xD1CD58")]
			set
			{
			}
		}

		[Token(Token = "0x17000137")]
		public bool UseSteamVRFade
		{
			[Token(Token = "0x6000B2F")]
			[Address(RVA = "0xD1CD64", Offset = "0xD1CD64", VA = "0xD1CD64")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B30")]
			[Address(RVA = "0xD1CD6C", Offset = "0xD1CD6C", VA = "0xD1CD6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000138")]
		public virtual Quaternion AdditionalTeleportRotation
		{
			[Token(Token = "0x6000B31")]
			[Address(RVA = "0xD1CD78", Offset = "0xD1CD78", VA = "0xD1CD78", Slot = "8")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6000B32")]
			[Address(RVA = "0xD1CD84", Offset = "0xD1CD84", VA = "0xD1CD84", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000139")]
		public bool IsAborted
		{
			[Token(Token = "0x6000B3B")]
			[Address(RVA = "0xD1D418", Offset = "0xD1D418", VA = "0xD1D418")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000020")]
		public event OnTeleportAction OnBeforeTeleport
		{
			[Token(Token = "0x6000B33")]
			[Address(RVA = "0xD1CD90", Offset = "0xD1CD90", VA = "0xD1CD90")]
			add
			{
			}
			[Token(Token = "0x6000B34")]
			[Address(RVA = "0xD1CE34", Offset = "0xD1CE34", VA = "0xD1CE34")]
			remove
			{
			}
		}

		[Token(Token = "0x14000021")]
		public event OnTeleportAction OnAfterTeleport
		{
			[Token(Token = "0x6000B35")]
			[Address(RVA = "0xD1CED8", Offset = "0xD1CED8", VA = "0xD1CED8")]
			add
			{
			}
			[Token(Token = "0x6000B36")]
			[Address(RVA = "0xD1CF7C", Offset = "0xD1CF7C", VA = "0xD1CF7C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000022")]
		public static event OnTeleportAction OnBeforeAnyTeleport
		{
			[Token(Token = "0x6000B37")]
			[Address(RVA = "0xD1D020", Offset = "0xD1D020", VA = "0xD1D020")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939CA0", Offset = "0x939CA0")]
			add
			{
			}
			[Token(Token = "0x6000B38")]
			[Address(RVA = "0xD1D11C", Offset = "0xD1D11C", VA = "0xD1D11C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939CB0", Offset = "0x939CB0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000023")]
		public static event OnTeleportAction OnAfterAnyTeleport
		{
			[Token(Token = "0x6000B39")]
			[Address(RVA = "0xD1D218", Offset = "0xD1D218", VA = "0xD1D218")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939CC0", Offset = "0x939CC0")]
			add
			{
			}
			[Token(Token = "0x6000B3A")]
			[Address(RVA = "0xD1D318", Offset = "0xD1D318", VA = "0xD1D318")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939CD0", Offset = "0x939CD0")]
			remove
			{
			}
		}

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0xD1D420", Offset = "0xD1D420", VA = "0xD1D420")]
		public bool IsPrimeryTeleportButtonOn(ControllerButton btn)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0xD1D49C", Offset = "0xD1D49C", VA = "0xD1D49C")]
		public void SetPrimeryTeleportButton(ControllerButton btn, bool isOn = true)
		{
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0xD1D520", Offset = "0xD1D520", VA = "0xD1D520")]
		public void ClearPrimeryTeleportButton()
		{
		}

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0xD1D528", Offset = "0xD1D528", VA = "0xD1D528")]
		public bool IsSecondaryTeleportButtonOn(TeleportButton btn)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0xD1D5A4", Offset = "0xD1D5A4", VA = "0xD1D5A4")]
		public void SetSecondaryTeleportButton(TeleportButton btn, bool isOn = true)
		{
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0xD1D628", Offset = "0xD1D628", VA = "0xD1D628")]
		public void ClearSecondaryTeleportButton()
		{
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0xD1D630", Offset = "0xD1D630", VA = "0xD1D630")]
		private void RestoreObsoleteTeleportButton()
		{
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0xD1D670", Offset = "0xD1D670", VA = "0xD1D670")]
		private void FindTeleportPivotAndTarget()
		{
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0xD1D828", Offset = "0xD1D828", VA = "0xD1D828", Slot = "10")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0xD1D868", Offset = "0xD1D868", VA = "0xD1D868", Slot = "11")]
		public virtual void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0xD1D890", Offset = "0xD1D890", VA = "0xD1D890", Slot = "12")]
		public virtual void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0xD1D8B8", Offset = "0xD1D8B8", VA = "0xD1D8B8", Slot = "13")]
		public virtual void OnPointer3DPressExit(Pointer3DEventData eventData)
		{
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0xD1D928", Offset = "0xD1D928", VA = "0xD1D928", Slot = "14")]
		protected virtual void OnPointerTeleport(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0xD1E134", Offset = "0xD1E134", VA = "0xD1E134")]
		protected bool IsValidTeleportButton(PointerEventData eventData)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0xD1E1E8", Offset = "0xD1E1E8", VA = "0xD1E1E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x939CE0", Offset = "0x939CE0")]
		public IEnumerator StartTeleport(RaycastResult hitResult, Vector3 position, Quaternion rotation, float delay)
		{
			return null;
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0xD1E338", Offset = "0xD1E338", VA = "0xD1E338", Slot = "15")]
		public virtual void AbortTeleport()
		{
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0xD1E374", Offset = "0xD1E374", VA = "0xD1E374")]
		protected void TeleportTarget(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0xD1E494", Offset = "0xD1E494", VA = "0xD1E494")]
		public Teleportable()
		{
		}
	}
	[Token(Token = "0x200013C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x925A68", Offset = "0x925A68")]
	public class VRCameraHook : MonoBehaviour
	{
		[Token(Token = "0x20004DF")]
		[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x927604", Offset = "0x927604")]
		public class CreatorPriorityAttirbute : Attribute
		{
			[Token(Token = "0x4001E7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9381B8", Offset = "0x9381B8")]
			private int <priority>k__BackingField;

			[Token(Token = "0x17000439")]
			public int priority
			{
				[Token(Token = "0x60023A0")]
				[Address(RVA = "0xDA4EC8", Offset = "0xDA4EC8", VA = "0xDA4EC8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F18C", Offset = "0x93F18C")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x60023A1")]
				[Address(RVA = "0xDA4ED8", Offset = "0xDA4ED8", VA = "0xDA4ED8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F19C", Offset = "0x93F19C")]
				set
				{
				}
			}

			[Token(Token = "0x60023A2")]
			[Address(RVA = "0xDA4EE0", Offset = "0xDA4EE0", VA = "0xDA4EE0")]
			public CreatorPriorityAttirbute(int priority = 0)
			{
			}
		}

		[Token(Token = "0x20004E0")]
		public abstract class CameraCreator
		{
			[Token(Token = "0x1700043A")]
			public abstract bool shouldActive
			{
				[Token(Token = "0x60023A3")]
				get;
			}

			[Token(Token = "0x60023A4")]
			public abstract void CreateCamera(VRCameraHook hook);

			[Token(Token = "0x60023A5")]
			[Address(RVA = "0xDA4ED0", Offset = "0xDA4ED0", VA = "0xDA4ED0")]
			protected CameraCreator()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927618", Offset = "0x927618")]
		private sealed class <>c
		{
			[Token(Token = "0x4001E7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x60023A7")]
			[Address(RVA = "0xDA4C1C", Offset = "0xDA4C1C", VA = "0xDA4C1C")]
			public <>c()
			{
			}

			[Token(Token = "0x60023A8")]
			[Address(RVA = "0xDA4C24", Offset = "0xDA4C24", VA = "0xDA4C24")]
			internal bool <.cctor>b__4_1(Type t)
			{
				return default(bool);
			}

			[Token(Token = "0x60023A9")]
			[Address(RVA = "0xDA4D08", Offset = "0xDA4D08", VA = "0xDA4D08")]
			internal int <.cctor>b__4_0(Type t)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Type[] s_creatorTypes;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CameraCreator[] m_creators;

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0xDA41B8", Offset = "0xDA41B8", VA = "0xDA41B8")]
		static VRCameraHook()
		{
		}

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0xDA4734", Offset = "0xDA4734", VA = "0xDA4734")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0xDA4A70", Offset = "0xDA4A70", VA = "0xDA4A70")]
		private void OnModuleActivated(VRModuleActiveEnum activatedModule)
		{
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0xDA4BB0", Offset = "0xDA4BB0", VA = "0xDA4BB0")]
		public VRCameraHook()
		{
		}
	}
	[Token(Token = "0x200013D")]
	public class VIUSettings : ScriptableObject
	{
		[Token(Token = "0x40009F2")]
		public const string DEFAULT_RESOURCE_PATH = "VIUSettings";

		[Token(Token = "0x40009F3")]
		public const string INDIVIDUAL_TOUCHPAD_JOYSTICK_VALUE_TOOLTIP = "Set touchpad and joystick value individually for different controller type. For example, Vive Controller will have touchpad value but no thumbstick value, Oculus Touch will have thumbstick value but no touchpad value.";

		[Token(Token = "0x40009F4")]
		public const bool AUTO_CHECK_NEW_VIU_VERSION_DEFAULT_VALUE = true;

		[Token(Token = "0x40009F5")]
		public const float VIRTUAL_DPAD_DEAD_ZONE_DEFAULT_VALUE = 0.25f;

		[Token(Token = "0x40009F6")]
		public const bool INDIVIDUAL_TOUCHPAD_JOYSTICK_VALUE_DEFAULT_VALUE = false;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_autoCheckNewVIUVersion;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_virtualDPadDeadZone;

		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x92AD74", Offset = "0x92AD74")]
		private bool m_individualTouchpadJoystickValue;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VIUSettings s_instance;

		[Token(Token = "0x40009FB")]
		public const string BIND_UI_SWITCH_TOOLTIP = "Enable this option to open binding interface by pressing the switch key in play mode.";

		[Token(Token = "0x40009FC")]
		public const bool AUTO_LOAD_BINDING_CONFIG_ON_START_DEFAULT_VALUE = true;

		[Token(Token = "0x40009FD")]
		public const string BINDING_CONFIG_FILE_PATH_DEFAULT_VALUE = "vive_role_bindings.cfg";

		[Token(Token = "0x40009FE")]
		public const bool ENABLE_BINDING_INTERFACE_SWITCH_DEFAULT_VALUE = true;

		[Token(Token = "0x40009FF")]
		public const KeyCode BINDING_INTERFACE_SWITCH_KEY_DEFAULT_VALUE = KeyCode.B;

		[Token(Token = "0x4000A00")]
		public const KeyCode BINDING_INTERFACE_SWITCH_KEY_MODIFIER_DEFAULT_VALUE = KeyCode.RightShift;

		[Token(Token = "0x4000A01")]
		public const string BINDING_INTERFACE_PREFAB_DEFAULT_RESOURCE_PATH = "VIUBindingInterface";

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool m_autoLoadBindingConfigOnStart;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string m_bindingConfigFilePath;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x92ADE0", Offset = "0x92ADE0")]
		private bool m_enableBindingInterfaceSwitch;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private KeyCode m_bindingInterfaceSwitchKey;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private KeyCode m_bindingInterfaceSwitchKeyModifier;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject m_bindingInterfaceObjectSource;

		[Token(Token = "0x4000A08")]
		public const bool ACTIVATE_GOOGLE_VR_MODULE_DEFAULT_VALUE = true;

		[Token(Token = "0x4000A09")]
		public const bool DAYDREAM_SYNC_PAD_PRESS_TO_TRIGGER_DEFAULT_VALUE = true;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool m_activateGoogleVRModule;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[SerializeField]
		private bool m_daydreamSyncPadPressToTrigger;

		[Token(Token = "0x4000A0C")]
		public const string EX_CAM_UI_SWITCH_TOOLTIP = "Enable this option to toggle quad view by pressing the switch key in play mode. (After the config file loaded successfully)";

		[Token(Token = "0x4000A0D")]
		public const bool AUTO_LOAD_EXTERNAL_CAMERA_CONFIG_ON_START_DEFAULT_VALUE = true;

		[Token(Token = "0x4000A0E")]
		public const string EXTERNAL_CAMERA_CONFIG_FILE_PATH_DEFAULT_VALUE = "externalcamera.cfg";

		[Token(Token = "0x4000A0F")]
		public const bool ENABLE_EXTERNAL_CAMERA_SWITCH_DEFAULT_VALUE = true;

		[Token(Token = "0x4000A10")]
		public const KeyCode EXTERNAL_CAMERA_SWITCH_KEY_DEFAULT_VALUE = KeyCode.M;

		[Token(Token = "0x4000A11")]
		public const KeyCode EXTERNAL_CAMERA_SWITCH_KEY_MODIFIER_DEFAULT_VALUE = KeyCode.RightShift;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		[SerializeField]
		private bool m_autoLoadExternalCameraConfigOnStart;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private string m_externalCameraConfigFilePath;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x92AE9C", Offset = "0x92AE9C")]
		private bool m_enableExternalCameraSwitch;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private KeyCode m_externalCameraSwitchKey;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private KeyCode m_externalCameraSwitchKeyModifier;

		[Token(Token = "0x4000A17")]
		public const bool ACTIVATE_OCULUS_VR_MODULE_DEFAULT_VALUE = true;

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private bool m_activateOculusVRModule;

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private string m_oculusVRAndroidManifestPath;

		[Token(Token = "0x4000A1A")]
		public const bool ACTIVATE_STEAM_VR_MODULE_DEFAULT_VALUE = true;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private bool m_activateSteamVRModule;

		[Token(Token = "0x4000A1C")]
		public const string SIMULATE_TRACKPAD_TOUCH_TOOLTIP = "Hold Shift key and move the mouse to simulate trackpad touching event";

		[Token(Token = "0x4000A1D")]
		public const string SIMULATOR_KEY_MOVE_SPEED_TOOLTIP = "W/A/S/D";

		[Token(Token = "0x4000A1E")]
		public const string SIMULATOR_KEY_ROTATE_SPEED_TOOLTIP = "Arrow Up/Down/Left/Right";

		[Token(Token = "0x4000A1F")]
		public const bool ACTIVATE_SIMULATOR_MODULE_DEFAULT_VALUE = false;

		[Token(Token = "0x4000A20")]
		public const bool SIMULATOR_AUTO_TRACK_MAIN_CAMERA_DEFAULT_VALUE = true;

		[Token(Token = "0x4000A21")]
		public const bool ENABLE_SIMULATOR_KEYBOARD_MOUSE_CONTROL_DEFAULT_VALUE = true;

		[Token(Token = "0x4000A22")]
		public const bool SIMULATE_TRACKPAD_TOUCH_DEFAULT_VALUE = true;

		[Token(Token = "0x4000A23")]
		public const float SIMULATOR_KEY_MOVE_SPEED_DEFAULT_VALUE = 1.5f;

		[Token(Token = "0x4000A24")]
		public const float SIMULATOR_MOUSE_ROTATE_SPEED_DEFAULT_VALUE = 90f;

		[Token(Token = "0x4000A25")]
		public const float SIMULATOR_KEY_ROTATE_SPEED_DEFAULT_VALUE = 90f;

		[Token(Token = "0x4000A26")]
		public const VRModuleDeviceModel SIMULATOR_CONTROLLER_MODEL_DEFAULT_VALUE = VRModuleDeviceModel.ViveController;

		[Token(Token = "0x4000A27")]
		public const VRModuleDeviceModel SIMULATOR_OTHER_MODEL_DEFAULT_VALUE = VRModuleDeviceModel.ViveTracker;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		[SerializeField]
		private bool m_activateSimulatorModule;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		[SerializeField]
		private bool m_simulatorAutoTrackMainCamera;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x92AF58", Offset = "0x92AF58")]
		private bool m_simulateTrackpadTouch;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private bool m_enableSimulatorKeyboardMouseControl;

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x92AFB4", Offset = "0x92AFB4")]
		private float m_simulatorKeyMoveSpeed;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private float m_simulatorMouseRotateSpeed;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x92B010", Offset = "0x92B010")]
		private float m_simulatorKeyRotateSpeed;

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x92B05C", Offset = "0x92B05C")]
		private VRModuleDeviceModel m_simulatorLeftControllerModel;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x92B0A8", Offset = "0x92B0A8")]
		private VRModuleDeviceModel m_simulatorRightControllerModel;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x92B0F4", Offset = "0x92B0F4")]
		private VRModuleDeviceModel m_simulatorOtherModel;

		[Token(Token = "0x4000A32")]
		public const bool ACTIVATE_UNITY_NATIVE_VR_MODULE_DEFAULT_VALUE = true;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private bool m_activateUnityNativeVRModule;

		[Token(Token = "0x4000A34")]
		public const bool ACTIVATE_UNITY_XR_MODULE_DEFAULT_VALUE = true;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		[SerializeField]
		private bool m_activateUnityXRModule;

		[Token(Token = "0x4000A36")]
		public const bool ACTIVATE_WAVE_VR_MODULE_DEFAULT_VALUE = true;

		[Token(Token = "0x4000A37")]
		public const bool SIMULATE_WAVE_VR_6DOF_CONTROLLER_DEFAULT_VALUE = false;

		[Token(Token = "0x4000A38")]
		public const bool WAVE_VR_ADD_VIRTUAL_ARM_TO_3DOF_CONTROLLER = true;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Vector3 WAVE_VR_VIRTUAL_NECK_POSITION_DEFAULT_VALUE;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static readonly Vector3 WAVE_VR_VIRTUAL_ELBOW_REST_POSITION_DEFAULT_VALUE;

		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly Vector3 WAVE_VR_VIRTUAL_ARM_EXTENSION_OFFSET_DEFAULT_VALUE;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public static readonly Vector3 WAVE_VR_VIRTUAL_WRIST_REST_POSITION_DEFAULT_VALUE;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static readonly Vector3 WAVE_VR_VIRTUAL_HAND_REST_POSITION_DEFAULT_VALUE;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		[SerializeField]
		private bool m_activateWaveVRModule;

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x93")]
		[SerializeField]
		private bool m_simulateWaveVR6DoFController;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private bool m_waveVRAddVirtualArmTo3DoFController;

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Vector3 m_waveVRVirtualNeckPosition;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		private Vector3 m_waveVRVirtualElbowRestPosition;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Vector3 m_waveVRVirtualArmExtensionOffset;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		private Vector3 m_waveVRVirtualWristRestPosition;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Vector3 m_waveVRVirtualHandRestPosition;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private string m_waveVRAndroidManifestPath;

		[Token(Token = "0x1700013A")]
		public static bool autoCheckNewVIUVersion
		{
			[Token(Token = "0x6000B52")]
			[Address(RVA = "0xD9F590", Offset = "0xD9F590", VA = "0xD9F590")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B53")]
			[Address(RVA = "0xD9F754", Offset = "0xD9F754", VA = "0xD9F754")]
			set
			{
			}
		}

		[Token(Token = "0x1700013B")]
		public static float virtualDPadDeadZone
		{
			[Token(Token = "0x6000B54")]
			[Address(RVA = "0xD9F82C", Offset = "0xD9F82C", VA = "0xD9F82C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B55")]
			[Address(RVA = "0xD9F904", Offset = "0xD9F904", VA = "0xD9F904")]
			set
			{
			}
		}

		[Token(Token = "0x1700013C")]
		public static bool individualTouchpadJoystickValue
		{
			[Token(Token = "0x6000B56")]
			[Address(RVA = "0xD9F9D8", Offset = "0xD9F9D8", VA = "0xD9F9D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B57")]
			[Address(RVA = "0xD9FAB8", Offset = "0xD9FAB8", VA = "0xD9FAB8")]
			set
			{
			}
		}

		[Token(Token = "0x1700013D")]
		public static VIUSettings Instance
		{
			[Token(Token = "0x6000B58")]
			[Address(RVA = "0xD9F670", Offset = "0xD9F670", VA = "0xD9F670")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700013E")]
		public static bool autoLoadBindingConfigOnStart
		{
			[Token(Token = "0x6000B5B")]
			[Address(RVA = "0xD9FDA4", Offset = "0xD9FDA4", VA = "0xD9FDA4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B5C")]
			[Address(RVA = "0xD9FE84", Offset = "0xD9FE84", VA = "0xD9FE84")]
			set
			{
			}
		}

		[Token(Token = "0x1700013F")]
		public static string bindingConfigFilePath
		{
			[Token(Token = "0x6000B5D")]
			[Address(RVA = "0xD9FF5C", Offset = "0xD9FF5C", VA = "0xD9FF5C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B5E")]
			[Address(RVA = "0xDA003C", Offset = "0xDA003C", VA = "0xDA003C")]
			set
			{
			}
		}

		[Token(Token = "0x17000140")]
		public static bool enableBindingInterfaceSwitch
		{
			[Token(Token = "0x6000B5F")]
			[Address(RVA = "0xDA0110", Offset = "0xDA0110", VA = "0xDA0110")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B60")]
			[Address(RVA = "0xDA01F0", Offset = "0xDA01F0", VA = "0xDA01F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000141")]
		public static KeyCode bindingInterfaceSwitchKey
		{
			[Token(Token = "0x6000B61")]
			[Address(RVA = "0xDA02C8", Offset = "0xDA02C8", VA = "0xDA02C8")]
			get
			{
				return default(KeyCode);
			}
			[Token(Token = "0x6000B62")]
			[Address(RVA = "0xDA03A0", Offset = "0xDA03A0", VA = "0xDA03A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000142")]
		public static KeyCode bindingInterfaceSwitchKeyModifier
		{
			[Token(Token = "0x6000B63")]
			[Address(RVA = "0xDA0474", Offset = "0xDA0474", VA = "0xDA0474")]
			get
			{
				return default(KeyCode);
			}
			[Token(Token = "0x6000B64")]
			[Address(RVA = "0xDA054C", Offset = "0xDA054C", VA = "0xDA054C")]
			set
			{
			}
		}

		[Token(Token = "0x17000143")]
		public static GameObject bindingInterfaceObjectSource
		{
			[Token(Token = "0x6000B65")]
			[Address(RVA = "0xDA0620", Offset = "0xDA0620", VA = "0xDA0620")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B66")]
			[Address(RVA = "0xDA06F8", Offset = "0xDA06F8", VA = "0xDA06F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000144")]
		public static bool activateGoogleVRModule
		{
			[Token(Token = "0x6000B67")]
			[Address(RVA = "0xDA07CC", Offset = "0xDA07CC", VA = "0xDA07CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B68")]
			[Address(RVA = "0xDA08AC", Offset = "0xDA08AC", VA = "0xDA08AC")]
			set
			{
			}
		}

		[Token(Token = "0x17000145")]
		public static bool daydreamSyncPadPressToTrigger
		{
			[Token(Token = "0x6000B69")]
			[Address(RVA = "0xDA0984", Offset = "0xDA0984", VA = "0xDA0984")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B6A")]
			[Address(RVA = "0xDA0A64", Offset = "0xDA0A64", VA = "0xDA0A64")]
			set
			{
			}
		}

		[Token(Token = "0x17000146")]
		public static bool autoLoadExternalCameraConfigOnStart
		{
			[Token(Token = "0x6000B6B")]
			[Address(RVA = "0xDA0B3C", Offset = "0xDA0B3C", VA = "0xDA0B3C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B6C")]
			[Address(RVA = "0xDA0C1C", Offset = "0xDA0C1C", VA = "0xDA0C1C")]
			set
			{
			}
		}

		[Token(Token = "0x17000147")]
		public static string externalCameraConfigFilePath
		{
			[Token(Token = "0x6000B6D")]
			[Address(RVA = "0xDA0CF4", Offset = "0xDA0CF4", VA = "0xDA0CF4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B6E")]
			[Address(RVA = "0xDA0DD4", Offset = "0xDA0DD4", VA = "0xDA0DD4")]
			set
			{
			}
		}

		[Token(Token = "0x17000148")]
		public static bool enableExternalCameraSwitch
		{
			[Token(Token = "0x6000B6F")]
			[Address(RVA = "0xDA0EA8", Offset = "0xDA0EA8", VA = "0xDA0EA8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B70")]
			[Address(RVA = "0xDA0F88", Offset = "0xDA0F88", VA = "0xDA0F88")]
			set
			{
			}
		}

		[Token(Token = "0x17000149")]
		public static KeyCode externalCameraSwitchKey
		{
			[Token(Token = "0x6000B71")]
			[Address(RVA = "0xDA1060", Offset = "0xDA1060", VA = "0xDA1060")]
			get
			{
				return default(KeyCode);
			}
			[Token(Token = "0x6000B72")]
			[Address(RVA = "0xDA1138", Offset = "0xDA1138", VA = "0xDA1138")]
			set
			{
			}
		}

		[Token(Token = "0x1700014A")]
		public static KeyCode externalCameraSwitchKeyModifier
		{
			[Token(Token = "0x6000B73")]
			[Address(RVA = "0xDA120C", Offset = "0xDA120C", VA = "0xDA120C")]
			get
			{
				return default(KeyCode);
			}
			[Token(Token = "0x6000B74")]
			[Address(RVA = "0xDA12E4", Offset = "0xDA12E4", VA = "0xDA12E4")]
			set
			{
			}
		}

		[Token(Token = "0x1700014B")]
		public static bool activateOculusVRModule
		{
			[Token(Token = "0x6000B75")]
			[Address(RVA = "0xDA13B8", Offset = "0xDA13B8", VA = "0xDA13B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B76")]
			[Address(RVA = "0xDA1498", Offset = "0xDA1498", VA = "0xDA1498")]
			set
			{
			}
		}

		[Token(Token = "0x1700014C")]
		public static string oculusVRAndroidManifestPath
		{
			[Token(Token = "0x6000B77")]
			[Address(RVA = "0xDA1570", Offset = "0xDA1570", VA = "0xDA1570")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B78")]
			[Address(RVA = "0xDA1650", Offset = "0xDA1650", VA = "0xDA1650")]
			set
			{
			}
		}

		[Token(Token = "0x1700014D")]
		public static bool activateSteamVRModule
		{
			[Token(Token = "0x6000B79")]
			[Address(RVA = "0xDA1724", Offset = "0xDA1724", VA = "0xDA1724")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B7A")]
			[Address(RVA = "0xDA1804", Offset = "0xDA1804", VA = "0xDA1804")]
			set
			{
			}
		}

		[Token(Token = "0x1700014E")]
		public static bool activateSimulatorModule
		{
			[Token(Token = "0x6000B7B")]
			[Address(RVA = "0xDA18DC", Offset = "0xDA18DC", VA = "0xDA18DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B7C")]
			[Address(RVA = "0xDA19BC", Offset = "0xDA19BC", VA = "0xDA19BC")]
			set
			{
			}
		}

		[Token(Token = "0x1700014F")]
		public static bool enableSimulatorKeyboardMouseControl
		{
			[Token(Token = "0x6000B7D")]
			[Address(RVA = "0xDA1A94", Offset = "0xDA1A94", VA = "0xDA1A94")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B7E")]
			[Address(RVA = "0xDA1B74", Offset = "0xDA1B74", VA = "0xDA1B74")]
			set
			{
			}
		}

		[Token(Token = "0x17000150")]
		public static bool simulatorAutoTrackMainCamera
		{
			[Token(Token = "0x6000B7F")]
			[Address(RVA = "0xDA1C4C", Offset = "0xDA1C4C", VA = "0xDA1C4C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B80")]
			[Address(RVA = "0xDA1D2C", Offset = "0xDA1D2C", VA = "0xDA1D2C")]
			set
			{
			}
		}

		[Token(Token = "0x17000151")]
		public static bool simulateTrackpadTouch
		{
			[Token(Token = "0x6000B81")]
			[Address(RVA = "0xDA1E04", Offset = "0xDA1E04", VA = "0xDA1E04")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B82")]
			[Address(RVA = "0xDA1EE4", Offset = "0xDA1EE4", VA = "0xDA1EE4")]
			set
			{
			}
		}

		[Token(Token = "0x17000152")]
		public static float simulatorKeyMoveSpeed
		{
			[Token(Token = "0x6000B83")]
			[Address(RVA = "0xDA1FBC", Offset = "0xDA1FBC", VA = "0xDA1FBC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B84")]
			[Address(RVA = "0xDA2094", Offset = "0xDA2094", VA = "0xDA2094")]
			set
			{
			}
		}

		[Token(Token = "0x17000153")]
		public static float simulatorMouseRotateSpeed
		{
			[Token(Token = "0x6000B85")]
			[Address(RVA = "0xDA2168", Offset = "0xDA2168", VA = "0xDA2168")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B86")]
			[Address(RVA = "0xDA2244", Offset = "0xDA2244", VA = "0xDA2244")]
			set
			{
			}
		}

		[Token(Token = "0x17000154")]
		public static float simulatorKeyRotateSpeed
		{
			[Token(Token = "0x6000B87")]
			[Address(RVA = "0xDA2318", Offset = "0xDA2318", VA = "0xDA2318")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B88")]
			[Address(RVA = "0xDA23F4", Offset = "0xDA23F4", VA = "0xDA23F4")]
			set
			{
			}
		}

		[Token(Token = "0x17000155")]
		public static VRModuleDeviceModel simulatorLeftControllerModel
		{
			[Token(Token = "0x6000B89")]
			[Address(RVA = "0xDA24C8", Offset = "0xDA24C8", VA = "0xDA24C8")]
			get
			{
				return default(VRModuleDeviceModel);
			}
			[Token(Token = "0x6000B8A")]
			[Address(RVA = "0xDA25A0", Offset = "0xDA25A0", VA = "0xDA25A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000156")]
		public static VRModuleDeviceModel simulatorRightControllerModel
		{
			[Token(Token = "0x6000B8B")]
			[Address(RVA = "0xDA2674", Offset = "0xDA2674", VA = "0xDA2674")]
			get
			{
				return default(VRModuleDeviceModel);
			}
			[Token(Token = "0x6000B8C")]
			[Address(RVA = "0xDA274C", Offset = "0xDA274C", VA = "0xDA274C")]
			set
			{
			}
		}

		[Token(Token = "0x17000157")]
		public static VRModuleDeviceModel simulatorOtherModel
		{
			[Token(Token = "0x6000B8D")]
			[Address(RVA = "0xDA2820", Offset = "0xDA2820", VA = "0xDA2820")]
			get
			{
				return default(VRModuleDeviceModel);
			}
			[Token(Token = "0x6000B8E")]
			[Address(RVA = "0xDA28F8", Offset = "0xDA28F8", VA = "0xDA28F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000158")]
		public static bool activateUnityNativeVRModule
		{
			[Token(Token = "0x6000B8F")]
			[Address(RVA = "0xDA29CC", Offset = "0xDA29CC", VA = "0xDA29CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B90")]
			[Address(RVA = "0xDA2AAC", Offset = "0xDA2AAC", VA = "0xDA2AAC")]
			set
			{
			}
		}

		[Token(Token = "0x17000159")]
		public static bool activateUnityXRModule
		{
			[Token(Token = "0x6000B91")]
			[Address(RVA = "0xDA2B84", Offset = "0xDA2B84", VA = "0xDA2B84")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B92")]
			[Address(RVA = "0xDA2C64", Offset = "0xDA2C64", VA = "0xDA2C64")]
			set
			{
			}
		}

		[Token(Token = "0x1700015A")]
		public static bool activateWaveVRModule
		{
			[Token(Token = "0x6000B93")]
			[Address(RVA = "0xDA2D3C", Offset = "0xDA2D3C", VA = "0xDA2D3C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B94")]
			[Address(RVA = "0xDA2E1C", Offset = "0xDA2E1C", VA = "0xDA2E1C")]
			set
			{
			}
		}

		[Token(Token = "0x1700015B")]
		public static bool simulateWaveVR6DofController
		{
			[Token(Token = "0x6000B95")]
			[Address(RVA = "0xDA2EF4", Offset = "0xDA2EF4", VA = "0xDA2EF4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B96")]
			[Address(RVA = "0xDA2FD4", Offset = "0xDA2FD4", VA = "0xDA2FD4")]
			set
			{
			}
		}

		[Token(Token = "0x1700015C")]
		public static bool waveVRAddVirtualArmTo3DoFController
		{
			[Token(Token = "0x6000B97")]
			[Address(RVA = "0xDA30AC", Offset = "0xDA30AC", VA = "0xDA30AC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B98")]
			[Address(RVA = "0xDA318C", Offset = "0xDA318C", VA = "0xDA318C")]
			set
			{
			}
		}

		[Token(Token = "0x1700015D")]
		public static Vector3 waveVRVirtualNeckPosition
		{
			[Token(Token = "0x6000B99")]
			[Address(RVA = "0xDA3264", Offset = "0xDA3264", VA = "0xDA3264")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000B9A")]
			[Address(RVA = "0xDA3378", Offset = "0xDA3378", VA = "0xDA3378")]
			set
			{
			}
		}

		[Token(Token = "0x1700015E")]
		public static Vector3 waveVRVirtualElbowRestPosition
		{
			[Token(Token = "0x6000B9B")]
			[Address(RVA = "0xDA3460", Offset = "0xDA3460", VA = "0xDA3460")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000B9C")]
			[Address(RVA = "0xDA3574", Offset = "0xDA3574", VA = "0xDA3574")]
			set
			{
			}
		}

		[Token(Token = "0x1700015F")]
		public static Vector3 waveVRVirtualArmExtensionOffset
		{
			[Token(Token = "0x6000B9D")]
			[Address(RVA = "0xDA365C", Offset = "0xDA365C", VA = "0xDA365C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000B9E")]
			[Address(RVA = "0xDA3770", Offset = "0xDA3770", VA = "0xDA3770")]
			set
			{
			}
		}

		[Token(Token = "0x17000160")]
		public static Vector3 waveVRVirtualWristRestPosition
		{
			[Token(Token = "0x6000B9F")]
			[Address(RVA = "0xDA3858", Offset = "0xDA3858", VA = "0xDA3858")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000BA0")]
			[Address(RVA = "0xDA396C", Offset = "0xDA396C", VA = "0xDA396C")]
			set
			{
			}
		}

		[Token(Token = "0x17000161")]
		public static Vector3 waveVRVirtualHandRestPosition
		{
			[Token(Token = "0x6000BA1")]
			[Address(RVA = "0xDA3A54", Offset = "0xDA3A54", VA = "0xDA3A54")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000BA2")]
			[Address(RVA = "0xDA3B68", Offset = "0xDA3B68", VA = "0xDA3B68")]
			set
			{
			}
		}

		[Token(Token = "0x17000162")]
		public static string waveVRAndroidManifestPath
		{
			[Token(Token = "0x6000BA3")]
			[Address(RVA = "0xDA3C50", Offset = "0xDA3C50", VA = "0xDA3C50")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BA4")]
			[Address(RVA = "0xDA3D38", Offset = "0xDA3D38", VA = "0xDA3D38")]
			set
			{
			}
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0xD9FB90", Offset = "0xD9FB90", VA = "0xD9FB90")]
		public static void LoadFromResource([Optional] string path)
		{
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0xD9FCD4", Offset = "0xD9FCD4", VA = "0xD9FCD4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0xDA3E0C", Offset = "0xDA3E0C", VA = "0xDA3E0C")]
		public VIUSettings()
		{
		}
	}
	[Token(Token = "0x200013E")]
	public static class VIUVersion
	{
		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Version current;
	}
	[Token(Token = "0x200013F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x925AA4", Offset = "0x925AA4")]
	public class ViveColliderEventCaster : ColliderEventCaster, IViveRoleComponent
	{
		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private ViveRoleProperty m_viveRole;

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		[AttributeAttribute(Name = "CustomOrderedEnumAttribute", RVA = "0x92B200", Offset = "0x92B200")]
		private ControllerButton m_buttonTrigger;

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		[AttributeAttribute(Name = "CustomOrderedEnumAttribute", RVA = "0x92B23C", Offset = "0x92B23C")]
		private ControllerButton m_buttonPadOrStick;

		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[AttributeAttribute(Name = "CustomOrderedEnumAttribute", RVA = "0x92B278", Offset = "0x92B278")]
		private ControllerButton m_buttonGripOrHandTrigger;

		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		[AttributeAttribute(Name = "CustomOrderedEnumAttribute", RVA = "0x92B2B4", Offset = "0x92B2B4")]
		private ControllerButton m_buttonFunctionKey;

		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x92B2F0", Offset = "0x92B2F0")]
		[AttributeAttribute(Name = "FlagsFromEnumAttribute", RVA = "0x92B2F0", Offset = "0x92B2F0")]
		private ulong m_additionalButtons;

		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private ScrollType m_scrollType;

		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private Vector2 m_scrollDeltaScale;

		[Token(Token = "0x17000163")]
		public ViveRoleProperty viveRole
		{
			[Token(Token = "0x6000BA8")]
			[Address(RVA = "0xDA4F58", Offset = "0xDA4F58", VA = "0xDA4F58", Slot = "14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000164")]
		public ScrollType scrollType
		{
			[Token(Token = "0x6000BA9")]
			[Address(RVA = "0xDA5538", Offset = "0xDA5538", VA = "0xDA5538")]
			get
			{
				return default(ScrollType);
			}
			[Token(Token = "0x6000BAA")]
			[Address(RVA = "0xDA5540", Offset = "0xDA5540", VA = "0xDA5540")]
			set
			{
			}
		}

		[Token(Token = "0x17000165")]
		public Vector2 scrollDeltaScale
		{
			[Token(Token = "0x6000BAB")]
			[Address(RVA = "0xDA5548", Offset = "0xDA5548", VA = "0xDA5548")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000BAC")]
			[Address(RVA = "0xDA5550", Offset = "0xDA5550", VA = "0xDA5550")]
			set
			{
			}
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0xDA5558", Offset = "0xDA5558", VA = "0xDA5558")]
		protected void FilterOutAssignedButton()
		{
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0xDA5614", Offset = "0xDA5614", VA = "0xDA5614", Slot = "15")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0xDA593C", Offset = "0xDA593C", VA = "0xDA593C")]
		public ViveColliderEventCaster()
		{
		}
	}
	[Token(Token = "0x2000140")]
	public static class ViveColliderEventDataExtension
	{
		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0xDA5A1C", Offset = "0xDA5A1C", VA = "0xDA5A1C")]
		public static bool IsViveButton(this ColliderButtonEventData eventData, HandRole hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB1")]
		public static bool IsViveButtonEx<TRole>(this ColliderButtonEventData eventData, TRole role)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0xDA5AE8", Offset = "0xDA5AE8", VA = "0xDA5AE8")]
		public static bool IsViveButton(this ColliderButtonEventData eventData, ControllerButton button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0xDA5B80", Offset = "0xDA5B80", VA = "0xDA5B80")]
		public static bool IsViveButton(this ColliderButtonEventData eventData, HandRole hand, ControllerButton button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB4")]
		public static bool IsViveButtonEx<TRole>(this ColliderButtonEventData eventData, TRole role, ControllerButton button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0xDA5C58", Offset = "0xDA5C58", VA = "0xDA5C58")]
		public static bool TryGetViveButtonEventData(this ColliderButtonEventData eventData, out ViveColliderButtonEventData viveEventData)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0xDA5CF0", Offset = "0xDA5CF0", VA = "0xDA5CF0")]
		public static bool IsViveTriggerAxis(this ColliderAxisEventData eventData)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0xDA5D70", Offset = "0xDA5D70", VA = "0xDA5D70")]
		public static bool IsViveTriggerAxis(this ColliderAxisEventData eventData, HandRole hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB8")]
		public static bool IsViveTriggerAxisEx<TRole>(this ColliderAxisEventData eventData, TRole role)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0xDA5E68", Offset = "0xDA5E68", VA = "0xDA5E68")]
		public static bool TryGetViveTriggerAxisEventData(this ColliderAxisEventData eventData, out ViveColliderTriggerAxisEventData viveEventData)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0xDA5F00", Offset = "0xDA5F00", VA = "0xDA5F00")]
		public static bool IsVivePadAxis(this ColliderAxisEventData eventData)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0xDA5F80", Offset = "0xDA5F80", VA = "0xDA5F80")]
		public static bool IsVivePadAxis(this ColliderAxisEventData eventData, HandRole hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BBC")]
		public static bool IsVivePadAxisEx<TRole>(this ColliderAxisEventData eventData, TRole role)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0xDA609C", Offset = "0xDA609C", VA = "0xDA609C")]
		public static bool TryGetVivePadAxisEventData(this ColliderAxisEventData eventData, out ViveColliderPadAxisEventData viveEventData)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000141")]
	public class ViveColliderButtonEventData : ColliderButtonEventData
	{
		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92B3A8", Offset = "0x92B3A8")]
		private ViveColliderEventCaster <viveEventCaster>k__BackingField;

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92B3B8", Offset = "0x92B3B8")]
		private ControllerButton <viveButton>k__BackingField;

		[Token(Token = "0x17000166")]
		public ViveColliderEventCaster viveEventCaster
		{
			[Token(Token = "0x6000BBE")]
			[Address(RVA = "0xDA4F0C", Offset = "0xDA4F0C", VA = "0xDA4F0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939E24", Offset = "0x939E24")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BBF")]
			[Address(RVA = "0xDA4F14", Offset = "0xDA4F14", VA = "0xDA4F14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939E34", Offset = "0x939E34")]
			private set
			{
			}
		}

		[Token(Token = "0x17000167")]
		public ControllerButton viveButton
		{
			[Token(Token = "0x6000BC0")]
			[Address(RVA = "0xDA4F1C", Offset = "0xDA4F1C", VA = "0xDA4F1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939E44", Offset = "0x939E44")]
			get
			{
				return default(ControllerButton);
			}
			[Token(Token = "0x6000BC1")]
			[Address(RVA = "0xDA4F24", Offset = "0xDA4F24", VA = "0xDA4F24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939E54", Offset = "0x939E54")]
			private set
			{
			}
		}

		[Token(Token = "0x17000168")]
		public ViveRoleProperty viveRole
		{
			[Token(Token = "0x6000BC2")]
			[Address(RVA = "0xDA4F2C", Offset = "0xDA4F2C", VA = "0xDA4F2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0xDA4F60", Offset = "0xDA4F60", VA = "0xDA4F60")]
		public ViveColliderButtonEventData(ViveColliderEventCaster eventCaster, ControllerButton viveButton, InputButton button)
		{
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0xDA4FA0", Offset = "0xDA4FA0", VA = "0xDA4FA0", Slot = "7")]
		public override bool GetPress()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0xDA51B0", Offset = "0xDA51B0", VA = "0xDA51B0", Slot = "8")]
		public override bool GetPressDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0xDA5374", Offset = "0xDA5374", VA = "0xDA5374", Slot = "9")]
		public override bool GetPressUp()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000142")]
	public class ViveColliderTriggerAxisEventData : ColliderAxisEventData
	{
		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92B3C8", Offset = "0x92B3C8")]
		private ViveColliderEventCaster <viveEventCaster>k__BackingField;

		[Token(Token = "0x17000169")]
		public ViveColliderEventCaster viveEventCaster
		{
			[Token(Token = "0x6000BC7")]
			[Address(RVA = "0xDA6368", Offset = "0xDA6368", VA = "0xDA6368")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939E64", Offset = "0x939E64")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BC8")]
			[Address(RVA = "0xDA6370", Offset = "0xDA6370", VA = "0xDA6370")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939E74", Offset = "0x939E74")]
			private set
			{
			}
		}

		[Token(Token = "0x1700016A")]
		public ViveRoleProperty viveRole
		{
			[Token(Token = "0x6000BC9")]
			[Address(RVA = "0xDA5E3C", Offset = "0xDA5E3C", VA = "0xDA5E3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0xDA5908", Offset = "0xDA5908", VA = "0xDA5908")]
		public ViveColliderTriggerAxisEventData(ViveColliderEventCaster eventCaster)
		{
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0xDA6378", Offset = "0xDA6378", VA = "0xDA6378", Slot = "7")]
		public override Vector4 GetDelta()
		{
			return default(Vector4);
		}
	}
	[Token(Token = "0x2000143")]
	public class ViveColliderPadAxisEventData : ColliderAxisEventData
	{
		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92B3D8", Offset = "0x92B3D8")]
		private ViveColliderEventCaster <viveEventCaster>k__BackingField;

		[Token(Token = "0x1700016B")]
		public ViveColliderEventCaster viveEventCaster
		{
			[Token(Token = "0x6000BCC")]
			[Address(RVA = "0xDA6134", Offset = "0xDA6134", VA = "0xDA6134")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939E84", Offset = "0x939E84")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BCD")]
			[Address(RVA = "0xDA613C", Offset = "0xDA613C", VA = "0xDA613C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939E94", Offset = "0x939E94")]
			private set
			{
			}
		}

		[Token(Token = "0x1700016C")]
		public ViveRoleProperty viveRole
		{
			[Token(Token = "0x6000BCE")]
			[Address(RVA = "0xDA6144", Offset = "0xDA6144", VA = "0xDA6144")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0xDA58D4", Offset = "0xDA58D4", VA = "0xDA58D4")]
		public ViveColliderPadAxisEventData(ViveColliderEventCaster eventCaster)
		{
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0xDA6170", Offset = "0xDA6170", VA = "0xDA6170", Slot = "7")]
		public override Vector4 GetDelta()
		{
			return default(Vector4);
		}
	}
	[Token(Token = "0x2000144")]
	[DisallowMultipleComponent]
	public class ViveInput : SingletonBehaviour<ViveInput>
	{
		[Token(Token = "0x20004E2")]
		public delegate void RoleEventListener<TRole>(TRole role, ControllerButton button, ButtonEventType eventType);

		[Token(Token = "0x20004E3")]
		public delegate void RoleValueEventListener(Type roleType, int roleValue, ControllerButton button, ButtonEventType eventType);

		[Token(Token = "0x20004E4")]
		private interface ICtrlState
		{
			[Token(Token = "0x60023B2")]
			bool Update();

			[Token(Token = "0x60023B3")]
			void AddListener(ControllerButton button, Action listener, ButtonEventType type = ButtonEventType.Click);

			[Token(Token = "0x60023B4")]
			void RemoveListener(ControllerButton button, Action listener, ButtonEventType type = ButtonEventType.Click);

			[Token(Token = "0x60023B5")]
			void AddListener(ControllerButton button, RoleValueEventListener listener, ButtonEventType type = ButtonEventType.Click);

			[Token(Token = "0x60023B6")]
			void RemoveListener(ControllerButton button, RoleValueEventListener listener, ButtonEventType type = ButtonEventType.Click);

			[Token(Token = "0x60023B7")]
			bool GetPress(ControllerButton button, bool usePrevState = false);

			[Token(Token = "0x60023B8")]
			bool GetPressDown(ControllerButton button);

			[Token(Token = "0x60023B9")]
			bool GetPressUp(ControllerButton button);

			[Token(Token = "0x60023BA")]
			float LastPressDownTime(ControllerButton button);

			[Token(Token = "0x60023BB")]
			int ClickCount(ControllerButton button);

			[Token(Token = "0x60023BC")]
			float GetAxis(ControllerAxis axis, bool usePrevState = false);

			[Token(Token = "0x60023BD")]
			Vector2 GetPadAxis(bool usePrevState = false);

			[Token(Token = "0x60023BE")]
			Vector2 GetPadPressVector();

			[Token(Token = "0x60023BF")]
			Vector2 GetPadTouchVector();

			[Token(Token = "0x60023C0")]
			Vector2 GetScrollDelta(ScrollType scrollType, Vector2 scale, ControllerAxis xAxis = ControllerAxis.PadX, ControllerAxis yAxis = ControllerAxis.PadY);
		}

		[Token(Token = "0x20004E5")]
		private class CtrlState : ICtrlState
		{
			[Token(Token = "0x60023C1")]
			[Address(RVA = "0xDAA9FC", Offset = "0xDAA9FC", VA = "0xDAA9FC", Slot = "19")]
			public virtual bool Update()
			{
				return default(bool);
			}

			[Token(Token = "0x60023C2")]
			[Address(RVA = "0xDAAA04", Offset = "0xDAAA04", VA = "0xDAAA04", Slot = "20")]
			public virtual void AddListener(ControllerButton button, Action listener, ButtonEventType type = ButtonEventType.Click)
			{
			}

			[Token(Token = "0x60023C3")]
			[Address(RVA = "0xDAAA08", Offset = "0xDAAA08", VA = "0xDAAA08", Slot = "21")]
			public virtual void RemoveListener(ControllerButton button, Action listener, ButtonEventType type = ButtonEventType.Click)
			{
			}

			[Token(Token = "0x60023C4")]
			[Address(RVA = "0xDAAA0C", Offset = "0xDAAA0C", VA = "0xDAAA0C", Slot = "22")]
			public virtual void AddListener(ControllerButton button, RoleValueEventListener listener, ButtonEventType type = ButtonEventType.Click)
			{
			}

			[Token(Token = "0x60023C5")]
			[Address(RVA = "0xDAAA10", Offset = "0xDAAA10", VA = "0xDAAA10", Slot = "23")]
			public virtual void RemoveListener(ControllerButton button, RoleValueEventListener listener, ButtonEventType type = ButtonEventType.Click)
			{
			}

			[Token(Token = "0x60023C6")]
			[Address(RVA = "0xDAAA14", Offset = "0xDAAA14", VA = "0xDAAA14", Slot = "24")]
			public virtual bool GetPress(ControllerButton button, bool usePrevState = false)
			{
				return default(bool);
			}

			[Token(Token = "0x60023C7")]
			[Address(RVA = "0xDAAA1C", Offset = "0xDAAA1C", VA = "0xDAAA1C", Slot = "25")]
			public virtual bool GetPressDown(ControllerButton button)
			{
				return default(bool);
			}

			[Token(Token = "0x60023C8")]
			[Address(RVA = "0xDAAA24", Offset = "0xDAAA24", VA = "0xDAAA24", Slot = "26")]
			public virtual bool GetPressUp(ControllerButton button)
			{
				return default(bool);
			}

			[Token(Token = "0x60023C9")]
			[Address(RVA = "0xDAAA2C", Offset = "0xDAAA2C", VA = "0xDAAA2C", Slot = "27")]
			public virtual float LastPressDownTime(ControllerButton button)
			{
				return default(float);
			}

			[Token(Token = "0x60023CA")]
			[Address(RVA = "0xDAAA34", Offset = "0xDAAA34", VA = "0xDAAA34", Slot = "28")]
			public virtual int ClickCount(ControllerButton button)
			{
				return default(int);
			}

			[Token(Token = "0x60023CB")]
			[Address(RVA = "0xDAAA3C", Offset = "0xDAAA3C", VA = "0xDAAA3C", Slot = "29")]
			public virtual float GetAxis(ControllerAxis axis, bool usePrevState = false)
			{
				return default(float);
			}

			[Token(Token = "0x60023CC")]
			[Address(RVA = "0xDAAA44", Offset = "0xDAAA44", VA = "0xDAAA44", Slot = "30")]
			public virtual Vector2 GetPadAxis(bool usePrevState = false)
			{
				return default(Vector2);
			}

			[Token(Token = "0x60023CD")]
			[Address(RVA = "0xDAAAA4", Offset = "0xDAAAA4", VA = "0xDAAAA4", Slot = "31")]
			public virtual Vector2 GetPadPressVector()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60023CE")]
			[Address(RVA = "0xDAAB04", Offset = "0xDAAB04", VA = "0xDAAB04", Slot = "32")]
			public virtual Vector2 GetPadTouchVector()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60023CF")]
			[Address(RVA = "0xDAAB64", Offset = "0xDAAB64", VA = "0xDAAB64", Slot = "33")]
			public virtual Vector2 GetScrollDelta(ScrollType scrollType, Vector2 scale, ControllerAxis xAxis = ControllerAxis.PadX, ControllerAxis yAxis = ControllerAxis.PadY)
			{
				return default(Vector2);
			}

			[Token(Token = "0x60023D0")]
			[Address(RVA = "0xDA6ACC", Offset = "0xDA6ACC", VA = "0xDA6ACC")]
			public CtrlState()
			{
			}
		}

		[Token(Token = "0x20004E6")]
		private sealed class RCtrlState : CtrlState
		{
			[Token(Token = "0x4001E7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly ViveRole.IMap m_map;

			[Token(Token = "0x4001E7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public readonly int m_roleValue;

			[Token(Token = "0x4001E80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public readonly Type m_roleEnumType;

			[Token(Token = "0x4001E81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int updatedFrameCount;

			[Token(Token = "0x4001E82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private uint prevDeviceIndex;

			[Token(Token = "0x4001E83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private ulong prevButtonPressed;

			[Token(Token = "0x4001E84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private ulong currButtonPressed;

			[Token(Token = "0x4001E85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private VRModuleInput2DType currentInput2DType;

			[Token(Token = "0x4001E86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private readonly float[] prevAxisValue;

			[Token(Token = "0x4001E87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private readonly float[] currAxisValue;

			[Token(Token = "0x4001E88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private readonly float[] lastPressDownTime;

			[Token(Token = "0x4001E89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private readonly int[] clickCount;

			[Token(Token = "0x4001E8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private Action[][] listeners;

			[Token(Token = "0x4001E8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private RoleValueEventListener[][] typeListeners;

			[Token(Token = "0x4001E8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private Vector2 padDownAxis;

			[Token(Token = "0x4001E8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private Vector2 padTouchDownAxis;

			[Token(Token = "0x4001E8E")]
			private const float hairDelta = 0.1f;

			[Token(Token = "0x4001E8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private float hairTriggerLimit;

			[Token(Token = "0x60023D1")]
			[Address(RVA = "0xDA7638", Offset = "0xDA7638", VA = "0xDA7638")]
			public RCtrlState(Type roleEnumType, int roleValue)
			{
			}

			[Token(Token = "0x60023D2")]
			[Address(RVA = "0xDAAC28", Offset = "0xDAAC28", VA = "0xDAAC28", Slot = "19")]
			public override bool Update()
			{
				return default(bool);
			}

			[Token(Token = "0x60023D3")]
			[Address(RVA = "0xDACF70", Offset = "0xDACF70", VA = "0xDACF70")]
			private void TryInvokeListener(ControllerButton button, ButtonEventType type)
			{
			}

			[Token(Token = "0x60023D4")]
			[Address(RVA = "0xDAD244", Offset = "0xDAD244", VA = "0xDAD244", Slot = "20")]
			public override void AddListener(ControllerButton button, Action listener, ButtonEventType type = ButtonEventType.Click)
			{
			}

			[Token(Token = "0x60023D5")]
			[Address(RVA = "0xDAD5C0", Offset = "0xDAD5C0", VA = "0xDAD5C0", Slot = "21")]
			public override void RemoveListener(ControllerButton button, Action listener, ButtonEventType type = ButtonEventType.Click)
			{
			}

			[Token(Token = "0x60023D6")]
			[Address(RVA = "0xDAD0D0", Offset = "0xDAD0D0", VA = "0xDAD0D0")]
			private void TryInvokeTypeListener(ControllerButton button, ButtonEventType type)
			{
			}

			[Token(Token = "0x60023D7")]
			[Address(RVA = "0xDAE008", Offset = "0xDAE008", VA = "0xDAE008", Slot = "22")]
			public override void AddListener(ControllerButton button, RoleValueEventListener listener, ButtonEventType type = ButtonEventType.Click)
			{
			}

			[Token(Token = "0x60023D8")]
			[Address(RVA = "0xDAE384", Offset = "0xDAE384", VA = "0xDAE384", Slot = "23")]
			public override void RemoveListener(ControllerButton button, RoleValueEventListener listener, ButtonEventType type = ButtonEventType.Click)
			{
			}

			[Token(Token = "0x60023D9")]
			[Address(RVA = "0xDAE5C4", Offset = "0xDAE5C4", VA = "0xDAE5C4", Slot = "24")]
			public override bool GetPress(ControllerButton button, bool usePrevState = false)
			{
				return default(bool);
			}

			[Token(Token = "0x60023DA")]
			[Address(RVA = "0xDAE694", Offset = "0xDAE694", VA = "0xDAE694", Slot = "25")]
			public override bool GetPressDown(ControllerButton button)
			{
				return default(bool);
			}

			[Token(Token = "0x60023DB")]
			[Address(RVA = "0xDAE780", Offset = "0xDAE780", VA = "0xDAE780", Slot = "26")]
			public override bool GetPressUp(ControllerButton button)
			{
				return default(bool);
			}

			[Token(Token = "0x60023DC")]
			[Address(RVA = "0xDAE86C", Offset = "0xDAE86C", VA = "0xDAE86C", Slot = "27")]
			public override float LastPressDownTime(ControllerButton button)
			{
				return default(float);
			}

			[Token(Token = "0x60023DD")]
			[Address(RVA = "0xDAE920", Offset = "0xDAE920", VA = "0xDAE920", Slot = "28")]
			public override int ClickCount(ControllerButton button)
			{
				return default(int);
			}

			[Token(Token = "0x60023DE")]
			[Address(RVA = "0xDAE9D8", Offset = "0xDAE9D8", VA = "0xDAE9D8", Slot = "29")]
			public override float GetAxis(ControllerAxis axis, bool usePrevState = false)
			{
				return default(float);
			}

			[Token(Token = "0x60023DF")]
			[Address(RVA = "0xDAEAA0", Offset = "0xDAEAA0", VA = "0xDAEAA0", Slot = "30")]
			public override Vector2 GetPadAxis(bool usePrevState = false)
			{
				return default(Vector2);
			}

			[Token(Token = "0x60023E0")]
			[Address(RVA = "0xDAEB6C", Offset = "0xDAEB6C", VA = "0xDAEB6C", Slot = "31")]
			public override Vector2 GetPadPressVector()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60023E1")]
			[Address(RVA = "0xDAEC6C", Offset = "0xDAEC6C", VA = "0xDAEC6C", Slot = "32")]
			public override Vector2 GetPadTouchVector()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60023E2")]
			[Address(RVA = "0xDAED6C", Offset = "0xDAED6C", VA = "0xDAED6C", Slot = "33")]
			public override Vector2 GetScrollDelta(ScrollType scrollType, Vector2 scale, ControllerAxis xAxis = ControllerAxis.PadX, ControllerAxis yAxis = ControllerAxis.PadY)
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x20004E7")]
		private interface ICtrlState<TRole> : ICtrlState
		{
			[Token(Token = "0x60023E3")]
			void AddListener(ControllerButton button, RoleEventListener<TRole> listener, ButtonEventType type = ButtonEventType.Click);

			[Token(Token = "0x60023E4")]
			void RemoveListener(ControllerButton button, RoleEventListener<TRole> listener, ButtonEventType type = ButtonEventType.Click);
		}

		[Token(Token = "0x20004E8")]
		private class GCtrlState<TRole> : ICtrlState<TRole>, ICtrlState
		{
			[Token(Token = "0x60023E5")]
			public virtual bool Update()
			{
				return default(bool);
			}

			[Token(Token = "0x60023E6")]
			public virtual void AddListener(ControllerButton button, Action listener, ButtonEventType type = ButtonEventType.Click)
			{
			}

			[Token(Token = "0x60023E7")]
			public virtual void RemoveListener(ControllerButton button, Action listener, ButtonEventType type = ButtonEventType.Click)
			{
			}

			[Token(Token = "0x60023E8")]
			public virtual void AddListener(ControllerButton button, RoleValueEventListener listener, ButtonEventType type = ButtonEventType.Click)
			{
			}

			[Token(Token = "0x60023E9")]
			public virtual void RemoveListener(ControllerButton button, RoleValueEventListener listener, ButtonEventType type = ButtonEventType.Click)
			{
			}

			[Token(Token = "0x60023EA")]
			public virtual bool GetPress(ControllerButton button, bool usePrevState = false)
			{
				return default(bool);
			}

			[Token(Token = "0x60023EB")]
			public virtual bool GetPressDown(ControllerButton button)
			{
				return default(bool);
			}

			[Token(Token = "0x60023EC")]
			public virtual bool GetPressUp(ControllerButton button)
			{
				return default(bool);
			}

			[Token(Token = "0x60023ED")]
			public virtual float LastPressDownTime(ControllerButton button)
			{
				return default(float);
			}

			[Token(Token = "0x60023EE")]
			public virtual int ClickCount(ControllerButton button)
			{
				return default(int);
			}

			[Token(Token = "0x60023EF")]
			public virtual float GetAxis(ControllerAxis axis, bool usePrevState = false)
			{
				return default(float);
			}

			[Token(Token = "0x60023F0")]
			public virtual Vector2 GetPadAxis(bool usePrevState = false)
			{
				return default(Vector2);
			}

			[Token(Token = "0x60023F1")]
			public virtual Vector2 GetPadPressVector()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60023F2")]
			public virtual Vector2 GetPadTouchVector()
			{
				return default(Vector2);
			}

			[Token(Token = "0x60023F3")]
			public virtual Vector2 GetScrollDelta(ScrollType scrollType, Vector2 scale, ControllerAxis xAxis = ControllerAxis.PadX, ControllerAxis yAxis = ControllerAxis.PadY)
			{
				return default(Vector2);
			}

			[Token(Token = "0x60023F4")]
			public virtual void AddListener(ControllerButton button, RoleEventListener<TRole> listener, ButtonEventType type = ButtonEventType.Click)
			{
			}

			[Token(Token = "0x60023F5")]
			public virtual void RemoveListener(ControllerButton button, RoleEventListener<TRole> listener, ButtonEventType type = ButtonEventType.Click)
			{
			}

			[Token(Token = "0x60023F6")]
			protected virtual void InvokeEvent(ControllerButton button)
			{
			}

			[Token(Token = "0x60023F7")]
			protected virtual void TryInvokeListener(ControllerButton button, ButtonEventType type)
			{
			}

			[Token(Token = "0x60023F8")]
			public GCtrlState()
			{
			}
		}

		[Token(Token = "0x20004E9")]
		private sealed class RGCtrolState<TRole> : GCtrlState<TRole>
		{
			[Token(Token = "0x4001E90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly GCtrlState<TRole> s_defaultState;

			[Token(Token = "0x4001E91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static RGCtrolState<TRole>[] s_roleStates;

			[Token(Token = "0x4001E92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly ICtrlState m_state;

			[Token(Token = "0x4001E93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly TRole m_role;

			[Token(Token = "0x4001E94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private RoleEventListener<TRole>[][] listeners;

			[Token(Token = "0x60023F9")]
			public RGCtrolState(TRole role)
			{
			}

			[Token(Token = "0x60023FA")]
			public override bool Update()
			{
				return default(bool);
			}

			[Token(Token = "0x60023FB")]
			public override void AddListener(ControllerButton button, Action listener, ButtonEventType type = ButtonEventType.Click)
			{
			}

			[Token(Token = "0x60023FC")]
			public override void RemoveListener(ControllerButton button, Action listener, ButtonEventType type = ButtonEventType.Click)
			{
			}

			[Token(Token = "0x60023FD")]
			public override void AddListener(ControllerButton button, RoleValueEventListener listener, ButtonEventType type = ButtonEventType.Click)
			{
			}

			[Token(Token = "0x60023FE")]
			public override void RemoveListener(ControllerButton button, RoleValueEventListener listener, ButtonEventType type = ButtonEventType.Click)
			{
			}

			[Token(Token = "0x60023FF")]
			public override bool GetPress(ControllerButton button, bool usePrevState = false)
			{
				return default(bool);
			}

			[Token(Token = "0x6002400")]
			public override bool GetPressDown(ControllerButton button)
			{
				return default(bool);
			}

			[Token(Token = "0x6002401")]
			public override bool GetPressUp(ControllerButton button)
			{
				return default(bool);
			}

			[Token(Token = "0x6002402")]
			public override float LastPressDownTime(ControllerButton button)
			{
				return default(float);
			}

			[Token(Token = "0x6002403")]
			public override int ClickCount(ControllerButton button)
			{
				return default(int);
			}

			[Token(Token = "0x6002404")]
			public override float GetAxis(ControllerAxis axis, bool usePrevState = false)
			{
				return default(float);
			}

			[Token(Token = "0x6002405")]
			public override Vector2 GetPadAxis(bool usePrevState = false)
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002406")]
			public override Vector2 GetPadPressVector()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002407")]
			public override Vector2 GetPadTouchVector()
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002408")]
			public override Vector2 GetScrollDelta(ScrollType scrollType, Vector2 scale, ControllerAxis xAxis = ControllerAxis.PadX, ControllerAxis yAxis = ControllerAxis.PadY)
			{
				return default(Vector2);
			}

			[Token(Token = "0x6002409")]
			protected override void TryInvokeListener(ControllerButton button, ButtonEventType type)
			{
			}

			[Token(Token = "0x600240A")]
			public override void AddListener(ControllerButton button, RoleEventListener<TRole> listener, ButtonEventType type = ButtonEventType.Click)
			{
			}

			[Token(Token = "0x600240B")]
			public override void RemoveListener(ControllerButton button, RoleEventListener<TRole> listener, ButtonEventType type = ButtonEventType.Click)
			{
			}
		}

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int CONTROLLER_BUTTON_COUNT;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly int CONTROLLER_AXIS_COUNT;

		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int BUTTON_EVENT_COUNT;

		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly CtrlState s_defaultState;

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly IndexedTable<Type, ICtrlState[]> s_roleStateTable;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static UnityAction s_onUpdate;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_clickInterval;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_dontDestroyOnLoad;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent m_onUpdate;

		[Token(Token = "0x1700016D")]
		public static float clickInterval
		{
			[Token(Token = "0x6000BD1")]
			[Address(RVA = "0xDA65D8", Offset = "0xDA65D8", VA = "0xDA65D8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000BD2")]
			[Address(RVA = "0xDA6654", Offset = "0xDA6654", VA = "0xDA6654")]
			set
			{
			}
		}

		[Token(Token = "0x14000024")]
		public static event UnityAction onUpdate
		{
			[Token(Token = "0x6000BD3")]
			[Address(RVA = "0xDA6718", Offset = "0xDA6718", VA = "0xDA6718")]
			add
			{
			}
			[Token(Token = "0x6000BD4")]
			[Address(RVA = "0xDA6808", Offset = "0xDA6808", VA = "0xDA6808")]
			remove
			{
			}
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0xDA68F8", Offset = "0xDA68F8", VA = "0xDA68F8")]
		static ViveInput()
		{
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0xDA6AD4", Offset = "0xDA6AD4", VA = "0xDA6AD4", Slot = "4")]
		protected override void OnSingletonBehaviourInitialized()
		{
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0xDA6BC8", Offset = "0xDA6BC8", VA = "0xDA6BC8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0xDA6E40", Offset = "0xDA6E40", VA = "0xDA6E40")]
		private static bool IsValidButton(ControllerButton button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0xDA6EC0", Offset = "0xDA6EC0", VA = "0xDA6EC0")]
		private static bool IsValidAxis(ControllerAxis axis)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0xDA6F40", Offset = "0xDA6F40", VA = "0xDA6F40")]
		private static ICtrlState GetState(Type roleType, int roleValue)
		{
			return null;
		}

		[Token(Token = "0x6000BDB")]
		private static ICtrlState<TRole> GetState<TRole>(TRole role)
		{
			return null;
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0xDA7768", Offset = "0xDA7768", VA = "0xDA7768")]
		public static bool GetPress(HandRole role, ControllerButton button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0xDA77E8", Offset = "0xDA77E8", VA = "0xDA77E8")]
		public static bool GetPressDown(HandRole role, ControllerButton button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0xDA7868", Offset = "0xDA7868", VA = "0xDA7868")]
		public static bool GetPressUp(HandRole role, ControllerButton button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0xDA78E8", Offset = "0xDA78E8", VA = "0xDA78E8")]
		public static float LastPressDownTime(HandRole role, ControllerButton button)
		{
			return default(float);
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0xDA7968", Offset = "0xDA7968", VA = "0xDA7968")]
		public static int ClickCount(HandRole role, ControllerButton button)
		{
			return default(int);
		}

		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0xDA79E8", Offset = "0xDA79E8", VA = "0xDA79E8")]
		public static float GetAxis(HandRole role, ControllerAxis axis, bool usePrevState = false)
		{
			return default(float);
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0xDA7A70", Offset = "0xDA7A70", VA = "0xDA7A70")]
		public static float GetTriggerValue(HandRole role, bool usePrevState = false)
		{
			return default(float);
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0xDA7AF0", Offset = "0xDA7AF0", VA = "0xDA7AF0")]
		public static Vector2 GetPadAxis(HandRole role, bool usePrevState = false)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0xDA7B70", Offset = "0xDA7B70", VA = "0xDA7B70")]
		public static Vector2 GetPadPressAxis(HandRole role)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0xDA7BE0", Offset = "0xDA7BE0", VA = "0xDA7BE0")]
		public static Vector2 GetPadTouchAxis(HandRole role)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0xDA7C50", Offset = "0xDA7C50", VA = "0xDA7C50")]
		public static Vector2 GetPadPressVector(HandRole role)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0xDA7CC0", Offset = "0xDA7CC0", VA = "0xDA7CC0")]
		public static Vector2 GetPadTouchVector(HandRole role)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0xDA7D30", Offset = "0xDA7D30", VA = "0xDA7D30")]
		public static Vector2 GetPadPressDelta(HandRole role)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0xDA7DA0", Offset = "0xDA7DA0", VA = "0xDA7DA0")]
		public static Vector2 GetPadTouchDelta(HandRole role)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0xDA7E10", Offset = "0xDA7E10", VA = "0xDA7E10")]
		public static Vector2 GetScrollDelta(HandRole role, ScrollType scrollType, Vector2 scale, ControllerAxis xAxis = ControllerAxis.PadX, ControllerAxis yAxis = ControllerAxis.PadY)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0xDA7EC0", Offset = "0xDA7EC0", VA = "0xDA7EC0")]
		public static void AddPress(HandRole role, ControllerButton button, Action callback)
		{
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0xDA7F4C", Offset = "0xDA7F4C", VA = "0xDA7F4C")]
		public static void AddPressDown(HandRole role, ControllerButton button, Action callback)
		{
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0xDA7FD8", Offset = "0xDA7FD8", VA = "0xDA7FD8")]
		public static void AddPressUp(HandRole role, ControllerButton button, Action callback)
		{
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0xDA8064", Offset = "0xDA8064", VA = "0xDA8064")]
		public static void AddClick(HandRole role, ControllerButton button, Action callback)
		{
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0xDA80F0", Offset = "0xDA80F0", VA = "0xDA80F0")]
		public static void RemovePress(HandRole role, ControllerButton button, Action callback)
		{
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0xDA817C", Offset = "0xDA817C", VA = "0xDA817C")]
		public static void RemovePressDown(HandRole role, ControllerButton button, Action callback)
		{
		}

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0xDA8208", Offset = "0xDA8208", VA = "0xDA8208")]
		public static void RemovePressUp(HandRole role, ControllerButton button, Action callback)
		{
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0xDA8294", Offset = "0xDA8294", VA = "0xDA8294")]
		public static void RemoveClick(HandRole role, ControllerButton button, Action callback)
		{
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0xDA8320", Offset = "0xDA8320", VA = "0xDA8320")]
		public static void TriggerHapticPulse(HandRole role, ushort durationMicroSec = 500)
		{
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0xDA83A0", Offset = "0xDA83A0", VA = "0xDA83A0")]
		public static void TriggerHapticVibration(HandRole role, float durationSeconds = 0.01f, float frequency = 85f, float amplitude = 0.125f, float startSecondsFromNow = 0f)
		{
		}

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0xDA8440", Offset = "0xDA8440", VA = "0xDA8440")]
		public static bool GetPress(ViveRoleProperty role, ControllerButton button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0xDA84F8", Offset = "0xDA84F8", VA = "0xDA84F8")]
		public static bool GetPressDown(ViveRoleProperty role, ControllerButton button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0xDA85B0", Offset = "0xDA85B0", VA = "0xDA85B0")]
		public static bool GetPressUp(ViveRoleProperty role, ControllerButton button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0xDA8668", Offset = "0xDA8668", VA = "0xDA8668")]
		public static float LastPressDownTime(ViveRoleProperty role, ControllerButton button)
		{
			return default(float);
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0xDA8814", Offset = "0xDA8814", VA = "0xDA8814")]
		public static int ClickCount(ViveRoleProperty role, ControllerButton button)
		{
			return default(int);
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0xDA89C0", Offset = "0xDA89C0", VA = "0xDA89C0")]
		public static float GetAxis(ViveRoleProperty role, ControllerAxis axis, bool usePrevState = false)
		{
			return default(float);
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0xDA8B84", Offset = "0xDA8B84", VA = "0xDA8B84")]
		public static float GetTriggerValue(ViveRoleProperty role, bool usePrevState = false)
		{
			return default(float);
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0xDA8C3C", Offset = "0xDA8C3C", VA = "0xDA8C3C")]
		public static Vector2 GetPadAxis(ViveRoleProperty role, bool usePrevState = false)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0xDA8DE8", Offset = "0xDA8DE8", VA = "0xDA8DE8")]
		public static Vector2 GetPadPressAxis(ViveRoleProperty role)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0xDA9030", Offset = "0xDA9030", VA = "0xDA9030")]
		public static Vector2 GetPadTouchAxis(ViveRoleProperty role)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0xDA9278", Offset = "0xDA9278", VA = "0xDA9278")]
		public static Vector2 GetPadPressVector(ViveRoleProperty role)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0xDA940C", Offset = "0xDA940C", VA = "0xDA940C")]
		public static Vector2 GetPadTouchVector(ViveRoleProperty role)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0xDA95A0", Offset = "0xDA95A0", VA = "0xDA95A0")]
		public static Vector2 GetPadPressDelta(ViveRoleProperty role)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0xDA9934", Offset = "0xDA9934", VA = "0xDA9934")]
		public static Vector2 GetPadTouchDelta(ViveRoleProperty role)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0xDA6280", Offset = "0xDA6280", VA = "0xDA6280")]
		public static Vector2 GetScrollDelta(ViveRoleProperty role, ScrollType scrollType, Vector2 scale, ControllerAxis xAxis = ControllerAxis.PadX, ControllerAxis yAxis = ControllerAxis.PadY)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0xDA9DEC", Offset = "0xDA9DEC", VA = "0xDA9DEC")]
		public static void AddListener(ViveRoleProperty role, ControllerButton button, ButtonEventType eventType, Action callback)
		{
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0xDA9FC8", Offset = "0xDA9FC8", VA = "0xDA9FC8")]
		public static void RemoveListener(ViveRoleProperty role, ControllerButton button, ButtonEventType eventType, Action callback)
		{
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0xDAA1A4", Offset = "0xDAA1A4", VA = "0xDAA1A4")]
		public static void AddListener(ViveRoleProperty role, ControllerButton button, ButtonEventType eventType, RoleValueEventListener callback)
		{
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0xDAA380", Offset = "0xDAA380", VA = "0xDAA380")]
		public static void RemoveListener(ViveRoleProperty role, ControllerButton button, ButtonEventType eventType, RoleValueEventListener callback)
		{
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0xDAA55C", Offset = "0xDAA55C", VA = "0xDAA55C")]
		public static void TriggerHapticPulse(ViveRoleProperty role, ushort durationMicroSec = 500)
		{
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0xDAA6C4", Offset = "0xDAA6C4", VA = "0xDAA6C4")]
		public static void TriggerHapticVibration(ViveRoleProperty role, float durationSeconds = 0.01f, float frequency = 85f, float amplitude = 0.125f, float startSecondsFromNow = 0f)
		{
		}

		[Token(Token = "0x6000C0A")]
		public static bool GetPressEx<TRole>(TRole role, ControllerButton button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C0B")]
		public static bool GetPressDownEx<TRole>(TRole role, ControllerButton button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C0C")]
		public static bool GetPressUpEx<TRole>(TRole role, ControllerButton button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C0D")]
		public static float LastPressDownTimeEx<TRole>(TRole role, ControllerButton button)
		{
			return default(float);
		}

		[Token(Token = "0x6000C0E")]
		public static int ClickCountEx<TRole>(TRole role, ControllerButton button)
		{
			return default(int);
		}

		[Token(Token = "0x6000C0F")]
		public static float GetAxisEx<TRole>(TRole role, ControllerAxis axis, bool usePrevState = false)
		{
			return default(float);
		}

		[Token(Token = "0x6000C10")]
		public static float GetTriggerValueEx<TRole>(TRole role, bool usePrevState = false)
		{
			return default(float);
		}

		[Token(Token = "0x6000C11")]
		public static Vector2 GetPadAxisEx<TRole>(TRole role, bool usePrevState = false)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000C12")]
		public static Vector2 GetPadPressAxisEx<TRole>(TRole role)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000C13")]
		public static Vector2 GetPadTouchAxisEx<TRole>(TRole role)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000C14")]
		public static Vector2 GetPadPressVectorEx<TRole>(TRole role)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000C15")]
		public static Vector2 GetPadTouchVectorEx<TRole>(TRole role)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000C16")]
		public static Vector2 GetPadPressDeltaEx<TRole>(TRole role)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000C17")]
		public static Vector2 GetPadTouchDeltaEx<TRole>(TRole role)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000C18")]
		public static Vector2 GetScrollDeltaEx<TRole>(TRole role, ScrollType scrollType, Vector2 scale, ControllerAxis xAxis = ControllerAxis.PadX, ControllerAxis yAxis = ControllerAxis.PadY)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000C19")]
		public static void AddListenerEx<TRole>(TRole role, ControllerButton button, ButtonEventType eventType, Action callback)
		{
		}

		[Token(Token = "0x6000C1A")]
		public static void RemoveListenerEx<TRole>(TRole role, ControllerButton button, ButtonEventType eventType, Action callback)
		{
		}

		[Token(Token = "0x6000C1B")]
		public static void AddListenerEx<TRole>(TRole role, ControllerButton button, ButtonEventType eventType, RoleValueEventListener callback)
		{
		}

		[Token(Token = "0x6000C1C")]
		public static void RemoveListenerEx<TRole>(TRole role, ControllerButton button, ButtonEventType eventType, RoleValueEventListener callback)
		{
		}

		[Token(Token = "0x6000C1D")]
		public static void AddListenerEx<TRole>(TRole role, ControllerButton button, ButtonEventType eventType, RoleEventListener<TRole> callback)
		{
		}

		[Token(Token = "0x6000C1E")]
		public static void RemoveListenerEx<TRole>(TRole role, ControllerButton button, ButtonEventType eventType, RoleEventListener<TRole> callback)
		{
		}

		[Token(Token = "0x6000C1F")]
		public static void TriggerHapticPulseEx<TRole>(TRole role, ushort durationMicroSec = 500)
		{
		}

		[Token(Token = "0x6000C20")]
		public static void TriggerHapticVibrationEx<TRole>(TRole role, float durationSeconds = 0.01f, float frequency = 85f, float amplitude = 0.125f, float startSecondsFromNow = 0f)
		{
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0xDA50B8", Offset = "0xDA50B8", VA = "0xDA50B8")]
		public static bool GetPressEx(Type roleType, int roleValue, ControllerButton button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0xDA5280", Offset = "0xDA5280", VA = "0xDA5280")]
		public static bool GetPressDownEx(Type roleType, int roleValue, ControllerButton button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0xDA5444", Offset = "0xDA5444", VA = "0xDA5444")]
		public static bool GetPressUpEx(Type roleType, int roleValue, ControllerButton button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0xDA8720", Offset = "0xDA8720", VA = "0xDA8720")]
		public static float LastPressDownTimeEx(Type roleType, int roleValue, ControllerButton button)
		{
			return default(float);
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0xDA88CC", Offset = "0xDA88CC", VA = "0xDA88CC")]
		public static int ClickCountEx(Type roleType, int roleValue, ControllerButton button)
		{
			return default(int);
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0xDA8A80", Offset = "0xDA8A80", VA = "0xDA8A80")]
		public static float GetAxisEx(Type roleType, int roleValue, ControllerAxis axis, bool usePrevState = false)
		{
			return default(float);
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0xDA64E0", Offset = "0xDA64E0", VA = "0xDA64E0")]
		public static float GetTriggerValueEx(Type roleType, int roleValue, bool usePrevState = false)
		{
			return default(float);
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0xDA8CF4", Offset = "0xDA8CF4", VA = "0xDA8CF4")]
		public static Vector2 GetPadAxisEx(Type roleType, int roleValue, bool usePrevState = false)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0xDA8E90", Offset = "0xDA8E90", VA = "0xDA8E90")]
		public static Vector2 GetPadPressAxisEx(Type roleType, int roleValue)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0xDA90D8", Offset = "0xDA90D8", VA = "0xDA90D8")]
		public static Vector2 GetPadTouchAxisEx(Type roleType, int roleValue)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0xDA9320", Offset = "0xDA9320", VA = "0xDA9320")]
		public static Vector2 GetPadPressVectorEx(Type roleType, int roleValue)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0xDA94B4", Offset = "0xDA94B4", VA = "0xDA94B4")]
		public static Vector2 GetPadTouchVectorEx(Type roleType, int roleValue)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0xDA9648", Offset = "0xDA9648", VA = "0xDA9648")]
		public static Vector2 GetPadPressDeltaEx(Type roleType, int roleValue)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0xDA99DC", Offset = "0xDA99DC", VA = "0xDA99DC")]
		public static Vector2 GetPadTouchDeltaEx(Type roleType, int roleValue)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0xDA9CC8", Offset = "0xDA9CC8", VA = "0xDA9CC8")]
		public static Vector2 GetScrollDeltaEx(Type roleType, int roleValue, ScrollType scrollType, Vector2 scale, ControllerAxis xAxis = ControllerAxis.PadX, ControllerAxis yAxis = ControllerAxis.PadY)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0xDA9EBC", Offset = "0xDA9EBC", VA = "0xDA9EBC")]
		public static void AddListenerEx(Type roleType, int roleValue, ControllerButton button, ButtonEventType eventType, Action callback)
		{
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0xDAA098", Offset = "0xDAA098", VA = "0xDAA098")]
		public static void RemoveListenerEx(Type roleType, int roleValue, ControllerButton button, ButtonEventType eventType, Action callback)
		{
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0xDAA274", Offset = "0xDAA274", VA = "0xDAA274")]
		public static void AddListenerEx(Type roleType, int roleValue, ControllerButton button, ButtonEventType eventType, RoleValueEventListener callback)
		{
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0xDAA450", Offset = "0xDAA450", VA = "0xDAA450")]
		public static void RemoveListenerEx(Type roleType, int roleValue, ControllerButton button, ButtonEventType eventType, RoleValueEventListener callback)
		{
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0xDAA614", Offset = "0xDAA614", VA = "0xDAA614")]
		public static void TriggerHapticPulseEx(Type roleType, int roleValue, ushort durationMicroSec = 500)
		{
		}

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0xDAA79C", Offset = "0xDAA79C", VA = "0xDAA79C")]
		public static void TriggerHapticVibrationEx(Type roleType, int roleValue, float durationSeconds = 0.01f, float frequency = 85f, float amplitude = 0.125f, float startSecondsFromNow = 0f)
		{
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0xDAA960", Offset = "0xDAA960", VA = "0xDAA960")]
		public ViveInput()
		{
		}
	}
	[Token(Token = "0x2000145")]
	public enum ButtonEventType
	{
		[Token(Token = "0x4000A5E")]
		Down,
		[Token(Token = "0x4000A5F")]
		Press,
		[Token(Token = "0x4000A60")]
		Up,
		[Token(Token = "0x4000A61")]
		Click
	}
	[Token(Token = "0x2000146")]
	public enum ControllerButton
	{
		[Token(Token = "0x4000A63")]
		None = -1,
		[Token(Token = "0x4000A64")]
		System = 14,
		[Token(Token = "0x4000A65")]
		Menu = 4,
		[Token(Token = "0x4000A66")]
		MenuTouch = 7,
		[Token(Token = "0x4000A67")]
		Trigger = 0,
		[Token(Token = "0x4000A68")]
		TriggerTouch = 8,
		[Token(Token = "0x4000A69")]
		Pad = 1,
		[Token(Token = "0x4000A6A")]
		PadTouch = 3,
		[Token(Token = "0x4000A6B")]
		Grip = 2,
		[Token(Token = "0x4000A6C")]
		GripTouch = 9,
		[Token(Token = "0x4000A6D")]
		CapSenseGrip = 10,
		[Token(Token = "0x4000A6E")]
		CapSenseGripTouch = 11,
		[Token(Token = "0x4000A6F")]
		ProximitySensor = 15,
		[Token(Token = "0x4000A70")]
		Bumper = 16,
		[Token(Token = "0x4000A71")]
		BumperTouch = 17,
		[Token(Token = "0x4000A72")]
		AKey = 12,
		[Token(Token = "0x4000A73")]
		AKeyTouch = 13,
		[Token(Token = "0x4000A74")]
		BKey = 4,
		[Token(Token = "0x4000A75")]
		BkeyTouch = 7,
		[Token(Token = "0x4000A76")]
		OuterFaceButton = 4,
		[Token(Token = "0x4000A77")]
		OuterFaceButtonTouch = 7,
		[Token(Token = "0x4000A78")]
		InnerFaceButton = 12,
		[Token(Token = "0x4000A79")]
		InnerFaceButtonTouch = 13,
		[Token(Token = "0x4000A7A")]
		[HideInInspector]
		Axis0 = 1,
		[Token(Token = "0x4000A7B")]
		[HideInInspector]
		Axis1 = 0,
		[Token(Token = "0x4000A7C")]
		[HideInInspector]
		Axis2 = 10,
		[Token(Token = "0x4000A7D")]
		[HideInInspector]
		Axis3 = 16,
		[Token(Token = "0x4000A7E")]
		[HideInInspector]
		Axis4 = 18,
		[Token(Token = "0x4000A7F")]
		[HideInInspector]
		Axis0Touch = 3,
		[Token(Token = "0x4000A80")]
		[HideInInspector]
		Axis1Touch = 8,
		[Token(Token = "0x4000A81")]
		[HideInInspector]
		Axis2Touch = 11,
		[Token(Token = "0x4000A82")]
		[HideInInspector]
		Axis3Touch = 17,
		[Token(Token = "0x4000A83")]
		[HideInInspector]
		Axis4Touch = 19,
		[Token(Token = "0x4000A84")]
		HairTrigger = 5,
		[Token(Token = "0x4000A85")]
		FullTrigger = 6,
		[Token(Token = "0x4000A86")]
		DPadLeft = 20,
		[Token(Token = "0x4000A87")]
		DPadUp = 21,
		[Token(Token = "0x4000A88")]
		DPadRight = 22,
		[Token(Token = "0x4000A89")]
		DPadDown = 23,
		[Token(Token = "0x4000A8A")]
		DPadLeftTouch = 24,
		[Token(Token = "0x4000A8B")]
		DPadUpTouch = 25,
		[Token(Token = "0x4000A8C")]
		DPadRightTouch = 26,
		[Token(Token = "0x4000A8D")]
		DPadDownTouch = 27,
		[Token(Token = "0x4000A8E")]
		DPadUpperLeft = 28,
		[Token(Token = "0x4000A8F")]
		DPadUpperRight = 29,
		[Token(Token = "0x4000A90")]
		DPadLowerRight = 30,
		[Token(Token = "0x4000A91")]
		DPadLowerLeft = 31,
		[Token(Token = "0x4000A92")]
		DPadUpperLeftTouch = 32,
		[Token(Token = "0x4000A93")]
		DPadUpperRightTouch = 33,
		[Token(Token = "0x4000A94")]
		DPadLowerRightTouch = 34,
		[Token(Token = "0x4000A95")]
		DPadLowerLeftTouch = 35,
		[Token(Token = "0x4000A96")]
		DPadCenter = 36,
		[Token(Token = "0x4000A97")]
		DPadCenterTouch = 37
	}
	[Token(Token = "0x2000147")]
	public enum ControllerAxis
	{
		[Token(Token = "0x4000A99")]
		None = -1,
		[Token(Token = "0x4000A9A")]
		PadX = 0,
		[Token(Token = "0x4000A9B")]
		PadY = 1,
		[Token(Token = "0x4000A9C")]
		Trigger = 2,
		[Token(Token = "0x4000A9D")]
		CapSenseGrip = 3,
		[Token(Token = "0x4000A9E")]
		IndexCurl = 4,
		[Token(Token = "0x4000A9F")]
		MiddleCurl = 5,
		[Token(Token = "0x4000AA0")]
		RingCurl = 6,
		[Token(Token = "0x4000AA1")]
		PinkyCurl = 7,
		[Token(Token = "0x4000AA2")]
		JoystickCap = 6,
		[Token(Token = "0x4000AA3")]
		TriggerCap = 7,
		[Token(Token = "0x4000AA4")]
		JoystickX = 8,
		[Token(Token = "0x4000AA5")]
		JoystickY = 9
	}
	[Token(Token = "0x2000148")]
	public enum ScrollType
	{
		[Token(Token = "0x4000AA7")]
		None = -1,
		[Token(Token = "0x4000AA8")]
		Auto,
		[Token(Token = "0x4000AA9")]
		Trackpad,
		[Token(Token = "0x4000AAA")]
		Thumbstick
	}
	[Token(Token = "0x2000149")]
	public class RawControllerState
	{
		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly bool[] buttonPress;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float[] axisValue;

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0xD18350", Offset = "0xD18350", VA = "0xD18350")]
		public RawControllerState()
		{
		}
	}
	[Token(Token = "0x200014A")]
	public class ViveInputVirtualButton : MonoBehaviour
	{
		[Token(Token = "0x20004EA")]
		public enum InputsOperatorEnum
		{
			[Token(Token = "0x4001E96")]
			Or,
			[Token(Token = "0x4001E97")]
			And
		}

		[Serializable]
		[Token(Token = "0x20004EB")]
		public class InputEntry
		{
			[Token(Token = "0x4001E98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ViveRoleProperty viveRole;

			[Token(Token = "0x4001E99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CustomOrderedEnumAttribute", RVA = "0x9381C8", Offset = "0x9381C8")]
			public ControllerButton button;

			[Token(Token = "0x600240D")]
			[Address(RVA = "0xDAFEB8", Offset = "0xDAFEB8", VA = "0xDAFEB8")]
			public InputEntry()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004EC")]
		public struct OutputEventArgs
		{
			[Token(Token = "0x4001E9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ViveInputVirtualButton senderObj;

			[Token(Token = "0x4001E9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public ButtonEventType eventType;
		}

		[Serializable]
		[Token(Token = "0x20004ED")]
		public class OutputEvent : UnityEvent<OutputEventArgs>
		{
			[Token(Token = "0x600240E")]
			[Address(RVA = "0xDAFE68", Offset = "0xDAFE68", VA = "0xDAFE68")]
			public OutputEvent()
			{
			}
		}

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private InputsOperatorEnum m_combineInputsOperator;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private List<InputEntry> m_inputs;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private OutputEvent m_onVirtualPress;

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private OutputEvent m_onVirtualClick;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private OutputEvent m_onVirtualPressDown;

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private OutputEvent m_onVirtualPressUp;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private List<GameObject> m_toggleGameObjectOnVirtualClick;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private List<Behaviour> m_toggleComponentOnVirtualClick;

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_isUpdating;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_updatedFrameCount;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_prevPressState;

		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_currPressState;

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_lastPressDownTime;

		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int m_clickCount;

		[Token(Token = "0x1700016E")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x940F70", Offset = "0x940F70")]
		public bool active
		{
			[Token(Token = "0x6000C38")]
			[Address(RVA = "0xDAF248", Offset = "0xDAF248", VA = "0xDAF248")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C39")]
			[Address(RVA = "0xDAF250", Offset = "0xDAF250", VA = "0xDAF250")]
			set
			{
			}
		}

		[Token(Token = "0x1700016F")]
		public InputsOperatorEnum combineInputsOperator
		{
			[Token(Token = "0x6000C3A")]
			[Address(RVA = "0xDAF25C", Offset = "0xDAF25C", VA = "0xDAF25C")]
			get
			{
				return default(InputsOperatorEnum);
			}
		}

		[Token(Token = "0x17000170")]
		public List<InputEntry> inputs
		{
			[Token(Token = "0x6000C3B")]
			[Address(RVA = "0xDAF264", Offset = "0xDAF264", VA = "0xDAF264")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000171")]
		public List<GameObject> toggleGameObjectOnVirtualClick
		{
			[Token(Token = "0x6000C3C")]
			[Address(RVA = "0xDAF26C", Offset = "0xDAF26C", VA = "0xDAF26C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000172")]
		public List<Behaviour> toggleComponentOnVirtualClick
		{
			[Token(Token = "0x6000C3D")]
			[Address(RVA = "0xDAF274", Offset = "0xDAF274", VA = "0xDAF274")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000173")]
		public OutputEvent onPress
		{
			[Token(Token = "0x6000C3E")]
			[Address(RVA = "0xDAF27C", Offset = "0xDAF27C", VA = "0xDAF27C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000174")]
		public OutputEvent onClick
		{
			[Token(Token = "0x6000C3F")]
			[Address(RVA = "0xDAF284", Offset = "0xDAF284", VA = "0xDAF284")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000175")]
		public OutputEvent onPressDown
		{
			[Token(Token = "0x6000C40")]
			[Address(RVA = "0xDAF28C", Offset = "0xDAF28C", VA = "0xDAF28C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000176")]
		public OutputEvent onPressUp
		{
			[Token(Token = "0x6000C41")]
			[Address(RVA = "0xDAF294", Offset = "0xDAF294", VA = "0xDAF294")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000177")]
		private bool isPress
		{
			[Token(Token = "0x6000C42")]
			[Address(RVA = "0xDAF29C", Offset = "0xDAF29C", VA = "0xDAF29C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000178")]
		private bool isDown
		{
			[Token(Token = "0x6000C43")]
			[Address(RVA = "0xDAF2A4", Offset = "0xDAF2A4", VA = "0xDAF2A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000179")]
		private bool isUp
		{
			[Token(Token = "0x6000C44")]
			[Address(RVA = "0xDAF2C4", Offset = "0xDAF2C4", VA = "0xDAF2C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0xDAF2E4", Offset = "0xDAF2E4", VA = "0xDAF2E4")]
		private void UpdateState()
		{
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0xDAF56C", Offset = "0xDAF56C", VA = "0xDAF56C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0xDAFC54", Offset = "0xDAFC54", VA = "0xDAFC54")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0xDAF938", Offset = "0xDAF938", VA = "0xDAF938")]
		private void InternalDisable()
		{
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0xDAFC64", Offset = "0xDAFC64", VA = "0xDAFC64")]
		public bool GetVirtualPress()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0xDAFC88", Offset = "0xDAFC88", VA = "0xDAFC88")]
		public bool GetVirtualPressDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0xDAFCC4", Offset = "0xDAFCC4", VA = "0xDAFCC4")]
		public bool GetVirtualPressUp()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0xDAFD00", Offset = "0xDAFD00", VA = "0xDAFD00")]
		public int GetVirtualClickCount()
		{
			return default(int);
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0xDAFD24", Offset = "0xDAFD24", VA = "0xDAFD24")]
		public float GetLastVirtualPressDownTime()
		{
			return default(float);
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0xDAFD48", Offset = "0xDAFD48", VA = "0xDAFD48")]
		public ViveInputVirtualButton()
		{
		}
	}
	[Token(Token = "0x200014B")]
	public interface INewPoseListener
	{
		[Token(Token = "0x6000C4F")]
		void BeforeNewPoses();

		[Token(Token = "0x6000C50")]
		void OnNewPoses();

		[Token(Token = "0x6000C51")]
		void AfterNewPoses();
	}
	[Token(Token = "0x200014C")]
	public class VivePose : SingletonBehaviour<VivePose>
	{
		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IndexedSet<INewPoseListener> s_listeners;

		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_dontDestroyOnLoad;

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0xDB051C", Offset = "0xDB051C", VA = "0xDB051C")]
		static VivePose()
		{
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0xDB05F4", Offset = "0xDB05F4", VA = "0xDB05F4", Slot = "4")]
		protected override void OnSingletonBehaviourInitialized()
		{
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0xDB0730", Offset = "0xDB0730", VA = "0xDB0730", Slot = "6")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0xDB07F0", Offset = "0xDB07F0", VA = "0xDB07F0")]
		public static bool AddNewPosesListener(INewPoseListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0xDB08AC", Offset = "0xDB08AC", VA = "0xDB08AC")]
		public static bool RemoveNewPosesListener(INewPoseListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0xDB0938", Offset = "0xDB0938", VA = "0xDB0938")]
		private void OnDeviceStateUpdated()
		{
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0xDB0C6C", Offset = "0xDB0C6C", VA = "0xDB0C6C")]
		public static bool HasFocus()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0xDB0CCC", Offset = "0xDB0CCC", VA = "0xDB0CCC")]
		public static bool IsValid(HandRole role)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0xDB0E84", Offset = "0xDB0E84", VA = "0xDB0E84")]
		public static bool IsValid(DeviceRole role)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0xDB0F24", Offset = "0xDB0F24", VA = "0xDB0F24")]
		public static bool IsConnected(HandRole role)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0xDB10A4", Offset = "0xDB10A4", VA = "0xDB10A4")]
		public static bool IsConnected(DeviceRole role)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0xDB1144", Offset = "0xDB1144", VA = "0xDB1144")]
		public static bool HasTracking(HandRole role)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0xDB12C4", Offset = "0xDB12C4", VA = "0xDB12C4")]
		public static bool HasTracking(DeviceRole role)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0xDB1364", Offset = "0xDB1364", VA = "0xDB1364")]
		public static bool IsOutOfRange(HandRole role)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0xDB14E4", Offset = "0xDB14E4", VA = "0xDB14E4")]
		public static bool IsOutOfRange(DeviceRole role)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0xDB1584", Offset = "0xDB1584", VA = "0xDB1584")]
		public static bool IsCalibrating(HandRole role)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0xDB1704", Offset = "0xDB1704", VA = "0xDB1704")]
		public static bool IsCalibrating(DeviceRole role)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0xDB17A4", Offset = "0xDB17A4", VA = "0xDB17A4")]
		public static bool IsUninitialized(HandRole role)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0xDB1924", Offset = "0xDB1924", VA = "0xDB1924")]
		public static bool IsUninitialized(DeviceRole role)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0xDB19C4", Offset = "0xDB19C4", VA = "0xDB19C4")]
		public static Vector3 GetVelocity(HandRole role, [Optional] Transform origin)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0xDB1CE8", Offset = "0xDB1CE8", VA = "0xDB1CE8")]
		public static Vector3 GetVelocity(DeviceRole role, [Optional] Transform origin)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0xDB1D98", Offset = "0xDB1D98", VA = "0xDB1D98")]
		public static Vector3 GetAngularVelocity(HandRole role, [Optional] Transform origin)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0xDB20BC", Offset = "0xDB20BC", VA = "0xDB20BC")]
		public static Vector3 GetAngularVelocity(DeviceRole role, [Optional] Transform origin)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0xDB216C", Offset = "0xDB216C", VA = "0xDB216C")]
		public static RigidPose GetPose(HandRole role, [Optional] Transform origin)
		{
			return default(RigidPose);
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0xDB2428", Offset = "0xDB2428", VA = "0xDB2428")]
		public static RigidPose GetPose(DeviceRole role, [Optional] Transform origin)
		{
			return default(RigidPose);
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0xDB24E0", Offset = "0xDB24E0", VA = "0xDB24E0")]
		public static void SetPose(Transform target, HandRole role, [Optional] Transform origin)
		{
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0xDB2634", Offset = "0xDB2634", VA = "0xDB2634")]
		public static void SetPose(Transform target, DeviceRole role, [Optional] Transform origin)
		{
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0xDB26EC", Offset = "0xDB26EC", VA = "0xDB26EC")]
		public static bool IsValid(ViveRoleProperty role)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0xDB284C", Offset = "0xDB284C", VA = "0xDB284C")]
		public static bool IsConnected(ViveRoleProperty role)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0xDB28CC", Offset = "0xDB28CC", VA = "0xDB28CC")]
		public static bool HasTracking(ViveRoleProperty role)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0xDB294C", Offset = "0xDB294C", VA = "0xDB294C")]
		public static bool IsOutOfRange(ViveRoleProperty role)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0xDB29CC", Offset = "0xDB29CC", VA = "0xDB29CC")]
		public static bool IsCalibrating(ViveRoleProperty role)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0xDB2A4C", Offset = "0xDB2A4C", VA = "0xDB2A4C")]
		public static bool IsUninitialized(ViveRoleProperty role)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0xDB2ACC", Offset = "0xDB2ACC", VA = "0xDB2ACC")]
		public static Vector3 GetVelocity(ViveRoleProperty role, [Optional] Transform origin)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0xDB2B5C", Offset = "0xDB2B5C", VA = "0xDB2B5C")]
		public static Vector3 GetAngularVelocity(ViveRoleProperty role, [Optional] Transform origin)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0xDB2BEC", Offset = "0xDB2BEC", VA = "0xDB2BEC")]
		public static RigidPose GetPose(ViveRoleProperty role, [Optional] Transform origin)
		{
			return default(RigidPose);
		}

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0xDB2C84", Offset = "0xDB2C84", VA = "0xDB2C84")]
		public static void SetPose(Transform target, ViveRoleProperty role, [Optional] Transform origin)
		{
		}

		[Token(Token = "0x6000C77")]
		public static bool IsValidEx<TRole>(TRole role)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C78")]
		public static bool IsConnectedEx<TRole>(TRole role)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C79")]
		public static bool HasTrackingEx<TRole>(TRole role)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C7A")]
		public static bool IsOutOfRangeEx<TRole>(TRole role)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C7B")]
		public static bool IsCalibratingEx<TRole>(TRole role)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C7C")]
		public static bool IsUninitializedEx<TRole>(TRole role)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C7D")]
		public static Vector3 GetVelocityEx<TRole>(TRole role, [Optional] Transform origin)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C7E")]
		public static Vector3 GetAngularVelocityEx<TRole>(TRole role, [Optional] Transform origin)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C7F")]
		public static RigidPose GetPoseEx<TRole>(TRole role, [Optional] Transform origin)
		{
			return default(RigidPose);
		}

		[Token(Token = "0x6000C80")]
		public static void SetPoseEx<TRole>(Transform target, TRole role, [Optional] Transform origin)
		{
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0xDB2D1C", Offset = "0xDB2D1C", VA = "0xDB2D1C")]
		public static bool IsValidEx(Type roleType, int roleValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0xDB2DC0", Offset = "0xDB2DC0", VA = "0xDB2DC0")]
		public static bool IsConnectedEx(Type roleType, int roleValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0xDB2E64", Offset = "0xDB2E64", VA = "0xDB2E64")]
		public static bool HasTrackingEx(Type roleType, int roleValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0xDB2F08", Offset = "0xDB2F08", VA = "0xDB2F08")]
		public static bool IsOutOfRangeEx(Type roleType, int roleValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0xDB2FAC", Offset = "0xDB2FAC", VA = "0xDB2FAC")]
		public static bool IsCalibratingEx(Type roleType, int roleValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0xDB3050", Offset = "0xDB3050", VA = "0xDB3050")]
		public static bool IsUninitializedEx(Type roleType, int roleValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0xDB30F4", Offset = "0xDB30F4", VA = "0xDB30F4")]
		public static Vector3 GetVelocityEx(Type roleType, int roleValue, [Optional] Transform origin)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0xDB31A0", Offset = "0xDB31A0", VA = "0xDB31A0")]
		public static Vector3 GetAngularVelocityEx(Type roleType, int roleValue, [Optional] Transform origin)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0xDB324C", Offset = "0xDB324C", VA = "0xDB324C")]
		public static RigidPose GetPoseEx(Type roleType, int roleValue, [Optional] Transform origin)
		{
			return default(RigidPose);
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0xDB3308", Offset = "0xDB3308", VA = "0xDB3308")]
		public static void SetPoseEx(Transform target, Type roleType, int roleValue, [Optional] Transform origin)
		{
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0xDB0D6C", Offset = "0xDB0D6C", VA = "0xDB0D6C")]
		public static bool IsValid(uint deviceIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0xDB0FC4", Offset = "0xDB0FC4", VA = "0xDB0FC4")]
		public static bool IsConnected(uint deviceIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0xDB11E4", Offset = "0xDB11E4", VA = "0xDB11E4")]
		public static bool HasTracking(uint deviceIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0xDB1404", Offset = "0xDB1404", VA = "0xDB1404")]
		public static bool IsOutOfRange(uint deviceIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0xDB1624", Offset = "0xDB1624", VA = "0xDB1624")]
		public static bool IsCalibrating(uint deviceIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0xDB1844", Offset = "0xDB1844", VA = "0xDB1844")]
		public static bool IsUninitialized(uint deviceIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0xDB1A74", Offset = "0xDB1A74", VA = "0xDB1A74")]
		public static Vector3 GetVelocity(uint deviceIndex, [Optional] Transform origin)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0xDB1E48", Offset = "0xDB1E48", VA = "0xDB1E48")]
		public static Vector3 GetAngularVelocity(uint deviceIndex, [Optional] Transform origin)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0xDB2224", Offset = "0xDB2224", VA = "0xDB2224")]
		public static RigidPose GetPose(uint deviceIndex, [Optional] Transform origin)
		{
			return default(RigidPose);
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0xDB2598", Offset = "0xDB2598", VA = "0xDB2598")]
		public static void SetPose(Transform target, uint deviceIndex, [Optional] Transform origin)
		{
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0xDB33C4", Offset = "0xDB33C4", VA = "0xDB33C4")]
		public VivePose()
		{
		}
	}
	[Token(Token = "0x200014D")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x925B00", Offset = "0x925B00")]
	public class VivePoseTracker : BasePoseTracker, INewPoseListener, IViveRoleComponent
	{
		[Serializable]
		[Token(Token = "0x20004EE")]
		public class UnityEventBool : UnityEvent<bool>
		{
			[Token(Token = "0x600240F")]
			[Address(RVA = "0xDB37AC", Offset = "0xDB37AC", VA = "0xDB37AC")]
			public UnityEventBool()
			{
			}
		}

		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_isValid;

		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform origin;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ViveRoleProperty m_viveRole;

		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEventBool onIsValidChanged;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92B558", Offset = "0x92B558")]
		public DeviceRole role;

		[Token(Token = "0x1700017A")]
		public ViveRoleProperty viveRole
		{
			[Token(Token = "0x6000C96")]
			[Address(RVA = "0xDB3434", Offset = "0xDB3434", VA = "0xDB3434", Slot = "9")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017B")]
		public bool isPoseValid
		{
			[Token(Token = "0x6000C97")]
			[Address(RVA = "0xDB343C", Offset = "0xDB343C", VA = "0xDB343C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0xDB3444", Offset = "0xDB3444", VA = "0xDB3444")]
		protected void SetIsValid(bool value, bool forceSet = false)
		{
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0xDB34E0", Offset = "0xDB34E0", VA = "0xDB34E0", Slot = "10")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0xDB3558", Offset = "0xDB3558", VA = "0xDB3558", Slot = "11")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0xDB35BC", Offset = "0xDB35BC", VA = "0xDB35BC", Slot = "12")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0xDB3630", Offset = "0xDB3630", VA = "0xDB3630", Slot = "13")]
		public virtual void BeforeNewPoses()
		{
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0xDB3634", Offset = "0xDB3634", VA = "0xDB3634", Slot = "14")]
		public virtual void OnNewPoses()
		{
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0xDB3720", Offset = "0xDB3720", VA = "0xDB3720", Slot = "15")]
		public virtual void AfterNewPoses()
		{
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0xDB3724", Offset = "0xDB3724", VA = "0xDB3724")]
		public VivePoseTracker()
		{
		}
	}
	[Token(Token = "0x200014E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x925B3C", Offset = "0x925B3C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x925B3C", Offset = "0x925B3C")]
	public class ViveRigidPoseTracker : VivePoseTracker
	{
		[Token(Token = "0x4000AC2")]
		public const float MIN_FOLLOWING_DURATION = 0.02f;

		[Token(Token = "0x4000AC3")]
		public const float DEFAULT_FOLLOWING_DURATION = 0.04f;

		[Token(Token = "0x4000AC4")]
		public const float MAX_FOLLOWING_DURATION = 0.5f;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Rigidbody rigid;

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private RigidPose targetPose;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool m_snap;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x85")]
		[SerializeField]
		private bool m_snapOnEnable;

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x92B5B4", Offset = "0x92B5B4")]
		public float followingDuration;

		[Token(Token = "0x1700017C")]
		public bool snapOnEnable
		{
			[Token(Token = "0x6000CA0")]
			[Address(RVA = "0xDB3D88", Offset = "0xDB3D88", VA = "0xDB3D88")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CA1")]
			[Address(RVA = "0xDB3D90", Offset = "0xDB3D90", VA = "0xDB3D90")]
			set
			{
			}
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0xDB3D9C", Offset = "0xDB3D9C", VA = "0xDB3D9C", Slot = "10")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0xDB3E14", Offset = "0xDB3E14", VA = "0xDB3E14", Slot = "11")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0xDB3E44", Offset = "0xDB3E44", VA = "0xDB3E44", Slot = "16")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0xDB3FBC", Offset = "0xDB3FBC", VA = "0xDB3FBC", Slot = "12")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0xDB40A8", Offset = "0xDB40A8", VA = "0xDB40A8", Slot = "14")]
		public override void OnNewPoses()
		{
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0xDB4420", Offset = "0xDB4420", VA = "0xDB4420")]
		public ViveRigidPoseTracker()
		{
		}
	}
	[Token(Token = "0x200014F")]
	public static class VivePointerEventDataExtension
	{
		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0xDB0248", Offset = "0xDB0248", VA = "0xDB0248")]
		public static bool IsViveButton(this PointerEventData eventData, HandRole hand)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CA9")]
		public static bool IsViveButtonEx<TRole>(this PointerEventData eventData, TRole role)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0xDB0314", Offset = "0xDB0314", VA = "0xDB0314")]
		public static bool IsViveButton(this PointerEventData eventData, ControllerButton button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0xDB03AC", Offset = "0xDB03AC", VA = "0xDB03AC")]
		public static bool IsViveButton(this PointerEventData eventData, HandRole hand, ControllerButton button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CAC")]
		public static bool IsViveButtonEx<TRole>(this PointerEventData eventData, TRole role, ControllerButton button)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0xDB0484", Offset = "0xDB0484", VA = "0xDB0484")]
		public static bool TryGetViveButtonEventData(this PointerEventData eventData, out VivePointerEventData viveEventData)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000150")]
	public class VivePointerEventData : Pointer3DEventData
	{
		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92B5D0", Offset = "0x92B5D0")]
		private ViveRaycaster <viveRaycaster>k__BackingField;

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92B5E0", Offset = "0x92B5E0")]
		private ControllerButton <viveButton>k__BackingField;

		[Token(Token = "0x1700017D")]
		public ViveRaycaster viveRaycaster
		{
			[Token(Token = "0x6000CAE")]
			[Address(RVA = "0xDAFF38", Offset = "0xDAFF38", VA = "0xDAFF38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939F04", Offset = "0x939F04")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CAF")]
			[Address(RVA = "0xDAFF40", Offset = "0xDAFF40", VA = "0xDAFF40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939F14", Offset = "0x939F14")]
			private set
			{
			}
		}

		[Token(Token = "0x1700017E")]
		public ControllerButton viveButton
		{
			[Token(Token = "0x6000CB0")]
			[Address(RVA = "0xDAFF48", Offset = "0xDAFF48", VA = "0xDAFF48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939F24", Offset = "0x939F24")]
			get
			{
				return default(ControllerButton);
			}
			[Token(Token = "0x6000CB1")]
			[Address(RVA = "0xDAFF50", Offset = "0xDAFF50", VA = "0xDAFF50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x939F34", Offset = "0x939F34")]
			private set
			{
			}
		}

		[Token(Token = "0x1700017F")]
		public ViveRoleProperty viveRole
		{
			[Token(Token = "0x6000CB2")]
			[Address(RVA = "0xDAFF58", Offset = "0xDAFF58", VA = "0xDAFF58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0xDAFF8C", Offset = "0xDAFF8C", VA = "0xDAFF8C")]
		public VivePointerEventData(ViveRaycaster ownerRaycaster, EventSystem eventSystem, ControllerButton viveButton, InputButton mouseButton)
		{
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0xDAFFD8", Offset = "0xDAFFD8", VA = "0xDAFFD8", Slot = "7")]
		public override bool GetPress()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0xDB00A8", Offset = "0xDB00A8", VA = "0xDB00A8", Slot = "8")]
		public override bool GetPressDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0xDB0178", Offset = "0xDB0178", VA = "0xDB0178", Slot = "9")]
		public override bool GetPressUp()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000151")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x925BD8", Offset = "0x925BD8")]
	public class ViveRaycaster : Pointer3DRaycaster, IViveRoleComponent
	{
		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private ViveRoleProperty m_viveRole;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x92B600", Offset = "0x92B600")]
		[AttributeAttribute(Name = "CustomOrderedEnumAttribute", RVA = "0x92B600", Offset = "0x92B600")]
		private ControllerButton m_mouseButtonLeft;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x92B660", Offset = "0x92B660")]
		[AttributeAttribute(Name = "CustomOrderedEnumAttribute", RVA = "0x92B660", Offset = "0x92B660")]
		private ControllerButton m_mouseButtonMiddle;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x92B6C0", Offset = "0x92B6C0")]
		[AttributeAttribute(Name = "CustomOrderedEnumAttribute", RVA = "0x92B6C0", Offset = "0x92B6C0")]
		private ControllerButton m_mouseButtonRight;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x92B720", Offset = "0x92B720")]
		[AttributeAttribute(Name = "FlagsFromEnumAttribute", RVA = "0x92B720", Offset = "0x92B720")]
		private ulong m_additionalButtons;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private ScrollType m_scrollType;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		private Vector2 m_scrollDeltaScale;

		[Token(Token = "0x17000180")]
		public ViveRoleProperty viveRole
		{
			[Token(Token = "0x6000CB7")]
			[Address(RVA = "0xDAFF84", Offset = "0xDAFF84", VA = "0xDAFF84", Slot = "27")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000181")]
		public ControllerButton mouseButtonLeft
		{
			[Token(Token = "0x6000CB8")]
			[Address(RVA = "0xDB37FC", Offset = "0xDB37FC", VA = "0xDB37FC")]
			get
			{
				return default(ControllerButton);
			}
		}

		[Token(Token = "0x17000182")]
		public ControllerButton mouseButtonMiddle
		{
			[Token(Token = "0x6000CB9")]
			[Address(RVA = "0xDB3804", Offset = "0xDB3804", VA = "0xDB3804")]
			get
			{
				return default(ControllerButton);
			}
		}

		[Token(Token = "0x17000183")]
		public ControllerButton mouseButtonRight
		{
			[Token(Token = "0x6000CBA")]
			[Address(RVA = "0xDB380C", Offset = "0xDB380C", VA = "0xDB380C")]
			get
			{
				return default(ControllerButton);
			}
		}

		[Token(Token = "0x17000184")]
		public ulong additionalButtonMask
		{
			[Token(Token = "0x6000CBB")]
			[Address(RVA = "0xDB3814", Offset = "0xDB3814", VA = "0xDB3814")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000185")]
		public ScrollType scrollType
		{
			[Token(Token = "0x6000CBC")]
			[Address(RVA = "0xDB381C", Offset = "0xDB381C", VA = "0xDB381C")]
			get
			{
				return default(ScrollType);
			}
			[Token(Token = "0x6000CBD")]
			[Address(RVA = "0xDB3824", Offset = "0xDB3824", VA = "0xDB3824")]
			set
			{
			}
		}

		[Token(Token = "0x17000186")]
		public Vector2 scrollDeltaScale
		{
			[Token(Token = "0x6000CBE")]
			[Address(RVA = "0xDB382C", Offset = "0xDB382C", VA = "0xDB382C")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000CBF")]
			[Address(RVA = "0xDB3834", Offset = "0xDB3834", VA = "0xDB3834")]
			set
			{
			}
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0xDB383C", Offset = "0xDB383C", VA = "0xDB383C")]
		public bool IsAdditionalButtonOn(ControllerButton btn)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0xDB38B8", Offset = "0xDB38B8", VA = "0xDB38B8")]
		protected void FilterOutAssignedButton()
		{
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0xDB3960", Offset = "0xDB3960", VA = "0xDB3960", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0xDB3C3C", Offset = "0xDB3C3C", VA = "0xDB3C3C", Slot = "23")]
		public override Vector2 GetScrollDelta()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0xDB3CD0", Offset = "0xDB3CD0", VA = "0xDB3CD0")]
		public ViveRaycaster()
		{
		}
	}
	[Token(Token = "0x2000152")]
	[AttributeAttribute(Name = "ViveRoleEnumAttribute", RVA = "0x925C14", Offset = "0x925C14")]
	public enum BodyRole
	{
		[Token(Token = "0x4000AD4")]
		Invalid,
		[Token(Token = "0x4000AD5")]
		Head,
		[Token(Token = "0x4000AD6")]
		RightHand,
		[Token(Token = "0x4000AD7")]
		LeftHand,
		[Token(Token = "0x4000AD8")]
		RightFoot,
		[Token(Token = "0x4000AD9")]
		LeftFoot,
		[Token(Token = "0x4000ADA")]
		Hip
	}
	[Token(Token = "0x2000153")]
	public class BodyRoleHandler : ViveRole.MapHandler<BodyRole>
	{
		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float[] m_directionPoint;

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float[] m_distanceSqr;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<uint> m_sortedDevices;

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0xD12A30", Offset = "0xD12A30", VA = "0xD12A30")]
		private bool IsTrackingDevice(uint deviceIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0xD12B2C", Offset = "0xD12B2C", VA = "0xD12B2C")]
		private bool IsTrackingDevice(VRModuleDeviceClass deviceClass)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0xD12B4C", Offset = "0xD12B4C", VA = "0xD12B4C", Slot = "11")]
		public override void OnAssignedAsCurrentMapHandler()
		{
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0xD1344C", Offset = "0xD1344C", VA = "0xD1344C", Slot = "13")]
		public override void OnConnectedDeviceChanged(uint deviceIndex, VRModuleDeviceClass deviceClass, string deviceSN, bool connected)
		{
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0xD13550", Offset = "0xD13550", VA = "0xD13550", Slot = "15")]
		public override void OnBindingChanged(string deviceSN, bool previousIsBound, BodyRole previousRole, bool currentIsBound, BodyRole currentRole)
		{
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0xD12B50", Offset = "0xD12B50", VA = "0xD12B50")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0xD13704", Offset = "0xD13704", VA = "0xD13704")]
		private bool IsFoot(uint di)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0xD137D4", Offset = "0xD137D4", VA = "0xD137D4")]
		private int CompareDistance(uint d1, uint d2)
		{
			return default(int);
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0xD13890", Offset = "0xD13890", VA = "0xD13890")]
		private int CompareDirection(uint d1, uint d2)
		{
			return default(int);
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0xD1394C", Offset = "0xD1394C", VA = "0xD1394C")]
		public BodyRoleHandler()
		{
		}
	}
	[Token(Token = "0x2000154")]
	[AttributeAttribute(Name = "ViveRoleEnumAttribute", RVA = "0x925C28", Offset = "0x925C28")]
	public enum DeviceRole
	{
		[Token(Token = "0x4000ADF")]
		Invalid = -2,
		[Token(Token = "0x4000AE0")]
		Hmd = -1,
		[Token(Token = "0x4000AE1")]
		Device1 = 0,
		[Token(Token = "0x4000AE2")]
		Device2 = 1,
		[Token(Token = "0x4000AE3")]
		Device3 = 2,
		[Token(Token = "0x4000AE4")]
		Device4 = 3,
		[Token(Token = "0x4000AE5")]
		Device5 = 4,
		[Token(Token = "0x4000AE6")]
		Device6 = 5,
		[Token(Token = "0x4000AE7")]
		Device7 = 6,
		[Token(Token = "0x4000AE8")]
		Device8 = 7,
		[Token(Token = "0x4000AE9")]
		Device9 = 8,
		[Token(Token = "0x4000AEA")]
		Device10 = 9,
		[Token(Token = "0x4000AEB")]
		Device11 = 10,
		[Token(Token = "0x4000AEC")]
		Device12 = 11,
		[Token(Token = "0x4000AED")]
		Device13 = 12,
		[Token(Token = "0x4000AEE")]
		Device14 = 13,
		[Token(Token = "0x4000AEF")]
		Device15 = 14,
		[Token(Token = "0x4000AF0")]
		[HideInInspector]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92B7D8", Offset = "0x92B7D8")]
		RightHand = 0,
		[Token(Token = "0x4000AF1")]
		[HideInInspector]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92B824", Offset = "0x92B824")]
		LeftHand = 1,
		[Token(Token = "0x4000AF2")]
		[HideInInspector]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92B870", Offset = "0x92B870")]
		Controller3 = 2,
		[Token(Token = "0x4000AF3")]
		[HideInInspector]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92B8BC", Offset = "0x92B8BC")]
		Controller4 = 3,
		[Token(Token = "0x4000AF4")]
		[HideInInspector]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92B908", Offset = "0x92B908")]
		Controller5 = 4,
		[Token(Token = "0x4000AF5")]
		[HideInInspector]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92B954", Offset = "0x92B954")]
		Controller6 = 5,
		[Token(Token = "0x4000AF6")]
		[HideInInspector]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92B9A0", Offset = "0x92B9A0")]
		Controller7 = 6,
		[Token(Token = "0x4000AF7")]
		[HideInInspector]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92B9EC", Offset = "0x92B9EC")]
		Controller8 = 7,
		[Token(Token = "0x4000AF8")]
		[HideInInspector]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92BA38", Offset = "0x92BA38")]
		Controller9 = 8,
		[Token(Token = "0x4000AF9")]
		[HideInInspector]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92BA84", Offset = "0x92BA84")]
		Controller10 = 9,
		[Token(Token = "0x4000AFA")]
		[HideInInspector]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92BAD0", Offset = "0x92BAD0")]
		Controller11 = 10,
		[Token(Token = "0x4000AFB")]
		[HideInInspector]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92BB1C", Offset = "0x92BB1C")]
		Controller12 = 11,
		[Token(Token = "0x4000AFC")]
		[HideInInspector]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92BB68", Offset = "0x92BB68")]
		Controller13 = 12,
		[Token(Token = "0x4000AFD")]
		[HideInInspector]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92BBB4", Offset = "0x92BBB4")]
		Controller14 = 13,
		[Token(Token = "0x4000AFE")]
		[HideInInspector]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92BC00", Offset = "0x92BC00")]
		Controller15 = 14
	}
	[Token(Token = "0x2000155")]
	public class DeviceRoleHandler : ViveRole.MapHandler<DeviceRole>
	{
		[Token(Token = "0x17000187")]
		public override bool BlockBindings
		{
			[Token(Token = "0x6000CCF")]
			[Address(RVA = "0xD139FC", Offset = "0xD139FC", VA = "0xD139FC", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0xD13A04", Offset = "0xD13A04", VA = "0xD13A04", Slot = "11")]
		public override void OnAssignedAsCurrentMapHandler()
		{
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0xD13CF8", Offset = "0xD13CF8", VA = "0xD13CF8", Slot = "13")]
		public override void OnConnectedDeviceChanged(uint deviceIndex, VRModuleDeviceClass deviceClass, string deviceSN, bool connected)
		{
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0xD13DF4", Offset = "0xD13DF4", VA = "0xD13DF4", Slot = "15")]
		public override void OnBindingChanged(string deviceSN, bool previousIsBound, DeviceRole previousRole, bool currentIsBound, DeviceRole currentRole)
		{
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0xD13A08", Offset = "0xD13A08", VA = "0xD13A08")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0xD13E80", Offset = "0xD13E80", VA = "0xD13E80")]
		public DeviceRoleHandler()
		{
		}
	}
	[Token(Token = "0x2000156")]
	[AttributeAttribute(Name = "ViveRoleEnumAttribute", RVA = "0x925C3C", Offset = "0x925C3C")]
	public enum HandRole
	{
		[Token(Token = "0x4000B00")]
		Invalid = -1,
		[Token(Token = "0x4000B01")]
		RightHand = 0,
		[Token(Token = "0x4000B02")]
		LeftHand = 1,
		[Token(Token = "0x4000B03")]
		ExternalCamera = 2,
		[Token(Token = "0x4000B04")]
		Controller3 = 2,
		[Token(Token = "0x4000B05")]
		Controller4 = 3,
		[Token(Token = "0x4000B06")]
		Controller5 = 4,
		[Token(Token = "0x4000B07")]
		Controller6 = 5,
		[Token(Token = "0x4000B08")]
		Controller7 = 6,
		[Token(Token = "0x4000B09")]
		Controller8 = 7,
		[Token(Token = "0x4000B0A")]
		Controller9 = 8,
		[Token(Token = "0x4000B0B")]
		Controller10 = 9,
		[Token(Token = "0x4000B0C")]
		Controller11 = 10,
		[Token(Token = "0x4000B0D")]
		Controller12 = 11,
		[Token(Token = "0x4000B0E")]
		Controller13 = 12,
		[Token(Token = "0x4000B0F")]
		Controller14 = 13,
		[Token(Token = "0x4000B10")]
		Controller15 = 14
	}
	[Token(Token = "0x2000157")]
	public static class ConvertRoleExtension
	{
		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0xD139EC", Offset = "0xD139EC", VA = "0xD139EC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x939F44", Offset = "0x939F44")]
		public static DeviceRole ToDeviceRole(this HandRole role)
		{
			return default(DeviceRole);
		}
	}
	[Token(Token = "0x2000158")]
	public class HandRoleHandler : ViveRole.MapHandler<HandRole>
	{
		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<uint> m_sortedDeviceList;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly float[] s_deviceDirPoint;

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0xD15F40", Offset = "0xD15F40", VA = "0xD15F40")]
		private bool IsController(uint deviceIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0xD1602C", Offset = "0xD1602C", VA = "0xD1602C")]
		private bool IsController(VRModuleDeviceClass deviceClass)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0xD16038", Offset = "0xD16038", VA = "0xD16038")]
		private bool IsTracker(uint deviceIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0xD16124", Offset = "0xD16124", VA = "0xD16124")]
		private bool IsTracker(VRModuleDeviceClass deviceClass)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0xD16130", Offset = "0xD16130", VA = "0xD16130", Slot = "11")]
		public override void OnAssignedAsCurrentMapHandler()
		{
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0xD16178", Offset = "0xD16178", VA = "0xD16178", Slot = "14")]
		public override void OnTrackedDeviceRoleChanged()
		{
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0xD1619C", Offset = "0xD1619C", VA = "0xD1619C", Slot = "13")]
		public override void OnConnectedDeviceChanged(uint deviceIndex, VRModuleDeviceClass deviceClass, string deviceSN, bool connected)
		{
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0xD162A8", Offset = "0xD162A8", VA = "0xD162A8", Slot = "15")]
		public override void OnBindingChanged(string deviceSN, bool previousIsBound, HandRole previousRole, bool currentIsBound, HandRole currentRole)
		{
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0xD16154", Offset = "0xD16154", VA = "0xD16154")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0xD1633C", Offset = "0xD1633C", VA = "0xD1633C")]
		private void MappingLeftRightHands()
		{
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0xD16C4C", Offset = "0xD16C4C", VA = "0xD16C4C")]
		private void MappingOtherControllers()
		{
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0xD17320", Offset = "0xD17320", VA = "0xD17320")]
		public static void SortDeviceIndicesByDirection(List<uint> deviceList, RigidPose sortingReference)
		{
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0xD17688", Offset = "0xD17688", VA = "0xD17688")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x939F90", Offset = "0x939F90")]
		public static void SortDeviceIndicesByDirection(List<uint> deviceList, HTC.UnityPlugin.PoseTracker.Pose sortingReference)
		{
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0xD17728", Offset = "0xD17728", VA = "0xD17728")]
		private static int CompareDirection(uint d1, uint d2)
		{
			return default(int);
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0xD135DC", Offset = "0xD135DC", VA = "0xD135DC")]
		public static float GetDirectionPoint(Vector2 pos)
		{
			return default(float);
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0xD178D0", Offset = "0xD178D0", VA = "0xD178D0")]
		public HandRoleHandler()
		{
		}
	}
	[Token(Token = "0x2000159")]
	[AttributeAttribute(Name = "ViveRoleEnumAttribute", RVA = "0x925C60", Offset = "0x925C60")]
	public enum TrackerRole
	{
		[Token(Token = "0x4000B14")]
		Invalid,
		[Token(Token = "0x4000B15")]
		Tracker1,
		[Token(Token = "0x4000B16")]
		Tracker2,
		[Token(Token = "0x4000B17")]
		Tracker3,
		[Token(Token = "0x4000B18")]
		Tracker4,
		[Token(Token = "0x4000B19")]
		Tracker5,
		[Token(Token = "0x4000B1A")]
		Tracker6,
		[Token(Token = "0x4000B1B")]
		Tracker7,
		[Token(Token = "0x4000B1C")]
		Tracker8,
		[Token(Token = "0x4000B1D")]
		Tracker9,
		[Token(Token = "0x4000B1E")]
		Tracker10,
		[Token(Token = "0x4000B1F")]
		Tracker11,
		[Token(Token = "0x4000B20")]
		Tracker12,
		[Token(Token = "0x4000B21")]
		Tracker13
	}
	[Token(Token = "0x200015A")]
	public class TrackerRoleHandler : ViveRole.MapHandler<TrackerRole>
	{
		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0xD9EED4", Offset = "0xD9EED4", VA = "0xD9EED4")]
		private bool IsTracker(uint deviceIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0xD9EFC0", Offset = "0xD9EFC0", VA = "0xD9EFC0")]
		private bool IsTracker(VRModuleDeviceClass deviceClass)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0xD9EFCC", Offset = "0xD9EFCC", VA = "0xD9EFCC", Slot = "11")]
		public override void OnAssignedAsCurrentMapHandler()
		{
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0xD9EFD4", Offset = "0xD9EFD4", VA = "0xD9EFD4", Slot = "13")]
		public override void OnConnectedDeviceChanged(uint deviceIndex, VRModuleDeviceClass deviceClass, string deviceSN, bool connected)
		{
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0xD9F0D4", Offset = "0xD9F0D4", VA = "0xD9F0D4", Slot = "15")]
		public override void OnBindingChanged(string deviceSN, bool previousIsBound, TrackerRole previousRole, bool currentIsBound, TrackerRole currentRole)
		{
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0xD9EFD0", Offset = "0xD9EFD0", VA = "0xD9EFD0")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0xD9F160", Offset = "0xD9F160", VA = "0xD9F160")]
		private void MappingTrackers()
		{
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0xD9F540", Offset = "0xD9F540", VA = "0xD9F540")]
		public TrackerRoleHandler()
		{
		}
	}
	[Token(Token = "0x200015B")]
	public static class ViveRole
	{
		[Token(Token = "0x20004EF")]
		public struct MappingChangedEventArg
		{
			[Token(Token = "0x4001E9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int roleValue;

			[Token(Token = "0x4001E9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public uint previousDeviceIndex;

			[Token(Token = "0x4001E9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public uint currentDeviceIndex;
		}

		[Token(Token = "0x20004F0")]
		public struct MappingChangedEventArg<TRole>
		{
			[Token(Token = "0x4001E9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TRole role;

			[Token(Token = "0x4001EA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public uint previousDeviceIndex;

			[Token(Token = "0x4001EA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public uint currentDeviceIndex;
		}

		[Token(Token = "0x20004F1")]
		public interface IMap
		{
			[Token(Token = "0x1700043B")]
			ViveRoleEnum.IInfo RoleValueInfo
			{
				[Token(Token = "0x6002410")]
				get;
			}

			[Token(Token = "0x1700043C")]
			IMapHandler Handler
			{
				[Token(Token = "0x6002411")]
				get;
			}

			[Token(Token = "0x1700043D")]
			int BindingCount
			{
				[Token(Token = "0x6002412")]
				get;
			}

			[Token(Token = "0x1700043E")]
			IIndexedTableReadOnly<string, int> BindingTable
			{
				[Token(Token = "0x6002413")]
				get;
			}

			[Token(Token = "0x14000076")]
			event UnityAction<IMap, MappingChangedEventArg> onRoleValueMappingChanged;

			[Token(Token = "0x6002414")]
			bool IsRoleValueMapped(int roleValue);

			[Token(Token = "0x6002415")]
			bool IsDeviceMapped(uint deviceIndex);

			[Token(Token = "0x6002416")]
			uint GetMappedDeviceByRoleValue(int roleValue);

			[Token(Token = "0x6002417")]
			int GetMappedRoleValueByDevice(uint deviceIndex);

			[Token(Token = "0x6002418")]
			[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x93F1AC", Offset = "0x93F1AC")]
			void BindRoleValue(int roleValue, string deviceSN);

			[Token(Token = "0x6002419")]
			void BindDeviceToRoleValue(string deviceSN, int roleValue);

			[Token(Token = "0x600241A")]
			void BindAll();

			[Token(Token = "0x600241B")]
			bool UnbindRoleValue(int roleValue);

			[Token(Token = "0x600241C")]
			bool UnbindDevice(string deviceSN);

			[Token(Token = "0x600241D")]
			bool UnbindConnectedDevice(uint deviceIndex);

			[Token(Token = "0x600241E")]
			void UnbindAll();

			[Token(Token = "0x600241F")]
			bool IsRoleValueBound(int roleValue);

			[Token(Token = "0x6002420")]
			bool IsDeviceBound(string deviceSN);

			[Token(Token = "0x6002421")]
			bool IsDeviceConnectedAndBound(uint deviceIndex);

			[Token(Token = "0x6002422")]
			string GetBoundDeviceByRoleValue(int roleValue);

			[Token(Token = "0x6002423")]
			int GetBoundRoleValueByDevice(string deviceSN);

			[Token(Token = "0x6002424")]
			int GetBoundRoleValueByConnectedDevice(uint deviceIndex);
		}

		[Token(Token = "0x20004F2")]
		private sealed class Map : IMap
		{
			[Token(Token = "0x4001EA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly ViveRoleEnum.IInfo m_info;

			[Token(Token = "0x4001EA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private IMapHandler m_handler;

			[Token(Token = "0x4001EA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private bool m_lockInternalMapping;

			[Token(Token = "0x4001EA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private readonly uint[] m_role2index;

			[Token(Token = "0x4001EA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private readonly int[] m_index2role;

			[Token(Token = "0x4001EA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private readonly IndexedSet<uint>[] m_roleBoundDevices;

			[Token(Token = "0x4001EA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private readonly IndexedTable<string, int> m_sn2role;

			[Token(Token = "0x1700043F")]
			public ViveRoleEnum.IInfo RoleValueInfo
			{
				[Token(Token = "0x6002428")]
				[Address(RVA = "0xDB5D58", Offset = "0xDB5D58", VA = "0xDB5D58", Slot = "4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000440")]
			public int BindingCount
			{
				[Token(Token = "0x6002429")]
				[Address(RVA = "0xDB5D60", Offset = "0xDB5D60", VA = "0xDB5D60", Slot = "6")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x17000441")]
			public IIndexedTableReadOnly<string, int> BindingTable
			{
				[Token(Token = "0x600242A")]
				[Address(RVA = "0xDB5DC0", Offset = "0xDB5DC0", VA = "0xDB5DC0", Slot = "7")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000442")]
			public IMapHandler Handler
			{
				[Token(Token = "0x600242B")]
				[Address(RVA = "0xDB5E20", Offset = "0xDB5E20", VA = "0xDB5E20", Slot = "5")]
				get
				{
					return null;
				}
				[Token(Token = "0x600242C")]
				[Address(RVA = "0xDB5E28", Offset = "0xDB5E28", VA = "0xDB5E28")]
				set
				{
				}
			}

			[Token(Token = "0x14000077")]
			public event UnityAction<IMap, MappingChangedEventArg> onRoleValueMappingChanged
			{
				[Token(Token = "0x600242D")]
				[Address(RVA = "0xDB6090", Offset = "0xDB6090", VA = "0xDB6090", Slot = "25")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F204", Offset = "0x93F204")]
				add
				{
				}
				[Token(Token = "0x600242E")]
				[Address(RVA = "0xDB617C", Offset = "0xDB617C", VA = "0xDB617C", Slot = "26")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F214", Offset = "0x93F214")]
				remove
				{
				}
			}

			[Token(Token = "0x6002427")]
			[Address(RVA = "0xDB588C", Offset = "0xDB588C", VA = "0xDB588C")]
			public Map(Type roleType)
			{
			}

			[Token(Token = "0x600242F")]
			[Address(RVA = "0xDB6268", Offset = "0xDB6268", VA = "0xDB6268")]
			private string DeviceSN(uint deviceIndex)
			{
				return null;
			}

			[Token(Token = "0x6002430")]
			[Address(RVA = "0xDB4C00", Offset = "0xDB4C00", VA = "0xDB4C00")]
			public void OnConnectedDeviceChanged(uint deviceIndex, VRModuleDeviceClass deviceClass, string deviceSN, bool connected)
			{
			}

			[Token(Token = "0x6002431")]
			[Address(RVA = "0xDB4E94", Offset = "0xDB4E94", VA = "0xDB4E94")]
			public void OnTrackedDeviceRoleChanged()
			{
			}

			[Token(Token = "0x6002432")]
			[Address(RVA = "0xDB6D14", Offset = "0xDB6D14", VA = "0xDB6D14", Slot = "8")]
			public bool IsRoleValueMapped(int roleValue)
			{
				return default(bool);
			}

			[Token(Token = "0x6002433")]
			[Address(RVA = "0xDB6E78", Offset = "0xDB6E78", VA = "0xDB6E78")]
			public bool IsRoleOffsetMapped(int roleOffset)
			{
				return default(bool);
			}

			[Token(Token = "0x6002434")]
			[Address(RVA = "0xDB656C", Offset = "0xDB656C", VA = "0xDB656C", Slot = "9")]
			public bool IsDeviceMapped(uint deviceIndex)
			{
				return default(bool);
			}

			[Token(Token = "0x6002435")]
			[Address(RVA = "0xDB6F24", Offset = "0xDB6F24", VA = "0xDB6F24", Slot = "19")]
			public bool IsRoleValueBound(int roleValue)
			{
				return default(bool);
			}

			[Token(Token = "0x6002436")]
			[Address(RVA = "0xDB6348", Offset = "0xDB6348", VA = "0xDB6348", Slot = "20")]
			public bool IsDeviceBound(string deviceSN)
			{
				return default(bool);
			}

			[Token(Token = "0x6002437")]
			[Address(RVA = "0xDB7110", Offset = "0xDB7110", VA = "0xDB7110", Slot = "21")]
			public bool IsDeviceConnectedAndBound(uint deviceIndex)
			{
				return default(bool);
			}

			[Token(Token = "0x6002438")]
			[Address(RVA = "0xDB7138", Offset = "0xDB7138", VA = "0xDB7138", Slot = "10")]
			public uint GetMappedDeviceByRoleValue(int roleValue)
			{
				return default(uint);
			}

			[Token(Token = "0x6002439")]
			[Address(RVA = "0xDB6990", Offset = "0xDB6990", VA = "0xDB6990", Slot = "11")]
			public int GetMappedRoleValueByDevice(uint deviceIndex)
			{
				return default(int);
			}

			[Token(Token = "0x600243A")]
			[Address(RVA = "0xDB72C4", Offset = "0xDB72C4", VA = "0xDB72C4", Slot = "22")]
			public string GetBoundDeviceByRoleValue(int roleValue)
			{
				return null;
			}

			[Token(Token = "0x600243B")]
			[Address(RVA = "0xDB63DC", Offset = "0xDB63DC", VA = "0xDB63DC", Slot = "23")]
			public int GetBoundRoleValueByDevice(string deviceSN)
			{
				return default(int);
			}

			[Token(Token = "0x600243C")]
			[Address(RVA = "0xDB7354", Offset = "0xDB7354", VA = "0xDB7354", Slot = "24")]
			public int GetBoundRoleValueByConnectedDevice(uint deviceIndex)
			{
				return default(int);
			}

			[Token(Token = "0x600243D")]
			[Address(RVA = "0xDB737C", Offset = "0xDB737C", VA = "0xDB737C")]
			private void InternalMapping(int roleValue, uint deviceIndex)
			{
			}

			[Token(Token = "0x600243E")]
			[Address(RVA = "0xDB6ACC", Offset = "0xDB6ACC", VA = "0xDB6ACC")]
			private void InternalUnmapping(int roleValue, uint deviceIndex)
			{
			}

			[Token(Token = "0x600243F")]
			[Address(RVA = "0xDB644C", Offset = "0xDB644C", VA = "0xDB644C")]
			private void InternalInsertRoleBoundDevice(string deviceSN, uint deviceIndex, int boundRoleValue)
			{
			}

			[Token(Token = "0x6002440")]
			[Address(RVA = "0xDB66B0", Offset = "0xDB66B0", VA = "0xDB66B0")]
			private void InternalRemoveRoleBoundDevice(string deviceSN, uint deviceIndex, int boundRoleValue)
			{
			}

			[Token(Token = "0x6002441")]
			[Address(RVA = "0xDB7904", Offset = "0xDB7904", VA = "0xDB7904")]
			private void InternalBind(string deviceSN, int roleValue)
			{
			}

			[Token(Token = "0x6002442")]
			[Address(RVA = "0xDB7BB4", Offset = "0xDB7BB4", VA = "0xDB7BB4")]
			private void InternalUnbind(string deviceSN, int boundRoleValue)
			{
			}

			[Token(Token = "0x6002443")]
			[Address(RVA = "0xDB7F28", Offset = "0xDB7F28", VA = "0xDB7F28")]
			public void MappingRoleValue(int roleValue, uint deviceIndex)
			{
			}

			[Token(Token = "0x6002444")]
			[Address(RVA = "0xDB83B0", Offset = "0xDB83B0", VA = "0xDB83B0")]
			public bool UnmappingRoleValue(int roleValue)
			{
				return default(bool);
			}

			[Token(Token = "0x6002445")]
			[Address(RVA = "0xDB8410", Offset = "0xDB8410", VA = "0xDB8410")]
			public bool UnmappingDevice(uint deviceIndex)
			{
				return default(bool);
			}

			[Token(Token = "0x6002446")]
			[Address(RVA = "0xDB8478", Offset = "0xDB8478", VA = "0xDB8478")]
			public void UnmappingAll()
			{
			}

			[Token(Token = "0x6002447")]
			[Address(RVA = "0xDB864C", Offset = "0xDB864C", VA = "0xDB864C", Slot = "12")]
			[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x93F224", Offset = "0x93F224")]
			public void BindRoleValue(int roleValue, string deviceSN)
			{
			}

			[Token(Token = "0x6002448")]
			[Address(RVA = "0xDB865C", Offset = "0xDB865C", VA = "0xDB865C", Slot = "13")]
			public void BindDeviceToRoleValue(string deviceSN, int roleValue)
			{
			}

			[Token(Token = "0x6002449")]
			[Address(RVA = "0xDB8790", Offset = "0xDB8790", VA = "0xDB8790", Slot = "14")]
			public void BindAll()
			{
			}

			[Token(Token = "0x600244A")]
			[Address(RVA = "0xDB8A10", Offset = "0xDB8A10", VA = "0xDB8A10", Slot = "15")]
			public bool UnbindRoleValue(int roleValue)
			{
				return default(bool);
			}

			[Token(Token = "0x600244B")]
			[Address(RVA = "0xDB8B90", Offset = "0xDB8B90", VA = "0xDB8B90", Slot = "16")]
			public bool UnbindDevice(string deviceSN)
			{
				return default(bool);
			}

			[Token(Token = "0x600244C")]
			[Address(RVA = "0xDB8BE0", Offset = "0xDB8BE0", VA = "0xDB8BE0", Slot = "17")]
			public bool UnbindConnectedDevice(uint deviceIndex)
			{
				return default(bool);
			}

			[Token(Token = "0x600244D")]
			[Address(RVA = "0xDB5FE0", Offset = "0xDB5FE0", VA = "0xDB5FE0", Slot = "18")]
			public void UnbindAll()
			{
			}

			[Token(Token = "0x600244E")]
			[Address(RVA = "0xDB773C", Offset = "0xDB773C", VA = "0xDB773C")]
			private IndexedSet<uint> InternalGetRoleBoundDevices(int roleValue)
			{
				return null;
			}
		}

		[Token(Token = "0x20004F3")]
		public interface IMap<TRole> : IMap
		{
			[Token(Token = "0x17000443")]
			ViveRoleEnum.IInfo<TRole> RoleInfo
			{
				[Token(Token = "0x600244F")]
				get;
			}

			[Token(Token = "0x14000078")]
			event UnityAction<IMap<TRole>, MappingChangedEventArg<TRole>> onRoleMappingChanged;

			[Token(Token = "0x6002450")]
			bool IsRoleMapped(TRole role);

			[Token(Token = "0x6002451")]
			uint GetMappedDeviceByRole(TRole role);

			[Token(Token = "0x6002452")]
			TRole GetMappedRoleByDevice(uint deviceIndex);

			[Token(Token = "0x6002453")]
			[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x93F25C", Offset = "0x93F25C")]
			void BindRole(TRole role, string deviceSN);

			[Token(Token = "0x6002454")]
			void BindDeviceToRole(string deviceSN, TRole role);

			[Token(Token = "0x6002455")]
			bool UnbindRole(TRole role);

			[Token(Token = "0x6002456")]
			bool IsRoleBound(TRole role);

			[Token(Token = "0x6002457")]
			string GetBoundDeviceByRole(TRole role);

			[Token(Token = "0x6002458")]
			TRole GetBoundRoleByDevice(string deviceSN);

			[Token(Token = "0x6002459")]
			TRole GetBoundRoleByConnectedDevice(uint deviceIndex);
		}

		[Token(Token = "0x20004F4")]
		private sealed class GenericMap<TRole> : IMap<TRole>, IMap
		{
			[Token(Token = "0x4001EAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static GenericMap<TRole> s_instance;

			[Token(Token = "0x4001EAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly ViveRoleEnum.IInfo<TRole> m_info;

			[Token(Token = "0x4001EAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly Map m_map;

			[Token(Token = "0x17000444")]
			public ViveRoleEnum.IInfo RoleValueInfo
			{
				[Token(Token = "0x600245D")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000445")]
			public ViveRoleEnum.IInfo<TRole> RoleInfo
			{
				[Token(Token = "0x600245E")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000446")]
			public IMapHandler Handler
			{
				[Token(Token = "0x600245F")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000447")]
			public int BindingCount
			{
				[Token(Token = "0x6002460")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x17000448")]
			public IIndexedTableReadOnly<string, int> BindingTable
			{
				[Token(Token = "0x6002461")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x14000079")]
			public event UnityAction<IMap, MappingChangedEventArg> onRoleValueMappingChanged
			{
				[Token(Token = "0x6002462")]
				add
				{
				}
				[Token(Token = "0x6002463")]
				remove
				{
				}
			}

			[Token(Token = "0x1400007A")]
			public event UnityAction<IMap<TRole>, MappingChangedEventArg<TRole>> onRoleMappingChanged
			{
				[Token(Token = "0x6002464")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F2B4", Offset = "0x93F2B4")]
				add
				{
				}
				[Token(Token = "0x6002465")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F2C4", Offset = "0x93F2C4")]
				remove
				{
				}
			}

			[Token(Token = "0x600245C")]
			public GenericMap()
			{
			}

			[Token(Token = "0x6002466")]
			private void OnMappingChanged(IMap map, MappingChangedEventArg arg)
			{
			}

			[Token(Token = "0x6002467")]
			public void MappingRole(TRole role, uint deviceIndex)
			{
			}

			[Token(Token = "0x6002468")]
			public void MappingRoleValue(int roleValue, uint deviceIndex)
			{
			}

			[Token(Token = "0x6002469")]
			public bool UnmappingRole(TRole role)
			{
				return default(bool);
			}

			[Token(Token = "0x600246A")]
			public bool UnmappingRoleValue(int roleValue)
			{
				return default(bool);
			}

			[Token(Token = "0x600246B")]
			public bool UnmappingDevice(uint deviceIndex)
			{
				return default(bool);
			}

			[Token(Token = "0x600246C")]
			public void UnmappingAll()
			{
			}

			[Token(Token = "0x600246D")]
			public bool IsRoleMapped(TRole role)
			{
				return default(bool);
			}

			[Token(Token = "0x600246E")]
			public bool IsRoleValueMapped(int roleValue)
			{
				return default(bool);
			}

			[Token(Token = "0x600246F")]
			public bool IsDeviceMapped(uint deviceIndex)
			{
				return default(bool);
			}

			[Token(Token = "0x6002470")]
			public uint GetMappedDeviceByRole(TRole role)
			{
				return default(uint);
			}

			[Token(Token = "0x6002471")]
			public TRole GetMappedRoleByDevice(uint deviceIndex)
			{
				return (TRole)null;
			}

			[Token(Token = "0x6002472")]
			public uint GetMappedDeviceByRoleValue(int roleValue)
			{
				return default(uint);
			}

			[Token(Token = "0x6002473")]
			public int GetMappedRoleValueByDevice(uint deviceIndex)
			{
				return default(int);
			}

			[Token(Token = "0x6002474")]
			[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x93F2D4", Offset = "0x93F2D4")]
			public void BindRole(TRole role, string deviceSN)
			{
			}

			[Token(Token = "0x6002475")]
			[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x93F30C", Offset = "0x93F30C")]
			public void BindRoleValue(int roleValue, string deviceSN)
			{
			}

			[Token(Token = "0x6002476")]
			public void BindDeviceToRole(string deviceSN, TRole role)
			{
			}

			[Token(Token = "0x6002477")]
			public void BindDeviceToRoleValue(string deviceSN, int roleValue)
			{
			}

			[Token(Token = "0x6002478")]
			public void BindAll()
			{
			}

			[Token(Token = "0x6002479")]
			public bool UnbindRole(TRole role)
			{
				return default(bool);
			}

			[Token(Token = "0x600247A")]
			public bool UnbindRoleValue(int roleValue)
			{
				return default(bool);
			}

			[Token(Token = "0x600247B")]
			public bool UnbindDevice(string deviceSN)
			{
				return default(bool);
			}

			[Token(Token = "0x600247C")]
			public bool UnbindConnectedDevice(uint deviceIndex)
			{
				return default(bool);
			}

			[Token(Token = "0x600247D")]
			public void UnbindAll()
			{
			}

			[Token(Token = "0x600247E")]
			public bool IsRoleBound(TRole role)
			{
				return default(bool);
			}

			[Token(Token = "0x600247F")]
			public bool IsRoleValueBound(int roleValue)
			{
				return default(bool);
			}

			[Token(Token = "0x6002480")]
			public bool IsDeviceBound(string deviceSN)
			{
				return default(bool);
			}

			[Token(Token = "0x6002481")]
			public bool IsDeviceConnectedAndBound(uint deviceIndex)
			{
				return default(bool);
			}

			[Token(Token = "0x6002482")]
			public TRole GetBoundRoleByDevice(string deviceSN)
			{
				return (TRole)null;
			}

			[Token(Token = "0x6002483")]
			public TRole GetBoundRoleByConnectedDevice(uint deviceIndex)
			{
				return (TRole)null;
			}

			[Token(Token = "0x6002484")]
			public string GetBoundDeviceByRole(TRole role)
			{
				return null;
			}

			[Token(Token = "0x6002485")]
			public string GetBoundDeviceByRoleValue(int roleValue)
			{
				return null;
			}

			[Token(Token = "0x6002486")]
			public int GetBoundRoleValueByDevice(string deviceSN)
			{
				return default(int);
			}

			[Token(Token = "0x6002487")]
			public int GetBoundRoleValueByConnectedDevice(uint deviceIndex)
			{
				return default(int);
			}
		}

		[Token(Token = "0x20004F5")]
		public interface IMapHandler
		{
			[Token(Token = "0x17000449")]
			bool BlockBindings
			{
				[Token(Token = "0x6002488")]
				get;
			}

			[Token(Token = "0x6002489")]
			void OnAssignedAsCurrentMapHandler();

			[Token(Token = "0x600248A")]
			void OnDivestedOfCurrentMapHandler();

			[Token(Token = "0x600248B")]
			void OnConnectedDeviceChanged(uint deviceIndex, VRModuleDeviceClass deviceClass, string deviceSN, bool connected);

			[Token(Token = "0x600248C")]
			void OnTrackedDeviceRoleChanged();

			[Token(Token = "0x600248D")]
			void OnBindingRoleValueChanged(string deviceSN, bool previousIsBound, int previousRoleValue, bool currentIsBound, int currentRoleValue);
		}

		[Token(Token = "0x20004F6")]
		public abstract class MapHandler<TRole> : IMapHandler
		{
			[Token(Token = "0x4001EAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly GenericMap<TRole> m_map;

			[Token(Token = "0x1700044A")]
			public IMap<TRole> RoleMap
			{
				[Token(Token = "0x600248F")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700044B")]
			public ViveRoleEnum.IInfo<TRole> RoleInfo
			{
				[Token(Token = "0x6002490")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700044C")]
			public bool IsCurrentMapHandler
			{
				[Token(Token = "0x6002491")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700044D")]
			public virtual bool BlockBindings
			{
				[Token(Token = "0x6002492")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x600248E")]
			public MapHandler()
			{
			}

			[Token(Token = "0x6002493")]
			public virtual void OnAssignedAsCurrentMapHandler()
			{
			}

			[Token(Token = "0x6002494")]
			public virtual void OnDivestedOfCurrentMapHandler()
			{
			}

			[Token(Token = "0x6002495")]
			public virtual void OnConnectedDeviceChanged(uint deviceIndex, VRModuleDeviceClass deviceClass, string deviceSN, bool connected)
			{
			}

			[Token(Token = "0x6002496")]
			public virtual void OnTrackedDeviceRoleChanged()
			{
			}

			[Token(Token = "0x6002497")]
			public virtual void OnBindingChanged(string deviceSN, bool previousIsBound, TRole previousRole, bool currentIsBound, TRole currentRole)
			{
			}

			[Token(Token = "0x6002498")]
			public void OnBindingRoleValueChanged(string deviceSN, bool previousIsBound, int previousRoleValue, bool currentIsBound, int currentRoleValue)
			{
			}

			[Token(Token = "0x6002499")]
			protected void MappingRole(TRole role, uint deviceIndex)
			{
			}

			[Token(Token = "0x600249A")]
			protected void MappingRoleIfUnbound(TRole role, uint deviceIndex)
			{
			}

			[Token(Token = "0x600249B")]
			protected bool UnmappingRole(TRole role)
			{
				return default(bool);
			}

			[Token(Token = "0x600249C")]
			protected bool UnmappingDevice(uint deviceIndex)
			{
				return default(bool);
			}

			[Token(Token = "0x600249D")]
			protected void UnmappingAll()
			{
			}
		}

		[Token(Token = "0x4000B22")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92BC4C", Offset = "0x92BC4C")]
		public const uint MAX_DEVICE_COUNT = 64u;

		[Token(Token = "0x4000B23")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92BC84", Offset = "0x92BC84")]
		public const uint INVALID_DEVICE_INDEX = uint.MaxValue;

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly DeviceRoleHandler DefaultDeviceRoleHandler;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly HandRoleHandler DefaultHandRoleHandler;

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly TrackerRoleHandler DefaultTrackerRoleHandler;

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly BodyRoleHandler DefaultBodyRoleHandler;

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool s_initialized;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static IndexedTable<Type, Map> s_mapTable;

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0xDB4438", Offset = "0xDB4438", VA = "0xDB4438")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x939FA0", Offset = "0x939FA0")]
		private static void OnLoad()
		{
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0xDB4788", Offset = "0xDB4788", VA = "0xDB4788")]
		private static void OnModuleActive(VRModuleActiveEnum activatedModule)
		{
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0xDB4558", Offset = "0xDB4558", VA = "0xDB4558")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0xDB47E4", Offset = "0xDB47E4", VA = "0xDB47E4")]
		private static void OnDeviceConnected(uint deviceIndex, bool connected)
		{
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0xDB4D98", Offset = "0xDB4D98", VA = "0xDB4D98")]
		private static void OnTrackedDeviceRoleChanged()
		{
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0xDB4F50", Offset = "0xDB4F50", VA = "0xDB4F50")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x939FB0", Offset = "0x939FB0")]
		public static bool TryGetDeviceIndexBySerialNumber(string serialNumber, out uint deviceIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0xDB4FC8", Offset = "0xDB4FC8", VA = "0xDB4FC8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x939FE8", Offset = "0x939FE8")]
		public static string GetModelNumber(uint deviceIndex)
		{
			return null;
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0xDB515C", Offset = "0xDB515C", VA = "0xDB515C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x93A020", Offset = "0x93A020")]
		public static string GetSerialNumber(uint deviceIndex)
		{
			return null;
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0xDB5288", Offset = "0xDB5288", VA = "0xDB5288")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x93A058", Offset = "0x93A058")]
		public static VRModuleDeviceClass GetDeviceClass(uint deviceIndex)
		{
			return default(VRModuleDeviceClass);
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0xDB53A4", Offset = "0xDB53A4", VA = "0xDB53A4")]
		public static uint GetDeviceIndex(HandRole role)
		{
			return default(uint);
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0xDB5414", Offset = "0xDB5414", VA = "0xDB5414")]
		public static uint GetDeviceIndex(DeviceRole role)
		{
			return default(uint);
		}

		[Token(Token = "0x6000CFA")]
		public static uint GetDeviceIndexEx<TRole>(TRole role)
		{
			return default(uint);
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0xDAA874", Offset = "0xDAA874", VA = "0xDAA874")]
		public static uint GetDeviceIndexEx(Type type, int roleValue)
		{
			return default(uint);
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0xDB50F4", Offset = "0xDB50F4", VA = "0xDB50F4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x93A090", Offset = "0x93A090")]
		public static bool IsValidIndex(uint index)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0xDB5484", Offset = "0xDB5484", VA = "0xDB5484")]
		private static Map GetInternalMap(Type roleType)
		{
			return null;
		}

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0xDAABC4", Offset = "0xDAABC4", VA = "0xDAABC4")]
		public static IMap GetMap(Type roleType)
		{
			return null;
		}

		[Token(Token = "0x6000CFF")]
		private static GenericMap<TRole> GetInternalMap<TRole>()
		{
			return null;
		}

		[Token(Token = "0x6000D00")]
		public static IMap<TRole> GetMap<TRole>()
		{
			return null;
		}

		[Token(Token = "0x6000D01")]
		public static void AssignMapHandler<TRole>(MapHandler<TRole> mapHandler)
		{
		}
	}
	[Token(Token = "0x200015C")]
	public class ViveRoleBindingsHelper : SingletonBehaviour<ViveRoleBindingsHelper>
	{
		[Serializable]
		[Token(Token = "0x20004F7")]
		public struct Binding
		{
			[Token(Token = "0x4001EAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x9381FC", Offset = "0x9381FC")]
			public string device_sn;

			[Token(Token = "0x4001EB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public VRModuleDeviceModel device_model;

			[Token(Token = "0x4001EB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string role_name;

			[Token(Token = "0x4001EB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x938234", Offset = "0x938234")]
			public int role_value;
		}

		[Serializable]
		[Token(Token = "0x20004F8")]
		public struct RoleData
		{
			[Token(Token = "0x4001EB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string type;

			[Token(Token = "0x4001EB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Binding[] bindings;
		}

		[Serializable]
		[Token(Token = "0x20004F9")]
		public class BindingConfig
		{
			[NonSerialized]
			[Token(Token = "0x4001EB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x93826C", Offset = "0x93826C")]
			public bool apply_bindings_on_load;

			[NonSerialized]
			[Token(Token = "0x4001EB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9382A4", Offset = "0x9382A4")]
			public string toggle_interface_key_code;

			[NonSerialized]
			[Token(Token = "0x4001EB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x9382DC", Offset = "0x9382DC")]
			public string toggle_interface_modifier;

			[NonSerialized]
			[Token(Token = "0x4001EB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x938314", Offset = "0x938314")]
			public string interface_prefab;

			[Token(Token = "0x4001EB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public RoleData[] roles;

			[Token(Token = "0x600249E")]
			[Address(RVA = "0xDB8E54", Offset = "0xDB8E54", VA = "0xDB8E54")]
			public BindingConfig()
			{
			}
		}

		[Token(Token = "0x20004FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927628", Offset = "0x927628")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x4001EBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string roleName;

			[Token(Token = "0x600249F")]
			[Address(RVA = "0xDBB010", Offset = "0xDBB010", VA = "0xDBB010")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x60024A0")]
			[Address(RVA = "0xDBBF3C", Offset = "0xDBBF3C", VA = "0xDBBF3C")]
			internal bool <LoadBindingConfigFromRoleMap>b__1(RoleData item)
			{
				return default(bool);
			}

			[Token(Token = "0x60024A1")]
			[Address(RVA = "0xDBBF50", Offset = "0xDBBF50", VA = "0xDBBF50")]
			internal bool <LoadBindingConfigFromRoleMap>b__0(RoleData item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000B2A")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92BCBC", Offset = "0x92BCBC")]
		public const string AUTO_LOAD_CONFIG_PATH = "vive_role_bindings.cfg";

		[Token(Token = "0x4000B2B")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92BCF4", Offset = "0x92BCF4")]
		public const string DEFAULT_INTERFACE_PREFAB = "VIUBindingInterface";

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static BindingConfig s_bindingConfig;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static GameObject s_interfaceObj;

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Dictionary<string, VRModuleDeviceModel> s_modelHintTable;

		[Token(Token = "0x17000188")]
		public static BindingConfig bindingConfig
		{
			[Token(Token = "0x6000D03")]
			[Address(RVA = "0xDB8C08", Offset = "0xDB8C08", VA = "0xDB8C08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000189")]
		public static bool isBindingInterfaceEnabled
		{
			[Token(Token = "0x6000D04")]
			[Address(RVA = "0xDB8C70", Offset = "0xDB8C70", VA = "0xDB8C70")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0xDB8D58", Offset = "0xDB8D58", VA = "0xDB8D58")]
		static ViveRoleBindingsHelper()
		{
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0xDB8EF0", Offset = "0xDB8EF0", VA = "0xDB8EF0")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x93A0C8", Offset = "0x93A0C8")]
		private static void OnLoad()
		{
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0xDB9360", Offset = "0xDB9360", VA = "0xDB9360")]
		private static void OnActiveModuleChanged(VRModuleActiveEnum activatedModule)
		{
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0xDB9010", Offset = "0xDB9010", VA = "0xDB9010")]
		private static void TryInitializeOnLoad()
		{
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0xDB9D40", Offset = "0xDB9D40", VA = "0xDB9D40")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0xDB9EFC", Offset = "0xDB9EFC", VA = "0xDB9EFC")]
		public static VRModuleDeviceModel GetDeviceModelHint(string deviceSN)
		{
			return default(VRModuleDeviceModel);
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0xDBA084", Offset = "0xDBA084", VA = "0xDBA084")]
		public static void EnableBindingInterface()
		{
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0xDBA28C", Offset = "0xDBA28C", VA = "0xDBA28C")]
		public static void DisableBindingInterface()
		{
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0xDB9E5C", Offset = "0xDB9E5C", VA = "0xDB9E5C")]
		public static void ToggleBindingInterface()
		{
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0xDBA374", Offset = "0xDBA374", VA = "0xDBA374")]
		public static void LoadBindingConfigFromRoleMap(params Type[] roleTypeFilter)
		{
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0xDB9850", Offset = "0xDB9850", VA = "0xDB9850")]
		public static int ApplyBindingConfigToRoleMap(params Type[] roleTypeFilter)
		{
			return default(int);
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0xDBB018", Offset = "0xDBB018", VA = "0xDBB018")]
		public static void SaveBindingConfigToFile(string configPath, bool prettyPrint = true)
		{
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0xDB942C", Offset = "0xDB942C", VA = "0xDB942C")]
		public static bool LoadBindingConfigFromFile(string configPath)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0xDBB200", Offset = "0xDBB200", VA = "0xDBB200")]
		public static void BindAllCurrentDeviceClassMappings(VRModuleDeviceClass deviceClass)
		{
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0xDBB868", Offset = "0xDBB868", VA = "0xDBB868")]
		public static void BindAllCurrentMappings()
		{
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0xDBBAA8", Offset = "0xDBBAA8", VA = "0xDBBAA8")]
		public static void UnbindAllCurrentBindings()
		{
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0xDBBCE8", Offset = "0xDBBCE8", VA = "0xDBBCE8")]
		public static void SaveBindings(string configPath, bool prettyPrint = true)
		{
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0xDBBD7C", Offset = "0xDBBD7C", VA = "0xDBBD7C")]
		public static void LoadBindings(string configPath)
		{
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0xDBBDF4", Offset = "0xDBBDF4", VA = "0xDBBDF4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x93A0D8", Offset = "0x93A0D8")]
		public static void SaveRoleBindings(string filePath, bool prettyPrint = false)
		{
		}

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0xDBBE68", Offset = "0xDBBE68", VA = "0xDBBE68")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x93A110", Offset = "0x93A110")]
		public static void LoadRoleBindings(string filePath)
		{
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0xDBBECC", Offset = "0xDBBECC", VA = "0xDBBECC")]
		public ViveRoleBindingsHelper()
		{
		}
	}
	[Token(Token = "0x200015D")]
	public enum ViveRoleEnumValidateResult
	{
		[Token(Token = "0x4000B30")]
		Valid,
		[Token(Token = "0x4000B31")]
		IsNotEnumType,
		[Token(Token = "0x4000B32")]
		ViveRoleEnumAttributeNotFound,
		[Token(Token = "0x4000B33")]
		InvalidRoleNotFound,
		[Token(Token = "0x4000B34")]
		ValidRoleNotFound
	}
	[Token(Token = "0x200015E")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x925C74", Offset = "0x925C74")]
	public class ViveRoleEnumAttribute : Attribute
	{
		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BD2C", Offset = "0x92BD2C")]
		private int <InvalidRoleValue>k__BackingField;

		[Token(Token = "0x1700018A")]
		public int InvalidRoleValue
		{
			[Token(Token = "0x6000D1A")]
			[Address(RVA = "0xDBC708", Offset = "0xDBC708", VA = "0xDBC708")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A148", Offset = "0x93A148")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D1B")]
			[Address(RVA = "0xDBCB8C", Offset = "0xDBCB8C", VA = "0xDBCB8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A158", Offset = "0x93A158")]
			private set
			{
			}
		}

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0xDBCB94", Offset = "0xDBCB94", VA = "0xDBCB94")]
		public ViveRoleEnumAttribute(int invalidEnumValue)
		{
		}
	}
	[Token(Token = "0x200015F")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x925CC0", Offset = "0x925CC0")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x925CC0", Offset = "0x925CC0")]
	public class HideMamberAttribute : Attribute
	{
		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0xD179AC", Offset = "0xD179AC", VA = "0xD179AC")]
		public HideMamberAttribute()
		{
		}
	}
	[Token(Token = "0x2000160")]
	public static class ViveRoleEnum
	{
		[Token(Token = "0x20004FB")]
		public interface IInfo
		{
			[Token(Token = "0x1700044E")]
			Type RoleEnumType
			{
				[Token(Token = "0x60024A2")]
				get;
			}

			[Token(Token = "0x1700044F")]
			string[] RoleValueNames
			{
				[Token(Token = "0x60024A3")]
				get;
			}

			[Token(Token = "0x17000450")]
			int[] RoleValues
			{
				[Token(Token = "0x60024A4")]
				get;
			}

			[Token(Token = "0x17000451")]
			int ElementCount
			{
				[Token(Token = "0x60024A5")]
				get;
			}

			[Token(Token = "0x17000452")]
			int ValidRoleLength
			{
				[Token(Token = "0x60024A6")]
				get;
			}

			[Token(Token = "0x17000453")]
			int InvalidRoleValue
			{
				[Token(Token = "0x60024A7")]
				get;
			}

			[Token(Token = "0x17000454")]
			int InvalidRoleValueIndex
			{
				[Token(Token = "0x60024A8")]
				get;
			}

			[Token(Token = "0x17000455")]
			int MinValidRoleValue
			{
				[Token(Token = "0x60024A9")]
				get;
			}

			[Token(Token = "0x17000456")]
			int MaxValidRoleValue
			{
				[Token(Token = "0x60024AA")]
				get;
			}

			[Token(Token = "0x60024AB")]
			int RoleValueToRoleOffset(int roleValue);

			[Token(Token = "0x60024AC")]
			int RoleOffsetToRoleValue(int roleOffset);

			[Token(Token = "0x60024AD")]
			string GetNameByRoleValue(int roleValue);

			[Token(Token = "0x60024AE")]
			string GetNameByElementIndex(int elementIndex);

			[Token(Token = "0x60024AF")]
			int GetRoleValueByElementIndex(int elementIndex);

			[Token(Token = "0x60024B0")]
			int GetElementIndexByName(string name);

			[Token(Token = "0x60024B1")]
			bool TryGetRoleValueByName(string name, out int roleValue);

			[Token(Token = "0x60024B2")]
			bool IsValidRoleValue(int roleValue);
		}

		[Token(Token = "0x20004FC")]
		private sealed class Info : IInfo
		{
			[Token(Token = "0x4001EBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly EnumUtils.EnumDisplayInfo m_info;

			[Token(Token = "0x4001EBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly bool[] m_roleValid;

			[Token(Token = "0x4001EBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private readonly int m_invalidRoleValue;

			[Token(Token = "0x4001EBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private readonly int m_invalidRoleValueIndex;

			[Token(Token = "0x4001EBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private readonly int m_minValidRoleValue;

			[Token(Token = "0x4001EC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private readonly int m_maxValidRoleValue;

			[Token(Token = "0x4001EC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private readonly int m_validRoleLength;

			[Token(Token = "0x17000457")]
			public Type RoleEnumType
			{
				[Token(Token = "0x60024B4")]
				[Address(RVA = "0xDBC71C", Offset = "0xDBC71C", VA = "0xDBC71C", Slot = "4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000458")]
			public string[] RoleValueNames
			{
				[Token(Token = "0x60024B5")]
				[Address(RVA = "0xDBC74C", Offset = "0xDBC74C", VA = "0xDBC74C", Slot = "5")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000459")]
			public int[] RoleValues
			{
				[Token(Token = "0x60024B6")]
				[Address(RVA = "0xDBC77C", Offset = "0xDBC77C", VA = "0xDBC77C", Slot = "6")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700045A")]
			public int ElementCount
			{
				[Token(Token = "0x60024B7")]
				[Address(RVA = "0xDBC7AC", Offset = "0xDBC7AC", VA = "0xDBC7AC", Slot = "7")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x1700045B")]
			public int ValidRoleLength
			{
				[Token(Token = "0x60024B8")]
				[Address(RVA = "0xDBC7F0", Offset = "0xDBC7F0", VA = "0xDBC7F0", Slot = "8")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x1700045C")]
			public int InvalidRoleValue
			{
				[Token(Token = "0x60024B9")]
				[Address(RVA = "0xDBC7F8", Offset = "0xDBC7F8", VA = "0xDBC7F8", Slot = "9")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x1700045D")]
			public int InvalidRoleValueIndex
			{
				[Token(Token = "0x60024BA")]
				[Address(RVA = "0xDBC800", Offset = "0xDBC800", VA = "0xDBC800", Slot = "10")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x1700045E")]
			public int MinValidRoleValue
			{
				[Token(Token = "0x60024BB")]
				[Address(RVA = "0xDBC808", Offset = "0xDBC808", VA = "0xDBC808", Slot = "11")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x1700045F")]
			public int MaxValidRoleValue
			{
				[Token(Token = "0x60024BC")]
				[Address(RVA = "0xDBC810", Offset = "0xDBC810", VA = "0xDBC810", Slot = "12")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x60024B3")]
			[Address(RVA = "0xDBC284", Offset = "0xDBC284", VA = "0xDBC284")]
			public Info(Type roleEnumType)
			{
			}

			[Token(Token = "0x60024BD")]
			[Address(RVA = "0xDBC710", Offset = "0xDBC710", VA = "0xDBC710", Slot = "13")]
			public int RoleValueToRoleOffset(int roleValue)
			{
				return default(int);
			}

			[Token(Token = "0x60024BE")]
			[Address(RVA = "0xDBC818", Offset = "0xDBC818", VA = "0xDBC818", Slot = "14")]
			public int RoleOffsetToRoleValue(int roleOffset)
			{
				return default(int);
			}

			[Token(Token = "0x60024BF")]
			[Address(RVA = "0xDBC824", Offset = "0xDBC824", VA = "0xDBC824", Slot = "15")]
			public string GetNameByRoleValue(int roleValue)
			{
				return null;
			}

			[Token(Token = "0x60024C0")]
			[Address(RVA = "0xDBC920", Offset = "0xDBC920", VA = "0xDBC920", Slot = "18")]
			public int GetElementIndexByName(string name)
			{
				return default(int);
			}

			[Token(Token = "0x60024C1")]
			[Address(RVA = "0xDBC9C0", Offset = "0xDBC9C0", VA = "0xDBC9C0", Slot = "16")]
			public string GetNameByElementIndex(int elementIndex)
			{
				return null;
			}

			[Token(Token = "0x60024C2")]
			[Address(RVA = "0xDBCA2C", Offset = "0xDBCA2C", VA = "0xDBCA2C", Slot = "17")]
			public int GetRoleValueByElementIndex(int elementIndex)
			{
				return default(int);
			}

			[Token(Token = "0x60024C3")]
			[Address(RVA = "0xDBCA98", Offset = "0xDBCA98", VA = "0xDBCA98", Slot = "19")]
			public bool TryGetRoleValueByName(string name, out int roleValue)
			{
				return default(bool);
			}

			[Token(Token = "0x60024C4")]
			[Address(RVA = "0xDBCAE8", Offset = "0xDBCAE8", VA = "0xDBCAE8", Slot = "20")]
			public bool IsValidRoleValue(int roleValue)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20004FD")]
		public interface IInfo<TRole> : IInfo
		{
			[Token(Token = "0x17000460")]
			TRole InvalidRole
			{
				[Token(Token = "0x60024C5")]
				get;
			}

			[Token(Token = "0x17000461")]
			TRole MinValidRole
			{
				[Token(Token = "0x60024C6")]
				get;
			}

			[Token(Token = "0x17000462")]
			TRole MaxValidRole
			{
				[Token(Token = "0x60024C7")]
				get;
			}

			[Token(Token = "0x60024C8")]
			bool RoleEquals(TRole role1, TRole role2);

			[Token(Token = "0x60024C9")]
			int ToRoleValue(TRole role);

			[Token(Token = "0x60024CA")]
			int RoleToRoleOffset(TRole role);

			[Token(Token = "0x60024CB")]
			TRole RoleOffsetToRole(int roleOffset);

			[Token(Token = "0x60024CC")]
			TRole ToRole(int roleValue);

			[Token(Token = "0x60024CD")]
			TRole GetRoleByElementIndex(int elementIndex);

			[Token(Token = "0x60024CE")]
			bool TryGetRoleByName(string name, out TRole role);

			[Token(Token = "0x60024CF")]
			bool IsValidRole(TRole role);
		}

		[Token(Token = "0x20004FE")]
		private sealed class GenericInfo<TRole> : IInfo<TRole>, IInfo
		{
			[Token(Token = "0x4001EC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static GenericInfo<TRole> s_instance;

			[Token(Token = "0x4001EC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly IInfo m_info;

			[Token(Token = "0x4001EC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly IndexedTable<string, TRole> m_nameTable;

			[Token(Token = "0x4001EC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly TRole[] m_roles;

			[Token(Token = "0x4001EC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly TRole m_invalidRole;

			[Token(Token = "0x4001EC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly TRole m_minValidRole;

			[Token(Token = "0x4001EC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly TRole m_maxValidRole;

			[Token(Token = "0x17000463")]
			public Type RoleEnumType
			{
				[Token(Token = "0x60024D1")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000464")]
			public string[] RoleValueNames
			{
				[Token(Token = "0x60024D2")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000465")]
			public int[] RoleValues
			{
				[Token(Token = "0x60024D3")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000466")]
			public int ElementCount
			{
				[Token(Token = "0x60024D4")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x17000467")]
			public int ValidRoleLength
			{
				[Token(Token = "0x60024D5")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x17000468")]
			public int InvalidRoleValue
			{
				[Token(Token = "0x60024D6")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x17000469")]
			public int InvalidRoleValueIndex
			{
				[Token(Token = "0x60024D7")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x1700046A")]
			public int MinValidRoleValue
			{
				[Token(Token = "0x60024D8")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x1700046B")]
			public int MaxValidRoleValue
			{
				[Token(Token = "0x60024D9")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x1700046C")]
			public TRole MinValidRole
			{
				[Token(Token = "0x60024DA")]
				get
				{
					return (TRole)null;
				}
			}

			[Token(Token = "0x1700046D")]
			public TRole MaxValidRole
			{
				[Token(Token = "0x60024DB")]
				get
				{
					return (TRole)null;
				}
			}

			[Token(Token = "0x1700046E")]
			public TRole InvalidRole
			{
				[Token(Token = "0x60024DC")]
				get
				{
					return (TRole)null;
				}
			}

			[Token(Token = "0x60024D0")]
			public GenericInfo()
			{
			}

			[Token(Token = "0x60024DD")]
			public int RoleValueToRoleOffset(int roleValue)
			{
				return default(int);
			}

			[Token(Token = "0x60024DE")]
			public int RoleOffsetToRoleValue(int roleOffset)
			{
				return default(int);
			}

			[Token(Token = "0x60024DF")]
			public string GetNameByRoleValue(int roleValue)
			{
				return null;
			}

			[Token(Token = "0x60024E0")]
			public int GetElementIndexByName(string name)
			{
				return default(int);
			}

			[Token(Token = "0x60024E1")]
			public string GetNameByElementIndex(int elementIndex)
			{
				return null;
			}

			[Token(Token = "0x60024E2")]
			public int GetRoleValueByElementIndex(int elementIndex)
			{
				return default(int);
			}

			[Token(Token = "0x60024E3")]
			public bool TryGetRoleValueByName(string name, out int roleValue)
			{
				return default(bool);
			}

			[Token(Token = "0x60024E4")]
			public bool IsValidRoleValue(int roleValue)
			{
				return default(bool);
			}

			[Token(Token = "0x60024E5")]
			public bool RoleEquals(TRole role1, TRole role2)
			{
				return default(bool);
			}

			[Token(Token = "0x60024E6")]
			public int ToRoleValue(TRole role)
			{
				return default(int);
			}

			[Token(Token = "0x60024E7")]
			public int RoleToRoleOffset(TRole role)
			{
				return default(int);
			}

			[Token(Token = "0x60024E8")]
			public TRole RoleOffsetToRole(int roleOffset)
			{
				return (TRole)null;
			}

			[Token(Token = "0x60024E9")]
			public TRole ToRole(int roleValue)
			{
				return (TRole)null;
			}

			[Token(Token = "0x60024EA")]
			public TRole GetRoleByElementIndex(int elementIndex)
			{
				return (TRole)null;
			}

			[Token(Token = "0x60024EB")]
			public bool TryGetRoleByName(string name, out TRole role)
			{
				return default(bool);
			}

			[Token(Token = "0x60024EC")]
			public bool IsValidRole(TRole role)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IndexedTable<Type, IInfo> s_infoTable;

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly IndexedTable<string, Type> s_validViveRoleTable;

		[Token(Token = "0x1700018B")]
		public static IIndexedTableReadOnly<string, Type> ValidViveRoleTable
		{
			[Token(Token = "0x6000D1F")]
			[Address(RVA = "0xDBAF8C", Offset = "0xDBAF8C", VA = "0xDBAF8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0xDBBF64", Offset = "0xDBBF64", VA = "0xDBBF64")]
		static ViveRoleEnum()
		{
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0xDA73F0", Offset = "0xDA73F0", VA = "0xDA73F0")]
		public static IInfo GetInfo(Type roleEnumType)
		{
			return null;
		}

		[Token(Token = "0x6000D21")]
		public static IInfo<TRole> GetInfo<TRole>()
		{
			return null;
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0xDB56D0", Offset = "0xDB56D0", VA = "0xDB56D0")]
		public static ViveRoleEnumValidateResult ValidateViveRoleEnum(Type roleEnumType)
		{
			return default(ViveRoleEnumValidateResult);
		}
	}
	[Serializable]
	[Token(Token = "0x2000161")]
	public class ViveRoleProperty
	{
		[Token(Token = "0x20004FF")]
		public delegate void RoleChangedListener();

		[Token(Token = "0x2000500")]
		public delegate void RoleChangedListenerEx(Type previousRoleType, int previousRoleValue);

		[Token(Token = "0x2000501")]
		public delegate void DeviceIndexChangedListener(uint deviceIndex);

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Type DefaultRoleType;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int DefaultRoleValue;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string m_roleTypeFullName;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string m_roleValueName;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int m_roleValueInt;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool m_isTypeDirty;

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		private bool m_isValueDirty;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		private bool m_lockUpdate;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ViveRole.IMap m_roleMap;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Type m_roleType;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_roleValue;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private uint m_deviceIndex;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Action m_onChanged;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RoleChangedListener m_onRoleChanged;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RoleChangedListenerEx m_onRoleChangedEx;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private DeviceIndexChangedListener m_onDeviceIndexChanged;

		[Token(Token = "0x1700018C")]
		public Type roleType
		{
			[Token(Token = "0x6000D23")]
			[Address(RVA = "0xDA5070", Offset = "0xDA5070", VA = "0xDA5070")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D24")]
			[Address(RVA = "0xDBD4C4", Offset = "0xDBD4C4", VA = "0xDBD4C4")]
			set
			{
			}
		}

		[Token(Token = "0x1700018D")]
		public int roleValue
		{
			[Token(Token = "0x6000D25")]
			[Address(RVA = "0xDA5094", Offset = "0xDA5094", VA = "0xDA5094")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D26")]
			[Address(RVA = "0xDBD56C", Offset = "0xDBD56C", VA = "0xDBD56C")]
			set
			{
			}
		}

		[Token(Token = "0x14000025")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x940DA0", Offset = "0x940DA0")]
		public event Action Changed
		{
			[Token(Token = "0x6000D27")]
			[Address(RVA = "0xDBD6E0", Offset = "0xDBD6E0", VA = "0xDBD6E0")]
			add
			{
			}
			[Token(Token = "0x6000D28")]
			[Address(RVA = "0xDBD7A4", Offset = "0xDBD7A4", VA = "0xDBD7A4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000026")]
		public event RoleChangedListener onRoleChanged
		{
			[Token(Token = "0x6000D29")]
			[Address(RVA = "0xDBD868", Offset = "0xDBD868", VA = "0xDBD868")]
			add
			{
			}
			[Token(Token = "0x6000D2A")]
			[Address(RVA = "0xDBD92C", Offset = "0xDBD92C", VA = "0xDBD92C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000027")]
		public event RoleChangedListenerEx onRoleChangedEx
		{
			[Token(Token = "0x6000D2B")]
			[Address(RVA = "0xDBD9F0", Offset = "0xDBD9F0", VA = "0xDBD9F0")]
			add
			{
			}
			[Token(Token = "0x6000D2C")]
			[Address(RVA = "0xDBDAB4", Offset = "0xDBDAB4", VA = "0xDBDAB4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000028")]
		public event DeviceIndexChangedListener onDeviceIndexChanged
		{
			[Token(Token = "0x6000D2D")]
			[Address(RVA = "0xDBDB78", Offset = "0xDBDB78", VA = "0xDBDB78")]
			add
			{
			}
			[Token(Token = "0x6000D2E")]
			[Address(RVA = "0xDBDD7C", Offset = "0xDBDD7C", VA = "0xDBDD7C")]
			remove
			{
			}
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0xDBDEF8", Offset = "0xDBDEF8", VA = "0xDBDEF8")]
		public static ViveRoleProperty New()
		{
			return null;
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0xDBDF64", Offset = "0xDBDF64", VA = "0xDBDF64")]
		public static ViveRoleProperty New(Type type, int value)
		{
			return null;
		}

		[Token(Token = "0x6000D31")]
		public static ViveRoleProperty New<TRole>(TRole role)
		{
			return null;
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0xDBE0AC", Offset = "0xDBE0AC", VA = "0xDBE0AC")]
		public static ViveRoleProperty New(string typeFullName, string valueName)
		{
			return null;
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0xDBE40C", Offset = "0xDBE40C", VA = "0xDBE40C")]
		public void SetTypeDirty()
		{
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0xDBE418", Offset = "0xDBE418", VA = "0xDBE418")]
		public void SetValueDirty()
		{
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0xDBE424", Offset = "0xDBE424", VA = "0xDBE424")]
		private void OnMappingChanged(ViveRole.IMap map, ViveRole.MappingChangedEventArg args)
		{
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0xDBCBC0", Offset = "0xDBCBC0", VA = "0xDBCBC0")]
		public void Update()
		{
		}

		[Token(Token = "0x6000D37")]
		public void SetEx<TRole>(TRole role)
		{
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0xDBF434", Offset = "0xDBF434", VA = "0xDBF434")]
		public void Set(Type type, int value)
		{
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0xDBF618", Offset = "0xDBF618", VA = "0xDBF618")]
		public void Set(ViveRoleProperty prop)
		{
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0xDBF55C", Offset = "0xDBF55C", VA = "0xDBF55C")]
		public void Set(string typeFullName, string valueName)
		{
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0xDB276C", Offset = "0xDB276C", VA = "0xDB276C")]
		public uint GetDeviceIndex()
		{
			return default(uint);
		}

		[Token(Token = "0x6000D3C")]
		public TRole ToRole<TRole>()
		{
			return (TRole)null;
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0xDBF670", Offset = "0xDBF670", VA = "0xDBF670")]
		public bool IsRole(Type type, int value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D3E")]
		public bool IsRole<TRole>(TRole role)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0xDBF714", Offset = "0xDBF714", VA = "0xDBF714")]
		public static bool operator ==(ViveRoleProperty p1, ViveRoleProperty p2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0xDBF7F0", Offset = "0xDBF7F0", VA = "0xDBF7F0")]
		public static bool operator !=(ViveRoleProperty p1, ViveRoleProperty p2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0xDBF870", Offset = "0xDBF870", VA = "0xDBF870")]
		public bool Equals(ViveRoleProperty prop)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0xDBF8E4", Offset = "0xDBF8E4", VA = "0xDBF8E4", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0xDBF974", Offset = "0xDBF974", VA = "0xDBF974", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0xDBFA38", Offset = "0xDBFA38", VA = "0xDBFA38", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0xDBE37C", Offset = "0xDBE37C", VA = "0xDBE37C")]
		public ViveRoleProperty()
		{
		}
	}
	[Token(Token = "0x2000162")]
	public interface IViveRoleComponent
	{
		[Token(Token = "0x1700018E")]
		ViveRoleProperty viveRole
		{
			[Token(Token = "0x6000D47")]
			get;
		}
	}
	[Token(Token = "0x2000163")]
	public class ViveRoleSetter : MonoBehaviour
	{
		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<IViveRoleComponent> s_comps;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ViveRoleProperty m_viveRole;

		[Token(Token = "0x1700018F")]
		public ViveRoleProperty viveRole
		{
			[Token(Token = "0x6000D48")]
			[Address(RVA = "0xDBFDB8", Offset = "0xDBFDB8", VA = "0xDBFDB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0xDBFDC0", Offset = "0xDBFDC0", VA = "0xDBFDC0", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0xDBFE4C", Offset = "0xDBFE4C", VA = "0xDBFE4C")]
		public void UpdateChildrenViveRole()
		{
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0xDC0058", Offset = "0xDC0058", VA = "0xDC0058", Slot = "5")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0xDC00E4", Offset = "0xDC00E4", VA = "0xDC00E4")]
		public ViveRoleSetter()
		{
		}
	}
}
namespace HTC.UnityPlugin.Vive.BindingInterface
{
	[Token(Token = "0x2000164")]
	public class BindingInterfaceConfigPanelController : MonoBehaviour
	{
		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_closeExCamOnEnable;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text m_pathInfo;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_dirtySymble;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_exCamTrunedOff;

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0xD0A518", Offset = "0xD0A518", VA = "0xD0A518")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0xD0A7F8", Offset = "0xD0A7F8", VA = "0xD0A7F8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0xD0A900", Offset = "0xD0A900", VA = "0xD0A900")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0xD0AA8C", Offset = "0xD0AA8C", VA = "0xD0AA8C")]
		public void SetDirty()
		{
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0xD0AA2C", Offset = "0xD0AA2C", VA = "0xD0AA2C")]
		public void CloseBindingInterface()
		{
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0xD0AAC0", Offset = "0xD0AAC0", VA = "0xD0AAC0")]
		public void ReloadConfig()
		{
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0xD0ADCC", Offset = "0xD0ADCC", VA = "0xD0ADCC")]
		public void SaveConfig()
		{
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0xD0AEA0", Offset = "0xD0AEA0", VA = "0xD0AEA0")]
		public BindingInterfaceConfigPanelController()
		{
		}
	}
	[Token(Token = "0x2000165")]
	public class BindingInterfaceDeviceItem : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image m_imageModel;

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Button m_button;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BDCC", Offset = "0x92BDCC")]
		private bool <isBound>k__BackingField;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BDDC", Offset = "0x92BDDC")]
		private uint <deviceIndex>k__BackingField;

		[Token(Token = "0x17000190")]
		public RectTransform rectTransform
		{
			[Token(Token = "0x6000D56")]
			[Address(RVA = "0xD0AEB0", Offset = "0xD0AEB0", VA = "0xD0AEB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000191")]
		public bool isDisplayed
		{
			[Token(Token = "0x6000D57")]
			[Address(RVA = "0xD0AEE0", Offset = "0xD0AEE0", VA = "0xD0AEE0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000192")]
		public bool isBound
		{
			[Token(Token = "0x6000D58")]
			[Address(RVA = "0xD0AF10", Offset = "0xD0AF10", VA = "0xD0AF10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A168", Offset = "0x93A168")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D59")]
			[Address(RVA = "0xD0AF18", Offset = "0xD0AF18", VA = "0xD0AF18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A178", Offset = "0x93A178")]
			set
			{
			}
		}

		[Token(Token = "0x17000193")]
		public uint deviceIndex
		{
			[Token(Token = "0x6000D5A")]
			[Address(RVA = "0xD0AF24", Offset = "0xD0AF24", VA = "0xD0AF24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A188", Offset = "0x93A188")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6000D5B")]
			[Address(RVA = "0xD0AF2C", Offset = "0xD0AF2C", VA = "0xD0AF2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A198", Offset = "0x93A198")]
			set
			{
			}
		}

		[Token(Token = "0x14000029")]
		public event Action<string> onClick
		{
			[Token(Token = "0x6000D5C")]
			[Address(RVA = "0xD0AF34", Offset = "0xD0AF34", VA = "0xD0AF34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A1A8", Offset = "0x93A1A8")]
			add
			{
			}
			[Token(Token = "0x6000D5D")]
			[Address(RVA = "0xD0B020", Offset = "0xD0B020", VA = "0xD0B020")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A1B8", Offset = "0x93A1B8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002A")]
		public event Action<uint> onEnter
		{
			[Token(Token = "0x6000D5E")]
			[Address(RVA = "0xD0B10C", Offset = "0xD0B10C", VA = "0xD0B10C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A1C8", Offset = "0x93A1C8")]
			add
			{
			}
			[Token(Token = "0x6000D5F")]
			[Address(RVA = "0xD0B1F8", Offset = "0xD0B1F8", VA = "0xD0B1F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A1D8", Offset = "0x93A1D8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002B")]
		public event Action<uint> onExit
		{
			[Token(Token = "0x6000D60")]
			[Address(RVA = "0xD0B2E4", Offset = "0xD0B2E4", VA = "0xD0B2E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A1E8", Offset = "0x93A1E8")]
			add
			{
			}
			[Token(Token = "0x6000D61")]
			[Address(RVA = "0xD0B3D0", Offset = "0xD0B3D0", VA = "0xD0B3D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A1F8", Offset = "0x93A1F8")]
			remove
			{
			}
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0xD0B4BC", Offset = "0xD0B4BC", VA = "0xD0B4BC", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0xD0B520", Offset = "0xD0B520", VA = "0xD0B520", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0xD0B59C", Offset = "0xD0B59C", VA = "0xD0B59C")]
		public void OnClick()
		{
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0xD0B6AC", Offset = "0xD0B6AC", VA = "0xD0B6AC")]
		public void UpdateModel()
		{
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0xD0BD50", Offset = "0xD0BD50", VA = "0xD0BD50")]
		public void UpdatePosition()
		{
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0xD0BFA4", Offset = "0xD0BFA4", VA = "0xD0BFA4")]
		public BindingInterfaceDeviceItem()
		{
		}
	}
	[Token(Token = "0x2000166")]
	public class BindingInterfaceDevicePanelController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000502")]
		public class UnityEventString : UnityEvent<string>
		{
			[Token(Token = "0x60024F9")]
			[Address(RVA = "0xD0E508", Offset = "0xD0E508", VA = "0xD0E508")]
			public UnityEventString()
			{
			}
		}

		[Token(Token = "0x4000B55")]
		private const float MIN_DEVICE_VIEW_SCALE = 0.01f;

		[Token(Token = "0x4000B56")]
		private const float MAX_DEVICE_VIEW_SCALE = 5f;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private InputField m_inputDeviceSN;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Image m_modelIcon;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button m_buttonCheck;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BindingInterfaceDeviceItem m_deviceItem;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_deviceViewMargin;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private bool m_showDebugBoundRect;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UnityEventString m_onSelectDevice;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UnityEventString m_onMouseEnterDevice;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private UnityEventString m_onMouseExitDevice;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_initialized;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_trackingEnabled;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ViveRole.IMap m_selectedRoleMap;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private RectTransform m_deviceView;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float m_deviceViewMaskWidth;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float m_deviceViewMaskHeight;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private IndexedTable<uint, BindingInterfaceDeviceItem> m_itemTable;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private List<BindingInterfaceDeviceItem> m_itemPool;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3[] m_itemCorners;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Image m_bound;

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0xD0BFAC", Offset = "0xD0BFAC", VA = "0xD0BFAC")]
		private void Initialize()
		{
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0xD0C228", Offset = "0xD0C228", VA = "0xD0C228")]
		public void EnableTracking()
		{
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0xD0CB10", Offset = "0xD0CB10", VA = "0xD0CB10")]
		public void DisableTracking()
		{
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0xD0CCD8", Offset = "0xD0CCD8", VA = "0xD0CCD8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0xD0CCDC", Offset = "0xD0CCDC", VA = "0xD0CCDC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0xD0C660", Offset = "0xD0C660", VA = "0xD0C660")]
		private void OnDeviceConnected(uint deviceIndex, bool connected)
		{
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0xD0D960", Offset = "0xD0D960", VA = "0xD0D960")]
		private void OnEnterDevice(uint deviceIndex)
		{
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0xD0DDE0", Offset = "0xD0DDE0", VA = "0xD0DDE0")]
		private void OnExitDevice(uint deviceIndex)
		{
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0xD0C428", Offset = "0xD0C428", VA = "0xD0C428")]
		public void CheckInputDeviceSN(string inputStr)
		{
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0xD0DF88", Offset = "0xD0DF88", VA = "0xD0DF88")]
		public void UpdateForBindingChanged()
		{
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0xD0E138", Offset = "0xD0E138", VA = "0xD0E138")]
		public void ConfirmInputDeviceSN()
		{
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0xD0E1BC", Offset = "0xD0E1BC", VA = "0xD0E1BC")]
		public void DeselectCheckButton()
		{
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0xD0E238", Offset = "0xD0E238", VA = "0xD0E238")]
		public void SelecRoleSet(ViveRole.IMap roleMap)
		{
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0xD0E240", Offset = "0xD0E240", VA = "0xD0E240")]
		public void SetAnimatorSlideLeft()
		{
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0xD0E2D0", Offset = "0xD0E2D0", VA = "0xD0E2D0")]
		public void SetAnimatorSlideRight()
		{
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0xD0E360", Offset = "0xD0E360", VA = "0xD0E360")]
		public void SetAnimatorIsEditing(bool value)
		{
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0xD0E404", Offset = "0xD0E404", VA = "0xD0E404")]
		public BindingInterfaceDevicePanelController()
		{
		}
	}
	[Token(Token = "0x2000167")]
	public class BindingInterfaceRoleButtonItem : MonoBehaviour
	{
		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Toggle m_toggle;

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text m_textRoleName;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_disableEventOnce;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BEDC", Offset = "0x92BEDC")]
		private int <roleValue>k__BackingField;

		[Token(Token = "0x17000194")]
		public string roleName
		{
			[Token(Token = "0x6000D79")]
			[Address(RVA = "0xD0E558", Offset = "0xD0E558", VA = "0xD0E558")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D7A")]
			[Address(RVA = "0xD0E590", Offset = "0xD0E590", VA = "0xD0E590")]
			set
			{
			}
		}

		[Token(Token = "0x17000195")]
		public int roleValue
		{
			[Token(Token = "0x6000D7B")]
			[Address(RVA = "0xD0E5D0", Offset = "0xD0E5D0", VA = "0xD0E5D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A208", Offset = "0x93A208")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D7C")]
			[Address(RVA = "0xD0E5D8", Offset = "0xD0E5D8", VA = "0xD0E5D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A218", Offset = "0x93A218")]
			set
			{
			}
		}

		[Token(Token = "0x1400002C")]
		public event Action<int> onValueChanged
		{
			[Token(Token = "0x6000D7D")]
			[Address(RVA = "0xD0E5E0", Offset = "0xD0E5E0", VA = "0xD0E5E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A228", Offset = "0x93A228")]
			add
			{
			}
			[Token(Token = "0x6000D7E")]
			[Address(RVA = "0xD0E6CC", Offset = "0xD0E6CC", VA = "0xD0E6CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A238", Offset = "0x93A238")]
			remove
			{
			}
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0xD0E7B8", Offset = "0xD0E7B8", VA = "0xD0E7B8")]
		public void SetIsOn()
		{
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0xD0E858", Offset = "0xD0E858", VA = "0xD0E858")]
		public void SetIsOnNoEvent()
		{
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0xD0E8C4", Offset = "0xD0E8C4", VA = "0xD0E8C4")]
		public void OnValueChanged(bool isOn)
		{
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0xD0E94C", Offset = "0xD0E94C", VA = "0xD0E94C")]
		public BindingInterfaceRoleButtonItem()
		{
		}
	}
	[Token(Token = "0x2000168")]
	public class BindingInterfaceRolePanelController : MonoBehaviour
	{
		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BindingInterfaceRoleButtonItem m_roleButtonItem;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent m_onBoundDevcieToRole;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<BindingInterfaceRoleButtonItem> m_roleButtonList;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ViveRole.IMap m_selectedRoleMap;

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string m_editingDeviceSN;

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0xD0E954", Offset = "0xD0E954", VA = "0xD0E954")]
		public void SelectRole(int roleValue)
		{
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0xD0EA58", Offset = "0xD0EA58", VA = "0xD0EA58")]
		public void SelecRoleSet(ViveRole.IMap roleMap)
		{
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0xD0F2BC", Offset = "0xD0F2BC", VA = "0xD0F2BC")]
		public void SelectBindingDevice(string deviceSN)
		{
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0xD0F540", Offset = "0xD0F540", VA = "0xD0F540")]
		public BindingInterfaceRolePanelController()
		{
		}
	}
	[Token(Token = "0x2000169")]
	public class BindingInterfaceRoleSetBindingItem : MonoBehaviour
	{
		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Image m_modelIcon;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text m_deviceSN;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text m_roleName;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button m_editButton;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Image m_heighLight;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BF6C", Offset = "0x92BF6C")]
		private string <deviceSN>k__BackingField;

		[Token(Token = "0x17000196")]
		public string deviceSN
		{
			[Token(Token = "0x6000D87")]
			[Address(RVA = "0xD0F5B0", Offset = "0xD0F5B0", VA = "0xD0F5B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A248", Offset = "0x93A248")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D88")]
			[Address(RVA = "0xD0F5B8", Offset = "0xD0F5B8", VA = "0xD0F5B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A258", Offset = "0x93A258")]
			set
			{
			}
		}

		[Token(Token = "0x17000197")]
		public bool isHeighLight
		{
			[Token(Token = "0x6000D89")]
			[Address(RVA = "0xD0F5C0", Offset = "0xD0F5C0", VA = "0xD0F5C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D8A")]
			[Address(RVA = "0xD0F5F0", Offset = "0xD0F5F0", VA = "0xD0F5F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000198")]
		public bool isEditing
		{
			[Token(Token = "0x6000D8B")]
			[Address(RVA = "0xD0F628", Offset = "0xD0F628", VA = "0xD0F628")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D8C")]
			[Address(RVA = "0xD0F658", Offset = "0xD0F658", VA = "0xD0F658")]
			set
			{
			}
		}

		[Token(Token = "0x1400002D")]
		public event Action<string> onEditPress
		{
			[Token(Token = "0x6000D8D")]
			[Address(RVA = "0xD0F694", Offset = "0xD0F694", VA = "0xD0F694")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A268", Offset = "0x93A268")]
			add
			{
			}
			[Token(Token = "0x6000D8E")]
			[Address(RVA = "0xD0F780", Offset = "0xD0F780", VA = "0xD0F780")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A278", Offset = "0x93A278")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002E")]
		public event Action<string> onRemovePress
		{
			[Token(Token = "0x6000D8F")]
			[Address(RVA = "0xD0F86C", Offset = "0xD0F86C", VA = "0xD0F86C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A288", Offset = "0x93A288")]
			add
			{
			}
			[Token(Token = "0x6000D90")]
			[Address(RVA = "0xD0F958", Offset = "0xD0F958", VA = "0xD0F958")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A298", Offset = "0x93A298")]
			remove
			{
			}
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0xD0FA44", Offset = "0xD0FA44", VA = "0xD0FA44")]
		public void RefreshDisplayInfo(ViveRole.IMap roleMap)
		{
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0xD0FCD8", Offset = "0xD0FCD8", VA = "0xD0FCD8")]
		public void OnEdit()
		{
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0xD0FD3C", Offset = "0xD0FD3C", VA = "0xD0FD3C")]
		public void OnRemove()
		{
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0xD0FDA0", Offset = "0xD0FDA0", VA = "0xD0FDA0")]
		public BindingInterfaceRoleSetBindingItem()
		{
		}
	}
	[Token(Token = "0x200016A")]
	public class BindingInterfaceRoleSetButtonItem : MonoBehaviour
	{
		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Toggle m_toggle;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text m_textName;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ViveRole.IMap m_roleMap;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92BFCC", Offset = "0x92BFCC")]
		private int <index>k__BackingField;

		[Token(Token = "0x17000199")]
		public bool interactable
		{
			[Token(Token = "0x6000D97")]
			[Address(RVA = "0xD0FF80", Offset = "0xD0FF80", VA = "0xD0FF80")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D98")]
			[Address(RVA = "0xD0FFB0", Offset = "0xD0FFB0", VA = "0xD0FFB0")]
			set
			{
			}
		}

		[Token(Token = "0x1700019A")]
		public int index
		{
			[Token(Token = "0x6000D99")]
			[Address(RVA = "0xD0FFE8", Offset = "0xD0FFE8", VA = "0xD0FFE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A2C8", Offset = "0x93A2C8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D9A")]
			[Address(RVA = "0xD0FFF0", Offset = "0xD0FFF0", VA = "0xD0FFF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A2D8", Offset = "0x93A2D8")]
			set
			{
			}
		}

		[Token(Token = "0x1700019B")]
		public ViveRole.IMap roleMap
		{
			[Token(Token = "0x6000D9B")]
			[Address(RVA = "0xD0FFF8", Offset = "0xD0FFF8", VA = "0xD0FFF8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D9C")]
			[Address(RVA = "0xD10000", Offset = "0xD10000", VA = "0xD10000")]
			set
			{
			}
		}

		[Token(Token = "0x1400002F")]
		public event Action<int> onSelected
		{
			[Token(Token = "0x6000D95")]
			[Address(RVA = "0xD0FDA8", Offset = "0xD0FDA8", VA = "0xD0FDA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A2A8", Offset = "0x93A2A8")]
			add
			{
			}
			[Token(Token = "0x6000D96")]
			[Address(RVA = "0xD0FE94", Offset = "0xD0FE94", VA = "0xD0FE94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A2B8", Offset = "0x93A2B8")]
			remove
			{
			}
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0xD10538", Offset = "0xD10538", VA = "0xD10538")]
		public void SetIsOn()
		{
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0xD10620", Offset = "0xD10620", VA = "0xD10620")]
		public void OnValueChanged(bool isOn)
		{
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0xD10698", Offset = "0xD10698", VA = "0xD10698")]
		public BindingInterfaceRoleSetButtonItem()
		{
		}
	}
	[Token(Token = "0x200016B")]
	public class BindingInterfaceRoleSetPanelController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000503")]
		public class UnityEventSelectRole : UnityEvent<ViveRole.IMap>
		{
			[Token(Token = "0x60024FA")]
			[Address(RVA = "0xD1274C", Offset = "0xD1274C", VA = "0xD1274C")]
			public UnityEventSelectRole()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000504")]
		public class UnityEventString : UnityEvent<string>
		{
			[Token(Token = "0x60024FB")]
			[Address(RVA = "0xD1279C", Offset = "0xD1279C", VA = "0xD1279C")]
			public UnityEventString()
			{
			}
		}

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Type DEFAULT_SELECTED_ROLE;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private BindingInterfaceRoleSetButtonItem m_roleSetButtonItem;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private BindingInterfaceRoleSetBindingItem m_bindingItem;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UnityEventSelectRole m_onSelectRoleSet;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UnityEventString m_onEditBinding;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UnityEvent m_onFinishEditBinding;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_maxBindingCount;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<BindingInterfaceRoleSetButtonItem> m_roleSetButtonList;

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_selectedRoleIndex;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<BindingInterfaceRoleSetBindingItem> m_bindingList;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private string m_editingDevice;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string m_heighLightDevice;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private OrderedIndexedSet<string> m_boundDevices;

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private IndexedSet<string> m_tempDevices;

		[Token(Token = "0x1700019C")]
		public ViveRole.IMap selectedRoleMap
		{
			[Token(Token = "0x6000DA0")]
			[Address(RVA = "0xD106A0", Offset = "0xD106A0", VA = "0xD106A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700019D")]
		public bool isEditing
		{
			[Token(Token = "0x6000DA1")]
			[Address(RVA = "0xD1071C", Offset = "0xD1071C", VA = "0xD1071C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700019E")]
		public bool hasHeightLight
		{
			[Token(Token = "0x6000DA2")]
			[Address(RVA = "0xD10740", Offset = "0xD10740", VA = "0xD10740")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0xD10764", Offset = "0xD10764", VA = "0xD10764")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0xD11154", Offset = "0xD11154", VA = "0xD11154")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0xD111E8", Offset = "0xD111E8", VA = "0xD111E8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0xD112BC", Offset = "0xD112BC", VA = "0xD112BC")]
		private void OnDeviceConnected(uint deviceIndex, bool connected)
		{
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0xD11CBC", Offset = "0xD11CBC", VA = "0xD11CBC")]
		public void SetAnimatorSlideLeft()
		{
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0xD11D4C", Offset = "0xD11D4C", VA = "0xD11D4C")]
		public void SetAnimatorSlideRight()
		{
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0xD11DDC", Offset = "0xD11DDC", VA = "0xD11DDC")]
		public void EnableSelection()
		{
		}

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0xD11EAC", Offset = "0xD11EAC", VA = "0xD11EAC")]
		public void DisableSelection()
		{
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0xD1105C", Offset = "0xD1105C", VA = "0xD1105C")]
		public void SelectRoleSet(int index)
		{
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0xD11F7C", Offset = "0xD11F7C", VA = "0xD11F7C")]
		public void StartEditBinding(string deviceSN)
		{
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0xD1224C", Offset = "0xD1224C", VA = "0xD1224C")]
		public void FinishEditBindingNoEvent()
		{
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0xD11284", Offset = "0xD11284", VA = "0xD11284")]
		public void FinishEditBinding()
		{
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0xD12328", Offset = "0xD12328", VA = "0xD12328")]
		public void EnableHeightLightBinding(string deviceSN)
		{
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0xD12420", Offset = "0xD12420", VA = "0xD12420")]
		public void DisableHeightLightBinding()
		{
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0xD124FC", Offset = "0xD124FC", VA = "0xD124FC")]
		public void RemoveBinding(string deviceSN)
		{
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0xD109F8", Offset = "0xD109F8", VA = "0xD109F8")]
		public void RefreshRoleSelection()
		{
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0xD112E0", Offset = "0xD112E0", VA = "0xD112E0")]
		public void RefreshSelectedRoleBindings()
		{
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0xD12604", Offset = "0xD12604", VA = "0xD12604")]
		public BindingInterfaceRoleSetPanelController()
		{
		}
	}
	[Token(Token = "0x200016C")]
	public class BindingInterfaceSpriteManager : MonoBehaviour
	{
		[Token(Token = "0x4000B91")]
		public const string MODEL_ICON_SPRITE_PREFIX = "binding_ui_icons_";

		[Token(Token = "0x4000B92")]
		public const string MODEL_PROJECT_SPRITE_PREFIX = "binding_ui_project_";

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, Sprite> s_spriteTable;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string[] texturePath;

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0xD127EC", Offset = "0xD127EC", VA = "0xD127EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0xD129A0", Offset = "0xD129A0", VA = "0xD129A0")]
		public static Sprite GetSprite(string spriteName)
		{
			return null;
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0xD0DB70", Offset = "0xD0DB70", VA = "0xD0DB70")]
		public static void SetupDeviceIcon(Image image, VRModuleDeviceModel deviceModel, bool connected)
		{
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0xD0B734", Offset = "0xD0B734", VA = "0xD0B734")]
		public static void SetupTrackingDeviceIcon(Image image, IVRModuleDeviceState deviceState, bool bound)
		{
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0xD12A28", Offset = "0xD12A28", VA = "0xD12A28")]
		public BindingInterfaceSpriteManager()
		{
		}
	}
}
namespace HTC.UnityPlugin.Vive.SteamVRExtension
{
	[Token(Token = "0x200016D")]
	public class VIUSteamVRRenderModel : MonoBehaviour
	{
		[Token(Token = "0x2000505")]
		private struct ChildTransforms
		{
			[Token(Token = "0x4001EC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Transform root;

			[Token(Token = "0x4001ECA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Transform attach;
		}

		[Token(Token = "0x4000B95")]
		public const string LOCAL_TRANSFORM_NAME = "attach";

		[Token(Token = "0x4000B96")]
		public const string MODEL_OVERRIDE_WARNNING = "Model override is really only meant to be used in the scene view for lining things up.  Use tracked device index instead to ensure the correct model is displayed for all users.";

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x92C04C", Offset = "0x92C04C")]
		[SerializeField]
		private string m_modelOverride;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x92C098", Offset = "0x92C098")]
		[SerializeField]
		private Shader m_shaderOverride;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x92C0E4", Offset = "0x92C0E4")]
		[SerializeField]
		private bool m_updateDynamically;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private uint m_deviceIndex;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MeshFilter m_meshFilter;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MeshRenderer m_meshRenderer;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IndexedTable<string, ChildTransforms> m_chilTransforms;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IndexedTable<int, Material> m_materials;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private HashSet<string> m_loadingRenderModels;

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_isAppQuit;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92C130", Offset = "0x92C130")]
		private string <loadedModelName>k__BackingField;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92C140", Offset = "0x92C140")]
		private Shader <loadedShader>k__BackingField;

		[Token(Token = "0x1700019F")]
		private string preferedModelName
		{
			[Token(Token = "0x6000DBA")]
			[Address(RVA = "0xD19C0C", Offset = "0xD19C0C", VA = "0xD19C0C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A0")]
		private Shader preferedShader
		{
			[Token(Token = "0x6000DBB")]
			[Address(RVA = "0xD19D10", Offset = "0xD19D10", VA = "0xD19D10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A1")]
		public bool updateDynamically
		{
			[Token(Token = "0x6000DBC")]
			[Address(RVA = "0xD19DA8", Offset = "0xD19DA8", VA = "0xD19DA8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DBD")]
			[Address(RVA = "0xD19DB0", Offset = "0xD19DB0", VA = "0xD19DB0")]
			set
			{
			}
		}

		[Token(Token = "0x170001A2")]
		public bool isLoadingModel
		{
			[Token(Token = "0x6000DBE")]
			[Address(RVA = "0xD19DBC", Offset = "0xD19DBC", VA = "0xD19DBC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A3")]
		public string loadedModelName
		{
			[Token(Token = "0x6000DBF")]
			[Address(RVA = "0xD19E28", Offset = "0xD19E28", VA = "0xD19E28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A2E8", Offset = "0x93A2E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DC0")]
			[Address(RVA = "0xD19E30", Offset = "0xD19E30", VA = "0xD19E30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A2F8", Offset = "0x93A2F8")]
			private set
			{
			}
		}

		[Token(Token = "0x170001A4")]
		public bool isModelLoaded
		{
			[Token(Token = "0x6000DC1")]
			[Address(RVA = "0xD19E38", Offset = "0xD19E38", VA = "0xD19E38")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A5")]
		public Shader loadedShader
		{
			[Token(Token = "0x6000DC2")]
			[Address(RVA = "0xD19E5C", Offset = "0xD19E5C", VA = "0xD19E5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A308", Offset = "0x93A308")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DC3")]
			[Address(RVA = "0xD19E64", Offset = "0xD19E64", VA = "0xD19E64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A318", Offset = "0x93A318")]
			private set
			{
			}
		}

		[Token(Token = "0x170001A6")]
		public string modelOverride
		{
			[Token(Token = "0x6000DC4")]
			[Address(RVA = "0xD19E6C", Offset = "0xD19E6C", VA = "0xD19E6C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DC5")]
			[Address(RVA = "0xD19E74", Offset = "0xD19E74", VA = "0xD19E74")]
			set
			{
			}
		}

		[Token(Token = "0x170001A7")]
		public Shader shaderOverride
		{
			[Token(Token = "0x6000DC6")]
			[Address(RVA = "0xD19EC8", Offset = "0xD19EC8", VA = "0xD19EC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DC7")]
			[Address(RVA = "0xD19ED0", Offset = "0xD19ED0", VA = "0xD19ED0")]
			set
			{
			}
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0xD19F24", Offset = "0xD19F24", VA = "0xD19F24")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0xD19F2C", Offset = "0xD19F2C", VA = "0xD19F2C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0xD19F54", Offset = "0xD19F54", VA = "0xD19F54")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0xD1A19C", Offset = "0xD1A19C", VA = "0xD1A19C")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0xD19F58", Offset = "0xD19F58", VA = "0xD19F58")]
		public void ClearModel()
		{
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0xD19EFC", Offset = "0xD19EFC", VA = "0xD19EFC")]
		private void SetPreferedShader()
		{
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0xD1A1A8", Offset = "0xD1A1A8", VA = "0xD1A1A8")]
		private void SetShader(Shader newShader)
		{
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0xD19EA0", Offset = "0xD19EA0", VA = "0xD19EA0")]
		private void LoadPreferedModel()
		{
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0xD1A2EC", Offset = "0xD1A2EC", VA = "0xD1A2EC")]
		private void LoadModel(string renderModelName)
		{
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0xD1A4BC", Offset = "0xD1A4BC", VA = "0xD1A4BC")]
		private void OnLoadModelComplete(string renderModelName)
		{
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0xD19F28", Offset = "0xD19F28", VA = "0xD19F28")]
		private void UpdateComponents()
		{
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0xD1AED4", Offset = "0xD1AED4", VA = "0xD1AED4")]
		public void SetDeviceIndex(uint index)
		{
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0xD1AF00", Offset = "0xD1AF00", VA = "0xD1AF00")]
		public VIUSteamVRRenderModel()
		{
		}
	}
	[Token(Token = "0x200016E")]
	public static class VIUSteamVRRenderModelLoader
	{
		[Token(Token = "0x2000506")]
		public class RenderModel
		{
			[Token(Token = "0x4001ECB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x4001ECC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string[] childCompNames;

			[Token(Token = "0x4001ECD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string[] childModelNames;

			[Token(Token = "0x4001ECE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int childCount;

			[Token(Token = "0x4001ECF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Dictionary<int, Texture2D> textures;

			[Token(Token = "0x60024FC")]
			[Address(RVA = "0xD1ADF4", Offset = "0xD1ADF4", VA = "0xD1ADF4")]
			public bool TryCreateMaterialForTexture(int textureID, Shader shader, out Material material)
			{
				return default(bool);
			}

			[Token(Token = "0x60024FD")]
			[Address(RVA = "0xD1B49C", Offset = "0xD1B49C", VA = "0xD1B49C")]
			public RenderModel()
			{
			}
		}

		[Token(Token = "0x2000507")]
		public class Model
		{
			[Token(Token = "0x4001ED0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Mesh mesh;

			[Token(Token = "0x4001ED1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int textureID;

			[Token(Token = "0x60024FE")]
			[Address(RVA = "0xD1B494", Offset = "0xD1B494", VA = "0xD1B494")]
			public Model()
			{
			}
		}

		[Token(Token = "0x2000508")]
		private class LoadRenderModelJob
		{
			[Token(Token = "0x200063E")]
			private struct PtrPack
			{
				[Token(Token = "0x400227B")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public IntPtr model;

				[Token(Token = "0x400227C")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public IntPtr texture;

				[Token(Token = "0x400227D")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public IntPtr textureD3D11;
			}

			[Token(Token = "0x4001ED2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static int s_nextJobID;

			[Token(Token = "0x4001ED3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int m_jobID;

			[Token(Token = "0x4001ED4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int m_startFrame;

			[Token(Token = "0x4001ED5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private string m_name;

			[Token(Token = "0x4001ED6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Action<string> m_callback;

			[Token(Token = "0x4001ED7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private bool m_isDone;

			[Token(Token = "0x4001ED8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private RenderModel m_unreadyRM;

			[Token(Token = "0x4001ED9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private PtrPack m_loadedPtr;

			[Token(Token = "0x4001EDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private PtrPack[] m_loadedChildPtrs;

			[Token(Token = "0x1700046F")]
			public int jobID
			{
				[Token(Token = "0x60024FF")]
				[Address(RVA = "0xD1B400", Offset = "0xD1B400", VA = "0xD1B400")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x6002500")]
			[Address(RVA = "0xD1B080", Offset = "0xD1B080", VA = "0xD1B080")]
			public LoadRenderModelJob(string name, Action<string> callback)
			{
			}

			[Token(Token = "0x6002501")]
			[Address(RVA = "0xD1B408", Offset = "0xD1B408", VA = "0xD1B408")]
			private void DoComplete()
			{
			}

			[Token(Token = "0x6002502")]
			[Address(RVA = "0xD1B470", Offset = "0xD1B470", VA = "0xD1B470")]
			public void InterruptAndComplete()
			{
			}

			[Token(Token = "0x6002503")]
			[Address(RVA = "0xD1B474", Offset = "0xD1B474", VA = "0xD1B474")]
			public bool DoJob()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000509")]
		private class WorkerBehaviour : MonoBehaviour
		{
			[Token(Token = "0x200063F")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x928170", Offset = "0x928170")]
			private sealed class <WorkingCoroutine>d__8 : IEnumerator<object>, IEnumerator, IDisposable
			{
				[Token(Token = "0x400227E")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				private int <>1__state;

				[Token(Token = "0x400227F")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				private object <>2__current;

				[Token(Token = "0x4002280")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public WorkerBehaviour <>4__this;

				[Token(Token = "0x17000510")]
				private object System.Collections.Generic.IEnumerator<System.Object>.Current
				{
					[Token(Token = "0x600284B")]
					[Address(RVA = "0xD1B7E4", Offset = "0xD1B7E4", VA = "0xD1B7E4", Slot = "4")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x17000511")]
				private object System.Collections.IEnumerator.Current
				{
					[Token(Token = "0x600284D")]
					[Address(RVA = "0xD1B854", Offset = "0xD1B854", VA = "0xD1B854", Slot = "7")]
					[DebuggerHidden]
					get
					{
						return null;
					}
				}

				[Token(Token = "0x6002848")]
				[Address(RVA = "0xD1B668", Offset = "0xD1B668", VA = "0xD1B668")]
				[DebuggerHidden]
				public <WorkingCoroutine>d__8(int <>1__state)
				{
				}

				[Token(Token = "0x6002849")]
				[Address(RVA = "0xD1B69C", Offset = "0xD1B69C", VA = "0xD1B69C", Slot = "5")]
				[DebuggerHidden]
				private void System.IDisposable.Dispose()
				{
				}

				[Token(Token = "0x600284A")]
				[Address(RVA = "0xD1B6A0", Offset = "0xD1B6A0", VA = "0xD1B6A0", Slot = "6")]
				private bool MoveNext()
				{
					return default(bool);
				}

				[Token(Token = "0x600284C")]
				[Address(RVA = "0xD1B7EC", Offset = "0xD1B7EC", VA = "0xD1B7EC", Slot = "8")]
				[DebuggerHidden]
				private void System.Collections.IEnumerator.Reset()
				{
				}
			}

			[Token(Token = "0x4001EDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private static WorkerBehaviour s_worker;

			[Token(Token = "0x4001EDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private static Queue<LoadRenderModelJob> s_jobQueue;

			[Token(Token = "0x4001EDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private Coroutine m_coroutine;

			[Token(Token = "0x17000470")]
			private bool isWorking
			{
				[Token(Token = "0x6002504")]
				[Address(RVA = "0xD1B4A4", Offset = "0xD1B4A4", VA = "0xD1B4A4")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6002505")]
				[Address(RVA = "0xD1B4B4", Offset = "0xD1B4B4", VA = "0xD1B4B4")]
				set
				{
				}
			}

			[Token(Token = "0x6002506")]
			[Address(RVA = "0xD1B100", Offset = "0xD1B100", VA = "0xD1B100")]
			public static void EnqueueJob(LoadRenderModelJob job)
			{
			}

			[Token(Token = "0x6002507")]
			[Address(RVA = "0xD1B590", Offset = "0xD1B590", VA = "0xD1B590")]
			private void OnDestroy()
			{
			}

			[Token(Token = "0x6002508")]
			[Address(RVA = "0xD1B51C", Offset = "0xD1B51C", VA = "0xD1B51C")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93F344", Offset = "0x93F344")]
			private IEnumerator WorkingCoroutine()
			{
				return null;
			}

			[Token(Token = "0x6002509")]
			[Address(RVA = "0xD1B694", Offset = "0xD1B694", VA = "0xD1B694")]
			public WorkerBehaviour()
			{
			}
		}

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, RenderModel> s_renderModelsCache;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<string, Model> s_modelsCache;

		[Token(Token = "0x170001A8")]
		public static Dictionary<string, RenderModel> renderModelsCache
		{
			[Token(Token = "0x6000DD5")]
			[Address(RVA = "0xD1AD24", Offset = "0xD1AD24", VA = "0xD1AD24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A9")]
		public static Dictionary<string, Model> modelsCache
		{
			[Token(Token = "0x6000DD6")]
			[Address(RVA = "0xD1AD8C", Offset = "0xD1AD8C", VA = "0xD1AD8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0xD1AFD0", Offset = "0xD1AFD0", VA = "0xD1AFD0")]
		public static void ClearCache()
		{
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0xD1A44C", Offset = "0xD1A44C", VA = "0xD1A44C")]
		public static void Load(string name, Action<string> onComplete)
		{
		}
	}
}
namespace HTC.UnityPlugin.Vive.OculusVRExtension
{
	[Token(Token = "0x200016F")]
	public class VIUOculusVRRenderModel : MonoBehaviour
	{
		[Token(Token = "0x200050A")]
		private struct ChildTransforms
		{
			[Token(Token = "0x4001EDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Transform root;

			[Token(Token = "0x4001EDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Transform attach;
		}

		[Token(Token = "0x4000BA5")]
		public const string LOCAL_TRANSFORM_NAME = "attach";

		[Token(Token = "0x4000BA6")]
		public const string MODEL_OVERRIDE_WARNNING = "Model override is really only meant to be used in the scene view for lining things up.  Use tracked device index instead to ensure the correct model is displayed for all users.";

		[Token(Token = "0x4000BA7")]
		private const uint LEFT_INDEX = 1u;

		[Token(Token = "0x4000BA8")]
		private const uint RIGHT_INDEX = 2u;

		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x92C150", Offset = "0x92C150")]
		[SerializeField]
		private string m_modelOverride;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x92C19C", Offset = "0x92C19C")]
		[SerializeField]
		private Shader m_shaderOverride;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x92C1E8", Offset = "0x92C1E8")]
		[SerializeField]
		private bool m_updateDynamically;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private uint m_deviceIndex;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MeshFilter m_meshFilter;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MeshRenderer m_meshRenderer;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IndexedTable<string, ChildTransforms> m_chilTransforms;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IndexedTable<int, Material> m_materials;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private HashSet<string> m_loadingRenderModels;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_isAppQuit;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92C234", Offset = "0x92C234")]
		private string <loadedModelName>k__BackingField;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92C244", Offset = "0x92C244")]
		private Shader <loadedShader>k__BackingField;

		[Token(Token = "0x170001AA")]
		private string preferedModelName
		{
			[Token(Token = "0x6000DDA")]
			[Address(RVA = "0xD179B4", Offset = "0xD179B4", VA = "0xD179B4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AB")]
		private Shader preferedShader
		{
			[Token(Token = "0x6000DDB")]
			[Address(RVA = "0xD17AB8", Offset = "0xD17AB8", VA = "0xD17AB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AC")]
		public bool updateDynamically
		{
			[Token(Token = "0x6000DDC")]
			[Address(RVA = "0xD17B50", Offset = "0xD17B50", VA = "0xD17B50")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DDD")]
			[Address(RVA = "0xD17B58", Offset = "0xD17B58", VA = "0xD17B58")]
			set
			{
			}
		}

		[Token(Token = "0x170001AD")]
		public bool isLoadingModel
		{
			[Token(Token = "0x6000DDE")]
			[Address(RVA = "0xD17B64", Offset = "0xD17B64", VA = "0xD17B64")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001AE")]
		public string loadedModelName
		{
			[Token(Token = "0x6000DDF")]
			[Address(RVA = "0xD17BD0", Offset = "0xD17BD0", VA = "0xD17BD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A328", Offset = "0x93A328")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DE0")]
			[Address(RVA = "0xD17BD8", Offset = "0xD17BD8", VA = "0xD17BD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A338", Offset = "0x93A338")]
			private set
			{
			}
		}

		[Token(Token = "0x170001AF")]
		public bool isModelLoaded
		{
			[Token(Token = "0x6000DE1")]
			[Address(RVA = "0xD17BE0", Offset = "0xD17BE0", VA = "0xD17BE0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001B0")]
		public Shader loadedShader
		{
			[Token(Token = "0x6000DE2")]
			[Address(RVA = "0xD17C04", Offset = "0xD17C04", VA = "0xD17C04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A348", Offset = "0x93A348")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DE3")]
			[Address(RVA = "0xD17C0C", Offset = "0xD17C0C", VA = "0xD17C0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A358", Offset = "0x93A358")]
			private set
			{
			}
		}

		[Token(Token = "0x170001B1")]
		public string modelOverride
		{
			[Token(Token = "0x6000DE4")]
			[Address(RVA = "0xD17C14", Offset = "0xD17C14", VA = "0xD17C14")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DE5")]
			[Address(RVA = "0xD17C1C", Offset = "0xD17C1C", VA = "0xD17C1C")]
			set
			{
			}
		}

		[Token(Token = "0x170001B2")]
		public Shader shaderOverride
		{
			[Token(Token = "0x6000DE6")]
			[Address(RVA = "0xD17C70", Offset = "0xD17C70", VA = "0xD17C70")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DE7")]
			[Address(RVA = "0xD17C78", Offset = "0xD17C78", VA = "0xD17C78")]
			set
			{
			}
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0xD17CCC", Offset = "0xD17CCC", VA = "0xD17CCC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0xD17CD4", Offset = "0xD17CD4", VA = "0xD17CD4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0xD17CFC", Offset = "0xD17CFC", VA = "0xD17CFC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0xD17F44", Offset = "0xD17F44", VA = "0xD17F44")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0xD17D00", Offset = "0xD17D00", VA = "0xD17D00")]
		public void ClearModel()
		{
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0xD17CA4", Offset = "0xD17CA4", VA = "0xD17CA4")]
		private void SetPreferedShader()
		{
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0xD17F50", Offset = "0xD17F50", VA = "0xD17F50")]
		private void SetShader(Shader newShader)
		{
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0xD17C48", Offset = "0xD17C48", VA = "0xD17C48")]
		private void LoadPreferedModel()
		{
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0xD18094", Offset = "0xD18094", VA = "0xD18094")]
		private void LoadModel(string renderModelName)
		{
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0xD18194", Offset = "0xD18194", VA = "0xD18194")]
		private void AvatarSpecificationCallback(IntPtr avatarSpecification)
		{
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0xD18198", Offset = "0xD18198", VA = "0xD18198")]
		private void OnLoadModelComplete(string renderModelName)
		{
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0xD17CD0", Offset = "0xD17CD0", VA = "0xD17CD0")]
		private void UpdateComponents()
		{
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0xD18254", Offset = "0xD18254", VA = "0xD18254")]
		public void SetDeviceIndex(uint index)
		{
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0xD18280", Offset = "0xD18280", VA = "0xD18280")]
		public VIUOculusVRRenderModel()
		{
		}
	}
}
namespace HTC.UnityPlugin.Vive.ExCamConfigInterface
{
	[Token(Token = "0x2000170")]
	public sealed class ExCamConfigInterfaceDraggableLabel : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler, IInitializePotentialDragHandler, IBeginDragHandler, IDragHandler, IEndDragHandler
	{
		[Serializable]
		[Token(Token = "0x200050B")]
		public class UnityEventFloat : UnityEvent<float>
		{
			[Token(Token = "0x600250A")]
			[Address(RVA = "0xD14CE4", Offset = "0xD14CE4", VA = "0xD14CE4")]
			public UnityEventFloat()
			{
			}
		}

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text m_text;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private InputField m_field;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_fieldValue;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string m_label;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x92C294", Offset = "0x92C294")]
		private int m_dragPrecision;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float m_slopePow;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool m_clampValue;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float m_clampMin;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float m_clampMax;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UnityEventFloat m_onEndEdit;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private HashSet<PointerEventData> m_pointerEnter;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private PointerEventData m_pointerDrag;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector2 m_lastDragPos;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector2 m_dragDelta;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool m_changingFieldText;

		[Token(Token = "0x170001B3")]
		public float fieldValue
		{
			[Token(Token = "0x6000DF6")]
			[Address(RVA = "0xD13ED0", Offset = "0xD13ED0", VA = "0xD13ED0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DF7")]
			[Address(RVA = "0xD13ED8", Offset = "0xD13ED8", VA = "0xD13ED8")]
			set
			{
			}
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0xD13FCC", Offset = "0xD13FCC", VA = "0xD13FCC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0xD143B0", Offset = "0xD143B0", VA = "0xD143B0")]
		private void OnFieldEndEdit(string fieldStr)
		{
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0xD1441C", Offset = "0xD1441C", VA = "0xD1441C")]
		public void SubmitFieldValue()
		{
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0xD1448C", Offset = "0xD1448C", VA = "0xD1448C", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0xD14570", Offset = "0xD14570", VA = "0xD14570", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0xD14624", Offset = "0xD14624", VA = "0xD14624", Slot = "6")]
		public void OnInitializePotentialDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0xD14628", Offset = "0xD14628", VA = "0xD14628", Slot = "7")]
		public void OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0xD14670", Offset = "0xD14670", VA = "0xD14670", Slot = "8")]
		public void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0xD14774", Offset = "0xD14774", VA = "0xD14774", Slot = "9")]
		public void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0xD14264", Offset = "0xD14264", VA = "0xD14264")]
		private void UpdateLabelText()
		{
		}

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0xD14810", Offset = "0xD14810", VA = "0xD14810")]
		private void CombineLabelToText(float leftAlphaFactor, float rightAlphaFactor)
		{
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0xD14BB4", Offset = "0xD14BB4", VA = "0xD14BB4")]
		private string Color32ToHexStr(Color32 color)
		{
			return null;
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0xD14C74", Offset = "0xD14C74", VA = "0xD14C74")]
		public ExCamConfigInterfaceDraggableLabel()
		{
		}
	}
	[Token(Token = "0x2000171")]
	public class ExCamConfigInterfacePanelController : MonoBehaviour
	{
		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_recenterButton;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_dirtySymbol;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ExCamConfigInterfaceDraggableLabel m_posX;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ExCamConfigInterfaceDraggableLabel m_posY;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ExCamConfigInterfaceDraggableLabel m_posZ;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ExCamConfigInterfaceDraggableLabel m_rotX;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ExCamConfigInterfaceDraggableLabel m_rotY;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private ExCamConfigInterfaceDraggableLabel m_rotZ;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private ExCamConfigInterfaceDraggableLabel m_ckR;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ExCamConfigInterfaceDraggableLabel m_ckG;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ExCamConfigInterfaceDraggableLabel m_ckB;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private ExCamConfigInterfaceDraggableLabel m_ckA;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private ExCamConfigInterfaceDraggableLabel m_fov;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private ExCamConfigInterfaceDraggableLabel m_clipNear;

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private ExCamConfigInterfaceDraggableLabel m_clipFar;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private ExCamConfigInterfaceDraggableLabel m_offsetNear;

		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private ExCamConfigInterfaceDraggableLabel m_offsetFar;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private ExCamConfigInterfaceDraggableLabel m_offsetHMD;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private ExCamConfigInterfaceDraggableLabel m_frameSkip;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private ExCamConfigInterfaceDraggableLabel m_sceneResolutionScale;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Toggle m_diableStandardAssets;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92C474", Offset = "0x92C474")]
		private float <posX>k__BackingField;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92C484", Offset = "0x92C484")]
		private float <posY>k__BackingField;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92C494", Offset = "0x92C494")]
		private float <posZ>k__BackingField;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92C4A4", Offset = "0x92C4A4")]
		private float <rotX>k__BackingField;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92C4B4", Offset = "0x92C4B4")]
		private float <rotY>k__BackingField;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92C4C4", Offset = "0x92C4C4")]
		private float <rotZ>k__BackingField;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92C4D4", Offset = "0x92C4D4")]
		private float <ckR>k__BackingField;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92C4E4", Offset = "0x92C4E4")]
		private float <ckG>k__BackingField;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92C4F4", Offset = "0x92C4F4")]
		private float <ckB>k__BackingField;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92C504", Offset = "0x92C504")]
		private float <ckA>k__BackingField;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92C514", Offset = "0x92C514")]
		private float <fov>k__BackingField;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92C524", Offset = "0x92C524")]
		private float <clipNear>k__BackingField;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92C534", Offset = "0x92C534")]
		private float <clipFar>k__BackingField;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92C544", Offset = "0x92C544")]
		private float <offsetNear>k__BackingField;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92C554", Offset = "0x92C554")]
		private float <offsetFar>k__BackingField;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92C564", Offset = "0x92C564")]
		private float <offsetHMD>k__BackingField;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92C574", Offset = "0x92C574")]
		private float <frameSkip>k__BackingField;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92C584", Offset = "0x92C584")]
		private float <sceneResolutionScale>k__BackingField;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92C594", Offset = "0x92C594")]
		private bool <diableStandardAssets>k__BackingField;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private ViveRoleProperty m_exCamViveRole;

		[Token(Token = "0x170001B4")]
		public float posX
		{
			[Token(Token = "0x6000E05")]
			[Address(RVA = "0xD14D34", Offset = "0xD14D34", VA = "0xD14D34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A368", Offset = "0x93A368")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E06")]
			[Address(RVA = "0xD14D3C", Offset = "0xD14D3C", VA = "0xD14D3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A378", Offset = "0x93A378")]
			set
			{
			}
		}

		[Token(Token = "0x170001B5")]
		public float posY
		{
			[Token(Token = "0x6000E07")]
			[Address(RVA = "0xD14D44", Offset = "0xD14D44", VA = "0xD14D44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A388", Offset = "0x93A388")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E08")]
			[Address(RVA = "0xD14D4C", Offset = "0xD14D4C", VA = "0xD14D4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A398", Offset = "0x93A398")]
			set
			{
			}
		}

		[Token(Token = "0x170001B6")]
		public float posZ
		{
			[Token(Token = "0x6000E09")]
			[Address(RVA = "0xD14D54", Offset = "0xD14D54", VA = "0xD14D54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A3A8", Offset = "0x93A3A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E0A")]
			[Address(RVA = "0xD14D5C", Offset = "0xD14D5C", VA = "0xD14D5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A3B8", Offset = "0x93A3B8")]
			set
			{
			}
		}

		[Token(Token = "0x170001B7")]
		public float rotX
		{
			[Token(Token = "0x6000E0B")]
			[Address(RVA = "0xD14D64", Offset = "0xD14D64", VA = "0xD14D64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A3C8", Offset = "0x93A3C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E0C")]
			[Address(RVA = "0xD14D6C", Offset = "0xD14D6C", VA = "0xD14D6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A3D8", Offset = "0x93A3D8")]
			set
			{
			}
		}

		[Token(Token = "0x170001B8")]
		public float rotY
		{
			[Token(Token = "0x6000E0D")]
			[Address(RVA = "0xD14D74", Offset = "0xD14D74", VA = "0xD14D74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A3E8", Offset = "0x93A3E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E0E")]
			[Address(RVA = "0xD14D7C", Offset = "0xD14D7C", VA = "0xD14D7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A3F8", Offset = "0x93A3F8")]
			set
			{
			}
		}

		[Token(Token = "0x170001B9")]
		public float rotZ
		{
			[Token(Token = "0x6000E0F")]
			[Address(RVA = "0xD14D84", Offset = "0xD14D84", VA = "0xD14D84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A408", Offset = "0x93A408")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E10")]
			[Address(RVA = "0xD14D8C", Offset = "0xD14D8C", VA = "0xD14D8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A418", Offset = "0x93A418")]
			set
			{
			}
		}

		[Token(Token = "0x170001BA")]
		public float ckR
		{
			[Token(Token = "0x6000E11")]
			[Address(RVA = "0xD14D94", Offset = "0xD14D94", VA = "0xD14D94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A428", Offset = "0x93A428")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E12")]
			[Address(RVA = "0xD14D9C", Offset = "0xD14D9C", VA = "0xD14D9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A438", Offset = "0x93A438")]
			set
			{
			}
		}

		[Token(Token = "0x170001BB")]
		public float ckG
		{
			[Token(Token = "0x6000E13")]
			[Address(RVA = "0xD14DA4", Offset = "0xD14DA4", VA = "0xD14DA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A448", Offset = "0x93A448")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E14")]
			[Address(RVA = "0xD14DAC", Offset = "0xD14DAC", VA = "0xD14DAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A458", Offset = "0x93A458")]
			set
			{
			}
		}

		[Token(Token = "0x170001BC")]
		public float ckB
		{
			[Token(Token = "0x6000E15")]
			[Address(RVA = "0xD14DB4", Offset = "0xD14DB4", VA = "0xD14DB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A468", Offset = "0x93A468")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E16")]
			[Address(RVA = "0xD14DBC", Offset = "0xD14DBC", VA = "0xD14DBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A478", Offset = "0x93A478")]
			set
			{
			}
		}

		[Token(Token = "0x170001BD")]
		public float ckA
		{
			[Token(Token = "0x6000E17")]
			[Address(RVA = "0xD14DC4", Offset = "0xD14DC4", VA = "0xD14DC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A488", Offset = "0x93A488")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E18")]
			[Address(RVA = "0xD14DCC", Offset = "0xD14DCC", VA = "0xD14DCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A498", Offset = "0x93A498")]
			set
			{
			}
		}

		[Token(Token = "0x170001BE")]
		public float fov
		{
			[Token(Token = "0x6000E19")]
			[Address(RVA = "0xD14DD4", Offset = "0xD14DD4", VA = "0xD14DD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A4A8", Offset = "0x93A4A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E1A")]
			[Address(RVA = "0xD14DDC", Offset = "0xD14DDC", VA = "0xD14DDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A4B8", Offset = "0x93A4B8")]
			set
			{
			}
		}

		[Token(Token = "0x170001BF")]
		public float clipNear
		{
			[Token(Token = "0x6000E1B")]
			[Address(RVA = "0xD14DE4", Offset = "0xD14DE4", VA = "0xD14DE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A4C8", Offset = "0x93A4C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E1C")]
			[Address(RVA = "0xD14DEC", Offset = "0xD14DEC", VA = "0xD14DEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A4D8", Offset = "0x93A4D8")]
			set
			{
			}
		}

		[Token(Token = "0x170001C0")]
		public float clipFar
		{
			[Token(Token = "0x6000E1D")]
			[Address(RVA = "0xD14DF4", Offset = "0xD14DF4", VA = "0xD14DF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A4E8", Offset = "0x93A4E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E1E")]
			[Address(RVA = "0xD14DFC", Offset = "0xD14DFC", VA = "0xD14DFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A4F8", Offset = "0x93A4F8")]
			set
			{
			}
		}

		[Token(Token = "0x170001C1")]
		public float offsetNear
		{
			[Token(Token = "0x6000E1F")]
			[Address(RVA = "0xD14E04", Offset = "0xD14E04", VA = "0xD14E04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A508", Offset = "0x93A508")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E20")]
			[Address(RVA = "0xD14E0C", Offset = "0xD14E0C", VA = "0xD14E0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A518", Offset = "0x93A518")]
			set
			{
			}
		}

		[Token(Token = "0x170001C2")]
		public float offsetFar
		{
			[Token(Token = "0x6000E21")]
			[Address(RVA = "0xD14E14", Offset = "0xD14E14", VA = "0xD14E14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A528", Offset = "0x93A528")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E22")]
			[Address(RVA = "0xD14E1C", Offset = "0xD14E1C", VA = "0xD14E1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A538", Offset = "0x93A538")]
			set
			{
			}
		}

		[Token(Token = "0x170001C3")]
		public float offsetHMD
		{
			[Token(Token = "0x6000E23")]
			[Address(RVA = "0xD14E24", Offset = "0xD14E24", VA = "0xD14E24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A548", Offset = "0x93A548")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E24")]
			[Address(RVA = "0xD14E2C", Offset = "0xD14E2C", VA = "0xD14E2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A558", Offset = "0x93A558")]
			set
			{
			}
		}

		[Token(Token = "0x170001C4")]
		public float frameSkip
		{
			[Token(Token = "0x6000E25")]
			[Address(RVA = "0xD14E34", Offset = "0xD14E34", VA = "0xD14E34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A568", Offset = "0x93A568")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E26")]
			[Address(RVA = "0xD14E3C", Offset = "0xD14E3C", VA = "0xD14E3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A578", Offset = "0x93A578")]
			set
			{
			}
		}

		[Token(Token = "0x170001C5")]
		public float sceneResolutionScale
		{
			[Token(Token = "0x6000E27")]
			[Address(RVA = "0xD14E44", Offset = "0xD14E44", VA = "0xD14E44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A588", Offset = "0x93A588")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E28")]
			[Address(RVA = "0xD14E4C", Offset = "0xD14E4C", VA = "0xD14E4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A598", Offset = "0x93A598")]
			set
			{
			}
		}

		[Token(Token = "0x170001C6")]
		public bool diableStandardAssets
		{
			[Token(Token = "0x6000E29")]
			[Address(RVA = "0xD14E54", Offset = "0xD14E54", VA = "0xD14E54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A5A8", Offset = "0x93A5A8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000E2A")]
			[Address(RVA = "0xD14E5C", Offset = "0xD14E5C", VA = "0xD14E5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A5B8", Offset = "0x93A5B8")]
			set
			{
			}
		}

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0xD14E68", Offset = "0xD14E68", VA = "0xD14E68")]
		public void SaveConfig()
		{
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0xD14E6C", Offset = "0xD14E6C", VA = "0xD14E6C")]
		public void ReloadConfig()
		{
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0xD14E70", Offset = "0xD14E70", VA = "0xD14E70")]
		public void RecenterExternalCameraPose()
		{
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0xD14E74", Offset = "0xD14E74", VA = "0xD14E74")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0xD151D0", Offset = "0xD151D0", VA = "0xD151D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0xD158EC", Offset = "0xD158EC", VA = "0xD158EC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0xD15314", Offset = "0xD15314", VA = "0xD15314")]
		private void ReloadFields()
		{
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0xD159BC", Offset = "0xD159BC", VA = "0xD159BC")]
		private void OnDeviceIndexChanged(uint deviceIndex)
		{
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0xD155E4", Offset = "0xD155E4", VA = "0xD155E4")]
		private void UpdateRecenterButtonVisible()
		{
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0xD15A74", Offset = "0xD15A74", VA = "0xD15A74")]
		public ExCamConfigInterfacePanelController()
		{
		}
	}
}
namespace HTC.UnityPlugin.Utility
{
	[Token(Token = "0x2000172")]
	public class CustomOrderedEnumAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92C5A4", Offset = "0x92C5A4")]
		private Type <overrideEnumType>k__BackingField;

		[Token(Token = "0x170001C7")]
		public Type overrideEnumType
		{
			[Token(Token = "0x6000E35")]
			[Address(RVA = "0x13C45D0", Offset = "0x13C45D0", VA = "0x13C45D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A5C8", Offset = "0x93A5C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E36")]
			[Address(RVA = "0x13C45D8", Offset = "0x13C45D8", VA = "0x13C45D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A5D8", Offset = "0x93A5D8")]
			private set
			{
			}
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0x13C45E0", Offset = "0x13C45E0", VA = "0x13C45E0")]
		public CustomOrderedEnumAttribute([Optional] Type overrideEnumType)
		{
		}
	}
	[Token(Token = "0x2000173")]
	public class FlagsFromEnumAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92C5B4", Offset = "0x92C5B4")]
		private Type <EnumType>k__BackingField;

		[Token(Token = "0x170001C8")]
		public Type EnumType
		{
			[Token(Token = "0x6000E38")]
			[Address(RVA = "0x13C6254", Offset = "0x13C6254", VA = "0x13C6254")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A5E8", Offset = "0x93A5E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E39")]
			[Address(RVA = "0x13C625C", Offset = "0x13C625C", VA = "0x13C625C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A5F8", Offset = "0x93A5F8")]
			private set
			{
			}
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0x13C6264", Offset = "0x13C6264", VA = "0x13C6264")]
		public FlagsFromEnumAttribute(Type enumType)
		{
		}
	}
	[Token(Token = "0x2000174")]
	public static class ChangeProp
	{
		[Token(Token = "0x6000E3B")]
		public static bool Set<T>(ref T currentValue, T newValue, [Optional] Func<T, T, bool> equalFunc)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0x13C3EB8", Offset = "0x13C3EB8", VA = "0x13C3EB8")]
		public static bool Vector3Equal(Vector3 a, Vector3 b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0x13C3F60", Offset = "0x13C3F60", VA = "0x13C3F60")]
		public static bool Vector3AxisApprox(Vector3 a, Vector3 b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0x13C406C", Offset = "0x13C406C", VA = "0x13C406C")]
		public static bool Vector3DistanceApprox(Vector3 a, Vector3 b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x13C4174", Offset = "0x13C4174", VA = "0x13C4174")]
		public static bool Vector2Equal(Vector2 a, Vector2 b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0x13C4204", Offset = "0x13C4204", VA = "0x13C4204")]
		public static bool Vector2AxisApprox(Vector2 a, Vector2 b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x13C42D0", Offset = "0x13C42D0", VA = "0x13C42D0")]
		public static bool Vector2DistanceApprox(Vector2 a, Vector2 b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x13C43B0", Offset = "0x13C43B0", VA = "0x13C43B0")]
		public static bool QuaternionEqual(Quaternion a, Quaternion b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x13C4470", Offset = "0x13C4470", VA = "0x13C4470")]
		public static bool QuaternionAngleApprox(Quaternion a, Quaternion b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0x13C4564", Offset = "0x13C4564", VA = "0x13C4564")]
		public static bool StringEmptyEqual(string a, string b)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000175")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x925D34", Offset = "0x925D34")]
	public interface IIndexedSetReadOnly<T> : IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x170001C9")]
		int Count
		{
			[Token(Token = "0x6000E45")]
			get;
		}

		[Token(Token = "0x170001CA")]
		T Item
		{
			[Token(Token = "0x6000E46")]
			get;
		}

		[Token(Token = "0x6000E47")]
		bool Contains(T item);

		[Token(Token = "0x6000E48")]
		void CopyTo(T[] array, int arrayIndex);

		[Token(Token = "0x6000E49")]
		int IndexOf(T item);
	}
	[Token(Token = "0x2000176")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x925D6C", Offset = "0x925D6C")]
	public class IndexedSet<T> : IList<T>, ICollection<T>, IEnumerable<T>, IEnumerable, IIndexedSetReadOnly<T>
	{
		[Token(Token = "0x200050C")]
		[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x927638", Offset = "0x927638")]
		private class ReadOnlyWrapper : IIndexedSetReadOnly<T>, IEnumerable<T>, IEnumerable
		{
			[Token(Token = "0x4001EE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IndexedSet<T> m_container;

			[Token(Token = "0x17000471")]
			public T Item
			{
				[Token(Token = "0x600250C")]
				get
				{
					return (T)null;
				}
			}

			[Token(Token = "0x17000472")]
			public int Count
			{
				[Token(Token = "0x600250D")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x600250B")]
			public ReadOnlyWrapper(IndexedSet<T> container)
			{
			}

			[Token(Token = "0x600250E")]
			public bool Contains(T item)
			{
				return default(bool);
			}

			[Token(Token = "0x600250F")]
			public void CopyTo(T[] array, int arrayIndex)
			{
			}

			[Token(Token = "0x6002510")]
			public int IndexOf(T item)
			{
				return default(int);
			}

			[Token(Token = "0x6002511")]
			public IEnumerator<T> GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x6002512")]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected readonly Dictionary<T, int> m_Dictionary;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected readonly List<T> m_List;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected IIndexedSetReadOnly<T> m_readOnly;

		[Token(Token = "0x170001CB")]
		public int Count
		{
			[Token(Token = "0x6000E4C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001CC")]
		public bool IsReadOnly
		{
			[Token(Token = "0x6000E4D")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001CD")]
		public IIndexedSetReadOnly<T> ReadOnly
		{
			[Token(Token = "0x6000E4E")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001CE")]
		public T Item
		{
			[Token(Token = "0x6000E4F")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6000E50")]
			set
			{
			}
		}

		[Token(Token = "0x6000E4A")]
		public IndexedSet()
		{
		}

		[Token(Token = "0x6000E4B")]
		public IndexedSet(int capacity)
		{
		}

		[Token(Token = "0x6000E51")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000E52")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000E53")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x6000E54")]
		public bool AddUnique(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E55")]
		public bool Remove(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E56")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000E57")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E58")]
		public void CopyTo(T[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6000E59")]
		public int IndexOf(T item)
		{
			return default(int);
		}

		[Token(Token = "0x6000E5A")]
		public virtual void Insert(int index, T item)
		{
		}

		[Token(Token = "0x6000E5B")]
		public virtual void RemoveAt(int index)
		{
		}

		[Token(Token = "0x6000E5C")]
		public void RemoveAll(Predicate<T> match)
		{
		}

		[Token(Token = "0x6000E5D")]
		public void Sort(Comparison<T> sortLayoutFunction)
		{
		}

		[Token(Token = "0x6000E5E")]
		public ReadOnlyCollection<T> AsReadOnly()
		{
			return null;
		}
	}
	[Token(Token = "0x2000177")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x925DA4", Offset = "0x925DA4")]
	public interface IIndexedTableReadOnly<TKey, TValue> : IEnumerable<KeyValuePair<TKey, TValue>>, IEnumerable
	{
		[Token(Token = "0x170001CF")]
		int Count
		{
			[Token(Token = "0x6000E5F")]
			get;
		}

		[Token(Token = "0x170001D0")]
		ICollection<TKey> Keys
		{
			[Token(Token = "0x6000E60")]
			get;
		}

		[Token(Token = "0x170001D1")]
		ICollection<TValue> Values
		{
			[Token(Token = "0x6000E61")]
			get;
		}

		[Token(Token = "0x170001D2")]
		TValue Item
		{
			[Token(Token = "0x6000E62")]
			get;
		}

		[Token(Token = "0x6000E63")]
		TKey GetKeyByIndex(int index);

		[Token(Token = "0x6000E64")]
		TValue GetValueByIndex(int index);

		[Token(Token = "0x6000E65")]
		bool ContainsKey(TKey key);

		[Token(Token = "0x6000E66")]
		bool TryGetValue(TKey key, out TValue value);

		[Token(Token = "0x6000E67")]
		void CopyTo(KeyValuePair<TKey, TValue>[] array, int arrayIndex);

		[Token(Token = "0x6000E68")]
		int IndexOf(TKey item);
	}
	[Token(Token = "0x2000178")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x925DDC", Offset = "0x925DDC")]
	public class IndexedTable<TKey, TValue> : IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IEnumerable, IIndexedTableReadOnly<TKey, TValue>
	{
		[Token(Token = "0x200050D")]
		[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x927670", Offset = "0x927670")]
		private class ReadOnlyWrapper : IIndexedTableReadOnly<TKey, TValue>, IEnumerable<KeyValuePair<TKey, TValue>>, IEnumerable
		{
			[Token(Token = "0x4001EE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IndexedTable<TKey, TValue> m_container;

			[Token(Token = "0x17000473")]
			public TValue Item
			{
				[Token(Token = "0x6002514")]
				get
				{
					return (TValue)null;
				}
			}

			[Token(Token = "0x17000474")]
			public int Count
			{
				[Token(Token = "0x6002515")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x17000475")]
			public ICollection<TKey> Keys
			{
				[Token(Token = "0x6002516")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000476")]
			public ICollection<TValue> Values
			{
				[Token(Token = "0x6002517")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002513")]
			public ReadOnlyWrapper(IndexedTable<TKey, TValue> container)
			{
			}

			[Token(Token = "0x6002518")]
			public bool ContainsKey(TKey key)
			{
				return default(bool);
			}

			[Token(Token = "0x6002519")]
			public void CopyTo(KeyValuePair<TKey, TValue>[] array, int arrayIndex)
			{
			}

			[Token(Token = "0x600251A")]
			public IEnumerator<KeyValuePair<TKey, TValue>> GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x600251B")]
			public int IndexOf(TKey item)
			{
				return default(int);
			}

			[Token(Token = "0x600251C")]
			public TKey GetKeyByIndex(int index)
			{
				return (TKey)null;
			}

			[Token(Token = "0x600251D")]
			public TValue GetValueByIndex(int index)
			{
				return (TValue)null;
			}

			[Token(Token = "0x600251E")]
			public bool TryGetValue(TKey key, out TValue value)
			{
				return default(bool);
			}

			[Token(Token = "0x600251F")]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x200050E")]
		private class Enumerator : IEnumerator<KeyValuePair<TKey, TValue>>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int iterator;

			[Token(Token = "0x4001EE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private IndexedTable<TKey, TValue> container;

			[Token(Token = "0x17000477")]
			public KeyValuePair<TKey, TValue> Current
			{
				[Token(Token = "0x6002521")]
				get
				{
					return default(KeyValuePair<TKey, TValue>);
				}
			}

			[Token(Token = "0x17000478")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002522")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002520")]
			public Enumerator(IndexedTable<TKey, TValue> c)
			{
			}

			[Token(Token = "0x6002523")]
			public void Dispose()
			{
			}

			[Token(Token = "0x6002524")]
			public bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002525")]
			public void Reset()
			{
			}
		}

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected readonly Dictionary<TKey, int> m_Dictionary;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected readonly List<TKey> m_KeyList;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected readonly List<TValue> m_ValueList;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected IIndexedTableReadOnly<TKey, TValue> m_readOnly;

		[Token(Token = "0x170001D3")]
		public int Count
		{
			[Token(Token = "0x6000E6B")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001D4")]
		public bool IsReadOnly
		{
			[Token(Token = "0x6000E6C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001D5")]
		public IIndexedTableReadOnly<TKey, TValue> ReadOnly
		{
			[Token(Token = "0x6000E6D")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D6")]
		public ICollection<TKey> Keys
		{
			[Token(Token = "0x6000E72")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D7")]
		public ICollection<TValue> Values
		{
			[Token(Token = "0x6000E73")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D8")]
		public TValue Item
		{
			[Token(Token = "0x6000E74")]
			get
			{
				return (TValue)null;
			}
			[Token(Token = "0x6000E75")]
			set
			{
			}
		}

		[Token(Token = "0x6000E69")]
		public IndexedTable()
		{
		}

		[Token(Token = "0x6000E6A")]
		public IndexedTable(int capacity)
		{
		}

		[Token(Token = "0x6000E6E")]
		public TKey GetKeyByIndex(int index)
		{
			return (TKey)null;
		}

		[Token(Token = "0x6000E6F")]
		public TValue GetValueByIndex(int index)
		{
			return (TValue)null;
		}

		[Token(Token = "0x6000E70")]
		public void SetValueByIndex(int index, TValue value)
		{
		}

		[Token(Token = "0x6000E71")]
		public KeyValuePair<TKey, TValue> GetKeyValuePairByIndex(int index)
		{
			return default(KeyValuePair<TKey, TValue>);
		}

		[Token(Token = "0x6000E76")]
		public void Add(TKey key, [Optional] TValue value)
		{
		}

		[Token(Token = "0x6000E77")]
		public bool AddUniqueKey(TKey key, [Optional] TValue value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E78")]
		public bool ContainsKey(TKey key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E79")]
		public bool Remove(TKey key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E7A")]
		public virtual void RemoveAt(int index)
		{
		}

		[Token(Token = "0x6000E7B")]
		public bool TryGetValue(TKey key, out TValue value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E7C")]
		public void Add(KeyValuePair<TKey, TValue> item)
		{
		}

		[Token(Token = "0x6000E7D")]
		public bool Contains(KeyValuePair<TKey, TValue> item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E7E")]
		public void CopyTo(KeyValuePair<TKey, TValue>[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6000E7F")]
		public int IndexOf(TKey item)
		{
			return default(int);
		}

		[Token(Token = "0x6000E80")]
		public bool Remove(KeyValuePair<TKey, TValue> item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E81")]
		public void RemoveAll(Predicate<KeyValuePair<TKey, TValue>> match)
		{
		}

		[Token(Token = "0x6000E82")]
		public IEnumerator<KeyValuePair<TKey, TValue>> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000E83")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000E84")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000E85")]
		public ReadOnlyCollection<TKey> AsReadOnly()
		{
			return null;
		}
	}
	[Token(Token = "0x2000179")]
	public class OrderedIndexedSet<T> : IndexedSet<T>
	{
		[Token(Token = "0x6000E86")]
		public OrderedIndexedSet()
		{
		}

		[Token(Token = "0x6000E87")]
		public OrderedIndexedSet(int capacity)
		{
		}

		[Token(Token = "0x6000E88")]
		public override void Insert(int index, T item)
		{
		}

		[Token(Token = "0x6000E89")]
		public override void RemoveAt(int index)
		{
		}

		[Token(Token = "0x6000E8A")]
		public T GetFirst()
		{
			return (T)null;
		}

		[Token(Token = "0x6000E8B")]
		public bool TryGetFirst(out T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E8C")]
		public T GetLast()
		{
			return (T)null;
		}

		[Token(Token = "0x6000E8D")]
		public bool TryGetLast(out T item)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200017A")]
	public class OrderedIndexedTable<TKey, TValue> : IndexedTable<TKey, TValue>
	{
		[Token(Token = "0x6000E8E")]
		public OrderedIndexedTable()
		{
		}

		[Token(Token = "0x6000E8F")]
		public OrderedIndexedTable(int capacity)
		{
		}

		[Token(Token = "0x6000E90")]
		public void Insert(int index, TKey key, TValue value)
		{
		}

		[Token(Token = "0x6000E91")]
		public void Insert(int index, KeyValuePair<TKey, TValue> item)
		{
		}

		[Token(Token = "0x6000E92")]
		public override void RemoveAt(int index)
		{
		}

		[Token(Token = "0x6000E93")]
		public TKey GetFirstKey()
		{
			return (TKey)null;
		}

		[Token(Token = "0x6000E94")]
		public bool TryGetFirstKey(out TKey item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E95")]
		public TKey GetLastKey()
		{
			return (TKey)null;
		}

		[Token(Token = "0x6000E96")]
		public bool TryGetLastKey(out TKey item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E97")]
		public TValue GetFirstValue()
		{
			return (TValue)null;
		}

		[Token(Token = "0x6000E98")]
		public bool TryGetFirstValue(out TValue item)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E99")]
		public TValue GetLastValue()
		{
			return (TValue)null;
		}

		[Token(Token = "0x6000E9A")]
		public bool TryGetLastValue(out TValue item)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200017B")]
	public static class DictionaryPool<TKey, TValue>
	{
		[Serializable]
		[Token(Token = "0x200050F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9276A8", Offset = "0x9276A8")]
		private sealed class <>c
		{
			[Token(Token = "0x4001EE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x6002527")]
			public <>c()
			{
			}

			[Token(Token = "0x6002528")]
			internal Dictionary<TKey, TValue> <.cctor>b__3_0()
			{
				return null;
			}

			[Token(Token = "0x6002529")]
			internal void <.cctor>b__3_1(Dictionary<TKey, TValue> e)
			{
			}
		}

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly ObjectPool<Dictionary<TKey, TValue>> pool;

		[Token(Token = "0x6000E9B")]
		public static Dictionary<TKey, TValue> Get()
		{
			return null;
		}

		[Token(Token = "0x6000E9C")]
		public static void Release(Dictionary<TKey, TValue> toRelease)
		{
		}
	}
	[Token(Token = "0x200017C")]
	public static class IndexedSetPool<T>
	{
		[Serializable]
		[Token(Token = "0x2000510")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9276B8", Offset = "0x9276B8")]
		private sealed class <>c
		{
			[Token(Token = "0x4001EE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x600252B")]
			public <>c()
			{
			}

			[Token(Token = "0x600252C")]
			internal IndexedSet<T> <.cctor>b__3_0()
			{
				return null;
			}

			[Token(Token = "0x600252D")]
			internal void <.cctor>b__3_1(IndexedSet<T> e)
			{
			}
		}

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly ObjectPool<IndexedSet<T>> pool;

		[Token(Token = "0x6000E9E")]
		public static IndexedSet<T> Get()
		{
			return null;
		}

		[Token(Token = "0x6000E9F")]
		public static void Release(IndexedSet<T> toRelease)
		{
		}
	}
	[Token(Token = "0x200017D")]
	public static class ListPool<T>
	{
		[Serializable]
		[Token(Token = "0x2000511")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9276C8", Offset = "0x9276C8")]
		private sealed class <>c
		{
			[Token(Token = "0x4001EE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x600252F")]
			public <>c()
			{
			}

			[Token(Token = "0x6002530")]
			internal List<T> <.cctor>b__3_0()
			{
				return null;
			}

			[Token(Token = "0x6002531")]
			internal void <.cctor>b__3_1(List<T> e)
			{
			}
		}

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly ObjectPool<List<T>> pool;

		[Token(Token = "0x6000EA1")]
		public static List<T> Get()
		{
			return null;
		}

		[Token(Token = "0x6000EA2")]
		public static void Release(List<T> toRelease)
		{
		}
	}
	[Token(Token = "0x200017E")]
	public class ObjectPool<T>
	{
		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Stack<T> stack;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Func<T> actionOnNew;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly UnityAction<T> actionOnGet;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly UnityAction<T> actionOnRelease;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92C5C4", Offset = "0x92C5C4")]
		private int <CountAll>k__BackingField;

		[Token(Token = "0x170001D9")]
		public int CountAll
		{
			[Token(Token = "0x6000EA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A608", Offset = "0x93A608")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000EA5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A618", Offset = "0x93A618")]
			private set
			{
			}
		}

		[Token(Token = "0x170001DA")]
		public int CountInactive
		{
			[Token(Token = "0x6000EA6")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001DB")]
		public int CountActive
		{
			[Token(Token = "0x6000EA7")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000EA8")]
		public ObjectPool(Func<T> onNew, [Optional] UnityAction<T> onGet, [Optional] UnityAction<T> onRelease)
		{
		}

		[Token(Token = "0x6000EA9")]
		public T Get()
		{
			return (T)null;
		}

		[Token(Token = "0x6000EAA")]
		public void Release(T element)
		{
		}
	}
	[Token(Token = "0x200017F")]
	public static class EnumUtils
	{
		[Token(Token = "0x2000512")]
		public class EnumDisplayInfo
		{
			[Serializable]
			[Token(Token = "0x2000640")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x928180", Offset = "0x928180")]
			private sealed class <>c
			{
				[Token(Token = "0x4002281")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public static readonly <>c <>9;

				[Token(Token = "0x4002282")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public static Func<FieldInfo, bool> <>9__76_0;

				[Token(Token = "0x4002283")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public static Func<FieldInfo, int> <>9__76_1;

				[Token(Token = "0x600284F")]
				[Address(RVA = "0x13C6138", Offset = "0x13C6138", VA = "0x13C6138")]
				public <>c()
				{
				}

				[Token(Token = "0x6002850")]
				[Address(RVA = "0x13C6140", Offset = "0x13C6140", VA = "0x13C6140")]
				internal bool <.ctor>b__76_0(FieldInfo fi)
				{
					return default(bool);
				}

				[Token(Token = "0x6002851")]
				[Address(RVA = "0x13C621C", Offset = "0x13C621C", VA = "0x13C621C")]
				internal int <.ctor>b__76_1(FieldInfo fi)
				{
					return default(int);
				}
			}

			[Token(Token = "0x4001EE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93834C", Offset = "0x93834C")]
			private Type <enumType>k__BackingField;

			[Token(Token = "0x4001EE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93835C", Offset = "0x93835C")]
			private int <minValue>k__BackingField;

			[Token(Token = "0x4001EE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93836C", Offset = "0x93836C")]
			private int <maxValue>k__BackingField;

			[Token(Token = "0x4001EEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93837C", Offset = "0x93837C")]
			private string[] <rawNames>k__BackingField;

			[Token(Token = "0x4001EEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93838C", Offset = "0x93838C")]
			private int[] <rawValues>k__BackingField;

			[Token(Token = "0x4001EEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93839C", Offset = "0x93839C")]
			private Dictionary<int, int> <rawValue2index>k__BackingField;

			[Token(Token = "0x4001EED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9383AC", Offset = "0x9383AC")]
			private Dictionary<string, int> <rawName2index>k__BackingField;

			[Token(Token = "0x4001EEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9383BC", Offset = "0x9383BC")]
			private string[] <displayedRawNames>k__BackingField;

			[Token(Token = "0x4001EEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9383CC", Offset = "0x9383CC")]
			private string[] <displayedNames>k__BackingField;

			[Token(Token = "0x4001EF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9383DC", Offset = "0x9383DC")]
			private int[] <displayedValues>k__BackingField;

			[Token(Token = "0x4001EF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9383EC", Offset = "0x9383EC")]
			private Dictionary<int, int> <value2displayedIndex>k__BackingField;

			[Token(Token = "0x4001EF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9383FC", Offset = "0x9383FC")]
			private Dictionary<string, int> <name2displayedIndex>k__BackingField;

			[Token(Token = "0x4001EF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93840C", Offset = "0x93840C")]
			private string[] <displayedMaskRawNames>k__BackingField;

			[Token(Token = "0x4001EF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93841C", Offset = "0x93841C")]
			private string[] <displayedMaskNames>k__BackingField;

			[Token(Token = "0x4001EF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93842C", Offset = "0x93842C")]
			private int[] <displayedMaskValues>k__BackingField;

			[Token(Token = "0x4001EF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93843C", Offset = "0x93843C")]
			private ulong[] <displayedMaskRealMaskField>k__BackingField;

			[Token(Token = "0x4001EF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93844C", Offset = "0x93844C")]
			private Dictionary<int, int> <value2displayedMaskIndex>k__BackingField;

			[Token(Token = "0x4001EF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93845C", Offset = "0x93845C")]
			private Dictionary<string, int> <name2displayedMaskIndex>k__BackingField;

			[Token(Token = "0x17000479")]
			public Type enumType
			{
				[Token(Token = "0x6002532")]
				[Address(RVA = "0x13C5CF0", Offset = "0x13C5CF0", VA = "0x13C5CF0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F3A8", Offset = "0x93F3A8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002533")]
				[Address(RVA = "0x13C5CF8", Offset = "0x13C5CF8", VA = "0x13C5CF8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F3B8", Offset = "0x93F3B8")]
				private set
				{
				}
			}

			[Token(Token = "0x1700047A")]
			public int minValue
			{
				[Token(Token = "0x6002534")]
				[Address(RVA = "0x13C5624", Offset = "0x13C5624", VA = "0x13C5624")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F3C8", Offset = "0x93F3C8")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002535")]
				[Address(RVA = "0x13C5D00", Offset = "0x13C5D00", VA = "0x13C5D00")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F3D8", Offset = "0x93F3D8")]
				private set
				{
				}
			}

			[Token(Token = "0x1700047B")]
			public int maxValue
			{
				[Token(Token = "0x6002536")]
				[Address(RVA = "0x13C56A4", Offset = "0x13C56A4", VA = "0x13C56A4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F3E8", Offset = "0x93F3E8")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002537")]
				[Address(RVA = "0x13C5D08", Offset = "0x13C5D08", VA = "0x13C5D08")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F3F8", Offset = "0x93F3F8")]
				private set
				{
				}
			}

			[Token(Token = "0x1700047C")]
			public string[] rawNames
			{
				[Token(Token = "0x6002538")]
				[Address(RVA = "0x13C5D10", Offset = "0x13C5D10", VA = "0x13C5D10")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F408", Offset = "0x93F408")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002539")]
				[Address(RVA = "0x13C5D18", Offset = "0x13C5D18", VA = "0x13C5D18")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F418", Offset = "0x93F418")]
				private set
				{
				}
			}

			[Token(Token = "0x1700047D")]
			public int[] rawValues
			{
				[Token(Token = "0x600253A")]
				[Address(RVA = "0x13C5D20", Offset = "0x13C5D20", VA = "0x13C5D20")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F428", Offset = "0x93F428")]
				get
				{
					return null;
				}
				[Token(Token = "0x600253B")]
				[Address(RVA = "0x13C5D28", Offset = "0x13C5D28", VA = "0x13C5D28")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F438", Offset = "0x93F438")]
				private set
				{
				}
			}

			[Token(Token = "0x1700047E")]
			public Dictionary<int, int> rawValue2index
			{
				[Token(Token = "0x600253C")]
				[Address(RVA = "0x13C5D30", Offset = "0x13C5D30", VA = "0x13C5D30")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F448", Offset = "0x93F448")]
				get
				{
					return null;
				}
				[Token(Token = "0x600253D")]
				[Address(RVA = "0x13C5D38", Offset = "0x13C5D38", VA = "0x13C5D38")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F458", Offset = "0x93F458")]
				private set
				{
				}
			}

			[Token(Token = "0x1700047F")]
			public Dictionary<string, int> rawName2index
			{
				[Token(Token = "0x600253E")]
				[Address(RVA = "0x13C5D40", Offset = "0x13C5D40", VA = "0x13C5D40")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F468", Offset = "0x93F468")]
				get
				{
					return null;
				}
				[Token(Token = "0x600253F")]
				[Address(RVA = "0x13C5D48", Offset = "0x13C5D48", VA = "0x13C5D48")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F478", Offset = "0x93F478")]
				private set
				{
				}
			}

			[Token(Token = "0x17000480")]
			public int displayedLength
			{
				[Token(Token = "0x6002540")]
				[Address(RVA = "0x13C5D50", Offset = "0x13C5D50", VA = "0x13C5D50")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x17000481")]
			public string[] displayedRawNames
			{
				[Token(Token = "0x6002541")]
				[Address(RVA = "0x13C5D7C", Offset = "0x13C5D7C", VA = "0x13C5D7C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F488", Offset = "0x93F488")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002542")]
				[Address(RVA = "0x13C5D84", Offset = "0x13C5D84", VA = "0x13C5D84")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F498", Offset = "0x93F498")]
				private set
				{
				}
			}

			[Token(Token = "0x17000482")]
			public string[] displayedNames
			{
				[Token(Token = "0x6002543")]
				[Address(RVA = "0x13C5D8C", Offset = "0x13C5D8C", VA = "0x13C5D8C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F4A8", Offset = "0x93F4A8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002544")]
				[Address(RVA = "0x13C5D94", Offset = "0x13C5D94", VA = "0x13C5D94")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F4B8", Offset = "0x93F4B8")]
				private set
				{
				}
			}

			[Token(Token = "0x17000483")]
			public int[] displayedValues
			{
				[Token(Token = "0x6002545")]
				[Address(RVA = "0x13C5D9C", Offset = "0x13C5D9C", VA = "0x13C5D9C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F4C8", Offset = "0x93F4C8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002546")]
				[Address(RVA = "0x13C5DA4", Offset = "0x13C5DA4", VA = "0x13C5DA4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F4D8", Offset = "0x93F4D8")]
				private set
				{
				}
			}

			[Token(Token = "0x17000484")]
			public Dictionary<int, int> value2displayedIndex
			{
				[Token(Token = "0x6002547")]
				[Address(RVA = "0x13C5DAC", Offset = "0x13C5DAC", VA = "0x13C5DAC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F4E8", Offset = "0x93F4E8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002548")]
				[Address(RVA = "0x13C5DB4", Offset = "0x13C5DB4", VA = "0x13C5DB4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F4F8", Offset = "0x93F4F8")]
				private set
				{
				}
			}

			[Token(Token = "0x17000485")]
			public Dictionary<string, int> name2displayedIndex
			{
				[Token(Token = "0x6002549")]
				[Address(RVA = "0x13C5DBC", Offset = "0x13C5DBC", VA = "0x13C5DBC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F508", Offset = "0x93F508")]
				get
				{
					return null;
				}
				[Token(Token = "0x600254A")]
				[Address(RVA = "0x13C5DC4", Offset = "0x13C5DC4", VA = "0x13C5DC4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F518", Offset = "0x93F518")]
				private set
				{
				}
			}

			[Token(Token = "0x17000486")]
			public int displayedMaskLength
			{
				[Token(Token = "0x600254B")]
				[Address(RVA = "0x13C5DCC", Offset = "0x13C5DCC", VA = "0x13C5DCC")]
				get
				{
					return default(int);
				}
			}

			[Token(Token = "0x17000487")]
			public string[] displayedMaskRawNames
			{
				[Token(Token = "0x600254C")]
				[Address(RVA = "0x13C5DF8", Offset = "0x13C5DF8", VA = "0x13C5DF8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F528", Offset = "0x93F528")]
				get
				{
					return null;
				}
				[Token(Token = "0x600254D")]
				[Address(RVA = "0x13C5E00", Offset = "0x13C5E00", VA = "0x13C5E00")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F538", Offset = "0x93F538")]
				private set
				{
				}
			}

			[Token(Token = "0x17000488")]
			public string[] displayedMaskNames
			{
				[Token(Token = "0x600254E")]
				[Address(RVA = "0x13C5E08", Offset = "0x13C5E08", VA = "0x13C5E08")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F548", Offset = "0x93F548")]
				get
				{
					return null;
				}
				[Token(Token = "0x600254F")]
				[Address(RVA = "0x13C5E10", Offset = "0x13C5E10", VA = "0x13C5E10")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F558", Offset = "0x93F558")]
				private set
				{
				}
			}

			[Token(Token = "0x17000489")]
			public int[] displayedMaskValues
			{
				[Token(Token = "0x6002550")]
				[Address(RVA = "0x13C5E18", Offset = "0x13C5E18", VA = "0x13C5E18")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F568", Offset = "0x93F568")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002551")]
				[Address(RVA = "0x13C5E20", Offset = "0x13C5E20", VA = "0x13C5E20")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F578", Offset = "0x93F578")]
				private set
				{
				}
			}

			[Token(Token = "0x1700048A")]
			public ulong[] displayedMaskRealMaskField
			{
				[Token(Token = "0x6002552")]
				[Address(RVA = "0x13C5E28", Offset = "0x13C5E28", VA = "0x13C5E28")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F588", Offset = "0x93F588")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002553")]
				[Address(RVA = "0x13C5E30", Offset = "0x13C5E30", VA = "0x13C5E30")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F598", Offset = "0x93F598")]
				private set
				{
				}
			}

			[Token(Token = "0x1700048B")]
			public Dictionary<int, int> value2displayedMaskIndex
			{
				[Token(Token = "0x6002554")]
				[Address(RVA = "0x13C5E38", Offset = "0x13C5E38", VA = "0x13C5E38")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F5A8", Offset = "0x93F5A8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002555")]
				[Address(RVA = "0x13C5E40", Offset = "0x13C5E40", VA = "0x13C5E40")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F5B8", Offset = "0x93F5B8")]
				private set
				{
				}
			}

			[Token(Token = "0x1700048C")]
			public Dictionary<string, int> name2displayedMaskIndex
			{
				[Token(Token = "0x6002556")]
				[Address(RVA = "0x13C5E48", Offset = "0x13C5E48", VA = "0x13C5E48")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F5C8", Offset = "0x93F5C8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002557")]
				[Address(RVA = "0x13C5E50", Offset = "0x13C5E50", VA = "0x13C5E50")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93F5D8", Offset = "0x93F5D8")]
				private set
				{
				}
			}

			[Token(Token = "0x6002558")]
			[Address(RVA = "0x13C4724", Offset = "0x13C4724", VA = "0x13C4724")]
			public EnumDisplayInfo(Type type)
			{
			}

			[Token(Token = "0x6002559")]
			[Address(RVA = "0x13C5E58", Offset = "0x13C5E58", VA = "0x13C5E58")]
			[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x93F5E8", Offset = "0x93F5E8")]
			public int RealToDisplayedMaskField(int realMask)
			{
				return default(int);
			}

			[Token(Token = "0x600255A")]
			[Address(RVA = "0x13C5FA8", Offset = "0x13C5FA8", VA = "0x13C5FA8")]
			[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x93F5F8", Offset = "0x93F5F8")]
			public int DisplayedToRealMaskField(int displayedMask, bool fillUp = true)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000BFE")]
		public const int UINT_MASK_FIELD_LENGTH = 32;

		[Token(Token = "0x4000BFF")]
		public const int ULONG_MASK_FIELD_LENGTH = 64;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Type, EnumDisplayInfo> s_enumInfoTable;

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0x13C460C", Offset = "0x13C460C", VA = "0x13C460C")]
		public static EnumDisplayInfo GetDisplayInfo(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0x13C55AC", Offset = "0x13C55AC", VA = "0x13C55AC")]
		public static int GetMinValue(Type enumType)
		{
			return default(int);
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0x13C562C", Offset = "0x13C562C", VA = "0x13C562C")]
		public static int GetMaxValue(Type enumType)
		{
			return default(int);
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0x13C56AC", Offset = "0x13C56AC", VA = "0x13C56AC")]
		public static bool GetFlag(uint maskField, int enumValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0x13C56D4", Offset = "0x13C56D4", VA = "0x13C56D4")]
		public static void SetFlag(ref uint maskField, int enumValue, bool value)
		{
		}

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0x13C5704", Offset = "0x13C5704", VA = "0x13C5704")]
		public static void SetFlag(ref uint maskField, bool value, int enumValue, params int[] enumValues)
		{
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0x13C5844", Offset = "0x13C5844", VA = "0x13C5844")]
		public static uint SetFlag(uint maskField, int enumValue, params int[] enumValues)
		{
			return default(uint);
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0x13C58EC", Offset = "0x13C58EC", VA = "0x13C58EC")]
		public static uint UnsetFlag(uint maskField, int enumValue, params int[] enumValues)
		{
			return default(uint);
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0x13C5994", Offset = "0x13C5994", VA = "0x13C5994")]
		public static bool GetFlag(ulong maskField, int enumValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0x13C59BC", Offset = "0x13C59BC", VA = "0x13C59BC")]
		public static void SetFlag(ref ulong maskField, int enumValue, bool value)
		{
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0x13C59EC", Offset = "0x13C59EC", VA = "0x13C59EC")]
		public static void SetFlag(ref ulong maskField, bool value, int enumValue, params int[] enumValues)
		{
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0x13C5B2C", Offset = "0x13C5B2C", VA = "0x13C5B2C")]
		public static ulong SetFlag(ulong maskField, int enumValue, params int[] enumValues)
		{
			return default(ulong);
		}

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0x13C5BD4", Offset = "0x13C5BD4", VA = "0x13C5BD4")]
		public static ulong UnsetFlag(ulong maskField, int enumValue, params int[] enumValues)
		{
			return default(ulong);
		}
	}
	[Serializable]
	[Token(Token = "0x2000180")]
	public struct RigidPose
	{
		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 pos;

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion rot;

		[Token(Token = "0x170001DC")]
		public static RigidPose identity
		{
			[Token(Token = "0x6000EB9")]
			[Address(RVA = "0x13C6290", Offset = "0x13C6290", VA = "0x13C6290")]
			get
			{
				return default(RigidPose);
			}
		}

		[Token(Token = "0x170001DD")]
		public Vector3 forward
		{
			[Token(Token = "0x6000EBC")]
			[Address(RVA = "0x9E3A54", Offset = "0x9E3A54", VA = "0x9E3A54")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001DE")]
		public Vector3 right
		{
			[Token(Token = "0x6000EBD")]
			[Address(RVA = "0x9E3A5C", Offset = "0x9E3A5C", VA = "0x9E3A5C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001DF")]
		public Vector3 up
		{
			[Token(Token = "0x6000EBE")]
			[Address(RVA = "0x9E3A64", Offset = "0x9E3A64", VA = "0x9E3A64")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0x9E3A34", Offset = "0x9E3A34", VA = "0x9E3A34")]
		public RigidPose(Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0x9E3A48", Offset = "0x9E3A48", VA = "0x9E3A48")]
		public RigidPose(Transform t, bool useLocal = false)
		{
		}

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0x9E3A6C", Offset = "0x9E3A6C", VA = "0x9E3A6C", Slot = "0")]
		public override bool Equals(object o)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0x9E3A74", Offset = "0x9E3A74", VA = "0x9E3A74", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0x13C677C", Offset = "0x13C677C", VA = "0x13C677C")]
		public static bool operator ==(RigidPose a, RigidPose b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0x13C67F8", Offset = "0x13C67F8", VA = "0x13C67F8")]
		public static bool operator !=(RigidPose a, RigidPose b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0x13C1024", Offset = "0x13C1024", VA = "0x13C1024")]
		public static RigidPose operator *(RigidPose a, RigidPose b)
		{
			return default(RigidPose);
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0x9E3AB0", Offset = "0x9E3AB0", VA = "0x9E3AB0")]
		public void Multiply(RigidPose a, RigidPose b)
		{
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0x9E3AF8", Offset = "0x9E3AF8", VA = "0x9E3AF8")]
		public void Inverse()
		{
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0x9E3B00", Offset = "0x9E3B00", VA = "0x9E3B00")]
		public RigidPose GetInverse()
		{
			return default(RigidPose);
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0x9E3B08", Offset = "0x9E3B08", VA = "0x9E3B08")]
		public Vector3 InverseTransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0x9E3B10", Offset = "0x9E3B10", VA = "0x9E3B10")]
		public Vector3 TransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0x13C3214", Offset = "0x13C3214", VA = "0x13C3214")]
		public static RigidPose Lerp(RigidPose a, RigidPose b, float t)
		{
			return default(RigidPose);
		}

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0x9E3B18", Offset = "0x9E3B18", VA = "0x9E3B18")]
		public void Lerp(RigidPose to, float t)
		{
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x13C6E78", Offset = "0x13C6E78", VA = "0x13C6E78")]
		public static RigidPose LerpUnclamped(RigidPose a, RigidPose b, float t)
		{
			return default(RigidPose);
		}

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0x9E3B4C", Offset = "0x9E3B4C", VA = "0x9E3B4C")]
		public void LerpUnclamped(RigidPose to, float t)
		{
		}

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0x13C1358", Offset = "0x13C1358", VA = "0x13C1358")]
		public static void SetPose(Transform target, RigidPose pose, [Optional] Transform origin)
		{
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0x13C7114", Offset = "0x13C7114", VA = "0x13C7114")]
		public static void SetRigidbodyVelocity(Rigidbody rigidbody, Vector3 from, Vector3 to, float duration)
		{
		}

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0x13C72B8", Offset = "0x13C72B8", VA = "0x13C72B8")]
		public static void SetRigidbodyAngularVelocity(Rigidbody rigidbody, Quaternion from, Quaternion to, float duration, bool overrideMaxAngularVelocity = true)
		{
		}

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0x13C7568", Offset = "0x13C7568", VA = "0x13C7568")]
		public static RigidPose FromToPose(RigidPose from, RigidPose to)
		{
			return default(RigidPose);
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0x13C76E0", Offset = "0x13C76E0", VA = "0x13C76E0")]
		public static implicit operator RigidPose(UnityEngine.Pose v)
		{
			return default(RigidPose);
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0x13C76FC", Offset = "0x13C76FC", VA = "0x13C76FC")]
		public static implicit operator UnityEngine.Pose(RigidPose v)
		{
			return default(UnityEngine.Pose);
		}

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0x9E3B80", Offset = "0x9E3B80", VA = "0x9E3B80", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0x9E3B88", Offset = "0x9E3B88", VA = "0x9E3B88")]
		public string ToString(string format)
		{
			return null;
		}
	}
	[Token(Token = "0x2000181")]
	[DisallowMultipleComponent]
	public abstract class SingletonBehaviour<T> : MonoBehaviour where T : SingletonBehaviour<T>
	{
		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T s_instance;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool s_isApplicationQuitting;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static object s_lock;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Func<GameObject> s_defaultInitGOGetter;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool m_initialized;

		[Token(Token = "0x170001E0")]
		public static bool Active
		{
			[Token(Token = "0x6000ED5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E1")]
		public bool IsInstance
		{
			[Token(Token = "0x6000ED6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E2")]
		protected bool IsApplicationQuitting
		{
			[Token(Token = "0x6000ED7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001E3")]
		public static T Instance
		{
			[Token(Token = "0x6000ED8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ED9")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6000EDA")]
		public static void SetDefaultInitGameObjectGetter(Func<GameObject> getter)
		{
		}

		[Token(Token = "0x6000EDB")]
		protected virtual void OnSingletonBehaviourInitialized()
		{
		}

		[Token(Token = "0x6000EDC")]
		protected virtual void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000EDD")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000EDE")]
		protected SingletonBehaviour()
		{
		}
	}
}
namespace HTC.UnityPlugin.PoseTracker
{
	[Token(Token = "0x2000182")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x925E24", Offset = "0x925E24")]
	public abstract class BasePoseModifier : MonoBehaviour, IPoseModifier
	{
		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_priority;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92C5E4", Offset = "0x92C5E4")]
		private BasePoseTracker <baseTracker>k__BackingField;

		[Token(Token = "0x170001E4")]
		public BasePoseTracker baseTracker
		{
			[Token(Token = "0x6000EE0")]
			[Address(RVA = "0x13C08F4", Offset = "0x13C08F4", VA = "0x13C08F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A628", Offset = "0x93A628")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000EE1")]
			[Address(RVA = "0x13C08FC", Offset = "0x13C08FC", VA = "0x13C08FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A638", Offset = "0x93A638")]
			protected set
			{
			}
		}

		[Token(Token = "0x170001E5")]
		public virtual int priority
		{
			[Token(Token = "0x6000EE2")]
			[Address(RVA = "0x13C0904", Offset = "0x13C0904", VA = "0x13C0904", Slot = "9")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000EE3")]
			[Address(RVA = "0x13C090C", Offset = "0x13C090C", VA = "0x13C090C", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0x13C0DB4", Offset = "0x13C0DB4", VA = "0x13C0DB4", Slot = "11")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0x13C0E20", Offset = "0x13C0E20", VA = "0x13C0E20", Slot = "12")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000EE6")]
		[Address(RVA = "0x13C0E24", Offset = "0x13C0E24", VA = "0x13C0E24", Slot = "13")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0x13C0E28", Offset = "0x13C0E28", VA = "0x13C0E28", Slot = "14")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000EE8")]
		[Address(RVA = "0x13C0E5C", Offset = "0x13C0E5C", VA = "0x13C0E5C", Slot = "15")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x93A648", Offset = "0x93A648")]
		public virtual void ModifyPose(ref Pose pose, Transform origin)
		{
		}

		[Token(Token = "0x6000EE9")]
		[Address(RVA = "0x13C0E60", Offset = "0x13C0E60", VA = "0x13C0E60", Slot = "16")]
		public virtual void ModifyPose(ref RigidPose pose, Transform origin)
		{
		}

		[Token(Token = "0x6000EEA")]
		[Address(RVA = "0x13C0E64", Offset = "0x13C0E64", VA = "0x13C0E64")]
		protected BasePoseModifier()
		{
		}

		[SpecialName]
		[Token(Token = "0x6000EEB")]
		[Address(RVA = "0x13C0E6C", Offset = "0x13C0E6C", VA = "0x13C0E6C", Slot = "4")]
		private bool HTC.UnityPlugin.PoseTracker.IPoseModifier.get_enabled()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000183")]
	public abstract class BasePoseTracker : MonoBehaviour, IPoseTracker
	{
		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 posOffset;

		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 rotOffset;

		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OrderedIndexedSet<IPoseModifier> modifierSet;

		[Token(Token = "0x6000EEC")]
		[Address(RVA = "0x13C09F0", Offset = "0x13C09F0", VA = "0x13C09F0", Slot = "4")]
		public void AddModifier(IPoseModifier obj)
		{
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0x13C097C", Offset = "0x13C097C", VA = "0x13C097C", Slot = "5")]
		public bool RemoveModifier(IPoseModifier obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0x13C0E74", Offset = "0x13C0E74", VA = "0x13C0E74")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x93A658", Offset = "0x93A658")]
		protected void TrackPose(Pose pose, [Optional] Transform origin)
		{
		}

		[Token(Token = "0x6000EEF")]
		[Address(RVA = "0x13C0EC8", Offset = "0x13C0EC8", VA = "0x13C0EC8")]
		protected void TrackPose(RigidPose pose, [Optional] Transform origin)
		{
		}

		[Token(Token = "0x6000EF0")]
		[Address(RVA = "0x13C15E0", Offset = "0x13C15E0", VA = "0x13C15E0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x93A668", Offset = "0x93A668")]
		protected void ModifyPose(ref Pose pose, Transform origin)
		{
		}

		[Token(Token = "0x6000EF1")]
		[Address(RVA = "0x13C118C", Offset = "0x13C118C", VA = "0x13C118C")]
		protected void ModifyPose(ref RigidPose pose, Transform origin)
		{
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0x13C1658", Offset = "0x13C1658", VA = "0x13C1658")]
		protected BasePoseTracker()
		{
		}
	}
	[Token(Token = "0x2000184")]
	public interface IPoseModifier
	{
		[Token(Token = "0x170001E6")]
		bool enabled
		{
			[Token(Token = "0x6000EF3")]
			get;
		}

		[Token(Token = "0x170001E7")]
		int priority
		{
			[Token(Token = "0x6000EF4")]
			get;
			[Token(Token = "0x6000EF5")]
			set;
		}

		[Token(Token = "0x6000EF6")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x93A678", Offset = "0x93A678")]
		void ModifyPose(ref Pose pose, Transform origin);

		[Token(Token = "0x6000EF7")]
		void ModifyPose(ref RigidPose pose, Transform origin);
	}
	[Token(Token = "0x2000185")]
	public interface IPoseTracker
	{
		[Token(Token = "0x6000EF8")]
		void AddModifier(IPoseModifier obj);

		[Token(Token = "0x6000EF9")]
		bool RemoveModifier(IPoseModifier obj);
	}
	[Serializable]
	[Token(Token = "0x2000186")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x925E88", Offset = "0x925E88")]
	public struct Pose
	{
		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 pos;

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion rot;

		[Token(Token = "0x170001E8")]
		public static Pose identity
		{
			[Token(Token = "0x6000EFA")]
			[Address(RVA = "0x13C1660", Offset = "0x13C1660", VA = "0x13C1660")]
			get
			{
				return default(Pose);
			}
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x9E38F0", Offset = "0x9E38F0", VA = "0x9E38F0")]
		public Pose(Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x9E3904", Offset = "0x9E3904", VA = "0x9E3904")]
		public Pose(Transform t, bool useLocal = false)
		{
		}

		[Token(Token = "0x6000EFD")]
		[Address(RVA = "0x9E3910", Offset = "0x9E3910", VA = "0x9E3910", Slot = "0")]
		public override bool Equals(object o)
		{
			return default(bool);
		}

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0x9E3918", Offset = "0x9E3918", VA = "0x9E3918", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x13C1A24", Offset = "0x13C1A24", VA = "0x13C1A24")]
		public static bool operator ==(Pose a, Pose b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0x13C1AA0", Offset = "0x13C1AA0", VA = "0x13C1AA0")]
		public static bool operator !=(Pose a, Pose b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x13C1B1C", Offset = "0x13C1B1C", VA = "0x13C1B1C")]
		public static Pose operator *(Pose a, Pose b)
		{
			return default(Pose);
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x9E3954", Offset = "0x9E3954", VA = "0x9E3954")]
		public void Multiply(Pose a, Pose b)
		{
		}

		[Token(Token = "0x6000F03")]
		[Address(RVA = "0x9E399C", Offset = "0x9E399C", VA = "0x9E399C")]
		public void Inverse()
		{
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0x9E39A4", Offset = "0x9E39A4", VA = "0x9E39A4")]
		public Pose GetInverse()
		{
			return default(Pose);
		}

		[Token(Token = "0x6000F05")]
		[Address(RVA = "0x9E39AC", Offset = "0x9E39AC", VA = "0x9E39AC")]
		public Vector3 InverseTransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x9E39B4", Offset = "0x9E39B4", VA = "0x9E39B4")]
		public Vector3 TransformPoint(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0x13C2148", Offset = "0x13C2148", VA = "0x13C2148")]
		public static Pose Lerp(Pose a, Pose b, float t)
		{
			return default(Pose);
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x9E39BC", Offset = "0x9E39BC", VA = "0x9E39BC")]
		public void Lerp(Pose to, float t)
		{
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0x13C23E4", Offset = "0x13C23E4", VA = "0x13C23E4")]
		public static Pose LerpUnclamped(Pose a, Pose b, float t)
		{
			return default(Pose);
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0x9E39F0", Offset = "0x9E39F0", VA = "0x9E39F0")]
		public void LerpUnclamped(Pose to, float t)
		{
		}

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0x13C2680", Offset = "0x13C2680", VA = "0x13C2680")]
		public static void SetPose(Transform target, Pose pose, [Optional] Transform origin)
		{
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x13C28B8", Offset = "0x13C28B8", VA = "0x13C28B8")]
		public static void SetRigidbodyVelocity(Rigidbody rigidbody, Vector3 from, Vector3 to, float duration)
		{
		}

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0x13C2A5C", Offset = "0x13C2A5C", VA = "0x13C2A5C")]
		public static void SetRigidbodyAngularVelocity(Rigidbody rigidbody, Quaternion from, Quaternion to, float duration, bool overrideMaxAngularVelocity = true)
		{
		}

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0x13C2D0C", Offset = "0x13C2D0C", VA = "0x13C2D0C")]
		public static Pose FromToPose(Pose from, Pose to)
		{
			return default(Pose);
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0x13C0EAC", Offset = "0x13C0EAC", VA = "0x13C0EAC")]
		public static implicit operator RigidPose(Pose v)
		{
			return default(RigidPose);
		}

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0x13C163C", Offset = "0x13C163C", VA = "0x13C163C")]
		public static implicit operator Pose(RigidPose v)
		{
			return default(Pose);
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x9E3A24", Offset = "0x9E3A24", VA = "0x9E3A24", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x9E3A2C", Offset = "0x9E3A2C", VA = "0x9E3A2C")]
		public string ToString(string format)
		{
			return null;
		}
	}
	[Token(Token = "0x2000187")]
	public class PoseEaser : BasePoseModifier
	{
		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AnimationCurve curve;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool firstPose;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RigidPose prevPose;

		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool easePositionX;

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool easePositionY;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		public bool easePositionZ;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
		public bool easeRotationX;

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool easeRotationY;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool easeRotationZ;

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0x13C2FA0", Offset = "0x13C2FA0", VA = "0x13C2FA0", Slot = "12")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0x13C2FB8", Offset = "0x13C2FB8", VA = "0x13C2FB8", Slot = "16")]
		public override void ModifyPose(ref RigidPose pose, Transform origin)
		{
		}

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0x13C2FAC", Offset = "0x13C2FAC", VA = "0x13C2FAC")]
		public void ResetFirstPose()
		{
		}

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0x13C3370", Offset = "0x13C3370", VA = "0x13C3370")]
		public PoseEaser()
		{
		}
	}
	[Token(Token = "0x2000188")]
	public class PoseFreezer : BasePoseModifier
	{
		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool freezePositionX;

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool freezePositionY;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool freezePositionZ;

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		public bool freezeRotationX;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool freezeRotationY;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool freezeRotationZ;

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0x13C35F0", Offset = "0x13C35F0", VA = "0x13C35F0", Slot = "16")]
		public override void ModifyPose(ref RigidPose pose, Transform origin)
		{
		}

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0x13C39BC", Offset = "0x13C39BC", VA = "0x13C39BC")]
		public PoseFreezer()
		{
		}
	}
	[Token(Token = "0x2000189")]
	public class PoseStablizer : BasePoseModifier
	{
		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float positionThreshold;

		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float rotationThreshold;

		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool firstPose;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private RigidPose prevPose;

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0x13C39D0", Offset = "0x13C39D0", VA = "0x13C39D0", Slot = "12")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0x13C39E8", Offset = "0x13C39E8", VA = "0x13C39E8", Slot = "16")]
		public override void ModifyPose(ref RigidPose pose, Transform origin)
		{
		}

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0x13C39DC", Offset = "0x13C39DC", VA = "0x13C39DC")]
		public void ResetFirstPose()
		{
		}

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0x13C3CBC", Offset = "0x13C3CBC", VA = "0x13C3CBC")]
		public PoseStablizer()
		{
		}
	}
	[Token(Token = "0x200018A")]
	public class PoseTracker : BasePoseTracker
	{
		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform target;

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0x13C3CDC", Offset = "0x13C3CDC", VA = "0x13C3CDC", Slot = "6")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0x13C3EB0", Offset = "0x13C3EB0", VA = "0x13C3EB0")]
		public PoseTracker()
		{
		}
	}
}
namespace HTC.UnityPlugin.Pointer3D
{
	[Token(Token = "0x200018B")]
	public static class ExecutePointer3DEvents
	{
		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly ExecuteEvents.EventFunction<IPointer3DPressEnterHandler> PressEnterHandler;

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly ExecuteEvents.EventFunction<IPointer3DPressExitHandler> PressExitHandler;

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0xBCA550", Offset = "0xBCA550", VA = "0xBCA550")]
		private static void Execute(IPointer3DPressEnterHandler handler, BaseEventData eventData)
		{
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0xBCA648", Offset = "0xBCA648", VA = "0xBCA648")]
		private static void Execute(IPointer3DPressExitHandler handler, BaseEventData eventData)
		{
		}
	}
	[Token(Token = "0x200018C")]
	public static class Pointer3DEventDataExtension
	{
		[Token(Token = "0x6000F23")]
		[Address(RVA = "0xBCB770", Offset = "0xBCB770", VA = "0xBCB770")]
		public static Pointer3DRaycaster GetRaycaster3D(this PointerEventData eventData)
		{
			return null;
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0xBCB7F4", Offset = "0xBCB7F4", VA = "0xBCB7F4")]
		public static bool TryGetRaycaster3D(this PointerEventData eventData, out Pointer3DRaycaster raycaster)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F25")]
		public static TRaycaster3D GetRaycaster3D<TRaycaster3D>(this PointerEventData eventData) where TRaycaster3D : Pointer3DRaycaster
		{
			return null;
		}

		[Token(Token = "0x6000F26")]
		public static bool TryGetRaycaster3D<TRaycaster3D>(this PointerEventData eventData, out TRaycaster3D raycaster) where TRaycaster3D : Pointer3DRaycaster
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200018D")]
	public class Pointer3DEventData : PointerEventData
	{
		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public readonly Pointer3DRaycaster raycaster;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public Vector3 position3D;

		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		public Quaternion rotation;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		public Vector3 position3DDelta;

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public Quaternion rotationDelta;

		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public Vector3 pressPosition3D;

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		public Quaternion pressRotation;

		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		public float pressDistance;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public GameObject pressEnter;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public bool pressPrecessed;

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0xBCB31C", Offset = "0xBCB31C", VA = "0xBCB31C")]
		public Pointer3DEventData(Pointer3DRaycaster ownerRaycaster, EventSystem eventSystem)
		{
		}

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0xBCB430", Offset = "0xBCB430", VA = "0xBCB430", Slot = "7")]
		public virtual bool GetPress()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0xBCB438", Offset = "0xBCB438", VA = "0xBCB438", Slot = "8")]
		public virtual bool GetPressDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0xBCB440", Offset = "0xBCB440", VA = "0xBCB440", Slot = "9")]
		public virtual bool GetPressUp()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0xBCB448", Offset = "0xBCB448", VA = "0xBCB448", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200018E")]
	public interface IPointer3DPressEnterHandler : IEventSystemHandler
	{
		[Token(Token = "0x6000F2C")]
		void OnPointer3DPressEnter(Pointer3DEventData eventData);
	}
	[Token(Token = "0x200018F")]
	public interface IPointer3DPressExitHandler : IEventSystemHandler
	{
		[Token(Token = "0x6000F2D")]
		void OnPointer3DPressExit(Pointer3DEventData eventData);
	}
	[Token(Token = "0x2000190")]
	public class Pointer3DInputModule : BaseInputModule
	{
		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Pointer3DInputModule instance;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool isApplicationQuitting;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly IndexedSet<Pointer3DRaycaster> raycasters;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IndexedSet<Pointer3DRaycaster> processingRaycasters;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static int validEventDataId;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_hasFocus;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int m_processedFrame;

		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool coexist;

		[NonSerialized]
		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92C5F4", Offset = "0x92C5F4")]
		public float dragThreshold;

		[NonSerialized]
		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x92C62C", Offset = "0x92C62C")]
		public float clickInterval;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly Comparison<RaycastResult> defaultRaycastComparer;

		[Token(Token = "0x170001E9")]
		public static Vector2 ScreenCenterPoint
		{
			[Token(Token = "0x6000F2E")]
			[Address(RVA = "0xBCA2AC", Offset = "0xBCA2AC", VA = "0xBCA2AC")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x170001EA")]
		public static bool Active
		{
			[Token(Token = "0x6000F2F")]
			[Address(RVA = "0xBCB890", Offset = "0xBCB890", VA = "0xBCB890")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001EB")]
		public static Pointer3DInputModule Instance
		{
			[Token(Token = "0x6000F30")]
			[Address(RVA = "0xBCB928", Offset = "0xBCB928", VA = "0xBCB928")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0xBCBCE4", Offset = "0xBCBCE4", VA = "0xBCBCE4", Slot = "26")]
		protected virtual void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0xBCBD50", Offset = "0xBCBD50", VA = "0xBCBD50", Slot = "21")]
		public override bool ShouldActivateModule()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0xBCBD8C", Offset = "0xBCBD8C", VA = "0xBCBD8C", Slot = "27")]
		protected virtual void OnApplicationFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0xBCBD98", Offset = "0xBCBD98", VA = "0xBCBD98", Slot = "28")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0xBCBE90", Offset = "0xBCBE90", VA = "0xBCBE90", Slot = "24")]
		public override void UpdateModule()
		{
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0xBCB994", Offset = "0xBCB994", VA = "0xBCB994")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0xBCB3A4", Offset = "0xBCB3A4", VA = "0xBCB3A4")]
		public static void AssignPointerId(Pointer3DEventData eventData)
		{
		}

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0xBCBFA4", Offset = "0xBCBFA4", VA = "0xBCBFA4", Slot = "17")]
		public override void Process()
		{
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0xBCC034", Offset = "0xBCC034", VA = "0xBCC034", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0xBCC524", Offset = "0xBCC524", VA = "0xBCC524")]
		private static int RaycastComparer(RaycastResult lhs, RaycastResult rhs)
		{
			return default(int);
		}

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0xBCCA0C", Offset = "0xBCCA0C", VA = "0xBCCA0C")]
		public static void AddRaycaster(Pointer3DRaycaster raycaster)
		{
		}

		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0xBCCADC", Offset = "0xBCCADC", VA = "0xBCCADC")]
		public static void RemoveRaycaster(Pointer3DRaycaster raycaster)
		{
		}

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0xBCCC24", Offset = "0xBCCC24", VA = "0xBCCC24")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x93A6C8", Offset = "0x93A6C8")]
		public static void RemoveRaycasters(Pointer3DRaycaster raycaster)
		{
		}

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0xBCC1B4", Offset = "0xBCC1B4", VA = "0xBCC1B4")]
		protected void CleanUpRaycaster(Pointer3DRaycaster raycaster)
		{
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0xBCD488", Offset = "0xBCD488", VA = "0xBCD488", Slot = "29")]
		protected virtual void ProcessRaycast()
		{
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0xBCE414", Offset = "0xBCE414", VA = "0xBCE414", Slot = "30")]
		protected virtual void ProcessMove(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0xBCE51C", Offset = "0xBCE51C", VA = "0xBCE51C", Slot = "31")]
		protected virtual void ProcessPress(Pointer3DEventData eventData)
		{
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0xBCE660", Offset = "0xBCE660", VA = "0xBCE660")]
		protected void ProcessPressDown(Pointer3DEventData eventData)
		{
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0xBCCC88", Offset = "0xBCCC88", VA = "0xBCCC88")]
		protected void ProcessPressUp(Pointer3DEventData eventData)
		{
		}

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0xBCED50", Offset = "0xBCED50", VA = "0xBCED50")]
		protected bool ShouldStartDrag(Pointer3DEventData eventData)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0xBCDF78", Offset = "0xBCDF78", VA = "0xBCDF78")]
		protected void ProcessDrag(Pointer3DEventData eventData)
		{
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0xBCD148", Offset = "0xBCD148", VA = "0xBCD148")]
		protected static void HandlePressExitAndEnter(Pointer3DEventData eventData, GameObject newEnterTarget)
		{
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0xBCEBE4", Offset = "0xBCEBE4", VA = "0xBCEBE4")]
		protected void DeselectIfSelectionChanged(GameObject currentOverGo, BaseEventData pointerEvent)
		{
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0xBCEFC4", Offset = "0xBCEFC4", VA = "0xBCEFC4")]
		public bool SendUpdateEventToSelectedObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0xBCF108", Offset = "0xBCF108", VA = "0xBCF108")]
		public bool SendSubmitEventToSelectedObject(bool submit, bool cencel)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0xBCF2B4", Offset = "0xBCF2B4", VA = "0xBCF2B4")]
		public bool SendMoveEventToSelectedObject(float x, float y, float moveDeadZone)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0xBCB620", Offset = "0xBCB620", VA = "0xBCB620")]
		public static string PrintGOPath(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0xBCF428", Offset = "0xBCF428", VA = "0xBCF428", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0xBCF7C8", Offset = "0xBCF7C8", VA = "0xBCF7C8")]
		public Pointer3DInputModule()
		{
		}
	}
	[Token(Token = "0x2000191")]
	public abstract class BaseFallbackCamRaycaster : BaseMultiMethodRaycaster
	{
		[NonSerialized]
		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool isDestroying;

		[NonSerialized]
		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Camera fallbackCam;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float nearDistance;

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float farDistance;

		[Token(Token = "0x170001EC")]
		public float NearDistance
		{
			[Token(Token = "0x6000F4F")]
			[Address(RVA = "0xBC88C0", Offset = "0xBC88C0", VA = "0xBC88C0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F50")]
			[Address(RVA = "0xBC88C8", Offset = "0xBC88C8", VA = "0xBC88C8")]
			set
			{
			}
		}

		[Token(Token = "0x170001ED")]
		public float FarDistance
		{
			[Token(Token = "0x6000F51")]
			[Address(RVA = "0xBC89D8", Offset = "0xBC89D8", VA = "0xBC89D8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F52")]
			[Address(RVA = "0xBC89E0", Offset = "0xBC89E0", VA = "0xBC89E0")]
			set
			{
			}
		}

		[Token(Token = "0x170001EE")]
		public override Camera eventCamera
		{
			[Token(Token = "0x6000F53")]
			[Address(RVA = "0xBC8B5C", Offset = "0xBC8B5C", VA = "0xBC8B5C", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0xBC8F6C", Offset = "0xBC8F6C", VA = "0xBC8F6C", Slot = "8")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0xBC902C", Offset = "0xBC902C", VA = "0xBC902C")]
		protected BaseFallbackCamRaycaster()
		{
		}
	}
	[Token(Token = "0x2000192")]
	[DisallowMultipleComponent]
	public abstract class BaseMultiMethodRaycaster : BaseRaycaster
	{
		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected readonly IndexedSet<IRaycastMethod> methods;

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0xBC90A8", Offset = "0xBC90A8", VA = "0xBC90A8")]
		public void AddRaycastMethod(IRaycastMethod obj)
		{
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0xBC9118", Offset = "0xBC9118", VA = "0xBC9118")]
		public void RemoveRaycastMethod(IRaycastMethod obj)
		{
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0xBC9188", Offset = "0xBC9188", VA = "0xBC9188")]
		protected void ForeachRaycastMethods(Ray ray, float distance, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0xBC94C4", Offset = "0xBC94C4", VA = "0xBC94C4", Slot = "22")]
		protected virtual Comparison<RaycastResult> GetRaycasterResultComparer()
		{
			return null;
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0xBC9038", Offset = "0xBC9038", VA = "0xBC9038")]
		protected BaseMultiMethodRaycaster()
		{
		}
	}
	[Token(Token = "0x2000193")]
	public enum RaycastMode
	{
		[Token(Token = "0x4000C41")]
		DefaultRaycast,
		[Token(Token = "0x4000C42")]
		Projection,
		[Token(Token = "0x4000C43")]
		Projectile
	}
	[Token(Token = "0x2000194")]
	public class Pointer3DRaycaster : BaseFallbackCamRaycaster
	{
		[Token(Token = "0x4000C44")]
		public const float MIN_SEGMENT_DISTANCE = 0.01f;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ReadOnlyCollection<Pointer3DEventData> buttonEventDataListReadOnly;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ReadOnlyCollection<RaycastResult> sortedRaycastResultsReadOnly;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ReadOnlyCollection<Vector3> breakPointsReadOnly;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected readonly List<Pointer3DEventData> buttonEventDataList;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected readonly List<RaycastResult> sortedRaycastResults;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected readonly List<Vector3> breakPoints;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float dragThreshold;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float clickInterval;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool showDebugRay;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private IndexedSet<IRaySegmentGenerator> generators;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		[SerializeField]
		private RaycastMode m_raycastMode;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[HideInInspector]
		[SerializeField]
		private float m_velocity;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		[SerializeField]
		private Vector3 m_gravity;

		[Token(Token = "0x170001EF")]
		public Pointer3DEventData HoverEventData
		{
			[Token(Token = "0x6000F5B")]
			[Address(RVA = "0x13BDAB8", Offset = "0x13BDAB8", VA = "0x13BDAB8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F0")]
		public ReadOnlyCollection<Pointer3DEventData> ButtonEventDataList
		{
			[Token(Token = "0x6000F5C")]
			[Address(RVA = "0x13BDB54", Offset = "0x13BDB54", VA = "0x13BDB54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F1")]
		public ReadOnlyCollection<RaycastResult> SortedRaycastResults
		{
			[Token(Token = "0x6000F5D")]
			[Address(RVA = "0x13BDBC4", Offset = "0x13BDBC4", VA = "0x13BDBC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F2")]
		public ReadOnlyCollection<Vector3> BreakPoints
		{
			[Token(Token = "0x6000F5E")]
			[Address(RVA = "0x13BDC34", Offset = "0x13BDC34", VA = "0x13BDC34")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F3")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x940FA8", Offset = "0x940FA8")]
		public RaycastMode raycastMode
		{
			[Token(Token = "0x6000F6C")]
			[Address(RVA = "0x13BF008", Offset = "0x13BF008", VA = "0x13BF008")]
			get
			{
				return default(RaycastMode);
			}
			[Token(Token = "0x6000F6D")]
			[Address(RVA = "0x13BF010", Offset = "0x13BF010", VA = "0x13BF010")]
			set
			{
			}
		}

		[Token(Token = "0x170001F4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x940FE0", Offset = "0x940FE0")]
		public float velocity
		{
			[Token(Token = "0x6000F6E")]
			[Address(RVA = "0x13BF018", Offset = "0x13BF018", VA = "0x13BF018")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F6F")]
			[Address(RVA = "0x13BF020", Offset = "0x13BF020", VA = "0x13BF020")]
			set
			{
			}
		}

		[Token(Token = "0x170001F5")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x941018", Offset = "0x941018")]
		public Vector3 gravity
		{
			[Token(Token = "0x6000F70")]
			[Address(RVA = "0x13BF0E0", Offset = "0x13BF0E0", VA = "0x13BF0E0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000F71")]
			[Address(RVA = "0x13BF0EC", Offset = "0x13BF0EC", VA = "0x13BF0EC")]
			set
			{
			}
		}

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0x13BDCA4", Offset = "0x13BDCA4", VA = "0x13BDCA4", Slot = "23")]
		public virtual Vector2 GetScrollDelta()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0x13BDD04", Offset = "0x13BDD04", VA = "0x13BDD04", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0x13BDDFC", Offset = "0x13BDDFC", VA = "0x13BDDFC", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0x13BDE64", Offset = "0x13BDE64", VA = "0x13BDE64", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0x13BDECC", Offset = "0x13BDECC", VA = "0x13BDECC", Slot = "24")]
		public virtual void CleanUpRaycast()
		{
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0x13BDF50", Offset = "0x13BDF50", VA = "0x13BDF50", Slot = "25")]
		public virtual void Raycast()
		{
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0x13BED7C", Offset = "0x13BED7C", VA = "0x13BED7C", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0x13BEC3C", Offset = "0x13BEC3C", VA = "0x13BEC3C")]
		public RaycastResult FirstRaycastResult()
		{
			return default(RaycastResult);
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0x13BED80", Offset = "0x13BED80", VA = "0x13BED80")]
		public void AddGenerator(IRaySegmentGenerator generator)
		{
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0x13BEDF0", Offset = "0x13BEDF0", VA = "0x13BEDF0")]
		public void RemoveGenerator(IRaySegmentGenerator generator)
		{
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0x13BEAD8", Offset = "0x13BEAD8", VA = "0x13BEAD8")]
		public IRaySegmentGenerator CurrentSegmentGenerator()
		{
			return null;
		}

		[Token(Token = "0x6000F6A")]
		public TGenerator ForceEnableSegmentGenerator<TGenerator>() where TGenerator : MonoBehaviour, IRaySegmentGenerator
		{
			return null;
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0x13BEE60", Offset = "0x13BEE60", VA = "0x13BEE60")]
		public void ForceDisableSegmentGenerators()
		{
		}

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0x13BF1C4", Offset = "0x13BF1C4", VA = "0x13BF1C4", Slot = "26")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x93A700", Offset = "0x93A700")]
		protected virtual void InitSegmentGenerator()
		{
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0x13BDD3C", Offset = "0x13BDD3C", VA = "0x13BDD3C")]
		private void SetLagacyRaycastMode(RaycastMode mode)
		{
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0x13BF1C8", Offset = "0x13BF1C8", VA = "0x13BF1C8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0x13BF9D8", Offset = "0x13BF9D8", VA = "0x13BF9D8")]
		public Pointer3DRaycaster()
		{
		}
	}
	[Token(Token = "0x2000195")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x925EE0", Offset = "0x925EE0")]
	public abstract class BaseRaycastMethod : MonoBehaviour, IRaycastMethod
	{
		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Pointer3DRaycaster m_raycaster;

		[Token(Token = "0x170001F6")]
		public Pointer3DRaycaster raycaster
		{
			[Token(Token = "0x6000F76")]
			[Address(RVA = "0xBC96AC", Offset = "0xBC96AC", VA = "0xBC96AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0xBC96B4", Offset = "0xBC96B4", VA = "0xBC96B4", Slot = "6")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0xBC9768", Offset = "0xBC9768", VA = "0xBC9768", Slot = "7")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0xBC976C", Offset = "0xBC976C", VA = "0xBC976C", Slot = "8")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0xBC9770", Offset = "0xBC9770", VA = "0xBC9770", Slot = "9")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000F7B")]
		public abstract void Raycast(Ray ray, float distance, List<RaycastResult> raycastResults);

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0xBC9808", Offset = "0xBC9808", VA = "0xBC9808")]
		protected BaseRaycastMethod()
		{
		}

		[SpecialName]
		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0xBC9810", Offset = "0xBC9810", VA = "0xBC9810", Slot = "4")]
		private bool HTC.UnityPlugin.Pointer3D.IRaycastMethod.get_enabled()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000196")]
	public interface IRaycastMethod
	{
		[Token(Token = "0x170001F7")]
		bool enabled
		{
			[Token(Token = "0x6000F7E")]
			get;
		}

		[Token(Token = "0x6000F7F")]
		void Raycast(Ray ray, float distance, List<RaycastResult> raycastResults);
	}
	[Token(Token = "0x2000197")]
	[DisallowMultipleComponent]
	public class CanvasRaycastMethod : BaseRaycastMethod
	{
		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly IndexedSet<ICanvasRaycastTarget> canvases;

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0xBC9818", Offset = "0xBC9818", VA = "0xBC9818")]
		public static bool AddTarget(ICanvasRaycastTarget obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0xBC98B8", Offset = "0xBC98B8", VA = "0xBC98B8")]
		public static bool RemoveTarget(ICanvasRaycastTarget obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0xBC9958", Offset = "0xBC9958", VA = "0xBC9958", Slot = "10")]
		public override void Raycast(Ray ray, float distance, List<RaycastResult> raycastResults)
		{
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0xBC9CAC", Offset = "0xBC9CAC", VA = "0xBC9CAC")]
		public static void Raycast(Canvas canvas, bool ignoreReversedGraphics, Ray ray, float distance, Pointer3DRaycaster raycaster, List<RaycastResult> raycastResults)
		{
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0xBCA300", Offset = "0xBCA300", VA = "0xBCA300")]
		public CanvasRaycastMethod()
		{
		}
	}
	[Token(Token = "0x2000198")]
	public interface ICanvasRaycastTarget
	{
		[Token(Token = "0x170001F8")]
		Canvas canvas
		{
			[Token(Token = "0x6000F86")]
			get;
		}

		[Token(Token = "0x170001F9")]
		bool enabled
		{
			[Token(Token = "0x6000F87")]
			get;
		}

		[Token(Token = "0x170001FA")]
		bool ignoreReversedGraphics
		{
			[Token(Token = "0x6000F88")]
			get;
		}
	}
	[Token(Token = "0x2000199")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x925F54", Offset = "0x925F54")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x925F54", Offset = "0x925F54")]
	[DisallowMultipleComponent]
	public class CanvasRaycastTarget : UIBehaviour, ICanvasRaycastTarget
	{
		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Canvas m_canvas;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_IgnoreReversedGraphics;

		[Token(Token = "0x170001FB")]
		public virtual Canvas canvas
		{
			[Token(Token = "0x6000F89")]
			[Address(RVA = "0xBCA37C", Offset = "0xBCA37C", VA = "0xBCA37C", Slot = "20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FC")]
		public bool ignoreReversedGraphics
		{
			[Token(Token = "0x6000F8A")]
			[Address(RVA = "0xBCA3DC", Offset = "0xBCA3DC", VA = "0xBCA3DC", Slot = "19")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F8B")]
			[Address(RVA = "0xBCA3E4", Offset = "0xBCA3E4", VA = "0xBCA3E4")]
			set
			{
			}
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0xBCA3F0", Offset = "0xBCA3F0", VA = "0xBCA3F0", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0xBCA460", Offset = "0xBCA460", VA = "0xBCA460", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0xBCA4D0", Offset = "0xBCA4D0", VA = "0xBCA4D0")]
		public CanvasRaycastTarget()
		{
		}

		[SpecialName]
		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0xBCA4E0", Offset = "0xBCA4E0", VA = "0xBCA4E0", Slot = "18")]
		private bool HTC.UnityPlugin.Pointer3D.ICanvasRaycastTarget.get_enabled()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200019A")]
	public class GraphicRaycastMethod : BaseRaycastMethod
	{
		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Canvas m_Canvas;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_IgnoreReversedGraphics;

		[Token(Token = "0x170001FD")]
		public Canvas canvas
		{
			[Token(Token = "0x6000F90")]
			[Address(RVA = "0xBCA804", Offset = "0xBCA804", VA = "0xBCA804")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F91")]
			[Address(RVA = "0xBCA80C", Offset = "0xBCA80C", VA = "0xBCA80C")]
			set
			{
			}
		}

		[Token(Token = "0x170001FE")]
		public bool ignoreReversedGraphics
		{
			[Token(Token = "0x6000F92")]
			[Address(RVA = "0xBCA814", Offset = "0xBCA814", VA = "0xBCA814")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F93")]
			[Address(RVA = "0xBCA81C", Offset = "0xBCA81C", VA = "0xBCA81C")]
			set
			{
			}
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0xBCA828", Offset = "0xBCA828", VA = "0xBCA828", Slot = "10")]
		public override void Raycast(Ray ray, float distance, List<RaycastResult> raycastResults)
		{
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0xBCA900", Offset = "0xBCA900", VA = "0xBCA900")]
		public GraphicRaycastMethod()
		{
		}
	}
	[Token(Token = "0x200019B")]
	public class Physics2DRaycastMethod : PhysicsRaycastMethod
	{
		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly RaycastHit2D[] hits;

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0xBCA910", Offset = "0xBCA910", VA = "0xBCA910", Slot = "10")]
		public override void Raycast(Ray ray, float distance, List<RaycastResult> raycastResults)
		{
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0xBCAE8C", Offset = "0xBCAE8C", VA = "0xBCAE8C")]
		public Physics2DRaycastMethod()
		{
		}
	}
	[Token(Token = "0x200019C")]
	public class PhysicsRaycastMethod : BaseRaycastMethod
	{
		[Token(Token = "0x2000513")]
		public enum MaskTypeEnum
		{
			[Token(Token = "0x4001EFA")]
			Inclusive,
			[Token(Token = "0x4001EFB")]
			Exclusive
		}

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly RaycastHit[] hits;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MaskTypeEnum maskType;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public LayerMask mask;

		[Token(Token = "0x170001FF")]
		public int RaycastMask
		{
			[Token(Token = "0x6000F99")]
			[Address(RVA = "0xBCAE5C", Offset = "0xBCAE5C", VA = "0xBCAE5C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0xBCAF60", Offset = "0xBCAF60", VA = "0xBCAF60", Slot = "10")]
		public override void Raycast(Ray ray, float distance, List<RaycastResult> raycastResults)
		{
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0xBCAEF4", Offset = "0xBCAEF4", VA = "0xBCAEF4")]
		public PhysicsRaycastMethod()
		{
		}
	}
	[Token(Token = "0x200019D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x925FF0", Offset = "0x925FF0")]
	public abstract class BaseRaySegmentGenerator : MonoBehaviour, IRaySegmentGenerator
	{
		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Pointer3DRaycaster m_raycaster;

		[Token(Token = "0x17000200")]
		public Pointer3DRaycaster raycaster
		{
			[Token(Token = "0x6000F9D")]
			[Address(RVA = "0xBC952C", Offset = "0xBC952C", VA = "0xBC952C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0xBC9534", Offset = "0xBC9534", VA = "0xBC9534", Slot = "8")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0xBC95EC", Offset = "0xBC95EC", VA = "0xBC95EC", Slot = "9")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0xBC95F0", Offset = "0xBC95F0", VA = "0xBC95F0", Slot = "10")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0xBC95F4", Offset = "0xBC95F4", VA = "0xBC95F4", Slot = "11")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000FA2")]
		public abstract void ResetSegments();

		[Token(Token = "0x6000FA3")]
		public abstract bool NextSegment(out Vector3 direction, out float distance);

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0xBC9690", Offset = "0xBC9690", VA = "0xBC9690")]
		protected BaseRaySegmentGenerator()
		{
		}

		[SpecialName]
		[Token(Token = "0x6000FA5")]
		[Address(RVA = "0xBC9698", Offset = "0xBC9698", VA = "0xBC9698", Slot = "4")]
		private bool HTC.UnityPlugin.Pointer3D.IRaySegmentGenerator.get_enabled()
		{
			return default(bool);
		}

		[SpecialName]
		[Token(Token = "0x6000FA6")]
		[Address(RVA = "0xBC96A0", Offset = "0xBC96A0", VA = "0xBC96A0", Slot = "5")]
		private void HTC.UnityPlugin.Pointer3D.IRaySegmentGenerator.set_enabled(bool value)
		{
		}
	}
	[Token(Token = "0x200019E")]
	public interface IRaySegmentGenerator
	{
		[Token(Token = "0x17000201")]
		bool enabled
		{
			[Token(Token = "0x6000FA7")]
			get;
			[Token(Token = "0x6000FA8")]
			set;
		}

		[Token(Token = "0x6000FA9")]
		void ResetSegments();

		[Token(Token = "0x6000FAA")]
		bool NextSegment(out Vector3 direction, out float distance);
	}
	[Token(Token = "0x200019F")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x926054", Offset = "0x926054")]
	public class DefaultGenerator : BaseRaySegmentGenerator
	{
		[Token(Token = "0x6000FAB")]
		[Address(RVA = "0xBCA4E8", Offset = "0xBCA4E8", VA = "0xBCA4E8", Slot = "12")]
		public override void ResetSegments()
		{
		}

		[Token(Token = "0x6000FAC")]
		[Address(RVA = "0xBCA4EC", Offset = "0xBCA4EC", VA = "0xBCA4EC", Slot = "13")]
		public override bool NextSegment(out Vector3 direction, out float distance)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0xBCA548", Offset = "0xBCA548", VA = "0xBCA548")]
		public DefaultGenerator()
		{
		}
	}
	[Token(Token = "0x20001A0")]
	public class ProjectileGenerator : BaseRaySegmentGenerator
	{
		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float velocity;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 gravity;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_velocity;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 m_gravity;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float maxHalfJourney;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float accY;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 systemY;

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 systemX;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 v0;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float v0X;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float v0Y;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool isHeighPeek;

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float halfJourney;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float contactPointTime;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float nextContactPointTime;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float rayDistance;

		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float nextRayDistance;

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0x13BFB10", Offset = "0x13BFB10", VA = "0x13BFB10")]
		private void CalculateAcc()
		{
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0x13BFB40", Offset = "0x13BFB40", VA = "0x13BFB40")]
		private void CalculatePeekDistanceMax()
		{
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0x13BFBC8", Offset = "0x13BFBC8", VA = "0x13BFBC8", Slot = "8")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0x13BFC04", Offset = "0x13BFC04", VA = "0x13BFC04", Slot = "12")]
		public override void ResetSegments()
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0x13BFE08", Offset = "0x13BFE08", VA = "0x13BFE08", Slot = "13")]
		public override bool NextSegment(out Vector3 direction, out float distance)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0x13BFF68", Offset = "0x13BFF68", VA = "0x13BFF68")]
		private void GetTangentLineIntersectDistance(float tA, float tB, out float dA, out float dB, out Vector3 directionA)
		{
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0x13C01C4", Offset = "0x13C01C4", VA = "0x13C01C4")]
		public ProjectileGenerator()
		{
		}
	}
	[Token(Token = "0x20001A1")]
	public class ProjectionGenerator : BaseRaySegmentGenerator
	{
		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float velocity;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 gravity;

		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool isFirstSegment;

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x13C0244", Offset = "0x13C0244", VA = "0x13C0244", Slot = "12")]
		public override void ResetSegments()
		{
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x13C0250", Offset = "0x13C0250", VA = "0x13C0250", Slot = "13")]
		public override bool NextSegment(out Vector3 direction, out float distance)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x13C0308", Offset = "0x13C0308", VA = "0x13C0308")]
		public ProjectionGenerator()
		{
		}
	}
	[Token(Token = "0x20001A2")]
	public class StandaloneEventData : Pointer3DEventData
	{
		[Token(Token = "0x2000514")]
		public enum StandaloneButton
		{
			[Token(Token = "0x4001EFD")]
			Fire1,
			[Token(Token = "0x4001EFE")]
			Fire2,
			[Token(Token = "0x4001EFF")]
			Fire3,
			[Token(Token = "0x4001F00")]
			MouseLeft,
			[Token(Token = "0x4001F01")]
			MouseMiddle,
			[Token(Token = "0x4001F02")]
			MouseRight
		}

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		public readonly StandaloneButton standaloneButton;

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x13C0390", Offset = "0x13C0390", VA = "0x13C0390")]
		public StandaloneEventData(Pointer3DRaycaster ownerRaycaster, EventSystem eventSystem, StandaloneButton sbtn, InputButton ibtn)
		{
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0x13C03D4", Offset = "0x13C03D4", VA = "0x13C03D4", Slot = "7")]
		public override bool GetPress()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0x13C0490", Offset = "0x13C0490", VA = "0x13C0490", Slot = "8")]
		public override bool GetPressDown()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FBB")]
		[Address(RVA = "0x13C054C", Offset = "0x13C054C", VA = "0x13C054C", Slot = "9")]
		public override bool GetPressUp()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001A3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x926064", Offset = "0x926064")]
	public class StandaloneRaycaster : Pointer3DRaycaster
	{
		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0x13C0608", Offset = "0x13C0608", VA = "0x13C0608", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0x13C08E8", Offset = "0x13C08E8", VA = "0x13C08E8", Slot = "23")]
		public override Vector2 GetScrollDelta()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0x13C08F0", Offset = "0x13C08F0", VA = "0x13C08F0")]
		public StandaloneRaycaster()
		{
		}
	}
}
namespace HTC.UnityPlugin.ColliderEvent
{
	[Token(Token = "0x20001A4")]
	public interface IColliderEventCaster
	{
		[Token(Token = "0x17000202")]
		GameObject gameObject
		{
			[Token(Token = "0x6000FBF")]
			get;
		}

		[Token(Token = "0x17000203")]
		Transform transform
		{
			[Token(Token = "0x6000FC0")]
			get;
		}

		[Token(Token = "0x17000204")]
		MonoBehaviour monoBehaviour
		{
			[Token(Token = "0x6000FC1")]
			get;
		}

		[Token(Token = "0x17000205")]
		IIndexedSetReadOnly<Collider> enteredColliders
		{
			[Token(Token = "0x6000FC2")]
			get;
		}

		[Token(Token = "0x17000206")]
		Rigidbody rigid
		{
			[Token(Token = "0x6000FC3")]
			get;
		}
	}
	[Token(Token = "0x20001A5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9260A0", Offset = "0x9260A0")]
	public class ColliderEventCaster : MonoBehaviour, IColliderEventCaster
	{
		[Token(Token = "0x2000515")]
		protected class ButtonHandlers
		{
			[Token(Token = "0x4001F03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<GameObject> pressEnterHandlers;

			[Token(Token = "0x4001F04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<GameObject> pressExitHandlers;

			[Token(Token = "0x4001F05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<GameObject> pressDownHandlers;

			[Token(Token = "0x4001F06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public List<GameObject> pressUpHandlers;

			[Token(Token = "0x4001F07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public List<GameObject> clickHandlers;

			[Token(Token = "0x4001F08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public List<GameObject> dragStartHandlers;

			[Token(Token = "0x4001F09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public List<GameObject> dragFixedUpdateHandlers;

			[Token(Token = "0x4001F0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public List<GameObject> dragUpdateHandlers;

			[Token(Token = "0x4001F0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public List<GameObject> dragEndHandlers;

			[Token(Token = "0x4001F0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public List<GameObject> dropHandlers;

			[Token(Token = "0x600255B")]
			[Address(RVA = "0xBC7460", Offset = "0xBC7460", VA = "0xBC7460")]
			public ButtonHandlers()
			{
			}
		}

		[Token(Token = "0x2000516")]
		protected class AxisHandlers
		{
			[Token(Token = "0x4001F0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<GameObject> axisChangedHandlers;

			[Token(Token = "0x600255C")]
			[Address(RVA = "0xBC75B0", Offset = "0xBC75B0", VA = "0xBC75B0")]
			public AxisHandlers()
			{
			}
		}

		[Token(Token = "0x2000517")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9276D8", Offset = "0x9276D8")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x4001F0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ColliderButtonEventData eventData;

			[Token(Token = "0x600255D")]
			[Address(RVA = "0xBC7440", Offset = "0xBC7440", VA = "0xBC7440")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x600255E")]
			[Address(RVA = "0xBC7824", Offset = "0xBC7824", VA = "0xBC7824")]
			internal bool <ProcessPressUp>b__0(GameObject h)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static HashSet<int> s_gos;

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isUpdating;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool isDisabled;

		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IndexedSet<Collider> stayingColliders;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IndexedSet<GameObject> hoveredObjects;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody m_rigid;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ColliderHoverEventData hoverEventData;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected readonly List<ColliderButtonEventData> buttonEventDataList;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected readonly List<ColliderAxisEventData> axisEventDataList;

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<GameObject> hoverEnterHandlers;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<GameObject> hoverExitHandlers;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<ButtonHandlers> buttonEventHandlerList;

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<AxisHandlers> axisEventHanderList;

		[Token(Token = "0x17000207")]
		public MonoBehaviour monoBehaviour
		{
			[Token(Token = "0x6000FC4")]
			[Address(RVA = "0xBC5454", Offset = "0xBC5454", VA = "0xBC5454", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000208")]
		public Rigidbody rigid
		{
			[Token(Token = "0x6000FC5")]
			[Address(RVA = "0xBC5458", Offset = "0xBC5458", VA = "0xBC5458", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000209")]
		public IIndexedSetReadOnly<Collider> enteredColliders
		{
			[Token(Token = "0x6000FC6")]
			[Address(RVA = "0xBC54B8", Offset = "0xBC54B8", VA = "0xBC54B8", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020A")]
		public ColliderHoverEventData HoverEventData
		{
			[Token(Token = "0x6000FC7")]
			[Address(RVA = "0xBC5518", Offset = "0xBC5518", VA = "0xBC5518")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FC8")]
			[Address(RVA = "0xBC55BC", Offset = "0xBC55BC", VA = "0xBC55BC")]
			protected set
			{
			}
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0xBC55C4", Offset = "0xBC55C4", VA = "0xBC55C4")]
		private bool CannotHandlDragAnymore(GameObject handler)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0xBC5640", Offset = "0xBC5640", VA = "0xBC5640", Slot = "9")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0xBC5648", Offset = "0xBC5648", VA = "0xBC5648", Slot = "10")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0xBC6388", Offset = "0xBC6388", VA = "0xBC6388", Slot = "11")]
		protected virtual void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0xBC63F8", Offset = "0xBC63F8", VA = "0xBC63F8", Slot = "12")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0xBC6C68", Offset = "0xBC6C68", VA = "0xBC6C68")]
		protected void ProcessPressDown(ColliderButtonEventData eventData, ButtonHandlers handlers)
		{
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0xBC6EC0", Offset = "0xBC6EC0", VA = "0xBC6EC0")]
		protected void ProcessPressing(ColliderButtonEventData eventData, ButtonHandlers handlers)
		{
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0xBC6F4C", Offset = "0xBC6F4C", VA = "0xBC6F4C")]
		protected void ProcessPressUp(ColliderButtonEventData eventData, ButtonHandlers handlers)
		{
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0xBC7448", Offset = "0xBC7448", VA = "0xBC7448", Slot = "13")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0xBC60C4", Offset = "0xBC60C4", VA = "0xBC60C4")]
		private void CleanUp()
		{
		}

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0xBC5870", Offset = "0xBC5870", VA = "0xBC5870")]
		private ButtonHandlers GetButtonHandlers(int i)
		{
			return null;
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0xBC7330", Offset = "0xBC7330", VA = "0xBC7330")]
		private AxisHandlers GetAxisHandlers(int i)
		{
			return null;
		}

		[Token(Token = "0x6000FD5")]
		private void GetEventHandlersFromHoveredColliders<T>(IList<GameObject> appendHandler, [Optional] IList<GameObject> appendHandler2) where T : IEventSystemHandler
		{
		}

		[Token(Token = "0x6000FD6")]
		private void GetMatchedEventHandlersFromHoveredColliders<T>(Predicate<GameObject> match, IList<GameObject> appendHandler, [Optional] IList<GameObject> appendHandler2) where T : IEventSystemHandler
		{
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0xBC5980", Offset = "0xBC5980", VA = "0xBC5980")]
		private void ExecuteAllEvents()
		{
		}

		[Token(Token = "0x6000FD8")]
		private void ExcuteHandlersEvents<T>(List<GameObject> handlers, BaseEventData eventData, ExecuteEvents.EventFunction<T> functor) where T : IEventSystemHandler
		{
		}

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0xBC7620", Offset = "0xBC7620", VA = "0xBC7620")]
		public ColliderEventCaster()
		{
		}

		[SpecialName]
		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0xBC7814", Offset = "0xBC7814", VA = "0xBC7814", Slot = "4")]
		private GameObject HTC.UnityPlugin.ColliderEvent.IColliderEventCaster.get_gameObject()
		{
			return null;
		}

		[SpecialName]
		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0xBC781C", Offset = "0xBC781C", VA = "0xBC781C", Slot = "5")]
		private Transform HTC.UnityPlugin.ColliderEvent.IColliderEventCaster.get_transform()
		{
			return null;
		}
	}
	[Token(Token = "0x20001A6")]
	public static class ColliderEventDataExtension
	{
		[Token(Token = "0x6000FDD")]
		public static TEventCaster GetEventCaster<TEventCaster>(this ColliderEventData eventData) where TEventCaster : MonoBehaviour, IColliderEventCaster
		{
			return null;
		}

		[Token(Token = "0x6000FDE")]
		public static bool TryGetEventCaster<TEventCaster>(this ColliderEventData eventData, out TEventCaster eventCaster) where TEventCaster : MonoBehaviour, IColliderEventCaster
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001A7")]
	public class ColliderEventData : BaseEventData
	{
		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly IColliderEventCaster eventCaster;

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0xBC523C", Offset = "0xBC523C", VA = "0xBC523C")]
		public ColliderEventData(IColliderEventCaster eventCaster)
		{
		}
	}
	[Token(Token = "0x20001A8")]
	public class ColliderHoverEventData : ColliderEventData
	{
		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0xBC558C", Offset = "0xBC558C", VA = "0xBC558C")]
		public ColliderHoverEventData(IColliderEventCaster eventCaster)
		{
		}
	}
	[Token(Token = "0x20001A9")]
	public abstract class ColliderButtonEventData : ColliderEventData
	{
		[Token(Token = "0x2000518")]
		public enum InputButton
		{
			[Token(Token = "0x4001F10")]
			None = -1,
			[Token(Token = "0x4001F11")]
			Trigger,
			[Token(Token = "0x4001F12")]
			PadOrStick,
			[Token(Token = "0x4001F13")]
			GripOrHandTrigger,
			[Token(Token = "0x4001F14")]
			FunctionKey
		}

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IndexedSet<GameObject> pressEnteredObjects;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IndexedSet<GameObject> pressedRawObjects;

		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IndexedSet<GameObject> lastPressedRawObjects;

		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IndexedSet<GameObject> pressedHandlers;

		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public IndexedSet<GameObject> lastPressedHandlers;

		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public IndexedSet<GameObject> draggingHandlers;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public IndexedSet<GameObject> clickingHandlers;

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92C75C", Offset = "0x92C75C")]
		private InputButton <button>k__BackingField;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92C76C", Offset = "0x92C76C")]
		private Vector3 <pressPosition>k__BackingField;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92C77C", Offset = "0x92C77C")]
		private Quaternion <pressRotation>k__BackingField;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92C78C", Offset = "0x92C78C")]
		private bool <isPressed>k__BackingField;

		[Token(Token = "0x1700020B")]
		public InputButton button
		{
			[Token(Token = "0x6000FE1")]
			[Address(RVA = "0xBC526C", Offset = "0xBC526C", VA = "0xBC526C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A758", Offset = "0x93A758")]
			get
			{
				return default(InputButton);
			}
			[Token(Token = "0x6000FE2")]
			[Address(RVA = "0xBC5274", Offset = "0xBC5274", VA = "0xBC5274")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A768", Offset = "0x93A768")]
			private set
			{
			}
		}

		[Token(Token = "0x1700020C")]
		public Vector3 pressPosition
		{
			[Token(Token = "0x6000FE3")]
			[Address(RVA = "0xBC527C", Offset = "0xBC527C", VA = "0xBC527C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A778", Offset = "0x93A778")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000FE4")]
			[Address(RVA = "0xBC5288", Offset = "0xBC5288", VA = "0xBC5288")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A788", Offset = "0x93A788")]
			set
			{
			}
		}

		[Token(Token = "0x1700020D")]
		public Quaternion pressRotation
		{
			[Token(Token = "0x6000FE5")]
			[Address(RVA = "0xBC5294", Offset = "0xBC5294", VA = "0xBC5294")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A798", Offset = "0x93A798")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6000FE6")]
			[Address(RVA = "0xBC52A0", Offset = "0xBC52A0", VA = "0xBC52A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A7A8", Offset = "0x93A7A8")]
			set
			{
			}
		}

		[Token(Token = "0x1700020E")]
		public bool isDragging
		{
			[Token(Token = "0x6000FE7")]
			[Address(RVA = "0xBC52AC", Offset = "0xBC52AC", VA = "0xBC52AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700020F")]
		public bool isPressed
		{
			[Token(Token = "0x6000FE8")]
			[Address(RVA = "0xBC5318", Offset = "0xBC5318", VA = "0xBC5318")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A7B8", Offset = "0x93A7B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000FE9")]
			[Address(RVA = "0xBC5320", Offset = "0xBC5320", VA = "0xBC5320")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A7C8", Offset = "0x93A7C8")]
			set
			{
			}
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0xBC532C", Offset = "0xBC532C", VA = "0xBC532C")]
		public ColliderButtonEventData(IColliderEventCaster eventCaster, InputButton button = InputButton.Trigger)
		{
		}

		[Token(Token = "0x6000FEB")]
		public abstract bool GetPress();

		[Token(Token = "0x6000FEC")]
		public abstract bool GetPressDown();

		[Token(Token = "0x6000FED")]
		public abstract bool GetPressUp();
	}
	[Token(Token = "0x20001AA")]
	public abstract class ColliderAxisEventData : ColliderEventData
	{
		[Token(Token = "0x2000519")]
		public enum InputAxis
		{
			[Token(Token = "0x4001F16")]
			Scroll2D,
			[Token(Token = "0x4001F17")]
			Trigger1D
		}

		[Token(Token = "0x200051A")]
		public enum Dim
		{
			[Token(Token = "0x4001F19")]
			D1,
			[Token(Token = "0x4001F1A")]
			D2,
			[Token(Token = "0x4001F1B")]
			D3,
			[Token(Token = "0x4001F1C")]
			D4
		}

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_x;

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_y;

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_z;

		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_w;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92C79C", Offset = "0x92C79C")]
		private InputAxis <axis>k__BackingField;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92C7AC", Offset = "0x92C7AC")]
		private Dim <dimention>k__BackingField;

		[Token(Token = "0x17000210")]
		public InputAxis axis
		{
			[Token(Token = "0x6000FEE")]
			[Address(RVA = "0xBC4F88", Offset = "0xBC4F88", VA = "0xBC4F88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A7D8", Offset = "0x93A7D8")]
			get
			{
				return default(InputAxis);
			}
			[Token(Token = "0x6000FEF")]
			[Address(RVA = "0xBC4F90", Offset = "0xBC4F90", VA = "0xBC4F90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A7E8", Offset = "0x93A7E8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000211")]
		public Dim dimention
		{
			[Token(Token = "0x6000FF0")]
			[Address(RVA = "0xBC4F98", Offset = "0xBC4F98", VA = "0xBC4F98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A7F8", Offset = "0x93A7F8")]
			get
			{
				return default(Dim);
			}
			[Token(Token = "0x6000FF1")]
			[Address(RVA = "0xBC4FA0", Offset = "0xBC4FA0", VA = "0xBC4FA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A808", Offset = "0x93A808")]
			private set
			{
			}
		}

		[Token(Token = "0x17000212")]
		public float x
		{
			[Token(Token = "0x6000FF2")]
			[Address(RVA = "0xBC4FA8", Offset = "0xBC4FA8", VA = "0xBC4FA8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FF3")]
			[Address(RVA = "0xBC4FC0", Offset = "0xBC4FC0", VA = "0xBC4FC0")]
			set
			{
			}
		}

		[Token(Token = "0x17000213")]
		public float y
		{
			[Token(Token = "0x6000FF4")]
			[Address(RVA = "0xBC4FD0", Offset = "0xBC4FD0", VA = "0xBC4FD0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FF5")]
			[Address(RVA = "0xBC4FEC", Offset = "0xBC4FEC", VA = "0xBC4FEC")]
			set
			{
			}
		}

		[Token(Token = "0x17000214")]
		public float z
		{
			[Token(Token = "0x6000FF6")]
			[Address(RVA = "0xBC5000", Offset = "0xBC5000", VA = "0xBC5000")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FF7")]
			[Address(RVA = "0xBC5018", Offset = "0xBC5018", VA = "0xBC5018")]
			set
			{
			}
		}

		[Token(Token = "0x17000215")]
		public float w
		{
			[Token(Token = "0x6000FF8")]
			[Address(RVA = "0xBC502C", Offset = "0xBC502C", VA = "0xBC502C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FF9")]
			[Address(RVA = "0xBC5044", Offset = "0xBC5044", VA = "0xBC5044")]
			set
			{
			}
		}

		[Token(Token = "0x17000216")]
		public Vector2 v2
		{
			[Token(Token = "0x6000FFA")]
			[Address(RVA = "0xBC5058", Offset = "0xBC5058", VA = "0xBC5058")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000FFB")]
			[Address(RVA = "0xBC50A4", Offset = "0xBC50A4", VA = "0xBC50A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000217")]
		public Vector3 v3
		{
			[Token(Token = "0x6000FFC")]
			[Address(RVA = "0xBC50BC", Offset = "0xBC50BC", VA = "0xBC50BC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000FFD")]
			[Address(RVA = "0xBC5128", Offset = "0xBC5128", VA = "0xBC5128")]
			set
			{
			}
		}

		[Token(Token = "0x17000218")]
		public Vector4 v4
		{
			[Token(Token = "0x6000FFE")]
			[Address(RVA = "0xBC514C", Offset = "0xBC514C", VA = "0xBC514C")]
			get
			{
				return default(Vector4);
			}
			[Token(Token = "0x6000FFF")]
			[Address(RVA = "0xBC51CC", Offset = "0xBC51CC", VA = "0xBC51CC")]
			set
			{
			}
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0xBC51F8", Offset = "0xBC51F8", VA = "0xBC51F8")]
		public ColliderAxisEventData(IColliderEventCaster eventCaster, Dim dimention, InputAxis axis = InputAxis.Scroll2D)
		{
		}

		[Token(Token = "0x6001001")]
		public abstract Vector4 GetDelta();
	}
	[Token(Token = "0x20001AB")]
	public interface IColliderEventHoverEnterHandler : IEventSystemHandler
	{
		[Token(Token = "0x6001002")]
		void OnColliderEventHoverEnter(ColliderHoverEventData eventData);
	}
	[Token(Token = "0x20001AC")]
	public interface IColliderEventHoverExitHandler : IEventSystemHandler
	{
		[Token(Token = "0x6001003")]
		void OnColliderEventHoverExit(ColliderHoverEventData eventData);
	}
	[Token(Token = "0x20001AD")]
	public interface IColliderEventPressDownHandler : IEventSystemHandler
	{
		[Token(Token = "0x6001004")]
		void OnColliderEventPressDown(ColliderButtonEventData eventData);
	}
	[Token(Token = "0x20001AE")]
	public interface IColliderEventPressUpHandler : IEventSystemHandler
	{
		[Token(Token = "0x6001005")]
		void OnColliderEventPressUp(ColliderButtonEventData eventData);
	}
	[Token(Token = "0x20001AF")]
	public interface IColliderEventPressEnterHandler : IEventSystemHandler
	{
		[Token(Token = "0x6001006")]
		void OnColliderEventPressEnter(ColliderButtonEventData eventData);
	}
	[Token(Token = "0x20001B0")]
	public interface IColliderEventPressExitHandler : IEventSystemHandler
	{
		[Token(Token = "0x6001007")]
		void OnColliderEventPressExit(ColliderButtonEventData eventData);
	}
	[Token(Token = "0x20001B1")]
	public interface IColliderEventClickHandler : IEventSystemHandler
	{
		[Token(Token = "0x6001008")]
		void OnColliderEventClick(ColliderButtonEventData eventData);
	}
	[Token(Token = "0x20001B2")]
	public interface IColliderEventDragStartHandler : IEventSystemHandler
	{
		[Token(Token = "0x6001009")]
		void OnColliderEventDragStart(ColliderButtonEventData eventData);
	}
	[Token(Token = "0x20001B3")]
	public interface IColliderEventDragFixedUpdateHandler : IEventSystemHandler
	{
		[Token(Token = "0x600100A")]
		void OnColliderEventDragFixedUpdate(ColliderButtonEventData eventData);
	}
	[Token(Token = "0x20001B4")]
	public interface IColliderEventDragUpdateHandler : IEventSystemHandler
	{
		[Token(Token = "0x600100B")]
		void OnColliderEventDragUpdate(ColliderButtonEventData eventData);
	}
	[Token(Token = "0x20001B5")]
	public interface IColliderEventDragEndHandler : IEventSystemHandler
	{
		[Token(Token = "0x600100C")]
		void OnColliderEventDragEnd(ColliderButtonEventData eventData);
	}
	[Token(Token = "0x20001B6")]
	public interface IColliderEventDropHandler : IEventSystemHandler
	{
		[Token(Token = "0x600100D")]
		void OnColliderEventDrop(ColliderButtonEventData eventData);
	}
	[Token(Token = "0x20001B7")]
	public interface IColliderEventAxisChangedHandler : IEventSystemHandler
	{
		[Token(Token = "0x600100E")]
		void OnColliderEventAxisChanged(ColliderAxisEventData eventData);
	}
	[Token(Token = "0x20001B8")]
	public static class ExecuteColliderEvents
	{
		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly ExecuteEvents.EventFunction<IColliderEventHoverEnterHandler> HoverEnterHandler;

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly ExecuteEvents.EventFunction<IColliderEventHoverExitHandler> HoverExitHandler;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly ExecuteEvents.EventFunction<IColliderEventPressDownHandler> PressDownHandler;

		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly ExecuteEvents.EventFunction<IColliderEventPressUpHandler> PressUpHandler;

		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly ExecuteEvents.EventFunction<IColliderEventPressEnterHandler> PressEnterHandler;

		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly ExecuteEvents.EventFunction<IColliderEventPressExitHandler> PressExitHandler;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly ExecuteEvents.EventFunction<IColliderEventClickHandler> ClickHandler;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static readonly ExecuteEvents.EventFunction<IColliderEventDragStartHandler> DragStartHandler;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static readonly ExecuteEvents.EventFunction<IColliderEventDragFixedUpdateHandler> DragFixedUpdateHandler;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static readonly ExecuteEvents.EventFunction<IColliderEventDragUpdateHandler> DragUpdateHandler;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static readonly ExecuteEvents.EventFunction<IColliderEventDragEndHandler> DragEndHandler;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static readonly ExecuteEvents.EventFunction<IColliderEventDropHandler> DropHandler;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static readonly ExecuteEvents.EventFunction<IColliderEventAxisChangedHandler> AxisChangedHandler;

		[Token(Token = "0x600100F")]
		[Address(RVA = "0xBC78A4", Offset = "0xBC78A4", VA = "0xBC78A4")]
		private static void Execute(IColliderEventHoverEnterHandler handler, BaseEventData eventData)
		{
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0xBC799C", Offset = "0xBC799C", VA = "0xBC799C")]
		private static void Execute(IColliderEventHoverExitHandler handler, BaseEventData eventData)
		{
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0xBC7A94", Offset = "0xBC7A94", VA = "0xBC7A94")]
		private static void Execute(IColliderEventPressDownHandler handler, BaseEventData eventData)
		{
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0xBC7B8C", Offset = "0xBC7B8C", VA = "0xBC7B8C")]
		private static void Execute(IColliderEventPressUpHandler handler, BaseEventData eventData)
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0xBC7C84", Offset = "0xBC7C84", VA = "0xBC7C84")]
		private static void Execute(IColliderEventPressEnterHandler handler, BaseEventData eventData)
		{
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0xBC7D7C", Offset = "0xBC7D7C", VA = "0xBC7D7C")]
		private static void Execute(IColliderEventPressExitHandler handler, BaseEventData eventData)
		{
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0xBC7E74", Offset = "0xBC7E74", VA = "0xBC7E74")]
		private static void Execute(IColliderEventClickHandler handler, BaseEventData eventData)
		{
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0xBC7F6C", Offset = "0xBC7F6C", VA = "0xBC7F6C")]
		private static void Execute(IColliderEventDragStartHandler handler, BaseEventData eventData)
		{
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0xBC8064", Offset = "0xBC8064", VA = "0xBC8064")]
		private static void Execute(IColliderEventDragFixedUpdateHandler handler, BaseEventData eventData)
		{
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0xBC815C", Offset = "0xBC815C", VA = "0xBC815C")]
		private static void Execute(IColliderEventDragUpdateHandler handler, BaseEventData eventData)
		{
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0xBC8254", Offset = "0xBC8254", VA = "0xBC8254")]
		private static void Execute(IColliderEventDragEndHandler handler, BaseEventData eventData)
		{
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0xBC834C", Offset = "0xBC834C", VA = "0xBC834C")]
		private static void Execute(IColliderEventDropHandler handler, BaseEventData eventData)
		{
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0xBC8444", Offset = "0xBC8444", VA = "0xBC8444")]
		private static void Execute(IColliderEventAxisChangedHandler handler, BaseEventData eventData)
		{
		}
	}
}
namespace Assets.Cortopia.Scripts.UI
{
	[Token(Token = "0x20001B9")]
	public class SubMenu : Menu
	{
		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private Menu m_parentMenu;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private float m_openDelay;

		[Token(Token = "0x600101D")]
		[Address(RVA = "0xB356E4", Offset = "0xB356E4", VA = "0xB356E4", Slot = "11")]
		public override void Open()
		{
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0xB3590C", Offset = "0xB3590C", VA = "0xB3590C")]
		public void Back()
		{
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0xB35B24", Offset = "0xB35B24", VA = "0xB35B24")]
		public SubMenu()
		{
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0xB35B34", Offset = "0xB35B34", VA = "0xB35B34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A818", Offset = "0x93A818")]
		private bool <Open>b__2_0()
		{
			return default(bool);
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0xB35B70", Offset = "0xB35B70", VA = "0xB35B70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A828", Offset = "0x93A828")]
		private IPromise <Open>b__2_1()
		{
			return null;
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0xB35BE8", Offset = "0xB35BE8", VA = "0xB35BE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A838", Offset = "0x93A838")]
		private bool <Back>b__3_0()
		{
			return default(bool);
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0xB35C08", Offset = "0xB35C08", VA = "0xB35C08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A848", Offset = "0x93A848")]
		private IPromise <Back>b__3_1()
		{
			return null;
		}
	}
}
namespace UnityEngine.Events
{
	[Serializable]
	[Token(Token = "0x20001BA")]
	public class PlayableCharacterEvent : UnityEvent<PlayableCharacter>
	{
		[Token(Token = "0x6001024")]
		[Address(RVA = "0xEDE9D8", Offset = "0xEDE9D8", VA = "0xEDE9D8")]
		public PlayableCharacterEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001BB")]
	public class CharacterEvent : UnityEvent<Character>
	{
		[Token(Token = "0x6001025")]
		[Address(RVA = "0xEDE938", Offset = "0xEDE938", VA = "0xEDE938")]
		public CharacterEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001BC")]
	public class PressurePlateEvent : UnityEvent<PressurePlate>
	{
		[Token(Token = "0x6001026")]
		[Address(RVA = "0xEDEA28", Offset = "0xEDEA28", VA = "0xEDEA28")]
		public PressurePlateEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001BD")]
	public class ScriptableVariableEvent : UnityEvent<ScriptableVariable>
	{
		[Token(Token = "0x6001027")]
		[Address(RVA = "0xEDEA78", Offset = "0xEDEA78", VA = "0xEDEA78")]
		public ScriptableVariableEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001BE")]
	public class GrabEvent : UnityEvent<float>
	{
		[Token(Token = "0x6001028")]
		[Address(RVA = "0xEDE988", Offset = "0xEDE988", VA = "0xEDE988")]
		public GrabEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001BF")]
	public class ButtonEvent : UnityEvent<CustomButton>
	{
		[Token(Token = "0x6001029")]
		[Address(RVA = "0xEDE8E8", Offset = "0xEDE8E8", VA = "0xEDE8E8")]
		public ButtonEvent()
		{
		}
	}
}
namespace Cortopia.BE.Runtime.Actions.Execution
{
	[Token(Token = "0x20001C0")]
	public class TransitionUsingBoolVariable : BE_Action
	{
		[Token(Token = "0x200051B")]
		private struct Constants
		{
			[Token(Token = "0x4001F1D")]
			public const int MaxConnections = 2;

			[Token(Token = "0x4001F1E")]
			public const string False = "False";

			[Token(Token = "0x4001F1F")]
			public const string True = "True";
		}

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BoolVariable Bool;

		[Token(Token = "0x600102A")]
		[Address(RVA = "0xB39708", Offset = "0xB39708", VA = "0xB39708", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0xB397E4", Offset = "0xB397E4", VA = "0xB397E4", Slot = "5")]
		public override void Process()
		{
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0xB39828", Offset = "0xB39828", VA = "0xB39828")]
		public TransitionUsingBoolVariable()
		{
		}
	}
	[Token(Token = "0x20001C1")]
	public class TransitionUsingIntVariable : BE_Action
	{
		[Serializable]
		[Token(Token = "0x200051C")]
		public struct TransitionCondition
		{
			[Token(Token = "0x4001F20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ComparisonType Comparison;

			[Token(Token = "0x4001F21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int CompareValue;
		}

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IntVariable Int;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TransitionCondition[] Conditions;

		[Token(Token = "0x4000CA3")]
		private const int InvalidTransitionIndex = -1;

		[Token(Token = "0x4000CA4")]
		private const int DefaultTransitionIndex = 0;

		[Token(Token = "0x600102D")]
		[Address(RVA = "0xB39830", Offset = "0xB39830", VA = "0xB39830", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0xB39918", Offset = "0xB39918", VA = "0xB39918", Slot = "5")]
		public override void Process()
		{
		}

		[Token(Token = "0x600102F")]
		[Address(RVA = "0xB399F4", Offset = "0xB399F4", VA = "0xB399F4")]
		private bool IsConditionMet(ComparisonType comparisonType, int intValue, int compareObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0xB39A04", Offset = "0xB39A04", VA = "0xB39A04")]
		public TransitionUsingIntVariable()
		{
		}
	}
}
namespace Cortopia.Scripts
{
	[Token(Token = "0x20001C2")]
	public class SubtitlesAnchorSetter : MonoBehaviour
	{
		[Token(Token = "0x6001031")]
		[Address(RVA = "0xB05F98", Offset = "0xB05F98", VA = "0xB05F98")]
		public void SetSubtitlesAnchor()
		{
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0xB0602C", Offset = "0xB0602C", VA = "0xB0602C")]
		public SubtitlesAnchorSetter()
		{
		}
	}
	[Token(Token = "0x20001C3")]
	public class ClockEntranceHandler : SaveObject
	{
		[Token(Token = "0x200051D")]
		private enum ClockEntrancePuzzleState
		{
			[Token(Token = "0x4001F23")]
			NotStarted,
			[Token(Token = "0x4001F24")]
			Started,
			[Token(Token = "0x4001F25")]
			Completed
		}

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92C7DC", Offset = "0x92C7DC")]
		private static CardSuit <TargetSuit>k__BackingField;

		[Token(Token = "0x4000CA6")]
		private const int ShortHandRotationJumps = 3;

		[Token(Token = "0x4000CA7")]
		private const int ResetMinuteRotationHours = -12;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly int m_parameterIsDoorOpen;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private readonly int m_parameterSetDoorOpen;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ScriptableEvent m_puzzleStartedEvent;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ScriptableEvent m_puzzleCompleteEvent;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private InteractableObject m_rabbitDialogue;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92C81C", Offset = "0x92C81C")]
		[SerializeField]
		private TutorialScroll m_instructionsScroll;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float m_openDelay;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92C878", Offset = "0x92C878")]
		[SerializeField]
		private Animator m_doorAnimator;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92C8C4", Offset = "0x92C8C4")]
		[SerializeField]
		private ClockHandle[] m_handles;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private EntranceClock[] m_clocks;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92C920", Offset = "0x92C920")]
		[SerializeField]
		private AudioSource m_loopingAudioSource;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private AudioSource m_puzzleAudioSource;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private AudioSource m_doorOpenAudioSource;

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private IInteractable[] m_clockInteractions;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int m_currentValueIndex;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private ClockEntrancePuzzleState m_currentState;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private SavableInt m_puzzleState;

		[Token(Token = "0x17000219")]
		public static CardSuit TargetSuit
		{
			[Token(Token = "0x6001033")]
			[Address(RVA = "0xB61500", Offset = "0xB61500", VA = "0xB61500")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A858", Offset = "0x93A858")]
			get
			{
				return default(CardSuit);
			}
			[Token(Token = "0x6001034")]
			[Address(RVA = "0xB61568", Offset = "0xB61568", VA = "0xB61568")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A868", Offset = "0x93A868")]
			private set
			{
			}
		}

		[Token(Token = "0x6001035")]
		[Address(RVA = "0xB615D4", Offset = "0xB615D4", VA = "0xB615D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0xB616D8", Offset = "0xB616D8", VA = "0xB616D8", Slot = "9")]
		public override void Serialize(IWriteSave save)
		{
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0xB617E4", Offset = "0xB617E4", VA = "0xB617E4", Slot = "8")]
		public override void Deserialize(IReadSave save)
		{
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0xB61A50", Offset = "0xB61A50", VA = "0xB61A50")]
		public void StartPuzzle()
		{
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0xB61D98", Offset = "0xB61D98", VA = "0xB61D98")]
		public void TrySetInteractablesActive(bool isActive)
		{
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0xB61ED0", Offset = "0xB61ED0", VA = "0xB61ED0")]
		private void LockInteractions()
		{
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0xB61F18", Offset = "0xB61F18", VA = "0xB61F18")]
		private void UnlockInteractions()
		{
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0xB61F80", Offset = "0xB61F80", VA = "0xB61F80")]
		private void ClockHandleMoveComplete(bool correctInteraction)
		{
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0xB61DB0", Offset = "0xB61DB0", VA = "0xB61DB0")]
		private void SetInteractablesActive(bool isActive)
		{
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0xB61D24", Offset = "0xB61D24", VA = "0xB61D24")]
		private void ResetPuzzle()
		{
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0xB61FFC", Offset = "0xB61FFC", VA = "0xB61FFC")]
		private void SetTargetValues()
		{
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0xB62098", Offset = "0xB62098", VA = "0xB62098")]
		private void RotateHourHandleToPosition()
		{
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0xB61F9C", Offset = "0xB61F9C", VA = "0xB61F9C")]
		private void MoveToNextPuzzleIndex()
		{
		}

		[Token(Token = "0x6001042")]
		[Address(RVA = "0xB62390", Offset = "0xB62390", VA = "0xB62390")]
		private void CompletePuzzle()
		{
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0xB615D8", Offset = "0xB615D8", VA = "0xB615D8")]
		private void RotateHandles()
		{
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0xB625F4", Offset = "0xB625F4", VA = "0xB625F4")]
		public ClockEntranceHandler()
		{
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0xB6271C", Offset = "0xB6271C", VA = "0xB6271C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A878", Offset = "0x93A878")]
		private void <StartPuzzle>b__27_0()
		{
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0xB6274C", Offset = "0xB6274C", VA = "0xB6274C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A888", Offset = "0x93A888")]
		private void <RotateHourHandleToPosition>b__35_0()
		{
		}
	}
	[Token(Token = "0x20001C4")]
	public class ClockHandle : MonoBehaviour
	{
		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ClockHandleType m_handleType;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Vector3 m_rotationAxis;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_rotationDegreesPerSecond;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Tweener m_rotationTween;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Quaternion m_previousRotation;

		[Token(Token = "0x1700021A")]
		public ClockHandleType HandleType
		{
			[Token(Token = "0x6001048")]
			[Address(RVA = "0xB62788", Offset = "0xB62788", VA = "0xB62788")]
			get
			{
				return default(ClockHandleType);
			}
		}

		[Token(Token = "0x6001049")]
		[Address(RVA = "0xB62790", Offset = "0xB62790", VA = "0xB62790")]
		public void SetRotation(int hour)
		{
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0xB62320", Offset = "0xB62320", VA = "0xB62320")]
		public void RotateTo(int hour, TweenCallback onComplete)
		{
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0xB62920", Offset = "0xB62920", VA = "0xB62920")]
		public void RotateTo(int hour)
		{
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0xB625BC", Offset = "0xB625BC", VA = "0xB625BC")]
		public void Rotate()
		{
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0xB6223C", Offset = "0xB6223C", VA = "0xB6223C")]
		public void RotateAdd(int hour)
		{
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0xB62584", Offset = "0xB62584", VA = "0xB62584")]
		public void RotateBackwards()
		{
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0xB6298C", Offset = "0xB6298C", VA = "0xB6298C")]
		public void Rotate(float angle)
		{
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0xB62814", Offset = "0xB62814", VA = "0xB62814")]
		private Quaternion GetTargetRotation(int hour)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0xB62A20", Offset = "0xB62A20", VA = "0xB62A20")]
		private float GetHandleAngle(int hour)
		{
			return default(float);
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0xB62A10", Offset = "0xB62A10", VA = "0xB62A10")]
		private float GetHandleAnglePast360(int hour)
		{
			return default(float);
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0xB62A38", Offset = "0xB62A38", VA = "0xB62A38")]
		public ClockHandle()
		{
		}
	}
	[Token(Token = "0x20001C5")]
	public static class PauseExtensions
	{
		[Token(Token = "0x6001054")]
		[Address(RVA = "0xADB6A0", Offset = "0xADB6A0", VA = "0xADB6A0")]
		public static bool IsPausedOrPlaying(this AudioSource audioSource)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001C6")]
	public class ObjectMover : ObjectTransformable
	{
		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool m_useLocalSpace;

		[Token(Token = "0x6001055")]
		[Address(RVA = "0xAF1120", Offset = "0xAF1120", VA = "0xAF1120", Slot = "4")]
		public override void SaveMinValue()
		{
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0xAF1124", Offset = "0xAF1124", VA = "0xAF1124", Slot = "5")]
		public override void SaveMaxValue()
		{
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0xAF1128", Offset = "0xAF1128", VA = "0xAF1128", Slot = "6")]
		public override void SetToValue(MinMaxType valueType)
		{
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0xAF1174", Offset = "0xAF1174", VA = "0xAF1174", Slot = "7")]
		public override void LerpToValue(float t)
		{
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0xAF12F0", Offset = "0xAF12F0", VA = "0xAF12F0", Slot = "8")]
		public override void TweenToValue(MinMaxType valueType)
		{
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0xAF1438", Offset = "0xAF1438", VA = "0xAF1438")]
		public ObjectMover()
		{
		}
	}
}
namespace Cortopia.Scripts.Utils
{
	[Token(Token = "0x20001C7")]
	public static class ColorExtensions
	{
		[Token(Token = "0x600105B")]
		[Address(RVA = "0xBB4DB4", Offset = "0xBB4DB4", VA = "0xBB4DB4")]
		public static Color WithR(this Color color, float value)
		{
			return default(Color);
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0xBB4DBC", Offset = "0xBB4DBC", VA = "0xBB4DBC")]
		public static Color WithG(this Color color, float value)
		{
			return default(Color);
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0xBB4DC4", Offset = "0xBB4DC4", VA = "0xBB4DC4")]
		public static Color WithB(this Color color, float value)
		{
			return default(Color);
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0xBB3B60", Offset = "0xBB3B60", VA = "0xBB3B60")]
		public static Color WithA(this Color color, float value)
		{
			return default(Color);
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0xBB4DCC", Offset = "0xBB4DCC", VA = "0xBB4DCC")]
		public static Color WithRGB(this Color color, Color other)
		{
			return default(Color);
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0xBB4DDC", Offset = "0xBB4DDC", VA = "0xBB4DDC")]
		public static Color WithRGB(this Color color, float r, float g, float b)
		{
			return default(Color);
		}
	}
	[Token(Token = "0x20001C8")]
	public class Colors
	{
		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int TintColorPropertyID;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly int ColorPropertyID;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Color HighlightTriggerGizmoColor;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly Color PointerTriggerGizmoColor;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly Color EventTriggerGizmoColor;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static readonly Color InteractableTriggerGizmoColor;

		[Token(Token = "0x6001061")]
		[Address(RVA = "0xBB4DEC", Offset = "0xBB4DEC", VA = "0xBB4DEC")]
		public Colors()
		{
		}
	}
	[Token(Token = "0x20001C9")]
	public class Constants
	{
		[Token(Token = "0x4000CC5")]
		public const float PlayerReorientationTime = 0.5f;

		[Token(Token = "0x4000CC6")]
		public const int AxisCount = 2;

		[Token(Token = "0x4000CC7")]
		public const int ButtonCount = 5;

		[Token(Token = "0x4000CC8")]
		public const int TriggerCount = 4;

		[Token(Token = "0x4000CC9")]
		public const int TouchCount = 6;

		[Token(Token = "0x4000CCA")]
		public const float PointTimeUI = 3f;

		[Token(Token = "0x4000CCB")]
		public const float CharacterSplitHoldTime = 1f;

		[Token(Token = "0x4000CCC")]
		public const string CharacterTimelineTrack = "CharacterTrack";

		[Token(Token = "0x4000CCD")]
		public const string DoorTimelineTrack = "DoorTrack";

		[Token(Token = "0x4000CCE")]
		public const string DoorSoundSource = "DoorSoundSourceTrack";

		[Token(Token = "0x4000CCF")]
		public const string MotionTrack = "MotionTrack";

		[Token(Token = "0x4000CD0")]
		public const string NavAgentTrack = "NavAgentTrack";

		[Token(Token = "0x4000CD1")]
		public const int CardChoiceCount = 3;

		[Token(Token = "0x4000CD2")]
		public const int CardChoiceUndecided = -1;

		[Token(Token = "0x4000CD3")]
		public const float DominoLightUpTime = 1f;

		[Token(Token = "0x4000CD4")]
		public const float DominoMoveTime = 0.5f;

		[Token(Token = "0x4000CD5")]
		public const float DominoCooldownDelay = 1.2f;

		[Token(Token = "0x4000CD6")]
		public const float DominoPuzzleCooldown = 2.7f;

		[Token(Token = "0x4000CD7")]
		public const float DominoBellEventDelay = 0.3f;

		[Token(Token = "0x4000CD8")]
		public const float DegreesFullCircle = 360f;

		[Token(Token = "0x4000CD9")]
		public const float DegreesHalfCircle = 180f;

		[Token(Token = "0x4000CDA")]
		public const float DegreesQuarterCircle = 90f;

		[Token(Token = "0x4000CDB")]
		public const int HoursOnClock = 12;

		[Token(Token = "0x6001063")]
		[Address(RVA = "0xBB72C0", Offset = "0xBB72C0", VA = "0xBB72C0")]
		public Constants()
		{
		}
	}
	[Token(Token = "0x20001CA")]
	public class Tags
	{
		[Token(Token = "0x4000CDC")]
		public const string Interactable = "Interactable";

		[Token(Token = "0x4000CDD")]
		public const string Environment = "Environment";

		[Token(Token = "0x4000CDE")]
		public const string Character = "Character";

		[Token(Token = "0x4000CDF")]
		public const string NPC = "NPC";

		[Token(Token = "0x4000CE0")]
		public const string Firefly = "Firefly";

		[Token(Token = "0x4000CE1")]
		public const string Pointer = "Player";

		[Token(Token = "0x4000CE2")]
		public const string DynamicProp = "DynamicProp";

		[Token(Token = "0x4000CE3")]
		public const string Ingredient = "Ingredient";

		[Token(Token = "0x4000CE4")]
		public const string Untagged = "Untagged";

		[Token(Token = "0x4000CE5")]
		public const string EditorOnly = "EditorOnly";

		[Token(Token = "0x4000CE6")]
		public const string ExcludeMesh = "ExcludeMesh";

		[Token(Token = "0x6001064")]
		[Address(RVA = "0xBBF7E4", Offset = "0xBBF7E4", VA = "0xBBF7E4")]
		public Tags()
		{
		}
	}
	[Token(Token = "0x20001CB")]
	public class Layers
	{
		[Token(Token = "0x4000CE7")]
		public const string Interactable = "Interactable";

		[Token(Token = "0x4000CE8")]
		public const string Environment = "Environment";

		[Token(Token = "0x4000CE9")]
		public const string Character = "Character";

		[Token(Token = "0x4000CEA")]
		public const string Blocker = "Blocker";

		[Token(Token = "0x4000CEB")]
		public const string Pointer = "Pointer";

		[Token(Token = "0x4000CEC")]
		public const string DynamicProp = "DynamicProp";

		[Token(Token = "0x4000CED")]
		public const string UI = "UI";

		[Token(Token = "0x4000CEE")]
		public const string Grabbable = "Grabbable";

		[Token(Token = "0x6001065")]
		[Address(RVA = "0xBB82DC", Offset = "0xBB82DC", VA = "0xBB82DC")]
		public Layers()
		{
		}
	}
	[Token(Token = "0x20001CC")]
	public class CustomWaitForSeconds : CustomYieldInstruction
	{
		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float m_waitTime;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float m_currentWaitTime;

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_lastUpdate;

		[Token(Token = "0x1700021B")]
		public override bool keepWaiting
		{
			[Token(Token = "0x6001066")]
			[Address(RVA = "0xBB7614", Offset = "0xBB7614", VA = "0xBB7614", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0xBB76DC", Offset = "0xBB76DC", VA = "0xBB76DC")]
		public CustomWaitForSeconds(float waitTime)
		{
		}
	}
	[Token(Token = "0x20001CD")]
	public class CustomWaitForEndOfFrame : CustomYieldInstruction
	{
		[Token(Token = "0x1700021C")]
		public override bool keepWaiting
		{
			[Token(Token = "0x6001068")]
			[Address(RVA = "0xBB75AC", Offset = "0xBB75AC", VA = "0xBB75AC", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001069")]
		[Address(RVA = "0xBB760C", Offset = "0xBB760C", VA = "0xBB760C")]
		public CustomWaitForEndOfFrame()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001CE")]
	public struct ElevatorDestination
	{
		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 LocalPosition;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NavMeshObstacle Obstacle;
	}
	[Token(Token = "0x20001CF")]
	public class EventOnAwake : RoomBehaviour
	{
		[Token(Token = "0x200051E")]
		private enum StartupFlowType
		{
			[Token(Token = "0x4001F27")]
			Awake,
			[Token(Token = "0x4001F28")]
			Start,
			[Token(Token = "0x4001F29")]
			RoomInitialize,
			[Token(Token = "0x4001F2A")]
			RoomActivation,
			[Token(Token = "0x4001F2B")]
			CharacterSpawn
		}

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private StartupFlowType m_startupType;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92C9DC", Offset = "0x92C9DC")]
		[SerializeField]
		private UnityEvent m_onAwake;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private EventToken m_allCharactersSpawnedEventToken;

		[Token(Token = "0x600106A")]
		[Address(RVA = "0xBB7718", Offset = "0xBB7718", VA = "0xBB7718")]
		private void Awake()
		{
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0xBB77F8", Offset = "0xBB77F8", VA = "0xBB77F8")]
		private void Start()
		{
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0xBB7838", Offset = "0xBB7838", VA = "0xBB7838", Slot = "4")]
		public override void SetActive(bool active)
		{
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0xBB7898", Offset = "0xBB7898", VA = "0xBB7898", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0xBB78D8", Offset = "0xBB78D8", VA = "0xBB78D8")]
		public EventOnAwake()
		{
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0xBB7940", Offset = "0xBB7940", VA = "0xBB7940")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93A908", Offset = "0x93A908")]
		private void <Awake>b__4_0(CharacterEvents.AllCharactersSpawnedEvent eventData)
		{
		}
	}
	[Token(Token = "0x20001D0")]
	public class EventOnCharacterActive : RoomBehaviour
	{
		[Serializable]
		[Token(Token = "0x200051F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9276E8", Offset = "0x9276E8")]
		private sealed class <>c
		{
			[Token(Token = "0x4001F2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001F2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<bool> <>9__6_0;

			[Token(Token = "0x6002560")]
			[Address(RVA = "0xBB8030", Offset = "0xBB8030", VA = "0xBB8030")]
			public <>c()
			{
			}

			[Token(Token = "0x6002561")]
			[Address(RVA = "0xBB8038", Offset = "0xBB8038", VA = "0xBB8038")]
			internal bool <Initialize>b__6_0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private CharacterType m_characterType;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92CA38", Offset = "0x92CA38")]
		[SerializeField]
		private PlayableCharacterEvent m_onCharacterActivation;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PlayableCharacterEvent m_onCharacterDeactivation;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EventToken m_onCharacterActivatedEventToken;

		[Token(Token = "0x6001070")]
		[Address(RVA = "0xBB79D0", Offset = "0xBB79D0", VA = "0xBB79D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0xBB7A7C", Offset = "0xBB7A7C", VA = "0xBB7A7C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0xBB7AFC", Offset = "0xBB7AFC", VA = "0xBB7AFC", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0xBB7DE0", Offset = "0xBB7DE0", VA = "0xBB7DE0")]
		public void CompareActiveCharacterType()
		{
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0xBB7F08", Offset = "0xBB7F08", VA = "0xBB7F08")]
		private void OnCharacterActivated(CharacterEvents.CharacterActivatedEvent eventData)
		{
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0xBB7E68", Offset = "0xBB7E68", VA = "0xBB7E68")]
		private void CompareActiveCharacterType(PlayableCharacter character)
		{
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0xBB7F3C", Offset = "0xBB7F3C", VA = "0xBB7F3C")]
		public EventOnCharacterActive()
		{
		}
	}
	[Token(Token = "0x20001D1")]
	public class EventOnRoomActive : RoomBehaviour
	{
		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent m_onRoomActivation;

		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private UnityEvent m_onRoomDeactivation;

		[Token(Token = "0x6001077")]
		[Address(RVA = "0xBB80E8", Offset = "0xBB80E8", VA = "0xBB80E8", Slot = "4")]
		public override void SetActive(bool active)
		{
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0xBB813C", Offset = "0xBB813C", VA = "0xBB813C", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0xBB8140", Offset = "0xBB8140", VA = "0xBB8140")]
		public EventOnRoomActive()
		{
		}
	}
	[Token(Token = "0x20001D2")]
	public class HandDebug : MonoBehaviour
	{
		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_fpsMeasurePeriod;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool m_perFrameUpdate;

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshPro m_fpsTextMesh;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshPro m_roomTextMesh;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_fpsAccumulator;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int m_currentFps;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int m_writeIdx;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int[] m_fpsHistory;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int[] m_drawCalls;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float m_fpsNextPeriod;

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool m_displayOnHands;

		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private BiomeType m_activeBiome;

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Cortopia.Scripts.Rooms.RoomType m_activeRoom;

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private EventToken m_biomeActivatedEventToken;

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private EventToken m_roomActivatedEventToken;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly string m_fpsDisplay;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly string m_roomDisplay;

		[Token(Token = "0x600107A")]
		[Address(RVA = "0xBB81C8", Offset = "0xBB81C8", VA = "0xBB81C8")]
		private void Start()
		{
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0xBB8244", Offset = "0xBB8244", VA = "0xBB8244")]
		public HandDebug()
		{
		}
	}
	[Token(Token = "0x20001D3")]
	public class MathUtils : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000520")]
		public struct MinMax
		{
			[Token(Token = "0x4001F2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float Min;

			[Token(Token = "0x4001F2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float Max;

			[Token(Token = "0x6002562")]
			[Address(RVA = "0x9CDC2C", Offset = "0x9CDC2C", VA = "0x9CDC2C")]
			public MinMax(float newMin, float newMax)
			{
			}
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0xBB82E4", Offset = "0xBB82E4", VA = "0xBB82E4")]
		public static int GetEnumFlagArrayIndex(int value)
		{
			return default(int);
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0xBB8358", Offset = "0xBB8358", VA = "0xBB8358")]
		public MathUtils()
		{
		}
	}
	[Token(Token = "0x20001D4")]
	public static class MonoBehaviourExtensions
	{
		[Token(Token = "0x2000521")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9276F8", Offset = "0x9276F8")]
		private sealed class <Wait>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float time;

			[Token(Token = "0x4001F33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Promise promise;

			[Token(Token = "0x4001F34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x1700048D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002566")]
				[Address(RVA = "0xBB9208", Offset = "0xBB9208", VA = "0xBB9208", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700048E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002568")]
				[Address(RVA = "0xBB9278", Offset = "0xBB9278", VA = "0xBB9278", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002563")]
			[Address(RVA = "0xBB8B94", Offset = "0xBB8B94", VA = "0xBB8B94")]
			[DebuggerHidden]
			public <Wait>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6002564")]
			[Address(RVA = "0xBB90F4", Offset = "0xBB90F4", VA = "0xBB90F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002565")]
			[Address(RVA = "0xBB90F8", Offset = "0xBB90F8", VA = "0xBB90F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002567")]
			[Address(RVA = "0xBB9210", Offset = "0xBB9210", VA = "0xBB9210", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000522")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927708", Offset = "0x927708")]
		private sealed class <StallOneFrame>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Promise promise;

			[Token(Token = "0x1700048F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600256C")]
				[Address(RVA = "0xBB907C", Offset = "0xBB907C", VA = "0xBB907C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000490")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600256E")]
				[Address(RVA = "0xBB90EC", Offset = "0xBB90EC", VA = "0xBB90EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002569")]
			[Address(RVA = "0xBB8BC0", Offset = "0xBB8BC0", VA = "0xBB8BC0")]
			[DebuggerHidden]
			public <StallOneFrame>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x600256A")]
			[Address(RVA = "0xBB8D8C", Offset = "0xBB8D8C", VA = "0xBB8D8C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600256B")]
			[Address(RVA = "0xBB8D90", Offset = "0xBB8D90", VA = "0xBB8D90", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600256D")]
			[Address(RVA = "0xBB9084", Offset = "0xBB9084", VA = "0xBB9084", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000523")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927718", Offset = "0x927718")]
		private sealed class <WaitUnscaled>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float time;

			[Token(Token = "0x4001F3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Promise promise;

			[Token(Token = "0x4001F3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x17000491")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002572")]
				[Address(RVA = "0xBB9504", Offset = "0xBB9504", VA = "0xBB9504", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000492")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002574")]
				[Address(RVA = "0xBB9574", Offset = "0xBB9574", VA = "0xBB9574", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600256F")]
			[Address(RVA = "0xBB8BEC", Offset = "0xBB8BEC", VA = "0xBB8BEC")]
			[DebuggerHidden]
			public <WaitUnscaled>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6002570")]
			[Address(RVA = "0xBB93F0", Offset = "0xBB93F0", VA = "0xBB93F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002571")]
			[Address(RVA = "0xBB93F4", Offset = "0xBB93F4", VA = "0xBB93F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002573")]
			[Address(RVA = "0xBB950C", Offset = "0xBB950C", VA = "0xBB950C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000524")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927728", Offset = "0x927728")]
		private sealed class <WaitFor>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Func<bool> condition;

			[Token(Token = "0x4001F40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Promise promise;

			[Token(Token = "0x17000493")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002578")]
				[Address(RVA = "0xBB9378", Offset = "0xBB9378", VA = "0xBB9378", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000494")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600257A")]
				[Address(RVA = "0xBB93E8", Offset = "0xBB93E8", VA = "0xBB93E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002575")]
			[Address(RVA = "0xBB8C18", Offset = "0xBB8C18", VA = "0xBB8C18")]
			[DebuggerHidden]
			public <WaitFor>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6002576")]
			[Address(RVA = "0xBB9280", Offset = "0xBB9280", VA = "0xBB9280", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002577")]
			[Address(RVA = "0xBB9284", Offset = "0xBB9284", VA = "0xBB9284", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002579")]
			[Address(RVA = "0xBB9380", Offset = "0xBB9380", VA = "0xBB9380", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D0E")]
		private const int PromisePoolSize = 32;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Queue<Promise> sm_availablePromises;

		[Token(Token = "0x600107E")]
		[Address(RVA = "0xBB8368", Offset = "0xBB8368", VA = "0xBB8368")]
		static MonoBehaviourExtensions()
		{
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0xBB8518", Offset = "0xBB8518", VA = "0xBB8518")]
		public static IPromise WaitUnscaled(this MonoBehaviour mb, float time, ref Coroutine routine)
		{
			return null;
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0xBB8758", Offset = "0xBB8758", VA = "0xBB8758")]
		public static IPromise WaitUnscaled(this MonoBehaviour mb, float time)
		{
			return null;
		}

		[Token(Token = "0x6001081")]
		[Address(RVA = "0xBB8800", Offset = "0xBB8800", VA = "0xBB8800")]
		public static IPromise Wait(this MonoBehaviour mb, float time, ref Coroutine routine)
		{
			return null;
		}

		[Token(Token = "0x6001082")]
		[Address(RVA = "0xBB8948", Offset = "0xBB8948", VA = "0xBB8948")]
		public static IPromise Wait(this MonoBehaviour mb, float time)
		{
			return null;
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0xBB89F0", Offset = "0xBB89F0", VA = "0xBB89F0")]
		public static IPromise WaitOneFrame(this MonoBehaviour mb)
		{
			return null;
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0xBB7D3C", Offset = "0xBB7D3C", VA = "0xBB7D3C")]
		public static IPromise WaitFor(this MonoBehaviour mb, Func<bool> condition)
		{
			return null;
		}

		[Token(Token = "0x6001085")]
		[Address(RVA = "0xBB88B0", Offset = "0xBB88B0", VA = "0xBB88B0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93A978", Offset = "0x93A978")]
		private static IEnumerator Wait(float time, Promise promise)
		{
			return null;
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0xBB8A88", Offset = "0xBB8A88", VA = "0xBB8A88")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93A9DC", Offset = "0x93A9DC")]
		private static IEnumerator StallOneFrame(Promise promise)
		{
			return null;
		}

		[Token(Token = "0x6001087")]
		[Address(RVA = "0xBB86C0", Offset = "0xBB86C0", VA = "0xBB86C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93AA40", Offset = "0x93AA40")]
		private static IEnumerator WaitUnscaled(float time, Promise promise)
		{
			return null;
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0xBB8AFC", Offset = "0xBB8AFC", VA = "0xBB8AFC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93AAA4", Offset = "0x93AAA4")]
		private static IEnumerator WaitFor(Func<bool> condition, Promise promise)
		{
			return null;
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0xBB8C44", Offset = "0xBB8C44", VA = "0xBB8C44")]
		private static void ReturnToPool(Promise promise)
		{
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0xBB85C8", Offset = "0xBB85C8", VA = "0xBB85C8")]
		private static Promise GetPooledPromise()
		{
			return null;
		}
	}
	[Token(Token = "0x20001D5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x926144", Offset = "0x926144")]
	public class NavMeshBaker : MonoBehaviour
	{
		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private NavMeshSurface m_navSurface;

		[Token(Token = "0x4000D11")]
		private const float NavVoxelSize = 0.0375f;

		[Token(Token = "0x4000D12")]
		private const CollectObjects BakeType = CollectObjects.Children;

		[Token(Token = "0x4000D13")]
		private const int NavTileSize = 16;

		[Token(Token = "0x600108B")]
		[Address(RVA = "0xBB957C", Offset = "0xBB957C", VA = "0xBB957C")]
		public NavMeshBaker()
		{
		}
	}
	[Token(Token = "0x20001D6")]
	public class PositionToggle : SaveObject
	{
		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_lerpSpeed;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Vector3 m_defaultPosition;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector3 m_alternatePosition;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SavableVector m_savePositon;

		[Token(Token = "0x600108C")]
		[Address(RVA = "0xBB9598", Offset = "0xBB9598", VA = "0xBB9598")]
		private void Awake()
		{
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0xBB9644", Offset = "0xBB9644", VA = "0xBB9644")]
		public void SaveDefaultPosition()
		{
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0xBB9688", Offset = "0xBB9688", VA = "0xBB9688")]
		public void SaveAlternatePosition()
		{
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0xBB96CC", Offset = "0xBB96CC", VA = "0xBB96CC")]
		public void SetPosition(bool defaultPosition)
		{
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0xBB9758", Offset = "0xBB9758", VA = "0xBB9758")]
		public void LerpToPosition(bool alternatePosition)
		{
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0xBB98D0", Offset = "0xBB98D0", VA = "0xBB98D0", Slot = "9")]
		public override void Serialize(IWriteSave save)
		{
		}

		[Token(Token = "0x6001092")]
		[Address(RVA = "0xBB9A1C", Offset = "0xBB9A1C", VA = "0xBB9A1C", Slot = "8")]
		public override void Deserialize(IReadSave save)
		{
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0xBB9BA4", Offset = "0xBB9BA4", VA = "0xBB9BA4")]
		public PositionToggle()
		{
		}
	}
	[Token(Token = "0x20001D7")]
	public static class ProjectExtensionMethods
	{
		[Token(Token = "0x6001094")]
		[Address(RVA = "0xBB9BB4", Offset = "0xBB9BB4", VA = "0xBB9BB4")]
		public static float WithinRange(this float value, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0xBB9BCC", Offset = "0xBB9BCC", VA = "0xBB9BCC")]
		public static float InverseLerp(this Vector3 value, Vector3 min, Vector3 max)
		{
			return default(float);
		}

		[Token(Token = "0x6001096")]
		[Address(RVA = "0xBB9D90", Offset = "0xBB9D90", VA = "0xBB9D90")]
		public static void SetPositionAndRotation(this Transform transform, Transform otherTransform)
		{
		}

		[Token(Token = "0x6001097")]
		[Address(RVA = "0xBB9E4C", Offset = "0xBB9E4C", VA = "0xBB9E4C")]
		public static void SetPositionAndRotation(this Transform transform, PositionRotation positionRotation)
		{
		}

		[Token(Token = "0x6001098")]
		[Address(RVA = "0xBB9EC4", Offset = "0xBB9EC4", VA = "0xBB9EC4")]
		public static void SetPositionAndRotation(this Transform transform, SavablePose positionRotation)
		{
		}

		[Token(Token = "0x6001099")]
		[Address(RVA = "0xBB9FA8", Offset = "0xBB9FA8", VA = "0xBB9FA8")]
		public static PositionRotation GetPositionAndRotation(this Transform transform)
		{
			return default(PositionRotation);
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0xBBA020", Offset = "0xBBA020", VA = "0xBBA020")]
		public static void SetTransform(this Transform transform, SavableTransform savableTransform)
		{
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0xBB9F78", Offset = "0xBB9F78", VA = "0xBB9F78")]
		public static Quaternion ToQuaternion(this Vector4 vector)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0xBBA0F4", Offset = "0xBBA0F4", VA = "0xBBA0F4")]
		public static Vector4 ToVector(this Quaternion quaternion)
		{
			return default(Vector4);
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0xBBA124", Offset = "0xBBA124", VA = "0xBBA124")]
		public static SavableTransform ToSavable(this Transform transform)
		{
			return null;
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0xBBA238", Offset = "0xBBA238", VA = "0xBBA238")]
		public static bool IsWithinBounds(this float value, float minValue, float maxValue)
		{
			return default(bool);
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0xBBA250", Offset = "0xBBA250", VA = "0xBBA250")]
		public static bool TryGetRoom(this Scene scene, out Cortopia.Scripts.Rooms.Room room)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001D8")]
	public class StartupRig : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000525")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927738", Offset = "0x927738")]
		private sealed class <>c
		{
			[Token(Token = "0x4001F41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001F42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__4_0;

			[Token(Token = "0x600257C")]
			[Address(RVA = "0xBBEC04", Offset = "0xBBEC04", VA = "0xBBEC04")]
			public <>c()
			{
			}

			[Token(Token = "0x600257D")]
			[Address(RVA = "0xBBEC0C", Offset = "0xBBEC0C", VA = "0xBBEC0C")]
			internal void <SetTermAndTerminate>b__4_0()
			{
			}
		}

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string Path;

		[Token(Token = "0x4000D19")]
		private const float AutoQuitTime = 5f;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Localize m_localize;

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0xBBE8DC", Offset = "0xBBE8DC", VA = "0xBBE8DC")]
		public void SetTerm(string localizeTerm)
		{
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0xBBE9A4", Offset = "0xBBE9A4", VA = "0xBBE9A4")]
		public void SetTermAndTerminate(string localizeTerm)
		{
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0xBBEB3C", Offset = "0xBBEB3C", VA = "0xBBEB3C")]
		public StartupRig()
		{
		}
	}
	[Token(Token = "0x20001D9")]
	public static class StringExtensions
	{
		[Token(Token = "0x4000D1B")]
		private const int NotFound = -1;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string[] NewLines;

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0xBBEC14", Offset = "0xBBEC14", VA = "0xBBEC14")]
		public static string Substring(this string text, string start, string end)
		{
			return null;
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0xBBED14", Offset = "0xBBED14", VA = "0xBBED14")]
		public static string Substring(this string text, string start, char end)
		{
			return null;
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0xBBEE14", Offset = "0xBBEE14", VA = "0xBBEE14")]
		public static string[] Split(this string text, string separator)
		{
			return null;
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0xBBEEE8", Offset = "0xBBEEE8", VA = "0xBBEEE8")]
		public static string[] Split(this string text, params string[] separator)
		{
			return null;
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0xBBEF20", Offset = "0xBBEF20", VA = "0xBBEF20")]
		public static int IndexAfter(this string text, char value, int startIndex = 0)
		{
			return default(int);
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0xBBEF74", Offset = "0xBBEF74", VA = "0xBBEF74")]
		public static int IndexAfter(this string text, string value, int startIndex = 0)
		{
			return default(int);
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0xBBEFE4", Offset = "0xBBEFE4", VA = "0xBBEFE4")]
		public static int IndexOfNewLine(this string text, int startIndex = 0)
		{
			return default(int);
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0xBBF10C", Offset = "0xBBF10C", VA = "0xBBF10C")]
		public static int LastIndexOfNewLine(this string text, int startIndex = 0)
		{
			return default(int);
		}

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0xBBF234", Offset = "0xBBF234", VA = "0xBBF234")]
		public static bool Contains(this string text, string toCheck, StringComparison comparison)
		{
			return default(bool);
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0xBBF258", Offset = "0xBBF258", VA = "0xBBF258")]
		public static string GetAssetNameFromPath(this string path)
		{
			return null;
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0xBBF354", Offset = "0xBBF354", VA = "0xBBF354")]
		public static string ToPascalCase(this string text)
		{
			return null;
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0xBBF4BC", Offset = "0xBBF4BC", VA = "0xBBF4BC")]
		public static string ToPascalCase(this string text, bool lettersDigitsOnly)
		{
			return null;
		}

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0xBBF558", Offset = "0xBBF558", VA = "0xBBF558")]
		public static string LettersAndDigits(this string text)
		{
			return null;
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0xBBF5E4", Offset = "0xBBF5E4", VA = "0xBBF5E4")]
		public static string ReplaceAt(this string text, string replace, int index, int length = 1)
		{
			return null;
		}
	}
	[Token(Token = "0x20001DA")]
	public class TrailerCamera : MonoBehaviour
	{
		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Camera m_camera;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LerpConstraint m_lerpConstraint;

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0xBBF7EC", Offset = "0xBBF7EC", VA = "0xBBF7EC")]
		private void Start()
		{
		}

		[Token(Token = "0x60010B4")]
		[Address(RVA = "0xBBF7F0", Offset = "0xBBF7F0", VA = "0xBBF7F0")]
		private void ConfigureTrailerCamera()
		{
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0xBBF96C", Offset = "0xBBF96C", VA = "0xBBF96C")]
		public TrailerCamera()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001DB")]
	public struct PositionRotation
	{
		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 Position;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion Rotation;

		[Token(Token = "0x60010B6")]
		[Address(RVA = "0x9CDC34", Offset = "0x9CDC34", VA = "0x9CDC34")]
		public PositionRotation(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x20001DC")]
	public enum VectorAxisType
	{
		[Token(Token = "0x4000D22")]
		X,
		[Token(Token = "0x4000D23")]
		Y,
		[Token(Token = "0x4000D24")]
		Z
	}
}
namespace Cortopia.Scripts.Utils.Transformables
{
	[Token(Token = "0x20001DD")]
	public class ClockTowerLedge : RoomBehaviour
	{
		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Vector3 m_minValue;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Vector3 m_maxValue;

		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92CB84", Offset = "0x92CB84")]
		[SerializeField]
		private float m_tweenTime;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Ease m_tweenEase;

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0xBBF974", Offset = "0xBBF974", VA = "0xBBF974")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0xBBF9D0", Offset = "0xBBF9D0", VA = "0xBBF9D0", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0xBBFA40", Offset = "0xBBFA40", VA = "0xBBFA40")]
		public ClockTowerLedge()
		{
		}
	}
	[Token(Token = "0x20001DE")]
	public enum MinMaxType
	{
		[Token(Token = "0x4000D2A")]
		Min,
		[Token(Token = "0x4000D2B")]
		Max
	}
	[Token(Token = "0x20001DF")]
	public class ObjectScaler : ObjectTransformable
	{
		[Token(Token = "0x60010BA")]
		[Address(RVA = "0xBBFAD4", Offset = "0xBBFAD4", VA = "0xBBFAD4", Slot = "4")]
		public override void SaveMinValue()
		{
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0xBBFAD8", Offset = "0xBBFAD8", VA = "0xBBFAD8", Slot = "5")]
		public override void SaveMaxValue()
		{
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0xBBFADC", Offset = "0xBBFADC", VA = "0xBBFADC", Slot = "6")]
		public override void SetToValue(MinMaxType valueType)
		{
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0xBBFB28", Offset = "0xBBFB28", VA = "0xBBFB28", Slot = "7")]
		public override void LerpToValue(float t)
		{
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0xBBFC1C", Offset = "0xBBFC1C", VA = "0xBBFC1C", Slot = "8")]
		public override void TweenToValue(MinMaxType valueType)
		{
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0xBBFD34", Offset = "0xBBFD34", VA = "0xBBFD34")]
		public void TweenToValue(bool toMaxValue)
		{
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0xBBFD6C", Offset = "0xBBFD6C", VA = "0xBBFD6C")]
		public ObjectScaler()
		{
		}
	}
	[Token(Token = "0x20001E0")]
	public abstract class ObjectTransformable : MonoBehaviour
	{
		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Vector3 m_minValue;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		protected Vector3 m_maxValue;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92CC00", Offset = "0x92CC00")]
		[SerializeField]
		protected float m_tweenTime;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		protected Ease m_tweenEase;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected UnityEvent m_onTweenCompleted;

		[Token(Token = "0x60010C1")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x93ACA8", Offset = "0x93ACA8")]
		public abstract void SaveMinValue();

		[Token(Token = "0x60010C2")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x93ACE0", Offset = "0x93ACE0")]
		public abstract void SaveMaxValue();

		[Token(Token = "0x60010C3")]
		public abstract void SetToValue(MinMaxType valueType);

		[Token(Token = "0x60010C4")]
		public abstract void LerpToValue(float t);

		[Token(Token = "0x60010C5")]
		public abstract void TweenToValue(MinMaxType valueType);

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0xBBFD70", Offset = "0xBBFD70", VA = "0xBBFD70")]
		protected ObjectTransformable()
		{
		}
	}
}
namespace Cortopia.Scripts.Utils.Promises
{
	[Token(Token = "0x20001E1")]
	public static class EnumerableExtensions
	{
		[Token(Token = "0x60010C7")]
		public static void Each<T>(this IEnumerable<T> source, Action<T, int> fn)
		{
		}
	}
	[Token(Token = "0x20001E2")]
	public class ExceptionEventArgs : EventArgs
	{
		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92CC6C", Offset = "0x92CC6C")]
		private Exception <Exception>k__BackingField;

		[Token(Token = "0x1700021D")]
		public Exception Exception
		{
			[Token(Token = "0x60010C9")]
			[Address(RVA = "0xBBA42C", Offset = "0xBBA42C", VA = "0xBBA42C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93AD28", Offset = "0x93AD28")]
			get
			{
				return null;
			}
			[Token(Token = "0x60010CA")]
			[Address(RVA = "0xBBA424", Offset = "0xBBA424", VA = "0xBBA424")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93AD38", Offset = "0x93AD38")]
			private set
			{
			}
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0xBBA3A8", Offset = "0xBBA3A8", VA = "0xBBA3A8")]
		internal ExceptionEventArgs(Exception exception)
		{
		}
	}
	[Token(Token = "0x20001E3")]
	public interface IPendingPromise<T> : IRejectable
	{
		[Token(Token = "0x1700021E")]
		int Id
		{
			[Token(Token = "0x60010CB")]
			get;
		}

		[Token(Token = "0x60010CC")]
		void Resolve(T value);

		[Token(Token = "0x60010CD")]
		void ReportProgress(float progress);
	}
	[Token(Token = "0x20001E4")]
	public interface IPendingPromise : IRejectable
	{
		[Token(Token = "0x1700021F")]
		int Id
		{
			[Token(Token = "0x60010CE")]
			get;
		}

		[Token(Token = "0x60010CF")]
		void Resolve();

		[Token(Token = "0x60010D0")]
		void ReportProgress(float progress);
	}
	[Token(Token = "0x20001E5")]
	public interface IPromise<T>
	{
		[Token(Token = "0x17000220")]
		int Id
		{
			[Token(Token = "0x60010D1")]
			get;
		}

		[Token(Token = "0x60010D2")]
		IPromise<T> WithName(string name);

		[Token(Token = "0x60010D3")]
		void Done(Action<T> onResolved, Action<Exception> onRejected);

		[Token(Token = "0x60010D4")]
		void Done(Action<T> onResolved);

		[Token(Token = "0x60010D5")]
		void Done();

		[Token(Token = "0x60010D6")]
		IPromise Catch(Action<Exception> onRejected);

		[Token(Token = "0x60010D7")]
		IPromise<T> Catch(Func<Exception, T> onRejected);

		[Token(Token = "0x60010D8")]
		IPromise<ConvertedT> Then<ConvertedT>(Func<T, IPromise<ConvertedT>> onResolved);

		[Token(Token = "0x60010D9")]
		IPromise Then(Func<T, IPromise> onResolved);

		[Token(Token = "0x60010DA")]
		IPromise Then(Action<T> onResolved);

		[Token(Token = "0x60010DB")]
		IPromise<ConvertedT> Then<ConvertedT>(Func<T, IPromise<ConvertedT>> onResolved, Func<Exception, IPromise<ConvertedT>> onRejected);

		[Token(Token = "0x60010DC")]
		IPromise Then(Func<T, IPromise> onResolved, Action<Exception> onRejected);

		[Token(Token = "0x60010DD")]
		IPromise Then(Action<T> onResolved, Action<Exception> onRejected);

		[Token(Token = "0x60010DE")]
		IPromise<ConvertedT> Then<ConvertedT>(Func<T, IPromise<ConvertedT>> onResolved, Func<Exception, IPromise<ConvertedT>> onRejected, Action<float> onProgress);

		[Token(Token = "0x60010DF")]
		IPromise Then(Func<T, IPromise> onResolved, Action<Exception> onRejected, Action<float> onProgress);

		[Token(Token = "0x60010E0")]
		IPromise Then(Action<T> onResolved, Action<Exception> onRejected, Action<float> onProgress);

		[Token(Token = "0x60010E1")]
		IPromise<ConvertedT> Then<ConvertedT>(Func<T, ConvertedT> transform);

		[Token(Token = "0x60010E2")]
		IPromise<IEnumerable<ConvertedT>> ThenAll<ConvertedT>(Func<T, IEnumerable<IPromise<ConvertedT>>> chain);

		[Token(Token = "0x60010E3")]
		IPromise ThenAll(Func<T, IEnumerable<IPromise>> chain);

		[Token(Token = "0x60010E4")]
		IPromise<ConvertedT> ThenRace<ConvertedT>(Func<T, IEnumerable<IPromise<ConvertedT>>> chain);

		[Token(Token = "0x60010E5")]
		IPromise ThenRace(Func<T, IEnumerable<IPromise>> chain);

		[Token(Token = "0x60010E6")]
		IPromise<T> Finally(Action onComplete);

		[Token(Token = "0x60010E7")]
		IPromise ContinueWith(Func<IPromise> onResolved);

		[Token(Token = "0x60010E8")]
		IPromise<ConvertedT> ContinueWith<ConvertedT>(Func<IPromise<ConvertedT>> onComplete);

		[Token(Token = "0x60010E9")]
		IPromise<T> Progress(Action<float> onProgress);
	}
	[Token(Token = "0x20001E6")]
	public interface IPromise
	{
		[Token(Token = "0x17000221")]
		int Id
		{
			[Token(Token = "0x60010EA")]
			get;
		}

		[Token(Token = "0x60010EB")]
		IPromise WithName(string name);

		[Token(Token = "0x60010EC")]
		void Done(Action onResolved, Action<Exception> onRejected);

		[Token(Token = "0x60010ED")]
		void Done(Action onResolved);

		[Token(Token = "0x60010EE")]
		void Done();

		[Token(Token = "0x60010EF")]
		IPromise Catch(Action<Exception> onRejected);

		[Token(Token = "0x60010F0")]
		IPromise<ConvertedT> Then<ConvertedT>(Func<IPromise<ConvertedT>> onResolved);

		[Token(Token = "0x60010F1")]
		IPromise Then(Func<IPromise> onResolved);

		[Token(Token = "0x60010F2")]
		IPromise Then(Action onResolved);

		[Token(Token = "0x60010F3")]
		IPromise<ConvertedT> Then<ConvertedT>(Func<IPromise<ConvertedT>> onResolved, Func<Exception, IPromise<ConvertedT>> onRejected);

		[Token(Token = "0x60010F4")]
		IPromise Then(Func<IPromise> onResolved, Action<Exception> onRejected);

		[Token(Token = "0x60010F5")]
		IPromise Then(Action onResolved, Action<Exception> onRejected);

		[Token(Token = "0x60010F6")]
		IPromise<ConvertedT> Then<ConvertedT>(Func<IPromise<ConvertedT>> onResolved, Func<Exception, IPromise<ConvertedT>> onRejected, Action<float> onProgress);

		[Token(Token = "0x60010F7")]
		IPromise Then(Func<IPromise> onResolved, Action<Exception> onRejected, Action<float> onProgress);

		[Token(Token = "0x60010F8")]
		IPromise Then(Action onResolved, Action<Exception> onRejected, Action<float> onProgress);

		[Token(Token = "0x60010F9")]
		IPromise ThenAll(Func<IEnumerable<IPromise>> chain);

		[Token(Token = "0x60010FA")]
		IPromise<IEnumerable<ConvertedT>> ThenAll<ConvertedT>(Func<IEnumerable<IPromise<ConvertedT>>> chain);

		[Token(Token = "0x60010FB")]
		IPromise ThenSequence(Func<IEnumerable<Func<IPromise>>> chain);

		[Token(Token = "0x60010FC")]
		IPromise ThenRace(Func<IEnumerable<IPromise>> chain);

		[Token(Token = "0x60010FD")]
		IPromise<ConvertedT> ThenRace<ConvertedT>(Func<IEnumerable<IPromise<ConvertedT>>> chain);

		[Token(Token = "0x60010FE")]
		IPromise Finally(Action onComplete);

		[Token(Token = "0x60010FF")]
		IPromise ContinueWith(Func<IPromise> onResolved);

		[Token(Token = "0x6001100")]
		IPromise<ConvertedT> ContinueWith<ConvertedT>(Func<IPromise<ConvertedT>> onComplete);

		[Token(Token = "0x6001101")]
		IPromise Progress(Action<float> onProgress);
	}
	[Token(Token = "0x20001E7")]
	public interface IPromiseInfo
	{
		[Token(Token = "0x17000222")]
		int Id
		{
			[Token(Token = "0x6001102")]
			get;
		}

		[Token(Token = "0x17000223")]
		string Name
		{
			[Token(Token = "0x6001103")]
			get;
		}
	}
	[Token(Token = "0x20001E8")]
	public interface IRejectable
	{
		[Token(Token = "0x6001104")]
		void Reject(Exception ex);
	}
	[Token(Token = "0x20001E9")]
	public struct ProgressHandler
	{
		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action<float> Callback;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IRejectable Rejectable;
	}
	[Token(Token = "0x20001EA")]
	public class Promise<T> : IPromise<T>, IPendingPromise<T>, IRejectable, IPromiseInfo
	{
		[Token(Token = "0x2000526")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927748", Offset = "0x927748")]
		private sealed class <>c__DisplayClass35_0
		{
			[Token(Token = "0x4001F43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Promise resultPromise;

			[Token(Token = "0x4001F44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<Exception> onRejected;

			[Token(Token = "0x600257E")]
			public <>c__DisplayClass35_0()
			{
			}

			[Token(Token = "0x600257F")]
			internal void <Catch>b__0(T _)
			{
			}

			[Token(Token = "0x6002580")]
			internal void <Catch>b__1(Exception ex)
			{
			}

			[Token(Token = "0x6002581")]
			internal void <Catch>b__2(float v)
			{
			}
		}

		[Token(Token = "0x2000527")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927758", Offset = "0x927758")]
		private sealed class <>c__DisplayClass36_0
		{
			[Token(Token = "0x4001F45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Promise<T> resultPromise;

			[Token(Token = "0x4001F46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<Exception, T> onRejected;

			[Token(Token = "0x6002582")]
			public <>c__DisplayClass36_0()
			{
			}

			[Token(Token = "0x6002583")]
			internal void <Catch>b__0(T v)
			{
			}

			[Token(Token = "0x6002584")]
			internal void <Catch>b__1(Exception ex)
			{
			}

			[Token(Token = "0x6002585")]
			internal void <Catch>b__2(float v)
			{
			}
		}

		[Token(Token = "0x2000528")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927768", Offset = "0x927768")]
		private sealed class <>c__DisplayClass43_0<ConvertedT>
		{
			[Token(Token = "0x4001F47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<T, IPromise<ConvertedT>> onResolved;

			[Token(Token = "0x4001F48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Promise<ConvertedT> resultPromise;

			[Token(Token = "0x4001F49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<Exception, IPromise<ConvertedT>> onRejected;

			[Token(Token = "0x4001F4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<float> <>9__2;

			[Token(Token = "0x4001F4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<ConvertedT> <>9__3;

			[Token(Token = "0x4001F4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<Exception> <>9__4;

			[Token(Token = "0x4001F4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<ConvertedT> <>9__5;

			[Token(Token = "0x4001F4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<Exception> <>9__6;

			[Token(Token = "0x6002586")]
			public <>c__DisplayClass43_0()
			{
			}

			[Token(Token = "0x6002587")]
			internal void <Then>b__0(T v)
			{
			}

			[Token(Token = "0x6002588")]
			internal void <Then>b__2(float progress)
			{
			}

			[Token(Token = "0x6002589")]
			internal void <Then>b__3(ConvertedT chainedValue)
			{
			}

			[Token(Token = "0x600258A")]
			internal void <Then>b__4(Exception ex)
			{
			}

			[Token(Token = "0x600258B")]
			internal void <Then>b__1(Exception ex)
			{
			}

			[Token(Token = "0x600258C")]
			internal void <Then>b__5(ConvertedT chainedValue)
			{
			}

			[Token(Token = "0x600258D")]
			internal void <Then>b__6(Exception callbackEx)
			{
			}
		}

		[Token(Token = "0x2000529")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927778", Offset = "0x927778")]
		private sealed class <>c__DisplayClass44_0
		{
			[Token(Token = "0x4001F4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<T, IPromise> onResolved;

			[Token(Token = "0x4001F50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Promise resultPromise;

			[Token(Token = "0x4001F51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<Exception> onRejected;

			[Token(Token = "0x4001F52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<float> <>9__2;

			[Token(Token = "0x4001F53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action <>9__3;

			[Token(Token = "0x4001F54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<Exception> <>9__4;

			[Token(Token = "0x600258E")]
			public <>c__DisplayClass44_0()
			{
			}

			[Token(Token = "0x600258F")]
			internal void <Then>b__0(T v)
			{
			}

			[Token(Token = "0x6002590")]
			internal void <Then>b__2(float progress)
			{
			}

			[Token(Token = "0x6002591")]
			internal void <Then>b__3()
			{
			}

			[Token(Token = "0x6002592")]
			internal void <Then>b__4(Exception ex)
			{
			}

			[Token(Token = "0x6002593")]
			internal void <Then>b__1(Exception ex)
			{
			}
		}

		[Token(Token = "0x200052A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927788", Offset = "0x927788")]
		private sealed class <>c__DisplayClass45_0
		{
			[Token(Token = "0x4001F55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T> onResolved;

			[Token(Token = "0x4001F56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Promise resultPromise;

			[Token(Token = "0x4001F57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<Exception> onRejected;

			[Token(Token = "0x6002594")]
			public <>c__DisplayClass45_0()
			{
			}

			[Token(Token = "0x6002595")]
			internal void <Then>b__0(T v)
			{
			}

			[Token(Token = "0x6002596")]
			internal void <Then>b__1(Exception ex)
			{
			}
		}

		[Token(Token = "0x200052B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927798", Offset = "0x927798")]
		private sealed class <>c__DisplayClass46_0<ConvertedT>
		{
			[Token(Token = "0x4001F58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<T, ConvertedT> transform;

			[Token(Token = "0x6002597")]
			public <>c__DisplayClass46_0()
			{
			}

			[Token(Token = "0x6002598")]
			internal IPromise<ConvertedT> <Then>b__0(T value)
			{
				return null;
			}
		}

		[Token(Token = "0x200052C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9277A8", Offset = "0x9277A8")]
		private sealed class <>c__DisplayClass50_0<T0>
		{
			[Token(Token = "0x4001F59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int count;

			[Token(Token = "0x4001F5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Promise<T0> promise;

			[Token(Token = "0x6002599")]
			public <>c__DisplayClass50_0()
			{
			}

			[Token(Token = "0x600259A")]
			internal IPromise<T0> <First>b__0(IPromise<T0> prevPromise, Func<IPromise<T0>> fn)
			{
				return null;
			}

			[Token(Token = "0x600259B")]
			internal void <First>b__1(T0 value)
			{
			}

			[Token(Token = "0x600259C")]
			internal void <First>b__2(Exception ex)
			{
			}
		}

		[Token(Token = "0x200052D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9277B8", Offset = "0x9277B8")]
		private sealed class <>c__DisplayClass50_1<T0>
		{
			[Token(Token = "0x4001F5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int itemSequence;

			[Token(Token = "0x4001F5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<IPromise<T0>> fn;

			[Token(Token = "0x4001F5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Promise<T0> newPromise;

			[Token(Token = "0x4001F5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public <>c__DisplayClass50_0<T0> CS$<>8__locals1;

			[Token(Token = "0x4001F5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T0> <>9__5;

			[Token(Token = "0x600259D")]
			public <>c__DisplayClass50_1()
			{
			}

			[Token(Token = "0x600259E")]
			internal void <First>b__3(float v)
			{
			}

			[Token(Token = "0x600259F")]
			internal void <First>b__4(Exception ex)
			{
			}

			[Token(Token = "0x60025A0")]
			internal void <First>b__5(T0 value)
			{
			}
		}

		[Token(Token = "0x200052E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9277C8", Offset = "0x9277C8")]
		private sealed class <>c__DisplayClass51_0<ConvertedT>
		{
			[Token(Token = "0x4001F60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<T, IEnumerable<IPromise<ConvertedT>>> chain;

			[Token(Token = "0x60025A1")]
			public <>c__DisplayClass51_0()
			{
			}

			[Token(Token = "0x60025A2")]
			internal IPromise<IEnumerable<ConvertedT>> <ThenAll>b__0(T value)
			{
				return null;
			}
		}

		[Token(Token = "0x200052F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9277D8", Offset = "0x9277D8")]
		private sealed class <>c__DisplayClass52_0
		{
			[Token(Token = "0x4001F61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<T, IEnumerable<IPromise>> chain;

			[Token(Token = "0x60025A3")]
			public <>c__DisplayClass52_0()
			{
			}

			[Token(Token = "0x60025A4")]
			internal IPromise <ThenAll>b__0(T value)
			{
				return null;
			}
		}

		[Token(Token = "0x2000530")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9277E8", Offset = "0x9277E8")]
		private sealed class <>c__DisplayClass54_0
		{
			[Token(Token = "0x4001F62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float[] progress;

			[Token(Token = "0x4001F63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Promise<IEnumerable<T>> resultPromise;

			[Token(Token = "0x4001F64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] results;

			[Token(Token = "0x4001F65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int remainingCount;

			[Token(Token = "0x4001F66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<Exception> <>9__3;

			[Token(Token = "0x60025A5")]
			public <>c__DisplayClass54_0()
			{
			}

			[Token(Token = "0x60025A6")]
			internal void <All>b__0(IPromise<T> promise, int index)
			{
			}

			[Token(Token = "0x60025A7")]
			internal void <All>b__3(Exception ex)
			{
			}
		}

		[Token(Token = "0x2000531")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9277F8", Offset = "0x9277F8")]
		private sealed class <>c__DisplayClass54_1
		{
			[Token(Token = "0x4001F67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int index;

			[Token(Token = "0x4001F68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public <>c__DisplayClass54_0 CS$<>8__locals1;

			[Token(Token = "0x60025A8")]
			public <>c__DisplayClass54_1()
			{
			}

			[Token(Token = "0x60025A9")]
			internal void <All>b__1(float v)
			{
			}

			[Token(Token = "0x60025AA")]
			internal void <All>b__2(T result)
			{
			}
		}

		[Token(Token = "0x2000532")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927808", Offset = "0x927808")]
		private sealed class <>c__DisplayClass55_0<ConvertedT>
		{
			[Token(Token = "0x4001F69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<T, IEnumerable<IPromise<ConvertedT>>> chain;

			[Token(Token = "0x60025AB")]
			public <>c__DisplayClass55_0()
			{
			}

			[Token(Token = "0x60025AC")]
			internal IPromise<ConvertedT> <ThenRace>b__0(T value)
			{
				return null;
			}
		}

		[Token(Token = "0x2000533")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927818", Offset = "0x927818")]
		private sealed class <>c__DisplayClass56_0
		{
			[Token(Token = "0x4001F6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<T, IEnumerable<IPromise>> chain;

			[Token(Token = "0x60025AD")]
			public <>c__DisplayClass56_0()
			{
			}

			[Token(Token = "0x60025AE")]
			internal IPromise <ThenRace>b__0(T value)
			{
				return null;
			}
		}

		[Token(Token = "0x2000534")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927828", Offset = "0x927828")]
		private sealed class <>c__DisplayClass58_0
		{
			[Token(Token = "0x4001F6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Promise<T> resultPromise;

			[Token(Token = "0x4001F6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float[] progress;

			[Token(Token = "0x4001F6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<T> <>9__2;

			[Token(Token = "0x4001F6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<Exception> <>9__3;

			[Token(Token = "0x60025AF")]
			public <>c__DisplayClass58_0()
			{
			}

			[Token(Token = "0x60025B0")]
			internal void <Race>b__0(IPromise<T> promise, int index)
			{
			}

			[Token(Token = "0x60025B1")]
			internal void <Race>b__2(T result)
			{
			}

			[Token(Token = "0x60025B2")]
			internal void <Race>b__3(Exception ex)
			{
			}
		}

		[Token(Token = "0x2000535")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927838", Offset = "0x927838")]
		private sealed class <>c__DisplayClass58_1
		{
			[Token(Token = "0x4001F6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int index;

			[Token(Token = "0x4001F70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public <>c__DisplayClass58_0 CS$<>8__locals1;

			[Token(Token = "0x60025B3")]
			public <>c__DisplayClass58_1()
			{
			}

			[Token(Token = "0x60025B4")]
			internal void <Race>b__1(float v)
			{
			}
		}

		[Token(Token = "0x2000536")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927848", Offset = "0x927848")]
		private sealed class <>c__DisplayClass61_0
		{
			[Token(Token = "0x4001F71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action onComplete;

			[Token(Token = "0x4001F72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Promise<T> promise;

			[Token(Token = "0x60025B5")]
			public <>c__DisplayClass61_0()
			{
			}

			[Token(Token = "0x60025B6")]
			internal void <Finally>b__0(Exception e)
			{
			}

			[Token(Token = "0x60025B7")]
			internal T <Finally>b__1(T v)
			{
				return (T)null;
			}
		}

		[Token(Token = "0x2000537")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927858", Offset = "0x927858")]
		private sealed class <>c__DisplayClass62_0
		{
			[Token(Token = "0x4001F73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Promise promise;

			[Token(Token = "0x60025B8")]
			public <>c__DisplayClass62_0()
			{
			}

			[Token(Token = "0x60025B9")]
			internal void <ContinueWith>b__0(T x)
			{
			}

			[Token(Token = "0x60025BA")]
			internal void <ContinueWith>b__1(Exception e)
			{
			}
		}

		[Token(Token = "0x2000538")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927868", Offset = "0x927868")]
		private sealed class <>c__DisplayClass63_0<ConvertedT>
		{
			[Token(Token = "0x4001F74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Promise promise;

			[Token(Token = "0x60025BB")]
			public <>c__DisplayClass63_0()
			{
			}

			[Token(Token = "0x60025BC")]
			internal void <ContinueWith>b__0(T x)
			{
			}

			[Token(Token = "0x60025BD")]
			internal void <ContinueWith>b__1(Exception e)
			{
			}
		}

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Exception m_rejectionException;

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T m_resolveValue;

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<RejectHandler> m_rejectHandlers;

		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<ProgressHandler> m_progressHandlers;

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<Action<T>> m_resolveCallbacks;

		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<IRejectable> m_resolveRejectables;

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92CC7C", Offset = "0x92CC7C")]
		private readonly int <Id>k__BackingField;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92CC8C", Offset = "0x92CC8C")]
		private string <Name>k__BackingField;

		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92CC9C", Offset = "0x92CC9C")]
		private PromiseState <State>k__BackingField;

		[Token(Token = "0x17000224")]
		public int Id
		{
			[Token(Token = "0x6001105")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93AD48", Offset = "0x93AD48")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000225")]
		public string Name
		{
			[Token(Token = "0x6001106")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93AD58", Offset = "0x93AD58")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001107")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93AD68", Offset = "0x93AD68")]
			private set
			{
			}
		}

		[Token(Token = "0x17000226")]
		public PromiseState State
		{
			[Token(Token = "0x6001108")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93AD78", Offset = "0x93AD78")]
			get
			{
				return default(PromiseState);
			}
			[Token(Token = "0x6001109")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93AD88", Offset = "0x93AD88")]
			private set
			{
			}
		}

		[Token(Token = "0x600110A")]
		public Promise()
		{
		}

		[Token(Token = "0x600110B")]
		public Promise(Action<Action<T>, Action<Exception>> resolver)
		{
		}

		[Token(Token = "0x600110C")]
		private Promise(PromiseState initialState)
		{
		}

		[Token(Token = "0x600110D")]
		private void AddRejectHandler(Action<Exception> onRejected, IRejectable rejectable)
		{
		}

		[Token(Token = "0x600110E")]
		private void AddResolveHandler(Action<T> onResolved, IRejectable rejectable)
		{
		}

		[Token(Token = "0x600110F")]
		private void AddProgressHandler(Action<float> onProgress, IRejectable rejectable)
		{
		}

		[Token(Token = "0x6001110")]
		private void InvokeHandler<THandler>(Action<THandler> callback, IRejectable rejectable, THandler value)
		{
		}

		[Token(Token = "0x6001111")]
		private void ClearHandlers()
		{
		}

		[Token(Token = "0x6001112")]
		private void InvokeRejectHandlers(Exception ex)
		{
		}

		[Token(Token = "0x6001113")]
		private void InvokeResolveHandlers(T value)
		{
		}

		[Token(Token = "0x6001114")]
		private void InvokeProgressHandlers(float progress)
		{
		}

		[Token(Token = "0x6001115")]
		public void Reject(Exception ex)
		{
		}

		[Token(Token = "0x6001116")]
		public void Resolve(T value)
		{
		}

		[Token(Token = "0x6001117")]
		public void ReportProgress(float progress)
		{
		}

		[Token(Token = "0x6001118")]
		public void Done(Action<T> onResolved, Action<Exception> onRejected)
		{
		}

		[Token(Token = "0x6001119")]
		public void Done(Action<T> onResolved)
		{
		}

		[Token(Token = "0x600111A")]
		public void Done()
		{
		}

		[Token(Token = "0x600111B")]
		public IPromise<T> WithName(string name)
		{
			return null;
		}

		[Token(Token = "0x600111C")]
		public IPromise Catch(Action<Exception> onRejected)
		{
			return null;
		}

		[Token(Token = "0x600111D")]
		public IPromise<T> Catch(Func<Exception, T> onRejected)
		{
			return null;
		}

		[Token(Token = "0x600111E")]
		public IPromise<ConvertedT> Then<ConvertedT>(Func<T, IPromise<ConvertedT>> onResolved)
		{
			return null;
		}

		[Token(Token = "0x600111F")]
		public IPromise Then(Func<T, IPromise> onResolved)
		{
			return null;
		}

		[Token(Token = "0x6001120")]
		public IPromise Then(Action<T> onResolved)
		{
			return null;
		}

		[Token(Token = "0x6001121")]
		public IPromise<ConvertedT> Then<ConvertedT>(Func<T, IPromise<ConvertedT>> onResolved, Func<Exception, IPromise<ConvertedT>> onRejected)
		{
			return null;
		}

		[Token(Token = "0x6001122")]
		public IPromise Then(Func<T, IPromise> onResolved, Action<Exception> onRejected)
		{
			return null;
		}

		[Token(Token = "0x6001123")]
		public IPromise Then(Action<T> onResolved, Action<Exception> onRejected)
		{
			return null;
		}

		[Token(Token = "0x6001124")]
		public IPromise<ConvertedT> Then<ConvertedT>(Func<T, IPromise<ConvertedT>> onResolved, Func<Exception, IPromise<ConvertedT>> onRejected, Action<float> onProgress)
		{
			return null;
		}

		[Token(Token = "0x6001125")]
		public IPromise Then(Func<T, IPromise> onResolved, Action<Exception> onRejected, Action<float> onProgress)
		{
			return null;
		}

		[Token(Token = "0x6001126")]
		public IPromise Then(Action<T> onResolved, Action<Exception> onRejected, Action<float> onProgress)
		{
			return null;
		}

		[Token(Token = "0x6001127")]
		public IPromise<ConvertedT> Then<ConvertedT>(Func<T, ConvertedT> transform)
		{
			return null;
		}

		[Token(Token = "0x6001128")]
		private void ActionHandlers(IRejectable resultPromise, Action<T> resolveHandler, Action<Exception> rejectHandler)
		{
		}

		[Token(Token = "0x6001129")]
		private void ProgressHandlers(IRejectable resultPromise, Action<float> progressHandler)
		{
		}

		[Token(Token = "0x600112A")]
		public static IPromise<T0> First<T0>(params Func<IPromise<T0>>[] fns)
		{
			return null;
		}

		[Token(Token = "0x600112B")]
		public static IPromise<T0> First<T0>(IEnumerable<Func<IPromise<T0>>> fns)
		{
			return null;
		}

		[Token(Token = "0x600112C")]
		public IPromise<IEnumerable<ConvertedT>> ThenAll<ConvertedT>(Func<T, IEnumerable<IPromise<ConvertedT>>> chain)
		{
			return null;
		}

		[Token(Token = "0x600112D")]
		public IPromise ThenAll(Func<T, IEnumerable<IPromise>> chain)
		{
			return null;
		}

		[Token(Token = "0x600112E")]
		public static IPromise<IEnumerable<T>> All(params IPromise<T>[] promises)
		{
			return null;
		}

		[Token(Token = "0x600112F")]
		public static IPromise<IEnumerable<T>> All(IEnumerable<IPromise<T>> promises)
		{
			return null;
		}

		[Token(Token = "0x6001130")]
		public IPromise<ConvertedT> ThenRace<ConvertedT>(Func<T, IEnumerable<IPromise<ConvertedT>>> chain)
		{
			return null;
		}

		[Token(Token = "0x6001131")]
		public IPromise ThenRace(Func<T, IEnumerable<IPromise>> chain)
		{
			return null;
		}

		[Token(Token = "0x6001132")]
		public static IPromise<T> Race(params IPromise<T>[] promises)
		{
			return null;
		}

		[Token(Token = "0x6001133")]
		public static IPromise<T> Race(IEnumerable<IPromise<T>> promises)
		{
			return null;
		}

		[Token(Token = "0x6001134")]
		public static IPromise<T> Resolved(T promisedValue)
		{
			return null;
		}

		[Token(Token = "0x6001135")]
		public static IPromise<T> Rejected(Exception ex)
		{
			return null;
		}

		[Token(Token = "0x6001136")]
		public IPromise<T> Finally(Action onComplete)
		{
			return null;
		}

		[Token(Token = "0x6001137")]
		public IPromise ContinueWith(Func<IPromise> onComplete)
		{
			return null;
		}

		[Token(Token = "0x6001138")]
		public IPromise<ConvertedT> ContinueWith<ConvertedT>(Func<IPromise<ConvertedT>> onComplete)
		{
			return null;
		}

		[Token(Token = "0x6001139")]
		public IPromise<T> Progress(Action<float> onProgress)
		{
			return null;
		}

		[Token(Token = "0x600113A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93AD98", Offset = "0x93AD98")]
		private void <Done>b__31_0(Exception ex)
		{
		}

		[Token(Token = "0x600113B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93ADA8", Offset = "0x93ADA8")]
		private void <Done>b__32_0(Exception ex)
		{
		}

		[Token(Token = "0x600113C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93ADB8", Offset = "0x93ADB8")]
		private void <Done>b__33_0(Exception ex)
		{
		}
	}
	[Token(Token = "0x20001EB")]
	public class Promise : IPromise, IPendingPromise, IRejectable, IPromiseInfo
	{
		[Token(Token = "0x2000539")]
		public struct ResolveHandler
		{
			[Token(Token = "0x4001F75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action Callback;

			[Token(Token = "0x4001F76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public IRejectable Rejectable;
		}

		[Token(Token = "0x200053A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927878", Offset = "0x927878")]
		private sealed class <>c__DisplayClass47_0
		{
			[Token(Token = "0x4001F77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Promise resultPromise;

			[Token(Token = "0x4001F78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<Exception> onRejected;

			[Token(Token = "0x60025BE")]
			[Address(RVA = "0xBBBAD0", Offset = "0xBBBAD0", VA = "0xBBBAD0")]
			public <>c__DisplayClass47_0()
			{
			}

			[Token(Token = "0x60025BF")]
			[Address(RVA = "0xBBD28C", Offset = "0xBBD28C", VA = "0xBBD28C")]
			internal void <Catch>g__resolveHandler|0()
			{
			}

			[Token(Token = "0x60025C0")]
			[Address(RVA = "0xBBD2B8", Offset = "0xBBD2B8", VA = "0xBBD2B8")]
			internal void <Catch>b__1(Exception ex)
			{
			}

			[Token(Token = "0x60025C1")]
			[Address(RVA = "0xBBD3D0", Offset = "0xBBD3D0", VA = "0xBBD3D0")]
			internal void <Catch>b__2(float v)
			{
			}
		}

		[Token(Token = "0x200053B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927888", Offset = "0x927888")]
		private sealed class <>c__DisplayClass54_0<ConvertedT>
		{
			[Token(Token = "0x4001F79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<IPromise<ConvertedT>> onResolved;

			[Token(Token = "0x4001F7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Promise<ConvertedT> resultPromise;

			[Token(Token = "0x4001F7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<Exception, IPromise<ConvertedT>> onRejected;

			[Token(Token = "0x4001F7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<float> <>9__2;

			[Token(Token = "0x4001F7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<ConvertedT> <>9__3;

			[Token(Token = "0x4001F7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<Exception> <>9__4;

			[Token(Token = "0x4001F7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<ConvertedT> <>9__5;

			[Token(Token = "0x4001F80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action<Exception> <>9__6;

			[Token(Token = "0x60025C2")]
			public <>c__DisplayClass54_0()
			{
			}

			[Token(Token = "0x60025C3")]
			internal void <Then>b__0()
			{
			}

			[Token(Token = "0x60025C4")]
			internal void <Then>b__2(float progress)
			{
			}

			[Token(Token = "0x60025C5")]
			internal void <Then>b__3(ConvertedT chainedValue)
			{
			}

			[Token(Token = "0x60025C6")]
			internal void <Then>b__4(Exception ex)
			{
			}

			[Token(Token = "0x60025C7")]
			internal void <Then>b__1(Exception ex)
			{
			}

			[Token(Token = "0x60025C8")]
			internal void <Then>b__5(ConvertedT chainedValue)
			{
			}

			[Token(Token = "0x60025C9")]
			internal void <Then>b__6(Exception callbackEx)
			{
			}
		}

		[Token(Token = "0x200053C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927898", Offset = "0x927898")]
		private sealed class <>c__DisplayClass55_0
		{
			[Token(Token = "0x4001F81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Func<IPromise> onResolved;

			[Token(Token = "0x4001F82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Promise resultPromise;

			[Token(Token = "0x4001F83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<Exception> onRejected;

			[Token(Token = "0x4001F84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<float> <>9__2;

			[Token(Token = "0x4001F85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action <>9__3;

			[Token(Token = "0x4001F86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action<Exception> <>9__4;

			[Token(Token = "0x60025CA")]
			[Address(RVA = "0xBBC124", Offset = "0xBBC124", VA = "0xBBC124")]
			public <>c__DisplayClass55_0()
			{
			}

			[Token(Token = "0x60025CB")]
			[Address(RVA = "0xBBD40C", Offset = "0xBBD40C", VA = "0xBBD40C")]
			internal void <Then>b__0()
			{
			}

			[Token(Token = "0x60025CC")]
			[Address(RVA = "0xBBD640", Offset = "0xBBD640", VA = "0xBBD640")]
			internal void <Then>b__2(float progress)
			{
			}

			[Token(Token = "0x60025CD")]
			[Address(RVA = "0xBBD67C", Offset = "0xBBD67C", VA = "0xBBD67C")]
			internal void <Then>b__3()
			{
			}

			[Token(Token = "0x60025CE")]
			[Address(RVA = "0xBBD6A8", Offset = "0xBBD6A8", VA = "0xBBD6A8")]
			internal void <Then>b__4(Exception ex)
			{
			}

			[Token(Token = "0x60025CF")]
			[Address(RVA = "0xBBD6D4", Offset = "0xBBD6D4", VA = "0xBBD6D4")]
			internal void <Then>b__1(Exception ex)
			{
			}
		}

		[Token(Token = "0x200053D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9278A8", Offset = "0x9278A8")]
		private sealed class <>c__DisplayClass56_0
		{
			[Token(Token = "0x4001F87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action onResolved;

			[Token(Token = "0x4001F88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Promise resultPromise;

			[Token(Token = "0x4001F89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<Exception> onRejected;

			[Token(Token = "0x60025D0")]
			[Address(RVA = "0xBBC19C", Offset = "0xBBC19C", VA = "0xBBC19C")]
			public <>c__DisplayClass56_0()
			{
			}

			[Token(Token = "0x60025D1")]
			[Address(RVA = "0xBBD754", Offset = "0xBBD754", VA = "0xBBD754")]
			internal void <Then>b__0()
			{
			}

			[Token(Token = "0x60025D2")]
			[Address(RVA = "0xBBD7A0", Offset = "0xBBD7A0", VA = "0xBBD7A0")]
			internal void <Then>b__1(Exception ex)
			{
			}
		}

		[Token(Token = "0x200053E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9278B8", Offset = "0x9278B8")]
		private sealed class <>c__DisplayClass59_0
		{
			[Token(Token = "0x4001F8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Func<IEnumerable<IPromise>> chain;

			[Token(Token = "0x60025D3")]
			[Address(RVA = "0xBBC260", Offset = "0xBBC260", VA = "0xBBC260")]
			public <>c__DisplayClass59_0()
			{
			}

			[Token(Token = "0x60025D4")]
			[Address(RVA = "0xBBD838", Offset = "0xBBD838", VA = "0xBBD838")]
			internal IPromise <ThenAll>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x200053F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9278C8", Offset = "0x9278C8")]
		private sealed class <>c__DisplayClass60_0<ConvertedT>
		{
			[Token(Token = "0x4001F8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<IEnumerable<IPromise<ConvertedT>>> chain;

			[Token(Token = "0x60025D5")]
			public <>c__DisplayClass60_0()
			{
			}

			[Token(Token = "0x60025D6")]
			internal IPromise<IEnumerable<ConvertedT>> <ThenAll>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x2000540")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9278D8", Offset = "0x9278D8")]
		private sealed class <>c__DisplayClass62_0
		{
			[Token(Token = "0x4001F8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float[] progress;

			[Token(Token = "0x4001F8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Promise resultPromise;

			[Token(Token = "0x4001F8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int remainingCount;

			[Token(Token = "0x4001F8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action<Exception> <>9__3;

			[Token(Token = "0x60025D7")]
			[Address(RVA = "0xBBC48C", Offset = "0xBBC48C", VA = "0xBBC48C")]
			public <>c__DisplayClass62_0()
			{
			}

			[Token(Token = "0x60025D8")]
			[Address(RVA = "0xBBD8C8", Offset = "0xBBD8C8", VA = "0xBBD8C8")]
			internal void <All>b__0(IPromise promise, int index)
			{
			}

			[Token(Token = "0x60025D9")]
			[Address(RVA = "0xBBDBF0", Offset = "0xBBDBF0", VA = "0xBBDBF0")]
			internal void <All>b__3(Exception ex)
			{
			}
		}

		[Token(Token = "0x2000541")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9278E8", Offset = "0x9278E8")]
		private sealed class <>c__DisplayClass62_1
		{
			[Token(Token = "0x4001F90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int index;

			[Token(Token = "0x4001F91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass62_0 CS$<>8__locals1;

			[Token(Token = "0x60025DA")]
			[Address(RVA = "0xBBDBE8", Offset = "0xBBDBE8", VA = "0xBBDBE8")]
			public <>c__DisplayClass62_1()
			{
			}

			[Token(Token = "0x60025DB")]
			[Address(RVA = "0xBBDC4C", Offset = "0xBBDC4C", VA = "0xBBDC4C")]
			internal void <All>b__1(float v)
			{
			}

			[Token(Token = "0x60025DC")]
			[Address(RVA = "0xBBDD4C", Offset = "0xBBDD4C", VA = "0xBBDD4C")]
			internal void <All>b__2()
			{
			}
		}

		[Token(Token = "0x2000542")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9278F8", Offset = "0x9278F8")]
		private sealed class <>c__DisplayClass63_0
		{
			[Token(Token = "0x4001F92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Func<IEnumerable<Func<IPromise>>> chain;

			[Token(Token = "0x60025DD")]
			[Address(RVA = "0xBBC5B8", Offset = "0xBBC5B8", VA = "0xBBC5B8")]
			public <>c__DisplayClass63_0()
			{
			}

			[Token(Token = "0x60025DE")]
			[Address(RVA = "0xBBDE64", Offset = "0xBBDE64", VA = "0xBBDE64")]
			internal IPromise <ThenSequence>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x2000543")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927908", Offset = "0x927908")]
		private sealed class <>c__DisplayClass65_0
		{
			[Token(Token = "0x4001F93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int count;

			[Token(Token = "0x4001F94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Promise promise;

			[Token(Token = "0x60025DF")]
			[Address(RVA = "0xBBC8E0", Offset = "0xBBC8E0", VA = "0xBBC8E0")]
			public <>c__DisplayClass65_0()
			{
			}

			[Token(Token = "0x60025E0")]
			[Address(RVA = "0xBBDEF4", Offset = "0xBBDEF4", VA = "0xBBDEF4")]
			internal IPromise <Sequence>b__0(IPromise prevPromise, Func<IPromise> fn)
			{
				return null;
			}
		}

		[Token(Token = "0x2000544")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927918", Offset = "0x927918")]
		private sealed class <>c__DisplayClass65_1
		{
			[Token(Token = "0x4001F95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int itemSequence;

			[Token(Token = "0x4001F96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<IPromise> fn;

			[Token(Token = "0x4001F97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public <>c__DisplayClass65_0 CS$<>8__locals1;

			[Token(Token = "0x60025E1")]
			[Address(RVA = "0xBBE108", Offset = "0xBBE108", VA = "0xBBE108")]
			public <>c__DisplayClass65_1()
			{
			}

			[Token(Token = "0x60025E2")]
			[Address(RVA = "0xBBE110", Offset = "0xBBE110", VA = "0xBBE110")]
			internal IPromise <Sequence>b__1()
			{
				return null;
			}

			[Token(Token = "0x60025E3")]
			[Address(RVA = "0xBBE1D8", Offset = "0xBBE1D8", VA = "0xBBE1D8")]
			internal void <Sequence>b__2(float v)
			{
			}
		}

		[Token(Token = "0x2000545")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927928", Offset = "0x927928")]
		private sealed class <>c__DisplayClass66_0
		{
			[Token(Token = "0x4001F98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Func<IEnumerable<IPromise>> chain;

			[Token(Token = "0x60025E4")]
			[Address(RVA = "0xBBC9A4", Offset = "0xBBC9A4", VA = "0xBBC9A4")]
			public <>c__DisplayClass66_0()
			{
			}

			[Token(Token = "0x60025E5")]
			[Address(RVA = "0xBBE258", Offset = "0xBBE258", VA = "0xBBE258")]
			internal IPromise <ThenRace>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x2000546")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927938", Offset = "0x927938")]
		private sealed class <>c__DisplayClass67_0<ConvertedT>
		{
			[Token(Token = "0x4001F99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Func<IEnumerable<IPromise<ConvertedT>>> chain;

			[Token(Token = "0x60025E6")]
			public <>c__DisplayClass67_0()
			{
			}

			[Token(Token = "0x60025E7")]
			internal IPromise<ConvertedT> <ThenRace>b__0()
			{
				return null;
			}
		}

		[Token(Token = "0x2000547")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927948", Offset = "0x927948")]
		private sealed class <>c__DisplayClass69_0
		{
			[Token(Token = "0x4001F9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float[] progress;

			[Token(Token = "0x4001F9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Promise resultPromise;

			[Token(Token = "0x4001F9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<Exception> <>9__2;

			[Token(Token = "0x4001F9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action <>9__3;

			[Token(Token = "0x60025E8")]
			[Address(RVA = "0xBBCBC4", Offset = "0xBBCBC4", VA = "0xBBCBC4")]
			public <>c__DisplayClass69_0()
			{
			}

			[Token(Token = "0x60025E9")]
			[Address(RVA = "0xBBE2E8", Offset = "0xBBE2E8", VA = "0xBBE2E8")]
			internal void <Race>b__0(IPromise promise, int index)
			{
			}

			[Token(Token = "0x60025EA")]
			[Address(RVA = "0xBBE618", Offset = "0xBBE618", VA = "0xBBE618")]
			internal void <Race>b__2(Exception ex)
			{
			}

			[Token(Token = "0x60025EB")]
			[Address(RVA = "0xBBE674", Offset = "0xBBE674", VA = "0xBBE674")]
			internal void <Race>b__3()
			{
			}
		}

		[Token(Token = "0x2000548")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927958", Offset = "0x927958")]
		private sealed class <>c__DisplayClass69_1
		{
			[Token(Token = "0x4001F9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int index;

			[Token(Token = "0x4001F9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass69_0 CS$<>8__locals1;

			[Token(Token = "0x60025EC")]
			[Address(RVA = "0xBBE610", Offset = "0xBBE610", VA = "0xBBE610")]
			public <>c__DisplayClass69_1()
			{
			}

			[Token(Token = "0x60025ED")]
			[Address(RVA = "0xBBE6C8", Offset = "0xBBE6C8", VA = "0xBBE6C8")]
			internal void <Race>b__1(float v)
			{
			}
		}

		[Token(Token = "0x2000549")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927968", Offset = "0x927968")]
		private sealed class <>c__DisplayClass73_0
		{
			[Token(Token = "0x4001FA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action onComplete;

			[Token(Token = "0x4001FA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Promise promise;

			[Token(Token = "0x60025EE")]
			[Address(RVA = "0xBBCDFC", Offset = "0xBBCDFC", VA = "0xBBCDFC")]
			public <>c__DisplayClass73_0()
			{
			}

			[Token(Token = "0x60025EF")]
			[Address(RVA = "0xBBE78C", Offset = "0xBBE78C", VA = "0xBBE78C")]
			internal void <Finally>b__0(Exception e)
			{
			}
		}

		[Token(Token = "0x200054A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927978", Offset = "0x927978")]
		private sealed class <>c__DisplayClass74_0
		{
			[Token(Token = "0x4001FA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Promise promise;

			[Token(Token = "0x60025F0")]
			[Address(RVA = "0xBBCF94", Offset = "0xBBCF94", VA = "0xBBCF94")]
			public <>c__DisplayClass74_0()
			{
			}

			[Token(Token = "0x60025F1")]
			[Address(RVA = "0xBBE89C", Offset = "0xBBE89C", VA = "0xBBE89C")]
			internal void <ContinueWith>b__0(Exception e)
			{
			}
		}

		[Token(Token = "0x200054B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927988", Offset = "0x927988")]
		private sealed class <>c__DisplayClass75_0<ConvertedT>
		{
			[Token(Token = "0x4001FA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Promise promise;

			[Token(Token = "0x60025F2")]
			public <>c__DisplayClass75_0()
			{
			}

			[Token(Token = "0x60025F3")]
			internal void <ContinueWith>b__0(Exception e)
			{
			}
		}

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool EnablePromiseTracking;

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static EventHandler<ExceptionEventArgs> sm_unhandlerException;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int sm_nextPromiseId;

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal static readonly HashSet<IPromiseInfo> sm_pendingPromises;

		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Exception m_rejectionException;

		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<RejectHandler> m_rejectHandlers;

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<ResolveHandler> m_resolveHandlers;

		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ProgressHandler> m_progressHandlers;

		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92CCAC", Offset = "0x92CCAC")]
		private int <Id>k__BackingField;

		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92CCBC", Offset = "0x92CCBC")]
		private string <Name>k__BackingField;

		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92CCCC", Offset = "0x92CCCC")]
		private PromiseState <State>k__BackingField;

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static IPromise resolvedPromise;

		[Token(Token = "0x17000227")]
		public int Id
		{
			[Token(Token = "0x6001140")]
			[Address(RVA = "0xBBA67C", Offset = "0xBBA67C", VA = "0xBBA67C", Slot = "32")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93ADC8", Offset = "0x93ADC8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001141")]
			[Address(RVA = "0xBBA684", Offset = "0xBBA684", VA = "0xBBA684")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93ADD8", Offset = "0x93ADD8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000228")]
		public string Name
		{
			[Token(Token = "0x6001142")]
			[Address(RVA = "0xBBA68C", Offset = "0xBBA68C", VA = "0xBBA68C", Slot = "33")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93ADE8", Offset = "0x93ADE8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001143")]
			[Address(RVA = "0xBBA694", Offset = "0xBBA694", VA = "0xBBA694")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93ADF8", Offset = "0x93ADF8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000229")]
		public PromiseState State
		{
			[Token(Token = "0x6001144")]
			[Address(RVA = "0xBBA69C", Offset = "0xBBA69C", VA = "0xBBA69C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93AE08", Offset = "0x93AE08")]
			get
			{
				return default(PromiseState);
			}
			[Token(Token = "0x6001145")]
			[Address(RVA = "0xBBA6A4", Offset = "0xBBA6A4", VA = "0xBBA6A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93AE18", Offset = "0x93AE18")]
			private set
			{
			}
		}

		[Token(Token = "0x14000030")]
		public static event EventHandler<ExceptionEventArgs> UnhandledException
		{
			[Token(Token = "0x600113D")]
			[Address(RVA = "0xBBA434", Offset = "0xBBA434", VA = "0xBBA434")]
			add
			{
			}
			[Token(Token = "0x600113E")]
			[Address(RVA = "0xBBA524", Offset = "0xBBA524", VA = "0xBBA524")]
			remove
			{
			}
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0xBBA614", Offset = "0xBBA614", VA = "0xBBA614")]
		public static IEnumerable<IPromiseInfo> GetPendingPromises()
		{
			return null;
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0xBB8444", Offset = "0xBB8444", VA = "0xBB8444")]
		public Promise()
		{
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0xBBA71C", Offset = "0xBBA71C", VA = "0xBBA71C")]
		public Promise(Action<Action, Action<Exception>> resolver)
		{
		}

		[Token(Token = "0x6001148")]
		[Address(RVA = "0xBBAB18", Offset = "0xBBAB18", VA = "0xBBAB18")]
		private Promise(PromiseState initialState)
		{
		}

		[Token(Token = "0x6001149")]
		[Address(RVA = "0xBB8CE4", Offset = "0xBB8CE4", VA = "0xBB8CE4")]
		public void Reset()
		{
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0xBBA6AC", Offset = "0xBBA6AC", VA = "0xBBA6AC")]
		internal static int NextId()
		{
			return default(int);
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0xBBAB9C", Offset = "0xBBAB9C", VA = "0xBBAB9C")]
		private void AddRejectHandler(Action<Exception> onRejected, IRejectable rejectable)
		{
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0xBBAC40", Offset = "0xBBAC40", VA = "0xBBAC40")]
		private void AddResolveHandler(Action onResolved, IRejectable rejectable)
		{
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0xBBACE4", Offset = "0xBBACE4", VA = "0xBBACE4")]
		private void AddProgressHandler(Action<float> onProgress, IRejectable rejectable)
		{
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0xBBAD88", Offset = "0xBBAD88", VA = "0xBBAD88")]
		private void InvokeRejectHandler(Action<Exception> callback, IRejectable rejectable, Exception value)
		{
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0xBBAEEC", Offset = "0xBBAEEC", VA = "0xBBAEEC")]
		private void InvokeResolveHandler(Action callback, IRejectable rejectable)
		{
		}

		[Token(Token = "0x6001150")]
		[Address(RVA = "0xBBB040", Offset = "0xBBB040", VA = "0xBBB040")]
		private void InvokeProgressHandler(Action<float> callback, IRejectable rejectable, float progress)
		{
		}

		[Token(Token = "0x6001151")]
		[Address(RVA = "0xBBB1B0", Offset = "0xBBB1B0", VA = "0xBBB1B0")]
		private void ClearHandlers()
		{
		}

		[Token(Token = "0x6001152")]
		[Address(RVA = "0xBBB1BC", Offset = "0xBBB1BC", VA = "0xBBB1BC")]
		private void InvokeRejectHandlers(Exception ex)
		{
		}

		[Token(Token = "0x6001153")]
		[Address(RVA = "0xBBB2C0", Offset = "0xBBB2C0", VA = "0xBBB2C0")]
		private void InvokeResolveHandlers()
		{
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0xBBB3B4", Offset = "0xBBB3B4", VA = "0xBBB3B4")]
		private void InvokeProgressHandlers(float progress)
		{
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0xBBA8FC", Offset = "0xBBA8FC", VA = "0xBBA8FC", Slot = "31")]
		public void Reject(Exception ex)
		{
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0xBB8E64", Offset = "0xBB8E64", VA = "0xBB8E64", Slot = "29")]
		public void Resolve()
		{
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0xBBB4B0", Offset = "0xBBB4B0", VA = "0xBBB4B0", Slot = "30")]
		public void ReportProgress(float progress)
		{
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0xBBB668", Offset = "0xBBB668", VA = "0xBBB668", Slot = "6")]
		public void Done(Action onResolved, Action<Exception> onRejected)
		{
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0xBBB788", Offset = "0xBBB788", VA = "0xBBB788", Slot = "7")]
		public void Done(Action onResolved)
		{
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0xBBB8A8", Offset = "0xBBB8A8", VA = "0xBBB8A8", Slot = "8")]
		public void Done()
		{
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0xBBBAC8", Offset = "0xBBBAC8", VA = "0xBBBAC8", Slot = "5")]
		public IPromise WithName(string name)
		{
			return null;
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0xBBB93C", Offset = "0xBBB93C", VA = "0xBBB93C", Slot = "9")]
		public IPromise Catch(Action<Exception> onRejected)
		{
			return null;
		}

		[Token(Token = "0x600115D")]
		public IPromise<ConvertedT> Then<ConvertedT>(Func<IPromise<ConvertedT>> onResolved)
		{
			return null;
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0xBBBB84", Offset = "0xBBBB84", VA = "0xBBBB84", Slot = "11")]
		public IPromise Then(Func<IPromise> onResolved)
		{
			return null;
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0xBBB89C", Offset = "0xBBB89C", VA = "0xBBB89C", Slot = "12")]
		public IPromise Then(Action onResolved)
		{
			return null;
		}

		[Token(Token = "0x6001160")]
		public IPromise<ConvertedT> Then<ConvertedT>(Func<IPromise<ConvertedT>> onResolved, Func<Exception, IPromise<ConvertedT>> onRejected)
		{
			return null;
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0xBBC11C", Offset = "0xBBC11C", VA = "0xBBC11C", Slot = "14")]
		public IPromise Then(Func<IPromise> onResolved, Action<Exception> onRejected)
		{
			return null;
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0xBBB780", Offset = "0xBBB780", VA = "0xBBB780", Slot = "15")]
		public IPromise Then(Action onResolved, Action<Exception> onRejected)
		{
			return null;
		}

		[Token(Token = "0x6001163")]
		public IPromise<ConvertedT> Then<ConvertedT>(Func<IPromise<ConvertedT>> onResolved, Func<Exception, IPromise<ConvertedT>> onRejected, Action<float> onProgress)
		{
			return null;
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0xBBBB90", Offset = "0xBBBB90", VA = "0xBBBB90", Slot = "17")]
		public IPromise Then(Func<IPromise> onResolved, Action<Exception> onRejected, Action<float> onProgress)
		{
			return null;
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0xBBBE58", Offset = "0xBBBE58", VA = "0xBBBE58", Slot = "18")]
		public IPromise Then(Action onResolved, Action<Exception> onRejected, Action<float> onProgress)
		{
			return null;
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0xBBBAD8", Offset = "0xBBBAD8", VA = "0xBBBAD8")]
		private void ActionHandlers(IRejectable resultPromise, Action resolveHandler, Action<Exception> rejectHandler)
		{
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0xBBBB68", Offset = "0xBBBB68", VA = "0xBBBB68")]
		private void ProgressHandlers(IRejectable resultPromise, Action<float> progressHandler)
		{
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0xBBC1A4", Offset = "0xBBC1A4", VA = "0xBBC1A4", Slot = "19")]
		public IPromise ThenAll(Func<IEnumerable<IPromise>> chain)
		{
			return null;
		}

		[Token(Token = "0x6001169")]
		public IPromise<IEnumerable<ConvertedT>> ThenAll<ConvertedT>(Func<IEnumerable<IPromise<ConvertedT>>> chain)
		{
			return null;
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0xBBC268", Offset = "0xBBC268", VA = "0xBBC268")]
		public static IPromise All(params IPromise[] promises)
		{
			return null;
		}

		[Token(Token = "0x600116B")]
		[Address(RVA = "0xBBC2CC", Offset = "0xBBC2CC", VA = "0xBBC2CC")]
		public static IPromise All(IEnumerable<IPromise> promises)
		{
			return null;
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0xBBC4FC", Offset = "0xBBC4FC", VA = "0xBBC4FC", Slot = "21")]
		public IPromise ThenSequence(Func<IEnumerable<Func<IPromise>>> chain)
		{
			return null;
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0xBBC5C0", Offset = "0xBBC5C0", VA = "0xBBC5C0")]
		public static IPromise Sequence(params Func<IPromise>[] fns)
		{
			return null;
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0xBBC624", Offset = "0xBBC624", VA = "0xBBC624")]
		public static IPromise Sequence(IEnumerable<Func<IPromise>> fns)
		{
			return null;
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0xBBC8E8", Offset = "0xBBC8E8", VA = "0xBBC8E8", Slot = "22")]
		public IPromise ThenRace(Func<IEnumerable<IPromise>> chain)
		{
			return null;
		}

		[Token(Token = "0x6001170")]
		public IPromise<ConvertedT> ThenRace<ConvertedT>(Func<IEnumerable<IPromise<ConvertedT>>> chain)
		{
			return null;
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0xBBC9AC", Offset = "0xBBC9AC", VA = "0xBBC9AC")]
		public static IPromise Race(params IPromise[] promises)
		{
			return null;
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0xBBCA10", Offset = "0xBBCA10", VA = "0xBBCA10")]
		public static IPromise Race(IEnumerable<IPromise> promises)
		{
			return null;
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0xBBC494", Offset = "0xBBC494", VA = "0xBBC494")]
		public static IPromise Resolved()
		{
			return null;
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0xBBC12C", Offset = "0xBBC12C", VA = "0xBBC12C")]
		public static IPromise Rejected(Exception ex)
		{
			return null;
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0xBBCBCC", Offset = "0xBBCBCC", VA = "0xBBCBCC", Slot = "24")]
		public IPromise Finally(Action onComplete)
		{
			return null;
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0xBBCE04", Offset = "0xBBCE04", VA = "0xBBCE04", Slot = "25")]
		public IPromise ContinueWith(Func<IPromise> onComplete)
		{
			return null;
		}

		[Token(Token = "0x6001177")]
		public IPromise<ConvertedT> ContinueWith<ConvertedT>(Func<IPromise<ConvertedT>> onComplete)
		{
			return null;
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0xBBCF9C", Offset = "0xBBCF9C", VA = "0xBBCF9C", Slot = "27")]
		public IPromise Progress(Action<float> onProgress)
		{
			return null;
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0xBBCFD4", Offset = "0xBBCFD4", VA = "0xBBCFD4")]
		internal static void PropagateUnhandledException(object sender, Exception ex)
		{
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0xBBD130", Offset = "0xBBD130", VA = "0xBBD130")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93AE28", Offset = "0x93AE28")]
		private void <Done>b__43_0(Exception ex)
		{
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0xBBD1A4", Offset = "0xBBD1A4", VA = "0xBBD1A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93AE38", Offset = "0x93AE38")]
		private void <Done>b__44_0(Exception ex)
		{
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0xBBD218", Offset = "0xBBD218", VA = "0xBBD218")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93AE48", Offset = "0x93AE48")]
		private void <Done>b__45_0(Exception ex)
		{
		}
	}
	[Token(Token = "0x20001EC")]
	public static class PromiseExtensions
	{
		[Token(Token = "0x600117E")]
		[Address(RVA = "0xBBE8C8", Offset = "0xBBE8C8", VA = "0xBBE8C8")]
		public static bool IsPending(this Promise promise)
		{
			return default(bool);
		}

		[Token(Token = "0x600117F")]
		public static bool IsPending<T>(this Promise<T> promise)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001ED")]
	public enum PromiseState
	{
		[Token(Token = "0x4000D4A")]
		Pending,
		[Token(Token = "0x4000D4B")]
		Rejected,
		[Token(Token = "0x4000D4C")]
		Resolved
	}
	[Token(Token = "0x20001EE")]
	public struct RejectHandler
	{
		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action<Exception> Callback;

		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IRejectable Rejectable;
	}
}
namespace Cortopia.Scripts.Utils.CustomArrays
{
	[Serializable]
	[Token(Token = "0x20001EF")]
	public class StringArray
	{
		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] Values;

		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Count;

		[Token(Token = "0x6001180")]
		[Address(RVA = "0xBB72C8", Offset = "0xBB72C8", VA = "0xBB72C8")]
		public StringArray(int length)
		{
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0xBB7338", Offset = "0xBB7338", VA = "0xBB7338")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0xBB7428", Offset = "0xBB7428", VA = "0xBB7428")]
		public void AddRange(string[] values)
		{
		}
	}
}
namespace Cortopia.Scripts.Utils.Conditions
{
	[Serializable]
	[Token(Token = "0x20001F0")]
	public class MultiCondition : Condition
	{
		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ScriptableVariable CompareVariable;

		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent OnConditionMet;

		[Token(Token = "0x6001183")]
		[Address(RVA = "0xBB6F38", Offset = "0xBB6F38", VA = "0xBB6F38")]
		public MultiCondition()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001F1")]
	public class Condition
	{
		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private ConditionType m_conditionType;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private ComparisonType m_comparison;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_intValue;

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_floatValue;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string m_stringValue;

		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_boolValue;

		[Token(Token = "0x6001184")]
		[Address(RVA = "0xBB4F94", Offset = "0xBB4F94", VA = "0xBB4F94")]
		public bool IsMet(object compareObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0xBB5A5C", Offset = "0xBB5A5C", VA = "0xBB5A5C")]
		public bool IsMet(int compareObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0xBB5A6C", Offset = "0xBB5A6C", VA = "0xBB5A6C")]
		public bool IsMet(float compareObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0xBB5A7C", Offset = "0xBB5A7C", VA = "0xBB5A7C")]
		public bool IsMet(string compareObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0xBB5A90", Offset = "0xBB5A90", VA = "0xBB5A90")]
		public bool IsMet(bool compareObject)
		{
			return default(bool);
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0xBB5AA4", Offset = "0xBB5AA4", VA = "0xBB5AA4")]
		public Condition()
		{
		}
	}
	[Token(Token = "0x20001F2")]
	public class ConditionComparer : MonoBehaviour
	{
		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Condition m_condition;

		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92CD4C", Offset = "0x92CD4C")]
		[SerializeField]
		private CortopiaEventType m_eventType;

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ScriptableEvent m_onConditionMet;

		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent m_onConditionMetUnity;

		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private object m_value;

		[Token(Token = "0x600118A")]
		[Address(RVA = "0xBB5B0C", Offset = "0xBB5B0C", VA = "0xBB5B0C")]
		public void CheckCondition(object compareValue)
		{
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0xBB5BF0", Offset = "0xBB5BF0", VA = "0xBB5BF0")]
		private void ConditionMet()
		{
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0xBB5D4C", Offset = "0xBB5D4C", VA = "0xBB5D4C")]
		public ConditionComparer()
		{
		}
	}
	[Token(Token = "0x20001F3")]
	public static class ConditionUtils
	{
		[Token(Token = "0x600118D")]
		[Address(RVA = "0xBB5DB4", Offset = "0xBB5DB4", VA = "0xBB5DB4")]
		public static bool IsComparisonCorrect(object lhs, ComparisonType comparison, object rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0xBB51C8", Offset = "0xBB51C8", VA = "0xBB51C8")]
		public static bool IsComparisonCorrect(int lhs, ComparisonType comparison, int rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x600118F")]
		[Address(RVA = "0xBB5324", Offset = "0xBB5324", VA = "0xBB5324")]
		public static bool IsComparisonCorrect(float lhs, ComparisonType comparison, float rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0xBB5480", Offset = "0xBB5480", VA = "0xBB5480")]
		public static bool IsComparisonCorrect(string lhs, ComparisonType comparison, string rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0xBB57DC", Offset = "0xBB57DC", VA = "0xBB57DC")]
		public static bool IsComparisonCorrect(bool lhs, ComparisonType comparison, bool rhs)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20001F4")]
	public enum ConditionType
	{
		[Token(Token = "0x4000D5F")]
		Int,
		[Token(Token = "0x4000D60")]
		Float,
		[Token(Token = "0x4000D61")]
		String,
		[Token(Token = "0x4000D62")]
		Bool,
		[Token(Token = "0x4000D63")]
		ScriptableVariable
	}
	[Serializable]
	[Token(Token = "0x20001F5")]
	public class GlobalCondition
	{
		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92CDB8", Offset = "0x92CDB8")]
		[SerializeField]
		private ConditionType m_variableType;

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private IntVariable m_intVariable;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private FloatVariable m_floatVariable;

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private StringVariable m_stringVariable;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private BoolVariable m_boolVariable;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ScriptableVariable m_scriptableVariable;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92CE54", Offset = "0x92CE54")]
		[SerializeField]
		private ComparisonType m_comparison;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private int m_compareInt;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float m_compareFloat;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private string m_compareString;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private bool m_compareBool;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ScriptableVariable m_compareScriptableVariable;

		[Token(Token = "0x6001192")]
		[Address(RVA = "0xBB64E4", Offset = "0xBB64E4", VA = "0xBB64E4")]
		public void AddConditionValueChangedCallback(Action onValueChanged)
		{
		}

		[Token(Token = "0x6001193")]
		[Address(RVA = "0xBB6614", Offset = "0xBB6614", VA = "0xBB6614")]
		public void RemoveConditionValueChangedCallback(Action onValueChanged)
		{
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0xBB6744", Offset = "0xBB6744", VA = "0xBB6744")]
		public bool IsConditionMet()
		{
			return default(bool);
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0xBB6908", Offset = "0xBB6908", VA = "0xBB6908")]
		private bool IsApplicationPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0xBB6910", Offset = "0xBB6910", VA = "0xBB6910")]
		public GlobalCondition()
		{
		}
	}
	[Token(Token = "0x20001F6")]
	public class GlobalConditionComparer : RoomBehaviour
	{
		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x92CEF0", Offset = "0x92CEF0")]
		private bool m_compareInUpdate;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x92CF3C", Offset = "0x92CF3C")]
		private bool m_compareInInitialize;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x92CF88", Offset = "0x92CF88")]
		private bool m_registerCallbackOnConditionValueChange;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92CFD4", Offset = "0x92CFD4")]
		[SerializeField]
		private GlobalCondition[] m_globalConditions;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92D020", Offset = "0x92D020")]
		[SerializeField]
		private bool m_useConditionMetEvent;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent m_onConditionMet;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool m_useConditionNotMetEvent;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UnityEvent m_onConditionNotMet;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_isConditionMet;

		[Token(Token = "0x6001197")]
		[Address(RVA = "0xBB6980", Offset = "0xBB6980", VA = "0xBB6980")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0xBB6A78", Offset = "0xBB6A78", VA = "0xBB6A78")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0xBB6B70", Offset = "0xBB6B70", VA = "0xBB6B70")]
		private void Update()
		{
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0xBB6C60", Offset = "0xBB6C60", VA = "0xBB6C60", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0xBB6B80", Offset = "0xBB6B80", VA = "0xBB6B80")]
		public void CheckConditions()
		{
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0xBB6C70", Offset = "0xBB6C70", VA = "0xBB6C70")]
		public GlobalConditionComparer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001F7")]
	public class InventoryCondition
	{
		[Token(Token = "0x200054C")]
		public enum InventoryConditionType
		{
			[Token(Token = "0x4001FA5")]
			Count,
			[Token(Token = "0x4001FA6")]
			Contains
		}

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private InventoryItemData m_itemData;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92D0AC", Offset = "0x92D0AC")]
		[SerializeField]
		private InventoryConditionType m_conditionType;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private ComparisonType m_comparison;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int m_count;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool m_hasItem;

		[Token(Token = "0x1700022A")]
		public int ItemID
		{
			[Token(Token = "0x600119D")]
			[Address(RVA = "0xBB6D10", Offset = "0xBB6D10", VA = "0xBB6D10")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0xBB6D40", Offset = "0xBB6D40", VA = "0xBB6D40")]
		public bool IsMet()
		{
			return default(bool);
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0xBB6F20", Offset = "0xBB6F20", VA = "0xBB6F20")]
		private bool IsApplicationPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0xBB6F28", Offset = "0xBB6F28", VA = "0xBB6F28")]
		public InventoryCondition()
		{
		}
	}
	[Token(Token = "0x20001F8")]
	public class MultiGlobalConditionComparer : RoomBehaviour
	{
		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x92D128", Offset = "0x92D128")]
		private ScriptableVariable m_globalVariable;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_compareInInitialize;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool m_registerCallbackOnConditionValueChange;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[SerializeField]
		private bool m_breakOnFirstConditionMet;

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MultiCondition[] m_conditions;

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0xBB6F9C", Offset = "0xBB6F9C", VA = "0xBB6F9C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0xBB7044", Offset = "0xBB7044", VA = "0xBB7044")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0xBB70EC", Offset = "0xBB70EC", VA = "0xBB70EC", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0xBB70FC", Offset = "0xBB70FC", VA = "0xBB70FC")]
		public void CompareConditionsAndRaiseEvent()
		{
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0xBB7258", Offset = "0xBB7258", VA = "0xBB7258")]
		public MultiGlobalConditionComparer()
		{
		}
	}
}
namespace Cortopia.Scripts.Tutorial
{
	[Serializable]
	[Token(Token = "0x20001F9")]
	public class PlatformSpecificInstruction
	{
		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private InputDeviceType m_inputDevice;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_instruction;

		[Token(Token = "0x1700022B")]
		public InputDeviceType InputDevice
		{
			[Token(Token = "0x60011A6")]
			[Address(RVA = "0xB0788C", Offset = "0xB0788C", VA = "0xB0788C")]
			get
			{
				return default(InputDeviceType);
			}
		}

		[Token(Token = "0x1700022C")]
		public GameObject Instruction
		{
			[Token(Token = "0x60011A7")]
			[Address(RVA = "0xB07894", Offset = "0xB07894", VA = "0xB07894")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0xB0789C", Offset = "0xB0789C", VA = "0xB0789C")]
		public PlatformSpecificInstruction()
		{
		}
	}
	[Token(Token = "0x20001FA")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9261E8", Offset = "0x9261E8")]
	public class TutorialScroll : MonoBehaviour
	{
		[Token(Token = "0x200054D")]
		private enum ScrollState
		{
			[Token(Token = "0x4001FA8")]
			Opening,
			[Token(Token = "0x4001FA9")]
			Open,
			[Token(Token = "0x4001FAA")]
			Closing,
			[Token(Token = "0x4001FAB")]
			Closed
		}

		[Token(Token = "0x200054E")]
		private enum OpeningType
		{
			[Token(Token = "0x4001FAD")]
			Left,
			[Token(Token = "0x4001FAE")]
			Right,
			[Token(Token = "0x4001FAF")]
			FadeIn
		}

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly int m_showScrollParam;

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_animationDuration;

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Ease m_openingEaseType;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Ease m_closingEaseType;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private OpeningType m_openingType;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private PlatformSpecificInstruction[] m_platormSpecificInstructions;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject m_defaultInstruction;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ScrollState m_state;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private InputDeviceType m_inputDeviceType;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float m_animationCurveTime;

		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 m_closedPosition;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 m_openPosition;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private TweenCallback m_onCompleteAction;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Sequence m_sequence;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool m_deactivatedFromBehaviour;

		[Token(Token = "0x4000D95")]
		private const float SlideDistance = 1f;

		[Token(Token = "0x1700022D")]
		public bool IsShowing
		{
			[Token(Token = "0x60011A9")]
			[Address(RVA = "0xB078AC", Offset = "0xB078AC", VA = "0xB078AC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0xB078BC", Offset = "0xB078BC", VA = "0xB078BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0xB07E10", Offset = "0xB07E10", VA = "0xB07E10")]
		private void Start()
		{
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0xB07A58", Offset = "0xB07A58", VA = "0xB07A58")]
		private void HandlePlatformSpecificInstructions()
		{
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0xB07E54", Offset = "0xB07E54", VA = "0xB07E54")]
		public void Open()
		{
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0xAF9F4C", Offset = "0xAF9F4C", VA = "0xAF9F4C")]
		public void Close()
		{
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0xB08074", Offset = "0xB08074", VA = "0xB08074")]
		private bool IsNonPlatformSpecific()
		{
			return default(bool);
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0xB07C4C", Offset = "0xB07C4C", VA = "0xB07C4C")]
		private Vector3 GetTargetClosedPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0xB07EB8", Offset = "0xB07EB8", VA = "0xB07EB8")]
		private void StartAnimating(bool isOpening)
		{
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0xB080A8", Offset = "0xB080A8", VA = "0xB080A8")]
		private Vector3 GetTargetPosition(bool isOpening)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0xB080F8", Offset = "0xB080F8", VA = "0xB080F8")]
		private float GetTargetAlpha(bool isOpening)
		{
			return default(float);
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0xB080E0", Offset = "0xB080E0", VA = "0xB080E0")]
		private Ease GetEaseType(bool isOpening)
		{
			return default(Ease);
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0xB0810C", Offset = "0xB0810C", VA = "0xB0810C")]
		private void OnOpeningAnimComplete()
		{
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0xB08118", Offset = "0xB08118", VA = "0xB08118")]
		private void OnClosingAnimComplete()
		{
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0xB08158", Offset = "0xB08158", VA = "0xB08158")]
		public void Deactivate()
		{
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0xB08198", Offset = "0xB08198", VA = "0xB08198")]
		public TutorialScroll()
		{
		}
	}
}
namespace Cortopia.Scripts.Timeline
{
	[Serializable]
	[Token(Token = "0x20001FB")]
	public class MonologueBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VoiceLine VoiceLine;

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0xB06034", Offset = "0xB06034", VA = "0xB06034")]
		public void PlayVoiceLines(CharacterData character)
		{
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0xB060E4", Offset = "0xB060E4", VA = "0xB060E4")]
		public MonologueBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001FC")]
	public class MonologueClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VoiceLine VoiceLine;

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MonologueBehaviour m_template;

		[Token(Token = "0x1700022E")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x60011BB")]
			[Address(RVA = "0xB060EC", Offset = "0xB060EC", VA = "0xB060EC", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x1700022F")]
		public override double duration
		{
			[Token(Token = "0x60011BC")]
			[Address(RVA = "0xB060F4", Offset = "0xB060F4", VA = "0xB060F4", Slot = "7")]
			get
			{
				return default(double);
			}
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0xB061F0", Offset = "0xB061F0", VA = "0xB061F0", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0xB062D4", Offset = "0xB062D4", VA = "0xB062D4")]
		private void UpdateSubtitles()
		{
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0xB062D8", Offset = "0xB062D8", VA = "0xB062D8")]
		public MonologueClip()
		{
		}
	}
	[Token(Token = "0x20001FD")]
	public class MonologueMixerBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool[] m_activeVOs;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_clipCount;

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0xB06340", Offset = "0xB06340", VA = "0xB06340", Slot = "15")]
		public override void OnPlayableCreate(Playable playable)
		{
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0xB063C8", Offset = "0xB063C8", VA = "0xB063C8", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0xB065FC", Offset = "0xB065FC", VA = "0xB065FC")]
		public MonologueMixerBehaviour()
		{
		}
	}
	[Token(Token = "0x20001FE")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x92624C", Offset = "0x92624C")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x92624C", Offset = "0x92624C")]
	[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x92624C", Offset = "0x92624C")]
	public class MonologueTrack : TrackAsset
	{
		[Token(Token = "0x60011C3")]
		[Address(RVA = "0xB06604", Offset = "0xB06604", VA = "0xB06604", Slot = "14")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0xB0669C", Offset = "0xB0669C", VA = "0xB0669C")]
		public MonologueTrack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001FF")]
	public class TimelineEventBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ScriptableVariable ScriptableVariable;

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ScriptableEvent ScriptableEvent;

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0xB06974", Offset = "0xB06974", VA = "0xB06974")]
		public void RaiseEvent()
		{
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0xB075C4", Offset = "0xB075C4", VA = "0xB075C4")]
		public TimelineEventBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000200")]
	public class TimelineEventClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ExposedReference<ScriptableVariable> Variable;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ExposedReference<ScriptableEvent> Event;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TimelineEventBehaviour m_template;

		[Token(Token = "0x17000230")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x60011C7")]
			[Address(RVA = "0xB075CC", Offset = "0xB075CC", VA = "0xB075CC", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0xB075D4", Offset = "0xB075D4", VA = "0xB075D4", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0xB07724", Offset = "0xB07724", VA = "0xB07724")]
		public TimelineEventClip()
		{
		}
	}
	[Token(Token = "0x2000201")]
	public class TimeLineEventMixerBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool[] m_activeEvents;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_clipCount;

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0xB06704", Offset = "0xB06704", VA = "0xB06704", Slot = "15")]
		public override void OnPlayableCreate(Playable playable)
		{
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0xB0678C", Offset = "0xB0678C", VA = "0xB0678C", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0xB069A8", Offset = "0xB069A8", VA = "0xB069A8")]
		public TimeLineEventMixerBehaviour()
		{
		}
	}
	[Token(Token = "0x2000202")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x9262F4", Offset = "0x9262F4")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x9262F4", Offset = "0x9262F4")]
	public class TimelineEventTrack : TrackAsset
	{
		[Token(Token = "0x60011CD")]
		[Address(RVA = "0xB0778C", Offset = "0xB0778C", VA = "0xB0778C", Slot = "14")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0xB07824", Offset = "0xB07824", VA = "0xB07824")]
		public TimelineEventTrack()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000203")]
	public class TimeMachineBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x200054F")]
		public enum TimeMachineAction
		{
			[Token(Token = "0x4001FB1")]
			Marker,
			[Token(Token = "0x4001FB2")]
			JumpToMarker
		}

		[Token(Token = "0x2000550")]
		public enum TimeMachineCondition
		{
			[Token(Token = "0x4001FB4")]
			Always,
			[Token(Token = "0x4001FB5")]
			ScriptableBool
		}

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TimeMachineAction Action;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TimeMachineCondition Condition;

		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string MarkerToJumpTo;

		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string MarkerLabel;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BoolVariable ScriptableBool;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool ScriptableBoolCondition;

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0xB069B0", Offset = "0xB069B0", VA = "0xB069B0")]
		public bool ConditionMet()
		{
			return default(bool);
		}

		[Token(Token = "0x60011D0")]
		[Address(RVA = "0xB06B08", Offset = "0xB06B08", VA = "0xB06B08")]
		public TimeMachineBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000204")]
	public class TimeMachineClip : PlayableAsset, ITimelineClipAsset
	{
		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TimeMachineBehaviour.TimeMachineAction Action;

		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string MarkerLabel;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TimeMachineBehaviour.TimeMachineCondition Condition;

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string MarkerToJumpTo;

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ExposedReference<BoolVariable> ScriptableBool;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool ScriptableBoolCondition;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private TimeMachineBehaviour m_template;

		[Token(Token = "0x17000231")]
		public ClipCaps clipCaps
		{
			[Token(Token = "0x60011D1")]
			[Address(RVA = "0xB06B10", Offset = "0xB06B10", VA = "0xB06B10", Slot = "9")]
			get
			{
				return default(ClipCaps);
			}
		}

		[Token(Token = "0x60011D2")]
		[Address(RVA = "0xB06B18", Offset = "0xB06B18", VA = "0xB06B18", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
		{
			return default(Playable);
		}

		[Token(Token = "0x60011D3")]
		[Address(RVA = "0xB06CB8", Offset = "0xB06CB8", VA = "0xB06CB8")]
		public TimeMachineClip()
		{
		}
	}
	[Token(Token = "0x2000205")]
	public class TimeMachineMixerBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Dictionary<string, double> MarkerClips;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PlayableDirector m_director;

		[Token(Token = "0x60011D4")]
		[Address(RVA = "0xB06D40", Offset = "0xB06D40", VA = "0xB06D40", Slot = "15")]
		public override void OnPlayableCreate(Playable playable)
		{
		}

		[Token(Token = "0x60011D5")]
		[Address(RVA = "0xB06E04", Offset = "0xB06E04", VA = "0xB06E04", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0xB07078", Offset = "0xB07078", VA = "0xB07078")]
		public TimeMachineMixerBehaviour()
		{
		}
	}
	[Token(Token = "0x2000206")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x926378", Offset = "0x926378")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x926378", Offset = "0x926378")]
	public class TimeMachineTrack : TrackAsset
	{
		[Token(Token = "0x60011D7")]
		[Address(RVA = "0xB07080", Offset = "0xB07080", VA = "0xB07080", Slot = "14")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0xB0755C", Offset = "0xB0755C", VA = "0xB0755C")]
		public TimeMachineTrack()
		{
		}
	}
}
namespace Cortopia.Scripts.ScriptableVariables
{
	[Token(Token = "0x2000207")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9263FC", Offset = "0x9263FC")]
	public class AudioClipVariable : ScriptableVariable
	{
		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip m_audioClip;

		[Token(Token = "0x17000232")]
		public AudioClip Value
		{
			[Token(Token = "0x60011D9")]
			[Address(RVA = "0xB04C14", Offset = "0xB04C14", VA = "0xB04C14")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011DA")]
			[Address(RVA = "0xB04C1C", Offset = "0xB04C1C", VA = "0xB04C1C")]
			set
			{
			}
		}

		[Token(Token = "0x17000233")]
		public override object ObjectValue
		{
			[Token(Token = "0x60011DB")]
			[Address(RVA = "0xB04CD4", Offset = "0xB04CD4", VA = "0xB04CD4", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0xB04CDC", Offset = "0xB04CDC", VA = "0xB04CDC", Slot = "9")]
		public override void SetDefaultValue()
		{
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0xB04CE0", Offset = "0xB04CE0", VA = "0xB04CE0", Slot = "10")]
		public override void ResetDefaultValue()
		{
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0xB04CE4", Offset = "0xB04CE4", VA = "0xB04CE4", Slot = "8")]
		public override void Deserialize(IReadSave read)
		{
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0xB04CE8", Offset = "0xB04CE8", VA = "0xB04CE8", Slot = "7")]
		public override void Serialize(IWriteSave write)
		{
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0xB04CEC", Offset = "0xB04CEC", VA = "0xB04CEC")]
		public AudioClipVariable()
		{
		}
	}
	[Token(Token = "0x2000208")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x92646C", Offset = "0x92646C")]
	public class BoolVariable : ScriptableVariable
	{
		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SavableBool m_bool;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_defaultBool;

		[Token(Token = "0x17000234")]
		public bool Value
		{
			[Token(Token = "0x60011E1")]
			[Address(RVA = "0xB04CFC", Offset = "0xB04CFC", VA = "0xB04CFC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011E2")]
			[Address(RVA = "0xB04D28", Offset = "0xB04D28", VA = "0xB04D28")]
			set
			{
			}
		}

		[Token(Token = "0x17000235")]
		public override object ObjectValue
		{
			[Token(Token = "0x60011E3")]
			[Address(RVA = "0xB04DA8", Offset = "0xB04DA8", VA = "0xB04DA8", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011E4")]
		[Address(RVA = "0xB04E1C", Offset = "0xB04E1C", VA = "0xB04E1C", Slot = "9")]
		public override void SetDefaultValue()
		{
		}

		[Token(Token = "0x60011E5")]
		[Address(RVA = "0xB04E50", Offset = "0xB04E50", VA = "0xB04E50", Slot = "10")]
		public override void ResetDefaultValue()
		{
		}

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0xB04E80", Offset = "0xB04E80", VA = "0xB04E80", Slot = "8")]
		public override void Deserialize(IReadSave read)
		{
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0xB04F84", Offset = "0xB04F84", VA = "0xB04F84", Slot = "7")]
		public override void Serialize(IWriteSave write)
		{
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0xB05078", Offset = "0xB05078", VA = "0xB05078")]
		public static implicit operator bool(BoolVariable boolVariable)
		{
			return default(bool);
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0xB050B0", Offset = "0xB050B0", VA = "0xB050B0")]
		public static BoolVariable CreateInstance(bool value)
		{
			return null;
		}

		[Token(Token = "0x60011EA")]
		[Address(RVA = "0xB0511C", Offset = "0xB0511C", VA = "0xB0511C")]
		public BoolVariable()
		{
		}
	}
	[Token(Token = "0x2000209")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9264DC", Offset = "0x9264DC")]
	public class FloatVariable : ScriptableVariable
	{
		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SavableFloat m_float;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_defaultFloat;

		[Token(Token = "0x17000236")]
		public float Value
		{
			[Token(Token = "0x60011EB")]
			[Address(RVA = "0xB05188", Offset = "0xB05188", VA = "0xB05188")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60011EC")]
			[Address(RVA = "0xB051B4", Offset = "0xB051B4", VA = "0xB051B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000237")]
		public override object ObjectValue
		{
			[Token(Token = "0x60011ED")]
			[Address(RVA = "0xB05228", Offset = "0xB05228", VA = "0xB05228", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0xB0529C", Offset = "0xB0529C", VA = "0xB0529C", Slot = "9")]
		public override void SetDefaultValue()
		{
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0xB052D0", Offset = "0xB052D0", VA = "0xB052D0", Slot = "10")]
		public override void ResetDefaultValue()
		{
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0xB05300", Offset = "0xB05300", VA = "0xB05300", Slot = "8")]
		public override void Deserialize(IReadSave read)
		{
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0xB05404", Offset = "0xB05404", VA = "0xB05404", Slot = "7")]
		public override void Serialize(IWriteSave write)
		{
		}

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0xB054F8", Offset = "0xB054F8", VA = "0xB054F8")]
		public static implicit operator float(FloatVariable floatVariable)
		{
			return default(float);
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0xB05530", Offset = "0xB05530", VA = "0xB05530")]
		public static FloatVariable CreateInstance(float value)
		{
			return null;
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0xB055A4", Offset = "0xB055A4", VA = "0xB055A4")]
		public FloatVariable()
		{
		}
	}
	[Token(Token = "0x200020A")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x92654C", Offset = "0x92654C")]
	public class IntVariable : ScriptableVariable
	{
		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SavableInt m_int;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int m_defaultInt;

		[Token(Token = "0x17000238")]
		public int Value
		{
			[Token(Token = "0x60011F5")]
			[Address(RVA = "0xAFF6C8", Offset = "0xAFF6C8", VA = "0xAFF6C8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60011F6")]
			[Address(RVA = "0xB01980", Offset = "0xB01980", VA = "0xB01980")]
			set
			{
			}
		}

		[Token(Token = "0x17000239")]
		public override object ObjectValue
		{
			[Token(Token = "0x60011F7")]
			[Address(RVA = "0xB05610", Offset = "0xB05610", VA = "0xB05610", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0xB05684", Offset = "0xB05684", VA = "0xB05684", Slot = "9")]
		public override void SetDefaultValue()
		{
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0xB056B8", Offset = "0xB056B8", VA = "0xB056B8", Slot = "10")]
		public override void ResetDefaultValue()
		{
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0xB056E8", Offset = "0xB056E8", VA = "0xB056E8", Slot = "8")]
		public override void Deserialize(IReadSave read)
		{
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0xB057EC", Offset = "0xB057EC", VA = "0xB057EC", Slot = "7")]
		public override void Serialize(IWriteSave write)
		{
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0xB058E0", Offset = "0xB058E0", VA = "0xB058E0")]
		public static implicit operator int(IntVariable intVariable)
		{
			return default(int);
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0xB05918", Offset = "0xB05918", VA = "0xB05918")]
		public static IntVariable CreateInstance(int value)
		{
			return null;
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0xB05984", Offset = "0xB05984", VA = "0xB05984")]
		public IntVariable()
		{
		}
	}
	[Token(Token = "0x200020B")]
	public abstract class ScriptableVariable : ScriptableObject, ISavable
	{
		[Token(Token = "0x1700023A")]
		public abstract object ObjectValue
		{
			[Token(Token = "0x6001201")]
			get;
		}

		[Token(Token = "0x14000031")]
		public event Action OnValueChanged
		{
			[Token(Token = "0x60011FF")]
			[Address(RVA = "0xB059F0", Offset = "0xB059F0", VA = "0xB059F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93AE78", Offset = "0x93AE78")]
			add
			{
			}
			[Token(Token = "0x6001200")]
			[Address(RVA = "0xB05ADC", Offset = "0xB05ADC", VA = "0xB05ADC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93AE88", Offset = "0x93AE88")]
			remove
			{
			}
		}

		[Token(Token = "0x6001202")]
		public abstract void Serialize(IWriteSave save);

		[Token(Token = "0x6001203")]
		public abstract void Deserialize(IReadSave save);

		[Token(Token = "0x6001204")]
		public abstract void SetDefaultValue();

		[Token(Token = "0x6001205")]
		public abstract void ResetDefaultValue();

		[Token(Token = "0x6001206")]
		[Address(RVA = "0xB04CC0", Offset = "0xB04CC0", VA = "0xB04CC0")]
		protected void ValueChanged()
		{
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0xB04CF4", Offset = "0xB04CF4", VA = "0xB04CF4")]
		protected ScriptableVariable()
		{
		}
	}
	[Token(Token = "0x200020C")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9265BC", Offset = "0x9265BC")]
	public class StringVariable : ScriptableVariable
	{
		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SavableString m_string;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string m_defaultString;

		[Token(Token = "0x1700023B")]
		public string Value
		{
			[Token(Token = "0x6001208")]
			[Address(RVA = "0xB05BC8", Offset = "0xB05BC8", VA = "0xB05BC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001209")]
			[Address(RVA = "0xB05BF4", Offset = "0xB05BF4", VA = "0xB05BF4")]
			set
			{
			}
		}

		[Token(Token = "0x1700023C")]
		public override object ObjectValue
		{
			[Token(Token = "0x600120A")]
			[Address(RVA = "0xB05C70", Offset = "0xB05C70", VA = "0xB05C70", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0xB05C9C", Offset = "0xB05C9C", VA = "0xB05C9C", Slot = "9")]
		public override void SetDefaultValue()
		{
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0xB05CD0", Offset = "0xB05CD0", VA = "0xB05CD0", Slot = "10")]
		public override void ResetDefaultValue()
		{
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0xB05CFC", Offset = "0xB05CFC", VA = "0xB05CFC", Slot = "8")]
		public override void Deserialize(IReadSave read)
		{
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0xB05E00", Offset = "0xB05E00", VA = "0xB05E00", Slot = "7")]
		public override void Serialize(IWriteSave write)
		{
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0xB05EF4", Offset = "0xB05EF4", VA = "0xB05EF4")]
		public static implicit operator string(StringVariable stringVariable)
		{
			return null;
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0xB05F2C", Offset = "0xB05F2C", VA = "0xB05F2C")]
		public StringVariable()
		{
		}
	}
	[Token(Token = "0x200020D")]
	public enum UsableVariableType
	{
		[Token(Token = "0x4000DBC")]
		Internal,
		[Token(Token = "0x4000DBD")]
		Global
	}
}
namespace Cortopia.Scripts.SaveLoad
{
	[Token(Token = "0x200020E")]
	public class GlobalVariableHandler : ScriptableObject, ISavable
	{
		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x92D2A4", Offset = "0x92D2A4")]
		[SerializeField]
		private ScriptableVariable[] m_variables;

		[Token(Token = "0x6001211")]
		[Address(RVA = "0xB02E98", Offset = "0xB02E98", VA = "0xB02E98", Slot = "4")]
		public void Serialize(IWriteSave save)
		{
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0xB02F28", Offset = "0xB02F28", VA = "0xB02F28", Slot = "5")]
		public void Deserialize(IReadSave save)
		{
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0xB02FB8", Offset = "0xB02FB8", VA = "0xB02FB8")]
		public void SetDefaultValues()
		{
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0xB03058", Offset = "0xB03058", VA = "0xB03058")]
		public void ResetToDefault()
		{
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0xB030F8", Offset = "0xB030F8", VA = "0xB030F8")]
		public bool TrySetGlobalVariables(ScriptableVariable[] scriptableVariables)
		{
			return default(bool);
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0xB03170", Offset = "0xB03170", VA = "0xB03170")]
		public GlobalVariableHandler()
		{
		}
	}
	[Token(Token = "0x200020F")]
	public interface ISavable
	{
		[Token(Token = "0x6001217")]
		void Serialize(IWriteSave save);

		[Token(Token = "0x6001218")]
		void Deserialize(IReadSave save);
	}
	[Token(Token = "0x2000210")]
	public interface IIdentifiableSavable : ISavable
	{
		[Token(Token = "0x1700023D")]
		string Guid
		{
			[Token(Token = "0x6001219")]
			get;
			[Token(Token = "0x600121A")]
			set;
		}
	}
	[Token(Token = "0x2000211")]
	public interface IWriteSave
	{
		[Token(Token = "0x600121B")]
		void Write<T>(string guid, T saveData) where T : SavableData;
	}
	[Token(Token = "0x2000212")]
	public interface IReadSave
	{
		[Token(Token = "0x600121C")]
		T Read<T>(string guid, T defaultData) where T : SavableData;
	}
	[Serializable]
	[Token(Token = "0x2000213")]
	public abstract class SavableData
	{
		[Token(Token = "0x600121D")]
		[Address(RVA = "0xAF9C24", Offset = "0xAF9C24", VA = "0xAF9C24")]
		protected SavableData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000214")]
	public class SavableBool : SavableData
	{
		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool Value;

		[Token(Token = "0x600121E")]
		[Address(RVA = "0xB031E0", Offset = "0xB031E0", VA = "0xB031E0")]
		public SavableBool(bool value = false)
		{
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0xB03210", Offset = "0xB03210", VA = "0xB03210")]
		public static implicit operator bool(SavableBool savableBool)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x2000215")]
	public class SavableInt : SavableData
	{
		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Value;

		[Token(Token = "0x6001220")]
		[Address(RVA = "0xB03338", Offset = "0xB03338", VA = "0xB03338")]
		public SavableInt(int value = 0)
		{
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0xB03364", Offset = "0xB03364", VA = "0xB03364")]
		public static implicit operator int(SavableInt savableInt)
		{
			return default(int);
		}
	}
	[Serializable]
	[Token(Token = "0x2000216")]
	public class SavableFloat : SavableData
	{
		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Value;

		[Token(Token = "0x6001222")]
		[Address(RVA = "0xB032DC", Offset = "0xB032DC", VA = "0xB032DC")]
		public SavableFloat(float value = 0f)
		{
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0xB03310", Offset = "0xB03310", VA = "0xB03310")]
		public static implicit operator float(SavableFloat savableFloat)
		{
			return default(float);
		}
	}
	[Serializable]
	[Token(Token = "0x2000217")]
	public class SavableString : SavableData
	{
		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Value;

		[Token(Token = "0x6001224")]
		[Address(RVA = "0xB03558", Offset = "0xB03558", VA = "0xB03558")]
		public SavableString([Optional] string value)
		{
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0xB03584", Offset = "0xB03584", VA = "0xB03584")]
		public static implicit operator string(SavableString savableString)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000218")]
	public class SavableVector : SavableData
	{
		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Vector;

		[Token(Token = "0x6001226")]
		[Address(RVA = "0xB0395C", Offset = "0xB0395C", VA = "0xB0395C")]
		public SavableVector(Vector3 vector)
		{
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0xB039A4", Offset = "0xB039A4", VA = "0xB039A4")]
		public static implicit operator Vector3(SavableVector vector)
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x2000219")]
	public class SavableQuaternion : SavableData
	{
		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector4 Rotation;

		[Token(Token = "0x6001228")]
		[Address(RVA = "0xB03434", Offset = "0xB03434", VA = "0xB03434")]
		public SavableQuaternion(Quaternion quaternion)
		{
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0xB034B8", Offset = "0xB034B8", VA = "0xB034B8")]
		public static implicit operator Quaternion(SavableQuaternion quaternion)
		{
			return default(Quaternion);
		}
	}
	[Serializable]
	[Token(Token = "0x200021A")]
	public class SavablePose : SavableData
	{
		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector4 Rotation;

		[Token(Token = "0x600122A")]
		[Address(RVA = "0xB0338C", Offset = "0xB0338C", VA = "0xB0338C")]
		public SavablePose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200021B")]
	public class SavableTransform : SavableData
	{
		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector4 Rotation;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 Scale;

		[Token(Token = "0x600122B")]
		[Address(RVA = "0xB035AC", Offset = "0xB035AC", VA = "0xB035AC")]
		public SavableTransform(Vector3 position, Quaternion rotation, Vector3 scale)
		{
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0xB03678", Offset = "0xB03678", VA = "0xB03678")]
		public void Set(Transform transform)
		{
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0xB037C8", Offset = "0xB037C8", VA = "0xB037C8")]
		public void Set(Vector3 position, Quaternion rotation, Vector3 scale)
		{
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0xB0384C", Offset = "0xB0384C", VA = "0xB0384C")]
		public static implicit operator SavableTransform(Transform transform)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200021C")]
	public class InteractableSaveData : SavableData
	{
		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsNew;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool IsInteractable;

		[Token(Token = "0x600122F")]
		[Address(RVA = "0xB031D0", Offset = "0xB031D0", VA = "0xB031D0")]
		public InteractableSaveData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200021D")]
	public class SavableDate : SavableData
	{
		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DateTime Date;

		[Token(Token = "0x6001230")]
		[Address(RVA = "0xB03238", Offset = "0xB03238", VA = "0xB03238")]
		public SavableDate()
		{
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0xB032B0", Offset = "0xB032B0", VA = "0xB032B0")]
		public SavableDate(DateTime date)
		{
		}
	}
	[Token(Token = "0x200021E")]
	public class SaveGameObject : SaveObject
	{
		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_defaultSaveState;

		[Token(Token = "0x6001232")]
		[Address(RVA = "0xB039D0", Offset = "0xB039D0", VA = "0xB039D0", Slot = "8")]
		public override void Deserialize(IReadSave read)
		{
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0xB03B2C", Offset = "0xB03B2C", VA = "0xB03B2C", Slot = "9")]
		public override void Serialize(IWriteSave write)
		{
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0xB03C60", Offset = "0xB03C60", VA = "0xB03C60")]
		public SaveGameObject()
		{
		}
	}
	[Token(Token = "0x200021F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x92662C", Offset = "0x92662C")]
	public class SaveInteractObject : SaveObject
	{
		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private InteractableObject m_interactableObject;

		[Token(Token = "0x6001235")]
		[Address(RVA = "0xB03C70", Offset = "0xB03C70", VA = "0xB03C70", Slot = "8")]
		public override void Deserialize(IReadSave save)
		{
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0xB03D9C", Offset = "0xB03D9C", VA = "0xB03D9C", Slot = "9")]
		public override void Serialize(IWriteSave save)
		{
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0xB03E9C", Offset = "0xB03E9C", VA = "0xB03E9C")]
		public SaveInteractObject()
		{
		}
	}
	[Token(Token = "0x2000220")]
	public abstract class SaveObject : MonoBehaviour, IIdentifiableSavable, ISavable
	{
		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string m_guid;

		[Token(Token = "0x1700023E")]
		public string Guid
		{
			[Token(Token = "0x6001238")]
			[Address(RVA = "0xB03B24", Offset = "0xB03B24", VA = "0xB03B24", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001239")]
			[Address(RVA = "0xB03EA4", Offset = "0xB03EA4", VA = "0xB03EA4", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x600123A")]
		public abstract void Deserialize(IReadSave save);

		[Token(Token = "0x600123B")]
		public abstract void Serialize(IWriteSave save);

		[Token(Token = "0x600123C")]
		[Address(RVA = "0xAFE6C8", Offset = "0xAFE6C8", VA = "0xAFE6C8")]
		protected SaveObject()
		{
		}
	}
	[Token(Token = "0x2000221")]
	public class SaveTransform : SaveObject
	{
		[Token(Token = "0x2000551")]
		public enum TransformSerializationType
		{
			[Token(Token = "0x4001FB7")]
			Position,
			[Token(Token = "0x4001FB8")]
			Rotation,
			[Token(Token = "0x4001FB9")]
			PositionRotation,
			[Token(Token = "0x4001FBA")]
			PositionRotationScale
		}

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TransformSerializationType m_serializationType;

		[Token(Token = "0x600123D")]
		[Address(RVA = "0xB03EAC", Offset = "0xB03EAC", VA = "0xB03EAC", Slot = "8")]
		public override void Deserialize(IReadSave save)
		{
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0xB044CC", Offset = "0xB044CC", VA = "0xB044CC", Slot = "9")]
		public override void Serialize(IWriteSave save)
		{
		}

		[Token(Token = "0x600123F")]
		[Address(RVA = "0xB048DC", Offset = "0xB048DC", VA = "0xB048DC")]
		public SaveTransform()
		{
		}
	}
	[Token(Token = "0x2000222")]
	public static class SaveUtils
	{
		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, int> sm_idToObjectMap;

		[Token(Token = "0x4000DD2")]
		private const int InvalidHashID = 0;

		[Token(Token = "0x6001240")]
		[Address(RVA = "0xB048E4", Offset = "0xB048E4", VA = "0xB048E4")]
		public static string CreateGuid(int objectHash, string guid)
		{
			return null;
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0xB049F8", Offset = "0xB049F8", VA = "0xB049F8")]
		private static bool VerifyGuidIsUnique(int objectHash, string guid)
		{
			return default(bool);
		}
	}
}
namespace Cortopia.Scripts.Rooms
{
	[Token(Token = "0x2000223")]
	public enum BiomeType
	{
		[Token(Token = "0x4000DD4")]
		Intro,
		[Token(Token = "0x4000DD5")]
		Estate,
		[Token(Token = "0x4000DD6")]
		MirrorRealm,
		[Token(Token = "0x4000DD7")]
		CaterpillarForest,
		[Token(Token = "0x4000DD8")]
		FourCastles,
		[Token(Token = "0x4000DD9")]
		KeepOfHearts,
		[Token(Token = "0x4000DDA")]
		Party
	}
	[Token(Token = "0x2000224")]
	public class Room : SaveObject
	{
		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public RoomType RoomType;

		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_characterSpawnPoint;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private RoomSoundHandler m_roomSoundHandler;

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject m_graphicsParentGameObject;

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private GameObject m_vfxParentGameObject;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92D380", Offset = "0x92D380")]
		[SerializeField]
		private List<RoomBehaviour> m_roomBehaviours;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private List<MonoBehaviour> m_savableBehaviours;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private List<Renderer> m_meshRenderers;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[HideInInspector]
		private RoomType[] m_connectedRooms;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92D424", Offset = "0x92D424")]
		private bool <HasInitialized>k__BackingField;

		[Token(Token = "0x1700023F")]
		public bool HasInitialized
		{
			[Token(Token = "0x6001243")]
			[Address(RVA = "0xAFDA38", Offset = "0xAFDA38", VA = "0xAFDA38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93AE98", Offset = "0x93AE98")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001244")]
			[Address(RVA = "0xAFDA40", Offset = "0xAFDA40", VA = "0xAFDA40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93AEA8", Offset = "0x93AEA8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000240")]
		public IReadOnlyList<RoomType> ConnectedRooms
		{
			[Token(Token = "0x6001245")]
			[Address(RVA = "0xAFDA4C", Offset = "0xAFDA4C", VA = "0xAFDA4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000241")]
		public Transform CharacterSpawnPoint
		{
			[Token(Token = "0x6001246")]
			[Address(RVA = "0xAFDA54", Offset = "0xAFDA54", VA = "0xAFDA54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000242")]
		public RoomSoundHandler SoundHandler
		{
			[Token(Token = "0x6001247")]
			[Address(RVA = "0xAFDAE4", Offset = "0xAFDAE4", VA = "0xAFDAE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0xAFDB68", Offset = "0xAFDB68", VA = "0xAFDB68")]
		public void TryInitializeRoom()
		{
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0xAFDCEC", Offset = "0xAFDCEC", VA = "0xAFDCEC")]
		public void Serialize()
		{
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0xAFDD64", Offset = "0xAFDD64", VA = "0xAFDD64", Slot = "9")]
		public override void Serialize(IWriteSave save)
		{
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0xAFDF50", Offset = "0xAFDF50", VA = "0xAFDF50")]
		public void Deserialize()
		{
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0xAFDFC8", Offset = "0xAFDFC8", VA = "0xAFDFC8", Slot = "8")]
		public override void Deserialize(IReadSave save)
		{
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0xAFE17C", Offset = "0xAFE17C", VA = "0xAFE17C")]
		public void ActivateRoom()
		{
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0xAFE2D0", Offset = "0xAFE2D0", VA = "0xAFE2D0")]
		public void DeactivateRoom()
		{
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0xAFE424", Offset = "0xAFE424", VA = "0xAFE424")]
		public void SetGraphicsActive(bool active)
		{
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0xAFE5E8", Offset = "0xAFE5E8", VA = "0xAFE5E8")]
		public Room()
		{
		}
	}
	[Token(Token = "0x2000225")]
	public abstract class RoomBehaviour : MonoBehaviour
	{
		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92D434", Offset = "0x92D434")]
		private bool <HasInitialized>k__BackingField;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92D444", Offset = "0x92D444")]
		private bool <IsActive>k__BackingField;

		[Token(Token = "0x17000243")]
		protected bool HasInitialized
		{
			[Token(Token = "0x6001251")]
			[Address(RVA = "0xAFE6D0", Offset = "0xAFE6D0", VA = "0xAFE6D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93AEB8", Offset = "0x93AEB8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001252")]
			[Address(RVA = "0xAFE6D8", Offset = "0xAFE6D8", VA = "0xAFE6D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93AEC8", Offset = "0x93AEC8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000244")]
		protected bool IsActive
		{
			[Token(Token = "0x6001253")]
			[Address(RVA = "0xAFE6E4", Offset = "0xAFE6E4", VA = "0xAFE6E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93AED8", Offset = "0x93AED8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001254")]
			[Address(RVA = "0xAFE6EC", Offset = "0xAFE6EC", VA = "0xAFE6EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93AEE8", Offset = "0x93AEE8")]
			set
			{
			}
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0xAFDCB0", Offset = "0xAFDCB0", VA = "0xAFDCB0")]
		public void InitializeBehaviour()
		{
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0xAFE6F8", Offset = "0xAFE6F8", VA = "0xAFE6F8", Slot = "4")]
		public virtual void SetActive(bool active)
		{
		}

		[Token(Token = "0x6001257")]
		protected abstract void Initialize();

		[Token(Token = "0x6001258")]
		[Address(RVA = "0xAFE704", Offset = "0xAFE704", VA = "0xAFE704")]
		protected RoomBehaviour()
		{
		}
	}
	[Token(Token = "0x2000226")]
	public class RoomBlocker : MonoBehaviour
	{
		[Token(Token = "0x2000552")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927998", Offset = "0x927998")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x4001FBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public RoomBlocker <>4__this;

			[Token(Token = "0x4001FBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int blockerIndex;

			[Token(Token = "0x60025F4")]
			[Address(RVA = "0xAFEF3C", Offset = "0xAFEF3C", VA = "0xAFEF3C")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x60025F5")]
			[Address(RVA = "0xAFEFBC", Offset = "0xAFEFBC", VA = "0xAFEFBC")]
			internal void <FadeBlocker>b__0()
			{
			}

			[Token(Token = "0x60025F6")]
			[Address(RVA = "0xAFF0A8", Offset = "0xAFF0A8", VA = "0xAFF0A8")]
			internal void <FadeBlocker>b__1()
			{
			}
		}

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UnityEngine.Object m_connectedScene;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer[] m_blockers;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool[] m_blockerStatuses;

		[Token(Token = "0x4000DEA")]
		private const float BlockerFadeTime = 0.5f;

		[Token(Token = "0x6001259")]
		[Address(RVA = "0xAFE70C", Offset = "0xAFE70C", VA = "0xAFE70C")]
		private void UpdateBlockerStatuses()
		{
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0xAFE830", Offset = "0xAFE830", VA = "0xAFE830")]
		public bool[] GetBlockerStatus()
		{
			return null;
		}

		[Token(Token = "0x600125B")]
		[Address(RVA = "0xAFE838", Offset = "0xAFE838", VA = "0xAFE838")]
		public void SetBlockerStatus()
		{
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0xAFE840", Offset = "0xAFE840", VA = "0xAFE840")]
		public void SetBlockerStatus(bool[] blockerStatus)
		{
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0xAFEB14", Offset = "0xAFEB14", VA = "0xAFEB14")]
		public void EnableBlockers()
		{
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0xAFEB1C", Offset = "0xAFEB1C", VA = "0xAFEB1C")]
		public void EnableBlocker(int blockerIndex)
		{
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0xAFE950", Offset = "0xAFE950", VA = "0xAFE950")]
		private void EnableBlocker(MeshRenderer blocker)
		{
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0xAFEE9C", Offset = "0xAFEE9C", VA = "0xAFEE9C")]
		public void DisableBlockers()
		{
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0xAFEA68", Offset = "0xAFEA68", VA = "0xAFEA68")]
		public void DisableBlocker(int blockerIndex)
		{
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0xAFEBBC", Offset = "0xAFEBBC", VA = "0xAFEBBC")]
		private void FadeBlocker(int blockerIndex, bool fadeIn)
		{
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0xAFEF44", Offset = "0xAFEF44", VA = "0xAFEF44")]
		public RoomBlocker()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000227")]
	public class RoomBlockerDictionary : Dictionary<RoomType, RoomBlocker>, ISerializationCallbackReceiver
	{
		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private List<RoomType> m_keys;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private List<RoomBlocker> m_values;

		[Token(Token = "0x6001264")]
		[Address(RVA = "0xAFF190", Offset = "0xAFF190", VA = "0xAFF190", Slot = "44")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0xAFF388", Offset = "0xAFF388", VA = "0xAFF388", Slot = "45")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0xAFF49C", Offset = "0xAFF49C", VA = "0xAFF49C")]
		public RoomBlockerDictionary()
		{
		}
	}
	[Token(Token = "0x2000228")]
	public class RoomCompareEvent : MonoBehaviour
	{
		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ScriptableVariableEvent m_onRoomTypesMatch;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private RoomType m_roomType;

		[Token(Token = "0x6001267")]
		[Address(RVA = "0xAFF53C", Offset = "0xAFF53C", VA = "0xAFF53C")]
		public void CompareRoomTypes(ScriptableVariable eventData)
		{
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0xAFF6F4", Offset = "0xAFF6F4", VA = "0xAFF6F4")]
		public void CompareRoomTypes(RoomType roomType)
		{
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0xAFF780", Offset = "0xAFF780", VA = "0xAFF780")]
		public RoomCompareEvent()
		{
		}
	}
	[Token(Token = "0x2000229")]
	public class RoomManager : MonoBehaviour, ISavable
	{
		[Serializable]
		[Token(Token = "0x2000553")]
		[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x9279A8", Offset = "0x9279A8")]
		public class SaveData : SavableData
		{
			[Token(Token = "0x4001FBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BiomeType ActiveBiome;

			[Token(Token = "0x4001FBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public RoomType ActiveRoom;

			[Token(Token = "0x4001FBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int UnlockedBiomes;

			[Token(Token = "0x4001FC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dictionary<RoomType, RoomData> RoomData;

			[Token(Token = "0x17000495")]
			public RoomData Item
			{
				[Token(Token = "0x60025F7")]
				[Address(RVA = "0xB021C0", Offset = "0xB021C0", VA = "0xB021C0")]
				get
				{
					return default(RoomData);
				}
				[Token(Token = "0x60025F8")]
				[Address(RVA = "0xB02230", Offset = "0xB02230", VA = "0xB02230")]
				set
				{
				}
			}

			[Token(Token = "0x60025F9")]
			[Address(RVA = "0xAFFC48", Offset = "0xAFFC48", VA = "0xAFFC48")]
			public SaveData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000554")]
		public struct RoomData
		{
			[Token(Token = "0x4001FC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool HasInitialized;

			[Token(Token = "0x4001FC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool[] BlockerStatus;
		}

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ScriptableEvent m_onRoomActivatedEvent;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ScriptableEvent m_onBlockerDisabledEvent;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CardChoicePlacement[] m_cardChoicePlacements;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x92D4F4", Offset = "0x92D4F4")]
		[SerializeField]
		private RoomBlockerDictionary m_roomBlockers;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SaveData m_saveData;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IDictionary<RoomType, Room> m_rooms;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IntVariable m_roomTypeIndex;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private EventToken m_characterActivatedEventToken;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private EventToken m_onBiomeLoadedEventToken;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private EventToken m_onRoomLoadedEventToken;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private EventToken m_onBeforeRoomUnloadedEventEventToken;

		[Token(Token = "0x4000DFA")]
		private const string SaveID = "RoomManager";

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool AutoInitializeRooms;

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static RoomType? PendingActiveRoom;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92D540", Offset = "0x92D540")]
		private BiomeType <CurrentBiome>k__BackingField;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92D550", Offset = "0x92D550")]
		private int <UnlockedBiomes>k__BackingField;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92D560", Offset = "0x92D560")]
		private Room <CurrentRoom>k__BackingField;

		[Token(Token = "0x17000245")]
		public BiomeType CurrentBiome
		{
			[Token(Token = "0x600126A")]
			[Address(RVA = "0xAFF7E8", Offset = "0xAFF7E8", VA = "0xAFF7E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93AEF8", Offset = "0x93AEF8")]
			get
			{
				return default(BiomeType);
			}
			[Token(Token = "0x600126B")]
			[Address(RVA = "0xAFF7F0", Offset = "0xAFF7F0", VA = "0xAFF7F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93AF08", Offset = "0x93AF08")]
			private set
			{
			}
		}

		[Token(Token = "0x17000246")]
		public int UnlockedBiomes
		{
			[Token(Token = "0x600126C")]
			[Address(RVA = "0xAFF7F8", Offset = "0xAFF7F8", VA = "0xAFF7F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93AF18", Offset = "0x93AF18")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600126D")]
			[Address(RVA = "0xAFF800", Offset = "0xAFF800", VA = "0xAFF800")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93AF28", Offset = "0x93AF28")]
			private set
			{
			}
		}

		[Token(Token = "0x17000247")]
		public Room CurrentRoom
		{
			[Token(Token = "0x600126E")]
			[Address(RVA = "0xAFF808", Offset = "0xAFF808", VA = "0xAFF808")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93AF38", Offset = "0x93AF38")]
			get
			{
				return null;
			}
			[Token(Token = "0x600126F")]
			[Address(RVA = "0xAFF810", Offset = "0xAFF810", VA = "0xAFF810")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93AF48", Offset = "0x93AF48")]
			private set
			{
			}
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0xAFF818", Offset = "0xAFF818", VA = "0xAFF818")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0xAFFB38", Offset = "0xAFFB38", VA = "0xAFFB38")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0xAFFBE8", Offset = "0xAFFBE8", VA = "0xAFFBE8")]
		public void ResetSaveData()
		{
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0xAFFD60", Offset = "0xAFFD60", VA = "0xAFFD60", Slot = "5")]
		public void Deserialize(IReadSave save)
		{
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0xAFFF1C", Offset = "0xAFFF1C", VA = "0xAFFF1C", Slot = "4")]
		public void Serialize(IWriteSave save)
		{
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0xB004B4", Offset = "0xB004B4", VA = "0xB004B4")]
		public void TryLoadRooms(BiomeType biomeType)
		{
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0xB007CC", Offset = "0xB007CC", VA = "0xB007CC")]
		public bool TryGetRoom(RoomType roomType, out Room room)
		{
			return default(bool);
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0xB00AB4", Offset = "0xB00AB4", VA = "0xB00AB4")]
		public bool HasRevealedRoom(RoomType roomType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0xB00B58", Offset = "0xB00B58", VA = "0xB00B58")]
		public void EnableGraphics(BiomeType biomeType)
		{
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0xB00C20", Offset = "0xB00C20", VA = "0xB00C20")]
		private void EnableGraphics(RoomType roomType)
		{
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0xB00D14", Offset = "0xB00D14", VA = "0xB00D14")]
		private void EnableAdjecentRoom(RoomType roomType)
		{
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0xB00E20", Offset = "0xB00E20", VA = "0xB00E20")]
		public void DisableGraphics(BiomeType biomeType)
		{
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0xB00F98", Offset = "0xB00F98", VA = "0xB00F98")]
		public void SetRoomActive(RoomType roomType, int blockerIndex)
		{
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0xB015A4", Offset = "0xB015A4", VA = "0xB015A4")]
		public void TryEnableRoomBlocker(RoomType roomType, int blockerIndex)
		{
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0xB0164C", Offset = "0xB0164C", VA = "0xB0164C")]
		public void TryDisableRoomBlocker(RoomType roomType, int blockerIndex, bool enableGraphics)
		{
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0xB01698", Offset = "0xB01698", VA = "0xB01698")]
		public void ResetAllBlockers()
		{
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0xAFF9F0", Offset = "0xAFF9F0", VA = "0xAFF9F0")]
		public void EnableAllBlockers()
		{
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0xB0183C", Offset = "0xB0183C", VA = "0xB0183C")]
		public void DisableAllBlockers()
		{
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0xB0133C", Offset = "0xB0133C", VA = "0xB0133C")]
		private void TryDisableRoomBlocker(RoomType roomType, int blockerIndex)
		{
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0xB019F4", Offset = "0xB019F4", VA = "0xB019F4")]
		private void OnCharacterActivated(CharacterEvents.CharacterActivatedEvent eventData)
		{
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0xB01A3C", Offset = "0xB01A3C", VA = "0xB01A3C")]
		private void OnBiomeActivated(RoomEvents.BiomeActivatedEvent eventData)
		{
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0xB01B18", Offset = "0xB01B18", VA = "0xB01B18")]
		private void OnRoomLoaded(RoomEvents.RoomLoadedEvent eventData)
		{
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0xB0089C", Offset = "0xB0089C", VA = "0xB0089C")]
		private void LoadRoom(Room room)
		{
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0xB01ECC", Offset = "0xB01ECC", VA = "0xB01ECC")]
		private void OnBeforeRoomUnloadedEvent(RoomEvents.BeforeRoomUnloadedEvent eventData)
		{
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0xB01D0C", Offset = "0xB01D0C", VA = "0xB01D0C")]
		private void TryLoadRoom(Room room)
		{
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0xB0036C", Offset = "0xB0036C", VA = "0xB0036C")]
		private void SaveRoom(Room room)
		{
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0xB014BC", Offset = "0xB014BC", VA = "0xB014BC")]
		private void RaiseActivatedEvent(RoomType roomType)
		{
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0xAFFCC4", Offset = "0xAFFCC4", VA = "0xAFFCC4")]
		private void UpdateChoiceCardSelections()
		{
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0xB020A8", Offset = "0xB020A8", VA = "0xB020A8")]
		public RoomManager()
		{
		}
	}
	[Token(Token = "0x200022A")]
	public enum RoomType
	{
		[Token(Token = "0x4000E01")]
		None,
		[Token(Token = "0x4000E02")]
		Navigation,
		[Token(Token = "0x4000E03")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x92D570", Offset = "0x92D570")]
		ClockEntranceScene,
		[Token(Token = "0x4000E04")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x92D5A8", Offset = "0x92D5A8")]
		ClockTowerScene,
		[Token(Token = "0x4000E05")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x92D5E0", Offset = "0x92D5E0")]
		FallingScene,
		[Token(Token = "0x4000E06")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x92D618", Offset = "0x92D618")]
		HomeScene,
		[Token(Token = "0x4000E07")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x92D650", Offset = "0x92D650")]
		OutsideScene,
		[Token(Token = "0x4000E08")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x92D688", Offset = "0x92D688")]
		RabbitHouseScene,
		[Token(Token = "0x4000E09")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x92D6C0", Offset = "0x92D6C0")]
		BackyardScene,
		[Token(Token = "0x4000E0A")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x92D6F8", Offset = "0x92D6F8")]
		BelowBackyardScene,
		[Token(Token = "0x4000E0B")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x92D730", Offset = "0x92D730")]
		CaterpillarEstateScene,
		[Token(Token = "0x4000E0C")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x92D768", Offset = "0x92D768")]
		EstateAtticScene,
		[Token(Token = "0x4000E0D")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x92D7A0", Offset = "0x92D7A0")]
		EstateCellarScene,
		[Token(Token = "0x4000E0E")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x92D7D8", Offset = "0x92D7D8")]
		EstateEntranceScene,
		[Token(Token = "0x4000E0F")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x92D810", Offset = "0x92D810")]
		EstateHallwayScene,
		[Token(Token = "0x4000E10")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x92D848", Offset = "0x92D848")]
		EstateKitchenScene,
		[Token(Token = "0x4000E11")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x92D880", Offset = "0x92D880")]
		GladePassageScene,
		[Token(Token = "0x4000E12")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x92D8B8", Offset = "0x92D8B8")]
		GladeScene,
		[Token(Token = "0x4000E13")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x92D8F0", Offset = "0x92D8F0")]
		PendulumScene,
		[Token(Token = "0x4000E14")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x92D928", Offset = "0x92D928")]
		CaterpillarMirrorScene,
		[Token(Token = "0x4000E15")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x92D960", Offset = "0x92D960")]
		MirrorRealmScene,
		[Token(Token = "0x4000E16")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x92D998", Offset = "0x92D998")]
		StairsScene,
		[Token(Token = "0x4000E17")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x92D9D0", Offset = "0x92D9D0")]
		AboveTheMazeScene,
		[Token(Token = "0x4000E18")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x92DA08", Offset = "0x92DA08")]
		BehindTheDoorScene,
		[Token(Token = "0x4000E19")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x92DA40", Offset = "0x92DA40")]
		CaterpillarScene,
		[Token(Token = "0x4000E1A")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x92DA78", Offset = "0x92DA78")]
		CheshireCatScene,
		[Token(Token = "0x4000E1B")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x92DAB0", Offset = "0x92DAB0")]
		DominoMazeScene,
		[Token(Token = "0x4000E1C")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x92DAE8", Offset = "0x92DAE8")]
		GiantForestScene,
		[Token(Token = "0x4000E1D")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x92DB20", Offset = "0x92DB20")]
		ImposterKingScene,
		[Token(Token = "0x4000E1E")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x92DB58", Offset = "0x92DB58")]
		UnderTheMazeScene,
		[Token(Token = "0x4000E1F")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x92DB90", Offset = "0x92DB90")]
		CastlesScene,
		[Token(Token = "0x4000E20")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x92DBC8", Offset = "0x92DBC8")]
		CaterpillarKeepScene,
		[Token(Token = "0x4000E21")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x92DC00", Offset = "0x92DC00")]
		CrownScene,
		[Token(Token = "0x4000E22")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x92DC38", Offset = "0x92DC38")]
		KeepBathroomScene,
		[Token(Token = "0x4000E23")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x92DC70", Offset = "0x92DC70")]
		KeepBedroomScene,
		[Token(Token = "0x4000E24")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x92DCA8", Offset = "0x92DCA8")]
		KeepCorridorScene,
		[Token(Token = "0x4000E25")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x92DCE0", Offset = "0x92DCE0")]
		KeepKingScene,
		[Token(Token = "0x4000E26")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x92DD18", Offset = "0x92DD18")]
		KeepPantryScene,
		[Token(Token = "0x4000E27")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x92DD50", Offset = "0x92DD50")]
		KeepPatchesScene,
		[Token(Token = "0x4000E28")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x92DD88", Offset = "0x92DD88")]
		KeepStaircaseEastScene,
		[Token(Token = "0x4000E29")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x92DDC0", Offset = "0x92DDC0")]
		KeepStaircaseWestScene,
		[Token(Token = "0x4000E2A")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x92DDF8", Offset = "0x92DDF8")]
		KeepThroneRoomScene,
		[Token(Token = "0x4000E2B")]
		[AttributeAttribute(Name = "RoomTypeNameAttribute", RVA = "0x92DE30", Offset = "0x92DE30")]
		PartyScene
	}
	[Token(Token = "0x200022B")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x926690", Offset = "0x926690")]
	public class RoomTypeNameAttribute : Attribute
	{
		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92DE68", Offset = "0x92DE68")]
		private readonly string <Name>k__BackingField;

		[Token(Token = "0x17000248")]
		public string Name
		{
			[Token(Token = "0x600128E")]
			[Address(RVA = "0xB022B8", Offset = "0xB022B8", VA = "0xB022B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93AF58", Offset = "0x93AF58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0xB022C0", Offset = "0xB022C0", VA = "0xB022C0")]
		public RoomTypeNameAttribute(string name)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200022C")]
	public static class RoomUtils
	{
		[Token(Token = "0x4000E2D")]
		public const RoomType StartRoom = RoomType.HomeScene;

		[Token(Token = "0x4000E2E")]
		public const BiomeType StartBiome = BiomeType.Intro;

		[Token(Token = "0x4000E2F")]
		public const int AllBlockersDisabledIndex = -1;

		[Token(Token = "0x4000E30")]
		public const int NoBlockersDisabledIndex = 99;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly MathUtils.MinMax CameraPositionMinMax;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static IReadOnlyDictionary<BiomeType, MathUtils.MinMax> CameraPositionLimits;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly RoomType[] IntroRooms;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly RoomType[] EstateRooms;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly RoomType[] MirrorRealmRooms;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly RoomType[] CaterpillarForestRooms;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly RoomType[] FourCastleRooms;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static readonly RoomType[] KeepOfHeartsRooms;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static readonly RoomType[] PartyRooms;

		[Token(Token = "0x6001290")]
		[Address(RVA = "0xB0059C", Offset = "0xB0059C", VA = "0xB0059C")]
		public static RoomType[] GetRoomsInBiome(BiomeType biomeType)
		{
			return null;
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0xB022EC", Offset = "0xB022EC", VA = "0xB022EC")]
		public static RoomType GetStartRoomInBiome(BiomeType biomeType)
		{
			return default(RoomType);
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0xB023C0", Offset = "0xB023C0", VA = "0xB023C0")]
		public static BiomeType GetBiomeFromRoom(RoomType roomType)
		{
			return default(BiomeType);
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0xB026B0", Offset = "0xB026B0", VA = "0xB026B0")]
		public static bool TryParse(UnityEngine.Object scene, out RoomType roomType, [Optional] MonoBehaviour reference)
		{
			return default(bool);
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0xB027B4", Offset = "0xB027B4", VA = "0xB027B4")]
		public static bool TryParse(string sceneName, out RoomType roomType, [Optional] MonoBehaviour reference)
		{
			return default(bool);
		}

		[Token(Token = "0x6001295")]
		[Address(RVA = "0xB0285C", Offset = "0xB0285C", VA = "0xB0285C")]
		public static Dictionary<RoomType, string> GetRoomNames()
		{
			return null;
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0xB02470", Offset = "0xB02470", VA = "0xB02470")]
		private static string GetRoomTypeName(RoomType roomType)
		{
			return null;
		}
	}
}
namespace Cortopia.Scripts.Puzzles
{
	[Token(Token = "0x200022D")]
	public class BathroomStairs : SaveObject
	{
		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly int m_fallAnimationProperty;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioSource m_stairsAudio;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Animator m_stairsAnimator;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform m_destination;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SavableBool m_hasOpenedStairs;

		[Token(Token = "0x6001298")]
		[Address(RVA = "0xC77CBC", Offset = "0xC77CBC", VA = "0xC77CBC")]
		public void TryTriggerStairsOpen()
		{
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0xC77E44", Offset = "0xC77E44", VA = "0xC77E44", Slot = "9")]
		public override void Serialize(IWriteSave save)
		{
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0xC77F38", Offset = "0xC77F38", VA = "0xC77F38", Slot = "8")]
		public override void Deserialize(IReadSave save)
		{
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0xC77D4C", Offset = "0xC77D4C", VA = "0xC77D4C")]
		private void SetDestination()
		{
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0xC78078", Offset = "0xC78078", VA = "0xC78078")]
		public BathroomStairs()
		{
		}
	}
	[Token(Token = "0x200022E")]
	public class ButterflyArrow : MonoBehaviour
	{
		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoolVariable m_boolVariable;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioMixerGroup m_mixerGroup;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Butterfly[] m_butterflies;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private BezierSpline[] m_bezierSplines;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_checkCondition;

		[Token(Token = "0x600129D")]
		[Address(RVA = "0xC780FC", Offset = "0xC780FC", VA = "0xC780FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0xC78238", Offset = "0xC78238", VA = "0xC78238")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0xC782E0", Offset = "0xC782E0", VA = "0xC782E0")]
		private void CheckCondition()
		{
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0xC783AC", Offset = "0xC783AC", VA = "0xC783AC")]
		private void TryFormArrow()
		{
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0xC78548", Offset = "0xC78548", VA = "0xC78548")]
		public ButterflyArrow()
		{
		}
	}
	[Token(Token = "0x200022F")]
	public class ButterflyManager : SaveObject
	{
		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoolVariable m_puzzleCompletedBool;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private BezierSpline[] m_butterflyFinalDestinationSplines;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92DF08", Offset = "0x92DF08")]
		[SerializeField]
		private AudioMixerGroup m_endAudioMixerGroup;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioSource m_puzzleCompleteAudio;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private VoiceLineCollection[] m_catReactions;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SavableInt m_currentPickupReactionIndex;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Butterfly> m_collectedButterflies;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private EventToken m_butterflyFoundEventToken;

		[Token(Token = "0x4000E4C")]
		private const int ExpectedButterflyCount = 4;

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0xC785C0", Offset = "0xC785C0", VA = "0xC785C0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0xC78640", Offset = "0xC78640", VA = "0xC78640")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0xC78750", Offset = "0xC78750", VA = "0xC78750", Slot = "9")]
		public override void Serialize(IWriteSave write)
		{
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0xC78844", Offset = "0xC78844", VA = "0xC78844", Slot = "8")]
		public override void Deserialize(IReadSave read)
		{
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0xC78948", Offset = "0xC78948", VA = "0xC78948")]
		private void OnButterflyFound(PuzzleEvents.ButterflyFoundEvent eventData)
		{
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0xC7897C", Offset = "0xC7897C", VA = "0xC7897C")]
		private void AddButterfly(Butterfly butterfly)
		{
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0xC78BC0", Offset = "0xC78BC0", VA = "0xC78BC0")]
		private void TriggerButterflySwarm()
		{
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0xC78D58", Offset = "0xC78D58", VA = "0xC78D58")]
		private void CompleteButterflyPuzzle()
		{
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0xC78DA0", Offset = "0xC78DA0", VA = "0xC78DA0")]
		public ButterflyManager()
		{
		}
	}
	[Token(Token = "0x2000230")]
	public enum CardColour
	{
		[Token(Token = "0x4000E4E")]
		Black,
		[Token(Token = "0x4000E4F")]
		Red,
		[Token(Token = "0x4000E50")]
		Checkered
	}
	[Token(Token = "0x2000231")]
	[Flags]
	public enum CardSuit
	{
		[Token(Token = "0x4000E52")]
		Diamonds = 1,
		[Token(Token = "0x4000E53")]
		Hearts = 2,
		[Token(Token = "0x4000E54")]
		Spades = 4,
		[Token(Token = "0x4000E55")]
		Clubs = 8
	}
	[Token(Token = "0x2000232")]
	public class ClockElevator : RoomBehaviour
	{
		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private FloatVariable m_clockHandRotationValue;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_rotationLerpMultiplier;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92DF94", Offset = "0x92DF94")]
		[SerializeField]
		private ElevatorDestination[] m_elevatorDestinations;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92DFE0", Offset = "0x92DFE0")]
		[SerializeField]
		private Transform m_elevatorPlatform;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private BoxCollider m_collider;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92E03C", Offset = "0x92E03C")]
		[SerializeField]
		private AnimationCurve m_accelerationCurve;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_checkCharacterPresence;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool m_tryDetachCharacters;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_currentProgress;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_offset;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private LayerMask m_characterHitMask;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IList<PlayableCharacter> m_charactersOnElevator;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Collider[] sm_sampleColliders;

		[Token(Token = "0x4000E63")]
		private const float MinDistanceThreshold = 0.01f;

		[Token(Token = "0x4000E64")]
		private const float MaxDistanceThreshold = 0.99f;

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0xC7D928", Offset = "0xC7D928", VA = "0xC7D928", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0xC7DC84", Offset = "0xC7DC84", VA = "0xC7DC84")]
		private void Update()
		{
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0xC7D9BC", Offset = "0xC7D9BC", VA = "0xC7D9BC")]
		private void MovePlatform()
		{
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0xC7E08C", Offset = "0xC7E08C", VA = "0xC7E08C")]
		private void EnableCharacterPresenceCheck(int positionIndex)
		{
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0xC7E4F8", Offset = "0xC7E4F8", VA = "0xC7E4F8")]
		private void ActivateNavMeshObstacle(int positionIndex)
		{
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0xC7E0B4", Offset = "0xC7E0B4", VA = "0xC7E0B4")]
		private void TryAttachCharactersToElevator()
		{
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0xC7DCD0", Offset = "0xC7DCD0", VA = "0xC7DCD0")]
		private void TryDetachCharactersFromElevator()
		{
		}

		[Token(Token = "0x60012B2")]
		[Address(RVA = "0xC7E5AC", Offset = "0xC7E5AC", VA = "0xC7E5AC")]
		public ClockElevator()
		{
		}
	}
	[Token(Token = "0x2000233")]
	public class CookieEater : MonoBehaviour
	{
		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UnityEvent m_onTartEaten;

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0xC825D8", Offset = "0xC825D8", VA = "0xC825D8")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0xC82714", Offset = "0xC82714", VA = "0xC82714")]
		public CookieEater()
		{
		}
	}
	[Token(Token = "0x2000234")]
	public class CookieReceiver : MonoBehaviour
	{
		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private NavMeshObstacle m_navmeshObstacle;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CustomParentConstraint m_parentConstraint;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CharacterCutscenePlayer m_grabCookieTimeline;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent m_onCookieReceived;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Cookie m_cookie;

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0xC8277C", Offset = "0xC8277C", VA = "0xC8277C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0xC82918", Offset = "0xC82918", VA = "0xC82918")]
		public void DestroyCookie()
		{
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0xC829D0", Offset = "0xC829D0", VA = "0xC829D0")]
		public CookieReceiver()
		{
		}
	}
	[Token(Token = "0x2000235")]
	public class CookieSpawner : MonoBehaviour
	{
		[Token(Token = "0x2000555")]
		private enum SpawnState
		{
			[Token(Token = "0x4001FC4")]
			Waiting,
			[Token(Token = "0x4001FC5")]
			Spawning,
			[Token(Token = "0x4001FC6")]
			Ejecting
		}

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Cookie m_cookiePrefab;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int m_cookiePoolCount;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_spawnPoint;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92E118", Offset = "0x92E118")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x92E118", Offset = "0x92E118")]
		private float m_delayTime;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x92E188", Offset = "0x92E188")]
		private float m_spawnTime;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x92E1D4", Offset = "0x92E1D4")]
		private float m_ejectTime;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float m_ejectForce;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Vector3 m_ejectTorque;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Cookie[] m_cachedCookies;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Cookie m_ejectCookie;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SpawnState m_currentSpawnState;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float m_elapsedTime;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly int m_parameterFetchCookie;

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0xC82A38", Offset = "0xC82A38", VA = "0xC82A38")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0xC82C1C", Offset = "0xC82C1C", VA = "0xC82C1C")]
		private void Update()
		{
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0xC82EF8", Offset = "0xC82EF8", VA = "0xC82EF8")]
		public void FetchCookie()
		{
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0xC83028", Offset = "0xC83028", VA = "0xC83028")]
		private void FetchCookiePostDelay()
		{
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0xC82EF0", Offset = "0xC82EF0", VA = "0xC82EF0")]
		private void ResetCookieSpawner()
		{
		}

		[Token(Token = "0x60012BE")]
		[Address(RVA = "0xC82A3C", Offset = "0xC82A3C", VA = "0xC82A3C")]
		private void SpawnCookie()
		{
		}

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0xC82CA8", Offset = "0xC82CA8", VA = "0xC82CA8")]
		private void PrepareCookie()
		{
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0xC82D2C", Offset = "0xC82D2C", VA = "0xC82D2C")]
		private void EjectCookie()
		{
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0xC83084", Offset = "0xC83084", VA = "0xC83084")]
		private bool CanGetCookie(out Cookie cookie)
		{
			return default(bool);
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0xC83178", Offset = "0xC83178", VA = "0xC83178")]
		public CookieSpawner()
		{
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0xC83218", Offset = "0xC83218", VA = "0xC83218")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93AF68", Offset = "0x93AF68")]
		private void <FetchCookie>b__17_0()
		{
		}
	}
	[Token(Token = "0x2000236")]
	public class CupBoat : InputSplineTraverser
	{
		[Token(Token = "0x4000E79")]
		private const float VolumeLerpSpeed = 4f;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92E240", Offset = "0x92E240")]
		[SerializeField]
		private AudioSource m_loopingAudioSource;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool m_isTrackingAudio;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float m_targetVolume;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float m_defaultVolume;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 m_previousPosition;

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0xC8321C", Offset = "0xC8321C", VA = "0xC8321C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0xC83318", Offset = "0xC83318", VA = "0xC83318")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0xC83260", Offset = "0xC83260", VA = "0xC83260")]
		public void SetAudioTrackingActive(bool isActive)
		{
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0xC834D4", Offset = "0xC834D4", VA = "0xC834D4")]
		public CupBoat()
		{
		}
	}
	[Token(Token = "0x2000237")]
	public class Domino : RoomBehaviour, IIdentifiableSavable, ISavable
	{
		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		private string m_guid;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private DominoSide[] m_sides;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioSource m_lightUpSfx;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioSource m_slideSfx;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92E2F4", Offset = "0x92E2F4")]
		[SerializeField]
		private Vector3 m_defaultPosition;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private Vector3 m_alternatePosition;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92E350", Offset = "0x92E350")]
		[SerializeField]
		private bool m_useTimer;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool m_isBlockedByTimer;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Tweener m_moveTweener;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SavableBool m_isAtDefaultPosition;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private EventToken m_dominoBellRungEventToken;

		[Token(Token = "0x17000249")]
		private bool IsAtDefaultPosition
		{
			[Token(Token = "0x60012C8")]
			[Address(RVA = "0xC834DC", Offset = "0xC834DC", VA = "0xC834DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700024A")]
		public string Guid
		{
			[Token(Token = "0x60012C9")]
			[Address(RVA = "0xC835A8", Offset = "0xC835A8", VA = "0xC835A8", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x60012CA")]
			[Address(RVA = "0xC835B0", Offset = "0xC835B0", VA = "0xC835B0", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0xC835B8", Offset = "0xC835B8", VA = "0xC835B8", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0xC837D4", Offset = "0xC837D4", VA = "0xC837D4", Slot = "4")]
		public override void SetActive(bool active)
		{
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0xC838EC", Offset = "0xC838EC", VA = "0xC838EC", Slot = "8")]
		public void Serialize(IWriteSave write)
		{
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0xC839F8", Offset = "0xC839F8", VA = "0xC839F8", Slot = "9")]
		public void Deserialize(IReadSave read)
		{
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0xC83B8C", Offset = "0xC83B8C", VA = "0xC83B8C")]
		public void SaveDefaultPosition()
		{
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0xC83BD0", Offset = "0xC83BD0", VA = "0xC83BD0")]
		public void SaveAlternatePosition()
		{
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0xC83B00", Offset = "0xC83B00", VA = "0xC83B00")]
		public void SetPosition(bool defaultPosition)
		{
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0xC83648", Offset = "0xC83648", VA = "0xC83648")]
		public void SetBlocked(bool isBlocked)
		{
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0xC83C14", Offset = "0xC83C14", VA = "0xC83C14")]
		public void ResetPosition()
		{
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0xC83DF4", Offset = "0xC83DF4", VA = "0xC83DF4")]
		public bool HasDotCount(int count)
		{
			return default(bool);
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0xC83E8C", Offset = "0xC83E8C", VA = "0xC83E8C")]
		private void OnDominoBellRung(PuzzleEvents.DominoBellRungEvent eventData)
		{
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0xC840E8", Offset = "0xC840E8", VA = "0xC840E8")]
		private void CheckMoveConditions()
		{
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0xC83C64", Offset = "0xC83C64", VA = "0xC83C64")]
		private void SwitchPosition(bool sendEvent)
		{
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0xC841C4", Offset = "0xC841C4", VA = "0xC841C4")]
		public Domino()
		{
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0xC84248", Offset = "0xC84248", VA = "0xC84248")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93AF78", Offset = "0x93AF78")]
		private void <SwitchPosition>b__28_0()
		{
		}
	}
	[Token(Token = "0x2000238")]
	public class DominoPuzzleManager : RoomBehaviour
	{
		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_puzzleCompleteDelayTime;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource m_timerEndSfx;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ScriptableEvent m_puzzleCompletedEvent;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Domino[] m_dominos;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private DominoBellRinger[] m_bellRingers;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private PointerInteractable[] m_bellInteractions;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int m_currentDominoIndex;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private bool m_endTimerActive;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		private bool m_puzzleCompleted;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private EventToken m_dominoMovedEventToken;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private EventToken m_dominoBellRungEventToken;

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0xC842E0", Offset = "0xC842E0", VA = "0xC842E0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0xC842E8", Offset = "0xC842E8", VA = "0xC842E8", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0xC84374", Offset = "0xC84374", VA = "0xC84374")]
		public void StartDominoPuzzle()
		{
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0xC845E4", Offset = "0xC845E4", VA = "0xC845E4")]
		public void EndDominoPuzzle()
		{
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0xC847C0", Offset = "0xC847C0", VA = "0xC847C0")]
		private void OnDominoBellRung(PuzzleEvents.DominoBellRungEvent eventData)
		{
		}

		[Token(Token = "0x60012DF")]
		[Address(RVA = "0xC84860", Offset = "0xC84860", VA = "0xC84860")]
		private void OnDominoMoved(PuzzleEvents.DominoMovedEvent eventData)
		{
		}

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0xC846C4", Offset = "0xC846C4", VA = "0xC846C4")]
		private void CompletePuzzle()
		{
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0xC84704", Offset = "0xC84704", VA = "0xC84704")]
		private void TimesUp()
		{
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0xC84484", Offset = "0xC84484", VA = "0xC84484")]
		private void UpdateDominoAvailability(int enableIndex)
		{
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0xC84538", Offset = "0xC84538", VA = "0xC84538")]
		private void SetBellRingerEventsActive(bool isActive)
		{
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0xC84908", Offset = "0xC84908", VA = "0xC84908")]
		public DominoPuzzleManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000239")]
	public class DominoSide
	{
		[Token(Token = "0x2000556")]
		private enum DominoState
		{
			[Token(Token = "0x4001FC8")]
			Unlit = 1,
			[Token(Token = "0x4001FC9")]
			Lit = 2,
			[Token(Token = "0x4001FCA")]
			LightingUp = 4
		}

		[Token(Token = "0x2000557")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9279E0", Offset = "0x9279E0")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4001FCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DominoSide <>4__this;

			[Token(Token = "0x4001FCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action onLitUp;

			[Token(Token = "0x60025FA")]
			[Address(RVA = "0xC849A0", Offset = "0xC849A0", VA = "0xC849A0")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x60025FB")]
			[Address(RVA = "0xC849C4", Offset = "0xC849C4", VA = "0xC849C4")]
			internal void <SetLit>b__0()
			{
			}
		}

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x92E3FC", Offset = "0x92E3FC")]
		private int m_numberOfDots;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SpriteRenderer m_dotsRenderer;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private DominoState m_currentState;

		[Token(Token = "0x1700024B")]
		public bool IsActive
		{
			[Token(Token = "0x60012E5")]
			[Address(RVA = "0xC83FCC", Offset = "0xC83FCC", VA = "0xC83FCC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700024C")]
		public bool IsLit
		{
			[Token(Token = "0x60012E6")]
			[Address(RVA = "0xC841B4", Offset = "0xC841B4", VA = "0xC841B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700024D")]
		public int NumberOfDots
		{
			[Token(Token = "0x60012E7")]
			[Address(RVA = "0xC83E84", Offset = "0xC83E84", VA = "0xC83E84")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0xC836D4", Offset = "0xC836D4", VA = "0xC836D4")]
		public void SetUnlit(float delay = 0f)
		{
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0xC83FDC", Offset = "0xC83FDC", VA = "0xC83FDC")]
		public void SetLit(Action onLitUp)
		{
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0xC849A8", Offset = "0xC849A8", VA = "0xC849A8")]
		public DominoSide()
		{
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0xC849B8", Offset = "0xC849B8", VA = "0xC849B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93AF88", Offset = "0x93AF88")]
		private void <SetUnlit>b__10_0()
		{
		}
	}
	[Token(Token = "0x200023A")]
	public class DominoTimer : RoomBehaviour
	{
		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_timerCapPreMove;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_puzzleCompleteDelayTime;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioSource m_timerLoopSfx;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioSource m_timerEndSfx;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ScriptableEvent m_puzzleCompletedEvent;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<Domino> m_dominoList;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_timer;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_timerCapPostMove;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_currentDominoIndex;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool m_timerActive;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		private bool m_endTimerActive;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		private bool m_puzzleCompleted;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private EventToken m_dominoMovedEventToken;

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0xC84A10", Offset = "0xC84A10", VA = "0xC84A10")]
		private void Update()
		{
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0xC84D44", Offset = "0xC84D44", VA = "0xC84D44", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0xC84D58", Offset = "0xC84D58", VA = "0xC84D58")]
		public void StartDominoTimer()
		{
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0xC84E10", Offset = "0xC84E10", VA = "0xC84E10")]
		public void EndDominoTimer()
		{
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0xC84AB0", Offset = "0xC84AB0", VA = "0xC84AB0")]
		private void TimesUp()
		{
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0xC84C28", Offset = "0xC84C28", VA = "0xC84C28")]
		private void UpdateDominoAvailability(int enableIndex)
		{
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0xC84EC4", Offset = "0xC84EC4", VA = "0xC84EC4")]
		private void OnDominoMoved(PuzzleEvents.DominoMovedEvent eventData)
		{
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0xC84F94", Offset = "0xC84F94", VA = "0xC84F94")]
		private void TryCompletePuzzle()
		{
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0xC84D00", Offset = "0xC84D00", VA = "0xC84D00")]
		private void CompletePuzzle()
		{
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0xC84FE0", Offset = "0xC84FE0", VA = "0xC84FE0")]
		public DominoTimer()
		{
		}
	}
	[Token(Token = "0x200023B")]
	public class MazeExitVolume : MonoBehaviour
	{
		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayableCharacterEvent m_onConditionMet;

		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PlayableCharacterEvent m_onConditionNotMet;

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TutorialScroll m_switchTutorialScroll;

		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private VoiceLineCollection m_reuniteBanter;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ISet<PlayableCharacter> m_presentCharacters;

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0xAF9C2C", Offset = "0xAF9C2C", VA = "0xAF9C2C")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0xAF9F68", Offset = "0xAF9F68", VA = "0xAF9F68")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0xAFA09C", Offset = "0xAFA09C", VA = "0xAFA09C")]
		public void CheckAllCharactersPresent(PlayableCharacter interactCharacter)
		{
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0xAFA23C", Offset = "0xAFA23C", VA = "0xAFA23C")]
		public MazeExitVolume()
		{
		}
	}
	[Token(Token = "0x200023C")]
	public class TimerEvent : MonoBehaviour
	{
		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_defaultTimerLength;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent m_onTimerComplete;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_timerActive;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_timeSinceStart;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_timerLength;

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0xAFD8D8", Offset = "0xAFD8D8", VA = "0xAFD8D8")]
		private void Update()
		{
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0xAFD950", Offset = "0xAFD950", VA = "0xAFD950")]
		public void StartTimer(float customTimerLength)
		{
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0xAFD960", Offset = "0xAFD960", VA = "0xAFD960")]
		public void StartTimer()
		{
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0xAFD974", Offset = "0xAFD974", VA = "0xAFD974")]
		public void CancelTimer()
		{
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0xAFD980", Offset = "0xAFD980", VA = "0xAFD980")]
		public void CompleteTimer(bool ignoreActive)
		{
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0xAFD9C8", Offset = "0xAFD9C8", VA = "0xAFD9C8")]
		public TimerEvent()
		{
		}
	}
}
namespace Cortopia.Scripts.Puzzles.Puzzlebox
{
	[Token(Token = "0x200023D")]
	public class BedroomPuzzlebox : MonoBehaviour
	{
		[Token(Token = "0x4000EAF")]
		private const float DoorOpenDuration = 3f;

		[Token(Token = "0x4000EB0")]
		private const float DoorCloseDuration = 1.5f;

		[Token(Token = "0x4000EB1")]
		private const float TopOpenDuration = 2.5f;

		[Token(Token = "0x4000EB2")]
		private const float SlideBoxDuration = 1.5f;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_leftDoor;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_rightDoor;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_box;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform m_top;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92E54C", Offset = "0x92E54C")]
		[SerializeField]
		private SoundEffect m_doorOpen;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_boxStartLocalPositionZ;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int m_numberOfDoorsAnimating;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Action m_onDoorsOpenComplete;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Action m_onDoorsCloseComplete;

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Action m_onOpenTopComplete;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Action m_onSlideBoxComplete;

		[Token(Token = "0x6001300")]
		[Address(RVA = "0xAFA2EC", Offset = "0xAFA2EC", VA = "0xAFA2EC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0xAFA328", Offset = "0xAFA328", VA = "0xAFA328")]
		public void OpenDoors(Action onAnimationComplete)
		{
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0xAFA5D4", Offset = "0xAFA5D4", VA = "0xAFA5D4")]
		public void SlideBox(Action onAnimationComplete)
		{
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0xAFA698", Offset = "0xAFA698", VA = "0xAFA698")]
		public void CloseDoors(Action onAnimationComplete)
		{
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0xAFA8C4", Offset = "0xAFA8C4", VA = "0xAFA8C4")]
		public void OpenTop(Action onAnimationComplete)
		{
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0xAFAA1C", Offset = "0xAFAA1C", VA = "0xAFAA1C")]
		private void OnDoorOpenComplete()
		{
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0xAFAA40", Offset = "0xAFAA40", VA = "0xAFAA40")]
		private void OnSlideBoxComplete()
		{
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0xAFAA54", Offset = "0xAFAA54", VA = "0xAFAA54")]
		private void OnDoorCloseComplete()
		{
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0xAFAA78", Offset = "0xAFAA78", VA = "0xAFAA78")]
		private void OnOpenTopComplete()
		{
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0xAFAA8C", Offset = "0xAFAA8C", VA = "0xAFAA8C")]
		public BedroomPuzzlebox()
		{
		}
	}
	[Token(Token = "0x200023E")]
	public class PlintGuard : MonoBehaviour
	{
		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Collider m_plintCollider;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Collider m_tableCollider;

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Grabbable m_grabbable;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Rigidbody m_rigidbody;

		[Token(Token = "0x600130A")]
		[Address(RVA = "0xAFAA94", Offset = "0xAFAA94", VA = "0xAFAA94")]
		private void Update()
		{
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0xAFB134", Offset = "0xAFB134", VA = "0xAFB134")]
		public PlintGuard()
		{
		}
	}
	[Token(Token = "0x200023F")]
	public class PuzzleboxMechanics : MonoBehaviour
	{
		[Token(Token = "0x2000558")]
		private enum PlintState
		{
			[Token(Token = "0x4001FCE")]
			Inside,
			[Token(Token = "0x4001FCF")]
			Outside,
			[Token(Token = "0x4001FD0")]
			EnterLock,
			[Token(Token = "0x4001FD1")]
			InLock,
			[Token(Token = "0x4001FD2")]
			OpenDoors,
			[Token(Token = "0x4001FD3")]
			SlideBox,
			[Token(Token = "0x4001FD4")]
			PlacePlint,
			[Token(Token = "0x4001FD5")]
			Closing,
			[Token(Token = "0x4001FD6")]
			TopOff,
			[Token(Token = "0x4001FD7")]
			GrabKey
		}

		[Token(Token = "0x2000559")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9279F0", Offset = "0x9279F0")]
		private sealed class <GrabbingHaptic>d__74 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PuzzleboxMechanics <>4__this;

			[Token(Token = "0x17000496")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60025FF")]
				[Address(RVA = "0xAFD860", Offset = "0xAFD860", VA = "0xAFD860", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000497")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002601")]
				[Address(RVA = "0xAFD8D0", Offset = "0xAFD8D0", VA = "0xAFD8D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60025FC")]
			[Address(RVA = "0xAFD5F0", Offset = "0xAFD5F0", VA = "0xAFD5F0")]
			[DebuggerHidden]
			public <GrabbingHaptic>d__74(int <>1__state)
			{
			}

			[Token(Token = "0x60025FD")]
			[Address(RVA = "0xAFD6F0", Offset = "0xAFD6F0", VA = "0xAFD6F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60025FE")]
			[Address(RVA = "0xAFD6F4", Offset = "0xAFD6F4", VA = "0xAFD6F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002600")]
			[Address(RVA = "0xAFD868", Offset = "0xAFD868", VA = "0xAFD868", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000EC2")]
		private const float BoxLocalPositionZ = -0.28f;

		[Token(Token = "0x4000EC3")]
		private const float BoxOutThreshold = 0.01f;

		[Token(Token = "0x4000EC4")]
		private const float PlintEnterLockDistance = 0.03f;

		[Token(Token = "0x4000EC5")]
		private const float MinRotationOffset = 0.005f;

		[Token(Token = "0x4000EC6")]
		private const float PlintTipDistance = 0.12f;

		[Token(Token = "0x4000EC7")]
		private const float LockRotationMultiplier = 3f;

		[Token(Token = "0x4000EC8")]
		private const float InLockBreakDistance = 0.25f;

		[Token(Token = "0x4000EC9")]
		private const float HapticsInterval = 0.05f;

		[Token(Token = "0x4000ECA")]
		private const float TimeUntilAutoPickup = 0.6f;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlintState m_currentState;

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BedroomPuzzlebox m_bedroomPuzzleBox;

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_lockPlacemntTransform;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform m_lockSocketTransform;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform m_plintPlacement;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform m_plintTransform;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Rigidbody m_plintRigidbody;

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float m_socketWidth;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float m_lockSquareDistance;

		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float m_plintPlacementDistance;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float m_plintPlacementRotationTolerance;

		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float m_unlockAtRotationDegrees;

		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Grabbable m_plintGrabbable;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Grabbable m_boxGrabbable;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private CameraZoomer m_cameraZoomer;

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private InteractableObject m_puzzleBoxInteraction;

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableObject m_keyInteractable;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private PointerInteractable m_keyPointerInteractable;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92E6F8", Offset = "0x92E6F8")]
		[SerializeField]
		private AnimationDataSerializer m_keyAnimationData;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92E744", Offset = "0x92E744")]
		[SerializeField]
		private SoundEffect m_plintTake;

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private SoundEffect m_plintInsert;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private SoundEffect m_boxPulledout;

		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private SoundEffect m_endSequence;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private SoundEffectPlayer m_plintTurnLoop;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92E7D0", Offset = "0x92E7D0")]
		[SerializeField]
		private HapticClip m_lockRotationHaptic;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private bool m_isHoldingKey;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		private bool m_isTurningPlintInLock;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
		private bool m_hasInitialAxisRotation;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_halfSocketDistanceSquared;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float m_currentLockSocketRotationValue;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private int m_placementTweensCompleted;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Vector3 m_plintStartPosition;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Rigidbody m_rigidbody;

		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Quaternion m_targetTweenRotation;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Quaternion m_initialPlintLockRotation;

		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Quaternion m_initialLockSocketRotation;

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Quaternion m_lastHandRotation;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Quaternion m_last1DOF;

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private bool m_isPlayingTurningSound;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private WaitForSeconds m_waitForHapticsInterval;

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Coroutine m_waitForHapticsIntervalRoutine;

		[Token(Token = "0x600130C")]
		[Address(RVA = "0xAFB13C", Offset = "0xAFB13C", VA = "0xAFB13C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0xAFB408", Offset = "0xAFB408", VA = "0xAFB408")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0xAFB430", Offset = "0xAFB430", VA = "0xAFB430")]
		private void Update()
		{
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0xAFBA5C", Offset = "0xAFBA5C", VA = "0xAFBA5C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0xAFC340", Offset = "0xAFC340", VA = "0xAFC340")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x93AF98", Offset = "0x93AF98")]
		public void SkipToOpenDoors()
		{
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0xAFC344", Offset = "0xAFC344", VA = "0xAFC344")]
		public void EnablePuzzleActive()
		{
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0xAFB220", Offset = "0xAFB220", VA = "0xAFB220")]
		public void DisablePuzzleBox(bool checkPuzzleComplete)
		{
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0xAFB468", Offset = "0xAFB468", VA = "0xAFB468")]
		private void InsideSocketMovement()
		{
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0xAFB56C", Offset = "0xAFB56C", VA = "0xAFB56C")]
		private void OutsideMovement()
		{
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0xAFB730", Offset = "0xAFB730", VA = "0xAFB730")]
		private void InsideLockMovement()
		{
		}

		[Token(Token = "0x6001316")]
		[Address(RVA = "0xAFB7C4", Offset = "0xAFB7C4", VA = "0xAFB7C4")]
		private void BoxMovement()
		{
		}

		[Token(Token = "0x6001317")]
		[Address(RVA = "0xAFB89C", Offset = "0xAFB89C", VA = "0xAFB89C")]
		private void PlacePlint()
		{
		}

		[Token(Token = "0x6001318")]
		[Address(RVA = "0xAFCEF0", Offset = "0xAFCEF0", VA = "0xAFCEF0")]
		private bool TryGetMatchingRotation(Transform currentTransform, Vector3 targetForwardAxis, Vector3 targetUpAxis, float deltaRotationTolerance, ref Quaternion matchingRotation)
		{
			return default(bool);
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0xAFD28C", Offset = "0xAFD28C", VA = "0xAFD28C")]
		private void OnEnterLockMovementComplete()
		{
		}

		[Token(Token = "0x600131A")]
		[Address(RVA = "0xAFD2AC", Offset = "0xAFD2AC", VA = "0xAFD2AC")]
		private void OnPlacementComplete()
		{
		}

		[Token(Token = "0x600131B")]
		[Address(RVA = "0xAFD39C", Offset = "0xAFD39C", VA = "0xAFD39C")]
		private void OnDoorsOpenComplete()
		{
		}

		[Token(Token = "0x600131C")]
		[Address(RVA = "0xAFD3A4", Offset = "0xAFD3A4", VA = "0xAFD3A4")]
		private void OnBoxSlideComplete()
		{
		}

		[Token(Token = "0x600131D")]
		[Address(RVA = "0xAFD430", Offset = "0xAFD430", VA = "0xAFD430")]
		private void OnDoorsClosedComplete()
		{
		}

		[Token(Token = "0x600131E")]
		[Address(RVA = "0xAFD4BC", Offset = "0xAFD4BC", VA = "0xAFD4BC")]
		private void OnTopOffComplete()
		{
		}

		[Token(Token = "0x600131F")]
		[Address(RVA = "0xAFD4C4", Offset = "0xAFD4C4", VA = "0xAFD4C4")]
		private void OnKeyAnimComplete()
		{
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0xAFC39C", Offset = "0xAFC39C", VA = "0xAFC39C")]
		private void SetState(PlintState newState)
		{
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0xAFC0EC", Offset = "0xAFC0EC", VA = "0xAFC0EC")]
		private float GetDeltaAngleAroundAxis(Quaternion rotation, Vector3 rotationLockAxis)
		{
			return default(float);
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0xAFBF54", Offset = "0xAFBF54", VA = "0xAFBF54")]
		private void HandleTurningSoundLoop(bool shouldLoop)
		{
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0xAFD57C", Offset = "0xAFD57C", VA = "0xAFD57C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93AFD0", Offset = "0x93AFD0")]
		private IEnumerator GrabbingHaptic()
		{
			return null;
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0xAFD4F8", Offset = "0xAFD4F8", VA = "0xAFD4F8")]
		private void StartWaitForHapticsRoutine()
		{
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0xAFD548", Offset = "0xAFD548", VA = "0xAFD548")]
		private void TryStopWaitForHapticsRoutine()
		{
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0xAFBFEC", Offset = "0xAFBFEC", VA = "0xAFBFEC")]
		private void GrabbedKey(Quaternion currentRotation)
		{
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0xAFBF4C", Offset = "0xAFBF4C", VA = "0xAFBF4C")]
		private void DroppedKey()
		{
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0xAFC070", Offset = "0xAFC070", VA = "0xAFC070")]
		private void SetInitialRotationValues(Quaternion currentRotation)
		{
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0xAFD61C", Offset = "0xAFD61C", VA = "0xAFD61C")]
		public PuzzleboxMechanics()
		{
		}
	}
}
namespace Cortopia.Scripts.Puzzles.Lockbox
{
	[Token(Token = "0x2000240")]
	public class CrankLock : MonoBehaviour
	{
		[Token(Token = "0x4000EF4")]
		private const float BaseRotateSpeed = 200f;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_currentDigit;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_rotateTransform;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int m_digitMax;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private PointerInteractable m_buttonPokeInteraction;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_oneDigitRotationDegrees;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_rotatedSoFar;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_thisFullRotation;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_currentRotateSpeed;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_isRotating;

		[Token(Token = "0x1700024E")]
		public int CurrentDigit
		{
			[Token(Token = "0x600132E")]
			[Address(RVA = "0xC88C0C", Offset = "0xC88C0C", VA = "0xC88C0C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000032")]
		public event Action OnRotationStart
		{
			[Token(Token = "0x600132A")]
			[Address(RVA = "0xC8885C", Offset = "0xC8885C", VA = "0xC8885C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B034", Offset = "0x93B034")]
			add
			{
			}
			[Token(Token = "0x600132B")]
			[Address(RVA = "0xC88948", Offset = "0xC88948", VA = "0xC88948")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B044", Offset = "0x93B044")]
			remove
			{
			}
		}

		[Token(Token = "0x14000033")]
		public event Action OnRotationEnd
		{
			[Token(Token = "0x600132C")]
			[Address(RVA = "0xC88A34", Offset = "0xC88A34", VA = "0xC88A34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B054", Offset = "0x93B054")]
			add
			{
			}
			[Token(Token = "0x600132D")]
			[Address(RVA = "0xC88B20", Offset = "0xC88B20", VA = "0xC88B20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B064", Offset = "0x93B064")]
			remove
			{
			}
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0xC88C14", Offset = "0xC88C14", VA = "0xC88C14")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0xC88C30", Offset = "0xC88C30", VA = "0xC88C30")]
		private void Update()
		{
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0xC88D80", Offset = "0xC88D80", VA = "0xC88D80")]
		public void SetActive(bool isActive)
		{
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0xC88DBC", Offset = "0xC88DBC", VA = "0xC88DBC")]
		public void SetDigit(int value)
		{
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0xC88E98", Offset = "0xC88E98", VA = "0xC88E98")]
		public void IncrementDigit(int addedValue)
		{
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0xC88ED0", Offset = "0xC88ED0", VA = "0xC88ED0")]
		public void UpdateDigit(int addedValue)
		{
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0xC88F34", Offset = "0xC88F34", VA = "0xC88F34")]
		public CrankLock()
		{
		}
	}
	[Token(Token = "0x2000241")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9266B4", Offset = "0x9266B4")]
	public class Lockbox : RoomBehaviour, IIdentifiableSavable, ISavable
	{
		[Serializable]
		[Token(Token = "0x200055A")]
		public class LockboxData : SavableData
		{
			[Token(Token = "0x4001FDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LockboxState LockboxState;

			[Token(Token = "0x4001FDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int[] CurrentCombination;

			[Token(Token = "0x6002602")]
			[Address(RVA = "0xAF9C1C", Offset = "0xAF9C1C", VA = "0xAF9C1C")]
			public LockboxData()
			{
			}
		}

		[Token(Token = "0x200055B")]
		public enum LockboxState
		{
			[Token(Token = "0x4001FDE")]
			Closed,
			[Token(Token = "0x4001FDF")]
			Open,
			[Token(Token = "0x4001FE0")]
			Complete
		}

		[Serializable]
		[Token(Token = "0x200055C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927A00", Offset = "0x927A00")]
		private sealed class <>c
		{
			[Token(Token = "0x4001FE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001FE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<CrankLock, int> <>9__18_0;

			[Token(Token = "0x4001FE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<CrankLock, int> <>9__26_0;

			[Token(Token = "0x6002604")]
			[Address(RVA = "0xAF9BB4", Offset = "0xAF9BB4", VA = "0xAF9BB4")]
			public <>c()
			{
			}

			[Token(Token = "0x6002605")]
			[Address(RVA = "0xAF9BBC", Offset = "0xAF9BBC", VA = "0xAF9BBC")]
			internal int <Serialize>b__18_0(CrankLock x)
			{
				return default(int);
			}

			[Token(Token = "0x6002606")]
			[Address(RVA = "0xAF9BEC", Offset = "0xAF9BEC", VA = "0xAF9BEC")]
			internal int <GetDefaultSaveData>b__26_0(CrankLock x)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000F00")]
		private const float CharacterEnableHoldTime = 0.1f;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int sm_chestOpenIdleState;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int sm_chestOpenTrigger;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string m_guid;

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int[] m_correctCombination;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private CrankLock[] m_locks;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92E8BC", Offset = "0x92E8BC")]
		[SerializeField]
		private InteractableObject m_characterInteractable;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private InteractableObject m_zoomInInteractable;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92E918", Offset = "0x92E918")]
		[SerializeField]
		private UnityEvent m_onPuzzleComplete;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private LockboxData m_saveData;

		[Token(Token = "0x1700024F")]
		public string Guid
		{
			[Token(Token = "0x6001336")]
			[Address(RVA = "0xC88F44", Offset = "0xC88F44", VA = "0xC88F44", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001337")]
			[Address(RVA = "0xC88F4C", Offset = "0xC88F4C", VA = "0xC88F4C", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0xC88F54", Offset = "0xC88F54", VA = "0xC88F54")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0xC890B8", Offset = "0xC890B8", VA = "0xC890B8", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0xC892F8", Offset = "0xC892F8", VA = "0xC892F8", Slot = "8")]
		public void Serialize(IWriteSave save)
		{
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0xC894C4", Offset = "0xC894C4", VA = "0xC894C4", Slot = "9")]
		public void Deserialize(IReadSave save)
		{
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0xC896E4", Offset = "0xC896E4", VA = "0xC896E4")]
		public void OnInvitationPickedUp()
		{
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0xC89714", Offset = "0xC89714", VA = "0xC89714")]
		public void CameraZoomOut()
		{
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0xC89804", Offset = "0xC89804", VA = "0xC89804")]
		public void SetInteractable(bool isInteractable)
		{
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0xC898C4", Offset = "0xC898C4", VA = "0xC898C4")]
		public void EnableZoomInInteraction()
		{
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0xC89244", Offset = "0xC89244", VA = "0xC89244")]
		private void OnRotationStart()
		{
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0xC89900", Offset = "0xC89900", VA = "0xC89900")]
		private void OnRotationEnd()
		{
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0xC88F78", Offset = "0xC88F78", VA = "0xC88F78")]
		private LockboxData GetDefaultSaveData()
		{
			return null;
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0xC89C50", Offset = "0xC89C50", VA = "0xC89C50")]
		public Lockbox()
		{
		}
	}
}
namespace Cortopia.Scripts.Puzzles.Flowers
{
	[Token(Token = "0x2000242")]
	public enum FlowerDance
	{
		[Token(Token = "0x4000F0C")]
		Incorrect,
		[Token(Token = "0x4000F0D")]
		Correct,
		[Token(Token = "0x4000F0E")]
		CorrectReoccuring,
		[Token(Token = "0x4000F0F")]
		Reset
	}
	[Token(Token = "0x2000243")]
	public class FlowerNote : MonoBehaviour
	{
		[Token(Token = "0x200055D")]
		private struct AnimatorParameters
		{
			[Token(Token = "0x4001FE4")]
			public const string PlayNote = "PlayNote";

			[Token(Token = "0x4001FE5")]
			public const string IsSad = "isSad";

			[Token(Token = "0x4001FE6")]
			public const string IsDancing = "isDancing";

			[Token(Token = "0x4001FE7")]
			public const string ShortDance = "ShortDance";
		}

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_note;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92E974", Offset = "0x92E974")]
		[SerializeField]
		private AudioSource m_audio;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Collider m_collider;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_flowerScaleTime;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool m_isInteractable;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_resetInteractivityTime;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private readonly Vector3 m_defaultScale;

		[Token(Token = "0x4000F18")]
		private const float ResetInteractivityTimer = 0.75f;

		[Token(Token = "0x17000250")]
		public int Note
		{
			[Token(Token = "0x6001345")]
			[Address(RVA = "0xC86D5C", Offset = "0xC86D5C", VA = "0xC86D5C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000251")]
		public bool IsSad
		{
			[Token(Token = "0x6001346")]
			[Address(RVA = "0xC86D64", Offset = "0xC86D64", VA = "0xC86D64")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0xC86DC8", Offset = "0xC86DC8", VA = "0xC86DC8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0xC86E7C", Offset = "0xC86E7C", VA = "0xC86E7C")]
		public void EnableFlower()
		{
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0xC86FF0", Offset = "0xC86FF0", VA = "0xC86FF0")]
		public void DisableFlower()
		{
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0xC870B4", Offset = "0xC870B4", VA = "0xC870B4")]
		public void PlayNote()
		{
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0xC870BC", Offset = "0xC870BC", VA = "0xC870BC")]
		public void PlayNote(FlowerDance flowerDanceAnimation)
		{
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0xC87174", Offset = "0xC87174", VA = "0xC87174")]
		public void PlayNoteAnimation(bool correctNote, bool playShortDance)
		{
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0xC872C0", Offset = "0xC872C0", VA = "0xC872C0")]
		public void PlayMelodyResultAnimation(bool correctNote)
		{
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0xC8722C", Offset = "0xC8722C", VA = "0xC8722C")]
		public void ResetAnimation()
		{
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0xC86E2C", Offset = "0xC86E2C", VA = "0xC86E2C")]
		private void SetInteractable(bool isInteractable)
		{
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0xC87364", Offset = "0xC87364", VA = "0xC87364")]
		public FlowerNote()
		{
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0xC873F0", Offset = "0xC873F0", VA = "0xC873F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B074", Offset = "0x93B074")]
		private void <EnableFlower>b__15_0()
		{
		}
	}
	[Token(Token = "0x2000244")]
	public class FlowerNotesManager : RoomBehaviour, IIdentifiableSavable, ISavable
	{
		[Token(Token = "0x200055E")]
		private enum PuzzleState
		{
			[Token(Token = "0x4001FE9")]
			NotStarted,
			[Token(Token = "0x4001FEA")]
			Started,
			[Token(Token = "0x4001FEB")]
			Completed
		}

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		private string m_guid;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92EA28", Offset = "0x92EA28")]
		[SerializeField]
		private ScriptableEvent m_puzzleCompletedEvent;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ScriptableEvent m_giantForestButterflyEvent;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private InteractableObject m_birdInteractable;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private PlayableDirector[] m_birdDirectors;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92EAA4", Offset = "0x92EAA4")]
		[SerializeField]
		private int m_butterflyMelodyIndex;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private string[] m_melodies;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private FlowerNote[] m_flowers;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IReadOnlyList<int> m_correctNotes;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private IList<int> m_playedNotes;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SavableInt m_currentMelodyIndex;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int m_correctNoteCompareIndex;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private PuzzleState m_puzzleState;

		[Token(Token = "0x17000252")]
		public string Guid
		{
			[Token(Token = "0x6001352")]
			[Address(RVA = "0xC873F8", Offset = "0xC873F8", VA = "0xC873F8", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001353")]
			[Address(RVA = "0xC87400", Offset = "0xC87400", VA = "0xC87400", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0xC87408", Offset = "0xC87408", VA = "0xC87408")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0xC87410", Offset = "0xC87410", VA = "0xC87410", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0xC87758", Offset = "0xC87758", VA = "0xC87758", Slot = "8")]
		public void Serialize(IWriteSave write)
		{
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0xC87840", Offset = "0xC87840", VA = "0xC87840", Slot = "9")]
		public void Deserialize(IReadSave read)
		{
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0xC87938", Offset = "0xC87938", VA = "0xC87938")]
		public void TryPlayNote(int note)
		{
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0xC87C94", Offset = "0xC87C94", VA = "0xC87C94")]
		public void ResetAndPlayMelody()
		{
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0xC879C4", Offset = "0xC879C4", VA = "0xC879C4")]
		private FlowerDance PlayNote(int note, FlowerNote playedFlower)
		{
			return default(FlowerDance);
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0xC8856C", Offset = "0xC8856C", VA = "0xC8856C")]
		private void SetAllFlowersIncorrect(FlowerNote currentFlower)
		{
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0xC88288", Offset = "0xC88288", VA = "0xC88288")]
		private void ResetSadFlowers(FlowerNote currentFlower)
		{
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0xC87F74", Offset = "0xC87F74", VA = "0xC87F74")]
		private bool IsCorrectMelody()
		{
			return default(bool);
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0xC87E20", Offset = "0xC87E20", VA = "0xC87E20")]
		private bool IsCorrectNote()
		{
			return default(bool);
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0xC88388", Offset = "0xC88388", VA = "0xC88388")]
		private FlowerDance GetReoccuringDanceState(int note)
		{
			return default(FlowerDance);
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0xC880D0", Offset = "0xC880D0", VA = "0xC880D0")]
		private FlowerDance CompleteMelody()
		{
			return default(FlowerDance);
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0xC87528", Offset = "0xC87528", VA = "0xC87528")]
		private void SetCurrentMelody()
		{
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0xC88658", Offset = "0xC88658", VA = "0xC88658")]
		private List<int> CharsToIntList(string intString)
		{
			return null;
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0xC887A0", Offset = "0xC887A0", VA = "0xC887A0")]
		public FlowerNotesManager()
		{
		}
	}
}
namespace Cortopia.Scripts.Puzzles.Falling
{
	[Token(Token = "0x2000245")]
	public class DebrisCounter : MonoBehaviour
	{
		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_debrisAmount;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent m_onDebrisCleared;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int m_clearedDebris;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool m_complete;

		[Token(Token = "0x6001364")]
		[Address(RVA = "0xC86C88", Offset = "0xC86C88", VA = "0xC86C88")]
		public void ClearDebris()
		{
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0xC86C98", Offset = "0xC86C98", VA = "0xC86C98")]
		private void CheckCompleteStatus()
		{
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0xC86CEC", Offset = "0xC86CEC", VA = "0xC86CEC")]
		public DebrisCounter()
		{
		}
	}
}
namespace Cortopia.Scripts.Puzzles.EstateKitchen
{
	[Token(Token = "0x2000246")]
	public class Ingredient : MonoBehaviour
	{
		[Token(Token = "0x4000F2A")]
		private const int HeightResetY = 0;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Rigidbody m_rigidbody;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Grabbable m_grabbable;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_canBurn;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 m_originalPosition;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Quaternion m_originalRotation;

		[Token(Token = "0x17000253")]
		public Grabbable Grabbable
		{
			[Token(Token = "0x6001367")]
			[Address(RVA = "0xC85060", Offset = "0xC85060", VA = "0xC85060")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000254")]
		public bool CanBurn
		{
			[Token(Token = "0x6001368")]
			[Address(RVA = "0xC85068", Offset = "0xC85068", VA = "0xC85068")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000034")]
		public event Action OnReset
		{
			[Token(Token = "0x6001369")]
			[Address(RVA = "0xC85070", Offset = "0xC85070", VA = "0xC85070")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B084", Offset = "0x93B084")]
			add
			{
			}
			[Token(Token = "0x600136A")]
			[Address(RVA = "0xC8515C", Offset = "0xC8515C", VA = "0xC8515C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B094", Offset = "0x93B094")]
			remove
			{
			}
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0xC85248", Offset = "0xC85248", VA = "0xC85248")]
		private void Awake()
		{
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0xC852B8", Offset = "0xC852B8", VA = "0xC852B8")]
		private void Update()
		{
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0xC8530C", Offset = "0xC8530C", VA = "0xC8530C")]
		public void ResetIngredient()
		{
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0xC85558", Offset = "0xC85558", VA = "0xC85558")]
		public void UseIngredient()
		{
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0xC855C8", Offset = "0xC855C8", VA = "0xC855C8")]
		public Ingredient()
		{
		}
	}
	[Token(Token = "0x2000247")]
	public class IngredientHinge : MonoBehaviour
	{
		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Rigidbody m_connectedBody;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Ingredient m_ingredient;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Rigidbody m_rigidbody;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private FixedJoint m_joint;

		[Token(Token = "0x6001370")]
		[Address(RVA = "0xC855D8", Offset = "0xC855D8", VA = "0xC855D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0xC856FC", Offset = "0xC856FC", VA = "0xC856FC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0xC857EC", Offset = "0xC857EC", VA = "0xC857EC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0xC858DC", Offset = "0xC858DC", VA = "0xC858DC")]
		private void ResetHinge()
		{
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0xC855DC", Offset = "0xC855DC", VA = "0xC855DC")]
		private void AddJoint()
		{
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0xC858E0", Offset = "0xC858E0", VA = "0xC858E0")]
		private void TryBreakJoint(Grabber g)
		{
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0xC85994", Offset = "0xC85994", VA = "0xC85994")]
		public IngredientHinge()
		{
		}
	}
	[Token(Token = "0x2000248")]
	public class IngredientPipe : MonoBehaviour
	{
		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CharacterCutscenePlayer m_oneIngredient;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CharacterCutscenePlayer m_twoIngredient;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CharacterCutscenePlayer m_threeIngredient;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ScriptableEvent m_correntEvent;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ScriptableEvent m_wrongEvent;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private InventoryItemData[] m_neededIngredients;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92EC00", Offset = "0x92EC00")]
		[SerializeField]
		private VoiceLineCollection m_fourHalfInteractReactions;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92EC4C", Offset = "0x92EC4C")]
		[SerializeField]
		private UnityEvent m_noIngredientsFound;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_currentIngredientCount;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private HashSet<int> m_alreadyAddedIngredients;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private CharacterVoiceLine m_voiceLine;

		[Token(Token = "0x6001377")]
		[Address(RVA = "0xC8599C", Offset = "0xC8599C", VA = "0xC8599C")]
		public void AddIngredient(PlayableCharacter fourHalf)
		{
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0xC85CAC", Offset = "0xC85CAC", VA = "0xC85CAC")]
		public void CheckIngredients(PlayableCharacter fourHalf)
		{
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0xC85E04", Offset = "0xC85E04", VA = "0xC85E04")]
		public IngredientPipe()
		{
		}
	}
	[Token(Token = "0x2000249")]
	public class Oven : MonoBehaviour
	{
		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Dictionary<Ingredient, Tween> m_tweens;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Color sm_burnColor;

		[Token(Token = "0x600137A")]
		[Address(RVA = "0xC85EAC", Offset = "0xC85EAC", VA = "0xC85EAC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0xC86040", Offset = "0xC86040", VA = "0xC86040")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0xC86168", Offset = "0xC86168", VA = "0xC86168")]
		public Oven()
		{
		}
	}
	[Token(Token = "0x200024A")]
	public class Pot : RoomBehaviour
	{
		[Token(Token = "0x200055F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927A10", Offset = "0x927A10")]
		private sealed class <PlayInitialVO>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Pot <>4__this;

			[Token(Token = "0x4001FEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <delay>5__2;

			[Token(Token = "0x17000498")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600260A")]
				[Address(RVA = "0xC86C10", Offset = "0xC86C10", VA = "0xC86C10", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000499")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600260C")]
				[Address(RVA = "0xC86C80", Offset = "0xC86C80", VA = "0xC86C80", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002607")]
			[Address(RVA = "0xC86798", Offset = "0xC86798", VA = "0xC86798")]
			[DebuggerHidden]
			public <PlayInitialVO>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6002608")]
			[Address(RVA = "0xC86AA4", Offset = "0xC86AA4", VA = "0xC86AA4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002609")]
			[Address(RVA = "0xC86AA8", Offset = "0xC86AA8", VA = "0xC86AA8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600260B")]
			[Address(RVA = "0xC86C18", Offset = "0xC86C18", VA = "0xC86C18", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000560")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927A20", Offset = "0x927A20")]
		private sealed class <PlayFinalVO>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Pot <>4__this;

			[Token(Token = "0x1700049A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002610")]
				[Address(RVA = "0xC86A2C", Offset = "0xC86A2C", VA = "0xC86A2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700049B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002612")]
				[Address(RVA = "0xC86A9C", Offset = "0xC86A9C", VA = "0xC86A9C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600260D")]
			[Address(RVA = "0xC86838", Offset = "0xC86838", VA = "0xC86838")]
			[DebuggerHidden]
			public <PlayFinalVO>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x600260E")]
			[Address(RVA = "0xC868E4", Offset = "0xC868E4", VA = "0xC868E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600260F")]
			[Address(RVA = "0xC868E8", Offset = "0xC868E8", VA = "0xC868E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002611")]
			[Address(RVA = "0xC86A34", Offset = "0xC86A34", VA = "0xC86A34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F42")]
		private const int RequiredIngredients = 4;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BoolVariable m_isPuzzleCompleted;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SoundEffectPlayer m_soundEffectPlayer;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92ECB8", Offset = "0x92ECB8")]
		[SerializeField]
		private Voice m_cookVoice;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private RandomVOPlayer m_randomVOPlayer;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private VoiceLineCollection m_instructionsVO;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92ED24", Offset = "0x92ED24")]
		[SerializeField]
		private Transform m_ingredientsParent;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Ingredient[] m_ingredients;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92ED80", Offset = "0x92ED80")]
		[SerializeField]
		private UnityEvent m_onPotComplete;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_recipeStep;

		[Token(Token = "0x600137E")]
		[Address(RVA = "0xC8625C", Offset = "0xC8625C", VA = "0xC8625C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0xC86264", Offset = "0xC86264", VA = "0xC86264", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0xC86398", Offset = "0xC86398", VA = "0xC86398")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0xC86460", Offset = "0xC86460", VA = "0xC86460")]
		private void UseIngredient(Ingredient ingredient)
		{
		}

		[Token(Token = "0x6001382")]
		[Address(RVA = "0xC865F0", Offset = "0xC865F0", VA = "0xC865F0")]
		public void ResetAllIngredients()
		{
		}

		[Token(Token = "0x6001383")]
		[Address(RVA = "0xC866A4", Offset = "0xC866A4", VA = "0xC866A4")]
		public void StartPuzzle()
		{
		}

		[Token(Token = "0x6001384")]
		[Address(RVA = "0xC86774", Offset = "0xC86774", VA = "0xC86774")]
		public void EndPuzzle()
		{
		}

		[Token(Token = "0x6001385")]
		[Address(RVA = "0xC8628C", Offset = "0xC8628C", VA = "0xC8628C")]
		public void SetIngredientsLocked(bool set)
		{
		}

		[Token(Token = "0x6001386")]
		[Address(RVA = "0xC86700", Offset = "0xC86700", VA = "0xC86700")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93B0A4", Offset = "0x93B0A4")]
		private IEnumerator PlayInitialVO()
		{
			return null;
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0xC867C4", Offset = "0xC867C4", VA = "0xC867C4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93B108", Offset = "0x93B108")]
		private IEnumerator PlayFinalVO()
		{
			return null;
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0xC86328", Offset = "0xC86328", VA = "0xC86328")]
		private void TryEnableCookBanter()
		{
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0xC86574", Offset = "0xC86574", VA = "0xC86574")]
		private void CompletePuzzle()
		{
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0xC86864", Offset = "0xC86864", VA = "0xC86864")]
		public Pot()
		{
		}
	}
}
namespace Cortopia.Scripts.Puzzles.Clocktower
{
	[Token(Token = "0x200024B")]
	public class Clock : RoomBehaviour
	{
		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GrabbableClockHandle[] m_handles;

		[Token(Token = "0x600138B")]
		[Address(RVA = "0xC7E6C0", Offset = "0xC7E6C0", VA = "0xC7E6C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0xC7E750", Offset = "0xC7E750", VA = "0xC7E750", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0xC7E6C8", Offset = "0xC7E6C8", VA = "0xC7E6C8")]
		public void EnableGrabbables(bool active)
		{
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0xC7EA44", Offset = "0xC7EA44", VA = "0xC7EA44")]
		public void EnableGrabbables(ClockHandleType handleType)
		{
		}

		[Token(Token = "0x600138F")]
		[Address(RVA = "0xC7EAF8", Offset = "0xC7EAF8", VA = "0xC7EAF8")]
		public Clock()
		{
		}
	}
	[Token(Token = "0x200024C")]
	public enum ClockHandleType
	{
		[Token(Token = "0x4000F4E")]
		Minute,
		[Token(Token = "0x4000F4F")]
		Hour
	}
	[Token(Token = "0x200024D")]
	public class ClockReader : MonoBehaviour
	{
		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x92EDDC", Offset = "0x92EDDC")]
		private int m_goalHour;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x92EE1C", Offset = "0x92EE1C")]
		private int m_goalMinute;

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private FloatVariable m_hourDegrees;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private FloatVariable m_minuteDegrees;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private BoolVariable m_isPuzzleCompleted;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ScriptableEvent m_puzzleCompleteEvent;

		[Token(Token = "0x6001390")]
		[Address(RVA = "0xC7EB58", Offset = "0xC7EB58", VA = "0xC7EB58")]
		public void CheckCondition()
		{
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0xC7EBFC", Offset = "0xC7EBFC", VA = "0xC7EBFC")]
		private int DegreesToHour(float degrees)
		{
			return default(int);
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0xC7ECC4", Offset = "0xC7ECC4", VA = "0xC7ECC4")]
		private float GetDegreesActual(float degrees)
		{
			return default(float);
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0xC7ECF8", Offset = "0xC7ECF8", VA = "0xC7ECF8")]
		public ClockReader()
		{
		}
	}
	[Token(Token = "0x200024E")]
	public class EntranceClock : EntranceClockAnimation
	{
		[Token(Token = "0x4000F56")]
		private const float AnimateTime = 1f;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int sm_interact;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92EE9C", Offset = "0x92EE9C")]
		[SerializeField]
		private CardSuit m_cardSuit;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SoundEffect m_correctSfx;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SoundEffect m_wrongSfx;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_isPuzzleActive;

		[Token(Token = "0x17000255")]
		public CardSuit CardSuit
		{
			[Token(Token = "0x600139A")]
			[Address(RVA = "0xC7F290", Offset = "0xC7F290", VA = "0xC7F290")]
			get
			{
				return default(CardSuit);
			}
		}

		[Token(Token = "0x14000035")]
		private event Action OnResetClock
		{
			[Token(Token = "0x6001394")]
			[Address(RVA = "0xC7ED08", Offset = "0xC7ED08", VA = "0xC7ED08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B16C", Offset = "0x93B16C")]
			add
			{
			}
			[Token(Token = "0x6001395")]
			[Address(RVA = "0xC7EDF4", Offset = "0xC7EDF4", VA = "0xC7EDF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B17C", Offset = "0x93B17C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000036")]
		private event Action OnMoveHandle
		{
			[Token(Token = "0x6001396")]
			[Address(RVA = "0xC7EEE0", Offset = "0xC7EEE0", VA = "0xC7EEE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B18C", Offset = "0x93B18C")]
			add
			{
			}
			[Token(Token = "0x6001397")]
			[Address(RVA = "0xC7EFCC", Offset = "0xC7EFCC", VA = "0xC7EFCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B19C", Offset = "0x93B19C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000037")]
		private event Action<bool> OnMoveHandleComplete
		{
			[Token(Token = "0x6001398")]
			[Address(RVA = "0xC7F0B8", Offset = "0xC7F0B8", VA = "0xC7F0B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B1AC", Offset = "0x93B1AC")]
			add
			{
			}
			[Token(Token = "0x6001399")]
			[Address(RVA = "0xC7F1A4", Offset = "0xC7F1A4", VA = "0xC7F1A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B1BC", Offset = "0x93B1BC")]
			remove
			{
			}
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0xC7F298", Offset = "0xC7F298", VA = "0xC7F298")]
		public void SubscribeToEvents(Action onReset, Action onMoveHandle, Action<bool> onMoveHandleComplete)
		{
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0xC7F2E8", Offset = "0xC7F2E8", VA = "0xC7F2E8")]
		public void UnsubscribeToEvents(Action onReset, Action onMoveHandle, Action<bool> onMoveHandleComplete)
		{
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0xC7F334", Offset = "0xC7F334", VA = "0xC7F334")]
		public void Interact()
		{
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0xC7F644", Offset = "0xC7F644", VA = "0xC7F644")]
		public void TryResetClock()
		{
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0xC7F554", Offset = "0xC7F554", VA = "0xC7F554")]
		private void TriggerFeedback()
		{
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0xC7F6E4", Offset = "0xC7F6E4", VA = "0xC7F6E4")]
		public EntranceClock()
		{
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0xC7F7B8", Offset = "0xC7F7B8", VA = "0xC7F7B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B1CC", Offset = "0x93B1CC")]
		private void <Interact>b__19_0()
		{
		}
	}
	[Token(Token = "0x200024F")]
	public class GrabbableClockHandle : MonoBehaviour
	{
		[Token(Token = "0x2000561")]
		private struct AudioConstants
		{
			[Token(Token = "0x4001FF3")]
			public const float MinRotationAngleThreshold = 0.02f;

			[Token(Token = "0x4001FF4")]
			public const float MaxAudioPlayThreshold = 0.15f;
		}

		[Token(Token = "0x4000F5F")]
		private const float ClockUpAngle = -90f;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ClockHandleType m_handleType;

		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private FloatVariable m_rotationInDegrees;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private FloatVariable m_currentRotatedAngle;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private FloatVariable m_currentOppositeHandleRotatedAngle;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92EF78", Offset = "0x92EF78")]
		[SerializeField]
		private Clock m_clock;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Grabbable m_grabbable;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform m_resetTransform;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform m_graphicsPivot;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform m_rotationPivot;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AudioSource m_audioSource;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92F014", Offset = "0x92F014")]
		[SerializeField]
		private bool m_isGrabbed;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		[SerializeField]
		private bool m_isTrackingOtherHandle;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		private bool m_hasInitialized;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 m_position;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 m_direction;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Quaternion m_previousRotation;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float m_audioPlayThreshold;

		[Token(Token = "0x17000256")]
		public ClockHandleType HandleType
		{
			[Token(Token = "0x60013A3")]
			[Address(RVA = "0xC7EAF0", Offset = "0xC7EAF0", VA = "0xC7EAF0")]
			get
			{
				return default(ClockHandleType);
			}
		}

		[Token(Token = "0x17000257")]
		public float RotationInDegrees
		{
			[Token(Token = "0x60013A4")]
			[Address(RVA = "0xC7F82C", Offset = "0xC7F82C", VA = "0xC7F82C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60013A5")]
			[Address(RVA = "0xC7F838", Offset = "0xC7F838", VA = "0xC7F838")]
			set
			{
			}
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0xC7F878", Offset = "0xC7F878", VA = "0xC7F878")]
		private bool IsApplicationNotPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0xC7F898", Offset = "0xC7F898", VA = "0xC7F898")]
		private void Update()
		{
		}

		[Token(Token = "0x60013A8")]
		[Address(RVA = "0xC7E800", Offset = "0xC7E800", VA = "0xC7E800")]
		public void SetPosition(float offset = 0f)
		{
		}

		[Token(Token = "0x60013A9")]
		[Address(RVA = "0xC7FFC0", Offset = "0xC7FFC0", VA = "0xC7FFC0")]
		public void GrabBegin(Grabber grabber)
		{
		}

		[Token(Token = "0x60013AA")]
		[Address(RVA = "0xC80030", Offset = "0xC80030", VA = "0xC80030")]
		public void GrabEnd(Grabber grabber, Vector3 velocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x60013AB")]
		[Address(RVA = "0xC7E984", Offset = "0xC7E984", VA = "0xC7E984")]
		public void SetGrabbableActive(bool active)
		{
		}

		[Token(Token = "0x60013AC")]
		[Address(RVA = "0xC7FC14", Offset = "0xC7FC14", VA = "0xC7FC14")]
		private void Rotate(float angle)
		{
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0xC7FE24", Offset = "0xC7FE24", VA = "0xC7FE24")]
		private void ResetPosition()
		{
		}

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0xC7F90C", Offset = "0xC7F90C", VA = "0xC7F90C")]
		private void UpdateRotation()
		{
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0xC7FC7C", Offset = "0xC7FC7C", VA = "0xC7FC7C")]
		private void MeasureValue()
		{
		}

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0xC7FF48", Offset = "0xC7FF48", VA = "0xC7FF48")]
		private void UpdateGraphics()
		{
		}

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0xC7FB34", Offset = "0xC7FB34", VA = "0xC7FB34")]
		private void UpdateAudio()
		{
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0xC800A0", Offset = "0xC800A0", VA = "0xC800A0")]
		private void TryPlayAudio()
		{
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0xC8006C", Offset = "0xC8006C", VA = "0xC8006C")]
		private void StopAudio()
		{
		}

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0xC800F0", Offset = "0xC800F0", VA = "0xC800F0")]
		private float GetHandleAngle(int hour)
		{
			return default(float);
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0xC80108", Offset = "0xC80108", VA = "0xC80108")]
		public GrabbableClockHandle()
		{
		}
	}
	[Token(Token = "0x2000250")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x926718", Offset = "0x926718")]
	public class Pendulum : RoomBehaviour
	{
		[Token(Token = "0x2000562")]
		private enum ReleaseAction
		{
			[Token(Token = "0x4001FF6")]
			UnParent = 1,
			[Token(Token = "0x4001FF7")]
			EnableLocomotion = 2,
			[Token(Token = "0x4001FF8")]
			EnableInput = 4
		}

		[Token(Token = "0x4000F71")]
		private const float EpsilonDistance = 0.15f;

		[Token(Token = "0x4000F72")]
		private const float MaxAttachDistance = 0.15f;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		private string m_guid;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92F0A8", Offset = "0x92F0A8")]
		[SerializeField]
		private SphereCollider m_overlapCollider;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Grabbable m_grabbable;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BoolVariable m_isAtMin;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private BoolVariable m_isAtMax;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private BoolVariable m_isAtJump;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private FloatVariable m_movePercentage;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92F144", Offset = "0x92F144")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private TranslationToRotationConstraint m_wheelConstraint;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Transform m_characterAttachPoint;

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92F1B0", Offset = "0x92F1B0")]
		[SerializeField]
		private float m_jumpHeight;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x92F1FC", Offset = "0x92F1FC")]
		private float m_jumpHeightThreshold;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92F240", Offset = "0x92F240")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x92F240", Offset = "0x92F240")]
		private float m_playThreshold;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private AudioSource m_audioSource;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioClip m_moveAudioClip;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip m_stopAudioClip;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private SoundEffect m_grabWeight;

		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92F2E8", Offset = "0x92F2E8")]
		[SerializeField]
		private HapticClip m_hapticClip;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private HapticClip m_hapticClipStop;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92F344", Offset = "0x92F344")]
		[SerializeField]
		private ReleaseAction m_onMinRelease;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		private ReleaseAction m_onMaxRelease;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private ReleaseAction m_onJumpRelease;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private bool m_isAtStop;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float m_previousY;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private LayerMask m_characterHitMask;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private IList<PlayableCharacter> m_charactersOnElevator;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Collider[] sm_sampleColliders;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private readonly Vector3 m_defaultPosition;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private readonly int m_isGrabbingHash;

		[Token(Token = "0x17000258")]
		public string Guid
		{
			[Token(Token = "0x60013B6")]
			[Address(RVA = "0xC80110", Offset = "0xC80110", VA = "0xC80110")]
			get
			{
				return null;
			}
			[Token(Token = "0x60013B7")]
			[Address(RVA = "0xC80118", Offset = "0xC80118", VA = "0xC80118")]
			set
			{
			}
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0xC80120", Offset = "0xC80120", VA = "0xC80120", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0xC80594", Offset = "0xC80594", VA = "0xC80594")]
		public void OnGrabBegin(Grabber grabber)
		{
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0xC80CB4", Offset = "0xC80CB4", VA = "0xC80CB4")]
		public void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0xC814B0", Offset = "0xC814B0", VA = "0xC814B0")]
		public void OnGrabEnd(Grabber activatedGrabber, Vector3 velocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0xC806E8", Offset = "0xC806E8", VA = "0xC806E8")]
		private void TryAttachCharactersToElevator()
		{
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0xC8175C", Offset = "0xC8175C", VA = "0xC8175C")]
		private void TryDetachCharactersFromElevator(ReleaseAction releaseAction)
		{
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0xC80510", Offset = "0xC80510", VA = "0xC80510")]
		private bool IsEqual(float a, float b)
		{
			return default(bool);
		}

		[Token(Token = "0x60013BF")]
		[Address(RVA = "0xC803FC", Offset = "0xC803FC", VA = "0xC803FC")]
		private void CalculatePercentage()
		{
		}

		[Token(Token = "0x60013C0")]
		[Address(RVA = "0xC8132C", Offset = "0xC8132C", VA = "0xC8132C")]
		private void TryPlayMoveSound(PointerType pointerType)
		{
		}

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0xC81410", Offset = "0xC81410", VA = "0xC81410")]
		private void PlayStopSound(PointerType pointerType)
		{
		}

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0xC81DAC", Offset = "0xC81DAC", VA = "0xC81DAC")]
		public Pendulum()
		{
		}
	}
	[Token(Token = "0x2000251")]
	public class PendulumHandler : MonoBehaviour
	{
		[Token(Token = "0x4000F90")]
		private const float MinFloatDiff = 0.01f;

		[Token(Token = "0x4000F91")]
		private const float MinMoveDiff = 0.1f;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly int m_pendulumHeightParamHash;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_pendulumAnimator;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private FloatVariable m_leftPendulumPercent;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private FloatVariable m_rightPendulumPercent;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AnimationCurve m_animationCurve;

		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x92F3F0", Offset = "0x92F3F0")]
		private float m_raisedThreshold;

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private NavMeshObstacle m_navMeshObstacle;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92F440", Offset = "0x92F440")]
		[SerializeField]
		private AudioSource m_audioSource;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private MathUtils.MinMax m_pitchMinMax;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AudioClip m_moveUp;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private AudioClip m_moveDown;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_previousRaiseValue;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float m_previousAudioValue;

		[Token(Token = "0x17000259")]
		private float RaiseValue
		{
			[Token(Token = "0x60013C4")]
			[Address(RVA = "0xC81EDC", Offset = "0xC81EDC", VA = "0xC81EDC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60013C5")]
		[Address(RVA = "0xC81F28", Offset = "0xC81F28", VA = "0xC81F28")]
		private void Start()
		{
		}

		[Token(Token = "0x60013C6")]
		[Address(RVA = "0xC820DC", Offset = "0xC820DC", VA = "0xC820DC")]
		private void Update()
		{
		}

		[Token(Token = "0x60013C7")]
		[Address(RVA = "0xC82234", Offset = "0xC82234", VA = "0xC82234")]
		private void PlayAudio(bool moveUp)
		{
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0xC8203C", Offset = "0xC8203C", VA = "0xC8203C")]
		private void ToggleNavMeshObstacle(float raiseValue)
		{
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0xC8235C", Offset = "0xC8235C", VA = "0xC8235C")]
		public PendulumHandler()
		{
		}
	}
	[Token(Token = "0x2000252")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x92677C", Offset = "0x92677C")]
	public class PendulumObstacleTrigger : MonoBehaviour
	{
		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private NavMeshObstacle m_navMeshObstacle;

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0xC82418", Offset = "0xC82418", VA = "0xC82418")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0xC82510", Offset = "0xC82510", VA = "0xC82510")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0xC824D8", Offset = "0xC824D8", VA = "0xC824D8")]
		private void SetObstacleActive(bool active)
		{
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0xC825D0", Offset = "0xC825D0", VA = "0xC825D0")]
		public PendulumObstacleTrigger()
		{
		}
	}
}
namespace Cortopia.Scripts.Puzzles.Castles
{
	[Token(Token = "0x2000253")]
	public class CardWorkerLumberjack : CardWorkerControl
	{
		[Token(Token = "0x4000FA0")]
		private const float TreeDenialDistance = 1f;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92F4CC", Offset = "0x92F4CC")]
		[SerializeField]
		private CardSuit m_cardWorkerSuit;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private CardColour m_cardWorkerColour;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private SphereCollider m_deniedGardenCollider;

		[Token(Token = "0x60013CE")]
		[Address(RVA = "0xC7B648", Offset = "0xC7B648", VA = "0xC7B648", Slot = "20")]
		public override bool TryAddTreeWork(CastlesTree tree)
		{
			return default(bool);
		}

		[Token(Token = "0x60013CF")]
		[Address(RVA = "0xC7B9B8", Offset = "0xC7B9B8", VA = "0xC7B9B8", Slot = "21")]
		public override void TryStartTreeInteraction(CastlesTree tree)
		{
		}

		[Token(Token = "0x60013D0")]
		[Address(RVA = "0xC7BA48", Offset = "0xC7BA48", VA = "0xC7BA48", Slot = "22")]
		public override void TryCompleteTreeInteraction(CastlesTree tree)
		{
		}

		[Token(Token = "0x60013D1")]
		[Address(RVA = "0xC7BAEC", Offset = "0xC7BAEC", VA = "0xC7BAEC")]
		public CardColour GetColour()
		{
			return default(CardColour);
		}

		[Token(Token = "0x60013D2")]
		[Address(RVA = "0xC7B994", Offset = "0xC7B994", VA = "0xC7B994")]
		private bool CanPerformWork(CardColour treeColour, CardSuit treeShape)
		{
			return default(bool);
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0xC7B7A4", Offset = "0xC7B7A4", VA = "0xC7B7A4")]
		private bool IsGardenDenied(CastlesTree tree)
		{
			return default(bool);
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0xC7BAF4", Offset = "0xC7BAF4", VA = "0xC7BAF4")]
		public CardWorkerLumberjack()
		{
		}
	}
	[Token(Token = "0x2000254")]
	public class CardWorkerPainter : CardWorkerControl
	{
		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92F538", Offset = "0x92F538")]
		[SerializeField]
		private CardColour m_cardWorkerColour;

		[Token(Token = "0x1700025A")]
		protected override CastlesTree.ParticleType WorkParticleType
		{
			[Token(Token = "0x60013D5")]
			[Address(RVA = "0xC7BB08", Offset = "0xC7BB08", VA = "0xC7BB08", Slot = "19")]
			get
			{
				return default(CastlesTree.ParticleType);
			}
		}

		[Token(Token = "0x60013D6")]
		[Address(RVA = "0xC7BB10", Offset = "0xC7BB10", VA = "0xC7BB10", Slot = "20")]
		public override bool TryAddTreeWork(CastlesTree tree)
		{
			return default(bool);
		}

		[Token(Token = "0x60013D7")]
		[Address(RVA = "0xC7BC78", Offset = "0xC7BC78", VA = "0xC7BC78", Slot = "21")]
		public override void TryStartTreeInteraction(CastlesTree tree)
		{
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0xC7BFC4", Offset = "0xC7BFC4", VA = "0xC7BFC4", Slot = "22")]
		public override void TryCompleteTreeInteraction(CastlesTree tree)
		{
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0xC7BC5C", Offset = "0xC7BC5C", VA = "0xC7BC5C")]
		private bool CanPerformWork(CardColour treeColour)
		{
			return default(bool);
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0xC7C05C", Offset = "0xC7C05C", VA = "0xC7C05C")]
		public CardWorkerPainter()
		{
		}
	}
	[Token(Token = "0x2000255")]
	public enum CardWorkerShapes
	{
		[Token(Token = "0x4000FA6")]
		Clubs,
		[Token(Token = "0x4000FA7")]
		Diamonds,
		[Token(Token = "0x4000FA8")]
		Hearts,
		[Token(Token = "0x4000FA9")]
		Spades
	}
	[Token(Token = "0x2000256")]
	public class CardWorkerTrimmer : CardWorkerControl
	{
		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92F584", Offset = "0x92F584")]
		[SerializeField]
		private CardSuit m_cardWorkerShape;

		[Token(Token = "0x1700025B")]
		protected override CastlesTree.ParticleType WorkParticleType
		{
			[Token(Token = "0x60013DB")]
			[Address(RVA = "0xC7C064", Offset = "0xC7C064", VA = "0xC7C064", Slot = "19")]
			get
			{
				return default(CastlesTree.ParticleType);
			}
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0xC7C06C", Offset = "0xC7C06C", VA = "0xC7C06C", Slot = "20")]
		public override bool TryAddTreeWork(CastlesTree tree)
		{
			return default(bool);
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0xC7C1C0", Offset = "0xC7C1C0", VA = "0xC7C1C0", Slot = "21")]
		public override void TryStartTreeInteraction(CastlesTree tree)
		{
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0xC7C23C", Offset = "0xC7C23C", VA = "0xC7C23C", Slot = "22")]
		public override void TryCompleteTreeInteraction(CastlesTree tree)
		{
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0xC7C1A8", Offset = "0xC7C1A8", VA = "0xC7C1A8")]
		private bool CanPerformWork(CardSuit treeShape)
		{
			return default(bool);
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0xC7C2F8", Offset = "0xC7C2F8", VA = "0xC7C2F8")]
		public CardWorkerTrimmer()
		{
		}
	}
	[Token(Token = "0x2000257")]
	public class CastlesGardenGate : MonoBehaviour
	{
		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CardColour m_blockedColour;

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0xC7C310", Offset = "0xC7C310", VA = "0xC7C310")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0xC7C3F0", Offset = "0xC7C3F0", VA = "0xC7C3F0")]
		public CastlesGardenGate()
		{
		}
	}
	[Token(Token = "0x2000258")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9267E0", Offset = "0x9267E0")]
	public class CastlesTree : SaveObject
	{
		[Token(Token = "0x2000563")]
		public enum ParticleType
		{
			[Token(Token = "0x4001FFA")]
			Chop,
			[Token(Token = "0x4001FFB")]
			Paint,
			[Token(Token = "0x4001FFC")]
			Trim
		}

		[Token(Token = "0x2000564")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927A30", Offset = "0x927A30")]
		private sealed class <TreeFalling>d__73 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CastlesTree <>4__this;

			[Token(Token = "0x4002000")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float fallingDuration;

			[Token(Token = "0x1700049C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002616")]
				[Address(RVA = "0xC7D8B0", Offset = "0xC7D8B0", VA = "0xC7D8B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700049D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002618")]
				[Address(RVA = "0xC7D920", Offset = "0xC7D920", VA = "0xC7D920", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002613")]
			[Address(RVA = "0xC7D274", Offset = "0xC7D274", VA = "0xC7D274")]
			[DebuggerHidden]
			public <TreeFalling>d__73(int <>1__state)
			{
			}

			[Token(Token = "0x6002614")]
			[Address(RVA = "0xC7D67C", Offset = "0xC7D67C", VA = "0xC7D67C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002615")]
			[Address(RVA = "0xC7D680", Offset = "0xC7D680", VA = "0xC7D680", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002617")]
			[Address(RVA = "0xC7D8B8", Offset = "0xC7D8B8", VA = "0xC7D8B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000565")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927A40", Offset = "0x927A40")]
		private sealed class <RevertColor>d__74 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002001")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002002")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002003")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CastlesTree <>4__this;

			[Token(Token = "0x4002004")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <playbackTime>5__2;

			[Token(Token = "0x1700049E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600261C")]
				[Address(RVA = "0xC7D604", Offset = "0xC7D604", VA = "0xC7D604", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700049F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600261E")]
				[Address(RVA = "0xC7D674", Offset = "0xC7D674", VA = "0xC7D674", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002619")]
			[Address(RVA = "0xC7D2A0", Offset = "0xC7D2A0", VA = "0xC7D2A0")]
			[DebuggerHidden]
			public <RevertColor>d__74(int <>1__state)
			{
			}

			[Token(Token = "0x600261A")]
			[Address(RVA = "0xC7D4C0", Offset = "0xC7D4C0", VA = "0xC7D4C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600261B")]
			[Address(RVA = "0xC7D4C4", Offset = "0xC7D4C4", VA = "0xC7D4C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600261D")]
			[Address(RVA = "0xC7D60C", Offset = "0xC7D60C", VA = "0xC7D60C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int sm_parameterFall;

		[Token(Token = "0x4000FAD")]
		private const int MaxMesh = 4;

		[Token(Token = "0x4000FAE")]
		private const int MaxMaterial = 3;

		[Token(Token = "0x4000FAF")]
		private const float PaintDelayTime = 1f;

		[Token(Token = "0x4000FB0")]
		private const float PaintTime = 5f;

		[Token(Token = "0x4000FB1")]
		private const float RevertColorInterval = 0.1f;

		[Token(Token = "0x4000FB2")]
		private const string MaterialDiffuseProperty = "_Diffuse";

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CardSuit m_activeMesh;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private CardColour m_activeMaterial;

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private InteractableObject m_interactableObject;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private BoolVariable m_fourHalfHasFollower;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private LumberjackWork m_lumberjackWork;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private PainterWork m_painterWork;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private TrimmerWork m_trimmerWork;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject m_highlightPoint;

		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92F660", Offset = "0x92F660")]
		[SerializeField]
		private MeshFilter m_meshFilter;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private MeshRenderer m_meshRenderer;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Mesh[] m_meshes;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Material[] m_materials;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Transform[] m_highlightPointPositions;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92F6EC", Offset = "0x92F6EC")]
		[SerializeField]
		private ParticleSystem m_leafParticle;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private ParticleSystem m_cuttingCompleteParticles;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private ParticleSystem m_crashParticles;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private ParticleSystem m_colorParticle;

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private ParticleSystemRenderer m_colorParticleRenderer;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private ParticleSystem.MinMaxGradient[] m_particleGradients;

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private Animator m_treeFallingAnimator;

		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private float m_durationUntilFallStart;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[SerializeField]
		private float m_fallingDuration;

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92F7B8", Offset = "0x92F7B8")]
		[SerializeField]
		private SoundEffect m_fallDownSoundEffect;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool m_isOccupied;

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float m_currentTaskDuration;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private CastleTreeSavableData m_castleTreeData;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Coroutine m_activeRevertColorRoutine;

		[Token(Token = "0x1700025C")]
		public CardSuit Shape
		{
			[Token(Token = "0x60013E3")]
			[Address(RVA = "0xC7B98C", Offset = "0xC7B98C", VA = "0xC7B98C")]
			get
			{
				return default(CardSuit);
			}
		}

		[Token(Token = "0x1700025D")]
		public CardColour Colour
		{
			[Token(Token = "0x60013E4")]
			[Address(RVA = "0xC7B984", Offset = "0xC7B984", VA = "0xC7B984")]
			get
			{
				return default(CardColour);
			}
		}

		[Token(Token = "0x1700025E")]
		public LumberjackWork LumberjackWork
		{
			[Token(Token = "0x60013E5")]
			[Address(RVA = "0xC7B97C", Offset = "0xC7B97C", VA = "0xC7B97C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700025F")]
		public PainterWork PainterWork
		{
			[Token(Token = "0x60013E6")]
			[Address(RVA = "0xC7BC54", Offset = "0xC7BC54", VA = "0xC7BC54")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000260")]
		public TrimmerWork TrimmerWork
		{
			[Token(Token = "0x60013E7")]
			[Address(RVA = "0xC7C1B8", Offset = "0xC7C1B8", VA = "0xC7C1B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000261")]
		private int ActiveMeshIndex
		{
			[Token(Token = "0x60013E8")]
			[Address(RVA = "0xC7C400", Offset = "0xC7C400", VA = "0xC7C400")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000262")]
		private int ActiveMaterialIndex
		{
			[Token(Token = "0x60013E9")]
			[Address(RVA = "0xC7C40C", Offset = "0xC7C40C", VA = "0xC7C40C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0xC7C414", Offset = "0xC7C414", VA = "0xC7C414")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0xC7C4A4", Offset = "0xC7C4A4", VA = "0xC7C4A4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0xC7C540", Offset = "0xC7C540", VA = "0xC7C540")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0xC7C8E8", Offset = "0xC7C8E8", VA = "0xC7C8E8")]
		public void InteractTree(PlayableCharacter character)
		{
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0xC7CA38", Offset = "0xC7CA38", VA = "0xC7CA38")]
		public void SetOccupied(bool isOccupied)
		{
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0xC7CAAC", Offset = "0xC7CAAC", VA = "0xC7CAAC")]
		public void TryStartWork(CardWorkerControl worker, float taskDuration)
		{
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0xC7CAF0", Offset = "0xC7CAF0", VA = "0xC7CAF0")]
		public void TryCompleteWork(CardWorkerControl worker)
		{
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0xC7BA88", Offset = "0xC7BA88", VA = "0xC7BA88")]
		public void ChopDown()
		{
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0xC7CBC8", Offset = "0xC7CBC8", VA = "0xC7CBC8")]
		private void ReplaceWorkTasksWithRest()
		{
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0xC7C288", Offset = "0xC7C288", VA = "0xC7C288")]
		public void SetNewMesh(CardSuit newMesh)
		{
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0xC7C034", Offset = "0xC7C034", VA = "0xC7C034")]
		public void SetNewMaterial(CardColour newMaterial)
		{
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0xC7BCD4", Offset = "0xC7BCD4", VA = "0xC7BCD4")]
		public void PaintNewMaterial(CardColour newMaterial)
		{
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0xC7BA0C", Offset = "0xC7BA0C", VA = "0xC7BA0C")]
		public void EnableParticleEffect(ParticleType fxType)
		{
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0xC7CCD0", Offset = "0xC7CCD0", VA = "0xC7CCD0")]
		public void DisableParticleEffect(ParticleType fxType)
		{
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0xC7CD8C", Offset = "0xC7CD8C", VA = "0xC7CD8C", Slot = "8")]
		public override void Deserialize(IReadSave read)
		{
		}

		[Token(Token = "0x60013F9")]
		[Address(RVA = "0xC7CF38", Offset = "0xC7CF38", VA = "0xC7CF38", Slot = "9")]
		public override void Serialize(IWriteSave write)
		{
		}

		[Token(Token = "0x60013FA")]
		[Address(RVA = "0xC7CD18", Offset = "0xC7CD18", VA = "0xC7CD18")]
		private void AbortPainting()
		{
		}

		[Token(Token = "0x60013FB")]
		[Address(RVA = "0xC7C854", Offset = "0xC7C854", VA = "0xC7C854")]
		private void StoreSaveData()
		{
		}

		[Token(Token = "0x60013FC")]
		[Address(RVA = "0xC7CE94", Offset = "0xC7CE94", VA = "0xC7CE94")]
		private void SetLoadedData()
		{
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0xC7D0A8", Offset = "0xC7D0A8", VA = "0xC7D0A8")]
		private void RemoveTree()
		{
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0xC7C564", Offset = "0xC7C564", VA = "0xC7C564")]
		private void UpdateGraphics()
		{
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0xC7D0E0", Offset = "0xC7D0E0", VA = "0xC7D0E0")]
		private void SetParticleStartColor(ParticleSystem.MainModule mainModule, ParticleSystem.MinMaxGradient colorGradient)
		{
		}

		[Token(Token = "0x6001400")]
		[Address(RVA = "0xC7D12C", Offset = "0xC7D12C", VA = "0xC7D12C")]
		private string[] GetSuitNames()
		{
			return null;
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0xC7D1D0", Offset = "0xC7D1D0", VA = "0xC7D1D0")]
		private string[] GetColourNames()
		{
			return null;
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0xC7CB30", Offset = "0xC7CB30", VA = "0xC7CB30")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93B1DC", Offset = "0x93B1DC")]
		private IEnumerator TreeFalling(float fallingDuration)
		{
			return null;
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0xC7D034", Offset = "0xC7D034", VA = "0xC7D034")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93B240", Offset = "0x93B240")]
		private IEnumerator RevertColor()
		{
			return null;
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0xC7CC40", Offset = "0xC7CC40", VA = "0xC7CC40")]
		private void WorkCompleted()
		{
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0xC7D2CC", Offset = "0xC7D2CC", VA = "0xC7D2CC")]
		private void OnFourHalfFollowerHasChanged()
		{
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0xC7D350", Offset = "0xC7D350", VA = "0xC7D350")]
		public CastlesTree()
		{
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0xC7D490", Offset = "0xC7D490", VA = "0xC7D490")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B2A4", Offset = "0x93B2A4")]
		private void <PaintNewMaterial>b__60_0()
		{
		}
	}
	[Token(Token = "0x2000259")]
	public class CastleTreeSavableData : SavableData
	{
		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CardSuit Shape;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public CardColour Colour;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Active;

		[Token(Token = "0x6001409")]
		[Address(RVA = "0xC7C308", Offset = "0xC7C308", VA = "0xC7C308")]
		public CastleTreeSavableData()
		{
		}
	}
}
namespace Cortopia.Scripts.Puzzles.Cardsweeper
{
	[Token(Token = "0x200025A")]
	[Flags]
	public enum CardAttributes
	{
		[Token(Token = "0x4000FD2")]
		Locked = 0,
		[Token(Token = "0x4000FD3")]
		Court = 1,
		[Token(Token = "0x4000FD4")]
		Marked = 2,
		[Token(Token = "0x4000FD5")]
		Flipped = 4,
		[Token(Token = "0x4000FD6")]
		Scratched = 8,
		[Token(Token = "0x4000FD7")]
		Missing = 0x10,
		[Token(Token = "0x4000FD8")]
		Targetless = 0x11
	}
	[Token(Token = "0x200025B")]
	public enum CardDirections
	{
		[Token(Token = "0x4000FDA")]
		Up,
		[Token(Token = "0x4000FDB")]
		Right,
		[Token(Token = "0x4000FDC")]
		Down,
		[Token(Token = "0x4000FDD")]
		Left
	}
	[Token(Token = "0x200025C")]
	public class CardGraphics : MonoBehaviour
	{
		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Sprite[] m_suitSprites;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Sprite[] m_valueSprites;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Sprite[] m_attributeSprites;

		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private SpriteRenderer m_suitSpriteRenderer;

		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SpriteRenderer m_attributeSpriteRenderer;

		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SpriteRenderer m_valueSpriteRenderer;

		[Token(Token = "0x600140A")]
		[Address(RVA = "0xC78E3C", Offset = "0xC78E3C", VA = "0xC78E3C")]
		public void SetCardGraphics(IList<CardAttributes> cardAttributes, CardDirections targetDirection, int targetDistance, bool joker)
		{
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0xC79080", Offset = "0xC79080", VA = "0xC79080")]
		private Sprite DetermineSuit(IList<CardAttributes> cardAttributes, CardDirections targetDirection)
		{
			return null;
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0xC7920C", Offset = "0xC7920C", VA = "0xC7920C")]
		private Sprite DetermineValue(int targetDistance)
		{
			return null;
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0xC792BC", Offset = "0xC792BC", VA = "0xC792BC")]
		private Sprite DetermineAttribute(IList<CardAttributes> cardAttributes)
		{
			return null;
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0xC78FEC", Offset = "0xC78FEC", VA = "0xC78FEC")]
		private void ApplySprites(Sprite suitSprite, Sprite attributeSprite, Sprite valueSprite)
		{
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0xC793BC", Offset = "0xC793BC", VA = "0xC793BC")]
		public CardGraphics()
		{
		}
	}
	[Token(Token = "0x200025D")]
	public class CardLevel : MonoBehaviour
	{
		[Token(Token = "0x2000566")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927A50", Offset = "0x927A50")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x4002005")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CardsweeperCard[] cardRow;

			[Token(Token = "0x600261F")]
			[Address(RVA = "0xC7A108", Offset = "0xC7A108", VA = "0xC7A108")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6002620")]
			[Address(RVA = "0xC7AED8", Offset = "0xC7AED8", VA = "0xC7AED8")]
			internal bool <LocateCards>b__0(CardsweeperCard item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000567")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927A60", Offset = "0x927A60")]
		private sealed class <>c
		{
			[Token(Token = "0x4002006")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002007")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<CardsweeperCard, float> <>9__19_0;

			[Token(Token = "0x6002622")]
			[Address(RVA = "0xC7AE88", Offset = "0xC7AE88", VA = "0xC7AE88")]
			public <>c()
			{
			}

			[Token(Token = "0x6002623")]
			[Address(RVA = "0xC7AE90", Offset = "0xC7AE90", VA = "0xC7AE90")]
			internal float <SortRowFromLeft>b__19_0(CardsweeperCard obj)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4000FE4")]
		private const float RowThreshold = 0.05f;

		[Token(Token = "0x4000FE5")]
		private const int MaxRows = 16;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<CardsweeperCard> m_allCards;

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_revealedCards;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int m_cardCount;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CardsweeperCard[][] m_grid;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_singleRowLevel;

		[Token(Token = "0x14000038")]
		public event Action OnLevelCompleted
		{
			[Token(Token = "0x6001410")]
			[Address(RVA = "0xC7943C", Offset = "0xC7943C", VA = "0xC7943C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B2B4", Offset = "0x93B2B4")]
			add
			{
			}
			[Token(Token = "0x6001411")]
			[Address(RVA = "0xC79528", Offset = "0xC79528", VA = "0xC79528")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B2C4", Offset = "0x93B2C4")]
			remove
			{
			}
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0xC79614", Offset = "0xC79614", VA = "0xC79614")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0xC79F24", Offset = "0xC79F24", VA = "0xC79F24")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x93B2D4", Offset = "0x93B2D4")]
		public void UpdateLevel()
		{
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0xC79BA0", Offset = "0xC79BA0", VA = "0xC79BA0")]
		private void CountCards()
		{
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0xC79A64", Offset = "0xC79A64", VA = "0xC79A64")]
		private void ResetCards(bool flipCards)
		{
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0xC79644", Offset = "0xC79644", VA = "0xC79644")]
		private void LocateCards()
		{
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0xC7A550", Offset = "0xC7A550", VA = "0xC7A550")]
		private void IdentifyCourtCards(CardsweeperCard[][] grid)
		{
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0xC7A8C8", Offset = "0xC7A8C8", VA = "0xC7A8C8")]
		private void TargetCourtCard(int courtRow, int courtCol, CardsweeperCard[][] grid)
		{
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0xC7A110", Offset = "0xC7A110", VA = "0xC7A110")]
		private CardsweeperCard GetTopCard(CardsweeperCard[] cards)
		{
			return null;
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0xC7A240", Offset = "0xC7A240", VA = "0xC7A240")]
		private CardsweeperCard[] GetCardRowAtDepth(CardsweeperCard[] cards, float depth)
		{
			return null;
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0xC7A440", Offset = "0xC7A440", VA = "0xC7A440")]
		private void SortRowFromLeft(ref CardsweeperCard[] row)
		{
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0xC7AC4C", Offset = "0xC7AC4C", VA = "0xC7AC4C")]
		private void CardRevealed(bool isCourtCard)
		{
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0xC7AC84", Offset = "0xC7AC84", VA = "0xC7AC84")]
		public void SetCardsActive(bool setBool)
		{
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0xC7ADC4", Offset = "0xC7ADC4", VA = "0xC7ADC4")]
		public CardLevel()
		{
		}
	}
	[Token(Token = "0x200025E")]
	public class CardPuzzle : MonoBehaviour
	{
		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<CardLevel> m_levels;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent m_puzzleCompletedEvent;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int m_currentLevelIndex;

		[Token(Token = "0x600141F")]
		[Address(RVA = "0xC7AF38", Offset = "0xC7AF38", VA = "0xC7AF38")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0xC7B03C", Offset = "0xC7B03C", VA = "0xC7B03C")]
		private void CompleteLevel()
		{
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0xC7B1A4", Offset = "0xC7B1A4", VA = "0xC7B1A4")]
		public void SetPuzzleActive(bool setBool)
		{
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0xC7B230", Offset = "0xC7B230", VA = "0xC7B230")]
		public CardPuzzle()
		{
		}
	}
	[Token(Token = "0x200025F")]
	public enum CardSuits
	{
		[Token(Token = "0x4000FF0")]
		Clubs,
		[Token(Token = "0x4000FF1")]
		Diamonds,
		[Token(Token = "0x4000FF2")]
		Hearts,
		[Token(Token = "0x4000FF3")]
		Spades,
		[Token(Token = "0x4000FF4")]
		Black,
		[Token(Token = "0x4000FF5")]
		Red,
		[Token(Token = "0x4000FF6")]
		Joker,
		[Token(Token = "0x4000FF7")]
		Blank
	}
	[Token(Token = "0x2000260")]
	public class CardsweeperCard : MonoBehaviour
	{
		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<CardAttributes> m_cardAttributes;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x92F8A4", Offset = "0x92F8A4")]
		[SerializeField]
		private CardDirections m_lockedDirection;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CardGraphics m_cardGraphics;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CardDirections m_targetDirection;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int m_targetDistance;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Vector3 m_flipRotationAngles;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool m_isJoker;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		private bool m_isRevealed;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		private bool m_isActivated;

		[Token(Token = "0x17000263")]
		public IList<CardAttributes> CardAttributesList
		{
			[Token(Token = "0x6001425")]
			[Address(RVA = "0xC7A014", Offset = "0xC7A014", VA = "0xC7A014")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000039")]
		public event Action<bool> OnCardRevealed
		{
			[Token(Token = "0x6001423")]
			[Address(RVA = "0xC79F28", Offset = "0xC79F28", VA = "0xC79F28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B30C", Offset = "0x93B30C")]
			add
			{
			}
			[Token(Token = "0x6001424")]
			[Address(RVA = "0xC7B298", Offset = "0xC7B298", VA = "0xC7B298")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B31C", Offset = "0x93B31C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0xC7B384", Offset = "0xC7B384", VA = "0xC7B384")]
		private void Start()
		{
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0xC7B460", Offset = "0xC7B460", VA = "0xC7B460")]
		private void HideCard()
		{
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0xC7B4DC", Offset = "0xC7B4DC", VA = "0xC7B4DC")]
		public void RevealCard()
		{
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0xC7B470", Offset = "0xC7B470", VA = "0xC7B470")]
		private void FlipCard()
		{
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0xC7A01C", Offset = "0xC7A01C", VA = "0xC7A01C")]
		public void ResetCard(bool flipCard)
		{
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0xC7A7B0", Offset = "0xC7A7B0", VA = "0xC7A7B0")]
		public void Validate()
		{
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0xC7AB68", Offset = "0xC7AB68", VA = "0xC7AB68")]
		public void SuggestTarget(CardDirections newDirection, int newDistance)
		{
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0xC7ADB8", Offset = "0xC7ADB8", VA = "0xC7ADB8")]
		public void SetCardActive(bool setBool)
		{
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0xC7B590", Offset = "0xC7B590", VA = "0xC7B590")]
		public CardsweeperCard()
		{
		}
	}
}
namespace Cortopia.Scripts.Player
{
	[Token(Token = "0x2000261")]
	public class FadeHandler : MonoBehaviour
	{
		[Token(Token = "0x2000568")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927A70", Offset = "0x927A70")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x4002008")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public TweenCallback onComplete;

			[Token(Token = "0x4002009")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public FadeHandler <>4__this;

			[Token(Token = "0x6002624")]
			[Address(RVA = "0xC7042C", Offset = "0xC7042C", VA = "0xC7042C")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x6002625")]
			[Address(RVA = "0xC70564", Offset = "0xC70564", VA = "0xC70564")]
			internal void <FadeInInternal>b__0()
			{
			}
		}

		[Token(Token = "0x2000569")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927A80", Offset = "0x927A80")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x400200A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FadeHandler <>4__this;

			[Token(Token = "0x400200B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public TweenCallback onComplete;

			[Token(Token = "0x6002626")]
			[Address(RVA = "0xC70434", Offset = "0xC70434", VA = "0xC70434")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x6002627")]
			[Address(RVA = "0xC705E8", Offset = "0xC705E8", VA = "0xC705E8")]
			internal void <FadeOutInternal>b__0()
			{
			}

			[Token(Token = "0x6002628")]
			[Address(RVA = "0xC7062C", Offset = "0xC7062C", VA = "0xC7062C")]
			internal void <FadeOutInternal>b__1()
			{
			}
		}

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly CameraClearFlags m_cameraClearFlags;

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool m_autoFadeInOnAwake;

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Renderer m_renderer;

		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Tweener m_fadeTweener;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private EventToken m_screenFadeEventToken;

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Camera m_camera;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Color m_cameraClearColor;

		[Token(Token = "0x4001009")]
		public const float DefaultFadeTime = 0.5f;

		[Token(Token = "0x1400003A")]
		public event Action OnBeforeFadeOut
		{
			[Token(Token = "0x600142F")]
			[Address(RVA = "0xC6F9F0", Offset = "0xC6F9F0", VA = "0xC6F9F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B32C", Offset = "0x93B32C")]
			add
			{
			}
			[Token(Token = "0x6001430")]
			[Address(RVA = "0xC6FADC", Offset = "0xC6FADC", VA = "0xC6FADC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B33C", Offset = "0x93B33C")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003B")]
		public event Action OnAfterFadeIn
		{
			[Token(Token = "0x6001431")]
			[Address(RVA = "0xC6FBC8", Offset = "0xC6FBC8", VA = "0xC6FBC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B34C", Offset = "0x93B34C")]
			add
			{
			}
			[Token(Token = "0x6001432")]
			[Address(RVA = "0xC6FCB4", Offset = "0xC6FCB4", VA = "0xC6FCB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B35C", Offset = "0x93B35C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0xC6FDA0", Offset = "0xC6FDA0", VA = "0xC6FDA0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0xC6FE4C", Offset = "0xC6FE4C", VA = "0xC6FE4C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0xC6FEC0", Offset = "0xC6FEC0", VA = "0xC6FEC0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0xC6FEC4", Offset = "0xC6FEC4", VA = "0xC6FEC4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0xC6FFE8", Offset = "0xC6FFE8", VA = "0xC6FFE8")]
		public YieldInstruction FadeIn(float fadeTime)
		{
			return null;
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0xC701C4", Offset = "0xC701C4", VA = "0xC701C4")]
		public YieldInstruction FadeOut(float fadeTime)
		{
			return null;
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0xC6FFDC", Offset = "0xC6FFDC", VA = "0xC6FFDC")]
		public void FadeIn()
		{
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0xC703B0", Offset = "0xC703B0", VA = "0xC703B0")]
		public void FadeIn(float fadeTime, TweenCallback onComplete)
		{
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0xC703B4", Offset = "0xC703B4", VA = "0xC703B4")]
		public void FadeOut(TweenCallback onComplete)
		{
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0xC703BC", Offset = "0xC703BC", VA = "0xC703BC")]
		public void FadeOut(float fadeTime, TweenCallback onComplete)
		{
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0xC703C0", Offset = "0xC703C0", VA = "0xC703C0")]
		private void OnScreenFade(PlayerEvents.ScreenFadeEvent eventData)
		{
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0xC70014", Offset = "0xC70014", VA = "0xC70014")]
		private void FadeInInternal(float fadeTime, TweenCallback onComplete)
		{
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0xC701F0", Offset = "0xC701F0", VA = "0xC701F0")]
		private void FadeOutInternal(float fadeTime, TweenCallback onComplete)
		{
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0xC7043C", Offset = "0xC7043C", VA = "0xC7043C")]
		private void SetCameraClearColorToBlack()
		{
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0xC704C8", Offset = "0xC704C8", VA = "0xC704C8")]
		private void ResetCameraClearFlags()
		{
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0xC70550", Offset = "0xC70550", VA = "0xC70550")]
		public FadeHandler()
		{
		}
	}
	[Token(Token = "0x2000262")]
	public interface IPlayerPointer
	{
		[Token(Token = "0x17000264")]
		PointerType PointerType
		{
			[Token(Token = "0x6001443")]
			get;
		}

		[Token(Token = "0x17000265")]
		Vector3 Position
		{
			[Token(Token = "0x6001444")]
			get;
		}
	}
	[Token(Token = "0x2000263")]
	public class MousePlayerPointer : IPlayerPointer
	{
		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92F950", Offset = "0x92F950")]
		private Vector3 <Position>k__BackingField;

		[Token(Token = "0x17000266")]
		public PointerType PointerType
		{
			[Token(Token = "0x6001445")]
			[Address(RVA = "0xC7066C", Offset = "0xC7066C", VA = "0xC7066C", Slot = "4")]
			get
			{
				return default(PointerType);
			}
		}

		[Token(Token = "0x17000267")]
		public Vector3 Position
		{
			[Token(Token = "0x6001446")]
			[Address(RVA = "0xC70674", Offset = "0xC70674", VA = "0xC70674", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B36C", Offset = "0x93B36C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001447")]
			[Address(RVA = "0xC70680", Offset = "0xC70680", VA = "0xC70680")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B37C", Offset = "0x93B37C")]
			set
			{
			}
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0xC7068C", Offset = "0xC7068C", VA = "0xC7068C")]
		public MousePlayerPointer()
		{
		}
	}
	[Token(Token = "0x2000264")]
	public class PlayerCamera : MonoBehaviour
	{
		[Token(Token = "0x200056A")]
		private struct Constants
		{
			[Token(Token = "0x400200C")]
			public const float MinCameraPositionDiff = 0.1f;

			[Token(Token = "0x400200D")]
			public const float MinCameraRotationAngle = 15f;
		}

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Vector3 m_cameraZoomedInScale;

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private readonly Vector3 m_cameraDefaultScale;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Vector3 m_worldCenter;

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform m_cameraRigTransform;

		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform m_cameraTransform;

		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_rotationIncrement;

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float m_movementIncrement;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float m_heightAdjustment;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 m_position;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Quaternion m_rotation;

		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private MathUtils.MinMax m_positionLimits;

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private EventToken m_biomeActivatedEventToken;

		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private EventToken m_biomeDeactivatedEventToken;

		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private EventToken m_recenterControllerEventToken;

		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private EventToken m_hmdMountStatusChangedEventToken;

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool m_isSubscribedToHMDEvents;

		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private RecenterData m_recenterData;

		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Quaternion m_recenterRotation;

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Vector3 m_recenterPosition;

		[Token(Token = "0x17000268")]
		public Transform CameraRigTransform
		{
			[Token(Token = "0x6001449")]
			[Address(RVA = "0xC70694", Offset = "0xC70694", VA = "0xC70694")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000269")]
		public Transform CameraTransform
		{
			[Token(Token = "0x600144A")]
			[Address(RVA = "0xC7069C", Offset = "0xC7069C", VA = "0xC7069C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400003C")]
		public event Action<Vector3> OnScaleChanged
		{
			[Token(Token = "0x600144B")]
			[Address(RVA = "0xC706A4", Offset = "0xC706A4", VA = "0xC706A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B38C", Offset = "0x93B38C")]
			add
			{
			}
			[Token(Token = "0x600144C")]
			[Address(RVA = "0xC70790", Offset = "0xC70790", VA = "0xC70790")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B39C", Offset = "0x93B39C")]
			remove
			{
			}
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0xC7087C", Offset = "0xC7087C", VA = "0xC7087C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0xC70A14", Offset = "0xC70A14", VA = "0xC70A14")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600144F")]
		[Address(RVA = "0xC70ACC", Offset = "0xC70ACC", VA = "0xC70ACC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001450")]
		[Address(RVA = "0xC70DC0", Offset = "0xC70DC0", VA = "0xC70DC0")]
		public void SetHeightAdjustment(float heightAdjustment)
		{
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0xC70C84", Offset = "0xC70C84", VA = "0xC70C84")]
		public void ResetHeightAdjustment()
		{
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0xC70DC8", Offset = "0xC70DC8", VA = "0xC70DC8")]
		public void RecenterCamera(PlayerInputState inputState)
		{
		}

		[Token(Token = "0x6001453")]
		[Address(RVA = "0xC7122C", Offset = "0xC7122C", VA = "0xC7122C")]
		public void MoveCamera(float rawAxisY)
		{
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0xC71474", Offset = "0xC71474", VA = "0xC71474")]
		public void RotateCamera(float rawAxisX, bool rotateAroundWorld)
		{
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0xC71044", Offset = "0xC71044", VA = "0xC71044")]
		public void FocusOnActiveCharacter()
		{
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0xC710CC", Offset = "0xC710CC", VA = "0xC710CC")]
		public void FocusOnCharacter(PlayableCharacter character)
		{
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0xC715D4", Offset = "0xC715D4", VA = "0xC715D4")]
		public void FocusOnCharacter(PlayableCharacter character, CharacterOrientationState orientationState)
		{
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0xC716AC", Offset = "0xC716AC", VA = "0xC716AC")]
		public void FocusOnPoint(Vector3 focusPoint)
		{
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0xC711E8", Offset = "0xC711E8", VA = "0xC711E8")]
		private void FocusOnPoint(Vector3 focusPoint, float heightAdjustment)
		{
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0xC71A64", Offset = "0xC71A64", VA = "0xC71A64")]
		public void SetCameraOrientation(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0xC71B98", Offset = "0xC71B98", VA = "0xC71B98")]
		public void ZoomInCamera(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0xC71D44", Offset = "0xC71D44", VA = "0xC71D44")]
		public void ZoomOutCamera()
		{
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0xC70D00", Offset = "0xC70D00", VA = "0xC70D00")]
		private void HardwareRecenter()
		{
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0xC71E70", Offset = "0xC71E70", VA = "0xC71E70")]
		private void OnRecenterController(PlatformEvents.RecenterControllerEvent eventData)
		{
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0xC71EF4", Offset = "0xC71EF4", VA = "0xC71EF4")]
		private void OnHMDMountStatusChanged(PlatformEvents.HMDMountStatusChangedEvent eventData)
		{
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0xC721CC", Offset = "0xC721CC", VA = "0xC721CC")]
		public void SetPositionLimits(BiomeType biomeType)
		{
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0xC716B4", Offset = "0xC716B4", VA = "0xC716B4")]
		private bool TrySetLookAtReferences(Vector3 referencePosition, float yAdjustment)
		{
			return default(bool);
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0xC71D20", Offset = "0xC71D20", VA = "0xC71D20")]
		private void RecenterCamera(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0xC71928", Offset = "0xC71928", VA = "0xC71928")]
		private void RecenterCameraToGrid(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0xC71F7C", Offset = "0xC71F7C", VA = "0xC71F7C")]
		private void MoveCameraToRecenterLocation(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0xC70B78", Offset = "0xC70B78", VA = "0xC70B78")]
		private void ResetCameraRig()
		{
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0xC72624", Offset = "0xC72624", VA = "0xC72624")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x93B3AC", Offset = "0x93B3AC")]
		private void AddEyeCenterRotation(Vector3 targetPosition, Quaternion targetRotation)
		{
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0xC72448", Offset = "0xC72448", VA = "0xC72448")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x93B3E4", Offset = "0x93B3E4")]
		private void AddEyeCenterOffset(Vector3 targetPosition, Quaternion targetRotation)
		{
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0xC72730", Offset = "0xC72730", VA = "0xC72730")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x93B41C", Offset = "0x93B41C")]
		private void AddRecenterOffset(Vector3 targetPosition, Quaternion rotationOffset)
		{
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0xC715C0", Offset = "0xC715C0", VA = "0xC715C0")]
		private float GetHeightAdjusment(CharacterOrientationState orientationState)
		{
			return default(float);
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0xC71354", Offset = "0xC71354", VA = "0xC71354")]
		private Vector3 GetClosestPositionOnGrid(Vector3 position)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0xC722C4", Offset = "0xC722C4", VA = "0xC722C4")]
		private Quaternion GetClosestRotationOnGrid(Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0xC727F8", Offset = "0xC727F8", VA = "0xC727F8")]
		private void OnBiomeActivated(RoomEvents.BiomeActivatedEvent eventData)
		{
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0xC7282C", Offset = "0xC7282C", VA = "0xC7282C")]
		private void OnBiomeDeactivated(RoomEvents.BiomeDeactivatedEvent eventData)
		{
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0xC72830", Offset = "0xC72830", VA = "0xC72830")]
		public PlayerCamera()
		{
		}
	}
	[Token(Token = "0x2000265")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x926854", Offset = "0x926854")]
	public class PlayerControl : MonoBehaviour
	{
		[Token(Token = "0x200056B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927A90", Offset = "0x927A90")]
		private sealed class <>c__DisplayClass45_0
		{
			[Token(Token = "0x400200E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayerControl <>4__this;

			[Token(Token = "0x400200F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 position;

			[Token(Token = "0x4002010")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Quaternion rotation;

			[Token(Token = "0x4002011")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public CharacterType characterType;

			[Token(Token = "0x4002012")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action onFadeComplete;

			[Token(Token = "0x6002629")]
			[Address(RVA = "0xC73BF8", Offset = "0xC73BF8", VA = "0xC73BF8")]
			public <>c__DisplayClass45_0()
			{
			}

			[Token(Token = "0x600262A")]
			[Address(RVA = "0xC7588C", Offset = "0xC7588C", VA = "0xC7588C")]
			internal void <UpdatePlayerOrientation>b__0()
			{
			}
		}

		[Token(Token = "0x200056C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927AA0", Offset = "0x927AA0")]
		private sealed class <>c__DisplayClass46_0
		{
			[Token(Token = "0x4002013")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayerControl <>4__this;

			[Token(Token = "0x4002014")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action onFadeComplete;

			[Token(Token = "0x600262B")]
			[Address(RVA = "0xC73CD8", Offset = "0xC73CD8", VA = "0xC73CD8")]
			public <>c__DisplayClass46_0()
			{
			}

			[Token(Token = "0x600262C")]
			[Address(RVA = "0xC75948", Offset = "0xC75948", VA = "0xC75948")]
			internal void <ResetPlayerOrientation>b__0()
			{
			}
		}

		[Token(Token = "0x4001022")]
		private const float RootHapticFeedbackDistanceSqr = 0.0225f;

		[Token(Token = "0x4001023")]
		private const float PitRadiusSquared = 64f;

		[Token(Token = "0x4001024")]
		private const float InsideOutThreshold = 0.15f;

		[Token(Token = "0x4001025")]
		private const float NegativeRotationThreshold = 0.1f;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayerCamera m_playerCamera;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private FadeHandler m_fadeHandler;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Grabber[] m_grabbers;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private PlayerPhysicalInputObject[] m_playerObjects;

		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private HapticClip m_rootHapticClip;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IInputListener m_inputTracker;

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IList<Grabber> m_rootHandles;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 m_lastHapticPosition;

		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool m_hasInitialized;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 m_leftToRightTrackerDirection;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 m_originAtPlayerHeight;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private EventToken m_cameraEventToken;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92F9F0", Offset = "0x92F9F0")]
		private PlayerInput <PlayerInput>k__BackingField;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92FA00", Offset = "0x92FA00")]
		private PlayerInputState <InputState>k__BackingField;

		[Token(Token = "0x1700026A")]
		public PlayerCamera Camera
		{
			[Token(Token = "0x600146F")]
			[Address(RVA = "0xC72940", Offset = "0xC72940", VA = "0xC72940")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026B")]
		public Transform CameraTransform
		{
			[Token(Token = "0x6001470")]
			[Address(RVA = "0xC6FFB0", Offset = "0xC6FFB0", VA = "0xC6FFB0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026C")]
		public PlayerInput PlayerInput
		{
			[Token(Token = "0x6001471")]
			[Address(RVA = "0xC72948", Offset = "0xC72948", VA = "0xC72948")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B454", Offset = "0x93B454")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001472")]
			[Address(RVA = "0xC72950", Offset = "0xC72950", VA = "0xC72950")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B464", Offset = "0x93B464")]
			private set
			{
			}
		}

		[Token(Token = "0x1700026D")]
		public FadeHandler FadeHandler
		{
			[Token(Token = "0x6001473")]
			[Address(RVA = "0xC72958", Offset = "0xC72958", VA = "0xC72958")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026E")]
		public Grabber LeftGrabber
		{
			[Token(Token = "0x6001474")]
			[Address(RVA = "0xC72960", Offset = "0xC72960", VA = "0xC72960")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026F")]
		public Grabber RightGrabber
		{
			[Token(Token = "0x6001475")]
			[Address(RVA = "0xC729A4", Offset = "0xC729A4", VA = "0xC729A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000270")]
		public PlayerInputState InputState
		{
			[Token(Token = "0x6001476")]
			[Address(RVA = "0xC729EC", Offset = "0xC729EC", VA = "0xC729EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B474", Offset = "0x93B474")]
			get
			{
				return default(PlayerInputState);
			}
			[Token(Token = "0x6001477")]
			[Address(RVA = "0xC729F4", Offset = "0xC729F4", VA = "0xC729F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B484", Offset = "0x93B484")]
			private set
			{
			}
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0xC729FC", Offset = "0xC729FC", VA = "0xC729FC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0xC72AA8", Offset = "0xC72AA8", VA = "0xC72AA8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0xC72B1C", Offset = "0xC72B1C", VA = "0xC72B1C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600147B")]
		[Address(RVA = "0xC72B98", Offset = "0xC72B98", VA = "0xC72B98")]
		private void Update()
		{
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0xC734A8", Offset = "0xC734A8", VA = "0xC734A8")]
		private void OnRecenterCameraEvent(CameraEvents.RecenterCameraEvent eventData)
		{
		}

		[Token(Token = "0x600147D")]
		[Address(RVA = "0xC734AC", Offset = "0xC734AC", VA = "0xC734AC")]
		private bool IsInsideOut()
		{
			return default(bool);
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0xC73704", Offset = "0xC73704", VA = "0xC73704")]
		public void Initialize(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0xC73A18", Offset = "0xC73A18", VA = "0xC73A18")]
		public void SetInputState(PlayerInputState newState)
		{
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0xC73914", Offset = "0xC73914", VA = "0xC73914")]
		public void SetHandsActive(bool active)
		{
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0xC73A20", Offset = "0xC73A20", VA = "0xC73A20")]
		public void ForceDropGrabbables()
		{
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0xC72ED8", Offset = "0xC72ED8", VA = "0xC72ED8")]
		public void ForceDropRoots()
		{
		}

		[Token(Token = "0x6001483")]
		[Address(RVA = "0xC73AA4", Offset = "0xC73AA4", VA = "0xC73AA4")]
		public void UpdatePlayerOrientation(Vector3 position, Quaternion rotation, CharacterType characterType, Action onFadeComplete)
		{
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0xC73C00", Offset = "0xC73C00", VA = "0xC73C00")]
		public void ResetPlayerOrientation([Optional] Action onFadeComplete)
		{
		}

		[Token(Token = "0x6001485")]
		[Address(RVA = "0xC73CE0", Offset = "0xC73CE0", VA = "0xC73CE0")]
		public Transform GetClosestTransform(Vector3 position)
		{
			return null;
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0xC73EF4", Offset = "0xC73EF4", VA = "0xC73EF4")]
		public void AddRootHandle(Grabber rootGrabber)
		{
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0xC74048", Offset = "0xC74048", VA = "0xC74048")]
		public void RemoveRootHandle(Grabber rootGrabber)
		{
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0xC73048", Offset = "0xC73048", VA = "0xC73048")]
		private void RootHandleMovementHandler()
		{
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0xC74744", Offset = "0xC74744", VA = "0xC74744")]
		private bool CanRotateToDirection()
		{
			return default(bool);
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0xC7419C", Offset = "0xC7419C", VA = "0xC7419C")]
		private void InverseMove(Grabber grabber)
		{
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0xC752BC", Offset = "0xC752BC", VA = "0xC752BC")]
		private void InverseRotation(Grabber grabber)
		{
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0xC74318", Offset = "0xC74318", VA = "0xC74318")]
		private void DualInverseMove(IList<Grabber> grabbers)
		{
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0xC749FC", Offset = "0xC749FC", VA = "0xC749FC")]
		private void DualInverseRotate(IList<Grabber> grabbers)
		{
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0xC75038", Offset = "0xC75038", VA = "0xC75038")]
		private void UpdateHaptic()
		{
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0xC75500", Offset = "0xC75500", VA = "0xC75500")]
		private void UpdateOrientation(Vector3 position, Quaternion rotation, CharacterType characterType)
		{
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0xC756F0", Offset = "0xC756F0", VA = "0xC756F0")]
		private void RecenterOrientation()
		{
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0xC75660", Offset = "0xC75660", VA = "0xC75660")]
		private void SetHandSkins(CharacterType characterType)
		{
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0xC757E8", Offset = "0xC757E8", VA = "0xC757E8")]
		public PlayerControl()
		{
		}
	}
	[Token(Token = "0x2000266")]
	public class PlayerGamepad : PlayerPhysicalInputObject
	{
		[Serializable]
		[Token(Token = "0x200056D")]
		private class GrabData
		{
			[Token(Token = "0x4002015")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject Hand;

			[Token(Token = "0x4002016")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Grabber Grabber;

			[Token(Token = "0x4002017")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TriggerType Trigger;

			[NonSerialized]
			[Token(Token = "0x4002018")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool IsGrabbing;

			[Token(Token = "0x600262D")]
			[Address(RVA = "0xC762C0", Offset = "0xC762C0", VA = "0xC762C0")]
			public GrabData()
			{
			}
		}

		[Token(Token = "0x200056E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927AB0", Offset = "0x927AB0")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4002019")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GrabData grab;

			[Token(Token = "0x400201A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PlayerGamepad <>4__this;

			[Token(Token = "0x600262E")]
			[Address(RVA = "0xC75BC8", Offset = "0xC75BC8", VA = "0xC75BC8")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x600262F")]
			[Address(RVA = "0xC761D0", Offset = "0xC761D0", VA = "0xC761D0")]
			internal void <Awake>b__0()
			{
			}

			[Token(Token = "0x6002630")]
			[Address(RVA = "0xC76248", Offset = "0xC76248", VA = "0xC76248")]
			internal void <Awake>b__1()
			{
			}
		}

		[Token(Token = "0x4001034")]
		private const float BabyHandMovementTime = 0.3f;

		[Token(Token = "0x4001035")]
		private const float GrabThreshold = 0.85f;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GrabData[] m_grabDatas;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_gamePad;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92FA30", Offset = "0x92FA30")]
		[SerializeField]
		private GameObject m_babyHand;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_babyHandMenuOffset;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private BoolVariable m_menuOpen;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Tween m_babyHandTween;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_isGrabbing;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_babyHandOffset;

		[Token(Token = "0x6001493")]
		[Address(RVA = "0xC75994", Offset = "0xC75994", VA = "0xC75994")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0xC75BD0", Offset = "0xC75BD0", VA = "0xC75BD0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0xC75C60", Offset = "0xC75C60", VA = "0xC75C60")]
		private void Update()
		{
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0xC75EE0", Offset = "0xC75EE0", VA = "0xC75EE0", Slot = "5")]
		public override void SetActive(bool active)
		{
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0xC75F1C", Offset = "0xC75F1C", VA = "0xC75F1C")]
		private void OnMenuToggled()
		{
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0xC76044", Offset = "0xC76044", VA = "0xC76044")]
		public PlayerGamepad()
		{
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0xC760B8", Offset = "0xC760B8", VA = "0xC760B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B494", Offset = "0x93B494")]
		private void <OnMenuToggled>b__15_0()
		{
		}
	}
	[Token(Token = "0x2000267")]
	public class PlayerHand : PlayerPhysicalInputObject
	{
		[Token(Token = "0x400103E")]
		private const float GrabThreshold = 0.75f;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Grabber m_grabber;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92FAAC", Offset = "0x92FAAC")]
		[SerializeField]
		private TriggerType m_pointTrigger;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private TriggerType m_grabTrigger;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x92FB08", Offset = "0x92FB08")]
		[SerializeField]
		private SkinnedMeshRenderer m_renderer;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Material m_defaultMaterial;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Material[] m_handSkins;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_isFlexingGrab;

		[Token(Token = "0x17000271")]
		public Grabber Grabber
		{
			[Token(Token = "0x600149A")]
			[Address(RVA = "0xC762C8", Offset = "0xC762C8", VA = "0xC762C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0xC762D0", Offset = "0xC762D0", VA = "0xC762D0")]
		private void Start()
		{
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0xC762E0", Offset = "0xC762E0", VA = "0xC762E0")]
		private void Update()
		{
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0xC76430", Offset = "0xC76430", VA = "0xC76430", Slot = "5")]
		public override void SetActive(bool active)
		{
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0xC7646C", Offset = "0xC7646C", VA = "0xC7646C", Slot = "4")]
		public override void SetSkin(CharacterType characterType)
		{
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0xC76514", Offset = "0xC76514", VA = "0xC76514")]
		public PlayerHand()
		{
		}
	}
	[Token(Token = "0x2000268")]
	public class PlayerHandAnimator : MonoBehaviour
	{
		[Token(Token = "0x4001046")]
		private const float InputRateChange = 20f;

		[Token(Token = "0x4001047")]
		private const string AnimLayerPoint = "Point Layer";

		[Token(Token = "0x4001048")]
		private const string AnimLayerThumb = "Thumb Layer";

		[Token(Token = "0x4001049")]
		private const string AnimParamFlex = "Flex";

		[Token(Token = "0x400104A")]
		private const string AnimParamPinch = "Pinch";

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly int m_animParamFlexHash;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private readonly int m_animParamPinchHash;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PlayerPhysicalInputObject m_playerHand;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Cortopia.Scripts.Platform.Input.TouchType m_pointTouchType;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private Cortopia.Scripts.Platform.Input.TouchType m_faceButtonTouchType;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_pointBlend;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_isGrabbing;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool m_isPointing;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0xC7657C", Offset = "0xC7657C", VA = "0xC7657C")]
		private void Start()
		{
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0xC7664C", Offset = "0xC7664C", VA = "0xC7664C")]
		private void Update()
		{
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0xC7691C", Offset = "0xC7691C", VA = "0xC7691C")]
		public void SetActive(bool active)
		{
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0xC76958", Offset = "0xC76958", VA = "0xC76958")]
		public void BeginGrab()
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0xC76A24", Offset = "0xC76A24", VA = "0xC76A24")]
		public void EndGrab()
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0xC766AC", Offset = "0xC766AC", VA = "0xC766AC")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0xC7677C", Offset = "0xC7677C", VA = "0xC7677C")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0xC7681C", Offset = "0xC7681C", VA = "0xC7681C")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0xC76A2C", Offset = "0xC76A2C", VA = "0xC76A2C")]
		public PlayerHandAnimator()
		{
		}
	}
	[Token(Token = "0x2000269")]
	public class PlayerInput : MonoBehaviour, IInputListener
	{
		[Token(Token = "0x4001058")]
		private const float StickDeadAxisThreshold = 0.55f;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool m_resetAxisX;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool m_resetAxisY;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PlayerCamera m_playerCamera;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector2 m_axis;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IPlatformInput m_platformInput;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private EventToken m_onInputDeviceChangedEventToken;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92FBB4", Offset = "0x92FBB4")]
		private bool <HasRotationChange>k__BackingField;

		[Token(Token = "0x17000272")]
		public bool HasRotationChange
		{
			[Token(Token = "0x60014A9")]
			[Address(RVA = "0xC76AA4", Offset = "0xC76AA4", VA = "0xC76AA4", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B4A4", Offset = "0x93B4A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014AA")]
			[Address(RVA = "0xC76AAC", Offset = "0xC76AAC", VA = "0xC76AAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B4B4", Offset = "0x93B4B4")]
			private set
			{
			}
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0xC76AB8", Offset = "0xC76AB8", VA = "0xC76AB8", Slot = "4")]
		public void Initialize(PlayerCamera playerCamera)
		{
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0xC76B78", Offset = "0xC76B78", VA = "0xC76B78", Slot = "8")]
		public void ClearRotationChange()
		{
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0xC76B80", Offset = "0xC76B80", VA = "0xC76B80", Slot = "5")]
		public void TrackPlayerRotate(bool rotateAroundWorld)
		{
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0xC770A0", Offset = "0xC770A0", VA = "0xC770A0", Slot = "6")]
		public void TrackPlayerMove()
		{
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0xC76D34", Offset = "0xC76D34", VA = "0xC76D34")]
		private Vector2 GetPlayerMoveAxis()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0xC771B0", Offset = "0xC771B0", VA = "0xC771B0")]
		public PlayerInput()
		{
		}
	}
	[Token(Token = "0x200026A")]
	public enum PlayerInputState
	{
		[Token(Token = "0x4001061")]
		MoveAndRotate,
		[Token(Token = "0x4001062")]
		Rotate
	}
	[Token(Token = "0x200026B")]
	public abstract class PlayerPhysicalInputObject : MonoBehaviour
	{
		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92FBC4", Offset = "0x92FBC4")]
		private float <GrabTriggerValue>k__BackingField;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92FBD4", Offset = "0x92FBD4")]
		private float <PointTriggerValue>k__BackingField;

		[Token(Token = "0x17000273")]
		public float GrabTriggerValue
		{
			[Token(Token = "0x60014B1")]
			[Address(RVA = "0xC76420", Offset = "0xC76420", VA = "0xC76420")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B4C4", Offset = "0x93B4C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60014B2")]
			[Address(RVA = "0xC75ED8", Offset = "0xC75ED8", VA = "0xC75ED8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B4D4", Offset = "0x93B4D4")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000274")]
		public float PointTriggerValue
		{
			[Token(Token = "0x60014B3")]
			[Address(RVA = "0xC76428", Offset = "0xC76428", VA = "0xC76428")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B4E4", Offset = "0x93B4E4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60014B4")]
			[Address(RVA = "0xC75ED0", Offset = "0xC75ED0", VA = "0xC75ED0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B4F4", Offset = "0x93B4F4")]
			protected set
			{
			}
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0xC771B8", Offset = "0xC771B8", VA = "0xC771B8", Slot = "4")]
		public virtual void SetSkin(CharacterType characterType)
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0xC771BC", Offset = "0xC771BC", VA = "0xC771BC", Slot = "5")]
		public virtual void SetActive(bool active)
		{
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0xC760B0", Offset = "0xC760B0", VA = "0xC760B0")]
		protected PlayerPhysicalInputObject()
		{
		}
	}
	[Token(Token = "0x200026C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9268B8", Offset = "0x9268B8")]
	public class PlayerPointer : MonoBehaviour, IPlayerPointer
	{
		[Serializable]
		[Token(Token = "0x200056F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927AC0", Offset = "0x927AC0")]
		private sealed class <>c
		{
			[Token(Token = "0x400201B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400201C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<PointerInteractable, Action<PlayerPointer>> <>9__14_0;

			[Token(Token = "0x400201D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<PointerInteractable, Action<PlayerPointer>> <>9__15_0;

			[Token(Token = "0x6002632")]
			[Address(RVA = "0xC77AFC", Offset = "0xC77AFC", VA = "0xC77AFC")]
			public <>c()
			{
			}

			[Token(Token = "0x6002633")]
			[Address(RVA = "0xC77B04", Offset = "0xC77B04", VA = "0xC77B04")]
			internal Action<PlayerPointer> <OnTriggerEnter>b__14_0(PointerInteractable pointer)
			{
				return null;
			}

			[Token(Token = "0x6002634")]
			[Address(RVA = "0xC77B88", Offset = "0xC77B88", VA = "0xC77B88")]
			internal Action<PlayerPointer> <OnTriggerExit>b__15_0(PointerInteractable pointer)
			{
				return null;
			}
		}

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PointerType m_pointerIndex;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private HapticClip m_pointInteractionHapticClip;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 m_colliderOffset;

		[Token(Token = "0x17000275")]
		public int PointerIndex
		{
			[Token(Token = "0x60014B8")]
			[Address(RVA = "0xC771C0", Offset = "0xC771C0", VA = "0xC771C0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000276")]
		public PointerType PointerType
		{
			[Token(Token = "0x60014B9")]
			[Address(RVA = "0xC771D8", Offset = "0xC771D8", VA = "0xC771D8", Slot = "4")]
			get
			{
				return default(PointerType);
			}
		}

		[Token(Token = "0x17000277")]
		public Vector3 Position
		{
			[Token(Token = "0x60014BA")]
			[Address(RVA = "0xC771E0", Offset = "0xC771E0", VA = "0xC771E0", Slot = "5")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1400003D")]
		public event Action<PlayerPointer> OnPointerDisable
		{
			[Token(Token = "0x60014BB")]
			[Address(RVA = "0xC7723C", Offset = "0xC7723C", VA = "0xC7723C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B504", Offset = "0x93B504")]
			add
			{
			}
			[Token(Token = "0x60014BC")]
			[Address(RVA = "0xC77328", Offset = "0xC77328", VA = "0xC77328")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B514", Offset = "0x93B514")]
			remove
			{
			}
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0xC77414", Offset = "0xC77414", VA = "0xC77414")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0xC77478", Offset = "0xC77478", VA = "0xC77478")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0xC774EC", Offset = "0xC774EC", VA = "0xC774EC")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0xC77860", Offset = "0xC77860", VA = "0xC77860")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0xC7770C", Offset = "0xC7770C", VA = "0xC7770C")]
		private void TryInteract(Collider collider, PointerInteractable.PointerEnterType enterType, Func<PointerInteractable, Action<PlayerPointer>> getInteractionMethod)
		{
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0xC77968", Offset = "0xC77968", VA = "0xC77968")]
		private void PlayHaptics(PointerInteractable pointerInteractable)
		{
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0xC77A90", Offset = "0xC77A90", VA = "0xC77A90")]
		public PlayerPointer()
		{
		}
	}
	[Token(Token = "0x200026D")]
	public class PlayerStateSetter : MonoBehaviour
	{
		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayerInputState m_inputState;

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0xC77C0C", Offset = "0xC77C0C", VA = "0xC77C0C")]
		public void SetInputState()
		{
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0xC77C88", Offset = "0xC77C88", VA = "0xC77C88")]
		public PlayerStateSetter()
		{
		}
	}
	[Token(Token = "0x200026E")]
	public enum PointerType
	{
		[Token(Token = "0x400106B")]
		LeftHand,
		[Token(Token = "0x400106C")]
		RightHand,
		[Token(Token = "0x400106D")]
		Gamepad,
		[Token(Token = "0x400106E")]
		Mouse
	}
	[Token(Token = "0x200026F")]
	public struct RecenterData
	{
		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92FC24", Offset = "0x92FC24")]
		private bool <IsPending>k__BackingField;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92FC34", Offset = "0x92FC34")]
		private Vector3 <Position>k__BackingField;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92FC44", Offset = "0x92FC44")]
		private Quaternion <Rotation>k__BackingField;

		[Token(Token = "0x17000278")]
		public bool IsPending
		{
			[Token(Token = "0x60014C6")]
			[Address(RVA = "0x9CE624", Offset = "0x9CE624", VA = "0x9CE624")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B524", Offset = "0x93B524")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014C7")]
			[Address(RVA = "0x9CE62C", Offset = "0x9CE62C", VA = "0x9CE62C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B534", Offset = "0x93B534")]
			private set
			{
			}
		}

		[Token(Token = "0x17000279")]
		public Vector3 Position
		{
			[Token(Token = "0x60014C8")]
			[Address(RVA = "0x9CE638", Offset = "0x9CE638", VA = "0x9CE638")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B544", Offset = "0x93B544")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60014C9")]
			[Address(RVA = "0x9CE644", Offset = "0x9CE644", VA = "0x9CE644")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B554", Offset = "0x93B554")]
			private set
			{
			}
		}

		[Token(Token = "0x1700027A")]
		public Quaternion Rotation
		{
			[Token(Token = "0x60014CA")]
			[Address(RVA = "0x9CE650", Offset = "0x9CE650", VA = "0x9CE650")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B564", Offset = "0x93B564")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x60014CB")]
			[Address(RVA = "0x9CE65C", Offset = "0x9CE65C", VA = "0x9CE65C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B574", Offset = "0x93B574")]
			private set
			{
			}
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0x9CE668", Offset = "0x9CE668", VA = "0x9CE668")]
		public void SetPendingRecenterData(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0x9CE684", Offset = "0x9CE684", VA = "0x9CE684")]
		public void ResetPendingRecenterData()
		{
		}
	}
}
namespace Cortopia.Scripts.Platform
{
	[Token(Token = "0x2000270")]
	public class DefaultPlatform : VRPlatform
	{
		[Token(Token = "0x1700027B")]
		public override bool IsInitialized
		{
			[Token(Token = "0x60014CE")]
			[Address(RVA = "0xAF41DC", Offset = "0xAF41DC", VA = "0xAF41DC", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0xAF41E4", Offset = "0xAF41E4", VA = "0xAF41E4", Slot = "18")]
		public override IPromise Initialize()
		{
			return null;
		}

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0xAF4244", Offset = "0xAF4244", VA = "0xAF4244")]
		public DefaultPlatform()
		{
		}
	}
	[Token(Token = "0x2000271")]
	public static class PlatformExtensions
	{
		[Token(Token = "0x60014D1")]
		[Address(RVA = "0xAF7C3C", Offset = "0xAF7C3C", VA = "0xAF7C3C")]
		public static Coroutine StartCoroutine(this IPlatform platform, IEnumerator routine)
		{
			return null;
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0xAF7D18", Offset = "0xAF7D18", VA = "0xAF7D18")]
		public static void StopAllCoroutines(this IPlatform platform)
		{
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0xAF7DE4", Offset = "0xAF7DE4", VA = "0xAF7DE4")]
		public static IPromise WaitFor(this IPlatform platform, Func<bool> condition)
		{
			return null;
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0xAF1B5C", Offset = "0xAF1B5C", VA = "0xAF1B5C")]
		public static IPromise Wait(this IPlatform platform, float delay)
		{
			return null;
		}
	}
	[Token(Token = "0x2000272")]
	public interface IPlatform : IPlatformService
	{
		[Token(Token = "0x1700027C")]
		MonoBehaviour Behaviour
		{
			[Token(Token = "0x60014DB")]
			get;
		}

		[Token(Token = "0x1700027D")]
		bool IsInitialized
		{
			[Token(Token = "0x60014DC")]
			get;
		}

		[Token(Token = "0x1400003E")]
		event Action OnUpdate;

		[Token(Token = "0x1400003F")]
		event Action OnLateUpdate;

		[Token(Token = "0x14000040")]
		event Action OnFixedUpdate;
	}
	[Token(Token = "0x2000273")]
	public interface IPlatformService
	{
		[Token(Token = "0x60014DD")]
		IPromise Initialize();

		[Token(Token = "0x60014DE")]
		void Shutdown();
	}
	[Token(Token = "0x2000274")]
	public class OculusPlatform : VRPlatform
	{
		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Promise m_initializePromise;

		[Token(Token = "0x1700027E")]
		public override bool IsInitialized
		{
			[Token(Token = "0x60014DF")]
			[Address(RVA = "0xAF6DE4", Offset = "0xAF6DE4", VA = "0xAF6DE4", Slot = "17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60014E0")]
		[Address(RVA = "0xAF6E0C", Offset = "0xAF6E0C", VA = "0xAF6E0C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014E1")]
		[Address(RVA = "0xAF6F98", Offset = "0xAF6F98", VA = "0xAF6F98")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014E2")]
		[Address(RVA = "0xAF7124", Offset = "0xAF7124", VA = "0xAF7124", Slot = "18")]
		public override IPromise Initialize()
		{
			return null;
		}

		[Token(Token = "0x60014E3")]
		[Address(RVA = "0xAF73A8", Offset = "0xAF73A8", VA = "0xAF73A8")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60014E4")]
		[Address(RVA = "0xAF740C", Offset = "0xAF740C", VA = "0xAF740C")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60014E5")]
		[Address(RVA = "0xAF7470", Offset = "0xAF7470", VA = "0xAF7470")]
		private void OnHMDAcquired()
		{
		}

		[Token(Token = "0x60014E6")]
		[Address(RVA = "0xAF74D4", Offset = "0xAF74D4", VA = "0xAF74D4")]
		private void OnHMDLost()
		{
		}

		[Token(Token = "0x60014E7")]
		[Address(RVA = "0xAF7538", Offset = "0xAF7538", VA = "0xAF7538")]
		private void OnHMDMounted()
		{
		}

		[Token(Token = "0x60014E8")]
		[Address(RVA = "0xAF759C", Offset = "0xAF759C", VA = "0xAF759C")]
		private void OnHMDUnmounted()
		{
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0xAF7600", Offset = "0xAF7600", VA = "0xAF7600")]
		private void InitializationCompleted(Message<Oculus.Platform.Models.PlatformInitialize> message)
		{
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0xAF7758", Offset = "0xAF7758", VA = "0xAF7758")]
		private void EntitlementCallback(Oculus.Platform.Message message)
		{
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0xAF7890", Offset = "0xAF7890", VA = "0xAF7890", Slot = "14")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0xAF7894", Offset = "0xAF7894", VA = "0xAF7894")]
		public OculusPlatform()
		{
		}
	}
	[Token(Token = "0x2000275")]
	public abstract class OpenVRPlatform : VRPlatform
	{
		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_isHMDPresent;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool m_isUserPresent;

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0xAF789C", Offset = "0xAF789C", VA = "0xAF789C")]
		protected void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0xAF7900", Offset = "0xAF7900", VA = "0xAF7900")]
		protected void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0xAF7964", Offset = "0xAF7964", VA = "0xAF7964")]
		protected void OnHMDAcquired()
		{
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0xAF79C8", Offset = "0xAF79C8", VA = "0xAF79C8")]
		protected void OnHMDLost()
		{
		}

		[Token(Token = "0x60014F1")]
		[Address(RVA = "0xAF7A2C", Offset = "0xAF7A2C", VA = "0xAF7A2C")]
		protected void OnHMDMounted()
		{
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0xAF7A90", Offset = "0xAF7A90", VA = "0xAF7A90")]
		protected void OnHMDUnmounted()
		{
		}

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0xAF7AF4", Offset = "0xAF7AF4", VA = "0xAF7AF4", Slot = "20")]
		protected virtual void UpdateHMDStatus()
		{
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0xAF7C2C", Offset = "0xAF7C2C", VA = "0xAF7C2C")]
		protected OpenVRPlatform()
		{
		}
	}
	[Token(Token = "0x2000276")]
	public class PlatformErrorCode
	{
		[Token(Token = "0x4001075")]
		public const int UserNotAuthorized = 1000;

		[Token(Token = "0x4001076")]
		public const int LoginFailed = 1001;

		[Token(Token = "0x4001077")]
		public const int PlatformInitFailed = 1002;

		[Token(Token = "0x4001078")]
		public const string UserNotAuthorizedTerm = "error/oauth_failed";

		[Token(Token = "0x4001079")]
		public const string LoginFailedTerm = "error/login_failed";

		[Token(Token = "0x400107A")]
		public const string PlatformInitFailedTerm = "error/platform_init_failed";

		[Token(Token = "0x400107B")]
		public const string PSVRControllerDisconnected = "error/controller_disconnected_psvr";

		[Token(Token = "0x400107C")]
		public const string GenericControllerDisconnected = "error/controller_disconnected_generic";

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0xAF7C34", Offset = "0xAF7C34", VA = "0xAF7C34")]
		public PlatformErrorCode()
		{
		}
	}
	[Token(Token = "0x2000277")]
	public static class PlatformInitialize
	{
		[Token(Token = "0x60014F6")]
		[Address(RVA = "0xAF7EDC", Offset = "0xAF7EDC", VA = "0xAF7EDC")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x93B624", Offset = "0x93B624")]
		public static void OnBeforeSceneLoad()
		{
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0xAF7EE0", Offset = "0xAF7EE0", VA = "0xAF7EE0")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x93B638", Offset = "0x93B638")]
		public static void OnAfterSceneLoad()
		{
		}

		[Token(Token = "0x60014F8")]
		[Address(RVA = "0xAF7EE4", Offset = "0xAF7EE4", VA = "0xAF7EE4")]
		public static void InitializePlatform()
		{
		}

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0xAF84CC", Offset = "0xAF84CC", VA = "0xAF84CC")]
		private static IPromise<Queue<IPlatformService>> CreateServices()
		{
			return null;
		}

		[Token(Token = "0x60014FA")]
		private static IPlatformService CreateService<TService>() where TService : IPlatformService
		{
			return null;
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0xAF872C", Offset = "0xAF872C", VA = "0xAF872C")]
		private static IPromise InitializeServices(Queue<IPlatformService> services)
		{
			return null;
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0xAF8918", Offset = "0xAF8918", VA = "0xAF8918")]
		private static void OnPlatformFailedToInitialize(Exception e)
		{
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0xAF8AA0", Offset = "0xAF8AA0", VA = "0xAF8AA0")]
		private static StartupRig SpawnStartupRig()
		{
			return null;
		}
	}
	[Token(Token = "0x2000278")]
	public static class PlatformServiceLocator
	{
		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Type, IPlatformService> sm_services;

		[Token(Token = "0x60014FE")]
		public static void Register<T>(T platformService) where T : class, IPlatformService
		{
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0xC6C244", Offset = "0xC6C244", VA = "0xC6C244")]
		private static List<Type> GetAssignableTypes(Type type)
		{
			return null;
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0xC6C348", Offset = "0xC6C348", VA = "0xC6C348")]
		private static Type GetAssignableType(Type type)
		{
			return null;
		}

		[Token(Token = "0x6001501")]
		public static T Resolve<T>() where T : class, IPlatformService
		{
			return null;
		}
	}
	[Token(Token = "0x2000279")]
	public enum PlatformType
	{
		[Token(Token = "0x400107F")]
		OculusRift,
		[Token(Token = "0x4001080")]
		OculusQuest,
		[Token(Token = "0x4001081")]
		PSVR,
		[Token(Token = "0x4001082")]
		Steam,
		[Token(Token = "0x4001083")]
		Viveport,
		[Token(Token = "0x4001084")]
		ViveFocus
	}
	[Token(Token = "0x200027A")]
	public class ViveFocusPoseController : MonoBehaviour, IPoseModifier, INewPoseListener
	{
		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static RigidPose m_pose;

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static VivePoseTracker m_hmdPoseTracker;

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92FC54", Offset = "0x92FC54")]
		private int <priority>k__BackingField;

		[Token(Token = "0x1700027F")]
		public new bool enabled
		{
			[Token(Token = "0x6001503")]
			[Address(RVA = "0xC6F2A0", Offset = "0xC6F2A0", VA = "0xC6F2A0", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000280")]
		public int priority
		{
			[Token(Token = "0x6001504")]
			[Address(RVA = "0xC6F2E0", Offset = "0xC6F2E0", VA = "0xC6F2E0", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B64C", Offset = "0x93B64C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001505")]
			[Address(RVA = "0xC6F2E8", Offset = "0xC6F2E8", VA = "0xC6F2E8", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B65C", Offset = "0x93B65C")]
			set
			{
			}
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0xC6F2F0", Offset = "0xC6F2F0", VA = "0xC6F2F0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001507")]
		[Address(RVA = "0xC6F4E8", Offset = "0xC6F4E8", VA = "0xC6F4E8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001508")]
		[Address(RVA = "0xC6F5B4", Offset = "0xC6F5B4", VA = "0xC6F5B4")]
		public static void RecenterCamera()
		{
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0xC6F7CC", Offset = "0xC6F7CC", VA = "0xC6F7CC", Slot = "7")]
		public void ModifyPose(ref HTC.UnityPlugin.PoseTracker.Pose pose, Transform origin)
		{
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0xC6F7D0", Offset = "0xC6F7D0", VA = "0xC6F7D0", Slot = "8")]
		public void ModifyPose(ref RigidPose pose, Transform origin)
		{
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0xC6F87C", Offset = "0xC6F87C", VA = "0xC6F87C", Slot = "9")]
		public void BeforeNewPoses()
		{
		}

		[Token(Token = "0x600150C")]
		[Address(RVA = "0xC6F9E0", Offset = "0xC6F9E0", VA = "0xC6F9E0", Slot = "10")]
		public void OnNewPoses()
		{
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0xC6F9E4", Offset = "0xC6F9E4", VA = "0xC6F9E4", Slot = "11")]
		public void AfterNewPoses()
		{
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0xC6F9E8", Offset = "0xC6F9E8", VA = "0xC6F9E8")]
		public ViveFocusPoseController()
		{
		}
	}
	[Token(Token = "0x200027B")]
	public abstract class VRPlatform : MonoBehaviour, IPlatform, IPlatformService
	{
		[Token(Token = "0x17000281")]
		public abstract bool IsInitialized
		{
			[Token(Token = "0x6001519")]
			get;
		}

		[Token(Token = "0x17000282")]
		public MonoBehaviour Behaviour
		{
			[Token(Token = "0x600151A")]
			[Address(RVA = "0xC6F290", Offset = "0xC6F290", VA = "0xC6F290", Slot = "10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000041")]
		public event Action OnUpdate
		{
			[Token(Token = "0x600150F")]
			[Address(RVA = "0xC6ECCC", Offset = "0xC6ECCC", VA = "0xC6ECCC", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B66C", Offset = "0x93B66C")]
			add
			{
			}
			[Token(Token = "0x6001510")]
			[Address(RVA = "0xC6EDB8", Offset = "0xC6EDB8", VA = "0xC6EDB8", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B67C", Offset = "0x93B67C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000042")]
		public event Action OnFixedUpdate
		{
			[Token(Token = "0x6001511")]
			[Address(RVA = "0xC6EEA4", Offset = "0xC6EEA4", VA = "0xC6EEA4", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B68C", Offset = "0x93B68C")]
			add
			{
			}
			[Token(Token = "0x6001512")]
			[Address(RVA = "0xC6EF90", Offset = "0xC6EF90", VA = "0xC6EF90", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B69C", Offset = "0x93B69C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000043")]
		public event Action OnLateUpdate
		{
			[Token(Token = "0x6001513")]
			[Address(RVA = "0xC6F07C", Offset = "0xC6F07C", VA = "0xC6F07C", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B6AC", Offset = "0x93B6AC")]
			add
			{
			}
			[Token(Token = "0x6001514")]
			[Address(RVA = "0xC6F168", Offset = "0xC6F168", VA = "0xC6F168", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B6BC", Offset = "0x93B6BC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001515")]
		public static TService GetService<TService>() where TService : class, IPlatformService
		{
			return null;
		}

		[Token(Token = "0x6001516")]
		[Address(RVA = "0xC6F254", Offset = "0xC6F254", VA = "0xC6F254", Slot = "14")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0xC6F268", Offset = "0xC6F268", VA = "0xC6F268", Slot = "15")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0xC6F27C", Offset = "0xC6F27C", VA = "0xC6F27C", Slot = "16")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x600151B")]
		public abstract IPromise Initialize();

		[Token(Token = "0x600151C")]
		[Address(RVA = "0xC6F294", Offset = "0xC6F294", VA = "0xC6F294", Slot = "19")]
		public virtual void Shutdown()
		{
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0xC6F298", Offset = "0xC6F298", VA = "0xC6F298")]
		protected VRPlatform()
		{
		}
	}
}
namespace Cortopia.Scripts.Platform.User
{
	[Token(Token = "0x200027C")]
	public class DefaultUser : PlatformUser
	{
		[Token(Token = "0x17000283")]
		public override UserIdType UserIdType
		{
			[Token(Token = "0x600151E")]
			[Address(RVA = "0xC6E5E0", Offset = "0xC6E5E0", VA = "0xC6E5E0", Slot = "14")]
			get
			{
				return default(UserIdType);
			}
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0xC6E5E8", Offset = "0xC6E5E8", VA = "0xC6E5E8", Slot = "15")]
		public override IPromise Initialize()
		{
			return null;
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0xC6E694", Offset = "0xC6E694", VA = "0xC6E694")]
		public DefaultUser()
		{
		}
	}
	[Token(Token = "0x200027D")]
	public interface IPlatformUser : IPlatformService
	{
		[Token(Token = "0x17000284")]
		string UserName
		{
			[Token(Token = "0x6001523")]
			get;
		}

		[Token(Token = "0x17000285")]
		UserIdType UserIdType
		{
			[Token(Token = "0x6001524")]
			get;
		}

		[Token(Token = "0x17000286")]
		int UserIdInt
		{
			[Token(Token = "0x6001525")]
			get;
		}

		[Token(Token = "0x17000287")]
		string UserIdString
		{
			[Token(Token = "0x6001526")]
			get;
		}

		[Token(Token = "0x17000288")]
		ulong UserIdUlong
		{
			[Token(Token = "0x6001527")]
			get;
		}

		[Token(Token = "0x14000044")]
		event Action<IPlatformUser> OnUserChanged;

		[Token(Token = "0x6001528")]
		string GetUserIdString();
	}
	[Token(Token = "0x200027E")]
	public class OculusUser : PlatformUser
	{
		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Promise m_initializePromise;

		[Token(Token = "0x17000289")]
		public override UserIdType UserIdType
		{
			[Token(Token = "0x6001529")]
			[Address(RVA = "0xC6E6A4", Offset = "0xC6E6A4", VA = "0xC6E6A4", Slot = "14")]
			get
			{
				return default(UserIdType);
			}
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0xC6E6AC", Offset = "0xC6E6AC", VA = "0xC6E6AC", Slot = "15")]
		public override IPromise Initialize()
		{
			return null;
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0xC6E780", Offset = "0xC6E780", VA = "0xC6E780")]
		private void OnComplete(Message<Oculus.Platform.Models.User> userMessage)
		{
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0xC6E928", Offset = "0xC6E928", VA = "0xC6E928")]
		public OculusUser()
		{
		}
	}
	[Token(Token = "0x200027F")]
	public abstract class PlatformUser : IPlatformUser, IPlatformService
	{
		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92FCA4", Offset = "0x92FCA4")]
		private string <UserName>k__BackingField;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92FCB4", Offset = "0x92FCB4")]
		private int <UserIdInt>k__BackingField;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92FCC4", Offset = "0x92FCC4")]
		private string <UserIdString>k__BackingField;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92FCD4", Offset = "0x92FCD4")]
		private ulong <UserIdUlong>k__BackingField;

		[Token(Token = "0x1700028A")]
		public string UserName
		{
			[Token(Token = "0x600152F")]
			[Address(RVA = "0xC6EB08", Offset = "0xC6EB08", VA = "0xC6EB08", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B70C", Offset = "0x93B70C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001530")]
			[Address(RVA = "0xC6E674", Offset = "0xC6E674", VA = "0xC6E674")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B71C", Offset = "0x93B71C")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700028B")]
		public abstract UserIdType UserIdType
		{
			[Token(Token = "0x6001531")]
			get;
		}

		[Token(Token = "0x1700028C")]
		public int UserIdInt
		{
			[Token(Token = "0x6001532")]
			[Address(RVA = "0xC6EB10", Offset = "0xC6EB10", VA = "0xC6EB10", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B72C", Offset = "0x93B72C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001533")]
			[Address(RVA = "0xC6E67C", Offset = "0xC6E67C", VA = "0xC6E67C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B73C", Offset = "0x93B73C")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700028D")]
		public string UserIdString
		{
			[Token(Token = "0x6001534")]
			[Address(RVA = "0xC6EB18", Offset = "0xC6EB18", VA = "0xC6EB18", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B74C", Offset = "0x93B74C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001535")]
			[Address(RVA = "0xC6E684", Offset = "0xC6E684", VA = "0xC6E684")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B75C", Offset = "0x93B75C")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700028E")]
		public ulong UserIdUlong
		{
			[Token(Token = "0x6001536")]
			[Address(RVA = "0xC6EB20", Offset = "0xC6EB20", VA = "0xC6EB20", Slot = "10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B76C", Offset = "0x93B76C")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6001537")]
			[Address(RVA = "0xC6E68C", Offset = "0xC6E68C", VA = "0xC6E68C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B77C", Offset = "0x93B77C")]
			protected set
			{
			}
		}

		[Token(Token = "0x14000045")]
		public event Action<IPlatformUser> OnUserChanged
		{
			[Token(Token = "0x600152D")]
			[Address(RVA = "0xC6E930", Offset = "0xC6E930", VA = "0xC6E930", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B6EC", Offset = "0x93B6EC")]
			add
			{
			}
			[Token(Token = "0x600152E")]
			[Address(RVA = "0xC6EA1C", Offset = "0xC6EA1C", VA = "0xC6EA1C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B6FC", Offset = "0x93B6FC")]
			remove
			{
			}
		}

		[Token(Token = "0x6001538")]
		public abstract IPromise Initialize();

		[Token(Token = "0x6001539")]
		[Address(RVA = "0xC6EB28", Offset = "0xC6EB28", VA = "0xC6EB28", Slot = "16")]
		public virtual void Shutdown()
		{
		}

		[Token(Token = "0x600153A")]
		[Address(RVA = "0xC6EB2C", Offset = "0xC6EB2C", VA = "0xC6EB2C")]
		protected void RaiseOnUserChanged()
		{
		}

		[Token(Token = "0x600153B")]
		[Address(RVA = "0xC6EB90", Offset = "0xC6EB90", VA = "0xC6EB90", Slot = "11")]
		public string GetUserIdString()
		{
			return null;
		}

		[Token(Token = "0x600153C")]
		[Address(RVA = "0xC6E69C", Offset = "0xC6E69C", VA = "0xC6E69C")]
		protected PlatformUser()
		{
		}
	}
	[Token(Token = "0x2000280")]
	public enum UserIdType
	{
		[Token(Token = "0x4001092")]
		Int,
		[Token(Token = "0x4001093")]
		String,
		[Token(Token = "0x4001094")]
		Ulong
	}
}
namespace Cortopia.Scripts.Platform.Storage
{
	[Token(Token = "0x2000281")]
	public class DefaultStorage : IPlatformStorage, IPlatformService
	{
		[Token(Token = "0x2000570")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927AD0", Offset = "0x927AD0")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x400201E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string save;

			[Token(Token = "0x400201F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public DefaultStorage <>4__this;

			[Token(Token = "0x4002020")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int saveSlotIndex;

			[Token(Token = "0x4002021")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Promise<string> promise;

			[Token(Token = "0x6002635")]
			[Address(RVA = "0xC6E050", Offset = "0xC6E050", VA = "0xC6E050")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6002636")]
			[Address(RVA = "0xC6E2C0", Offset = "0xC6E2C0", VA = "0xC6E2C0")]
			internal string <LoadAsync>b__0()
			{
				return null;
			}

			[Token(Token = "0x6002637")]
			[Address(RVA = "0xC6E310", Offset = "0xC6E310", VA = "0xC6E310")]
			internal void <LoadAsync>b__1(Task<string> t)
			{
			}
		}

		[Token(Token = "0x2000571")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927AE0", Offset = "0x927AE0")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4002022")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DefaultStorage <>4__this;

			[Token(Token = "0x4002023")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int saveSlotIndex;

			[Token(Token = "0x4002024")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Promise promise;

			[Token(Token = "0x6002638")]
			[Address(RVA = "0xC6E258", Offset = "0xC6E258", VA = "0xC6E258")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6002639")]
			[Address(RVA = "0xC6E378", Offset = "0xC6E378", VA = "0xC6E378")]
			internal void <Save>b__0()
			{
			}

			[Token(Token = "0x600263A")]
			[Address(RVA = "0xC6E3DC", Offset = "0xC6E3DC", VA = "0xC6E3DC")]
			internal void <Save>b__1(System.Threading.Tasks.Task t)
			{
			}
		}

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected string[] m_dataStorage;

		[Token(Token = "0x1700028F")]
		protected virtual string DirectoryPath
		{
			[Token(Token = "0x600153D")]
			[Address(RVA = "0xC6DB58", Offset = "0xC6DB58", VA = "0xC6DB58", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000290")]
		private string SavePath
		{
			[Token(Token = "0x600153E")]
			[Address(RVA = "0xC6DBD4", Offset = "0xC6DBD4", VA = "0xC6DBD4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600153F")]
		[Address(RVA = "0xC6DC34", Offset = "0xC6DC34", VA = "0xC6DC34", Slot = "12")]
		public virtual IPromise Initialize()
		{
			return null;
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0xC6DCCC", Offset = "0xC6DCCC", VA = "0xC6DCCC", Slot = "10")]
		public void Shutdown()
		{
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0xC6DCD0", Offset = "0xC6DCD0", VA = "0xC6DCD0", Slot = "7")]
		public IPromise Delete(int saveSlotIndex)
		{
			return null;
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0xC6DDF0", Offset = "0xC6DDF0", VA = "0xC6DDF0", Slot = "8")]
		public bool HasSave(int saveSlotIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0xC6DE08", Offset = "0xC6DE08", VA = "0xC6DE08", Slot = "5")]
		public IPromise<string> Load(int saveSlotIndex)
		{
			return null;
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0xC6DE74", Offset = "0xC6DE74", VA = "0xC6DE74", Slot = "6")]
		public IPromise<string> LoadAsync(int saveSlotIndex)
		{
			return null;
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0xC6E058", Offset = "0xC6E058", VA = "0xC6E058", Slot = "4")]
		public IPromise Save(int saveSlotIndex, string save)
		{
			return null;
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0xC6DD54", Offset = "0xC6DD54", VA = "0xC6DD54")]
		private string DesiredSavePath(int saveSlotIndex)
		{
			return null;
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0xC6E260", Offset = "0xC6E260", VA = "0xC6E260")]
		public DefaultStorage()
		{
		}
	}
	[Token(Token = "0x2000282")]
	public interface IPlatformStorage : IPlatformService
	{
		[Token(Token = "0x6001548")]
		IPromise Save(int saveSlotIndex, string save);

		[Token(Token = "0x6001549")]
		IPromise<string> Load(int saveSlotIndex);

		[Token(Token = "0x600154A")]
		IPromise<string> LoadAsync(int saveSlotIndex);

		[Token(Token = "0x600154B")]
		IPromise Delete(int saveSlotIndex);

		[Token(Token = "0x600154C")]
		bool HasSave(int saveSlotIndex);
	}
	[Token(Token = "0x2000283")]
	public class OculusStorage : DefaultStorage
	{
		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IPlatformUser m_user;

		[Token(Token = "0x17000291")]
		protected override string DirectoryPath
		{
			[Token(Token = "0x600154D")]
			[Address(RVA = "0xC6E40C", Offset = "0xC6E40C", VA = "0xC6E40C", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0xC6E50C", Offset = "0xC6E50C", VA = "0xC6E50C", Slot = "12")]
		public override IPromise Initialize()
		{
			return null;
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0xC6E584", Offset = "0xC6E584", VA = "0xC6E584")]
		public OculusStorage()
		{
		}
	}
	[Token(Token = "0x2000284")]
	public static class StoragePath
	{
		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string Path;

		[Token(Token = "0x4001098")]
		public const string FileName = "savegame.rabbit";
	}
}
namespace Cortopia.Scripts.Platform.SettingsStorage
{
	[Token(Token = "0x2000285")]
	public class DefaultSettingsStorage : IPlatformSettingsStorage, IEnumSettingsStorage<Enum>, IPlatformService
	{
		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_prefix;

		[Token(Token = "0x6001551")]
		[Address(RVA = "0xC6D2E8", Offset = "0xC6D2E8", VA = "0xC6D2E8", Slot = "24")]
		public virtual IPromise Initialize()
		{
			return null;
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0xC6D50C", Offset = "0xC6D50C", VA = "0xC6D50C", Slot = "25")]
		public virtual void Shutdown()
		{
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0xC6D510", Offset = "0xC6D510", VA = "0xC6D510", Slot = "8")]
		public bool GetBool(string key, bool defaultValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0xC6D584", Offset = "0xC6D584", VA = "0xC6D584", Slot = "9")]
		public bool GetBool(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0xC6D5F0", Offset = "0xC6D5F0", VA = "0xC6D5F0", Slot = "12")]
		public int GetInt(string key, int defaultValue)
		{
			return default(int);
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0xC6D664", Offset = "0xC6D664", VA = "0xC6D664", Slot = "13")]
		public int GetInt(string key)
		{
			return default(int);
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0xC6D6D0", Offset = "0xC6D6D0", VA = "0xC6D6D0", Slot = "10")]
		public string GetString(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0xC6D744", Offset = "0xC6D744", VA = "0xC6D744", Slot = "11")]
		public string GetString(string key)
		{
			return null;
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0xC6D7B0", Offset = "0xC6D7B0", VA = "0xC6D7B0", Slot = "14")]
		public float GetFloat(string key, float defaultValue)
		{
			return default(float);
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0xC6D82C", Offset = "0xC6D82C", VA = "0xC6D82C", Slot = "15")]
		public float GetFloat(string key)
		{
			return default(float);
		}

		[Token(Token = "0x600155B")]
		private TEnum Cortopia.Scripts.Platform.SettingsStorage.IEnumSettingsStorage<System.Enum>.GetEnum<TEnum>(string key) where TEnum : struct, Enum
		{
			return (TEnum)null;
		}

		[Token(Token = "0x600155C")]
		private TEnum Cortopia.Scripts.Platform.SettingsStorage.IEnumSettingsStorage<System.Enum>.GetEnum<TEnum>(string key, TEnum defaultValue) where TEnum : struct, Enum
		{
			return (TEnum)null;
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0xC6D898", Offset = "0xC6D898", VA = "0xC6D898", Slot = "6")]
		public void SetBool(string key, bool value)
		{
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0xC6D90C", Offset = "0xC6D90C", VA = "0xC6D90C", Slot = "4")]
		public void SetInt(string key, int value)
		{
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0xC6D980", Offset = "0xC6D980", VA = "0xC6D980", Slot = "5")]
		public void SetString(string key, string value)
		{
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0xC6D9F4", Offset = "0xC6D9F4", VA = "0xC6D9F4", Slot = "7")]
		public void SetFloat(string key, float value)
		{
		}

		[Token(Token = "0x6001561")]
		private void Cortopia.Scripts.Platform.SettingsStorage.IEnumSettingsStorage<System.Enum>.SetEnum<TEnum>(string key, TEnum value) where TEnum : struct, Enum
		{
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0xC6DA70", Offset = "0xC6DA70", VA = "0xC6DA70", Slot = "16")]
		public bool HasKey(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001563")]
		[Address(RVA = "0xC6DADC", Offset = "0xC6DADC", VA = "0xC6DADC", Slot = "17")]
		public void DeleteKey(string key)
		{
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0xC6DB48", Offset = "0xC6DB48", VA = "0xC6DB48", Slot = "18")]
		public void Save()
		{
		}

		[Token(Token = "0x6001565")]
		[Address(RVA = "0xC6D444", Offset = "0xC6D444", VA = "0xC6D444")]
		private void SetPrefix(IPlatformUser user)
		{
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0xC6DB50", Offset = "0xC6DB50", VA = "0xC6DB50")]
		public DefaultSettingsStorage()
		{
		}
	}
	[Token(Token = "0x2000286")]
	public interface IPlatformSettingsStorage : IEnumSettingsStorage<Enum>, IPlatformService
	{
		[Token(Token = "0x6001567")]
		void SetInt(string key, int value);

		[Token(Token = "0x6001568")]
		void SetString(string key, string value);

		[Token(Token = "0x6001569")]
		void SetBool(string key, bool value);

		[Token(Token = "0x600156A")]
		void SetFloat(string key, float value);

		[Token(Token = "0x600156B")]
		bool GetBool(string key, bool defaultValue);

		[Token(Token = "0x600156C")]
		bool GetBool(string key);

		[Token(Token = "0x600156D")]
		string GetString(string key, string defaultValue);

		[Token(Token = "0x600156E")]
		string GetString(string key);

		[Token(Token = "0x600156F")]
		int GetInt(string key, int defaultValue);

		[Token(Token = "0x6001570")]
		int GetInt(string key);

		[Token(Token = "0x6001571")]
		float GetFloat(string key, float defaultValue);

		[Token(Token = "0x6001572")]
		float GetFloat(string key);

		[Token(Token = "0x6001573")]
		bool HasKey(string key);

		[Token(Token = "0x6001574")]
		void DeleteKey(string key);

		[Token(Token = "0x6001575")]
		void Save();
	}
	[Token(Token = "0x2000287")]
	public interface IEnumSettingsStorage<TClass> where TClass : class
	{
		[Token(Token = "0x6001576")]
		void SetEnum<TEnum>(string key, TEnum value) where TEnum : struct, TClass;

		[Token(Token = "0x6001577")]
		TEnum GetEnum<TEnum>(string key) where TEnum : struct, TClass;

		[Token(Token = "0x6001578")]
		TEnum GetEnum<TEnum>(string key, TEnum defaultValue) where TEnum : struct, TClass;
	}
}
namespace Cortopia.Scripts.Platform.Rig
{
	[Token(Token = "0x2000288")]
	public class DefaultRig : IPlatformRig, IPlatformService
	{
		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92FCE4", Offset = "0x92FCE4")]
		private PlayerControl <PlayerControl>k__BackingField;

		[Token(Token = "0x17000292")]
		public PlayerControl PlayerControl
		{
			[Token(Token = "0x6001579")]
			[Address(RVA = "0xC6D058", Offset = "0xC6D058", VA = "0xC6D058", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B78C", Offset = "0x93B78C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600157A")]
			[Address(RVA = "0xC6D060", Offset = "0xC6D060", VA = "0xC6D060")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B79C", Offset = "0x93B79C")]
			private set
			{
			}
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0xC6D068", Offset = "0xC6D068", VA = "0xC6D068", Slot = "5")]
		public IPromise Initialize()
		{
			return null;
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0xC6D0D4", Offset = "0xC6D0D4", VA = "0xC6D0D4")]
		private void LoadRigFromResources()
		{
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0xC6D190", Offset = "0xC6D190", VA = "0xC6D190", Slot = "6")]
		public void Shutdown()
		{
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0xC6D194", Offset = "0xC6D194", VA = "0xC6D194")]
		public DefaultRig()
		{
		}
	}
	[Token(Token = "0x2000289")]
	public interface IPlatformRig : IPlatformService
	{
		[Token(Token = "0x17000293")]
		PlayerControl PlayerControl
		{
			[Token(Token = "0x600157F")]
			get;
		}
	}
	[Token(Token = "0x200028A")]
	public class OculusRig : IPlatformRig, IPlatformService
	{
		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92FCF4", Offset = "0x92FCF4")]
		private PlayerControl <PlayerControl>k__BackingField;

		[Token(Token = "0x17000294")]
		public PlayerControl PlayerControl
		{
			[Token(Token = "0x6001580")]
			[Address(RVA = "0xC6D19C", Offset = "0xC6D19C", VA = "0xC6D19C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B7AC", Offset = "0x93B7AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001581")]
			[Address(RVA = "0xC6D1A4", Offset = "0xC6D1A4", VA = "0xC6D1A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B7BC", Offset = "0x93B7BC")]
			private set
			{
			}
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0xC6D1AC", Offset = "0xC6D1AC", VA = "0xC6D1AC", Slot = "5")]
		public IPromise Initialize()
		{
			return null;
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0xC6D218", Offset = "0xC6D218", VA = "0xC6D218")]
		private void LoadRigFromResources()
		{
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0xC6D2D4", Offset = "0xC6D2D4", VA = "0xC6D2D4", Slot = "6")]
		public void Shutdown()
		{
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0xC6D2D8", Offset = "0xC6D2D8", VA = "0xC6D2D8")]
		public OculusRig()
		{
		}
	}
	[Token(Token = "0x200028B")]
	public class PlayStationDeviceTracker : MonoBehaviour
	{
		[Token(Token = "0x6001586")]
		[Address(RVA = "0xC6D2E0", Offset = "0xC6D2E0", VA = "0xC6D2E0")]
		public PlayStationDeviceTracker()
		{
		}
	}
}
namespace Cortopia.Scripts.Platform.ResourceServices
{
	[Token(Token = "0x200028C")]
	public interface IPlatformResources : IPlatformService
	{
		[Token(Token = "0x17000295")]
		TMP_SpriteAsset ControlSchemeSpriteAsset
		{
			[Token(Token = "0x6001587")]
			get;
		}

		[Token(Token = "0x17000296")]
		Sprite[] ControlSchemeSprites
		{
			[Token(Token = "0x6001588")]
			get;
		}
	}
	[Token(Token = "0x200028D")]
	public class OculusPlatformResources : PlatformResources
	{
		[Token(Token = "0x6001589")]
		[Address(RVA = "0xC6C520", Offset = "0xC6C520", VA = "0xC6C520", Slot = "8")]
		public override IPromise Initialize()
		{
			return null;
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0xC6C8B8", Offset = "0xC6C8B8", VA = "0xC6C8B8")]
		public OculusPlatformResources()
		{
		}
	}
	[Token(Token = "0x200028E")]
	public abstract class OpenVRPlatformResources : PlatformResources
	{
		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected readonly IReadOnlyDictionary<InputDeviceType, string> m_supportedInputPaths;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected EventToken m_onInputDeviceChangedEventToken;

		[Token(Token = "0x600158B")]
		[Address(RVA = "0xC6C994", Offset = "0xC6C994", VA = "0xC6C994", Slot = "9")]
		public override void Shutdown()
		{
		}

		[Token(Token = "0x600158C")]
		[Address(RVA = "0xC6CA08", Offset = "0xC6CA08", VA = "0xC6CA08")]
		protected void OnInputDeviceChanged(PlatformEvents.InputDeviceChangedEvent eventData)
		{
		}

		[Token(Token = "0x600158D")]
		[Address(RVA = "0xC6CB78", Offset = "0xC6CB78", VA = "0xC6CB78")]
		protected OpenVRPlatformResources()
		{
		}
	}
	[Token(Token = "0x200028F")]
	public abstract class PlatformResources : IPlatformResources, IPlatformService
	{
		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92FD04", Offset = "0x92FD04")]
		private TMP_SpriteAsset <ControlSchemeSpriteAsset>k__BackingField;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92FD14", Offset = "0x92FD14")]
		private readonly Sprite[] <ControlSchemeSprites>k__BackingField;

		[Token(Token = "0x17000297")]
		public TMP_SpriteAsset ControlSchemeSpriteAsset
		{
			[Token(Token = "0x600158E")]
			[Address(RVA = "0xC6CD08", Offset = "0xC6CD08", VA = "0xC6CD08", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B7CC", Offset = "0x93B7CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600158F")]
			[Address(RVA = "0xC6CD10", Offset = "0xC6CD10", VA = "0xC6CD10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B7DC", Offset = "0x93B7DC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000298")]
		public Sprite[] ControlSchemeSprites
		{
			[Token(Token = "0x6001590")]
			[Address(RVA = "0xC6CB70", Offset = "0xC6CB70", VA = "0xC6CB70", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B7EC", Offset = "0x93B7EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001591")]
		public abstract IPromise Initialize();

		[Token(Token = "0x6001592")]
		[Address(RVA = "0xC6CD18", Offset = "0xC6CD18", VA = "0xC6CD18", Slot = "9")]
		public virtual void Shutdown()
		{
		}

		[Token(Token = "0x6001593")]
		[Address(RVA = "0xC6C598", Offset = "0xC6C598", VA = "0xC6C598")]
		protected void SetControlSchemeSprites(string inputTypeSpriteAssetPath)
		{
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0xC6C8BC", Offset = "0xC6C8BC", VA = "0xC6C8BC")]
		protected PlatformResources()
		{
		}
	}
	[Token(Token = "0x2000290")]
	public class PlaystationPlatformResources : PlatformResources
	{
		[Token(Token = "0x6001595")]
		[Address(RVA = "0xC6CD1C", Offset = "0xC6CD1C", VA = "0xC6CD1C", Slot = "8")]
		public override IPromise Initialize()
		{
			return null;
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0xC6CD94", Offset = "0xC6CD94", VA = "0xC6CD94")]
		public PlaystationPlatformResources()
		{
		}
	}
	[Token(Token = "0x2000291")]
	public class SteamPlatformResources : OpenVRPlatformResources
	{
		[Token(Token = "0x6001597")]
		[Address(RVA = "0xC6CD98", Offset = "0xC6CD98", VA = "0xC6CD98", Slot = "8")]
		public override IPromise Initialize()
		{
			return null;
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0xC6CEF4", Offset = "0xC6CEF4", VA = "0xC6CEF4")]
		public SteamPlatformResources()
		{
		}
	}
	[Token(Token = "0x2000292")]
	public class ViveportPlatformResources : OpenVRPlatformResources
	{
		[Token(Token = "0x6001599")]
		[Address(RVA = "0xC6CEF8", Offset = "0xC6CEF8", VA = "0xC6CEF8", Slot = "8")]
		public override IPromise Initialize()
		{
			return null;
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0xC6D054", Offset = "0xC6D054", VA = "0xC6D054")]
		public ViveportPlatformResources()
		{
		}
	}
}
namespace Cortopia.Scripts.Platform.Input
{
	[Token(Token = "0x2000293")]
	public enum ButtonType
	{
		[Token(Token = "0x40010A1")]
		Menu,
		[Token(Token = "0x40010A2")]
		Interact,
		[Token(Token = "0x40010A3")]
		Cancel,
		[Token(Token = "0x40010A4")]
		Recenter,
		[Token(Token = "0x40010A5")]
		CharacterSwap,
		[Token(Token = "0x40010A6")]
		MoveUp,
		[Token(Token = "0x40010A7")]
		MoveDown,
		[Token(Token = "0x40010A8")]
		MoveLeft,
		[Token(Token = "0x40010A9")]
		MoveRight
	}
	[Token(Token = "0x2000294")]
	public enum AxisType
	{
		[Token(Token = "0x40010AB")]
		Move,
		[Token(Token = "0x40010AC")]
		PlayerMove
	}
	[Token(Token = "0x2000295")]
	public enum TriggerType
	{
		[Token(Token = "0x40010AE")]
		PointLeft,
		[Token(Token = "0x40010AF")]
		PointRight,
		[Token(Token = "0x40010B0")]
		GrabLeft,
		[Token(Token = "0x40010B1")]
		GrabRight
	}
	[Token(Token = "0x2000296")]
	public enum TouchType
	{
		[Token(Token = "0x40010B3")]
		PointLeft,
		[Token(Token = "0x40010B4")]
		PointRight,
		[Token(Token = "0x40010B5")]
		GrabLeft,
		[Token(Token = "0x40010B6")]
		GrabRight,
		[Token(Token = "0x40010B7")]
		FaceButtonsLeft,
		[Token(Token = "0x40010B8")]
		FaceButtonsRight
	}
	[Token(Token = "0x2000297")]
	public interface IInputListener
	{
		[Token(Token = "0x17000299")]
		bool HasRotationChange
		{
			[Token(Token = "0x600159E")]
			get;
		}

		[Token(Token = "0x600159B")]
		void Initialize(PlayerCamera playerCamera);

		[Token(Token = "0x600159C")]
		void TrackPlayerRotate(bool rotateAroundWorld);

		[Token(Token = "0x600159D")]
		void TrackPlayerMove();

		[Token(Token = "0x600159F")]
		void ClearRotationChange();
	}
	[Token(Token = "0x2000298")]
	public enum InputDeviceType
	{
		[Token(Token = "0x40010BA")]
		PlayStationMove,
		[Token(Token = "0x40010BB")]
		PlayStationGamepad,
		[Token(Token = "0x40010BC")]
		OculusQuest,
		[Token(Token = "0x40010BD")]
		OculusRift,
		[Token(Token = "0x40010BE")]
		Editor,
		[Token(Token = "0x40010BF")]
		Index,
		[Token(Token = "0x40010C0")]
		ViveController,
		[Token(Token = "0x40010C1")]
		Cosmos,
		[Token(Token = "0x40010C2")]
		WindowsMixedReality
	}
	[Token(Token = "0x2000299")]
	public interface IPlatformInput : IPlatformService
	{
		[Token(Token = "0x1700029A")]
		InputDeviceType InputDeviceType
		{
			[Token(Token = "0x60015A0")]
			get;
		}

		[Token(Token = "0x1700029B")]
		IEnumerable<ButtonType> MappedButtons
		{
			[Token(Token = "0x60015A1")]
			get;
		}

		[Token(Token = "0x1700029C")]
		bool UseStickAxisPlayerMovement
		{
			[Token(Token = "0x60015A2")]
			get;
		}

		[Token(Token = "0x60015A3")]
		bool Any();

		[Token(Token = "0x60015A4")]
		Vector2 GetAxis(AxisType axis);

		[Token(Token = "0x60015A5")]
		float GetTrigger(TriggerType trigger);

		[Token(Token = "0x60015A6")]
		bool GetButtonDown(ButtonType button);

		[Token(Token = "0x60015A7")]
		bool GetButton(ButtonType button);

		[Token(Token = "0x60015A8")]
		bool GetButtonUp(ButtonType button);

		[Token(Token = "0x60015A9")]
		bool GetTouch(TouchType touch);
	}
	[Token(Token = "0x200029A")]
	public abstract class OculusPlatformInput : IPlatformInput, IPlatformService
	{
		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IReadOnlyDictionary<AxisType, OVRInput.RawAxis2D> m_axisMappings;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly IReadOnlyDictionary<ButtonType, OVRInput.RawButton> m_buttonMappings;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly IReadOnlyDictionary<TriggerType, OVRInput.RawAxis1D> m_triggerMappings;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly IReadOnlyDictionary<TouchType, OVRInput.RawNearTouch> m_touchMappings;

		[Token(Token = "0x1700029D")]
		public abstract InputDeviceType InputDeviceType
		{
			[Token(Token = "0x60015AA")]
			get;
		}

		[Token(Token = "0x1700029E")]
		public IEnumerable<ButtonType> MappedButtons
		{
			[Token(Token = "0x60015AB")]
			[Address(RVA = "0xAF61F8", Offset = "0xAF61F8", VA = "0xAF61F8", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700029F")]
		public bool UseStickAxisPlayerMovement
		{
			[Token(Token = "0x60015AC")]
			[Address(RVA = "0xAF62B0", Offset = "0xAF62B0", VA = "0xAF62B0", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0xAF62B8", Offset = "0xAF62B8", VA = "0xAF62B8", Slot = "14")]
		public IPromise Initialize()
		{
			return null;
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0xAF6318", Offset = "0xAF6318", VA = "0xAF6318", Slot = "7")]
		public bool Any()
		{
			return default(bool);
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0xAF6478", Offset = "0xAF6478", VA = "0xAF6478", Slot = "8")]
		public Vector2 GetAxis(AxisType axis)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0xAF6578", Offset = "0xAF6578", VA = "0xAF6578", Slot = "9")]
		public float GetTrigger(TriggerType trigger)
		{
			return default(float);
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0xAF6678", Offset = "0xAF6678", VA = "0xAF6678", Slot = "10")]
		public bool GetButtonDown(ButtonType button)
		{
			return default(bool);
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0xAF6378", Offset = "0xAF6378", VA = "0xAF6378", Slot = "11")]
		public bool GetButton(ButtonType button)
		{
			return default(bool);
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0xAF6778", Offset = "0xAF6778", VA = "0xAF6778", Slot = "12")]
		public bool GetButtonUp(ButtonType button)
		{
			return default(bool);
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0xAF6878", Offset = "0xAF6878", VA = "0xAF6878", Slot = "13")]
		public bool GetTouch(TouchType touch)
		{
			return default(bool);
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0xAF6978", Offset = "0xAF6978", VA = "0xAF6978", Slot = "15")]
		public void Shutdown()
		{
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0xAF697C", Offset = "0xAF697C", VA = "0xAF697C")]
		protected OculusPlatformInput()
		{
		}
	}
	[Token(Token = "0x200029B")]
	public class OculusQuestPlatformInput : OculusPlatformInput
	{
		[Token(Token = "0x170002A0")]
		public override InputDeviceType InputDeviceType
		{
			[Token(Token = "0x60015B7")]
			[Address(RVA = "0xAF6DDC", Offset = "0xAF6DDC", VA = "0xAF6DDC", Slot = "16")]
			get
			{
				return default(InputDeviceType);
			}
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0xAF44AC", Offset = "0xAF44AC", VA = "0xAF44AC")]
		public OculusQuestPlatformInput()
		{
		}
	}
}
namespace Cortopia.Scripts.Platform.Icons
{
	[Token(Token = "0x200029C")]
	public static class InputIconParams
	{
		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly IDictionary<string, InputIconType> sm_inputParamToIconType;

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly IDictionary<InputIconType, string> sm_inputIconParamNames;

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0xAF56F0", Offset = "0xAF56F0", VA = "0xAF56F0")]
		static InputIconParams()
		{
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0xAF5D04", Offset = "0xAF5D04", VA = "0xAF5D04")]
		public static string GetParamName(InputIconType type)
		{
			return null;
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0xAF5DE4", Offset = "0xAF5DE4", VA = "0xAF5DE4")]
		public static InputIconType GetIconType(string paramName)
		{
			return default(InputIconType);
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0xAF5EC4", Offset = "0xAF5EC4", VA = "0xAF5EC4")]
		public static bool IsValidInputIconParam(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0xAF5A74", Offset = "0xAF5A74", VA = "0xAF5A74")]
		private static string GetParamAttributeName(InputIconType iconType)
		{
			return null;
		}
	}
	[Token(Token = "0x200029D")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x92692C", Offset = "0x92692C")]
	public class IconNameAttribute : Attribute
	{
		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x92FD24", Offset = "0x92FD24")]
		private string <Name>k__BackingField;

		[Token(Token = "0x170002A1")]
		public string Name
		{
			[Token(Token = "0x60015BE")]
			[Address(RVA = "0xAF56B4", Offset = "0xAF56B4", VA = "0xAF56B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B7FC", Offset = "0x93B7FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015BF")]
			[Address(RVA = "0xAF56BC", Offset = "0xAF56BC", VA = "0xAF56BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B80C", Offset = "0x93B80C")]
			private set
			{
			}
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0xAF56C4", Offset = "0xAF56C4", VA = "0xAF56C4")]
		public IconNameAttribute(string name)
		{
		}
	}
	[Token(Token = "0x200029E")]
	public enum InputIconType
	{
		[Token(Token = "0x40010CB")]
		[AttributeAttribute(Name = "IconNameAttribute", RVA = "0x92FD34", Offset = "0x92FD34")]
		Move,
		[Token(Token = "0x40010CC")]
		[AttributeAttribute(Name = "IconNameAttribute", RVA = "0x92FD6C", Offset = "0x92FD6C")]
		PlayerMove,
		[Token(Token = "0x40010CD")]
		[AttributeAttribute(Name = "IconNameAttribute", RVA = "0x92FDA4", Offset = "0x92FDA4")]
		Menu,
		[Token(Token = "0x40010CE")]
		[AttributeAttribute(Name = "IconNameAttribute", RVA = "0x92FDDC", Offset = "0x92FDDC")]
		Interact,
		[Token(Token = "0x40010CF")]
		[AttributeAttribute(Name = "IconNameAttribute", RVA = "0x92FE14", Offset = "0x92FE14")]
		Cancel,
		[Token(Token = "0x40010D0")]
		[AttributeAttribute(Name = "IconNameAttribute", RVA = "0x92FE4C", Offset = "0x92FE4C")]
		Recenter,
		[Token(Token = "0x40010D1")]
		[AttributeAttribute(Name = "IconNameAttribute", RVA = "0x92FE84", Offset = "0x92FE84")]
		CharacterSwap,
		[Token(Token = "0x40010D2")]
		[AttributeAttribute(Name = "IconNameAttribute", RVA = "0x92FEBC", Offset = "0x92FEBC")]
		PointLeft,
		[Token(Token = "0x40010D3")]
		[AttributeAttribute(Name = "IconNameAttribute", RVA = "0x92FEF4", Offset = "0x92FEF4")]
		PointRight,
		[Token(Token = "0x40010D4")]
		[AttributeAttribute(Name = "IconNameAttribute", RVA = "0x92FF2C", Offset = "0x92FF2C")]
		GrabLeft,
		[Token(Token = "0x40010D5")]
		[AttributeAttribute(Name = "IconNameAttribute", RVA = "0x92FF64", Offset = "0x92FF64")]
		GrabRight
	}
	[Token(Token = "0x200029F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x926940", Offset = "0x926940")]
	public class PlatformIconHandler : MonoBehaviour
	{
		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_Text m_tmpText;

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private EventToken m_onInputDeviceChangedEventToken;

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0xAF5FA8", Offset = "0xAF5FA8", VA = "0xAF5FA8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0xAF6178", Offset = "0xAF6178", VA = "0xAF6178")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0xAF61EC", Offset = "0xAF61EC", VA = "0xAF61EC")]
		private void OnInputDeviceChanged(PlatformEvents.InputDeviceChangedEvent eventData)
		{
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0xAF6074", Offset = "0xAF6074", VA = "0xAF6074")]
		private void ChangeSpriteAsset()
		{
		}

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0xAF61F0", Offset = "0xAF61F0", VA = "0xAF61F0")]
		public PlatformIconHandler()
		{
		}
	}
}
namespace Cortopia.Scripts.Platform.Haptics
{
	[Serializable]
	[Token(Token = "0x20002A0")]
	public class DefaultHapticClipSettings : HapticClipSettings
	{
		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x92FF9C", Offset = "0x92FF9C")]
		public float Amplitude;

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0xAF5048", Offset = "0xAF5048", VA = "0xAF5048")]
		public DefaultHapticClipSettings()
		{
		}
	}
	[Token(Token = "0x20002A1")]
	public class DefaultHaptics : IPlatformHaptics, IPlatformService
	{
		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly IReadOnlyDictionary<PointerType, XRNode> sm_nodeMappings;

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0xAF5074", Offset = "0xAF5074", VA = "0xAF5074", Slot = "6")]
		public IPromise Initialize()
		{
			return null;
		}

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0xAF50D4", Offset = "0xAF50D4", VA = "0xAF50D4", Slot = "7")]
		public void Shutdown()
		{
		}

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0xAF50D8", Offset = "0xAF50D8", VA = "0xAF50D8", Slot = "4")]
		public void Vibrate(HapticClip clip, PointerType type)
		{
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0xAF5454", Offset = "0xAF5454", VA = "0xAF5454", Slot = "5")]
		public void Stop(PointerType type)
		{
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0xAF530C", Offset = "0xAF530C", VA = "0xAF530C")]
		private static bool GenerateBuffer(float seconds, float amplitude, HapticCapabilities capabilities, ref byte[] buffer)
		{
			return default(bool);
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0xAF43FC", Offset = "0xAF43FC", VA = "0xAF43FC")]
		public DefaultHaptics()
		{
		}
	}
	[Token(Token = "0x20002A2")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x9269A4", Offset = "0x9269A4")]
	public class HapticClip : ScriptableObject
	{
		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private DefaultHapticClipSettings m_defaultSettings;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private OpenVRHapticClipSettings m_openVRSettings;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PlayStationHapticClipSettings m_playStationSettings;

		[Token(Token = "0x170002A2")]
		public DefaultHapticClipSettings Settings
		{
			[Token(Token = "0x60015CE")]
			[Address(RVA = "0xAF5304", Offset = "0xAF5304", VA = "0xAF5304")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0xADB560", Offset = "0xADB560", VA = "0xADB560")]
		public void Play(PointerType type)
		{
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0xAE937C", Offset = "0xAE937C", VA = "0xAE937C")]
		public void Stop(PointerType type)
		{
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0xAF5670", Offset = "0xAF5670", VA = "0xAF5670")]
		public HapticClip()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A3")]
	public class HapticClipSettings
	{
		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float Time;

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0xAF5060", Offset = "0xAF5060", VA = "0xAF5060")]
		public HapticClipSettings()
		{
		}
	}
	[Token(Token = "0x20002A4")]
	public interface IPlatformHaptics : IPlatformService
	{
		[Token(Token = "0x60015D3")]
		void Vibrate(HapticClip clip, PointerType type);

		[Token(Token = "0x60015D4")]
		void Stop(PointerType type);
	}
	[Serializable]
	[Token(Token = "0x20002A5")]
	public class OpenVRHapticClipSettings : DefaultHapticClipSettings
	{
		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x92FFE4", Offset = "0x92FFE4")]
		public int Frequency;

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0xAF5678", Offset = "0xAF5678", VA = "0xAF5678")]
		public OpenVRHapticClipSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002A6")]
	public class PlayStationHapticClipSettings : HapticClipSettings
	{
		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x930000", Offset = "0x930000")]
		public int MaxConcurrent;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x930018", Offset = "0x930018")]
		public int SmallMotor;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x930034", Offset = "0x930034")]
		public int LargeMotor;

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0xAF5698", Offset = "0xAF5698", VA = "0xAF5698")]
		public PlayStationHapticClipSettings()
		{
		}
	}
}
namespace Cortopia.Scripts.Platform.Factory
{
	[Token(Token = "0x20002A7")]
	public class AchievementFactory : ServiceFactory<IPlatformAchievements>
	{
		[Token(Token = "0x60015D7")]
		[Address(RVA = "0xAF424C", Offset = "0xAF424C", VA = "0xAF424C", Slot = "4")]
		public override IPlatformService CreateService()
		{
			return null;
		}

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0xAF42A8", Offset = "0xAF42A8", VA = "0xAF42A8")]
		public AchievementFactory()
		{
		}
	}
	[Token(Token = "0x20002A8")]
	public class AnalyticsFactory : ServiceFactory<IPlatformAnalytics>
	{
		[Token(Token = "0x60015D9")]
		[Address(RVA = "0xAF42F8", Offset = "0xAF42F8", VA = "0xAF42F8", Slot = "4")]
		public override IPlatformService CreateService()
		{
			return null;
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0xAF4350", Offset = "0xAF4350", VA = "0xAF4350")]
		public AnalyticsFactory()
		{
		}
	}
	[Token(Token = "0x20002A9")]
	public class HapticsFactory : ServiceFactory<IPlatformHaptics>
	{
		[Token(Token = "0x60015DB")]
		[Address(RVA = "0xAF43A0", Offset = "0xAF43A0", VA = "0xAF43A0", Slot = "4")]
		public override IPlatformService CreateService()
		{
			return null;
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0xAF4404", Offset = "0xAF4404", VA = "0xAF4404")]
		public HapticsFactory()
		{
		}
	}
	[Token(Token = "0x20002AA")]
	public class InputFactory : ServiceFactory<IPlatformInput>
	{
		[Token(Token = "0x60015DD")]
		[Address(RVA = "0xAF4454", Offset = "0xAF4454", VA = "0xAF4454", Slot = "4")]
		public override IPlatformService CreateService()
		{
			return null;
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0xAF44B0", Offset = "0xAF44B0", VA = "0xAF44B0")]
		public InputFactory()
		{
		}
	}
	[Token(Token = "0x20002AB")]
	public class PlatformFactory : ServiceFactory<IPlatform>
	{
		[Token(Token = "0x60015DF")]
		[Address(RVA = "0xAF4500", Offset = "0xAF4500", VA = "0xAF4500", Slot = "4")]
		public override IPlatformService CreateService()
		{
			return null;
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0xAF455C", Offset = "0xAF455C", VA = "0xAF455C")]
		private static GameObject CreatePlatformGameObject()
		{
			return null;
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0xAF45F0", Offset = "0xAF45F0", VA = "0xAF45F0")]
		public PlatformFactory()
		{
		}
	}
	[Token(Token = "0x20002AC")]
	public class ResourceFactory : ServiceFactory<IPlatformResources>
	{
		[Token(Token = "0x60015E2")]
		[Address(RVA = "0xAF4640", Offset = "0xAF4640", VA = "0xAF4640", Slot = "4")]
		public override IPlatformService CreateService()
		{
			return null;
		}

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0xAF469C", Offset = "0xAF469C", VA = "0xAF469C")]
		public ResourceFactory()
		{
		}
	}
	[Token(Token = "0x20002AD")]
	public class RigFactory : ServiceFactory<IPlatformRig>
	{
		[Token(Token = "0x60015E4")]
		[Address(RVA = "0xAF46EC", Offset = "0xAF46EC", VA = "0xAF46EC", Slot = "4")]
		public override IPlatformService CreateService()
		{
			return null;
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0xAF4748", Offset = "0xAF4748", VA = "0xAF4748")]
		public RigFactory()
		{
		}
	}
	[Token(Token = "0x20002AE")]
	public abstract class ServiceFactory
	{
		[Token(Token = "0x60015E6")]
		[Address(RVA = "0xAF4798", Offset = "0xAF4798", VA = "0xAF4798")]
		protected ServiceFactory()
		{
		}
	}
	[Token(Token = "0x20002AF")]
	public abstract class ServiceFactory<T> : ServiceFactory where T : IPlatformService
	{
		[Token(Token = "0x60015E7")]
		public abstract IPlatformService CreateService();

		[Token(Token = "0x60015E8")]
		protected ServiceFactory()
		{
		}
	}
	[Token(Token = "0x20002B0")]
	public static class ServiceFactoryRepository
	{
		[Serializable]
		[Token(Token = "0x2000572")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927AF0", Offset = "0x927AF0")]
		private sealed class <>c
		{
			[Token(Token = "0x4002025")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x600263C")]
			[Address(RVA = "0xAF4C64", Offset = "0xAF4C64", VA = "0xAF4C64")]
			public <>c()
			{
			}

			[Token(Token = "0x600263D")]
			[Address(RVA = "0xAF4C6C", Offset = "0xAF4C6C", VA = "0xAF4C6C")]
			internal bool <.cctor>b__1_0(Type t)
			{
				return default(bool);
			}

			[Token(Token = "0x600263E")]
			[Address(RVA = "0xAF4DB8", Offset = "0xAF4DB8", VA = "0xAF4DB8")]
			internal ServiceFactory <.cctor>b__1_1(Type t)
			{
				return null;
			}
		}

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Type, ServiceFactory> sm_factories;

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0xAF47A0", Offset = "0xAF47A0", VA = "0xAF47A0")]
		static ServiceFactoryRepository()
		{
		}

		[Token(Token = "0x60015EA")]
		public static TFactory GetFactory<TFactory, TService>() where TFactory : ServiceFactory<TService> where TService : IPlatformService
		{
			return null;
		}
	}
	[Token(Token = "0x20002B1")]
	public class SettingsStorageFactory : ServiceFactory<IPlatformSettingsStorage>
	{
		[Token(Token = "0x60015EB")]
		[Address(RVA = "0xAF4E44", Offset = "0xAF4E44", VA = "0xAF4E44", Slot = "4")]
		public override IPlatformService CreateService()
		{
			return null;
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0xAF4EA0", Offset = "0xAF4EA0", VA = "0xAF4EA0")]
		public SettingsStorageFactory()
		{
		}
	}
	[Token(Token = "0x20002B2")]
	public class StorageFactory : ServiceFactory<IPlatformStorage>
	{
		[Token(Token = "0x60015ED")]
		[Address(RVA = "0xAF4EF0", Offset = "0xAF4EF0", VA = "0xAF4EF0", Slot = "4")]
		public override IPlatformService CreateService()
		{
			return null;
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0xAF4F4C", Offset = "0xAF4F4C", VA = "0xAF4F4C")]
		public StorageFactory()
		{
		}
	}
	[Token(Token = "0x20002B3")]
	public class UserFactory : ServiceFactory<IPlatformUser>
	{
		[Token(Token = "0x60015EF")]
		[Address(RVA = "0xAF4F9C", Offset = "0xAF4F9C", VA = "0xAF4F9C", Slot = "4")]
		public override IPlatformService CreateService()
		{
			return null;
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0xAF4FF8", Offset = "0xAF4FF8", VA = "0xAF4FF8")]
		public UserFactory()
		{
		}
	}
}
namespace Cortopia.Scripts.Platform.Analytics
{
	[Token(Token = "0x20002B4")]
	public class DefaultAnalytics : IPlatformAnalytics, IPlatformService
	{
		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IDictionary<string, object> m_eventData;

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0xAF40E8", Offset = "0xAF40E8", VA = "0xAF40E8", Slot = "6")]
		public IPromise Initialize()
		{
			return null;
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0xAF4148", Offset = "0xAF4148", VA = "0xAF4148", Slot = "7")]
		public void Shutdown()
		{
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0xAF414C", Offset = "0xAF414C", VA = "0xAF414C", Slot = "4")]
		public void Publish(string eventName)
		{
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0xAF4158", Offset = "0xAF4158", VA = "0xAF4158", Slot = "5")]
		public void Publish(string eventName, IDictionary<string, object> eventData)
		{
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0xAF4168", Offset = "0xAF4168", VA = "0xAF4168")]
		public DefaultAnalytics()
		{
		}
	}
	[Token(Token = "0x20002B5")]
	public interface IPlatformAnalytics : IPlatformService
	{
		[Token(Token = "0x60015F6")]
		void Publish(string eventName);

		[Token(Token = "0x60015F7")]
		void Publish(string eventName, IDictionary<string, object> eventData);
	}
}
namespace Cortopia.Scripts.Platform.Achievements
{
	[Token(Token = "0x20002B6")]
	public class Achievement : ScriptableObject, IAchievement
	{
		[Serializable]
		[Token(Token = "0x2000573")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927B00", Offset = "0x927B00")]
		private sealed class <>c
		{
			[Token(Token = "0x4002026")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002027")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<Exception> <>9__24_1;

			[Token(Token = "0x4002028")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<Exception> <>9__25_1;

			[Token(Token = "0x6002640")]
			[Address(RVA = "0xAF22E8", Offset = "0xAF22E8", VA = "0xAF22E8")]
			public <>c()
			{
			}

			[Token(Token = "0x6002641")]
			[Address(RVA = "0xAF22F0", Offset = "0xAF22F0", VA = "0xAF22F0")]
			internal void <Unlock>b__24_1(Exception e)
			{
			}

			[Token(Token = "0x6002642")]
			[Address(RVA = "0xAF22F4", Offset = "0xAF22F4", VA = "0xAF22F4")]
			internal void <Lock>b__25_1(Exception e)
			{
			}
		}

		[Token(Token = "0x40010E4")]
		public const int NoId = -1;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x930050", Offset = "0x930050")]
		private string m_description;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x930088", Offset = "0x930088")]
		private int m_id;

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9300D4", Offset = "0x9300D4")]
		private string m_nameId;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930120", Offset = "0x930120")]
		private AchievementStatus <Status>k__BackingField;

		[Token(Token = "0x170002A3")]
		public string Name
		{
			[Token(Token = "0x60015F8")]
			[Address(RVA = "0xAF1440", Offset = "0xAF1440", VA = "0xAF1440", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A4")]
		public int Id
		{
			[Token(Token = "0x60015F9")]
			[Address(RVA = "0xAF1448", Offset = "0xAF1448", VA = "0xAF1448", Slot = "7")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002A5")]
		public string Description
		{
			[Token(Token = "0x60015FA")]
			[Address(RVA = "0xAF1450", Offset = "0xAF1450", VA = "0xAF1450", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A6")]
		public string NameId
		{
			[Token(Token = "0x60015FB")]
			[Address(RVA = "0xAF1458", Offset = "0xAF1458", VA = "0xAF1458", Slot = "6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A7")]
		public AchievementStatus Status
		{
			[Token(Token = "0x60015FC")]
			[Address(RVA = "0xAEE478", Offset = "0xAEE478", VA = "0xAEE478")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B81C", Offset = "0x93B81C")]
			get
			{
				return default(AchievementStatus);
			}
			[Token(Token = "0x60015FD")]
			[Address(RVA = "0xAF1460", Offset = "0xAF1460", VA = "0xAF1460")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B82C", Offset = "0x93B82C")]
			set
			{
			}
		}

		[Token(Token = "0x14000046")]
		public static event Action<IAchievement> OnUnlocked
		{
			[Token(Token = "0x60015FE")]
			[Address(RVA = "0xAF1468", Offset = "0xAF1468", VA = "0xAF1468")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B83C", Offset = "0x93B83C")]
			add
			{
			}
			[Token(Token = "0x60015FF")]
			[Address(RVA = "0xAF1564", Offset = "0xAF1564", VA = "0xAF1564")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B84C", Offset = "0x93B84C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000047")]
		public static event Action<IAchievement> OnLocked
		{
			[Token(Token = "0x6001600")]
			[Address(RVA = "0xAF1660", Offset = "0xAF1660", VA = "0xAF1660")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B85C", Offset = "0x93B85C")]
			add
			{
			}
			[Token(Token = "0x6001601")]
			[Address(RVA = "0xAF1760", Offset = "0xAF1760", VA = "0xAF1760")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B86C", Offset = "0x93B86C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0xAF1860", Offset = "0xAF1860", VA = "0xAF1860", Slot = "8")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0xAF1A08", Offset = "0xAF1A08", VA = "0xAF1A08")]
		public void Unlock(float delay)
		{
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0xAF1C54", Offset = "0xAF1C54", VA = "0xAF1C54", Slot = "9")]
		public virtual void Unlock()
		{
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0xAF1EB4", Offset = "0xAF1EB4", VA = "0xAF1EB4", Slot = "10")]
		public virtual void Lock()
		{
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0xAF2114", Offset = "0xAF2114", VA = "0xAF2114")]
		private void SetStatus(AchievementStatus status)
		{
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0xAF211C", Offset = "0xAF211C", VA = "0xAF211C")]
		public Achievement()
		{
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0xAF2190", Offset = "0xAF2190", VA = "0xAF2190")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B87C", Offset = "0x93B87C")]
		private void <Unlock>b__24_0()
		{
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0xAF220C", Offset = "0xAF220C", VA = "0xAF220C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B88C", Offset = "0x93B88C")]
		private void <Lock>b__25_0()
		{
		}
	}
	[Token(Token = "0x20002B7")]
	public enum AchievementStatus
	{
		[Token(Token = "0x40010EC")]
		Locked,
		[Token(Token = "0x40010ED")]
		Unlocked
	}
	[Token(Token = "0x20002B8")]
	public class DefaultAchievements : ManualCountAchievementsBase
	{
		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IPlatformSettingsStorage m_storage;

		[Token(Token = "0x600160A")]
		[Address(RVA = "0xAF22F8", Offset = "0xAF22F8", VA = "0xAF22F8", Slot = "11")]
		public override IPromise Initialize()
		{
			return null;
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0xAF2390", Offset = "0xAF2390", VA = "0xAF2390", Slot = "14")]
		public override IPromise LockAchievement(IAchievement achievement)
		{
			return null;
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0xAF2518", Offset = "0xAF2518", VA = "0xAF2518", Slot = "15")]
		public override IPromise UnlockAchievement(IAchievement achievement)
		{
			return null;
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0xAF26A0", Offset = "0xAF26A0", VA = "0xAF26A0", Slot = "13")]
		public override IPromise<AchievementStatus> GetAchievementStatus(IAchievement achievement)
		{
			return null;
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0xAF2810", Offset = "0xAF2810", VA = "0xAF2810")]
		public DefaultAchievements()
		{
		}
	}
	[Token(Token = "0x20002B9")]
	public interface IAchievement
	{
		[Token(Token = "0x170002A8")]
		string Name
		{
			[Token(Token = "0x600160F")]
			get;
		}

		[Token(Token = "0x170002A9")]
		string Description
		{
			[Token(Token = "0x6001610")]
			get;
		}

		[Token(Token = "0x170002AA")]
		string NameId
		{
			[Token(Token = "0x6001611")]
			get;
		}

		[Token(Token = "0x170002AB")]
		int Id
		{
			[Token(Token = "0x6001612")]
			get;
		}
	}
	[Token(Token = "0x20002BA")]
	public interface IIncrementalAchievement : IAchievement
	{
		[Token(Token = "0x170002AC")]
		int Count
		{
			[Token(Token = "0x6001613")]
			get;
		}

		[Token(Token = "0x170002AD")]
		int TargetCount
		{
			[Token(Token = "0x6001614")]
			get;
		}
	}
	[Token(Token = "0x20002BB")]
	public class IncrementalAchievement : Achievement, IIncrementalAchievement, IAchievement
	{
		[Serializable]
		[Token(Token = "0x2000574")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927B10", Offset = "0x927B10")]
		private sealed class <>c
		{
			[Token(Token = "0x4002029")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400202A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<Exception> <>9__9_1;

			[Token(Token = "0x6002644")]
			[Address(RVA = "0xAF2CE0", Offset = "0xAF2CE0", VA = "0xAF2CE0")]
			public <>c()
			{
			}

			[Token(Token = "0x6002645")]
			[Address(RVA = "0xAF2CE8", Offset = "0xAF2CE8", VA = "0xAF2CE8")]
			internal void <Increment>b__9_1(Exception e)
			{
			}
		}

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x930150", Offset = "0x930150")]
		[SerializeField]
		[AttributeAttribute(Name = "MinAttribute", RVA = "0x930150", Offset = "0x930150")]
		private int m_targetCount;

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private int m_currentCount;

		[Token(Token = "0x170002AE")]
		public int Count
		{
			[Token(Token = "0x6001615")]
			[Address(RVA = "0xAF2820", Offset = "0xAF2820", VA = "0xAF2820", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002AF")]
		public int TargetCount
		{
			[Token(Token = "0x6001616")]
			[Address(RVA = "0xAF2828", Offset = "0xAF2828", VA = "0xAF2828", Slot = "12")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0xAF2830", Offset = "0xAF2830", VA = "0xAF2830", Slot = "8")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0xAF29D8", Offset = "0xAF29D8", VA = "0xAF29D8", Slot = "9")]
		public override void Unlock()
		{
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0xAEE480", Offset = "0xAEE480", VA = "0xAEE480")]
		public void TryIncrement(int totalCount)
		{
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0xAF29DC", Offset = "0xAF29DC", VA = "0xAF29DC")]
		private void Increment()
		{
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0xAF2C20", Offset = "0xAF2C20", VA = "0xAF2C20")]
		private void SetStatus(int count)
		{
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0xAF2C58", Offset = "0xAF2C58", VA = "0xAF2C58")]
		public IncrementalAchievement()
		{
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0xAF2C5C", Offset = "0xAF2C5C", VA = "0xAF2C5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B89C", Offset = "0x93B89C")]
		private void <Increment>b__9_0()
		{
		}
	}
	[Token(Token = "0x20002BC")]
	public interface IPlatformAchievements : IPlatformService
	{
		[Token(Token = "0x600161E")]
		IPromise UnlockAchievement(IAchievement achievement);

		[Token(Token = "0x600161F")]
		IPromise LockAchievement(IAchievement achievement);

		[Token(Token = "0x6001620")]
		IPromise<AchievementStatus> GetAchievementStatus(IAchievement achievement);

		[Token(Token = "0x6001621")]
		IPromise IncrementAchievement(IIncrementalAchievement achievement);

		[Token(Token = "0x6001622")]
		IPromise<int> GetAchievementProgress(IIncrementalAchievement achievement);
	}
	[Token(Token = "0x20002BD")]
	public abstract class ManualCountAchievementsBase : IPlatformAchievements, IPlatformService
	{
		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected IPlatformUser m_user;

		[Token(Token = "0x6001623")]
		[Address(RVA = "0xAF2CEC", Offset = "0xAF2CEC", VA = "0xAF2CEC", Slot = "11")]
		public virtual IPromise Initialize()
		{
			return null;
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0xAF2D84", Offset = "0xAF2D84", VA = "0xAF2D84", Slot = "12")]
		public virtual void Shutdown()
		{
		}

		[Token(Token = "0x6001625")]
		public abstract IPromise<AchievementStatus> GetAchievementStatus(IAchievement achievement);

		[Token(Token = "0x6001626")]
		public abstract IPromise LockAchievement(IAchievement achievement);

		[Token(Token = "0x6001627")]
		public abstract IPromise UnlockAchievement(IAchievement achievement);

		[Token(Token = "0x6001628")]
		[Address(RVA = "0xAF2D88", Offset = "0xAF2D88", VA = "0xAF2D88", Slot = "8")]
		public IPromise<int> GetAchievementProgress(IIncrementalAchievement achievement)
		{
			return null;
		}

		[Token(Token = "0x6001629")]
		[Address(RVA = "0xAF2FCC", Offset = "0xAF2FCC", VA = "0xAF2FCC", Slot = "7")]
		public IPromise IncrementAchievement(IIncrementalAchievement achievement)
		{
			return null;
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0xAF2DF8", Offset = "0xAF2DF8", VA = "0xAF2DF8")]
		private string GetKey(IAchievement achievement)
		{
			return null;
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0xAF2818", Offset = "0xAF2818", VA = "0xAF2818")]
		protected ManualCountAchievementsBase()
		{
		}
	}
	[Token(Token = "0x20002BE")]
	public class OculusAchievements : IPlatformAchievements, IPlatformService
	{
		[Token(Token = "0x2000575")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927B20", Offset = "0x927B20")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x400202B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Promise promise;

			[Token(Token = "0x6002646")]
			[Address(RVA = "0xAF3348", Offset = "0xAF3348", VA = "0xAF3348")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6002647")]
			[Address(RVA = "0xAF39A4", Offset = "0xAF39A4", VA = "0xAF39A4")]
			internal void <IncrementAchievement>b__0(Message<AchievementUpdate> msg)
			{
			}
		}

		[Token(Token = "0x2000576")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927B30", Offset = "0x927B30")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x400202C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Promise promise;

			[Token(Token = "0x6002648")]
			[Address(RVA = "0xAF3544", Offset = "0xAF3544", VA = "0xAF3544")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6002649")]
			[Address(RVA = "0xAF39D4", Offset = "0xAF39D4", VA = "0xAF39D4")]
			internal void <UnlockAchievement>b__0(Message<AchievementUpdate> msg)
			{
			}
		}

		[Token(Token = "0x2000577")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927B40", Offset = "0x927B40")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x400202D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IAchievement achievement;

			[Token(Token = "0x400202E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Promise<AchievementStatus> promise;

			[Token(Token = "0x600264A")]
			[Address(RVA = "0xAF376C", Offset = "0xAF376C", VA = "0xAF376C")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x600264B")]
			[Address(RVA = "0xAF3A04", Offset = "0xAF3A04", VA = "0xAF3A04")]
			internal void <GetAchievementStatus>b__0(Message<AchievementProgressList> progressList)
			{
			}
		}

		[Token(Token = "0x2000578")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927B50", Offset = "0x927B50")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x400202F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public IIncrementalAchievement achievement;

			[Token(Token = "0x4002030")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Promise<int> promise;

			[Token(Token = "0x600264C")]
			[Address(RVA = "0xAF3994", Offset = "0xAF3994", VA = "0xAF3994")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x600264D")]
			[Address(RVA = "0xAF3D5C", Offset = "0xAF3D5C", VA = "0xAF3D5C")]
			internal void <GetAchievementProgress>b__0(Message<AchievementProgressList> progressList)
			{
			}
		}

		[Token(Token = "0x600162C")]
		[Address(RVA = "0xAF3160", Offset = "0xAF3160", VA = "0xAF3160", Slot = "9")]
		public IPromise Initialize()
		{
			return null;
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0xAF31C0", Offset = "0xAF31C0", VA = "0xAF31C0", Slot = "10")]
		public void Shutdown()
		{
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0xAF31C4", Offset = "0xAF31C4", VA = "0xAF31C4", Slot = "7")]
		public IPromise IncrementAchievement(IIncrementalAchievement achievement)
		{
			return null;
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0xAF3350", Offset = "0xAF3350", VA = "0xAF3350", Slot = "5")]
		public IPromise LockAchievement(IAchievement achievement)
		{
			return null;
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0xAF33C4", Offset = "0xAF33C4", VA = "0xAF33C4", Slot = "4")]
		public IPromise UnlockAchievement(IAchievement achievement)
		{
			return null;
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0xAF354C", Offset = "0xAF354C", VA = "0xAF354C", Slot = "6")]
		public IPromise<AchievementStatus> GetAchievementStatus(IAchievement achievement)
		{
			return null;
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0xAF3774", Offset = "0xAF3774", VA = "0xAF3774", Slot = "8")]
		public IPromise<int> GetAchievementProgress(IIncrementalAchievement achievement)
		{
			return null;
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0xAF399C", Offset = "0xAF399C", VA = "0xAF399C")]
		public OculusAchievements()
		{
		}
	}
}
namespace Cortopia.Scripts.Localization
{
	[Token(Token = "0x20002BF")]
	public static class Localizations
	{
		[Token(Token = "0x40010F2")]
		public const string Default = "00_loc_int_default";

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string sm_interactionCategory;

		[Token(Token = "0x6001634")]
		[Address(RVA = "0xADF198", Offset = "0xADF198", VA = "0xADF198")]
		public static string GetInteractable(string term)
		{
			return null;
		}
	}
	[Token(Token = "0x20002C0")]
	public class LocalizationTerm : ScriptableObject
	{
		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string m_localizationTerm;

		[Token(Token = "0x170002B0")]
		public string Term
		{
			[Token(Token = "0x6001636")]
			[Address(RVA = "0xADD4E4", Offset = "0xADD4E4", VA = "0xADD4E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0xAF1064", Offset = "0xAF1064", VA = "0xAF1064")]
		public LocalizationTerm()
		{
		}
	}
}
namespace Cortopia.Scripts.UI
{
	[Token(Token = "0x20002C1")]
	public class CustomParamsManager : MonoBehaviour, ILocalizationParamsManager
	{
		[Token(Token = "0x6001638")]
		[Address(RVA = "0xB098A0", Offset = "0xB098A0", VA = "0xB098A0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0xB09990", Offset = "0xB09990", VA = "0xB09990")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0xB09A80", Offset = "0xB09A80", VA = "0xB09A80", Slot = "4")]
		public string GetParameterValue(string paramName)
		{
			return null;
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0xB09AA8", Offset = "0xB09AA8", VA = "0xB09AA8")]
		private bool TryReplaceInputIconParam(ref string paramName)
		{
			return default(bool);
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0xB09B50", Offset = "0xB09B50", VA = "0xB09B50")]
		public CustomParamsManager()
		{
		}
	}
	[Token(Token = "0x20002C2")]
	public class CustomButton : Selectable, IPointerClickHandler, IEventSystemHandler
	{
		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9301D0", Offset = "0x9301D0")]
		[SerializeField]
		private CustomButtonHandler m_customButtonHandler;

		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private BoxCollider m_collider;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private Image m_pointerPresentBackground;

		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		private SoundEffectPlayer m_pointerPresentSoundEffectPlayer;

		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x93024C", Offset = "0x93024C")]
		[SerializeField]
		private ButtonEvent m_onClick;

		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private float m_timer;

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private ISet<PlayerPointer> m_presentPointers;

		[Token(Token = "0x40010FC")]
		private const float PointTime = 1.5f;

		[Token(Token = "0x600163D")]
		[Address(RVA = "0xB085B8", Offset = "0xB085B8", VA = "0xB085B8")]
		private void Update()
		{
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0xB087CC", Offset = "0xB087CC", VA = "0xB087CC", Slot = "39")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0xB087D0", Offset = "0xB087D0", VA = "0xB087D0")]
		public void SetInteractable(bool isInteractable)
		{
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0xB08928", Offset = "0xB08928", VA = "0xB08928")]
		public void EnableButton()
		{
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0xB08994", Offset = "0xB08994", VA = "0xB08994")]
		public void DisableButton()
		{
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0xB088D4", Offset = "0xB088D4", VA = "0xB088D4")]
		private void DisableTouchEffect()
		{
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0xB089CC", Offset = "0xB089CC", VA = "0xB089CC")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0xB08D14", Offset = "0xB08D14", VA = "0xB08D14")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0xB08768", Offset = "0xB08768", VA = "0xB08768")]
		private void ButtonClick()
		{
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0xB08F50", Offset = "0xB08F50", VA = "0xB08F50")]
		public CustomButton()
		{
		}
	}
	[Token(Token = "0x20002C3")]
	public class CustomButtonHandler : MonoBehaviour
	{
		[Token(Token = "0x2000579")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927B60", Offset = "0x927B60")]
		private sealed class <DoFadeIn>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002031")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002032")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002033")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CustomButtonHandler <>4__this;

			[Token(Token = "0x4002034")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x4002035")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <startAlpha>5__3;

			[Token(Token = "0x170004A0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002651")]
				[Address(RVA = "0xB09630", Offset = "0xB09630", VA = "0xB09630", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002653")]
				[Address(RVA = "0xB096A0", Offset = "0xB096A0", VA = "0xB096A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600264E")]
			[Address(RVA = "0xB093A8", Offset = "0xB093A8", VA = "0xB093A8")]
			[DebuggerHidden]
			public <DoFadeIn>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x600264F")]
			[Address(RVA = "0xB09460", Offset = "0xB09460", VA = "0xB09460", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002650")]
			[Address(RVA = "0xB09464", Offset = "0xB09464", VA = "0xB09464", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002652")]
			[Address(RVA = "0xB09638", Offset = "0xB09638", VA = "0xB09638", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200057A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927B70", Offset = "0x927B70")]
		private sealed class <DoFadeOut>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002036")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002037")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002038")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CustomButtonHandler <>4__this;

			[Token(Token = "0x4002039")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x400203A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <startAlpha>5__3;

			[Token(Token = "0x170004A2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002657")]
				[Address(RVA = "0xB09828", Offset = "0xB09828", VA = "0xB09828", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002659")]
				[Address(RVA = "0xB09898", Offset = "0xB09898", VA = "0xB09898", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002654")]
			[Address(RVA = "0xB093D4", Offset = "0xB093D4", VA = "0xB093D4")]
			[DebuggerHidden]
			public <DoFadeOut>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6002655")]
			[Address(RVA = "0xB096A8", Offset = "0xB096A8", VA = "0xB096A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002656")]
			[Address(RVA = "0xB096AC", Offset = "0xB096AC", VA = "0xB096AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002658")]
			[Address(RVA = "0xB09830", Offset = "0xB09830", VA = "0xB09830", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CanvasGroup m_canvasGroup;

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PointerHoldButton[] m_buttons;

		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine m_fadeRoutine;

		[Token(Token = "0x6001647")]
		[Address(RVA = "0xB09000", Offset = "0xB09000", VA = "0xB09000")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001648")]
		[Address(RVA = "0xB09004", Offset = "0xB09004", VA = "0xB09004")]
		public void Disable()
		{
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0xB090AC", Offset = "0xB090AC", VA = "0xB090AC")]
		public void SetButtonsActive(bool active)
		{
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0xB0922C", Offset = "0xB0922C", VA = "0xB0922C")]
		public void Despawn()
		{
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0xB08C1C", Offset = "0xB08C1C", VA = "0xB08C1C")]
		public void SetButtonsInteractable(bool isInteractable, CustomButton skipButton)
		{
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0xB09158", Offset = "0xB09158", VA = "0xB09158")]
		private void SetCanvasGroupActive(bool active)
		{
		}

		[Token(Token = "0x600164D")]
		[Address(RVA = "0xB092C0", Offset = "0xB092C0", VA = "0xB092C0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93B8AC", Offset = "0x93B8AC")]
		private IEnumerator DoFadeIn()
		{
			return null;
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0xB09334", Offset = "0xB09334", VA = "0xB09334")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93B910", Offset = "0x93B910")]
		private IEnumerator DoFadeOut()
		{
			return null;
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0xB09400", Offset = "0xB09400", VA = "0xB09400")]
		public CustomButtonHandler()
		{
		}
	}
	[Token(Token = "0x20002C4")]
	public class FloatingUIElement : MonoBehaviour
	{
		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_moveTime;

		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int m_pointCount;

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MathUtils.MinMax m_offsetMinMax;

		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Path m_path;

		[Token(Token = "0x6001650")]
		[Address(RVA = "0xB0CCFC", Offset = "0xB0CCFC", VA = "0xB0CCFC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0xB0CDB0", Offset = "0xB0CDB0", VA = "0xB0CDB0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0xB0CD00", Offset = "0xB0CD00", VA = "0xB0CD00")]
		private void StartMoving()
		{
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0xB0CDD0", Offset = "0xB0CDD0", VA = "0xB0CDD0")]
		private void GeneratePath(Vector3 startPoint)
		{
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0xB0CF64", Offset = "0xB0CF64", VA = "0xB0CF64")]
		private Vector3 GetRandomPoint(int index, Vector3 startPoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0xB0D044", Offset = "0xB0D044", VA = "0xB0D044")]
		public FloatingUIElement()
		{
		}
	}
	[Token(Token = "0x20002C5")]
	public class InvitationUI : MonoBehaviour, IMenuItem
	{
		[Serializable]
		[Token(Token = "0x200057B")]
		private class BiomeInvitations
		{
			[Token(Token = "0x400203B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Image[] Invitations;

			[Token(Token = "0x600265A")]
			[Address(RVA = "0xB0E9C4", Offset = "0xB0E9C4", VA = "0xB0E9C4")]
			public BiomeInvitations()
			{
			}
		}

		[Token(Token = "0x4001104")]
		private const int NumberOfTrackedBiomes = 6;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private InvitationsHandler m_invitationsHandler;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private BiomeInvitations[] m_invitations;

		[Token(Token = "0x6001656")]
		[Address(RVA = "0xB0E330", Offset = "0xB0E330", VA = "0xB0E330")]
		private void Start()
		{
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0xB0E480", Offset = "0xB0E480", VA = "0xB0E480", Slot = "4")]
		public void Enable()
		{
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0xB0E880", Offset = "0xB0E880", VA = "0xB0E880", Slot = "5")]
		public void Disable()
		{
		}

		[Token(Token = "0x6001659")]
		[Address(RVA = "0xB0E910", Offset = "0xB0E910", VA = "0xB0E910")]
		private void OnInvitationFound()
		{
		}

		[Token(Token = "0x600165A")]
		[Address(RVA = "0xB0E628", Offset = "0xB0E628", VA = "0xB0E628")]
		private void UpdateInvitesInRooms(int biomeIndex, Cortopia.Scripts.Rooms.RoomType[] rooms)
		{
		}

		[Token(Token = "0x600165B")]
		[Address(RVA = "0xB0E9BC", Offset = "0xB0E9BC", VA = "0xB0E9BC")]
		public InvitationUI()
		{
		}
	}
	[Token(Token = "0x20002C6")]
	public static class LanguageHandler
	{
		[Token(Token = "0x600165C")]
		[Address(RVA = "0xB0EA24", Offset = "0xB0EA24", VA = "0xB0EA24")]
		public static string GetDeviceLanguage()
		{
			return null;
		}
	}
	[Token(Token = "0x20002C7")]
	public class DebugButton : MenuButton
	{
		[Token(Token = "0x600165D")]
		[Address(RVA = "0xB09B58", Offset = "0xB09B58", VA = "0xB09B58", Slot = "8")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0xB09BD4", Offset = "0xB09BD4", VA = "0xB09BD4")]
		public DebugButton()
		{
		}
	}
	[Token(Token = "0x20002C8")]
	public class LoadButton : MenuButton
	{
		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[SerializeField]
		private CharacterToggle m_fourHalfToggle;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		private BiomeSelector m_biomeSelector;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[SerializeField]
		private RoomSelector m_roomSelector;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[SerializeField]
		private BiomeLoader m_loader;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private EventToken m_biomeLoadedEvent;

		[Token(Token = "0x600165F")]
		[Address(RVA = "0xB0EF1C", Offset = "0xB0EF1C", VA = "0xB0EF1C")]
		public void Load()
		{
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0xB0F0AC", Offset = "0xB0F0AC", VA = "0xB0F0AC")]
		private void LoadRoom(Cortopia.Scripts.Rooms.RoomType roomType)
		{
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0xB0F33C", Offset = "0xB0F33C", VA = "0xB0F33C")]
		private void SpawnFourHalf(Vector3 position)
		{
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0xB0F4F0", Offset = "0xB0F4F0", VA = "0xB0F4F0")]
		public LoadButton()
		{
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0xB0F4F4", Offset = "0xB0F4F4", VA = "0xB0F4F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B974", Offset = "0x93B974")]
		private void <Load>b__5_0(RoomEvents.BiomeActivatedEvent biomeEvent)
		{
		}
	}
	[Token(Token = "0x20002C9")]
	public class MenuButton : InteractableMenuItem
	{
		[Token(Token = "0x400110C")]
		private const float AcceptablePressRadians = 0.4f;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x930348", Offset = "0x930348")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x930348", Offset = "0x930348")]
		[SerializeField]
		private float m_maxPressedDistance;

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9303B8", Offset = "0x9303B8")]
		[SerializeField]
		private float m_activationDistance;

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private float m_buttonReturnTime;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private Ease m_buttonReturnEasing;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x930424", Offset = "0x930424")]
		[SerializeField]
		private bool m_useHighlightHover;

		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private Image m_highlightImage;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private float m_highlightAlpha;

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[SerializeField]
		private bool m_useScaleHover;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private Transform m_hoverTransform;

		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[SerializeField]
		private Vector3 m_hoverScale;

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[SerializeField]
		private bool m_useDirectionalHover;

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[SerializeField]
		private Transform m_moveTransform;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private Vector2 m_directionalHoverOffset;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private float m_moveTime;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x930500", Offset = "0x930500")]
		[SerializeField]
		private HapticClip m_hapticClip;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x93054C", Offset = "0x93054C")]
		[SerializeField]
		private SoundEffect m_clickInSfx;

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private SoundEffect m_clickOutSfx;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[SerializeField]
		private SoundEffect m_hoverSfx;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9305B8", Offset = "0x9305B8")]
		[SerializeField]
		private UnityEvent m_onClick;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Tween m_returnTween;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private Tween m_scaleTween;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private Tween m_moveTweenX;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private Tween m_moveTweenY;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Vector3 m_pointerPreviousPosition;

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private Vector3 m_hoverDefaultScale;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private Vector2 m_defaultPosition;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private float m_distanceMoved;

		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		private bool m_isPressed;

		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930604", Offset = "0x930604")]
		private Vector3 <EndPosition>k__BackingField;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930614", Offset = "0x930614")]
		private Vector3 <StartPosition>k__BackingField;

		[Token(Token = "0x170002B1")]
		private float ActivationDistance
		{
			[Token(Token = "0x6001664")]
			[Address(RVA = "0xB10CB4", Offset = "0xB10CB4", VA = "0xB10CB4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002B2")]
		private float MaxPressedDistance
		{
			[Token(Token = "0x6001665")]
			[Address(RVA = "0xB10CFC", Offset = "0xB10CFC", VA = "0xB10CFC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002B3")]
		public Vector3 EndPosition
		{
			[Token(Token = "0x6001666")]
			[Address(RVA = "0xB10D44", Offset = "0xB10D44", VA = "0xB10D44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B984", Offset = "0x93B984")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001667")]
			[Address(RVA = "0xB10D54", Offset = "0xB10D54", VA = "0xB10D54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B994", Offset = "0x93B994")]
			private set
			{
			}
		}

		[Token(Token = "0x170002B4")]
		public Vector3 StartPosition
		{
			[Token(Token = "0x6001668")]
			[Address(RVA = "0xB10D64", Offset = "0xB10D64", VA = "0xB10D64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B9A4", Offset = "0x93B9A4")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001669")]
			[Address(RVA = "0xB10D74", Offset = "0xB10D74", VA = "0xB10D74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B9B4", Offset = "0x93B9B4")]
			private set
			{
			}
		}

		[Token(Token = "0x170002B5")]
		public bool UseScaleHover
		{
			[Token(Token = "0x600166A")]
			[Address(RVA = "0xB10D84", Offset = "0xB10D84", VA = "0xB10D84")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600166B")]
			[Address(RVA = "0xB10D8C", Offset = "0xB10D8C", VA = "0xB10D8C")]
			set
			{
			}
		}

		[Token(Token = "0x170002B6")]
		public bool UseDirectionalHover
		{
			[Token(Token = "0x600166C")]
			[Address(RVA = "0xB10D98", Offset = "0xB10D98", VA = "0xB10D98")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600166D")]
			[Address(RVA = "0xB10DA0", Offset = "0xB10DA0", VA = "0xB10DA0")]
			set
			{
			}
		}

		[Token(Token = "0x14000048")]
		public event Action<IPlayerPointer> OnClick
		{
			[Token(Token = "0x600166E")]
			[Address(RVA = "0xB10DAC", Offset = "0xB10DAC", VA = "0xB10DAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B9C4", Offset = "0x93B9C4")]
			add
			{
			}
			[Token(Token = "0x600166F")]
			[Address(RVA = "0xB10E9C", Offset = "0xB10E9C", VA = "0xB10E9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B9D4", Offset = "0x93B9D4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000049")]
		public event Action<IPlayerPointer> OnRelease
		{
			[Token(Token = "0x6001670")]
			[Address(RVA = "0xB10F8C", Offset = "0xB10F8C", VA = "0xB10F8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B9E4", Offset = "0x93B9E4")]
			add
			{
			}
			[Token(Token = "0x6001671")]
			[Address(RVA = "0xB1107C", Offset = "0xB1107C", VA = "0xB1107C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93B9F4", Offset = "0x93B9F4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400004A")]
		public event Action<IPlayerPointer> OnHold
		{
			[Token(Token = "0x6001672")]
			[Address(RVA = "0xB1116C", Offset = "0xB1116C", VA = "0xB1116C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BA04", Offset = "0x93BA04")]
			add
			{
			}
			[Token(Token = "0x6001673")]
			[Address(RVA = "0xB1125C", Offset = "0xB1125C", VA = "0xB1125C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BA14", Offset = "0x93BA14")]
			remove
			{
			}
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0xB1134C", Offset = "0xB1134C", VA = "0xB1134C", Slot = "8")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0xB11674", Offset = "0xB11674", VA = "0xB11674", Slot = "16")]
		protected override void OnHoverExit(IPlayerPointer pointer)
		{
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0xB11898", Offset = "0xB11898", VA = "0xB11898", Slot = "17")]
		protected override void OnHoverEnter(IPlayerPointer pointer)
		{
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0xB11B68", Offset = "0xB11B68", VA = "0xB11B68", Slot = "11")]
		public override void OnPointerClick(IPlayerPointer pointer)
		{
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0xB11D74", Offset = "0xB11D74", VA = "0xB11D74", Slot = "9")]
		public override void Disable()
		{
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0xB11D9C", Offset = "0xB11D9C", VA = "0xB11D9C", Slot = "10")]
		public override void Enable()
		{
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0xB11F68", Offset = "0xB11F68", VA = "0xB11F68", Slot = "12")]
		protected override void GetTriggerPositionAndRotation(out Vector3 position, out Quaternion rotation)
		{
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0xB12098", Offset = "0xB12098", VA = "0xB12098", Slot = "13")]
		protected override void OnPressRelease(IPlayerPointer pointer)
		{
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0xB12254", Offset = "0xB12254", VA = "0xB12254", Slot = "14")]
		protected override void OnPressBegin(IPlayerPointer pointer)
		{
		}

		[Token(Token = "0x600167D")]
		[Address(RVA = "0xB1232C", Offset = "0xB1232C", VA = "0xB1232C", Slot = "15")]
		public override void OnPressHold(IPlayerPointer pointer)
		{
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0xB09BD8", Offset = "0xB09BD8", VA = "0xB09BD8")]
		public MenuButton()
		{
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0xB12774", Offset = "0xB12774", VA = "0xB12774")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BA24", Offset = "0x93BA24")]
		private void <OnPressRelease>b__63_0()
		{
		}
	}
	[Token(Token = "0x20002CA")]
	public class QuitButton : MenuButton
	{
		[Serializable]
		[Token(Token = "0x200057C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927B80", Offset = "0x927B80")]
		private sealed class <>c
		{
			[Token(Token = "0x400203C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400203D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__0_1;

			[Token(Token = "0x400203E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static TweenCallback <>9__0_0;

			[Token(Token = "0x600265C")]
			[Address(RVA = "0xBB30E4", Offset = "0xBB30E4", VA = "0xBB30E4")]
			public <>c()
			{
			}

			[Token(Token = "0x600265D")]
			[Address(RVA = "0xBB30EC", Offset = "0xBB30EC", VA = "0xBB30EC")]
			internal void <QuitGame>b__0_0()
			{
			}

			[Token(Token = "0x600265E")]
			[Address(RVA = "0xBB3210", Offset = "0xBB3210", VA = "0xBB3210")]
			internal void <QuitGame>b__0_1()
			{
			}
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0xBB2F1C", Offset = "0xBB2F1C", VA = "0xBB2F1C")]
		public void QuitGame()
		{
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0xBB3078", Offset = "0xBB3078", VA = "0xBB3078")]
		public QuitButton()
		{
		}
	}
	[Token(Token = "0x20002CB")]
	public class BiomeSelector : HorizontalSelector
	{
		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<string> m_biomes;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930654", Offset = "0x930654")]
		private BiomeType <Biome>k__BackingField;

		[Token(Token = "0x170002B7")]
		public BiomeType Biome
		{
			[Token(Token = "0x6001682")]
			[Address(RVA = "0xB0822C", Offset = "0xB0822C", VA = "0xB0822C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BA34", Offset = "0x93BA34")]
			get
			{
				return default(BiomeType);
			}
			[Token(Token = "0x6001683")]
			[Address(RVA = "0xB08234", Offset = "0xB08234", VA = "0xB08234")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BA44", Offset = "0x93BA44")]
			private set
			{
			}
		}

		[Token(Token = "0x170002B8")]
		protected override List<string> Options
		{
			[Token(Token = "0x6001684")]
			[Address(RVA = "0xB0823C", Offset = "0xB0823C", VA = "0xB0823C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0xB08244", Offset = "0xB08244", VA = "0xB08244")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0xB08314", Offset = "0xB08314", VA = "0xB08314", Slot = "5")]
		protected override void OnSelect(string selection)
		{
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0xB08450", Offset = "0xB08450", VA = "0xB08450")]
		public BiomeSelector()
		{
		}
	}
	[Token(Token = "0x20002CC")]
	public abstract class HorizontalSelector : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200057D")]
		private class SelectionEvent : UnityEvent<string>
		{
			[Token(Token = "0x600265F")]
			[Address(RVA = "0xB0D2DC", Offset = "0xB0D2DC", VA = "0xB0D2DC")]
			public SelectionEvent()
			{
			}
		}

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_setText;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private TextMeshProUGUI m_text;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionEvent m_onSelection;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_index;

		[Token(Token = "0x170002B9")]
		protected abstract List<string> Options
		{
			[Token(Token = "0x6001688")]
			get;
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0xB0D0A0", Offset = "0xB0D0A0", VA = "0xB0D0A0")]
		public void Next()
		{
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0xB0D238", Offset = "0xB0D238", VA = "0xB0D238")]
		public void Previous()
		{
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0xB0830C", Offset = "0xB0830C", VA = "0xB0830C")]
		public void Select(int index)
		{
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0xB0D2D4", Offset = "0xB0D2D4", VA = "0xB0D2D4")]
		protected void SetIndex(int index)
		{
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0xB0D150", Offset = "0xB0D150", VA = "0xB0D150")]
		private void OnSelect()
		{
		}

		[Token(Token = "0x600168E")]
		protected abstract void OnSelect(string selection);

		[Token(Token = "0x600168F")]
		[Address(RVA = "0xB0D13C", Offset = "0xB0D13C", VA = "0xB0D13C")]
		private int Wrap(int x, int count)
		{
			return default(int);
		}

		[Token(Token = "0x6001690")]
		[Address(RVA = "0xB08454", Offset = "0xB08454", VA = "0xB08454")]
		protected HorizontalSelector()
		{
		}
	}
	[Token(Token = "0x20002CD")]
	public class LanguageSelection : HorizontalSelector
	{
		[Serializable]
		[Token(Token = "0x200057E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927B90", Offset = "0x927B90")]
		private sealed class <>c
		{
			[Token(Token = "0x400203F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002040")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<string> <>9__3_0;

			[Token(Token = "0x6002661")]
			[Address(RVA = "0xB0EE78", Offset = "0xB0EE78", VA = "0xB0EE78")]
			public <>c()
			{
			}

			[Token(Token = "0x6002662")]
			[Address(RVA = "0xB0EE80", Offset = "0xB0EE80", VA = "0xB0EE80")]
			internal bool <Awake>b__3_0(string supportedLanguage)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<string> m_supportedLanguages;

		[Token(Token = "0x170002BA")]
		protected override List<string> Options
		{
			[Token(Token = "0x6001691")]
			[Address(RVA = "0xB0EBC4", Offset = "0xB0EBC4", VA = "0xB0EBC4", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0xB0EBCC", Offset = "0xB0EBCC", VA = "0xB0EBCC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001693")]
		[Address(RVA = "0xB0ED90", Offset = "0xB0ED90", VA = "0xB0ED90", Slot = "5")]
		protected override void OnSelect(string selection)
		{
		}

		[Token(Token = "0x6001694")]
		[Address(RVA = "0xB0ECE8", Offset = "0xB0ECE8", VA = "0xB0ECE8")]
		private void SetSupportedLanguages()
		{
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0xB0EE10", Offset = "0xB0EE10", VA = "0xB0EE10")]
		public LanguageSelection()
		{
		}
	}
	[Token(Token = "0x20002CE")]
	public class RoomSelector : HorizontalSelector
	{
		[Serializable]
		[Token(Token = "0x200057F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927BA0", Offset = "0x927BA0")]
		private sealed class <>c
		{
			[Token(Token = "0x4002041")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002042")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Cortopia.Scripts.Rooms.RoomType, string> <>9__6_0;

			[Token(Token = "0x6002664")]
			[Address(RVA = "0xBB34CC", Offset = "0xBB34CC", VA = "0xBB34CC")]
			public <>c()
			{
			}

			[Token(Token = "0x6002665")]
			[Address(RVA = "0xBB34D4", Offset = "0xBB34D4", VA = "0xBB34D4")]
			internal string <get_Options>b__6_0(Cortopia.Scripts.Rooms.RoomType room)
			{
				return null;
			}
		}

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private BiomeSelector m_biomeSelector;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9306A4", Offset = "0x9306A4")]
		private Cortopia.Scripts.Rooms.RoomType <Room>k__BackingField;

		[Token(Token = "0x170002BB")]
		public Cortopia.Scripts.Rooms.RoomType Room
		{
			[Token(Token = "0x6001696")]
			[Address(RVA = "0xBB3218", Offset = "0xBB3218", VA = "0xBB3218")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BA54", Offset = "0x93BA54")]
			get
			{
				return default(Cortopia.Scripts.Rooms.RoomType);
			}
			[Token(Token = "0x6001697")]
			[Address(RVA = "0xBB3220", Offset = "0xBB3220", VA = "0xBB3220")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BA64", Offset = "0x93BA64")]
			private set
			{
			}
		}

		[Token(Token = "0x170002BC")]
		protected override List<string> Options
		{
			[Token(Token = "0x6001698")]
			[Address(RVA = "0xBB3228", Offset = "0xBB3228", VA = "0xBB3228", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0xBB3380", Offset = "0xBB3380", VA = "0xBB3380")]
		private void Awake()
		{
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0xBB338C", Offset = "0xBB338C", VA = "0xBB338C", Slot = "5")]
		protected override void OnSelect(string selection)
		{
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0xBB3460", Offset = "0xBB3460", VA = "0xBB3460")]
		public RoomSelector()
		{
		}
	}
	[Token(Token = "0x20002CF")]
	public interface IMenu
	{
		[Token(Token = "0x170002BD")]
		bool IsOpen
		{
			[Token(Token = "0x600169C")]
			get;
		}

		[Token(Token = "0x1400004B")]
		event Action OnMenuOpen;

		[Token(Token = "0x1400004C")]
		event Action OnMenuClose;

		[Token(Token = "0x60016A1")]
		void Open();

		[Token(Token = "0x60016A2")]
		void Close();
	}
	[Token(Token = "0x20002D0")]
	public interface IMenuItem
	{
		[Token(Token = "0x60016A3")]
		void Enable();

		[Token(Token = "0x60016A4")]
		void Disable();
	}
	[Token(Token = "0x20002D1")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x926A14", Offset = "0x926A14")]
	public abstract class InteractableMenuItem : MonoBehaviour, IRemovableMenuItem, IMenuItem
	{
		[Serializable]
		[Token(Token = "0x2000580")]
		private struct TriggerBoxSettings
		{
			[Token(Token = "0x4002043")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 Center;

			[Token(Token = "0x4002044")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float Depth;

			[Token(Token = "0x4002045")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector2 Scale;

			[Token(Token = "0x4002046")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public LayerMask LayerMask;

			[Token(Token = "0x6002666")]
			[Address(RVA = "0x9CCBDC", Offset = "0x9CCBDC", VA = "0x9CCBDC")]
			public TriggerBoxSettings(Vector3 center, Vector2 scale, float depth = 10f, int mask = 1024)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000581")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927BB0", Offset = "0x927BB0")]
		private sealed class <>c
		{
			[Token(Token = "0x4002047")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002048")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<Exception> <>9__28_1;

			[Token(Token = "0x6002668")]
			[Address(RVA = "0xB0E324", Offset = "0xB0E324", VA = "0xB0E324")]
			public <>c()
			{
			}

			[Token(Token = "0x6002669")]
			[Address(RVA = "0xB0E32C", Offset = "0xB0E32C", VA = "0xB0E32C")]
			internal void <EnableCollider>b__28_1(Exception e)
			{
			}
		}

		[Token(Token = "0x4001137")]
		private const float EnableColliderDelay = 0.4f;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9306B4", Offset = "0x9306B4")]
		[SerializeField]
		private TriggerBoxSettings m_hoverBounds;

		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private TriggerBoxSettings m_clickBounds;

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected IPlayerPointer m_currentPointer;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected BoxCollider m_collider;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private TriggerBox m_hoverBoundingBox;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private TriggerBox m_clickBoundingBox;

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Coroutine m_enableRoutine;

		[Token(Token = "0x1400004D")]
		public event Action<IMenuItem> OnMenuItemDestroyed
		{
			[Token(Token = "0x60016A5")]
			[Address(RVA = "0xB0D32C", Offset = "0xB0D32C", VA = "0xB0D32C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BAB4", Offset = "0x93BAB4")]
			add
			{
			}
			[Token(Token = "0x60016A6")]
			[Address(RVA = "0xB0D418", Offset = "0xB0D418", VA = "0xB0D418", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BAC4", Offset = "0x93BAC4")]
			remove
			{
			}
		}

		[Token(Token = "0x60016A7")]
		[Address(RVA = "0xB0D504", Offset = "0xB0D504", VA = "0xB0D504", Slot = "8")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60016A8")]
		[Address(RVA = "0xB0D91C", Offset = "0xB0D91C", VA = "0xB0D91C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0xB0DA20", Offset = "0xB0DA20", VA = "0xB0DA20")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0xB0DBDC", Offset = "0xB0DBDC", VA = "0xB0DBDC")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0xB0DAE0", Offset = "0xB0DAE0", VA = "0xB0DAE0")]
		private void OnPointerExit(PlayerPointer pointer)
		{
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0xB0DDA8", Offset = "0xB0DDA8", VA = "0xB0DDA8")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0xB0DE0C", Offset = "0xB0DE0C", VA = "0xB0DE0C", Slot = "9")]
		public virtual void Disable()
		{
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0xB0DE84", Offset = "0xB0DE84", VA = "0xB0DE84", Slot = "10")]
		public virtual void Enable()
		{
		}

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0xB0E084", Offset = "0xB0E084", VA = "0xB0E084", Slot = "11")]
		public virtual void OnPointerClick(IPlayerPointer pointer)
		{
		}

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0xB0E088", Offset = "0xB0E088", VA = "0xB0E088", Slot = "12")]
		protected virtual void GetTriggerPositionAndRotation(out Vector3 position, out Quaternion rotation)
		{
		}

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0xB0E108", Offset = "0xB0E108", VA = "0xB0E108", Slot = "13")]
		protected virtual void OnPressRelease(IPlayerPointer pointer)
		{
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0xB0E10C", Offset = "0xB0E10C", VA = "0xB0E10C", Slot = "14")]
		protected virtual void OnPressBegin(IPlayerPointer pointer)
		{
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0xB0E110", Offset = "0xB0E110", VA = "0xB0E110", Slot = "15")]
		public virtual void OnPressHold(IPlayerPointer pointer)
		{
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0xB0E114", Offset = "0xB0E114", VA = "0xB0E114", Slot = "16")]
		protected virtual void OnHoverExit(IPlayerPointer pointer)
		{
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0xB0E118", Offset = "0xB0E118", VA = "0xB0E118", Slot = "17")]
		protected virtual void OnHoverEnter(IPlayerPointer pointer)
		{
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0xB0E11C", Offset = "0xB0E11C", VA = "0xB0E11C", Slot = "18")]
		protected virtual void OnHoverStay(IPlayerPointer pointer)
		{
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0xB0DE90", Offset = "0xB0DE90", VA = "0xB0DE90")]
		private void EnableCollider(float delay = 0f)
		{
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0xB0DE34", Offset = "0xB0DE34", VA = "0xB0DE34")]
		private void DisableCollider()
		{
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0xB0E120", Offset = "0xB0E120", VA = "0xB0E120")]
		protected InteractableMenuItem()
		{
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0xB0E28C", Offset = "0xB0E28C", VA = "0xB0E28C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BAD4", Offset = "0x93BAD4")]
		private void <EnableCollider>b__28_0()
		{
		}
	}
	[Token(Token = "0x20002D2")]
	public interface IRemovableMenuItem : IMenuItem
	{
		[Token(Token = "0x1400004E")]
		event Action<IMenuItem> OnMenuItemDestroyed;
	}
	[Token(Token = "0x20002D3")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x926A78", Offset = "0x926A78")]
	public class Menu : MonoBehaviour, IMenu
	{
		[Token(Token = "0x2000582")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927BC0", Offset = "0x927BC0")]
		private sealed class <DoDisableMenuItems>d__41 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002049")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400204A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400204B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Menu <>4__this;

			[Token(Token = "0x400204C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x170004A4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600266D")]
				[Address(RVA = "0xB1098C", Offset = "0xB1098C", VA = "0xB1098C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600266F")]
				[Address(RVA = "0xB109FC", Offset = "0xB109FC", VA = "0xB109FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600266A")]
			[Address(RVA = "0xB104EC", Offset = "0xB104EC", VA = "0xB104EC")]
			[DebuggerHidden]
			public <DoDisableMenuItems>d__41(int <>1__state)
			{
			}

			[Token(Token = "0x600266B")]
			[Address(RVA = "0xB10750", Offset = "0xB10750", VA = "0xB10750", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600266C")]
			[Address(RVA = "0xB10754", Offset = "0xB10754", VA = "0xB10754", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600266E")]
			[Address(RVA = "0xB10994", Offset = "0xB10994", VA = "0xB10994", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000583")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927BD0", Offset = "0x927BD0")]
		private sealed class <DoEnableMenuItems>d__42 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400204D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400204E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400204F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Menu <>4__this;

			[Token(Token = "0x4002050")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x170004A6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002673")]
				[Address(RVA = "0xB10C3C", Offset = "0xB10C3C", VA = "0xB10C3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002675")]
				[Address(RVA = "0xB10CAC", Offset = "0xB10CAC", VA = "0xB10CAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002670")]
			[Address(RVA = "0xB10518", Offset = "0xB10518", VA = "0xB10518")]
			[DebuggerHidden]
			public <DoEnableMenuItems>d__42(int <>1__state)
			{
			}

			[Token(Token = "0x6002671")]
			[Address(RVA = "0xB10A04", Offset = "0xB10A04", VA = "0xB10A04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002672")]
			[Address(RVA = "0xB10A08", Offset = "0xB10A08", VA = "0xB10A08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002674")]
			[Address(RVA = "0xB10C44", Offset = "0xB10C44", VA = "0xB10C44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001140")]
		private const int OperationsPerTimeSlice = 3;

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject m_handle;

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x930730", Offset = "0x930730")]
		[SerializeField]
		private float m_showTweenTime;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Ease m_showEase;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_hideTweenTime;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<IMenuItem> m_menuItems;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Sequence m_tweenSequence;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RectTransform m_rectTransform;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CanvasGroup m_canvasGroup;

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 m_preShowScale;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Coroutine m_enableRoutine;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93079C", Offset = "0x93079C")]
		private bool <IsOpen>k__BackingField;

		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9307AC", Offset = "0x9307AC")]
		private bool <IsVisible>k__BackingField;

		[Token(Token = "0x170002BE")]
		public bool IsOpen
		{
			[Token(Token = "0x60016BD")]
			[Address(RVA = "0xB0F628", Offset = "0xB0F628", VA = "0xB0F628", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BB04", Offset = "0x93BB04")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016BE")]
			[Address(RVA = "0xB0F630", Offset = "0xB0F630", VA = "0xB0F630")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BB14", Offset = "0x93BB14")]
			private set
			{
			}
		}

		[Token(Token = "0x170002BF")]
		public bool IsVisible
		{
			[Token(Token = "0x60016BF")]
			[Address(RVA = "0xB0F63C", Offset = "0xB0F63C", VA = "0xB0F63C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BB24", Offset = "0x93BB24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60016C0")]
			[Address(RVA = "0xB0F644", Offset = "0xB0F644", VA = "0xB0F644")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BB34", Offset = "0x93BB34")]
			private set
			{
			}
		}

		[Token(Token = "0x1400004F")]
		public event Action OnMenuShow
		{
			[Token(Token = "0x60016C1")]
			[Address(RVA = "0xB0F650", Offset = "0xB0F650", VA = "0xB0F650")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BB44", Offset = "0x93BB44")]
			add
			{
			}
			[Token(Token = "0x60016C2")]
			[Address(RVA = "0xB0F73C", Offset = "0xB0F73C", VA = "0xB0F73C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BB54", Offset = "0x93BB54")]
			remove
			{
			}
		}

		[Token(Token = "0x14000050")]
		public event Action OnMenuHide
		{
			[Token(Token = "0x60016C3")]
			[Address(RVA = "0xB0F828", Offset = "0xB0F828", VA = "0xB0F828")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BB64", Offset = "0x93BB64")]
			add
			{
			}
			[Token(Token = "0x60016C4")]
			[Address(RVA = "0xB0F914", Offset = "0xB0F914", VA = "0xB0F914")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BB74", Offset = "0x93BB74")]
			remove
			{
			}
		}

		[Token(Token = "0x14000051")]
		public event Action OnMenuOpen
		{
			[Token(Token = "0x60016C5")]
			[Address(RVA = "0xB0FA00", Offset = "0xB0FA00", VA = "0xB0FA00", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BB84", Offset = "0x93BB84")]
			add
			{
			}
			[Token(Token = "0x60016C6")]
			[Address(RVA = "0xB0FAEC", Offset = "0xB0FAEC", VA = "0xB0FAEC", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BB94", Offset = "0x93BB94")]
			remove
			{
			}
		}

		[Token(Token = "0x14000052")]
		public event Action OnMenuClose
		{
			[Token(Token = "0x60016C7")]
			[Address(RVA = "0xB0FBD8", Offset = "0xB0FBD8", VA = "0xB0FBD8", Slot = "7")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BBA4", Offset = "0x93BBA4")]
			add
			{
			}
			[Token(Token = "0x60016C8")]
			[Address(RVA = "0xB0FCC4", Offset = "0xB0FCC4", VA = "0xB0FCC4", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BBB4", Offset = "0x93BBB4")]
			remove
			{
			}
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0xB0FDB0", Offset = "0xB0FDB0", VA = "0xB0FDB0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0xB0FF20", Offset = "0xB0FF20", VA = "0xB0FF20")]
		private void OnMenuItemDestroyed(IMenuItem menuItem)
		{
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0xB0FF90", Offset = "0xB0FF90", VA = "0xB0FF90", Slot = "10")]
		public void Close()
		{
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0xB0FFCC", Offset = "0xB0FFCC", VA = "0xB0FFCC", Slot = "11")]
		public virtual void Open()
		{
		}

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0xB10004", Offset = "0xB10004", VA = "0xB10004")]
		public void Show()
		{
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0xB101D8", Offset = "0xB101D8", VA = "0xB101D8", Slot = "12")]
		public virtual void Hide()
		{
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0xB101E0", Offset = "0xB101E0", VA = "0xB101E0")]
		public void Hide(float fadeTime)
		{
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0xB10334", Offset = "0xB10334", VA = "0xB10334")]
		private void DisableMenuItems()
		{
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0xB103F4", Offset = "0xB103F4", VA = "0xB103F4")]
		private void EnableMenuItems()
		{
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0xB104B4", Offset = "0xB104B4", VA = "0xB104B4")]
		private void ShowHandle(bool shouldShow)
		{
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0xB10380", Offset = "0xB10380", VA = "0xB10380")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93BBC4", Offset = "0x93BBC4")]
		private IEnumerator DoDisableMenuItems()
		{
			return null;
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0xB10440", Offset = "0xB10440", VA = "0xB10440")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93BC28", Offset = "0x93BC28")]
		private IEnumerator DoEnableMenuItems()
		{
			return null;
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0xB10544", Offset = "0xB10544", VA = "0xB10544")]
		public Menu()
		{
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0xB1060C", Offset = "0xB1060C", VA = "0xB1060C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BC8C", Offset = "0x93BC8C")]
		private void <Awake>b__31_0(IMenuItem menuItem)
		{
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0xB10718", Offset = "0xB10718", VA = "0xB10718")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BC9C", Offset = "0x93BC9C")]
		private void <Show>b__35_0()
		{
		}

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0xB10728", Offset = "0xB10728", VA = "0xB10728")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BCAC", Offset = "0x93BCAC")]
		private void <Hide>b__37_0()
		{
		}
	}
	[Token(Token = "0x20002D4")]
	public class MenuCard : MonoBehaviour, IMenuItem
	{
		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MenuButton m_button;

		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Card m_card;

		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CardChoiceData m_cardChoiceData;

		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93082C", Offset = "0x93082C")]
		private Vector3 <StartPosition>k__BackingField;

		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93083C", Offset = "0x93083C")]
		private Quaternion <StartRotation>k__BackingField;

		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93084C", Offset = "0x93084C")]
		private Vector3 <StartScale>k__BackingField;

		[Token(Token = "0x170002C0")]
		public Vector3 StartPosition
		{
			[Token(Token = "0x60016D9")]
			[Address(RVA = "0xB12780", Offset = "0xB12780", VA = "0xB12780")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BCBC", Offset = "0x93BCBC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60016DA")]
			[Address(RVA = "0xB1278C", Offset = "0xB1278C", VA = "0xB1278C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BCCC", Offset = "0x93BCCC")]
			private set
			{
			}
		}

		[Token(Token = "0x170002C1")]
		public Quaternion StartRotation
		{
			[Token(Token = "0x60016DB")]
			[Address(RVA = "0xB12798", Offset = "0xB12798", VA = "0xB12798")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BCDC", Offset = "0x93BCDC")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x60016DC")]
			[Address(RVA = "0xB127A4", Offset = "0xB127A4", VA = "0xB127A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BCEC", Offset = "0x93BCEC")]
			private set
			{
			}
		}

		[Token(Token = "0x170002C2")]
		public Vector3 StartScale
		{
			[Token(Token = "0x60016DD")]
			[Address(RVA = "0xB127B0", Offset = "0xB127B0", VA = "0xB127B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BCFC", Offset = "0x93BCFC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60016DE")]
			[Address(RVA = "0xB127BC", Offset = "0xB127BC", VA = "0xB127BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BD0C", Offset = "0x93BD0C")]
			private set
			{
			}
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0xB127C8", Offset = "0xB127C8", VA = "0xB127C8")]
		private void Start()
		{
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0xB128D0", Offset = "0xB128D0", VA = "0xB128D0", Slot = "5")]
		public void Disable()
		{
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0xB128D4", Offset = "0xB128D4", VA = "0xB128D4", Slot = "4")]
		public void Enable()
		{
		}

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0xB12AD0", Offset = "0xB12AD0", VA = "0xB12AD0")]
		public void ToggleHoverType()
		{
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0xB12B5C", Offset = "0xB12B5C", VA = "0xB12B5C")]
		public MenuCard()
		{
		}
	}
	[Token(Token = "0x20002D5")]
	public class MenuCardController : MonoBehaviour, IMenuItem
	{
		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_cardTarget;

		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_moveUpOffset;

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_moveUpTime;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Ease m_moveUpEasing;

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_scaleTime;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_scaleDelay;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_rotationDelay;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_rotationTime;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float m_moveDelay;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_moveTime;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private Ease m_moveEase;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private float m_moveBackDistance;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Dictionary<MenuCard, Sequence> m_sequences;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MenuCard m_currentCard;

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0xB12B64", Offset = "0xB12B64", VA = "0xB12B64", Slot = "4")]
		public void Enable()
		{
		}

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0xB12B68", Offset = "0xB12B68", VA = "0xB12B68", Slot = "5")]
		public void Disable()
		{
		}

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0xB12D84", Offset = "0xB12D84", VA = "0xB12D84")]
		public void Select(MenuCard card)
		{
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0xB12E64", Offset = "0xB12E64", VA = "0xB12E64")]
		private void ReturnSelect(MenuCard card)
		{
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0xB1316C", Offset = "0xB1316C", VA = "0xB1316C")]
		private void MoveSelect(MenuCard card)
		{
		}

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0xB13508", Offset = "0xB13508", VA = "0xB13508")]
		public MenuCardController()
		{
		}
	}
	[Token(Token = "0x20002D6")]
	public class MenuOpener : MonoBehaviour
	{
		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_distance;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_heightDistance;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Menu m_mainMenu;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_grabbableTransform;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x93095C", Offset = "0x93095C")]
		[SerializeField]
		private SoundEffect m_openSfx;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SoundEffect m_closeSfx;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9309B8", Offset = "0x9309B8")]
		[SerializeField]
		private UnityEvent m_onMenuOpen;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UnityEvent m_onMenuClose;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Menu[] m_menus;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 m_defaultScale;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_relativeScale;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int m_openMenuCount;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_canBeOpened;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		private bool m_isInitialized;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 m_defaultPosition;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Quaternion m_defaultRotation;

		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private EventToken m_cameraEventToken;

		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool m_canShowMenu;

		[Token(Token = "0x170002C3")]
		public bool IsOpen
		{
			[Token(Token = "0x60016EA")]
			[Address(RVA = "0xB135A8", Offset = "0xB135A8", VA = "0xB135A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0xB135B8", Offset = "0xB135B8", VA = "0xB135B8")]
		private void Start()
		{
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0xB138B8", Offset = "0xB138B8", VA = "0xB138B8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0xB13A94", Offset = "0xB13A94", VA = "0xB13A94")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0xB13BA8", Offset = "0xB13BA8", VA = "0xB13BA8")]
		private void Update()
		{
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0xB13FF8", Offset = "0xB13FF8", VA = "0xB13FF8")]
		private void OnFirstPersonCameraEvent(CameraEvents.FirstPersonCameraEvent eventData)
		{
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0xB13C60", Offset = "0xB13C60", VA = "0xB13C60")]
		public void Close()
		{
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0xB13E4C", Offset = "0xB13E4C", VA = "0xB13E4C")]
		private void Open()
		{
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0xB1431C", Offset = "0xB1431C", VA = "0xB1431C")]
		private void OnAfterFadeIn()
		{
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0xB14330", Offset = "0xB14330", VA = "0xB14330")]
		private void OnGameStarted()
		{
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0xB1433C", Offset = "0xB1433C", VA = "0xB1433C")]
		private void OnBeforeFadeOut()
		{
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0xB1436C", Offset = "0xB1436C", VA = "0xB1436C")]
		private void OnMenuClose()
		{
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0xB1437C", Offset = "0xB1437C", VA = "0xB1437C")]
		private void OnMenuOpen()
		{
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0xB1438C", Offset = "0xB1438C", VA = "0xB1438C")]
		private void OnScaleChanged(Vector3 scale)
		{
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0xB14050", Offset = "0xB14050", VA = "0xB14050")]
		private void SetPositionAndRotation()
		{
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0xB1446C", Offset = "0xB1446C", VA = "0xB1446C")]
		public MenuOpener()
		{
		}
	}
	[Token(Token = "0x20002D7")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x926ADC", Offset = "0x926ADC")]
	public class MeshMenuItem : MonoBehaviour, IRemovableMenuItem, IMenuItem
	{
		[Token(Token = "0x2000584")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927BE0", Offset = "0x927BE0")]
		private sealed class <DoFadeIn>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002051")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002052")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002053")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MeshMenuItem <>4__this;

			[Token(Token = "0x4002054")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x170004A8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002679")]
				[Address(RVA = "0xB16474", Offset = "0xB16474", VA = "0xB16474", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004A9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600267B")]
				[Address(RVA = "0xB164E4", Offset = "0xB164E4", VA = "0xB164E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002676")]
			[Address(RVA = "0xB16144", Offset = "0xB16144", VA = "0xB16144")]
			[DebuggerHidden]
			public <DoFadeIn>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6002677")]
			[Address(RVA = "0xB162B4", Offset = "0xB162B4", VA = "0xB162B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002678")]
			[Address(RVA = "0xB162B8", Offset = "0xB162B8", VA = "0xB162B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600267A")]
			[Address(RVA = "0xB1647C", Offset = "0xB1647C", VA = "0xB1647C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000585")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927BF0", Offset = "0x927BF0")]
		private sealed class <DoFadeOut>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002055")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002056")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002057")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MeshMenuItem <>4__this;

			[Token(Token = "0x4002058")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x170004AA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600267F")]
				[Address(RVA = "0xB166AC", Offset = "0xB166AC", VA = "0xB166AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004AB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002681")]
				[Address(RVA = "0xB1671C", Offset = "0xB1671C", VA = "0xB1671C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600267C")]
			[Address(RVA = "0xB16170", Offset = "0xB16170", VA = "0xB16170")]
			[DebuggerHidden]
			public <DoFadeOut>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x600267D")]
			[Address(RVA = "0xB164EC", Offset = "0xB164EC", VA = "0xB164EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600267E")]
			[Address(RVA = "0xB164F0", Offset = "0xB164F0", VA = "0xB164F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002680")]
			[Address(RVA = "0xB166B4", Offset = "0xB166B4", VA = "0xB166B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001177")]
		private const float PunchInTime = 0.15f;

		[Token(Token = "0x4001178")]
		private const float PunchOutTime = 0.3f;

		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x930A14", Offset = "0x930A14")]
		[SerializeField]
		private bool m_doScaleOnEnable;

		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_doScaleDelay;

		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector3 m_fromScale;

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_scaleTime;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x930A90", Offset = "0x930A90")]
		[SerializeField]
		private string m_colorProp;

		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_fadeTime;

		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int m_colorPropHash;

		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Renderer m_renderer;

		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Tween m_scaleTween;

		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Coroutine m_fadeRoutine;

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Color m_defaultColor;

		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 m_defaultScale;

		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 m_punchScale;

		[Token(Token = "0x14000053")]
		public event Action<IMenuItem> OnMenuItemDestroyed
		{
			[Token(Token = "0x60016FA")]
			[Address(RVA = "0xB15990", Offset = "0xB15990", VA = "0xB15990", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BD1C", Offset = "0x93BD1C")]
			add
			{
			}
			[Token(Token = "0x60016FB")]
			[Address(RVA = "0xB15A7C", Offset = "0xB15A7C", VA = "0xB15A7C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BD2C", Offset = "0x93BD2C")]
			remove
			{
			}
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0xB15B68", Offset = "0xB15B68", VA = "0xB15B68")]
		private void Awake()
		{
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0xB15D4C", Offset = "0xB15D4C", VA = "0xB15D4C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0xB15DB0", Offset = "0xB15DB0", VA = "0xB15DB0", Slot = "6")]
		public void Enable()
		{
		}

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0xB15F8C", Offset = "0xB15F8C", VA = "0xB15F8C", Slot = "7")]
		public void Disable()
		{
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0xB15E8C", Offset = "0xB15E8C", VA = "0xB15E8C")]
		public void PunchScaleFrom(float delay)
		{
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0xB1604C", Offset = "0xB1604C", VA = "0xB1604C")]
		public void PunchScale()
		{
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0xB15E18", Offset = "0xB15E18", VA = "0xB15E18")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93BD3C", Offset = "0x93BD3C")]
		private IEnumerator DoFadeIn()
		{
			return null;
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0xB15FD8", Offset = "0xB15FD8", VA = "0xB15FD8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93BDA0", Offset = "0x93BDA0")]
		private IEnumerator DoFadeOut()
		{
			return null;
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0xB1619C", Offset = "0xB1619C", VA = "0xB1619C")]
		public MeshMenuItem()
		{
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0xB16274", Offset = "0xB16274", VA = "0xB16274")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BE04", Offset = "0x93BE04")]
		private void <PunchScale>b__23_0()
		{
		}
	}
	[Token(Token = "0x20002D8")]
	public abstract class MenuSlider : MonoBehaviour
	{
		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MenuSliderHandle m_handle;

		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x930B0C", Offset = "0x930B0C")]
		[SerializeField]
		private float m_minValue;

		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_maxValue;

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_wholeNumbers;

		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x930B78", Offset = "0x930B78")]
		private bool m_saveNormalizedValue;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected float m_value;

		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930BC4", Offset = "0x930BC4")]
		private float <HandleMax>k__BackingField;

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930BD4", Offset = "0x930BD4")]
		private float <HandleMin>k__BackingField;

		[Token(Token = "0x170002C4")]
		public bool WholeNumbers
		{
			[Token(Token = "0x6001706")]
			[Address(RVA = "0xB14488", Offset = "0xB14488", VA = "0xB14488")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002C5")]
		public float Value
		{
			[Token(Token = "0x6001707")]
			[Address(RVA = "0xB14490", Offset = "0xB14490", VA = "0xB14490")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002C6")]
		public float NormalizedValue
		{
			[Token(Token = "0x6001708")]
			[Address(RVA = "0xB1457C", Offset = "0xB1457C", VA = "0xB1457C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002C7")]
		public float StepLength
		{
			[Token(Token = "0x6001709")]
			[Address(RVA = "0xB145A8", Offset = "0xB145A8", VA = "0xB145A8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170002C8")]
		protected float HandleMax
		{
			[Token(Token = "0x600170A")]
			[Address(RVA = "0xB145C4", Offset = "0xB145C4", VA = "0xB145C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BE14", Offset = "0x93BE14")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600170B")]
			[Address(RVA = "0xB145CC", Offset = "0xB145CC", VA = "0xB145CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BE24", Offset = "0x93BE24")]
			private set
			{
			}
		}

		[Token(Token = "0x170002C9")]
		protected float HandleMin
		{
			[Token(Token = "0x600170C")]
			[Address(RVA = "0xB145D4", Offset = "0xB145D4", VA = "0xB145D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BE34", Offset = "0x93BE34")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600170D")]
			[Address(RVA = "0xB145DC", Offset = "0xB145DC", VA = "0xB145DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BE44", Offset = "0x93BE44")]
			private set
			{
			}
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0xB145E4", Offset = "0xB145E4", VA = "0xB145E4")]
		protected void Awake()
		{
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0xB147E0", Offset = "0xB147E0", VA = "0xB147E0")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0xB14820", Offset = "0xB14820", VA = "0xB14820")]
		public float GetValue(Vector3 position)
		{
			return default(float);
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0xB1499C", Offset = "0xB1499C", VA = "0xB1499C")]
		public Vector3 GetHandlePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0xB14AF4", Offset = "0xB14AF4", VA = "0xB14AF4")]
		public void GetClampedPosition(out bool clamped, ref Vector3 position)
		{
		}

		[Token(Token = "0x6001713")]
		protected abstract void SetValue(float value);

		[Token(Token = "0x6001714")]
		protected abstract float GetValue();

		[Token(Token = "0x6001715")]
		[Address(RVA = "0xB14BD0", Offset = "0xB14BD0", VA = "0xB14BD0")]
		protected void ChangeValue(float value)
		{
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0xB14D30", Offset = "0xB14D30", VA = "0xB14D30")]
		private void UpdateValue()
		{
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0xB14DB4", Offset = "0xB14DB4", VA = "0xB14DB4")]
		protected MenuSlider()
		{
		}
	}
	[Token(Token = "0x20002D9")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x926B40", Offset = "0x926B40")]
	public class MenuSliderHandle : MonoBehaviour
	{
		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MenuButton m_handleButton;

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MenuSlider m_slider;

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private TextMeshProUGUI m_valueText;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private HapticClip m_hapticClip;

		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SoundEffect m_soundEffect;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_currentValue;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 m_pointerPreviousPosition;

		[Token(Token = "0x14000054")]
		public event Action OnHandleReleased
		{
			[Token(Token = "0x6001718")]
			[Address(RVA = "0xB14DC4", Offset = "0xB14DC4", VA = "0xB14DC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BE54", Offset = "0x93BE54")]
			add
			{
			}
			[Token(Token = "0x6001719")]
			[Address(RVA = "0xB14EB0", Offset = "0xB14EB0", VA = "0xB14EB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BE64", Offset = "0x93BE64")]
			remove
			{
			}
		}

		[Token(Token = "0x14000055")]
		public event Action OnHandleMoved
		{
			[Token(Token = "0x600171A")]
			[Address(RVA = "0xB146F4", Offset = "0xB146F4", VA = "0xB146F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BE74", Offset = "0x93BE74")]
			add
			{
			}
			[Token(Token = "0x600171B")]
			[Address(RVA = "0xB14F9C", Offset = "0xB14F9C", VA = "0xB14F9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BE84", Offset = "0x93BE84")]
			remove
			{
			}
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0xB15088", Offset = "0xB15088", VA = "0xB15088")]
		private void Awake()
		{
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0xB14C50", Offset = "0xB14C50", VA = "0xB14C50")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0xB15254", Offset = "0xB15254", VA = "0xB15254")]
		private void OnHold(IPlayerPointer pointer)
		{
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0xB151A4", Offset = "0xB151A4", VA = "0xB151A4")]
		private void SetValue(float value)
		{
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0xB15740", Offset = "0xB15740", VA = "0xB15740")]
		private void OnRelease(IPlayerPointer pointer)
		{
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0xB15754", Offset = "0xB15754", VA = "0xB15754")]
		private void OnClick(IPlayerPointer pointer)
		{
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0xB15820", Offset = "0xB15820", VA = "0xB15820")]
		public MenuSliderHandle()
		{
		}
	}
	[Token(Token = "0x20002DA")]
	public class MusicVolumeSlider : SettingSlider
	{
		[Token(Token = "0x6001723")]
		[Address(RVA = "0xB16724", Offset = "0xB16724", VA = "0xB16724", Slot = "7")]
		protected override float GetValue(GameSettings settings)
		{
			return default(float);
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0xB16754", Offset = "0xB16754", VA = "0xB16754", Slot = "6")]
		protected override void SetValue(GameSettings settings, float value)
		{
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0xB16794", Offset = "0xB16794", VA = "0xB16794")]
		public MusicVolumeSlider()
		{
		}
	}
	[Token(Token = "0x20002DB")]
	public abstract class SettingSlider : MenuSlider
	{
		[Token(Token = "0x6001726")]
		protected abstract void SetValue(GameSettings settings, float value);

		[Token(Token = "0x6001727")]
		protected abstract float GetValue(GameSettings settings);

		[Token(Token = "0x6001728")]
		[Address(RVA = "0xBB3568", Offset = "0xBB3568", VA = "0xBB3568", Slot = "4")]
		protected sealed override void SetValue(float value)
		{
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0xBB35F0", Offset = "0xBB35F0", VA = "0xBB35F0", Slot = "5")]
		protected sealed override float GetValue()
		{
			return default(float);
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0xBB3668", Offset = "0xBB3668", VA = "0xBB3668")]
		protected SettingSlider()
		{
		}
	}
	[Token(Token = "0x20002DC")]
	public class SfxVolumeSlider : SettingSlider
	{
		[Token(Token = "0x600172B")]
		[Address(RVA = "0xBB3778", Offset = "0xBB3778", VA = "0xBB3778", Slot = "7")]
		protected override float GetValue(GameSettings settings)
		{
			return default(float);
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0xBB37A8", Offset = "0xBB37A8", VA = "0xBB37A8", Slot = "6")]
		protected override void SetValue(GameSettings settings, float value)
		{
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0xBB37E8", Offset = "0xBB37E8", VA = "0xBB37E8")]
		public SfxVolumeSlider()
		{
		}
	}
	[Token(Token = "0x20002DD")]
	public class TimeScaleSlider : MenuSlider
	{
		[Token(Token = "0x600172E")]
		[Address(RVA = "0xBB4498", Offset = "0xBB4498", VA = "0xBB4498")]
		public void ResetTimeScale()
		{
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0xBB44D8", Offset = "0xBB44D8", VA = "0xBB44D8", Slot = "5")]
		protected override float GetValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0xBB44E0", Offset = "0xBB44E0", VA = "0xBB44E0", Slot = "4")]
		protected override void SetValue(float value)
		{
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0xBB44E8", Offset = "0xBB44E8", VA = "0xBB44E8")]
		public TimeScaleSlider()
		{
		}
	}
	[Token(Token = "0x20002DE")]
	public class VOVolumeSlider : SettingSlider
	{
		[Token(Token = "0x6001732")]
		[Address(RVA = "0xBB4D3C", Offset = "0xBB4D3C", VA = "0xBB4D3C", Slot = "7")]
		protected override float GetValue(GameSettings settings)
		{
			return default(float);
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0xBB4D6C", Offset = "0xBB4D6C", VA = "0xBB4D6C", Slot = "6")]
		protected override void SetValue(GameSettings settings, float value)
		{
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0xBB4DAC", Offset = "0xBB4DAC", VA = "0xBB4DAC")]
		public VOVolumeSlider()
		{
		}
	}
	[Token(Token = "0x20002DF")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x926B54", Offset = "0x926B54")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x926B54", Offset = "0x926B54")]
	public class TextMenuItem : MonoBehaviour, IRemovableMenuItem, IMenuItem
	{
		[Token(Token = "0x2000586")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927C00", Offset = "0x927C00")]
		private sealed class <FadeText>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002059")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400205A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400205B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextMenuItem <>4__this;

			[Token(Token = "0x400205C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float delay;

			[Token(Token = "0x400205D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float targetAlpha;

			[Token(Token = "0x400205E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startAlpha>5__2;

			[Token(Token = "0x400205F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <elapsedTime>5__3;

			[Token(Token = "0x170004AC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002685")]
				[Address(RVA = "0xBB4420", Offset = "0xBB4420", VA = "0xBB4420", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004AD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002687")]
				[Address(RVA = "0xBB4490", Offset = "0xBB4490", VA = "0xBB4490", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002682")]
			[Address(RVA = "0xBB3ECC", Offset = "0xBB3ECC", VA = "0xBB3ECC")]
			[DebuggerHidden]
			public <FadeText>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6002683")]
			[Address(RVA = "0xBB41AC", Offset = "0xBB41AC", VA = "0xBB41AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002684")]
			[Address(RVA = "0xBB41B0", Offset = "0xBB41B0", VA = "0xBB41B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002686")]
			[Address(RVA = "0xBB4428", Offset = "0xBB4428", VA = "0xBB4428", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000587")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927C10", Offset = "0x927C10")]
		private sealed class <FadeCanvas>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002060")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002061")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002062")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TextMenuItem <>4__this;

			[Token(Token = "0x4002063")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float delay;

			[Token(Token = "0x4002064")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float targetAlpha;

			[Token(Token = "0x4002065")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startAlpha>5__2;

			[Token(Token = "0x4002066")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <elapsedTime>5__3;

			[Token(Token = "0x170004AE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600268B")]
				[Address(RVA = "0xBB4134", Offset = "0xBB4134", VA = "0xBB4134", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004AF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600268D")]
				[Address(RVA = "0xBB41A4", Offset = "0xBB41A4", VA = "0xBB41A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002688")]
			[Address(RVA = "0xBB3EF8", Offset = "0xBB3EF8", VA = "0xBB3EF8")]
			[DebuggerHidden]
			public <FadeCanvas>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6002689")]
			[Address(RVA = "0xBB3F34", Offset = "0xBB3F34", VA = "0xBB3F34", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600268A")]
			[Address(RVA = "0xBB3F38", Offset = "0xBB3F38", VA = "0xBB3F38", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600268C")]
			[Address(RVA = "0xBB413C", Offset = "0xBB413C", VA = "0xBB413C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CanvasGroup m_canvasGroup;

		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_delay;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_fadeTime;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TMP_Text m_text;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine m_routine;

		[Token(Token = "0x14000056")]
		public event Action<IMenuItem> OnMenuItemDestroyed
		{
			[Token(Token = "0x6001735")]
			[Address(RVA = "0xBB3860", Offset = "0xBB3860", VA = "0xBB3860", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BE94", Offset = "0x93BE94")]
			add
			{
			}
			[Token(Token = "0x6001736")]
			[Address(RVA = "0xBB394C", Offset = "0xBB394C", VA = "0xBB394C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BEA4", Offset = "0x93BEA4")]
			remove
			{
			}
		}

		[Token(Token = "0x6001737")]
		[Address(RVA = "0xBB3A38", Offset = "0xBB3A38", VA = "0xBB3A38")]
		private void Start()
		{
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0xBB3B68", Offset = "0xBB3B68", VA = "0xBB3B68")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0xBB3BCC", Offset = "0xBB3BCC", VA = "0xBB3BCC", Slot = "7")]
		public void Disable()
		{
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0xBB3E10", Offset = "0xBB3E10", VA = "0xBB3E10", Slot = "6")]
		public void Enable()
		{
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0xBB3D60", Offset = "0xBB3D60", VA = "0xBB3D60")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93BEB4", Offset = "0x93BEB4")]
		private IEnumerator FadeText(float delay, float targetAlpha)
		{
			return null;
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0xBB3CB0", Offset = "0xBB3CB0", VA = "0xBB3CB0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93BF18", Offset = "0x93BF18")]
		private IEnumerator FadeCanvas(float delay, float targetAlpha)
		{
			return null;
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0xBB3F24", Offset = "0xBB3F24", VA = "0xBB3F24")]
		public TextMenuItem()
		{
		}
	}
	[Token(Token = "0x20002E0")]
	public class CharacterToggle : MenuToggle
	{
		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E9")]
		[SerializeField]
		private bool m_value;

		[Token(Token = "0x170002CA")]
		public bool Value
		{
			[Token(Token = "0x600173E")]
			[Address(RVA = "0xB084B8", Offset = "0xB084B8", VA = "0xB084B8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0xB084C0", Offset = "0xB084C0", VA = "0xB084C0", Slot = "20")]
		protected override bool GetValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0xB084C8", Offset = "0xB084C8", VA = "0xB084C8", Slot = "19")]
		protected override void SetValue(bool value)
		{
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0xB084D4", Offset = "0xB084D4", VA = "0xB084D4")]
		public CharacterToggle()
		{
		}
	}
	[Token(Token = "0x20002E1")]
	public abstract class MenuToggle : MenuButton
	{
		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x930CA4", Offset = "0x930CA4")]
		[SerializeField]
		private Image m_onImage;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		[SerializeField]
		private Image m_offImage;

		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private bool m_state;

		[Token(Token = "0x6001742")]
		[Address(RVA = "0xB15828", Offset = "0xB15828", VA = "0xB15828", Slot = "8")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0xB158AC", Offset = "0xB158AC", VA = "0xB158AC")]
		protected void OnEnable()
		{
		}

		[Token(Token = "0x6001744")]
		protected abstract void SetValue(bool value);

		[Token(Token = "0x6001745")]
		protected abstract bool GetValue();

		[Token(Token = "0x6001746")]
		[Address(RVA = "0xB15950", Offset = "0xB15950", VA = "0xB15950")]
		private void Toggle(IPlayerPointer pointer)
		{
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0xB158E0", Offset = "0xB158E0", VA = "0xB158E0")]
		private void SetState(bool state)
		{
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0xB084E0", Offset = "0xB084E0", VA = "0xB084E0")]
		protected MenuToggle()
		{
		}
	}
	[Token(Token = "0x20002E2")]
	public class MuteToggle : SettingsToggle
	{
		[Token(Token = "0x6001749")]
		[Address(RVA = "0xBB2EA4", Offset = "0xBB2EA4", VA = "0xBB2EA4", Slot = "21")]
		protected override bool GetValue(GameSettings settings)
		{
			return default(bool);
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0xBB2ED4", Offset = "0xBB2ED4", VA = "0xBB2ED4", Slot = "22")]
		protected override void SetValue(GameSettings settings, bool value)
		{
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0xBB2F0C", Offset = "0xBB2F0C", VA = "0xBB2F0C")]
		public MuteToggle()
		{
		}
	}
	[Token(Token = "0x20002E3")]
	public abstract class SettingsToggle : MenuToggle
	{
		[Token(Token = "0x600174C")]
		[Address(RVA = "0xBB3670", Offset = "0xBB3670", VA = "0xBB3670", Slot = "20")]
		protected sealed override bool GetValue()
		{
			return default(bool);
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0xBB36EC", Offset = "0xBB36EC", VA = "0xBB36EC", Slot = "19")]
		protected sealed override void SetValue(bool value)
		{
		}

		[Token(Token = "0x600174E")]
		protected abstract bool GetValue(GameSettings settings);

		[Token(Token = "0x600174F")]
		protected abstract void SetValue(GameSettings settings, bool value);

		[Token(Token = "0x6001750")]
		[Address(RVA = "0xBB2F14", Offset = "0xBB2F14", VA = "0xBB2F14")]
		protected SettingsToggle()
		{
		}
	}
	[Token(Token = "0x20002E4")]
	public class SubtitlesToggle : SettingsToggle
	{
		[Token(Token = "0x6001751")]
		[Address(RVA = "0xBB37F0", Offset = "0xBB37F0", VA = "0xBB37F0", Slot = "21")]
		protected override bool GetValue(GameSettings settings)
		{
			return default(bool);
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0xBB3820", Offset = "0xBB3820", VA = "0xBB3820", Slot = "22")]
		protected override void SetValue(GameSettings settings, bool value)
		{
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0xBB3858", Offset = "0xBB3858", VA = "0xBB3858")]
		public SubtitlesToggle()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002E5")]
	public struct TriggerBox
	{
		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 Center;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 Size;

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask LayerMask;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool m_isIntersecting;

		[Token(Token = "0x14000057")]
		public event Action<PlayerPointer> OnTriggerEnter
		{
			[Token(Token = "0x6001754")]
			[Address(RVA = "0x9CDB50", Offset = "0x9CDB50", VA = "0x9CDB50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BF7C", Offset = "0x93BF7C")]
			add
			{
			}
			[Token(Token = "0x6001755")]
			[Address(RVA = "0x9CDB58", Offset = "0x9CDB58", VA = "0x9CDB58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BF8C", Offset = "0x93BF8C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000058")]
		public event Action<PlayerPointer> OnTriggerExit
		{
			[Token(Token = "0x6001756")]
			[Address(RVA = "0x9CDB60", Offset = "0x9CDB60", VA = "0x9CDB60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BF9C", Offset = "0x93BF9C")]
			add
			{
			}
			[Token(Token = "0x6001757")]
			[Address(RVA = "0x9CDB68", Offset = "0x9CDB68", VA = "0x9CDB68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BFAC", Offset = "0x93BFAC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000059")]
		public event Action<PlayerPointer> OnTriggerStay
		{
			[Token(Token = "0x6001758")]
			[Address(RVA = "0x9CDB70", Offset = "0x9CDB70", VA = "0x9CDB70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BFBC", Offset = "0x93BFBC")]
			add
			{
			}
			[Token(Token = "0x6001759")]
			[Address(RVA = "0x9CDB78", Offset = "0x9CDB78", VA = "0x9CDB78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BFCC", Offset = "0x93BFCC")]
			remove
			{
			}
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0x9CDB80", Offset = "0x9CDB80", VA = "0x9CDB80")]
		public void Update(Vector3 position, Quaternion rotation, Vector3 scale, PlayerPointer pointer)
		{
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0x9CDB98", Offset = "0x9CDB98", VA = "0x9CDB98")]
		public void ForceExit(PlayerPointer pointer)
		{
		}
	}
	[Token(Token = "0x20002E6")]
	public class ConditionalDestroy : MonoBehaviour
	{
		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlatformType m_destroyIfPlatform;

		[Token(Token = "0x600175C")]
		[Address(RVA = "0xB084E4", Offset = "0xB084E4", VA = "0xB084E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0xB085B0", Offset = "0xB085B0", VA = "0xB085B0")]
		public ConditionalDestroy()
		{
		}
	}
}
namespace Cortopia.Scripts.UI.Dialogues
{
	[Token(Token = "0x20002E7")]
	public class DialogueButton : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
	{
		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BoxCollider m_collider;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SoundEffectPlayer m_pointerPresentSoundEffectPlayer;

		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x930D60", Offset = "0x930D60")]
		[SerializeField]
		private Image m_pointerPresentBackground;

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Localize m_localize;

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_isPointerPresent;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_timer;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ISet<PlayerPointer> m_presentPointers;

		[Token(Token = "0x40011B1")]
		private const float PointTime = 1.5f;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x930DBC", Offset = "0x930DBC")]
		private int <OptionIndex>k__BackingField;

		[Token(Token = "0x170002CB")]
		public int OptionIndex
		{
			[Token(Token = "0x600175E")]
			[Address(RVA = "0xB09CD8", Offset = "0xB09CD8", VA = "0xB09CD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BFDC", Offset = "0x93BFDC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600175F")]
			[Address(RVA = "0xB09CE0", Offset = "0xB09CE0", VA = "0xB09CE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BFEC", Offset = "0x93BFEC")]
			private set
			{
			}
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0xB09CE8", Offset = "0xB09CE8", VA = "0xB09CE8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0xB09EA4", Offset = "0xB09EA4", VA = "0xB09EA4", Slot = "4")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0xB09EA8", Offset = "0xB09EA8", VA = "0xB09EA8")]
		public void SetInteractable(bool isInteractable)
		{
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0xB0A008", Offset = "0xB0A008", VA = "0xB0A008")]
		public void EnableButton(string optionTerm, int index)
		{
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0xB0A0E8", Offset = "0xB0A0E8", VA = "0xB0A0E8")]
		public void DisableButton()
		{
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0xB09FAC", Offset = "0xB09FAC", VA = "0xB09FAC")]
		private void DisableTouchEffect()
		{
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0xB0A120", Offset = "0xB0A120", VA = "0xB0A120")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6001767")]
		[Address(RVA = "0xB0A2E8", Offset = "0xB0A2E8", VA = "0xB0A2E8")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0xB09E20", Offset = "0xB09E20", VA = "0xB09E20")]
		private void ButtonClick()
		{
		}

		[Token(Token = "0x6001769")]
		[Address(RVA = "0xB0A508", Offset = "0xB0A508", VA = "0xB0A508")]
		public DialogueButton()
		{
		}
	}
	[Token(Token = "0x20002E8")]
	public class DialogueChoice : MonoBehaviour
	{
		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly int m_parameterIsSpawned;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private readonly int m_parameterChosenTrigger;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly int m_parameterOpacity;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private readonly int m_disabledStateName;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly int m_materialColorPropertyID;

		[Token(Token = "0x40011B8")]
		private const int MeshTypeCount = 3;

		[Token(Token = "0x40011B9")]
		private const float TextFadeDelay = 0.5f;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private PointerInteractableHold m_pointerInteractable;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x930DFC", Offset = "0x930DFC")]
		[SerializeField]
		private TextMenuItem m_textFader;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Localize m_localize;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x930E58", Offset = "0x930E58")]
		[SerializeField]
		private SoundEffect m_soundEffect;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshRenderer m_currentRenderer;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private DialogueChoiceManager m_dialogueChoiceManager;

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEffectPlayer m_soundEffectPlayer;

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int m_index;

		[Token(Token = "0x600176A")]
		[Address(RVA = "0xB0A578", Offset = "0xB0A578", VA = "0xB0A578")]
		private void Awake()
		{
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0xB0A64C", Offset = "0xB0A64C", VA = "0xB0A64C")]
		private void Update()
		{
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0xB0A7A8", Offset = "0xB0A7A8", VA = "0xB0A7A8")]
		public void InitilizeChoice(DialogueChoiceManager manager)
		{
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0xB0A7D4", Offset = "0xB0A7D4", VA = "0xB0A7D4")]
		public void SetMeshRenderType(DialogueChoicePosition position)
		{
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0xB0A8E0", Offset = "0xB0A8E0", VA = "0xB0A8E0")]
		public void StartSpawn(float delayTime)
		{
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0xB0AB84", Offset = "0xB0AB84", VA = "0xB0AB84")]
		public void StartDespawn(float delayTime)
		{
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0xB0AD00", Offset = "0xB0AD00", VA = "0xB0AD00")]
		public void Disable()
		{
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0xB0AD38", Offset = "0xB0AD38", VA = "0xB0AD38")]
		public void Choose()
		{
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0xB0B06C", Offset = "0xB0B06C", VA = "0xB0B06C")]
		private void SetSpawnParameters()
		{
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0xB0B0FC", Offset = "0xB0B0FC", VA = "0xB0B0FC")]
		public void SetChoiceIndex(int index)
		{
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0xB0B104", Offset = "0xB0B104", VA = "0xB0B104")]
		public void SetText(string text)
		{
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0xB0B188", Offset = "0xB0B188", VA = "0xB0B188")]
		private void SetDespawnParameters()
		{
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0xB0B1C4", Offset = "0xB0B1C4", VA = "0xB0B1C4")]
		private void OnPointerExit()
		{
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0xB0B25C", Offset = "0xB0B25C", VA = "0xB0B25C")]
		private void OnPointerEnter()
		{
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0xB0B30C", Offset = "0xB0B30C", VA = "0xB0B30C")]
		public DialogueChoice()
		{
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0xB0B3E4", Offset = "0xB0B3E4", VA = "0xB0B3E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93BFFC", Offset = "0x93BFFC")]
		private IPromise <StartSpawn>b__21_0()
		{
			return null;
		}
	}
	[Token(Token = "0x20002E9")]
	public class DialogueChoiceManager : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000588")]
		public struct LayoutPosition
		{
			[Token(Token = "0x4002067")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Transform LayoutTransform;

			[Token(Token = "0x4002068")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public DialogueChoicePosition RendererType;
		}

		[Token(Token = "0x2000589")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927C20", Offset = "0x927C20")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x4002069")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DialogueChoice choice;

			[Token(Token = "0x600268E")]
			[Address(RVA = "0xB0BBC0", Offset = "0xB0BBC0", VA = "0xB0BBC0")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x600268F")]
			[Address(RVA = "0xB0BC54", Offset = "0xB0BC54", VA = "0xB0BC54")]
			internal void <DespawnAll>b__0()
			{
			}
		}

		[Token(Token = "0x40011C4")]
		private const int DialogueChoicePoolSize = 4;

		[Token(Token = "0x40011C5")]
		private const float DisableAnimationTime = 0.5f;

		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x930EA4", Offset = "0x930EA4")]
		[SerializeField]
		private DialogueChoice m_dialogueChoicePrefab;

		[Token(Token = "0x40011C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x930EF0", Offset = "0x930EF0")]
		[SerializeField]
		private LayoutPosition[] m_twoChoiceLayout;

		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private LayoutPosition[] m_threeChoiceLayout;

		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private LayoutPosition[] m_fourChoiceLayout;

		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x930F5C", Offset = "0x930F5C")]
		[SerializeField]
		private float m_spawnDelayIncrement;

		[Token(Token = "0x40011CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float m_despawnDelayIncrement;

		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private DialogueChoice[] m_dialogueChoicePool;

		[Token(Token = "0x600177A")]
		[Address(RVA = "0xB0B518", Offset = "0xB0B518", VA = "0xB0B518")]
		private void Awake()
		{
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0xB0B73C", Offset = "0xB0B73C", VA = "0xB0B73C")]
		public void SpawnTwoChoiceLayout(string[] optionTitles)
		{
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0xB0BB98", Offset = "0xB0BB98", VA = "0xB0BB98")]
		public void SpawnThreeChoiceLayout(string[] optionTitles)
		{
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0xB0BBAC", Offset = "0xB0BBAC", VA = "0xB0BBAC")]
		public void SpawnFourChoiceLayout(string[] optionTitles)
		{
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0xB0AE28", Offset = "0xB0AE28", VA = "0xB0AE28")]
		public void DespawnAll()
		{
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0xB0B750", Offset = "0xB0B750", VA = "0xB0B750")]
		private void SpawnLayout(LayoutPosition[] layoutPositions, string[] optionTitles)
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0xB0BBC8", Offset = "0xB0BBC8", VA = "0xB0BBC8")]
		public DialogueChoiceManager()
		{
		}
	}
	[Token(Token = "0x20002EA")]
	public enum DialogueChoicePosition
	{
		[Token(Token = "0x40011CE")]
		Left,
		[Token(Token = "0x40011CF")]
		Center,
		[Token(Token = "0x40011D0")]
		Right,
		[Token(Token = "0x40011D1")]
		Disabled
	}
	[Token(Token = "0x20002EB")]
	public class DialogueUI : MonoBehaviour
	{
		[Token(Token = "0x200058A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927C30", Offset = "0x927C30")]
		private sealed class <>c__DisplayClass21_0
		{
			[Token(Token = "0x400206A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DialogueUI <>4__this;

			[Token(Token = "0x400206B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool showOnRightSide;

			[Token(Token = "0x400206C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Sprite portrait;

			[Token(Token = "0x400206D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string subtitleTerm;

			[Token(Token = "0x400206E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int newIndex;

			[Token(Token = "0x6002690")]
			[Address(RVA = "0xB0C984", Offset = "0xB0C984", VA = "0xB0C984")]
			public <>c__DisplayClass21_0()
			{
			}

			[Token(Token = "0x6002691")]
			[Address(RVA = "0xB0CCA0", Offset = "0xB0CCA0", VA = "0xB0CCA0")]
			internal void <UpdateSubtitle>b__0()
			{
			}
		}

		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int sm_isScrollSpawnedParameter;

		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int sm_portraitDisplayedParameter;

		[Token(Token = "0x40011D4")]
		private const float PortraitDisappearTime = 0.5f;

		[Token(Token = "0x40011D5")]
		private const float ScrollAppearTime = 1f;

		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x930FB8", Offset = "0x930FB8")]
		[SerializeField]
		private DialogueChoiceManager m_choiceManager;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x931004", Offset = "0x931004")]
		[SerializeField]
		private Animator m_dialogueScrollAnimator;

		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x931050", Offset = "0x931050")]
		[SerializeField]
		private float m_optionsForwardMultiplier;

		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_optionsDownMultiplier;

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9310AC", Offset = "0x9310AC")]
		[SerializeField]
		private Localize m_subtitleLocalize;

		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TextMeshProUGUI m_subtitleText;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TextMenuItem m_textFader;

		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x931118", Offset = "0x931118")]
		[SerializeField]
		private Image m_npcPortrait;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Image m_characterPortrait;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x931174", Offset = "0x931174")]
		[SerializeField]
		private SoundEffect m_showSfx;

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private SoundEffect m_hideSfx;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Image m_activePortait;

		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform m_cameraTransform;

		[Token(Token = "0x6001781")]
		[Address(RVA = "0xB0BC84", Offset = "0xB0BC84", VA = "0xB0BC84")]
		private void Start()
		{
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0xB0BFE8", Offset = "0xB0BFE8", VA = "0xB0BFE8")]
		public void DisableDialogue()
		{
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0xB0C0C0", Offset = "0xB0C0C0", VA = "0xB0C0C0")]
		public void ShowOptions(string[] optionTitles)
		{
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0xB0C378", Offset = "0xB0C378", VA = "0xB0C378")]
		public void PlaceSubtitles(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0xB0C634", Offset = "0xB0C634", VA = "0xB0C634")]
		public void UpdateSubtitle(bool showOnRightSide, Sprite portrait, string subtitleTerm)
		{
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0xB0C98C", Offset = "0xB0C98C", VA = "0xB0C98C")]
		private void UpdatePortrait(bool showOnRightSide, Sprite portrait, string subtitleTerm, int newIndex)
		{
		}

		[Token(Token = "0x6001787")]
		[Address(RVA = "0xB0BDCC", Offset = "0xB0BDCC", VA = "0xB0BDCC")]
		private void ClearSubtitles()
		{
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0xB0CA80", Offset = "0xB0CA80", VA = "0xB0CA80")]
		private void SetPortraitActive(Image portrait, Sprite sprite)
		{
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0xB0CB04", Offset = "0xB0CB04", VA = "0xB0CB04")]
		private void DisableActivePortrait()
		{
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0xB0CBB8", Offset = "0xB0CBB8", VA = "0xB0CBB8")]
		public DialogueUI()
		{
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0xB0CC54", Offset = "0xB0CC54", VA = "0xB0CC54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C00C", Offset = "0x93C00C")]
		private void <ClearSubtitles>b__23_0()
		{
		}
	}
}
namespace Cortopia.Scripts.Inventories
{
	[Serializable]
	[Token(Token = "0x20002EC")]
	public class InventoryItem : SaveObject
	{
		[Serializable]
		[Token(Token = "0x200058B")]
		public class SaveData : SavableData
		{
			[Token(Token = "0x400206F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public InventoryItemState State;

			[Token(Token = "0x4002070")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SavableTransform Transform;

			[Token(Token = "0x6002692")]
			[Address(RVA = "0xAED920", Offset = "0xAED920", VA = "0xAED920")]
			public SaveData(InventoryItemState state, SavableTransform transform)
			{
			}
		}

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected InventoryItemData m_itemData;

		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer m_meshRenderer;

		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool m_toggleMeshOnPickup;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		private bool m_toggleMeshOnLoad;

		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x931210", Offset = "0x931210")]
		[SerializeField]
		private SoundEffect m_overrideSoundEffect;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x93125C", Offset = "0x93125C")]
		[SerializeField]
		private UnityEvent m_onPickup;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected SaveData m_saveData;

		[Token(Token = "0x170002CC")]
		protected InventoryItemState CurrentState
		{
			[Token(Token = "0x600178D")]
			[Address(RVA = "0xAECFC4", Offset = "0xAECFC4", VA = "0xAECFC4")]
			get
			{
				return default(InventoryItemState);
			}
			[Token(Token = "0x600178E")]
			[Address(RVA = "0xAECFF0", Offset = "0xAECFF0", VA = "0xAECFF0")]
			set
			{
			}
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0xAED020", Offset = "0xAED020", VA = "0xAED020", Slot = "10")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001790")]
		[Address(RVA = "0xAED31C", Offset = "0xAED31C", VA = "0xAED31C", Slot = "9")]
		public override void Serialize(IWriteSave write)
		{
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0xAED410", Offset = "0xAED410", VA = "0xAED410", Slot = "8")]
		public override void Deserialize(IReadSave read)
		{
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0xAED5C0", Offset = "0xAED5C0", VA = "0xAED5C0")]
		public void SaveTransform()
		{
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0xAED618", Offset = "0xAED618", VA = "0xAED618", Slot = "11")]
		public virtual void Pickup()
		{
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0xAED83C", Offset = "0xAED83C", VA = "0xAED83C")]
		public void Drop()
		{
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0xAED588", Offset = "0xAED588", VA = "0xAED588")]
		private void ToggleMeshEnabled(bool enabled)
		{
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0xAED704", Offset = "0xAED704", VA = "0xAED704")]
		private void PlayGrabSoundEffect()
		{
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0xAED1C4", Offset = "0xAED1C4", VA = "0xAED1C4")]
		private SaveData GetDefaultSaveData()
		{
			return null;
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0xAED95C", Offset = "0xAED95C", VA = "0xAED95C")]
		public InventoryItem()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002ED")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x926BCC", Offset = "0x926BCC")]
	public class InventoryItemData : ScriptableObject
	{
		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int m_itemID;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool m_allowDuplicates;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		private string m_instanceGuid;

		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[HideInInspector]
		private Cortopia.Scripts.Rooms.RoomType m_instanceRoom;

		[Token(Token = "0x170002CD")]
		public int ItemID
		{
			[Token(Token = "0x6001799")]
			[Address(RVA = "0xAED248", Offset = "0xAED248", VA = "0xAED248")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170002CE")]
		public bool AllowDuplicates
		{
			[Token(Token = "0x600179A")]
			[Address(RVA = "0xAED250", Offset = "0xAED250", VA = "0xAED250")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002CF")]
		public string InstanceGuid
		{
			[Token(Token = "0x600179B")]
			[Address(RVA = "0xAED9CC", Offset = "0xAED9CC", VA = "0xAED9CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002D0")]
		public Cortopia.Scripts.Rooms.RoomType InstanceRoom
		{
			[Token(Token = "0x600179C")]
			[Address(RVA = "0xAED9D4", Offset = "0xAED9D4", VA = "0xAED9D4")]
			get
			{
				return default(Cortopia.Scripts.Rooms.RoomType);
			}
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0xAED258", Offset = "0xAED258", VA = "0xAED258")]
		public static InventoryItemData CreateInstance(int itemID, bool allowDuplicates, string instanceGuid, Cortopia.Scripts.Rooms.RoomType roomType)
		{
			return null;
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0xAED9DC", Offset = "0xAED9DC", VA = "0xAED9DC")]
		public InventoryItemData()
		{
		}
	}
	[Token(Token = "0x20002EE")]
	public enum InventoryItemState
	{
		[Token(Token = "0x40011EF")]
		NotFound,
		[Token(Token = "0x40011F0")]
		Found,
		[Token(Token = "0x40011F1")]
		Disabled
	}
	[Token(Token = "0x20002EF")]
	public class InventoryUpdateListener : RoomBehaviour
	{
		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[SerializeField]
		private bool m_checkConditionOnInitialize;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		[SerializeField]
		private bool m_checkConditionOnInventoryUpdate;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool m_disableOnConditionMet;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x931368", Offset = "0x931368")]
		[SerializeField]
		private InventoryCondition[] m_conditions;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9313B4", Offset = "0x9313B4")]
		[SerializeField]
		private CortopiaEventType m_conditionMetEventType;

		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ScriptableEvent m_onConditionMet;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private UnityEvent m_onConditionMetUnityEvent;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private CortopiaEventType m_conditionNotMetEventType;

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ScriptableEvent m_onConditionNotMet;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UnityEvent m_onConditionNotMetUnityEvent;

		[Token(Token = "0x600179F")]
		[Address(RVA = "0xAEDA3C", Offset = "0xAEDA3C", VA = "0xAEDA3C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0xAEDB18", Offset = "0xAEDB18", VA = "0xAEDB18")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0xAEDBF4", Offset = "0xAEDBF4", VA = "0xAEDBF4", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0xAEDC04", Offset = "0xAEDC04", VA = "0xAEDC04")]
		public void CheckConditions()
		{
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0xAEDF10", Offset = "0xAEDF10", VA = "0xAEDF10")]
		private void OnInventoryUpdated(InventoryItemData itemData)
		{
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0xAEDDD0", Offset = "0xAEDDD0", VA = "0xAEDDD0")]
		private void ConditionMet()
		{
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0xAEDCA4", Offset = "0xAEDCA4", VA = "0xAEDCA4")]
		private void ConditionNotMet()
		{
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0xAEDFC8", Offset = "0xAEDFC8", VA = "0xAEDFC8")]
		private bool IsApplicationPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0xAEDFD0", Offset = "0xAEDFD0", VA = "0xAEDFD0")]
		public InventoryUpdateListener()
		{
		}
	}
	[Token(Token = "0x20002F0")]
	public class InvitationAchievements : MonoBehaviour
	{
		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private InvitationsHandler m_invitationsHandler;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Achievement m_firstFoundAchievement;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private IncrementalAchievement[] m_invitationAchievements;

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0xAEE084", Offset = "0xAEE084", VA = "0xAEE084")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0xAEE1FC", Offset = "0xAEE1FC", VA = "0xAEE1FC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0xAEE374", Offset = "0xAEE374", VA = "0xAEE374")]
		private void OnInvitationFound()
		{
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0xAEE4A0", Offset = "0xAEE4A0", VA = "0xAEE4A0")]
		public InvitationAchievements()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002F1")]
	public class InvitationsDictionary : Dictionary<Cortopia.Scripts.Rooms.RoomType, InvitationGuids>, ISerializationCallbackReceiver
	{
		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private List<Cortopia.Scripts.Rooms.RoomType> m_keys;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private List<InvitationGuids> m_values;

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0xAEEB50", Offset = "0xAEEB50", VA = "0xAEEB50", Slot = "44")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0xAEED48", Offset = "0xAEED48", VA = "0xAEED48", Slot = "45")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0xAEEF80", Offset = "0xAEEF80", VA = "0xAEEF80")]
		public InvitationsDictionary()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002F2")]
	public class InvitationGuids
	{
		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<string> Guids;

		[Token(Token = "0x170002D1")]
		public int Count
		{
			[Token(Token = "0x60017AF")]
			[Address(RVA = "0xAEE500", Offset = "0xAEE500", VA = "0xAEE500")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0xAEE560", Offset = "0xAEE560", VA = "0xAEE560")]
		public InvitationGuids(string guid)
		{
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0xAEE604", Offset = "0xAEE604", VA = "0xAEE604")]
		public InvitationGuids(string[] guids)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002F3")]
	public class InvitationsBiomeDictionary : Dictionary<BiomeType, int>, ISerializationCallbackReceiver
	{
		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private List<BiomeType> m_keys;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private List<int> m_values;

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0xAEE688", Offset = "0xAEE688", VA = "0xAEE688", Slot = "44")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0xAEE878", Offset = "0xAEE878", VA = "0xAEE878", Slot = "45")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0xAEEAB0", Offset = "0xAEEAB0", VA = "0xAEEAB0")]
		public InvitationsBiomeDictionary()
		{
		}
	}
	[Token(Token = "0x20002F4")]
	public class InvitationsHandler : ScriptableObject
	{
		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InvitationsDictionary Invitations;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InvitationsBiomeDictionary InvitationsPerBiome;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private IntVariable m_invitationsFoundVariable;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private IntVariable m_invitationsTotalVariable;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InvitationsDictionary m_foundInvitations;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private InvitationGuids m_filterGuids;

		[Token(Token = "0x170002D2")]
		public IntVariable InvitationsTotalVariable
		{
			[Token(Token = "0x60017B7")]
			[Address(RVA = "0xAEF020", Offset = "0xAEF020", VA = "0xAEF020")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400005A")]
		public event Action OnInvitationFound
		{
			[Token(Token = "0x60017B5")]
			[Address(RVA = "0xAEE110", Offset = "0xAEE110", VA = "0xAEE110")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C01C", Offset = "0x93C01C")]
			add
			{
			}
			[Token(Token = "0x60017B6")]
			[Address(RVA = "0xAEE288", Offset = "0xAEE288", VA = "0xAEE288")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C02C", Offset = "0x93C02C")]
			remove
			{
			}
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0xAEF028", Offset = "0xAEF028", VA = "0xAEF028")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x93C03C", Offset = "0x93C03C")]
		public void OnExitPlayMode()
		{
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0xAEF02C", Offset = "0xAEF02C", VA = "0xAEF02C")]
		public void ResetSaveData()
		{
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0xAEF08C", Offset = "0xAEF08C", VA = "0xAEF08C")]
		public int GetCount()
		{
			return default(int);
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0xAEF1F0", Offset = "0xAEF1F0", VA = "0xAEF1F0")]
		public int GetCount(Cortopia.Scripts.Rooms.RoomType roomType)
		{
			return default(int);
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0xAEB4C4", Offset = "0xAEB4C4", VA = "0xAEB4C4")]
		public int GetCount(BiomeType biomeType)
		{
			return default(int);
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0xAE4FC4", Offset = "0xAE4FC4", VA = "0xAE4FC4")]
		public int GetFoundCount()
		{
			return default(int);
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0xAEF298", Offset = "0xAEF298", VA = "0xAEF298")]
		public int GetFoundCount(Cortopia.Scripts.Rooms.RoomType roomType)
		{
			return default(int);
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0xAEC3F8", Offset = "0xAEC3F8", VA = "0xAEC3F8")]
		public int GetFoundCount(BiomeType biomeType)
		{
			return default(int);
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0xAEF340", Offset = "0xAEF340", VA = "0xAEF340")]
		public void SetFound(string instanceGuid)
		{
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0xAEF6B4", Offset = "0xAEF6B4", VA = "0xAEF6B4")]
		public void Serialize(ref InventoryManager.SaveData saveData)
		{
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0xAEF8F0", Offset = "0xAEF8F0", VA = "0xAEF8F0")]
		public void Deserialize(InventoryManager.SaveData saveData)
		{
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0xAEF3B0", Offset = "0xAEF3B0", VA = "0xAEF3B0")]
		private void InternalSetFound(string instanceGuid)
		{
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0xAEF9D8", Offset = "0xAEF9D8", VA = "0xAEF9D8")]
		public InvitationsHandler()
		{
		}
	}
}
namespace Cortopia.Scripts.Inventories.Items
{
	[Token(Token = "0x20002F5")]
	public class Butterfly : InventoryItem
	{
		[Token(Token = "0x200058C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927C40", Offset = "0x927C40")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x4002071")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Butterfly <>4__this;

			[Token(Token = "0x4002072")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AudioMixerGroup endAudioMixerGroup;

			[Token(Token = "0x4002073")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action onPathCompleted;

			[Token(Token = "0x6002693")]
			[Address(RVA = "0xAF02A4", Offset = "0xAF02A4", VA = "0xAF02A4")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x6002694")]
			[Address(RVA = "0xAF05C0", Offset = "0xAF05C0", VA = "0xAF05C0")]
			internal void <StartSplineTraversal>b__0()
			{
			}
		}

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9314F0", Offset = "0x9314F0")]
		[SerializeField]
		private ButterflyAnimation m_butterflyAnimation;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private BezierSpline m_pickUpSpline;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ParticleSystem m_flyParticles;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject m_pointerInteraction;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x93156C", Offset = "0x93156C")]
		[SerializeField]
		private AudioMixerGroup m_flyMixerGroup;

		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private AudioMixerGroup m_pickupMixerGroup;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private SoundEffectPlayer m_idleSfxPlayer;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource m_flyAudioSource;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private List<AudioSource> m_audioSources;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private IDictionary<string, object> m_analyticsData;

		[Token(Token = "0x170002D3")]
		public ButterflyAnimation ButterflyAnimation
		{
			[Token(Token = "0x60017C5")]
			[Address(RVA = "0xAEFA74", Offset = "0xAEFA74", VA = "0xAEFA74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0xAEFA7C", Offset = "0xAEFA7C", VA = "0xAEFA7C", Slot = "10")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0xAEFBA8", Offset = "0xAEFBA8", VA = "0xAEFBA8", Slot = "8")]
		public override void Deserialize(IReadSave read)
		{
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0xAEFF24", Offset = "0xAEFF24", VA = "0xAEFF24")]
		public void PickupButterfly()
		{
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0xAEFF28", Offset = "0xAEFF28", VA = "0xAEFF28")]
		public void PickupButterfly(PlayableCharacter characterControl)
		{
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0xAF0038", Offset = "0xAF0038", VA = "0xAF0038")]
		public void StartSplineTraversal(InventoryItemState state, BezierSpline spline, AudioMixerGroup endAudioMixerGroup, Action onPathCompleted)
		{
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0xAEFAB0", Offset = "0xAEFAB0", VA = "0xAEFAB0")]
		public void SetPointerInteractableActive(bool active)
		{
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0xAEFE24", Offset = "0xAEFE24", VA = "0xAEFE24")]
		private void PickupTraversalCompleted(AudioMixerGroup endAudioMixerGroup, Action customCompletedEvent)
		{
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0xAEFAE8", Offset = "0xAEFAE8", VA = "0xAEFAE8")]
		private void SetFlyParticlesActive(bool active)
		{
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0xAF02AC", Offset = "0xAF02AC", VA = "0xAF02AC")]
		private void SetAudioMixerGroup(AudioMixerGroup audioMixerGroup)
		{
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0xAF03DC", Offset = "0xAF03DC", VA = "0xAF03DC")]
		public Butterfly()
		{
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0xAF0478", Offset = "0xAF0478", VA = "0xAF0478")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C074", Offset = "0x93C074")]
		private void <PickupButterfly>b__15_0()
		{
		}
	}
	[Token(Token = "0x20002F6")]
	public class Invitation : InventoryItem
	{
		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9315F8", Offset = "0x9315F8")]
		[SerializeField]
		private float m_tweenDuration;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private bool m_usePickupJump;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float m_jumpForce;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private int m_numberOfJumps;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private UnityEvent m_onTweenCompleted;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x931684", Offset = "0x931684")]
		[SerializeField]
		private int m_roomSortIndex;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Sequence m_pickupSequence;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private IDictionary<string, object> m_analyticsData;

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0xAF0600", Offset = "0xAF0600", VA = "0xAF0600")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0xAF0620", Offset = "0xAF0620", VA = "0xAF0620", Slot = "11")]
		public override void Pickup()
		{
		}

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0xAF0734", Offset = "0xAF0734", VA = "0xAF0734")]
		public void ReleaseInvitation(Transform newParent)
		{
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0xAF0988", Offset = "0xAF0988", VA = "0xAF0988")]
		private void SetFallSequence()
		{
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0xAF0820", Offset = "0xAF0820", VA = "0xAF0820")]
		private void SetJumpSequence()
		{
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0xAF0AE8", Offset = "0xAF0AE8", VA = "0xAF0AE8")]
		public Invitation()
		{
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0xAF0B94", Offset = "0xAF0B94", VA = "0xAF0B94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C084", Offset = "0x93C084")]
		private void <Pickup>b__9_0()
		{
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0xAF0CF4", Offset = "0xAF0CF4", VA = "0xAF0CF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C094", Offset = "0x93C094")]
		private void <ReleaseInvitation>b__10_0()
		{
		}
	}
	[Token(Token = "0x20002F7")]
	public class RoastedRabbit : InventoryItem
	{
		[Token(Token = "0x200058D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927C50", Offset = "0x927C50")]
		private sealed class <JumpToGround>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002074")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002075")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002076")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RoastedRabbit <>4__this;

			[Token(Token = "0x170004B0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002698")]
				[Address(RVA = "0xAF0FEC", Offset = "0xAF0FEC", VA = "0xAF0FEC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004B1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600269A")]
				[Address(RVA = "0xAF105C", Offset = "0xAF105C", VA = "0xAF105C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002695")]
			[Address(RVA = "0xAF0DFC", Offset = "0xAF0DFC", VA = "0xAF0DFC")]
			[DebuggerHidden]
			public <JumpToGround>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6002696")]
			[Address(RVA = "0xAF0E3C", Offset = "0xAF0E3C", VA = "0xAF0E3C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002697")]
			[Address(RVA = "0xAF0E40", Offset = "0xAF0E40", VA = "0xAF0E40", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002699")]
			[Address(RVA = "0xAF0FF4", Offset = "0xAF0FF4", VA = "0xAF0FF4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float m_jumpPower;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private int m_numberOfJumps;

		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float m_tweenDuration;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float m_tweenDelay;

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0xAF0D2C", Offset = "0xAF0D2C", VA = "0xAF0D2C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0xAF0D34", Offset = "0xAF0D34", VA = "0xAF0D34")]
		public void EnableRoastedRabbit()
		{
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0xAF0D88", Offset = "0xAF0D88", VA = "0xAF0D88")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93C0A4", Offset = "0x93C0A4")]
		private IEnumerator JumpToGround()
		{
			return null;
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0xAF0E28", Offset = "0xAF0E28", VA = "0xAF0E28")]
		public RoastedRabbit()
		{
		}
	}
}
namespace Cortopia.Scripts.Grab
{
	[Token(Token = "0x20002F8")]
	public enum CoordinateSystem
	{
		[Token(Token = "0x4001222")]
		World,
		[Token(Token = "0x4001223")]
		Local
	}
	[Token(Token = "0x20002F9")]
	public enum GrabHandle
	{
		[Token(Token = "0x4001225")]
		Primary,
		[Token(Token = "0x4001226")]
		Secondary
	}
	[Token(Token = "0x20002FA")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x926C3C", Offset = "0x926C3C")]
	public class Grabbable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200058E")]
		public class GrabEvent : UnityEvent<Grabber>
		{
			[Token(Token = "0x600269B")]
			[Address(RVA = "0xB2E498", Offset = "0xB2E498", VA = "0xB2E498")]
			public GrabEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200058F")]
		public class DetailedGrabEvent : UnityEvent<Grabber, Vector3, Vector3>
		{
			[Token(Token = "0x600269C")]
			[Address(RVA = "0xB2E4E8", Offset = "0xB2E4E8", VA = "0xB2E4E8")]
			public DetailedGrabEvent()
			{
			}
		}

		[Token(Token = "0x4001227")]
		private const string InteractableShaderName = "Cortopia/Interactable";

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int sm_fadeProperty;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int sm_panProperty;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int sm_rimProperty;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_lockXPosition;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_lockYPosition;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[SerializeField]
		private bool m_lockZPosition;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private Vector3 m_minPositionRange;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Vector3 m_maxPositionRange;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private CoordinateSystem m_positionCoordinateSystem;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool m_lockRotation;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x931780", Offset = "0x931780")]
		private Transform m_grabTransform;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool m_allowDualHandGrab;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[SerializeField]
		private bool m_applyMotionWhenReleased;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
		[SerializeField]
		private bool m_hasBreakDistance;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float m_breakDistance;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private bool m_allowAnyPointGrab;

		[Token(Token = "0x4001238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[SerializeField]
		private bool m_lockHandAtGrabTransform;

		[Token(Token = "0x4001239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Collider m_collider;

		[Token(Token = "0x400123A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Rigidbody m_rigidbody;

		[Token(Token = "0x400123B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GrabEvent m_onGrabBegin;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GrabEvent m_onGrab;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private DetailedGrabEvent m_onGrabEnd;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private HapticClip m_onGrabHapticClip;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private HapticClip m_onTickHapticClip;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private float m_hapticTickDistanceSqr;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private Renderer m_renderer;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Material m_material;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 m_lastPosition;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Quaternion m_grabBeginRotation;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float m_lastAngle;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Grabber m_activeGrabber;

		[Token(Token = "0x4001247")]
		private const float VelocityScale = 5f;

		[Token(Token = "0x4001248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9318BC", Offset = "0x9318BC")]
		private bool <IsLocked>k__BackingField;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9318CC", Offset = "0x9318CC")]
		private bool <IgnorePositionUpdates>k__BackingField;

		[Token(Token = "0x400124A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9318DC", Offset = "0x9318DC")]
		private bool <IgnoreRotationUpdates>k__BackingField;

		[Token(Token = "0x400124B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9318EC", Offset = "0x9318EC")]
		private Vector3 <TargetPosition>k__BackingField;

		[Token(Token = "0x400124C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9318FC", Offset = "0x9318FC")]
		private Quaternion <TargetRotation>k__BackingField;

		[Token(Token = "0x400124D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93190C", Offset = "0x93190C")]
		private float <BreakDistanceSqr>k__BackingField;

		[Token(Token = "0x400124E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Vector3 m_originalGrabPosition;

		[Token(Token = "0x400124F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Quaternion m_originalGrabRotation;

		[Token(Token = "0x170002D4")]
		public bool IsLocked
		{
			[Token(Token = "0x60017DD")]
			[Address(RVA = "0xB2C1FC", Offset = "0xB2C1FC", VA = "0xB2C1FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C108", Offset = "0x93C108")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017DE")]
			[Address(RVA = "0xB2C204", Offset = "0xB2C204", VA = "0xB2C204")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C118", Offset = "0x93C118")]
			private set
			{
			}
		}

		[Token(Token = "0x170002D5")]
		public Vector3 MinPositionRange
		{
			[Token(Token = "0x60017DF")]
			[Address(RVA = "0xB2BBE8", Offset = "0xB2BBE8", VA = "0xB2BBE8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002D6")]
		public Vector3 MaxPositionRange
		{
			[Token(Token = "0x60017E0")]
			[Address(RVA = "0xB2BBDC", Offset = "0xB2BBDC", VA = "0xB2BBDC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002D7")]
		public bool IgnorePositionUpdates
		{
			[Token(Token = "0x60017E1")]
			[Address(RVA = "0xB2C210", Offset = "0xB2C210", VA = "0xB2C210")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C128", Offset = "0x93C128")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017E2")]
			[Address(RVA = "0xB2C218", Offset = "0xB2C218", VA = "0xB2C218")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C138", Offset = "0x93C138")]
			set
			{
			}
		}

		[Token(Token = "0x170002D8")]
		public bool IgnoreRotationUpdates
		{
			[Token(Token = "0x60017E3")]
			[Address(RVA = "0xB2C224", Offset = "0xB2C224", VA = "0xB2C224")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C148", Offset = "0x93C148")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60017E4")]
			[Address(RVA = "0xB2C22C", Offset = "0xB2C22C", VA = "0xB2C22C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C158", Offset = "0x93C158")]
			set
			{
			}
		}

		[Token(Token = "0x170002D9")]
		public Vector3 TargetPosition
		{
			[Token(Token = "0x60017E5")]
			[Address(RVA = "0xB2C238", Offset = "0xB2C238", VA = "0xB2C238")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C168", Offset = "0x93C168")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60017E6")]
			[Address(RVA = "0xB2C244", Offset = "0xB2C244", VA = "0xB2C244")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C178", Offset = "0x93C178")]
			private set
			{
			}
		}

		[Token(Token = "0x170002DA")]
		public Quaternion TargetRotation
		{
			[Token(Token = "0x60017E7")]
			[Address(RVA = "0xB2C250", Offset = "0xB2C250", VA = "0xB2C250")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C188", Offset = "0x93C188")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x60017E8")]
			[Address(RVA = "0xB2C25C", Offset = "0xB2C25C", VA = "0xB2C25C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C198", Offset = "0x93C198")]
			private set
			{
			}
		}

		[Token(Token = "0x170002DB")]
		public bool HasBreakDistance
		{
			[Token(Token = "0x60017E9")]
			[Address(RVA = "0xB2C268", Offset = "0xB2C268", VA = "0xB2C268")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002DC")]
		public float BreakDistanceSqr
		{
			[Token(Token = "0x60017EA")]
			[Address(RVA = "0xB2C270", Offset = "0xB2C270", VA = "0xB2C270")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C1A8", Offset = "0x93C1A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60017EB")]
			[Address(RVA = "0xB2C278", Offset = "0xB2C278", VA = "0xB2C278")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C1B8", Offset = "0x93C1B8")]
			private set
			{
			}
		}

		[Token(Token = "0x170002DD")]
		public Vector3 GrabPosition
		{
			[Token(Token = "0x60017EC")]
			[Address(RVA = "0xB2C280", Offset = "0xB2C280", VA = "0xB2C280")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170002DE")]
		public Quaternion GrabRotation
		{
			[Token(Token = "0x60017ED")]
			[Address(RVA = "0xB2C2B0", Offset = "0xB2C2B0", VA = "0xB2C2B0")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x170002DF")]
		public Transform GrabTransform
		{
			[Token(Token = "0x60017EE")]
			[Address(RVA = "0xB2C2E0", Offset = "0xB2C2E0", VA = "0xB2C2E0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E0")]
		public bool LockHandWhileGrabbing
		{
			[Token(Token = "0x60017EF")]
			[Address(RVA = "0xB2C2E8", Offset = "0xB2C2E8", VA = "0xB2C2E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002E1")]
		public Grabber Grabber
		{
			[Token(Token = "0x60017F0")]
			[Address(RVA = "0xB2C318", Offset = "0xB2C318", VA = "0xB2C318")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E2")]
		public Rigidbody Rigidbody
		{
			[Token(Token = "0x60017F1")]
			[Address(RVA = "0xB2C39C", Offset = "0xB2C39C", VA = "0xB2C39C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0xB2C3A4", Offset = "0xB2C3A4", VA = "0xB2C3A4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0xB2C578", Offset = "0xB2C578", VA = "0xB2C578")]
		private void Start()
		{
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0xB2C79C", Offset = "0xB2C79C", VA = "0xB2C79C")]
		public void DestroyGrabbable()
		{
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0xB2C830", Offset = "0xB2C830", VA = "0xB2C830")]
		public void AddGrabBeginListener(UnityAction<Grabber> action)
		{
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0xB2C8A0", Offset = "0xB2C8A0", VA = "0xB2C8A0")]
		public void RemoveGrabBeginListener(UnityAction<Grabber> action)
		{
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0xB2C910", Offset = "0xB2C910", VA = "0xB2C910")]
		public void AddGrabListener(UnityAction<Grabber> action)
		{
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0xB2C980", Offset = "0xB2C980", VA = "0xB2C980")]
		public void RemoveGrabListener(UnityAction<Grabber> action)
		{
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0xB2C9F0", Offset = "0xB2C9F0", VA = "0xB2C9F0")]
		public void AddGrabEndListener(UnityAction<Grabber, Vector3, Vector3> action)
		{
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0xB2CA60", Offset = "0xB2CA60", VA = "0xB2CA60")]
		public void RemoveGrabEndListener(UnityAction<Grabber, Vector3, Vector3> action)
		{
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0xB2CAD0", Offset = "0xB2CAD0", VA = "0xB2CAD0")]
		public void SetActive(bool isActive)
		{
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0xB2CE4C", Offset = "0xB2CE4C", VA = "0xB2CE4C")]
		public void SetLocked(bool isLocked)
		{
		}

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0xB2CE94", Offset = "0xB2CE94", VA = "0xB2CE94")]
		public void SetBreak(bool hasBreakDistance, float breakDistance)
		{
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0xB2CEAC", Offset = "0xB2CEAC", VA = "0xB2CEAC")]
		public void BeginGrab(Grabber activatedGrabber)
		{
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0xB2D4C8", Offset = "0xB2D4C8", VA = "0xB2D4C8")]
		public void Grab(Grabber activatedGrabber)
		{
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0xB2DF24", Offset = "0xB2DF24", VA = "0xB2DF24")]
		public void EndGrab(Grabber activatedGrabber, Vector3 velocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0xB2E260", Offset = "0xB2E260", VA = "0xB2E260")]
		public void SetApplyMotionWhenReleased(bool value)
		{
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0xB2E26C", Offset = "0xB2E26C", VA = "0xB2E26C")]
		public void SetPositionLimits(Vector3 minLimits, Vector3 maxLimits)
		{
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0xB2E27C", Offset = "0xB2E27C", VA = "0xB2E27C")]
		public void SetPositionLocked(bool shouldLockAllAxis)
		{
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0xB2E290", Offset = "0xB2E290", VA = "0xB2E290")]
		public void SetRotationLocked(bool setLocked)
		{
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0xB2D5D0", Offset = "0xB2D5D0", VA = "0xB2D5D0")]
		private void TryRotateToRotation(Quaternion handRotation)
		{
		}

		[Token(Token = "0x6001806")]
		[Address(RVA = "0xB2D790", Offset = "0xB2D790", VA = "0xB2D790")]
		private void TryMoveToPosition(Vector3 handPosition)
		{
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0xB2DD6C", Offset = "0xB2DD6C", VA = "0xB2DD6C")]
		private void UpdateHaptic(Grabber grabber)
		{
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0xB2E29C", Offset = "0xB2E29C", VA = "0xB2E29C")]
		public void SetHoverMaterial(bool isHovering)
		{
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0xB2E3B0", Offset = "0xB2E3B0", VA = "0xB2E3B0")]
		public Grabbable()
		{
		}
	}
	[Token(Token = "0x20002FB")]
	public class Grabber : MonoBehaviour
	{
		[Token(Token = "0x4001250")]
		private const int MaxNodes = 20;

		[Token(Token = "0x4001251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int sm_grabbableLayer;

		[Token(Token = "0x4001252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x93191C", Offset = "0x93191C")]
		[SerializeField]
		private bool m_hideTrackerPointOnHover;

		[Token(Token = "0x4001253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_useGrabShape;

		[Token(Token = "0x4001254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[SerializeField]
		private bool m_enableGrabParticles;

		[Token(Token = "0x4001255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Collider[] m_grabVolumes;

		[Token(Token = "0x4001256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_handCenter;

		[Token(Token = "0x4001257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9319A8", Offset = "0x9319A8")]
		[SerializeField]
		private GameObject m_pointShape;

		[Token(Token = "0x4001258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Renderer m_grabShape;

		[Token(Token = "0x4001259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color m_defaultColor;

		[Token(Token = "0x400125A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Color m_highlightColor;

		[Token(Token = "0x400125B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float m_distanceToCenterOfHand;

		[Token(Token = "0x400125C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool m_shouldReleaseGrabbable;

		[Token(Token = "0x400125D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		private bool m_isGrabbing;

		[Token(Token = "0x400125E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
		private bool m_isGrabVolumesActive;

		[Token(Token = "0x400125F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Grabbable m_grabbable;

		[Token(Token = "0x4001260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private IDictionary<Grabbable, int> m_grabbables;

		[Token(Token = "0x4001261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private LinkedList<PositionRotation> m_previousPositionAndRotations;

		[Token(Token = "0x4001262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private PositionRotation m_deltaPositionAndRotation;

		[Token(Token = "0x4001263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Transform m_grabShapeOriginalParent;

		[Token(Token = "0x4001264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x931A24", Offset = "0x931A24")]
		private Vector3 <PreviousPosition>k__BackingField;

		[Token(Token = "0x4001265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x931A34", Offset = "0x931A34")]
		private Vector3 <GrabBeginFoward>k__BackingField;

		[Token(Token = "0x4001266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x931A44", Offset = "0x931A44")]
		private PointerType <PointerType>k__BackingField;

		[Token(Token = "0x4001267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x931A54", Offset = "0x931A54")]
		private Grabbable <HoveredGrabbable>k__BackingField;

		[Token(Token = "0x170002E3")]
		public Vector3 PreviousPosition
		{
			[Token(Token = "0x600180B")]
			[Address(RVA = "0xB2E5DC", Offset = "0xB2E5DC", VA = "0xB2E5DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C1C8", Offset = "0x93C1C8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600180C")]
			[Address(RVA = "0xB2E5E8", Offset = "0xB2E5E8", VA = "0xB2E5E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C1D8", Offset = "0x93C1D8")]
			set
			{
			}
		}

		[Token(Token = "0x170002E4")]
		public Vector3 GrabBeginFoward
		{
			[Token(Token = "0x600180D")]
			[Address(RVA = "0xB2E5F4", Offset = "0xB2E5F4", VA = "0xB2E5F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C1E8", Offset = "0x93C1E8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600180E")]
			[Address(RVA = "0xB2E600", Offset = "0xB2E600", VA = "0xB2E600")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C1F8", Offset = "0x93C1F8")]
			private set
			{
			}
		}

		[Token(Token = "0x170002E5")]
		public PointerType PointerType
		{
			[Token(Token = "0x600180F")]
			[Address(RVA = "0xB2D4C0", Offset = "0xB2D4C0", VA = "0xB2D4C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C208", Offset = "0x93C208")]
			get
			{
				return default(PointerType);
			}
			[Token(Token = "0x6001810")]
			[Address(RVA = "0xB2E60C", Offset = "0xB2E60C", VA = "0xB2E60C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C218", Offset = "0x93C218")]
			private set
			{
			}
		}

		[Token(Token = "0x170002E6")]
		public Transform GrabShapeTransform
		{
			[Token(Token = "0x6001811")]
			[Address(RVA = "0xB2D490", Offset = "0xB2D490", VA = "0xB2D490")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E7")]
		public Grabbable HoveredGrabbable
		{
			[Token(Token = "0x6001812")]
			[Address(RVA = "0xB2CD60", Offset = "0xB2CD60", VA = "0xB2CD60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C228", Offset = "0x93C228")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001813")]
			[Address(RVA = "0xB2E614", Offset = "0xB2E614", VA = "0xB2E614")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C238", Offset = "0x93C238")]
			private set
			{
			}
		}

		[Token(Token = "0x170002E8")]
		public bool HasGrabbable
		{
			[Token(Token = "0x6001814")]
			[Address(RVA = "0xB2E61C", Offset = "0xB2E61C", VA = "0xB2E61C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002E9")]
		public Transform HandCenter
		{
			[Token(Token = "0x6001815")]
			[Address(RVA = "0xB2E68C", Offset = "0xB2E68C", VA = "0xB2E68C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400005B")]
		public event Action OnGrab
		{
			[Token(Token = "0x6001816")]
			[Address(RVA = "0xB2BD68", Offset = "0xB2BD68", VA = "0xB2BD68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C248", Offset = "0x93C248")]
			add
			{
			}
			[Token(Token = "0x6001817")]
			[Address(RVA = "0xB2C014", Offset = "0xB2C014", VA = "0xB2C014")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C258", Offset = "0x93C258")]
			remove
			{
			}
		}

		[Token(Token = "0x1400005C")]
		public event Action OnRelease
		{
			[Token(Token = "0x6001818")]
			[Address(RVA = "0xB2BE54", Offset = "0xB2BE54", VA = "0xB2BE54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C268", Offset = "0x93C268")]
			add
			{
			}
			[Token(Token = "0x6001819")]
			[Address(RVA = "0xB2C100", Offset = "0xB2C100", VA = "0xB2C100")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C278", Offset = "0x93C278")]
			remove
			{
			}
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0xB2E694", Offset = "0xB2E694", VA = "0xB2E694")]
		private void Awake()
		{
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0xB2E750", Offset = "0xB2E750", VA = "0xB2E750")]
		private void Start()
		{
		}

		[Token(Token = "0x600181C")]
		[Address(RVA = "0xB2E9C8", Offset = "0xB2E9C8", VA = "0xB2E9C8")]
		private void Update()
		{
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0xB2EBBC", Offset = "0xB2EBBC", VA = "0xB2EBBC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0xB2ED54", Offset = "0xB2ED54", VA = "0xB2ED54")]
		public void SetActive(bool active)
		{
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0xB2ED88", Offset = "0xB2ED88", VA = "0xB2ED88")]
		public void DropGrabbables()
		{
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0xB2C3DC", Offset = "0xB2C3DC", VA = "0xB2C3DC")]
		public void DropGrabbable(Grabbable grabbable, bool clearGrabbables)
		{
		}

		[Token(Token = "0x6001821")]
		[Address(RVA = "0xB2EFFC", Offset = "0xB2EFFC", VA = "0xB2EFFC")]
		public void TryGrab()
		{
		}

		[Token(Token = "0x6001822")]
		[Address(RVA = "0xB2F164", Offset = "0xB2F164", VA = "0xB2F164")]
		private Grabbable GetValidGrabbable()
		{
			return null;
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0xB2D184", Offset = "0xB2D184", VA = "0xB2D184")]
		public void TryRelease()
		{
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0xB2EB2C", Offset = "0xB2EB2C", VA = "0xB2EB2C")]
		private void ReleaseGrabbable()
		{
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0xB2F820", Offset = "0xB2F820", VA = "0xB2F820")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0xB2FD94", Offset = "0xB2FD94", VA = "0xB2FD94")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6001827")]
		[Address(RVA = "0xB2EE94", Offset = "0xB2EE94", VA = "0xB2EE94")]
		private void SetGrabVolumesActive(bool enabled)
		{
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0xB2F2E8", Offset = "0xB2F2E8", VA = "0xB2F2E8")]
		private void GrabShapeStart()
		{
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0xB2F5A4", Offset = "0xB2F5A4", VA = "0xB2F5A4")]
		private void GrabShapeEnd()
		{
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0xB2FACC", Offset = "0xB2FACC", VA = "0xB2FACC")]
		private void EnableHover()
		{
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0xB2CD68", Offset = "0xB2CD68", VA = "0xB2CD68")]
		public void DisableHover()
		{
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0xB300CC", Offset = "0xB300CC", VA = "0xB300CC")]
		public Grabber()
		{
		}
	}
	[Token(Token = "0x20002FC")]
	public class GrabPoser : MonoBehaviour
	{
		[Token(Token = "0x400126A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Grabber m_grabber;

		[Token(Token = "0x600182D")]
		[Address(RVA = "0xB2BC94", Offset = "0xB2BC94", VA = "0xB2BC94")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0xB2BF40", Offset = "0xB2BF40", VA = "0xB2BF40")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600182F")]
		[Address(RVA = "0xB2C1EC", Offset = "0xB2C1EC", VA = "0xB2C1EC", Slot = "4")]
		protected virtual void OnGrabBegin()
		{
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0xB2C1F0", Offset = "0xB2C1F0", VA = "0xB2C1F0", Slot = "5")]
		protected virtual void OnGrabEnd()
		{
		}

		[Token(Token = "0x6001831")]
		[Address(RVA = "0xB2C1F4", Offset = "0xB2C1F4", VA = "0xB2C1F4")]
		public GrabPoser()
		{
		}
	}
	[Token(Token = "0x20002FD")]
	public class OculusGrabPoser : GrabPoser
	{
		[Token(Token = "0x400126B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PlayerHandAnimator m_playerHandAnimator;

		[Token(Token = "0x6001832")]
		[Address(RVA = "0xB3014C", Offset = "0xB3014C", VA = "0xB3014C", Slot = "4")]
		protected override void OnGrabBegin()
		{
		}

		[Token(Token = "0x6001833")]
		[Address(RVA = "0xB3017C", Offset = "0xB3017C", VA = "0xB3017C", Slot = "5")]
		protected override void OnGrabEnd()
		{
		}

		[Token(Token = "0x6001834")]
		[Address(RVA = "0xB301AC", Offset = "0xB301AC", VA = "0xB301AC")]
		public OculusGrabPoser()
		{
		}
	}
	[Token(Token = "0x20002FE")]
	public class SteamGrabPoser : GrabPoser
	{
		[Token(Token = "0x6001835")]
		[Address(RVA = "0xB301B4", Offset = "0xB301B4", VA = "0xB301B4")]
		public SteamGrabPoser()
		{
		}
	}
	[Token(Token = "0x20002FF")]
	public class ConstrainedLever : MonoBehaviour
	{
		[Token(Token = "0x400126C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Grabbable m_grabbable;

		[Token(Token = "0x400126D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GrabEvent m_onGrabStartEvent;

		[Token(Token = "0x400126E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GrabEvent m_onGrabEvent;

		[Token(Token = "0x400126F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GrabEvent m_onGrabEndEvent;

		[Token(Token = "0x4001270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool m_resetOnRelease;

		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_leverProgress;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 m_defaultPosition;

		[Token(Token = "0x6001836")]
		[Address(RVA = "0xB2B8C4", Offset = "0xB2B8C4", VA = "0xB2B8C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001837")]
		[Address(RVA = "0xB2B908", Offset = "0xB2B908", VA = "0xB2B908")]
		public void StartGrab()
		{
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0xB2BA70", Offset = "0xB2BA70", VA = "0xB2BA70")]
		public void Grab()
		{
		}

		[Token(Token = "0x6001839")]
		[Address(RVA = "0xB2BAE8", Offset = "0xB2BAE8", VA = "0xB2BAE8")]
		public void EndGrab()
		{
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0xB2B980", Offset = "0xB2B980", VA = "0xB2B980")]
		private void CalculateLeverProgress()
		{
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0xB2BBF4", Offset = "0xB2BBF4", VA = "0xB2BBF4")]
		public ConstrainedLever()
		{
		}
	}
}
namespace Cortopia.Scripts.DebugUtils
{
	[Token(Token = "0x2000300")]
	public class DebugInput : IPlatformInput, IPlatformService
	{
		[Token(Token = "0x4001273")]
		private const string Horizontal = "Horizontal";

		[Token(Token = "0x4001274")]
		private const string Vertical = "Vertical";

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly IReadOnlyDictionary<ButtonType, KeyCode> m_buttonMappings;

		[Token(Token = "0x170002EA")]
		public InputDeviceType InputDeviceType
		{
			[Token(Token = "0x600183C")]
			[Address(RVA = "0xB2B128", Offset = "0xB2B128", VA = "0xB2B128", Slot = "4")]
			get
			{
				return default(InputDeviceType);
			}
		}

		[Token(Token = "0x170002EB")]
		public IEnumerable<ButtonType> MappedButtons
		{
			[Token(Token = "0x600183D")]
			[Address(RVA = "0xB2B130", Offset = "0xB2B130", VA = "0xB2B130", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EC")]
		public bool UseStickAxisPlayerMovement
		{
			[Token(Token = "0x600183E")]
			[Address(RVA = "0xB2B1E8", Offset = "0xB2B1E8", VA = "0xB2B1E8", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600183F")]
		[Address(RVA = "0xB2B1F0", Offset = "0xB2B1F0", VA = "0xB2B1F0", Slot = "14")]
		public IPromise Initialize()
		{
			return null;
		}

		[Token(Token = "0x6001840")]
		[Address(RVA = "0xB2B250", Offset = "0xB2B250", VA = "0xB2B250", Slot = "8")]
		public Vector2 GetAxis(AxisType axis)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001841")]
		[Address(RVA = "0xB2B35C", Offset = "0xB2B35C", VA = "0xB2B35C", Slot = "7")]
		public bool Any()
		{
			return default(bool);
		}

		[Token(Token = "0x6001842")]
		[Address(RVA = "0xB2B364", Offset = "0xB2B364", VA = "0xB2B364", Slot = "9")]
		public float GetTrigger(TriggerType trigger)
		{
			return default(float);
		}

		[Token(Token = "0x6001843")]
		[Address(RVA = "0xB2B36C", Offset = "0xB2B36C", VA = "0xB2B36C", Slot = "10")]
		public bool GetButtonDown(ButtonType button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001844")]
		[Address(RVA = "0xB2B43C", Offset = "0xB2B43C", VA = "0xB2B43C", Slot = "11")]
		public bool GetButton(ButtonType button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001845")]
		[Address(RVA = "0xB2B50C", Offset = "0xB2B50C", VA = "0xB2B50C", Slot = "12")]
		public bool GetButtonUp(ButtonType button)
		{
			return default(bool);
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0xB2B5DC", Offset = "0xB2B5DC", VA = "0xB2B5DC", Slot = "13")]
		public bool GetTouch(Cortopia.Scripts.Platform.Input.TouchType touch)
		{
			return default(bool);
		}

		[Token(Token = "0x6001847")]
		[Address(RVA = "0xB2B5E4", Offset = "0xB2B5E4", VA = "0xB2B5E4", Slot = "15")]
		public void Shutdown()
		{
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0xB2B5E8", Offset = "0xB2B5E8", VA = "0xB2B5E8")]
		public DebugInput()
		{
		}
	}
	[Token(Token = "0x2000301")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x926CA0", Offset = "0x926CA0")]
	public class DebugInputOptions : ScriptableObject
	{
		[Token(Token = "0x2000590")]
		private struct DefaultValues
		{
			[Token(Token = "0x4002077")]
			public const float CameraZoomSpeed = 60f;

			[Token(Token = "0x4002078")]
			public const float CameraMoveSpeed = 3f;

			[Token(Token = "0x4002079")]
			public const float CameraMoveSpeedWASD = 10f;

			[Token(Token = "0x400207A")]
			public const float MinLookY = -60f;

			[Token(Token = "0x400207B")]
			public const float MaxLookY = 80f;
		}

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float CameraZoomSpeed;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float CameraMoveSpeed;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CameraMoveSpeedWASD;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float MinLookY;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float MaxLookY;

		[Token(Token = "0x6001849")]
		[Address(RVA = "0xB2B760", Offset = "0xB2B760", VA = "0xB2B760")]
		public DebugInputOptions()
		{
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0xB2B798", Offset = "0xB2B798", VA = "0xB2B798")]
		public DebugInputOptions(float cameraZoomSpeed, float cameraMoveSpeed, float cameraMoveSpeedWASD, float minLookY, float maxLookY)
		{
		}
	}
	[Token(Token = "0x2000302")]
	public interface IDebugGrabbable
	{
		[Token(Token = "0x600184B")]
		void OnDebugGrab();

		[Token(Token = "0x600184C")]
		void OnDebugRelease();
	}
	[Token(Token = "0x2000303")]
	public class RoomInitializationDebug : RoomBehaviour
	{
		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[SerializeField]
		private bool m_loopOnInitialization;

		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int m_loops;

		[Token(Token = "0x600184D")]
		[Address(RVA = "0xB2B7F4", Offset = "0xB2B7F4", VA = "0xB2B7F4")]
		private void Start()
		{
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0xB2B89C", Offset = "0xB2B89C", VA = "0xB2B89C", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0xB2B804", Offset = "0xB2B804", VA = "0xB2B804")]
		private void RunLoop()
		{
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0xB2B8AC", Offset = "0xB2B8AC", VA = "0xB2B8AC")]
		public RoomInitializationDebug()
		{
		}
	}
	[Token(Token = "0x2000304")]
	public class CortopiaDebug
	{
		[Token(Token = "0x6001851")]
		[Address(RVA = "0xB2AF20", Offset = "0xB2AF20", VA = "0xB2AF20")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x93C288", Offset = "0x93C288")]
		public static void DrawPath(NavMeshPath path, Color color, float duration)
		{
		}

		[Token(Token = "0x6001852")]
		[Address(RVA = "0xB2B120", Offset = "0xB2B120", VA = "0xB2B120")]
		public CortopiaDebug()
		{
		}
	}
}
namespace Cortopia.Scripts.Cutscenes
{
	[Token(Token = "0x2000305")]
	public class CharacterCutscenePlayer : RoomBehaviour
	{
		[Token(Token = "0x400127D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[SerializeField]
		private bool m_playOnCharacterSpawned;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		[SerializeField]
		private bool m_playOnRoomInitialization;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected PlayableDirector m_director;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CharacterData[] m_characterData;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x931B54", Offset = "0x931B54")]
		[SerializeField]
		private InteractableObject[] m_interactables;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x931BA0", Offset = "0x931BA0")]
		[SerializeField]
		private bool m_disableNavAgent;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[SerializeField]
		private bool m_initializeAnimatedScale;

		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x931BFC", Offset = "0x931BFC")]
		[SerializeField]
		private bool m_reenableNavAgent;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		[SerializeField]
		private bool m_finalizeAnimatedScale;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x931C58", Offset = "0x931C58")]
		[SerializeField]
		private CortopiaEventType m_cutsceneStartedEventType;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ScriptableEvent m_cutsceneStartedEvent;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private PlayableCharacterEvent m_cutsceneStartedUnityEvent;

		[Token(Token = "0x4001289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private CortopiaEventType m_cutsceneFinishedEventType;

		[Token(Token = "0x400128A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private ScriptableEvent m_cutsceneFinishedEvent;

		[Token(Token = "0x400128B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private PlayableCharacterEvent m_cutsceneFinishedUnityEvent;

		[Token(Token = "0x400128C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private PlayableCharacter m_eventCharacterControl;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private EventToken m_onAllCharactersSpawnedEventToken;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool m_isApplicationQuitting;

		[Token(Token = "0x6001853")]
		[Address(RVA = "0xB287BC", Offset = "0xB287BC", VA = "0xB287BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0xB2888C", Offset = "0xB2888C", VA = "0xB2888C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001855")]
		[Address(RVA = "0xB2890C", Offset = "0xB2890C", VA = "0xB2890C")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0xB28918", Offset = "0xB28918", VA = "0xB28918", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0xB28930", Offset = "0xB28930", VA = "0xB28930", Slot = "6")]
		public virtual void PlayCutscene()
		{
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0xB29098", Offset = "0xB29098", VA = "0xB29098")]
		public void ForceStopCutscene()
		{
		}

		[Token(Token = "0x6001859")]
		[Address(RVA = "0xB290C8", Offset = "0xB290C8", VA = "0xB290C8")]
		public void SetDirector(PlayableDirector newDirector)
		{
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0xB28B24", Offset = "0xB28B24", VA = "0xB28B24")]
		private void SetCharacterBindings()
		{
		}

		[Token(Token = "0x600185B")]
		[Address(RVA = "0xB290D0", Offset = "0xB290D0", VA = "0xB290D0")]
		private void OnDirectorStopped(PlayableDirector director)
		{
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0xB2956C", Offset = "0xB2956C", VA = "0xB2956C")]
		private void OnAllCharactersSpawned(CharacterEvents.AllCharactersSpawnedEvent eventData)
		{
		}

		[Token(Token = "0x600185D")]
		[Address(RVA = "0xB295F4", Offset = "0xB295F4", VA = "0xB295F4")]
		private bool IsCharacterDataEmpty()
		{
			return default(bool);
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0xB28FE4", Offset = "0xB28FE4", VA = "0xB28FE4")]
		private void SetInteractablesActive(bool active)
		{
		}

		[Token(Token = "0x600185F")]
		[Address(RVA = "0xB29668", Offset = "0xB29668", VA = "0xB29668")]
		public CharacterCutscenePlayer()
		{
		}
	}
	[Token(Token = "0x2000306")]
	public class FallProp : MonoBehaviour
	{
		[Token(Token = "0x2000591")]
		public enum PropSize
		{
			[Token(Token = "0x400207D")]
			Small,
			[Token(Token = "0x400207E")]
			Large
		}

		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PropSize m_propSize;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_speed;

		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool m_isFalling;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_targetTravelDistance;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float m_currentTravelDistance;

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private FallPropLauncher m_myPooler;

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MathUtils.MinMax m_rotationSpeedRange;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 m_randomRotationDirection;

		[Token(Token = "0x170002ED")]
		public PropSize Size
		{
			[Token(Token = "0x6001860")]
			[Address(RVA = "0xB29734", Offset = "0xB29734", VA = "0xB29734")]
			get
			{
				return default(PropSize);
			}
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0xB2973C", Offset = "0xB2973C", VA = "0xB2973C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001862")]
		[Address(RVA = "0xB299E8", Offset = "0xB299E8", VA = "0xB299E8")]
		public void InitilizeFallProp(float travelDistance, FallPropLauncher pooler)
		{
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0xB299F8", Offset = "0xB299F8", VA = "0xB299F8")]
		public void Launch(Vector3 startingPosition, float speed, Vector3 rotationSpeed, Vector3 scale)
		{
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0xB29B84", Offset = "0xB29B84", VA = "0xB29B84")]
		private void EnableVisuals()
		{
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0xB299B0", Offset = "0xB299B0", VA = "0xB299B0")]
		private void DisableVisuals()
		{
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0xB29BBC", Offset = "0xB29BBC", VA = "0xB29BBC")]
		public FallProp()
		{
		}
	}
	[Token(Token = "0x2000307")]
	public class FallPropLauncher : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000592")]
		public class FallPropInteractable
		{
			[Token(Token = "0x400207F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Animator Animator;

			[Token(Token = "0x4002080")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PointerInteractable Interactable;

			[Token(Token = "0x4002081")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int LaunchPropCount;

			[Token(Token = "0x600269D")]
			[Address(RVA = "0xB2A9E4", Offset = "0xB2A9E4", VA = "0xB2A9E4")]
			public FallPropInteractable()
			{
			}
		}

		[Token(Token = "0x2000593")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927C60", Offset = "0x927C60")]
		private sealed class <ShowHintAfterDuration>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002082")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002083")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002084")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FallPropLauncher <>4__this;

			[Token(Token = "0x170004B2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60026A1")]
				[Address(RVA = "0xB2A96C", Offset = "0xB2A96C", VA = "0xB2A96C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004B3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026A3")]
				[Address(RVA = "0xB2A9DC", Offset = "0xB2A9DC", VA = "0xB2A9DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600269E")]
			[Address(RVA = "0xB2A458", Offset = "0xB2A458", VA = "0xB2A458")]
			[DebuggerHidden]
			public <ShowHintAfterDuration>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x600269F")]
			[Address(RVA = "0xB2A884", Offset = "0xB2A884", VA = "0xB2A884", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026A0")]
			[Address(RVA = "0xB2A888", Offset = "0xB2A888", VA = "0xB2A888", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026A2")]
			[Address(RVA = "0xB2A974", Offset = "0xB2A974", VA = "0xB2A974", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001297")]
		private const int NumberOfSpawnPoints = 3;

		[Token(Token = "0x4001298")]
		private const int BackSpawnIndex = 2;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly int m_animParamSpawn;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent m_onFirstInteractable;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_delayHint;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x931D24", Offset = "0x931D24")]
		[SerializeField]
		private int m_poolSize;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private FallProp[] m_fallPropPrefabs;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x931D80", Offset = "0x931D80")]
		[SerializeField]
		private float m_startDelay;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float m_travelDistance;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private List<Transform> m_propSpawnPoints;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private MathUtils.MinMax m_spawnTime;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private MathUtils.MinMax m_scaleRange;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x931E0C", Offset = "0x931E0C")]
		[SerializeField]
		private MathUtils.MinMax m_speedRange;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x931E58", Offset = "0x931E58")]
		private MathUtils.MinMax m_rotationRange;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x931EA4", Offset = "0x931EA4")]
		[SerializeField]
		private FallPropInteractable[] m_interactables;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private IList<FallProp> m_fallPropsLarge;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<FallProp> m_fallPropObjectPool;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform m_interactableSpawnPoint;

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Transform m_previousSpawnLocation;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool m_isPropLaunchedActive;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		private bool m_hasLaunchedInteractable;

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int m_currentPropCount;

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int m_currentInteractable;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float m_currentSpawnTime;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float m_elapsedTime;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool m_isHintRoutineStarted;

		[Token(Token = "0x6001867")]
		[Address(RVA = "0xB29BC4", Offset = "0xB29BC4", VA = "0xB29BC4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0xB29F14", Offset = "0xB29F14", VA = "0xB29F14")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0xB29F1C", Offset = "0xB29F1C", VA = "0xB29F1C")]
		private void Update()
		{
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0xB2A318", Offset = "0xB2A318", VA = "0xB2A318")]
		public void EnablePropLauncher()
		{
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0xB29E74", Offset = "0xB29E74", VA = "0xB29E74")]
		public void DisablePropLauncher()
		{
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0xB29BE8", Offset = "0xB29BE8", VA = "0xB29BE8")]
		private void BuildPool()
		{
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0xB2A158", Offset = "0xB2A158", VA = "0xB2A158")]
		private void TryLaunchInteractable()
		{
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0xB2A360", Offset = "0xB2A360", VA = "0xB2A360")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93C2C0", Offset = "0x93C2C0")]
		private IEnumerator ShowHintAfterDuration()
		{
			return null;
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0xB2A3D4", Offset = "0xB2A3D4", VA = "0xB2A3D4")]
		private void LaunchInteractable(Animator fallingInteractable)
		{
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0xB2A484", Offset = "0xB2A484", VA = "0xB2A484")]
		public void ReturnInteractableSpawn()
		{
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0xB29F8C", Offset = "0xB29F8C", VA = "0xB29F8C")]
		private void LaunchObject()
		{
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0xB2A4B0", Offset = "0xB2A4B0", VA = "0xB2A4B0")]
		private Transform GetRandomSpawnPoint()
		{
			return null;
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0xB2A5D4", Offset = "0xB2A5D4", VA = "0xB2A5D4")]
		private FallProp GetRandomObjectFromPool(Transform spawnLocation)
		{
			return null;
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0xB2A6C8", Offset = "0xB2A6C8", VA = "0xB2A6C8")]
		private FallProp RandomProp()
		{
			return null;
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0xB2A760", Offset = "0xB2A760", VA = "0xB2A760")]
		private FallProp RandomPropNoLarge()
		{
			return null;
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0xB29940", Offset = "0xB29940", VA = "0xB29940")]
		public void ReturnObjectToPool(FallProp selectedObject)
		{
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0xB2A2EC", Offset = "0xB2A2EC", VA = "0xB2A2EC")]
		private void SetNewSpawnTime()
		{
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0xB2A7A0", Offset = "0xB2A7A0", VA = "0xB2A7A0")]
		public FallPropLauncher()
		{
		}
	}
	[Token(Token = "0x2000308")]
	public class PatchesCutscenePlayer : CharacterCutscenePlayer
	{
		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x931EF0", Offset = "0x931EF0")]
		[SerializeField]
		private IntVariable m_patchesChoiceIndex;

		[Token(Token = "0x40012B2")]
		private const string PatchesCatTrackName = "PatchesCatTrack";

		[Token(Token = "0x40012B3")]
		private const string PatchesLizardTrackName = "PatchesLizardTrack";

		[Token(Token = "0x40012B4")]
		private const string PatchesTurtleTrackName = "PatchesTurtleTrack";

		[Token(Token = "0x6001879")]
		[Address(RVA = "0xB2A9EC", Offset = "0xB2A9EC", VA = "0xB2A9EC", Slot = "6")]
		public override void PlayCutscene()
		{
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0xB2A9F0", Offset = "0xB2A9F0", VA = "0xB2A9F0")]
		private void ConfigurePatchesTimeline()
		{
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0xB2AED4", Offset = "0xB2AED4", VA = "0xB2AED4")]
		private void BindingCheck(TrackAsset track, bool shouldKeepBinding)
		{
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0xB2AF1C", Offset = "0xB2AF1C", VA = "0xB2AF1C")]
		public PatchesCutscenePlayer()
		{
		}
	}
}
namespace Cortopia.Scripts.CortopiaEvents
{
	[Token(Token = "0x2000309")]
	public class CheckpointEvent : ScriptableObject, IScriptableEvent
	{
		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<IScriptableEventListener> m_listeners;

		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BoolVariable m_writeToDisk;

		[Token(Token = "0x600187D")]
		[Address(RVA = "0xB27E04", Offset = "0xB27E04", VA = "0xB27E04")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0xB27E30", Offset = "0xB27E30", VA = "0xB27E30")]
		public void CheckpointReached(PlayableCharacter characterControl)
		{
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0xB27FBC", Offset = "0xB27FBC", VA = "0xB27FBC")]
		public void SaveGame(bool writeToDisk)
		{
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0xB27E74", Offset = "0xB27E74", VA = "0xB27E74", Slot = "4")]
		public void RaiseEvent(ScriptableVariable variable)
		{
		}

		[Token(Token = "0x6001881")]
		[Address(RVA = "0xB23968", Offset = "0xB23968", VA = "0xB23968", Slot = "5")]
		public void RegisterListener(IScriptableEventListener listener)
		{
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0xB23814", Offset = "0xB23814", VA = "0xB23814", Slot = "6")]
		public void UnregisterListener(IScriptableEventListener listener)
		{
		}

		[Token(Token = "0x6001883")]
		[Address(RVA = "0xB2800C", Offset = "0xB2800C", VA = "0xB2800C")]
		private void SaveButton()
		{
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0xB28014", Offset = "0xB28014", VA = "0xB28014")]
		public CheckpointEvent()
		{
		}
	}
	[Token(Token = "0x200030A")]
	public sealed class EventToken
	{
		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x931F3C", Offset = "0x931F3C")]
		private Type <Type>k__BackingField;

		[Token(Token = "0x170002EE")]
		public Type Type
		{
			[Token(Token = "0x6001885")]
			[Address(RVA = "0xB28108", Offset = "0xB28108", VA = "0xB28108")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C324", Offset = "0x93C324")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001886")]
			[Address(RVA = "0xB28110", Offset = "0xB28110", VA = "0xB28110")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C334", Offset = "0x93C334")]
			private set
			{
			}
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0xB28118", Offset = "0xB28118", VA = "0xB28118")]
		public EventToken(Type type)
		{
		}
	}
	[Token(Token = "0x200030B")]
	public sealed class SubscriptionItem
	{
		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x931F4C", Offset = "0x931F4C")]
		private IEventSubscription <Subscription>k__BackingField;

		[Token(Token = "0x170002EF")]
		public IEventSubscription Subscription
		{
			[Token(Token = "0x6001888")]
			[Address(RVA = "0xB28780", Offset = "0xB28780", VA = "0xB28780")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C344", Offset = "0x93C344")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001889")]
			[Address(RVA = "0xB28788", Offset = "0xB28788", VA = "0xB28788")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C354", Offset = "0x93C354")]
			private set
			{
			}
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0xB28790", Offset = "0xB28790", VA = "0xB28790")]
		public SubscriptionItem(IEventSubscription subscription)
		{
		}
	}
	[Token(Token = "0x200030C")]
	public sealed class EventSubscription<T> : IEventSubscription where T : EventBase, IEvent
	{
		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x931F5C", Offset = "0x931F5C")]
		private EventToken <SubscriptionToken>k__BackingField;

		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action<T> Action;

		[Token(Token = "0x170002F0")]
		public EventToken SubscriptionToken
		{
			[Token(Token = "0x600188B")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C364", Offset = "0x93C364")]
			get
			{
				return null;
			}
			[Token(Token = "0x600188C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C374", Offset = "0x93C374")]
			private set
			{
			}
		}

		[Token(Token = "0x600188D")]
		public EventSubscription(EventToken token, Action<T> action)
		{
		}

		[Token(Token = "0x600188E")]
		public void Deliver(IEvent message)
		{
		}
	}
	[Token(Token = "0x200030D")]
	public interface IEventSubscription
	{
		[Token(Token = "0x170002F1")]
		EventToken SubscriptionToken
		{
			[Token(Token = "0x600188F")]
			get;
		}

		[Token(Token = "0x6001890")]
		void Deliver(IEvent message);
	}
	[Token(Token = "0x200030E")]
	public interface IEvent
	{
		[Token(Token = "0x170002F2")]
		Type Type
		{
			[Token(Token = "0x6001891")]
			get;
		}
	}
	[Token(Token = "0x200030F")]
	public abstract class EventBase : IEvent
	{
		[Token(Token = "0x170002F3")]
		public Type Type
		{
			[Token(Token = "0x6001892")]
			[Address(RVA = "0xB28088", Offset = "0xB28088", VA = "0xB28088", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0xB27DBC", Offset = "0xB27DBC", VA = "0xB27DBC")]
		public EventBase()
		{
		}
	}
	[Token(Token = "0x2000310")]
	public enum CortopiaEventType
	{
		[Token(Token = "0x40012BC")]
		UnityEvent,
		[Token(Token = "0x40012BD")]
		ScriptableEvent,
		[Token(Token = "0x40012BE")]
		None
	}
	[Token(Token = "0x2000311")]
	public static class EventHub
	{
		[Token(Token = "0x40012BF")]
		private const int DefaultEventDictionarySize = 4;

		[Token(Token = "0x40012C0")]
		private const int DefaultSubscribeListSize = 2;

		[Token(Token = "0x40012C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IDictionary<Type, List<SubscriptionItem>> sm_events;

		[Token(Token = "0x6001894")]
		public static EventToken Subscribe<T>(Action<T> callback) where T : EventBase, IEvent
		{
			return null;
		}

		[Token(Token = "0x6001895")]
		public static void Unsubscribe<T>(EventToken token) where T : EventBase, IEvent
		{
		}

		[Token(Token = "0x6001896")]
		public static void Publish<T>(T message) where T : EventBase, IEvent
		{
		}
	}
	[Token(Token = "0x2000312")]
	public class CharacterEvents
	{
		[Token(Token = "0x2000594")]
		public class AllCharactersSpawnedEvent : EventBase
		{
			[Token(Token = "0x60026A4")]
			[Address(RVA = "0xB27DD4", Offset = "0xB27DD4", VA = "0xB27DD4")]
			public AllCharactersSpawnedEvent()
			{
			}
		}

		[Token(Token = "0x2000595")]
		public class CharacterActivatedEvent : EventBase
		{
			[Token(Token = "0x4002085")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayableCharacter CharacterControl;

			[Token(Token = "0x60026A5")]
			[Address(RVA = "0xB27DE4", Offset = "0xB27DE4", VA = "0xB27DE4")]
			public CharacterActivatedEvent()
			{
			}
		}

		[Token(Token = "0x2000596")]
		public class CharacterDisabledEvent : EventBase
		{
			[Token(Token = "0x4002086")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayableCharacter CharacterControl;

			[Token(Token = "0x60026A6")]
			[Address(RVA = "0xB27DEC", Offset = "0xB27DEC", VA = "0xB27DEC")]
			public CharacterDisabledEvent()
			{
			}
		}

		[Token(Token = "0x2000597")]
		public class ProxyEnabledEvent : EventBase
		{
			[Token(Token = "0x4002087")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CharacterData ProxyCharacterData;

			[Token(Token = "0x60026A7")]
			[Address(RVA = "0xB27DFC", Offset = "0xB27DFC", VA = "0xB27DFC")]
			public ProxyEnabledEvent()
			{
			}
		}

		[Token(Token = "0x2000598")]
		public class ProxyDisabledEvent : EventBase
		{
			[Token(Token = "0x4002088")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CharacterData ProxyCharacterData;

			[Token(Token = "0x60026A8")]
			[Address(RVA = "0xB27DF4", Offset = "0xB27DF4", VA = "0xB27DF4")]
			public ProxyDisabledEvent()
			{
			}
		}

		[Token(Token = "0x2000599")]
		public class BabyRabbitRespawnEvent : EventBase
		{
			[Token(Token = "0x4002089")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BabyRabbitControl BabyRabbit;

			[Token(Token = "0x60026A9")]
			[Address(RVA = "0xB27DDC", Offset = "0xB27DDC", VA = "0xB27DDC")]
			public BabyRabbitRespawnEvent()
			{
			}
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0xB27DCC", Offset = "0xB27DCC", VA = "0xB27DCC")]
		public CharacterEvents()
		{
		}
	}
	[Token(Token = "0x2000313")]
	public class RoomEvents
	{
		[Token(Token = "0x200059A")]
		public class BiomeActivatedEvent : EventBase
		{
			[Token(Token = "0x400208A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BiomeType BiomeType;

			[Token(Token = "0x60026AA")]
			[Address(RVA = "0xB1E094", Offset = "0xB1E094", VA = "0xB1E094")]
			public BiomeActivatedEvent()
			{
			}
		}

		[Token(Token = "0x200059B")]
		public class BiomeDeactivatedEvent : EventBase
		{
			[Token(Token = "0x400208B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BiomeType BiomeType;

			[Token(Token = "0x60026AB")]
			[Address(RVA = "0xB1D174", Offset = "0xB1D174", VA = "0xB1D174")]
			public BiomeDeactivatedEvent()
			{
			}
		}

		[Token(Token = "0x200059C")]
		public class RoomLoadedEvent : EventBase
		{
			[Token(Token = "0x400208C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Cortopia.Scripts.Rooms.Room Room;

			[Token(Token = "0x60026AC")]
			[Address(RVA = "0xB1E1A4", Offset = "0xB1E1A4", VA = "0xB1E1A4")]
			public RoomLoadedEvent()
			{
			}
		}

		[Token(Token = "0x200059D")]
		public class BeforeRoomUnloadedEvent : EventBase
		{
			[Token(Token = "0x400208D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Cortopia.Scripts.Rooms.RoomType RoomType;

			[Token(Token = "0x60026AD")]
			[Address(RVA = "0xB1D9A0", Offset = "0xB1D9A0", VA = "0xB1D9A0")]
			public BeforeRoomUnloadedEvent()
			{
			}
		}

		[Token(Token = "0x200059E")]
		public class RoomActivatedEvent : EventBase
		{
			[Token(Token = "0x400208E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Cortopia.Scripts.Rooms.RoomType RoomType;

			[Token(Token = "0x60026AE")]
			[Address(RVA = "0xB281AC", Offset = "0xB281AC", VA = "0xB281AC")]
			public RoomActivatedEvent()
			{
			}
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0xB281A4", Offset = "0xB281A4", VA = "0xB281A4")]
		public RoomEvents()
		{
		}
	}
	[Token(Token = "0x2000314")]
	public class PlayerEvents
	{
		[Token(Token = "0x200059F")]
		public class ScreenFadeEvent : EventBase
		{
			[Token(Token = "0x400208F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool FadeIn;

			[Token(Token = "0x4002090")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float FadeTime;

			[Token(Token = "0x60026AF")]
			[Address(RVA = "0xB28174", Offset = "0xB28174", VA = "0xB28174")]
			public ScreenFadeEvent()
			{
			}
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0xB2816C", Offset = "0xB2816C", VA = "0xB2816C")]
		public PlayerEvents()
		{
		}
	}
	[Token(Token = "0x2000315")]
	public class PuzzleEvents
	{
		[Token(Token = "0x20005A0")]
		public class DominoBellRungEvent : EventBase
		{
			[Token(Token = "0x4002091")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int BellCount;

			[Token(Token = "0x60026B0")]
			[Address(RVA = "0xB28194", Offset = "0xB28194", VA = "0xB28194")]
			public DominoBellRungEvent()
			{
			}
		}

		[Token(Token = "0x20005A1")]
		public class DominoMovedEvent : EventBase
		{
			[Token(Token = "0x4002092")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Domino Domino;

			[Token(Token = "0x60026B1")]
			[Address(RVA = "0xB2819C", Offset = "0xB2819C", VA = "0xB2819C")]
			public DominoMovedEvent()
			{
			}
		}

		[Token(Token = "0x20005A2")]
		public class ButterflyFoundEvent : EventBase
		{
			[Token(Token = "0x4002093")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Butterfly Butterfly;

			[Token(Token = "0x60026B2")]
			[Address(RVA = "0xB2818C", Offset = "0xB2818C", VA = "0xB2818C")]
			public ButterflyFoundEvent()
			{
			}
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0xB28184", Offset = "0xB28184", VA = "0xB28184")]
		public PuzzleEvents()
		{
		}
	}
	[Token(Token = "0x2000316")]
	public class CameraEvents
	{
		[Token(Token = "0x20005A3")]
		public class RecenterCameraEvent : EventBase
		{
			[Token(Token = "0x60026B3")]
			[Address(RVA = "0xB27DC4", Offset = "0xB27DC4", VA = "0xB27DC4")]
			public RecenterCameraEvent()
			{
			}
		}

		[Token(Token = "0x20005A4")]
		public class FirstPersonCameraEvent : EventBase
		{
			[Token(Token = "0x4002094")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool EnterFirstPerson;

			[Token(Token = "0x60026B4")]
			[Address(RVA = "0xB27DB4", Offset = "0xB27DB4", VA = "0xB27DB4")]
			public FirstPersonCameraEvent()
			{
			}
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0xB27DAC", Offset = "0xB27DAC", VA = "0xB27DAC")]
		public CameraEvents()
		{
		}
	}
	[Token(Token = "0x2000317")]
	public class PlatformEvents
	{
		[Token(Token = "0x20005A5")]
		public class InputDeviceChangedEvent : EventBase
		{
			[Token(Token = "0x4002095")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public InputDeviceType InputDeviceType;

			[Token(Token = "0x60026B5")]
			[Address(RVA = "0xB2815C", Offset = "0xB2815C", VA = "0xB2815C")]
			public InputDeviceChangedEvent()
			{
			}
		}

		[Token(Token = "0x20005A6")]
		public class HMDActivityStatusChangedEvent : EventBase
		{
			[Token(Token = "0x4002096")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public HMDActivityStatusType HMDActivityStatus;

			[Token(Token = "0x60026B6")]
			[Address(RVA = "0xB2814C", Offset = "0xB2814C", VA = "0xB2814C")]
			public HMDActivityStatusChangedEvent()
			{
			}
		}

		[Token(Token = "0x20005A7")]
		public class HMDMountStatusChangedEvent : EventBase
		{
			[Token(Token = "0x4002097")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public HMDMountStatusType HMDMountStatus;

			[Token(Token = "0x60026B7")]
			[Address(RVA = "0xB28154", Offset = "0xB28154", VA = "0xB28154")]
			public HMDMountStatusChangedEvent()
			{
			}
		}

		[Token(Token = "0x20005A8")]
		public class RecenterControllerEvent : EventBase
		{
			[Token(Token = "0x60026B8")]
			[Address(RVA = "0xB28164", Offset = "0xB28164", VA = "0xB28164")]
			public RecenterControllerEvent()
			{
			}
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0xB28144", Offset = "0xB28144", VA = "0xB28144")]
		public PlatformEvents()
		{
		}
	}
	[Token(Token = "0x2000318")]
	public interface IScriptableEvent
	{
		[Token(Token = "0x600189E")]
		void RaiseEvent(ScriptableVariable variable);

		[Token(Token = "0x600189F")]
		void RegisterListener(IScriptableEventListener listener);

		[Token(Token = "0x60018A0")]
		void UnregisterListener(IScriptableEventListener listener);
	}
	[Token(Token = "0x2000319")]
	public interface IScriptableEventListener
	{
		[Token(Token = "0x60018A1")]
		void OnEventRaised(ScriptableVariable eventData);
	}
	[Token(Token = "0x200031A")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x926D10", Offset = "0x926D10")]
	public class ScriptableEvent : ScriptableObject, IScriptableEvent
	{
		[Token(Token = "0x40012C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<IScriptableEventListener> m_listeners;

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0xB1C3C0", Offset = "0xB1C3C0", VA = "0xB1C3C0")]
		public void RaiseBoolEvent(bool value)
		{
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0xB281B4", Offset = "0xB281B4", VA = "0xB281B4")]
		public void RaiseIntEvent(int value)
		{
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0xB281E4", Offset = "0xB281E4", VA = "0xB281E4")]
		public void RaiseFloatEvent(float value)
		{
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0xB28210", Offset = "0xB28210", VA = "0xB28210")]
		public void RaiseStringEvent(string value)
		{
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0xB28290", Offset = "0xB28290", VA = "0xB28290")]
		public void RaiseEvent()
		{
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0xB17ED8", Offset = "0xB17ED8", VA = "0xB17ED8", Slot = "4")]
		public void RaiseEvent(ScriptableVariable variable)
		{
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0xB201FC", Offset = "0xB201FC", VA = "0xB201FC", Slot = "5")]
		public void RegisterListener(IScriptableEventListener listener)
		{
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0xB20070", Offset = "0xB20070", VA = "0xB20070", Slot = "6")]
		public void UnregisterListener(IScriptableEventListener listener)
		{
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0xB28298", Offset = "0xB28298", VA = "0xB28298")]
		public ScriptableEvent()
		{
		}
	}
	[Token(Token = "0x200031B")]
	public class ScriptableEventListener : MonoBehaviour, IScriptableEventListener
	{
		[Token(Token = "0x40012C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x931F6C", Offset = "0x931F6C")]
		public ScriptableEvent Event;

		[Token(Token = "0x40012C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x931FA4", Offset = "0x931FA4")]
		public ScriptableVariableEvent Response;

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0xB2830C", Offset = "0xB2830C", VA = "0xB2830C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0xB28340", Offset = "0xB28340", VA = "0xB28340")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0xB28374", Offset = "0xB28374", VA = "0xB28374", Slot = "4")]
		public void OnEventRaised(ScriptableVariable eventData)
		{
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0xB283E4", Offset = "0xB283E4", VA = "0xB283E4")]
		public ScriptableEventListener()
		{
		}
	}
	[Token(Token = "0x200031C")]
	public class ScriptableEventsListener : MonoBehaviour, IScriptableEventListener
	{
		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x931FDC", Offset = "0x931FDC")]
		public List<ScriptableEvent> Events;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x932014", Offset = "0x932014")]
		public ScriptableVariableEvent Response;

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0xB283EC", Offset = "0xB283EC", VA = "0xB283EC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0xB28514", Offset = "0xB28514", VA = "0xB28514")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0xB2863C", Offset = "0xB2863C", VA = "0xB2863C")]
		public void OnEventRaised()
		{
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0xB286A0", Offset = "0xB286A0", VA = "0xB286A0", Slot = "4")]
		public void OnEventRaised(ScriptableVariable eventData)
		{
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0xB28710", Offset = "0xB28710", VA = "0xB28710")]
		public ScriptableEventsListener()
		{
		}
	}
}
namespace Cortopia.Scripts.Core
{
	[Token(Token = "0x200031D")]
	public class CharacterManager : MonoBehaviour, ISavable, IScriptableEventListener
	{
		[Serializable]
		[Token(Token = "0x20005A9")]
		public class SaveData : SavableData
		{
			[Token(Token = "0x4002098")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool AreCharactersTethered;

			[Token(Token = "0x4002099")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			public bool IsFourHalfUnlocked;

			[Token(Token = "0x400209A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<PlayableCharacterSaveData> CharacterData;

			[Token(Token = "0x400209B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dictionary<string, NPCSaveData> NPCData;

			[Token(Token = "0x60026B9")]
			[Address(RVA = "0xB63080", Offset = "0xB63080", VA = "0xB63080")]
			public SaveData()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005AA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927C70", Offset = "0x927C70")]
		private sealed class <>c
		{
			[Token(Token = "0x400209C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400209D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<NPCCharacter, bool> <>9__40_0;

			[Token(Token = "0x60026BB")]
			[Address(RVA = "0xB6757C", Offset = "0xB6757C", VA = "0xB6757C")]
			public <>c()
			{
			}

			[Token(Token = "0x60026BC")]
			[Address(RVA = "0xB67584", Offset = "0xB67584", VA = "0xB67584")]
			internal bool <GetCharacter>b__40_0(NPCCharacter x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x20005AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927C80", Offset = "0x927C80")]
		private sealed class <>c__DisplayClass62_0
		{
			[Token(Token = "0x400209E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<bool> onDestinationReached;

			[Token(Token = "0x400209F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public InteractableObject interactable;

			[Token(Token = "0x40020A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayableCharacter character;

			[Token(Token = "0x60026BD")]
			[Address(RVA = "0xB66F4C", Offset = "0xB66F4C", VA = "0xB66F4C")]
			public <>c__DisplayClass62_0()
			{
			}

			[Token(Token = "0x60026BE")]
			[Address(RVA = "0xB675B8", Offset = "0xB675B8", VA = "0xB675B8")]
			internal void <SetCharacterDestination>b__0(bool success)
			{
			}

			[Token(Token = "0x60026BF")]
			[Address(RVA = "0xB6765C", Offset = "0xB6765C", VA = "0xB6765C")]
			internal void <SetCharacterDestination>b__1(bool success)
			{
			}
		}

		[Token(Token = "0x20005AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927C90", Offset = "0x927C90")]
		private sealed class <>c__DisplayClass63_0
		{
			[Token(Token = "0x40020A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action onDestinationReached;

			[Token(Token = "0x40020A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public InteractableObject interactable;

			[Token(Token = "0x40020A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PlayableCharacter character;

			[Token(Token = "0x60026C0")]
			[Address(RVA = "0xB66F54", Offset = "0xB66F54", VA = "0xB66F54")]
			public <>c__DisplayClass63_0()
			{
			}

			[Token(Token = "0x60026C1")]
			[Address(RVA = "0xB67700", Offset = "0xB67700", VA = "0xB67700")]
			internal void <SetCharacterDestination>b__0(bool success)
			{
			}
		}

		[Token(Token = "0x40012C7")]
		private const string SaveID = "CharacterManager";

		[Token(Token = "0x40012C8")]
		private const float FourHalfForwardSpawnOffset = 0.5f;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayableCharacter[] m_characterControllers;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x93205C", Offset = "0x93205C")]
		[SerializeField]
		private ScriptableEvent m_fourHalfUnlockedEvent;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private BoolVariable m_areCharactersTethered;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_hasInstantiatedCharacters;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SaveData m_saveData;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IDictionary<CharacterType, PlayableCharacter> m_availableCharacters;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private IDictionary<CharacterData, List<NPCCharacter>> m_availableNPCs;

		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<NPCCharacter> m_filterList;

		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ISet<PlayableCharacter> m_nonSelectableCharacters;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private IDictionary<CharacterType, CharacterState> m_previousCharacterStates;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9320B8", Offset = "0x9320B8")]
		private PlayableCharacter <ActiveCharacter>k__BackingField;

		[Token(Token = "0x170002F4")]
		public PlayableCharacter ActiveCharacter
		{
			[Token(Token = "0x60018B4")]
			[Address(RVA = "0xB5ABFC", Offset = "0xB5ABFC", VA = "0xB5ABFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C384", Offset = "0x93C384")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018B5")]
			[Address(RVA = "0xB62AB8", Offset = "0xB62AB8", VA = "0xB62AB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C394", Offset = "0x93C394")]
			private set
			{
			}
		}

		[Token(Token = "0x170002F5")]
		public bool AreCharactersTethered
		{
			[Token(Token = "0x60018B6")]
			[Address(RVA = "0xB62AC0", Offset = "0xB62AC0", VA = "0xB62AC0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018B7")]
			[Address(RVA = "0xB62ACC", Offset = "0xB62ACC", VA = "0xB62ACC")]
			private set
			{
			}
		}

		[Token(Token = "0x170002F6")]
		private CharacterType ActiveCharacterType
		{
			[Token(Token = "0x60018B8")]
			[Address(RVA = "0xB62B04", Offset = "0xB62B04", VA = "0xB62B04")]
			get
			{
				return default(CharacterType);
			}
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0xB62BA0", Offset = "0xB62BA0", VA = "0xB62BA0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0xB62BD8", Offset = "0xB62BD8", VA = "0xB62BD8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0xB62C10", Offset = "0xB62C10", VA = "0xB62C10")]
		private void Update()
		{
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0xB62FF4", Offset = "0xB62FF4", VA = "0xB62FF4", Slot = "6")]
		public void OnEventRaised(ScriptableVariable eventData)
		{
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0xB63024", Offset = "0xB63024", VA = "0xB63024")]
		public void ResetSaveData()
		{
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0xB63128", Offset = "0xB63128", VA = "0xB63128", Slot = "4")]
		public void Serialize(IWriteSave save)
		{
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0xB63BC4", Offset = "0xB63BC4", VA = "0xB63BC4", Slot = "5")]
		public void Deserialize(IReadSave save)
		{
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0xB63CD8", Offset = "0xB63CD8", VA = "0xB63CD8")]
		public Adventurer InstantiateCharacters()
		{
			return null;
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0xB641CC", Offset = "0xB641CC", VA = "0xB641CC")]
		public bool TrySpawnFourHalf(Cortopia.Scripts.Rooms.RoomType roomType)
		{
			return default(bool);
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0xB54B20", Offset = "0xB54B20", VA = "0xB54B20")]
		public PlayableCharacter SpawnCharacter(CharacterType characterType, CharacterState startState, Cortopia.Scripts.Rooms.RoomType roomType, Vector3 position, Quaternion rotation, CharacterInstantiationFallbackState fallbackState)
		{
			return null;
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0xB644CC", Offset = "0xB644CC", VA = "0xB644CC")]
		public void LoadCharactersFromSave()
		{
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0xB64848", Offset = "0xB64848", VA = "0xB64848")]
		public void DebugInstantiateCharacters(CharacterType startCharactersFlag, Cortopia.Scripts.Rooms.Room startRoom)
		{
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0xB5C560", Offset = "0xB5C560", VA = "0xB5C560")]
		public void AddNPCCharacter(CharacterData data, NPCCharacter npcCharacter)
		{
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0xB5C368", Offset = "0xB5C368", VA = "0xB5C368")]
		public void DisableActiveNPCCharacter(CharacterData data)
		{
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0xB5C888", Offset = "0xB5C888", VA = "0xB5C888")]
		public bool TryLoadCharacter(string guid, out NPCSaveData saveData)
		{
			return default(bool);
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0xB64D38", Offset = "0xB64D38", VA = "0xB64D38")]
		public bool CanGetPlayableCharacter(CharacterType characterType, out PlayableCharacter character)
		{
			return default(bool);
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0xB57A3C", Offset = "0xB57A3C", VA = "0xB57A3C")]
		public bool IsPlayableCharacterAvailable(PlayableCharacterData characterData, out PlayableCharacter character)
		{
			return default(bool);
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0xB643FC", Offset = "0xB643FC", VA = "0xB643FC")]
		public bool IsPlayableCharacterAvailable(CharacterType characterType, out PlayableCharacter character)
		{
			return default(bool);
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0xB56394", Offset = "0xB56394", VA = "0xB56394")]
		public Character GetCharacter(CharacterData characterData)
		{
			return null;
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0xB64E10", Offset = "0xB64E10", VA = "0xB64E10")]
		public void DisableAllCharacters(bool includeNPCs)
		{
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0xB57848", Offset = "0xB57848", VA = "0xB57848")]
		public void SetCharacterState(PlayableCharacterData characterData, CharacterState characterState)
		{
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0xB60D74", Offset = "0xB60D74", VA = "0xB60D74")]
		public void SetCharacterState(PlayableCharacter character, CharacterState state, bool forceSet = false)
		{
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0xB57B98", Offset = "0xB57B98", VA = "0xB57B98")]
		public void SetCharacterStates(CharacterState characterState)
		{
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0xB57FF8", Offset = "0xB57FF8", VA = "0xB57FF8")]
		public void ResetCharacterStates()
		{
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0xB65620", Offset = "0xB65620", VA = "0xB65620")]
		public void ResetCharacterStates(Cortopia.Scripts.Rooms.RoomType activeRoom)
		{
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0xB65AB4", Offset = "0xB65AB4", VA = "0xB65AB4")]
		public void ForceSetTetheredState(bool isTethered, CharacterType desiredActiveCharacterType, Transform companionTeleportPoint)
		{
		}

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0xB65F84", Offset = "0xB65F84", VA = "0xB65F84")]
		public bool TrySetTetheredState(bool isTethered)
		{
			return default(bool);
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0xB66000", Offset = "0xB66000", VA = "0xB66000")]
		public bool TrySetTetheredState(bool isTethered, CharacterType desiredActiveCharacterType)
		{
			return default(bool);
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0xB66050", Offset = "0xB66050", VA = "0xB66050")]
		public bool TrySetTetheredState(bool isTethered, Transform companionTeleportPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0xB5CEF0", Offset = "0xB5CEF0", VA = "0xB5CEF0")]
		public void TryRemoveCharacter(CharacterType characterType)
		{
		}

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0xB66184", Offset = "0xB66184", VA = "0xB66184")]
		public void TryRemoveCharacter(CharacterData data, NPCCharacter npcCharacter)
		{
		}

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0xB663A4", Offset = "0xB663A4", VA = "0xB663A4")]
		public void OnBiomeLoadStarted(BiomeType biomeType)
		{
		}

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0xB66590", Offset = "0xB66590", VA = "0xB66590")]
		public void OnBiomeLoadComplete(BiomeType biomeType, Cortopia.Scripts.Rooms.RoomType roomType)
		{
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0xB65FD0", Offset = "0xB65FD0", VA = "0xB65FD0")]
		private void SetTetheredState(bool isTethered)
		{
		}

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0xB65BEC", Offset = "0xB65BEC", VA = "0xB65BEC")]
		private void SetTetheredState(bool isTethered, CharacterType desiredActiveCharacterType)
		{
		}

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0xB666D0", Offset = "0xB666D0", VA = "0xB666D0")]
		public void TeleportCharacters(CharacterType characterType, Vector3 position, Quaternion rotation, Cortopia.Scripts.Rooms.RoomType activeRoom)
		{
		}

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0xB64A58", Offset = "0xB64A58", VA = "0xB64A58")]
		public void TeleportPassiveCharacter(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0xB66B64", Offset = "0xB66B64", VA = "0xB66B64")]
		public void SelectCharacter(PlayableCharacter character)
		{
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0xB66BE0", Offset = "0xB66BE0", VA = "0xB66BE0")]
		public void SetCharacterDestination(InteractableObject interactable, LocomotionLockState lockState)
		{
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0xB66F28", Offset = "0xB66F28", VA = "0xB66F28")]
		public void SetCharacterDestination(InteractableObject interactable, LocomotionLockState lockState, Action<bool> onDestinationReached)
		{
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0xB66C00", Offset = "0xB66C00", VA = "0xB66C00")]
		public void SetCharacterDestination(PlayableCharacter character, InteractableObject interactable, LocomotionLockState lockState, Action<bool> onDestinationReached)
		{
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0xB56858", Offset = "0xB56858", VA = "0xB56858")]
		public void SetCharacterDestination(PlayableCharacter character, Vector3 destination, InteractableObject interactable, Action onDestinationReached)
		{
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0xB66F5C", Offset = "0xB66F5C", VA = "0xB66F5C")]
		public void SetZoomInStateActive(bool isZoomedIn, CharacterType zoomInTargetType)
		{
		}

		[Token(Token = "0x60018E4")]
		[Address(RVA = "0xB5EEF8", Offset = "0xB5EEF8", VA = "0xB5EEF8")]
		public bool HasCharacter(CharacterType type)
		{
			return default(bool);
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0xB64598", Offset = "0xB64598", VA = "0xB64598")]
		private void LoadAllCharacters()
		{
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0xB64B3C", Offset = "0xB64B3C", VA = "0xB64B3C")]
		private void DebugSpawnAllCharacters(CharacterType startCharacterFlag, Cortopia.Scripts.Rooms.Room startRoom)
		{
		}

		[Token(Token = "0x60018E7")]
		[Address(RVA = "0xB654A0", Offset = "0xB654A0", VA = "0xB654A0")]
		private bool TrySetActiveCharacter(PlayableCharacter character)
		{
			return default(bool);
		}

		[Token(Token = "0x60018E8")]
		[Address(RVA = "0xB62E90", Offset = "0xB62E90", VA = "0xB62E90")]
		private void TrySwitchCharacter(int currentCharacterIndex)
		{
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0xB64064", Offset = "0xB64064", VA = "0xB64064")]
		private void InactivateCharacter(PlayableCharacter character)
		{
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0xB666A4", Offset = "0xB666A4", VA = "0xB666A4")]
		private CharacterState GetPassiveState()
		{
			return default(CharacterState);
		}

		[Token(Token = "0x60018EB")]
		[Address(RVA = "0xB62D78", Offset = "0xB62D78", VA = "0xB62D78")]
		private bool CanToggleTetheredState()
		{
			return default(bool);
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0xB63B30", Offset = "0xB63B30", VA = "0xB63B30")]
		private void SaveNPC(NPCSaveData saveData)
		{
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0xB62E84", Offset = "0xB62E84", VA = "0xB62E84")]
		private int GetCharacterIndex(CharacterType characterType)
		{
			return default(int);
		}

		[Token(Token = "0x60018EE")]
		[Address(RVA = "0xB6735C", Offset = "0xB6735C", VA = "0xB6735C")]
		private int CharacterTypeLength()
		{
			return default(int);
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0xB67360", Offset = "0xB67360", VA = "0xB67360")]
		private string[] CharacterTypeNames()
		{
			return null;
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0xB67364", Offset = "0xB67364", VA = "0xB67364")]
		public CharacterManager()
		{
		}
	}
	[Token(Token = "0x200031E")]
	public static class CortopiaPrefs
	{
		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool sm_isDirty;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int sm_changeCount;

		[Token(Token = "0x170002F7")]
		private static bool IsDirty
		{
			[Token(Token = "0x60018F1")]
			[Address(RVA = "0xB67780", Offset = "0xB67780", VA = "0xB67780")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018F2")]
			[Address(RVA = "0xB677D0", Offset = "0xB677D0", VA = "0xB677D0")]
			set
			{
			}
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0xB67848", Offset = "0xB67848", VA = "0xB67848")]
		public static bool GetBool(string key, bool defaultValue)
		{
			return default(bool);
		}

		[Token(Token = "0x60018F4")]
		[Address(RVA = "0xB6786C", Offset = "0xB6786C", VA = "0xB6786C")]
		public static bool GetBool(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0xB6788C", Offset = "0xB6788C", VA = "0xB6788C")]
		public static int GetInt(string key, int defaultValue)
		{
			return default(int);
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0xB67894", Offset = "0xB67894", VA = "0xB67894")]
		public static int GetInt(string key)
		{
			return default(int);
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0xB6789C", Offset = "0xB6789C", VA = "0xB6789C")]
		public static float GetFloat(string key, float defaultValue)
		{
			return default(float);
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0xB678A4", Offset = "0xB678A4", VA = "0xB678A4")]
		public static float GetFloat(string key)
		{
			return default(float);
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0xB678AC", Offset = "0xB678AC", VA = "0xB678AC")]
		public static string GetString(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0xB678B4", Offset = "0xB678B4", VA = "0xB678B4")]
		public static string GetString(string key)
		{
			return null;
		}

		[Token(Token = "0x60018FB")]
		public static TEnum GetEnum<TEnum>(string key, TEnum defaultValue)
		{
			return (TEnum)null;
		}

		[Token(Token = "0x60018FC")]
		public static TEnum GetEnum<TEnum>(string key)
		{
			return (TEnum)null;
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0xB678BC", Offset = "0xB678BC", VA = "0xB678BC")]
		public static void SetBool(string key, bool value)
		{
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0xB678DC", Offset = "0xB678DC", VA = "0xB678DC")]
		public static void SetInt(string key, int value)
		{
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0xB678F8", Offset = "0xB678F8", VA = "0xB678F8")]
		public static void SetFloat(string key, float value)
		{
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0xB67914", Offset = "0xB67914", VA = "0xB67914")]
		public static void SetString(string key, string value)
		{
		}

		[Token(Token = "0x6001901")]
		public static void SetEnum<TEnum>(string key, TEnum value)
		{
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0xB67930", Offset = "0xB67930", VA = "0xB67930")]
		public static bool HasKey(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0xB67938", Offset = "0xB67938", VA = "0xB67938")]
		public static void DeleteKey(string key)
		{
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0xB67940", Offset = "0xB67940", VA = "0xB67940")]
		public static void Save()
		{
		}
	}
	[Token(Token = "0x200031F")]
	public struct PendingDialogData
	{
		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9320C8", Offset = "0x9320C8")]
		private CharacterData <CharacterData>k__BackingField;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9320D8", Offset = "0x9320D8")]
		private CharacterVoiceLine <Line>k__BackingField;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9320E8", Offset = "0x9320E8")]
		private bool <IsPending>k__BackingField;

		[Token(Token = "0x170002F8")]
		public CharacterData CharacterData
		{
			[Token(Token = "0x6001906")]
			[Address(RVA = "0x9CCCBC", Offset = "0x9CCCBC", VA = "0x9CCCBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C3A4", Offset = "0x93C3A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001907")]
			[Address(RVA = "0x9CCCC4", Offset = "0x9CCCC4", VA = "0x9CCCC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C3B4", Offset = "0x93C3B4")]
			private set
			{
			}
		}

		[Token(Token = "0x170002F9")]
		public CharacterVoiceLine Line
		{
			[Token(Token = "0x6001908")]
			[Address(RVA = "0x9CCCCC", Offset = "0x9CCCCC", VA = "0x9CCCCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C3C4", Offset = "0x93C3C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001909")]
			[Address(RVA = "0x9CCCD4", Offset = "0x9CCCD4", VA = "0x9CCCD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C3D4", Offset = "0x93C3D4")]
			private set
			{
			}
		}

		[Token(Token = "0x170002FA")]
		public bool IsPending
		{
			[Token(Token = "0x600190A")]
			[Address(RVA = "0x9CCCDC", Offset = "0x9CCCDC", VA = "0x9CCCDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C3E4", Offset = "0x93C3E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600190B")]
			[Address(RVA = "0x9CCCE4", Offset = "0x9CCCE4", VA = "0x9CCCE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C3F4", Offset = "0x93C3F4")]
			set
			{
			}
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0x9CCCAC", Offset = "0x9CCCAC", VA = "0x9CCCAC")]
		public PendingDialogData(CharacterData characterData, CharacterVoiceLine line)
		{
		}
	}
	[Token(Token = "0x2000320")]
	public class DialogueManager : MonoBehaviour
	{
		[Token(Token = "0x20005AD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927CA0", Offset = "0x927CA0")]
		private sealed class <>c__DisplayClass23_0
		{
			[Token(Token = "0x40020A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DialogueManager <>4__this;

			[Token(Token = "0x40020A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public BehaviourSystem dialogue;

			[Token(Token = "0x60026C2")]
			[Address(RVA = "0xB67FEC", Offset = "0xB67FEC", VA = "0xB67FEC")]
			public <>c__DisplayClass23_0()
			{
			}

			[Token(Token = "0x60026C3")]
			[Address(RVA = "0xB69088", Offset = "0xB69088", VA = "0xB69088")]
			internal void <StartOutroDialogue>b__0()
			{
			}
		}

		[Token(Token = "0x20005AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927CB0", Offset = "0x927CB0")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x40020A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DialogueManager <>4__this;

			[Token(Token = "0x40020A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public BehaviourSystem dialogue;

			[Token(Token = "0x60026C4")]
			[Address(RVA = "0xB682E0", Offset = "0xB682E0", VA = "0xB682E0")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x60026C5")]
			[Address(RVA = "0xB690F8", Offset = "0xB690F8", VA = "0xB690F8")]
			internal void <StartDialogue>b__0()
			{
			}
		}

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Quaternion sm_mirroredRotation;

		[Token(Token = "0x40012DA")]
		private const float SpawnDialogueTime = 1f;

		[Token(Token = "0x40012DB")]
		private const float SkipDialogueHoldTime = 1f;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private DialogueUI m_ui;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DialogueBehaviour m_dialogueBehaviour;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IList<CharacterAnimationHandler> m_activeLookAtComponents;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Voice m_currentSpeaker;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_isPlayingDialogue;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool m_isOutroDialogue;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_skipDialogueTimer;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Action m_onDialogueCompleted;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private PendingDialogData m_pendingDialogData;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932118", Offset = "0x932118")]
		private int <OptionIndex>k__BackingField;

		[Token(Token = "0x170002FB")]
		public DialogueUI UI
		{
			[Token(Token = "0x600190C")]
			[Address(RVA = "0xB679D8", Offset = "0xB679D8", VA = "0xB679D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002FC")]
		public int OptionIndex
		{
			[Token(Token = "0x600190D")]
			[Address(RVA = "0xB679E0", Offset = "0xB679E0", VA = "0xB679E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C404", Offset = "0x93C404")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600190E")]
			[Address(RVA = "0xB679E8", Offset = "0xB679E8", VA = "0xB679E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C414", Offset = "0x93C414")]
			private set
			{
			}
		}

		[Token(Token = "0x170002FD")]
		public bool IsVoiceActive
		{
			[Token(Token = "0x600190F")]
			[Address(RVA = "0xB679F0", Offset = "0xB679F0", VA = "0xB679F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0xB67A90", Offset = "0xB67A90", VA = "0xB67A90")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0xB67A98", Offset = "0xB67A98", VA = "0xB67A98")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0xB67AC8", Offset = "0xB67AC8", VA = "0xB67AC8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0xB67E08", Offset = "0xB67E08", VA = "0xB67E08")]
		public void StartOutroDialogue(BehaviourSystem dialogue, Transform subtitleAnchorPoint, Action onDialogueCompleted)
		{
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0xB67FF4", Offset = "0xB67FF4", VA = "0xB67FF4")]
		public void StartDialogue(BehaviourSystem dialogue, Transform subtitleAnchorPoint, Action onDialogueCompleted)
		{
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0xB682E8", Offset = "0xB682E8", VA = "0xB682E8")]
		public void PlayLine(CharacterData characterData, CharacterVoiceLine line)
		{
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0xB68568", Offset = "0xB68568", VA = "0xB68568")]
		public void LoadFacialExpressions(ExpressionData[] expressionData)
		{
		}

		[Token(Token = "0x6001917")]
		[Address(RVA = "0xB68650", Offset = "0xB68650", VA = "0xB68650")]
		public void TriggerAnimation(AnimationData animationData)
		{
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0xB686E4", Offset = "0xB686E4", VA = "0xB686E4")]
		public void TriggerAnimation(AnimationData animationData, AnimatedVoice animatedVoice)
		{
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0xB68774", Offset = "0xB68774", VA = "0xB68774")]
		public void AddLookAtTarget(CharacterAnimationHandler animationHandler, Transform targetTransform, float blendSpeed)
		{
		}

		[Token(Token = "0x600191A")]
		[Address(RVA = "0xB68910", Offset = "0xB68910", VA = "0xB68910")]
		public void RemoveLookAtTarget(CharacterAnimationHandler animationHandler, float blendSpeed)
		{
		}

		[Token(Token = "0x600191B")]
		[Address(RVA = "0xB68A14", Offset = "0xB68A14", VA = "0xB68A14")]
		public void ShowOptions(string[] optionTitles)
		{
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0xB68A54", Offset = "0xB68A54", VA = "0xB68A54")]
		public void OptionSelected(int optionIndex)
		{
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0xB68A5C", Offset = "0xB68A5C", VA = "0xB68A5C")]
		public void EndDialogue()
		{
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0xB68F58", Offset = "0xB68F58", VA = "0xB68F58")]
		private void RaiseDialogueCompletedEvent()
		{
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0xB6849C", Offset = "0xB6849C", VA = "0xB6849C")]
		private void TryUpdateCurrentVoice(CharacterData character)
		{
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0xB68BB0", Offset = "0xB68BB0", VA = "0xB68BB0")]
		private void ResetCurrentSpeaker()
		{
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0xB67C5C", Offset = "0xB67C5C", VA = "0xB67C5C")]
		private void SkipLine()
		{
		}

		[Token(Token = "0x6001922")]
		[Address(RVA = "0xB68C4C", Offset = "0xB68C4C", VA = "0xB68C4C")]
		private void ResetLookAtTargets()
		{
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0xB67D18", Offset = "0xB67D18", VA = "0xB67D18")]
		private static bool IsPlayableCharacter(CharacterData character)
		{
			return default(bool);
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0xB68F88", Offset = "0xB68F88", VA = "0xB68F88")]
		public DialogueManager()
		{
		}
	}
	[Token(Token = "0x2000321")]
	public enum HMDActivityStatusType
	{
		[Token(Token = "0x40012E7")]
		Aquired,
		[Token(Token = "0x40012E8")]
		Lost
	}
	[Token(Token = "0x2000322")]
	public enum HMDMountStatusType
	{
		[Token(Token = "0x40012EA")]
		Mounted,
		[Token(Token = "0x40012EB")]
		Unmounted
	}
	[Token(Token = "0x2000323")]
	public static class Game
	{
		[Token(Token = "0x40012EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool m_shouldPause;

		[Token(Token = "0x40012ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932128", Offset = "0x932128")]
		private static HUDMessage <HUD>k__BackingField;

		[Token(Token = "0x40012EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932138", Offset = "0x932138")]
		private static GameOptions <Options>k__BackingField;

		[Token(Token = "0x40012EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932148", Offset = "0x932148")]
		private static GameSettings <Settings>k__BackingField;

		[Token(Token = "0x40012F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932158", Offset = "0x932158")]
		private static LevelManager <LevelManager>k__BackingField;

		[Token(Token = "0x40012F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932168", Offset = "0x932168")]
		private static CharacterManager <CharacterManager>k__BackingField;

		[Token(Token = "0x40012F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932178", Offset = "0x932178")]
		private static InputManager <Input>k__BackingField;

		[Token(Token = "0x40012F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932188", Offset = "0x932188")]
		private static InteractionsManager <Interactions>k__BackingField;

		[Token(Token = "0x40012F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932198", Offset = "0x932198")]
		private static DialogueManager <DialogueManager>k__BackingField;

		[Token(Token = "0x40012F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9321A8", Offset = "0x9321A8")]
		private static PlayerControl <Player>k__BackingField;

		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9321B8", Offset = "0x9321B8")]
		private static InventoryManager <Inventory>k__BackingField;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9321C8", Offset = "0x9321C8")]
		private static SaveManager <SaveManager>k__BackingField;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9321D8", Offset = "0x9321D8")]
		private static RoomManager <RoomManager>k__BackingField;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9321E8", Offset = "0x9321E8")]
		private static VOManager <VOManager>k__BackingField;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9321F8", Offset = "0x9321F8")]
		private static AudioManager <AudioManager>k__BackingField;

		[Token(Token = "0x40012FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932208", Offset = "0x932208")]
		private static MusicManager <MusicManager>k__BackingField;

		[Token(Token = "0x40012FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932218", Offset = "0x932218")]
		private static LoadingScreen <LoadingScreen>k__BackingField;

		[Token(Token = "0x40012FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932228", Offset = "0x932228")]
		private static GameState <GameState>k__BackingField;

		[Token(Token = "0x40012FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932238", Offset = "0x932238")]
		private static HMDActivityStatusType <HMDActivityStatus>k__BackingField;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932248", Offset = "0x932248")]
		private static HMDMountStatusType <HMDMountStatus>k__BackingField;

		[Token(Token = "0x170002FE")]
		public static HUDMessage HUD
		{
			[Token(Token = "0x6001926")]
			[Address(RVA = "0xB69168", Offset = "0xB69168", VA = "0xB69168")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C424", Offset = "0x93C424")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001927")]
			[Address(RVA = "0xB691D0", Offset = "0xB691D0", VA = "0xB691D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C434", Offset = "0x93C434")]
			private set
			{
			}
		}

		[Token(Token = "0x170002FF")]
		public static GameOptions Options
		{
			[Token(Token = "0x6001928")]
			[Address(RVA = "0xB5BD08", Offset = "0xB5BD08", VA = "0xB5BD08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C444", Offset = "0x93C444")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001929")]
			[Address(RVA = "0xB6923C", Offset = "0xB6923C", VA = "0xB6923C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C454", Offset = "0x93C454")]
			private set
			{
			}
		}

		[Token(Token = "0x17000300")]
		public static GameSettings Settings
		{
			[Token(Token = "0x600192A")]
			[Address(RVA = "0xB52E54", Offset = "0xB52E54", VA = "0xB52E54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C464", Offset = "0x93C464")]
			get
			{
				return null;
			}
			[Token(Token = "0x600192B")]
			[Address(RVA = "0xB692A8", Offset = "0xB692A8", VA = "0xB692A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C474", Offset = "0x93C474")]
			private set
			{
			}
		}

		[Token(Token = "0x17000301")]
		public static LevelManager LevelManager
		{
			[Token(Token = "0x600192C")]
			[Address(RVA = "0xB5D780", Offset = "0xB5D780", VA = "0xB5D780")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C484", Offset = "0x93C484")]
			get
			{
				return null;
			}
			[Token(Token = "0x600192D")]
			[Address(RVA = "0xB69314", Offset = "0xB69314", VA = "0xB69314")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C494", Offset = "0x93C494")]
			private set
			{
			}
		}

		[Token(Token = "0x17000302")]
		public static CharacterManager CharacterManager
		{
			[Token(Token = "0x600192E")]
			[Address(RVA = "0xB54AB8", Offset = "0xB54AB8", VA = "0xB54AB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C4A4", Offset = "0x93C4A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600192F")]
			[Address(RVA = "0xB69380", Offset = "0xB69380", VA = "0xB69380")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C4B4", Offset = "0x93C4B4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000303")]
		public static InputManager Input
		{
			[Token(Token = "0x6001930")]
			[Address(RVA = "0xB5D384", Offset = "0xB5D384", VA = "0xB5D384")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C4C4", Offset = "0x93C4C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001931")]
			[Address(RVA = "0xB693EC", Offset = "0xB693EC", VA = "0xB693EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C4D4", Offset = "0x93C4D4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000304")]
		public static InteractionsManager Interactions
		{
			[Token(Token = "0x6001932")]
			[Address(RVA = "0xB5D8EC", Offset = "0xB5D8EC", VA = "0xB5D8EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C4E4", Offset = "0x93C4E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001933")]
			[Address(RVA = "0xB69458", Offset = "0xB69458", VA = "0xB69458")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C4F4", Offset = "0x93C4F4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000305")]
		public static DialogueManager DialogueManager
		{
			[Token(Token = "0x6001934")]
			[Address(RVA = "0xB694C4", Offset = "0xB694C4", VA = "0xB694C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C504", Offset = "0x93C504")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001935")]
			[Address(RVA = "0xB6952C", Offset = "0xB6952C", VA = "0xB6952C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C514", Offset = "0x93C514")]
			private set
			{
			}
		}

		[Token(Token = "0x17000306")]
		public static PlayerControl Player
		{
			[Token(Token = "0x6001936")]
			[Address(RVA = "0xB536F0", Offset = "0xB536F0", VA = "0xB536F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C524", Offset = "0x93C524")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001937")]
			[Address(RVA = "0xB69598", Offset = "0xB69598", VA = "0xB69598")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C534", Offset = "0x93C534")]
			private set
			{
			}
		}

		[Token(Token = "0x17000307")]
		public static InventoryManager Inventory
		{
			[Token(Token = "0x6001938")]
			[Address(RVA = "0xB69604", Offset = "0xB69604", VA = "0xB69604")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C544", Offset = "0x93C544")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001939")]
			[Address(RVA = "0xB6966C", Offset = "0xB6966C", VA = "0xB6966C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C554", Offset = "0x93C554")]
			private set
			{
			}
		}

		[Token(Token = "0x17000308")]
		public static SaveManager SaveManager
		{
			[Token(Token = "0x600193A")]
			[Address(RVA = "0xB5BD70", Offset = "0xB5BD70", VA = "0xB5BD70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C564", Offset = "0x93C564")]
			get
			{
				return null;
			}
			[Token(Token = "0x600193B")]
			[Address(RVA = "0xB696D8", Offset = "0xB696D8", VA = "0xB696D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C574", Offset = "0x93C574")]
			private set
			{
			}
		}

		[Token(Token = "0x17000309")]
		public static RoomManager RoomManager
		{
			[Token(Token = "0x600193C")]
			[Address(RVA = "0xB5C0D4", Offset = "0xB5C0D4", VA = "0xB5C0D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C584", Offset = "0x93C584")]
			get
			{
				return null;
			}
			[Token(Token = "0x600193D")]
			[Address(RVA = "0xB69744", Offset = "0xB69744", VA = "0xB69744")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C594", Offset = "0x93C594")]
			set
			{
			}
		}

		[Token(Token = "0x1700030A")]
		public static VOManager VOManager
		{
			[Token(Token = "0x600193E")]
			[Address(RVA = "0xB51C94", Offset = "0xB51C94", VA = "0xB51C94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C5A4", Offset = "0x93C5A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600193F")]
			[Address(RVA = "0xB697B0", Offset = "0xB697B0", VA = "0xB697B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C5B4", Offset = "0x93C5B4")]
			set
			{
			}
		}

		[Token(Token = "0x1700030B")]
		public static AudioManager AudioManager
		{
			[Token(Token = "0x6001940")]
			[Address(RVA = "0xB59598", Offset = "0xB59598", VA = "0xB59598")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C5C4", Offset = "0x93C5C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001941")]
			[Address(RVA = "0xB6981C", Offset = "0xB6981C", VA = "0xB6981C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C5D4", Offset = "0x93C5D4")]
			set
			{
			}
		}

		[Token(Token = "0x1700030C")]
		public static MusicManager MusicManager
		{
			[Token(Token = "0x6001942")]
			[Address(RVA = "0xB60D0C", Offset = "0xB60D0C", VA = "0xB60D0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C5E4", Offset = "0x93C5E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001943")]
			[Address(RVA = "0xB69888", Offset = "0xB69888", VA = "0xB69888")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C5F4", Offset = "0x93C5F4")]
			set
			{
			}
		}

		[Token(Token = "0x1700030D")]
		public static LoadingScreen LoadingScreen
		{
			[Token(Token = "0x6001944")]
			[Address(RVA = "0xB698F4", Offset = "0xB698F4", VA = "0xB698F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C604", Offset = "0x93C604")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001945")]
			[Address(RVA = "0xB6995C", Offset = "0xB6995C", VA = "0xB6995C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C614", Offset = "0x93C614")]
			private set
			{
			}
		}

		[Token(Token = "0x1700030E")]
		public static GameState GameState
		{
			[Token(Token = "0x6001946")]
			[Address(RVA = "0xB699C8", Offset = "0xB699C8", VA = "0xB699C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C624", Offset = "0x93C624")]
			get
			{
				return default(GameState);
			}
			[Token(Token = "0x6001947")]
			[Address(RVA = "0xB69A30", Offset = "0xB69A30", VA = "0xB69A30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C634", Offset = "0x93C634")]
			private set
			{
			}
		}

		[Token(Token = "0x1700030F")]
		public static HMDActivityStatusType HMDActivityStatus
		{
			[Token(Token = "0x6001948")]
			[Address(RVA = "0xB69A9C", Offset = "0xB69A9C", VA = "0xB69A9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C644", Offset = "0x93C644")]
			get
			{
				return default(HMDActivityStatusType);
			}
			[Token(Token = "0x6001949")]
			[Address(RVA = "0xB69B04", Offset = "0xB69B04", VA = "0xB69B04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C654", Offset = "0x93C654")]
			private set
			{
			}
		}

		[Token(Token = "0x17000310")]
		public static HMDMountStatusType HMDMountStatus
		{
			[Token(Token = "0x600194A")]
			[Address(RVA = "0xB69B70", Offset = "0xB69B70", VA = "0xB69B70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C664", Offset = "0x93C664")]
			get
			{
				return default(HMDMountStatusType);
			}
			[Token(Token = "0x600194B")]
			[Address(RVA = "0xB69BD8", Offset = "0xB69BD8", VA = "0xB69BD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C674", Offset = "0x93C674")]
			private set
			{
			}
		}

		[Token(Token = "0x17000311")]
		public static bool IsPaused
		{
			[Token(Token = "0x600194C")]
			[Address(RVA = "0xB69C44", Offset = "0xB69C44", VA = "0xB69C44")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1400005D")]
		public static event Action OnGameStarted
		{
			[Token(Token = "0x600194D")]
			[Address(RVA = "0xB69CAC", Offset = "0xB69CAC", VA = "0xB69CAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C684", Offset = "0x93C684")]
			add
			{
			}
			[Token(Token = "0x600194E")]
			[Address(RVA = "0xB69DDC", Offset = "0xB69DDC", VA = "0xB69DDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C694", Offset = "0x93C694")]
			remove
			{
			}
		}

		[Token(Token = "0x600194F")]
		[Address(RVA = "0xB69F0C", Offset = "0xB69F0C", VA = "0xB69F0C")]
		public static IPromise InitializeHUD()
		{
			return null;
		}

		[Token(Token = "0x6001950")]
		[Address(RVA = "0xB6A0C8", Offset = "0xB6A0C8", VA = "0xB6A0C8")]
		public static IPromise LoadOptions()
		{
			return null;
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0xB6A174", Offset = "0xB6A174", VA = "0xB6A174")]
		public static IPromise LoadSettings()
		{
			return null;
		}

		[Token(Token = "0x6001952")]
		[Address(RVA = "0xB6A23C", Offset = "0xB6A23C", VA = "0xB6A23C")]
		public static IPromise InitializeGame()
		{
			return null;
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0xB6A664", Offset = "0xB6A664", VA = "0xB6A664")]
		public static IPromise LoadAndCacheSaveData()
		{
			return null;
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0xB6A700", Offset = "0xB6A700", VA = "0xB6A700")]
		public static void RaiseOnGameStarted()
		{
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0xB6A7E8", Offset = "0xB6A7E8", VA = "0xB6A7E8")]
		public static void StartGame()
		{
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0xB6A784", Offset = "0xB6A784", VA = "0xB6A784")]
		public static void SetGameState(GameState newGameState)
		{
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0xB6A85C", Offset = "0xB6A85C", VA = "0xB6A85C")]
		public static void PauseGame(bool shouldPause)
		{
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0xB6A928", Offset = "0xB6A928", VA = "0xB6A928")]
		public static void HandlePause()
		{
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0xB6AAB8", Offset = "0xB6AAB8", VA = "0xB6AAB8")]
		public static void SetHMDActivityStatus(HMDActivityStatusType hmdActivityStatus)
		{
		}

		[Token(Token = "0x600195A")]
		[Address(RVA = "0xB6ABAC", Offset = "0xB6ABAC", VA = "0xB6ABAC")]
		public static void SetHMDMountStatus(HMDMountStatusType hmdMountStatus)
		{
		}

		[Token(Token = "0x600195B")]
		[Address(RVA = "0xB6ACA0", Offset = "0xB6ACA0", VA = "0xB6ACA0")]
		public static void SendAnalyticsEvent(string eventName)
		{
		}

		[Token(Token = "0x600195C")]
		[Address(RVA = "0xB6AD84", Offset = "0xB6AD84", VA = "0xB6AD84")]
		public static void SendAnalyticsEvent(string eventName, IDictionary<string, object> eventData)
		{
		}

		[Token(Token = "0x600195D")]
		[Address(RVA = "0xB61490", Offset = "0xB61490", VA = "0xB61490")]
		public static void SendGameSavedAnalyticsEvent(IDictionary<string, object> eventData)
		{
		}
	}
	[Token(Token = "0x2000324")]
	public class GameOptions : ScriptableObject
	{
		[Token(Token = "0x4001301")]
		public const string Name = "PitGameOptions";

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x932268", Offset = "0x932268")]
		public PlatformType Platform;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9322A0", Offset = "0x9322A0")]
		public bool Release;

		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameVersion GameVersion;

		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int Region;

		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEngine.Object MainManifest;

		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEngine.Object QuestManifest;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public UnityEngine.Object QuestManifestRelease;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9322D8", Offset = "0x9322D8")]
		public float RecenterForwardMultiplier;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float RecenterUpAddOn;

		[Token(Token = "0x400130B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float RotationIncrement;

		[Token(Token = "0x400130C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float MovementIncrement;

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x932310", Offset = "0x932310")]
		public bool ShowTitleScene;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool LoadFromSave;

		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int SaveSlot;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool LoadBiome;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public BiomeType CustomStartBiome;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Cortopia.Scripts.Rooms.RoomType CustomStartRoom;

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public CharacterType CustomStartCharacters;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x932348", Offset = "0x932348")]
		public bool RenderTrailerCamera;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int MaximumLoadedBiomes;

		[Token(Token = "0x4001316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x932380", Offset = "0x932380")]
		public bool ShowFPSCounter;

		[Token(Token = "0x4001317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		public bool UseDebugInput;

		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		public bool UseDebugPlatform;

		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
		public bool EnableLog;

		[Token(Token = "0x600195F")]
		[Address(RVA = "0xB6AE80", Offset = "0xB6AE80", VA = "0xB6AE80")]
		public GameOptions()
		{
		}
	}
	[Token(Token = "0x2000325")]
	public enum GameState
	{
		[Token(Token = "0x400131B")]
		Starting,
		[Token(Token = "0x400131C")]
		Loading,
		[Token(Token = "0x400131D")]
		Running,
		[Token(Token = "0x400131E")]
		Paused
	}
	[Serializable]
	[Token(Token = "0x2000326")]
	public struct GameVersion
	{
		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Major;

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int Minor;

		[Token(Token = "0x6001960")]
		[Address(RVA = "0x9CD0D0", Offset = "0x9CD0D0", VA = "0x9CD0D0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0xB6AF4C", Offset = "0xB6AF4C", VA = "0xB6AF4C")]
		public static implicit operator string(GameVersion version)
		{
			return null;
		}
	}
	[Token(Token = "0x2000327")]
	public class InputManager : MonoBehaviour
	{
		[Token(Token = "0x20005AF")]
		private enum ButtonState
		{
			[Token(Token = "0x40020A9")]
			None,
			[Token(Token = "0x40020AA")]
			Down,
			[Token(Token = "0x40020AB")]
			Hold,
			[Token(Token = "0x40020AC")]
			Up
		}

		[Token(Token = "0x20005B0")]
		private enum InputType
		{
			[Token(Token = "0x40020AE")]
			Axis = 1,
			[Token(Token = "0x40020AF")]
			Button = 2,
			[Token(Token = "0x40020B0")]
			Trigger = 4
		}

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private IPlatformInput m_currentInput;

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly IDictionary<AxisType, Vector3> m_axisStates;

		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly IDictionary<ButtonType, ButtonState> m_buttonStates;

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly IDictionary<TriggerType, float> m_triggerStates;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly IDictionary<Cortopia.Scripts.Platform.Input.TouchType, bool> m_touchStates;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9323B8", Offset = "0x9323B8")]
		private bool <IsInputLocked>k__BackingField;

		[Token(Token = "0x17000312")]
		public bool IsInputLocked
		{
			[Token(Token = "0x6001962")]
			[Address(RVA = "0xB6AF70", Offset = "0xB6AF70", VA = "0xB6AF70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C6A4", Offset = "0x93C6A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001963")]
			[Address(RVA = "0xB6AF78", Offset = "0xB6AF78", VA = "0xB6AF78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C6B4", Offset = "0x93C6B4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000313")]
		public InputDeviceType InputDeviceType
		{
			[Token(Token = "0x6001964")]
			[Address(RVA = "0xB6AF84", Offset = "0xB6AF84", VA = "0xB6AF84")]
			get
			{
				return default(InputDeviceType);
			}
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0xB6B038", Offset = "0xB6B038", VA = "0xB6B038")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0xB6B47C", Offset = "0xB6B47C", VA = "0xB6B47C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0xB6BE30", Offset = "0xB6BE30", VA = "0xB6BE30")]
		public void SetInputLocked(bool setLocked)
		{
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0xB5DC94", Offset = "0xB5DC94", VA = "0xB5DC94")]
		public Vector2 GetAxis(AxisType axis)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0xB6C340", Offset = "0xB6C340", VA = "0xB6C340")]
		public float GetTrigger(TriggerType trigger)
		{
			return default(float);
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0xB5D3EC", Offset = "0xB5D3EC", VA = "0xB5D3EC")]
		public bool GetButtonDown(ButtonType button)
		{
			return default(bool);
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0xB6C404", Offset = "0xB6C404", VA = "0xB6C404")]
		public bool GetButton(ButtonType button)
		{
			return default(bool);
		}

		[Token(Token = "0x600196C")]
		[Address(RVA = "0xB6C4D4", Offset = "0xB6C4D4", VA = "0xB6C4D4")]
		public bool GetButtonUp(ButtonType button)
		{
			return default(bool);
		}

		[Token(Token = "0x600196D")]
		[Address(RVA = "0xB6C5A4", Offset = "0xB6C5A4", VA = "0xB6C5A4")]
		public bool GetTouch(Cortopia.Scripts.Platform.Input.TouchType touch)
		{
			return default(bool);
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0xB6BE7C", Offset = "0xB6BE7C", VA = "0xB6BE7C")]
		private void ClearInputStates(InputType inputTypeMask)
		{
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0xB6B0D4", Offset = "0xB6B0D4", VA = "0xB6B0D4")]
		private void TryClearOldInputs()
		{
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0xB6B0E8", Offset = "0xB6B0E8", VA = "0xB6B0E8")]
		private void DefineButtonStates()
		{
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0xB6C668", Offset = "0xB6C668", VA = "0xB6C668")]
		public InputManager()
		{
		}
	}
	[Token(Token = "0x2000328")]
	public class InteractionsManager : MonoBehaviour
	{
		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PointerInteractionHighlight m_pointerInteractionHighlightPrefab;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int m_pointerHighlightCount;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private InteractionHighlight m_highlightPrefab;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private InputIconType m_inputIconType;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool m_isHighlightBlocked;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractionHighlight m_highlightInstance;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PointerInteractionHighlight[] m_interactionHighlightPool;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ISet<IHighlightableInteractable> m_pointerInteractables;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IDictionary<Character, List<ICharacterInteractable>> m_characterInteractables;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<ICharacterInteractable> m_filterList;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private EventToken m_characterActivatedEventToken;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private EventToken m_characterDisabledEventToken;

		[Token(Token = "0x6001972")]
		[Address(RVA = "0xB6CA10", Offset = "0xB6CA10", VA = "0xB6CA10")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0xB6CAA4", Offset = "0xB6CAA4", VA = "0xB6CAA4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0xB6CF1C", Offset = "0xB6CF1C", VA = "0xB6CF1C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0xB6CE6C", Offset = "0xB6CE6C", VA = "0xB6CE6C")]
		public void UpdateHighlightInteractableInputIcon(Sprite sprite)
		{
		}

		[Token(Token = "0x6001976")]
		[Address(RVA = "0xB6CFE0", Offset = "0xB6CFE0", VA = "0xB6CFE0")]
		public void SetInteractionsHighlightBlocked(bool isBlocked)
		{
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0xB6D0B0", Offset = "0xB6D0B0", VA = "0xB6D0B0")]
		public void ClearAllInteractables()
		{
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0xB5D954", Offset = "0xB5D954", VA = "0xB5D954")]
		public void ClearInteractables(Character character)
		{
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0xB6D448", Offset = "0xB6D448", VA = "0xB6D448")]
		public void ClearInteractable(ICharacterInteractable interactable)
		{
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0xB6D7A0", Offset = "0xB6D7A0", VA = "0xB6D7A0")]
		public void TryAddInteractable(Character character, ICharacterInteractable interactable)
		{
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0xB6DA8C", Offset = "0xB6DA8C", VA = "0xB6DA8C")]
		public void TryRemoveInteractable(Character character, ICharacterInteractable interactable)
		{
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0xB6DA54", Offset = "0xB6DA54", VA = "0xB6DA54")]
		public void EnableHighlight(ICharacterInteractable interactable)
		{
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0xB6DC58", Offset = "0xB6DC58", VA = "0xB6DC58")]
		public void DisableHighlight(ICharacterInteractable interactable)
		{
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0xB6CFF8", Offset = "0xB6CFF8", VA = "0xB6CFF8")]
		private void DisableHighlight()
		{
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0xB6DCCC", Offset = "0xB6DCCC", VA = "0xB6DCCC")]
		public void EnablePointerHighlight(IHighlightableInteractable interactable, float hintTime)
		{
		}

		[Token(Token = "0x6001980")]
		[Address(RVA = "0xB6DEFC", Offset = "0xB6DEFC", VA = "0xB6DEFC")]
		public void DisablePointerHighlight(IHighlightableInteractable interactable, bool interactAndDisable)
		{
		}

		[Token(Token = "0x6001981")]
		[Address(RVA = "0xB6D028", Offset = "0xB6D028", VA = "0xB6D028")]
		public void UpdateHighlightInteractable(bool defaultDisableHighlight = true)
		{
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0xB6E0F0", Offset = "0xB6E0F0", VA = "0xB6E0F0")]
		private void UpdateHighlightInteractable(Character characterControl, bool defaultDisableHighlight = true)
		{
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0xB6DE5C", Offset = "0xB6DE5C", VA = "0xB6DE5C")]
		private PointerInteractionHighlight GetInteractionHighlightFromPool()
		{
			return null;
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0xB6CD18", Offset = "0xB6CD18", VA = "0xB6CD18")]
		private void SpawnInteractionHighlightPool()
		{
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0xB6E394", Offset = "0xB6E394", VA = "0xB6E394")]
		private PointerInteractionHighlight SpawnAdditionalInteractionHighlight()
		{
			return null;
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0xB6E4C4", Offset = "0xB6E4C4", VA = "0xB6E4C4")]
		private void OnCharacterActivated(CharacterEvents.CharacterActivatedEvent eventData)
		{
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0xB6E4FC", Offset = "0xB6E4FC", VA = "0xB6E4FC")]
		private void OnCharacterDisabled(CharacterEvents.CharacterDisabledEvent eventData)
		{
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0xB6E53C", Offset = "0xB6E53C", VA = "0xB6E53C")]
		public InteractionsManager()
		{
		}
	}
	[Token(Token = "0x2000329")]
	public class IntroManager : TitleManager
	{
		[Serializable]
		[Token(Token = "0x20005B1")]
		public struct SaveSlotInfo
		{
			[Token(Token = "0x40020B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public TMP_Text InvitationsFoundText;

			[Token(Token = "0x40020B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public TMP_Text BiomeText;

			[Token(Token = "0x40020B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Image BiomeIcon;

			[Token(Token = "0x40020B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Image InvitationIcon;

			[Token(Token = "0x40020B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Localize Localize;
		}

		[Token(Token = "0x20005B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927CC0", Offset = "0x927CC0")]
		private sealed class <PlayIntroSequence>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IntroManager <>4__this;

			[Token(Token = "0x170004B4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60026C9")]
				[Address(RVA = "0xB18FE8", Offset = "0xB18FE8", VA = "0xB18FE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004B5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026CB")]
				[Address(RVA = "0xB19058", Offset = "0xB19058", VA = "0xB19058", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026C6")]
			[Address(RVA = "0xB187F8", Offset = "0xB187F8", VA = "0xB187F8")]
			[DebuggerHidden]
			public <PlayIntroSequence>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x60026C7")]
			[Address(RVA = "0xB18824", Offset = "0xB18824", VA = "0xB18824", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026C8")]
			[Address(RVA = "0xB18828", Offset = "0xB18828", VA = "0xB18828", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026CA")]
			[Address(RVA = "0xB18FF0", Offset = "0xB18FF0", VA = "0xB18FF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927CD0", Offset = "0x927CD0")]
		private sealed class <PlayTitleSequence>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IntroManager <>4__this;

			[Token(Token = "0x170004B6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60026CF")]
				[Address(RVA = "0xB191A8", Offset = "0xB191A8", VA = "0xB191A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004B7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026D1")]
				[Address(RVA = "0xB19218", Offset = "0xB19218", VA = "0xB19218", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026CC")]
			[Address(RVA = "0xB19060", Offset = "0xB19060", VA = "0xB19060")]
			[DebuggerHidden]
			public <PlayTitleSequence>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x60026CD")]
			[Address(RVA = "0xB1908C", Offset = "0xB1908C", VA = "0xB1908C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026CE")]
			[Address(RVA = "0xB19090", Offset = "0xB19090", VA = "0xB19090", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026D0")]
			[Address(RVA = "0xB191B0", Offset = "0xB191B0", VA = "0xB191B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927CE0", Offset = "0x927CE0")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x40020BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool awaitMainLoad;

			[Token(Token = "0x60026D2")]
			[Address(RVA = "0xB17884", Offset = "0xB17884", VA = "0xB17884")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x60026D3")]
			[Address(RVA = "0xB1788C", Offset = "0xB1788C", VA = "0xB1788C")]
			internal void <LoadCore>b__0()
			{
			}
		}

		[Token(Token = "0x20005B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927CF0", Offset = "0x927CF0")]
		private sealed class <LoadCore>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private <>c__DisplayClass25_0 <>8__1;

			[Token(Token = "0x170004B8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60026D7")]
				[Address(RVA = "0xB18630", Offset = "0xB18630", VA = "0xB18630", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004B9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026D9")]
				[Address(RVA = "0xB186A0", Offset = "0xB186A0", VA = "0xB186A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026D4")]
			[Address(RVA = "0xB18408", Offset = "0xB18408", VA = "0xB18408")]
			[DebuggerHidden]
			public <LoadCore>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x60026D5")]
			[Address(RVA = "0xB18434", Offset = "0xB18434", VA = "0xB18434", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026D6")]
			[Address(RVA = "0xB18438", Offset = "0xB18438", VA = "0xB18438", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026D8")]
			[Address(RVA = "0xB18638", Offset = "0xB18638", VA = "0xB18638", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927D00", Offset = "0x927D00")]
		private sealed class <LoadSavedBiome>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IntroManager <>4__this;

			[Token(Token = "0x170004BA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60026DD")]
				[Address(RVA = "0xB18780", Offset = "0xB18780", VA = "0xB18780", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004BB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026DF")]
				[Address(RVA = "0xB187F0", Offset = "0xB187F0", VA = "0xB187F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026DA")]
			[Address(RVA = "0xB186A8", Offset = "0xB186A8", VA = "0xB186A8")]
			[DebuggerHidden]
			public <LoadSavedBiome>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x60026DB")]
			[Address(RVA = "0xB186D4", Offset = "0xB186D4", VA = "0xB186D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026DC")]
			[Address(RVA = "0xB186D8", Offset = "0xB186D8", VA = "0xB186D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026DE")]
			[Address(RVA = "0xB18788", Offset = "0xB18788", VA = "0xB18788", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927D10", Offset = "0x927D10")]
		private sealed class <StartNewGame>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IntroManager <>4__this;

			[Token(Token = "0x170004BC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60026E3")]
				[Address(RVA = "0xB19650", Offset = "0xB19650", VA = "0xB19650", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004BD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026E5")]
				[Address(RVA = "0xB196C0", Offset = "0xB196C0", VA = "0xB196C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026E0")]
			[Address(RVA = "0xB19220", Offset = "0xB19220", VA = "0xB19220")]
			[DebuggerHidden]
			public <StartNewGame>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x60026E1")]
			[Address(RVA = "0xB1924C", Offset = "0xB1924C", VA = "0xB1924C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026E2")]
			[Address(RVA = "0xB19250", Offset = "0xB19250", VA = "0xB19250", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026E4")]
			[Address(RVA = "0xB19658", Offset = "0xB19658", VA = "0xB19658", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927D20", Offset = "0x927D20")]
		private sealed class <ContinueGame>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IntroManager <>4__this;

			[Token(Token = "0x40020C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int saveSlotIndex;

			[Token(Token = "0x170004BE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60026E9")]
				[Address(RVA = "0xB17C74", Offset = "0xB17C74", VA = "0xB17C74", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004BF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026EB")]
				[Address(RVA = "0xB17CE4", Offset = "0xB17CE4", VA = "0xB17CE4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026E6")]
			[Address(RVA = "0xB178A4", Offset = "0xB178A4", VA = "0xB178A4")]
			[DebuggerHidden]
			public <ContinueGame>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x60026E7")]
			[Address(RVA = "0xB178D0", Offset = "0xB178D0", VA = "0xB178D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026E8")]
			[Address(RVA = "0xB178D4", Offset = "0xB178D4", VA = "0xB178D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026EA")]
			[Address(RVA = "0xB17C7C", Offset = "0xB17C7C", VA = "0xB17C7C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927D30", Offset = "0x927D30")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x40020CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool isLoadingGame;

			[Token(Token = "0x60026EC")]
			[Address(RVA = "0xB17894", Offset = "0xB17894", VA = "0xB17894")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x60026ED")]
			[Address(RVA = "0xB1789C", Offset = "0xB1789C", VA = "0xB1789C")]
			internal void <Load>b__0()
			{
			}
		}

		[Token(Token = "0x20005BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927D40", Offset = "0x927D40")]
		private sealed class <Load>d__31 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int saveSlotToLoad;

			[Token(Token = "0x40020CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private <>c__DisplayClass31_0 <>8__1;

			[Token(Token = "0x170004C0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60026F1")]
				[Address(RVA = "0xB18390", Offset = "0xB18390", VA = "0xB18390", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004C1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026F3")]
				[Address(RVA = "0xB18400", Offset = "0xB18400", VA = "0xB18400", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026EE")]
			[Address(RVA = "0xB18078", Offset = "0xB18078", VA = "0xB18078")]
			[DebuggerHidden]
			public <Load>d__31(int <>1__state)
			{
			}

			[Token(Token = "0x60026EF")]
			[Address(RVA = "0xB180A4", Offset = "0xB180A4", VA = "0xB180A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026F0")]
			[Address(RVA = "0xB180A8", Offset = "0xB180A8", VA = "0xB180A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026F2")]
			[Address(RVA = "0xB18398", Offset = "0xB18398", VA = "0xB18398", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927D50", Offset = "0x927D50")]
		private sealed class <InitializeNewGame>d__32 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IntroManager <>4__this;

			[Token(Token = "0x170004C2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60026F7")]
				[Address(RVA = "0xB18000", Offset = "0xB18000", VA = "0xB18000", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004C3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60026F9")]
				[Address(RVA = "0xB18070", Offset = "0xB18070", VA = "0xB18070", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60026F4")]
			[Address(RVA = "0xB17CEC", Offset = "0xB17CEC", VA = "0xB17CEC")]
			[DebuggerHidden]
			public <InitializeNewGame>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x60026F5")]
			[Address(RVA = "0xB17D18", Offset = "0xB17D18", VA = "0xB17D18", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60026F6")]
			[Address(RVA = "0xB17D1C", Offset = "0xB17D1C", VA = "0xB17D1C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60026F8")]
			[Address(RVA = "0xB18008", Offset = "0xB18008", VA = "0xB18008", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927D60", Offset = "0x927D60")]
		private sealed class <>c
		{
			[Token(Token = "0x40020D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40020D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action <>9__33_0;

			[Token(Token = "0x60026FB")]
			[Address(RVA = "0xB17800", Offset = "0xB17800", VA = "0xB17800")]
			public <>c()
			{
			}

			[Token(Token = "0x60026FC")]
			[Address(RVA = "0xB17808", Offset = "0xB17808", VA = "0xB17808")]
			internal void <OnCharacterActivated>b__33_0()
			{
			}
		}

		[Token(Token = "0x4001333")]
		private const string NewGameStartedAnalyticsEvent = "NewGameStarted";

		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly YieldInstruction m_waitForButtonDisplay;

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x932408", Offset = "0x932408")]
		[SerializeField]
		private ScriptableEvent m_introTimelineStartEvent;

		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private ScriptableEvent m_startTutorialEvent;

		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private CustomButtonHandler m_newGameButtonHandler;

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private CustomButtonHandler m_mainButtonHandler;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private CustomButtonHandler m_newGameConfirmButtonHandler;

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x932494", Offset = "0x932494")]
		[SerializeField]
		protected AudioClip m_pressButtonStinger;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9324E0", Offset = "0x9324E0")]
		[SerializeField]
		private Sprite[] m_biomeSprites;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x93252C", Offset = "0x93252C")]
		[SerializeField]
		private SaveSlotInfo[] m_saveSlotsInfo;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private SaveSlotInfo[] m_loadSlotsInfo;

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private EventToken m_playerActivatedEventToken;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Adventurer m_adventurer;

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private CustomButtonHandler m_activeMainButtons;

		[Token(Token = "0x6001989")]
		[Address(RVA = "0xB6E5E4", Offset = "0xB6E5E4", VA = "0xB6E5E4", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600198A")]
		[Address(RVA = "0xB6E6B0", Offset = "0xB6E6B0", VA = "0xB6E6B0")]
		public void StartIntro(ScriptableVariable skipLogoSequence)
		{
		}

		[Token(Token = "0x600198B")]
		[Address(RVA = "0xB6EA0C", Offset = "0xB6EA0C", VA = "0xB6EA0C")]
		public void NewGame()
		{
		}

		[Token(Token = "0x600198C")]
		[Address(RVA = "0xB6EB38", Offset = "0xB6EB38", VA = "0xB6EB38")]
		public void UpdateCurrentSaveSlot(int saveslotindex)
		{
		}

		[Token(Token = "0x600198D")]
		[Address(RVA = "0xB6EBB4", Offset = "0xB6EBB4", VA = "0xB6EBB4")]
		public void TryNewSaveSlot(int saveSlotIndex)
		{
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0xB6ECE4", Offset = "0xB6ECE4", VA = "0xB6ECE4")]
		public void TryLoadSaveSlot(int saveSlotIndex)
		{
		}

		[Token(Token = "0x600198F")]
		[Address(RVA = "0xB6EE5C", Offset = "0xB6EE5C", VA = "0xB6EE5C")]
		public void Back()
		{
		}

		[Token(Token = "0x6001990")]
		[Address(RVA = "0xB6E998", Offset = "0xB6E998", VA = "0xB6E998")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93C6C4", Offset = "0x93C6C4")]
		private IEnumerator PlayIntroSequence()
		{
			return null;
		}

		[Token(Token = "0x6001991")]
		[Address(RVA = "0xB6E924", Offset = "0xB6E924", VA = "0xB6E924")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93C728", Offset = "0x93C728")]
		private IEnumerator PlayTitleSequence()
		{
			return null;
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0xB6EE90", Offset = "0xB6EE90", VA = "0xB6EE90")]
		private void SpawnCharacters()
		{
		}

		[Token(Token = "0x6001993")]
		[Address(RVA = "0xB6EF9C", Offset = "0xB6EF9C", VA = "0xB6EF9C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93C78C", Offset = "0x93C78C")]
		private IEnumerator LoadCore()
		{
			return null;
		}

		[Token(Token = "0x6001994")]
		[Address(RVA = "0xB6EFFC", Offset = "0xB6EFFC", VA = "0xB6EFFC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93C7F0", Offset = "0x93C7F0")]
		private IEnumerator LoadSavedBiome()
		{
			return null;
		}

		[Token(Token = "0x6001995")]
		[Address(RVA = "0xB6F070", Offset = "0xB6F070", VA = "0xB6F070")]
		private void StartGame()
		{
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0xB6F4DC", Offset = "0xB6F4DC", VA = "0xB6F4DC")]
		private void SetStartupLanguage()
		{
		}

		[Token(Token = "0x6001997")]
		[Address(RVA = "0xB6EAC4", Offset = "0xB6EAC4", VA = "0xB6EAC4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93C854", Offset = "0x93C854")]
		private IEnumerator StartNewGame()
		{
			return null;
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0xB6EDC4", Offset = "0xB6EDC4", VA = "0xB6EDC4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93C8B8", Offset = "0x93C8B8")]
		private IEnumerator ContinueGame(int saveSlotIndex)
		{
			return null;
		}

		[Token(Token = "0x6001999")]
		[Address(RVA = "0xB6F564", Offset = "0xB6F564", VA = "0xB6F564")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93C91C", Offset = "0x93C91C")]
		private IEnumerator Load(int saveSlotToLoad)
		{
			return null;
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0xB6F5D8", Offset = "0xB6F5D8", VA = "0xB6F5D8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93C980", Offset = "0x93C980")]
		private IEnumerator InitializeNewGame()
		{
			return null;
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0xB6F64C", Offset = "0xB6F64C", VA = "0xB6F64C")]
		private void OnCharacterActivated(CharacterEvents.CharacterActivatedEvent eventData)
		{
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0xB6F1E0", Offset = "0xB6F1E0", VA = "0xB6F1E0")]
		private void InitializeSaveSlots()
		{
		}

		[Token(Token = "0x600199D")]
		[Address(RVA = "0xB6F7A8", Offset = "0xB6F7A8", VA = "0xB6F7A8")]
		private void SetSaveSlotInfoText(int saveSlotIndex, SaveSlotInfo saveSlotInfo)
		{
		}

		[Token(Token = "0x600199E")]
		[Address(RVA = "0xB6F958", Offset = "0xB6F958", VA = "0xB6F958")]
		private void InitializeOldGame()
		{
		}

		[Token(Token = "0x600199F")]
		[Address(RVA = "0xB6F9F4", Offset = "0xB6F9F4", VA = "0xB6F9F4")]
		private void LoadBiome()
		{
		}

		[Token(Token = "0x60019A0")]
		[Address(RVA = "0xB6FB88", Offset = "0xB6FB88", VA = "0xB6FB88")]
		private void TryActivateTutorial()
		{
		}

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0xB6FC80", Offset = "0xB6FC80", VA = "0xB6FC80", Slot = "5")]
		protected override void DisableLogos()
		{
		}

		[Token(Token = "0x60019A2")]
		[Address(RVA = "0xB6E610", Offset = "0xB6E610", VA = "0xB6E610")]
		private void DisableInputButtons(bool immediate = false)
		{
		}

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0xB6FCD8", Offset = "0xB6FCD8", VA = "0xB6FCD8")]
		public IntroManager()
		{
		}

		[Token(Token = "0x60019A4")]
		[Address(RVA = "0xB6FD84", Offset = "0xB6FD84", VA = "0xB6FD84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C9E4", Offset = "0x93C9E4")]
		private void <StartGame>b__27_0(bool hasSave)
		{
		}
	}
	[Token(Token = "0x200032A")]
	public class LevelManager : MonoBehaviour
	{
		[Token(Token = "0x20005BD")]
		private struct Levels
		{
			[Token(Token = "0x40020D4")]
			public const string StartScene = "StartScene";

			[Token(Token = "0x40020D5")]
			public const string Main = "Main";

			[Token(Token = "0x40020D6")]
			public const string NavMesh = "NavMesh";

			[Token(Token = "0x40020D7")]
			public const string Title = "Title";

			[Token(Token = "0x40020D8")]
			public const string LOD = "LOD";
		}

		[Token(Token = "0x20005BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927D70", Offset = "0x927D70")]
		private sealed class <>c__DisplayClass38_0
		{
			[Token(Token = "0x40020D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LevelManager <>4__this;

			[Token(Token = "0x40020DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool saveGame;

			[Token(Token = "0x40020DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public BiomeType biomeType;

			[Token(Token = "0x40020DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action <>9__1;

			[Token(Token = "0x60026FD")]
			[Address(RVA = "0xB1C9C8", Offset = "0xB1C9C8", VA = "0xB1C9C8")]
			public <>c__DisplayClass38_0()
			{
			}

			[Token(Token = "0x60026FE")]
			[Address(RVA = "0xB1E294", Offset = "0xB1E294", VA = "0xB1E294")]
			internal void <SwitchBiome>b__0()
			{
			}

			[Token(Token = "0x60026FF")]
			[Address(RVA = "0xB1E7F8", Offset = "0xB1E7F8", VA = "0xB1E7F8")]
			internal void <SwitchBiome>b__1()
			{
			}
		}

		[Token(Token = "0x20005BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927D80", Offset = "0x927D80")]
		private sealed class <LoadLevelQueue>d__46 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LevelManager <>4__this;

			[Token(Token = "0x170004C4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002703")]
				[Address(RVA = "0xB1EB8C", Offset = "0xB1EB8C", VA = "0xB1EB8C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004C5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002705")]
				[Address(RVA = "0xB1EBFC", Offset = "0xB1EBFC", VA = "0xB1EBFC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002700")]
			[Address(RVA = "0xB1DA1C", Offset = "0xB1DA1C", VA = "0xB1DA1C")]
			[DebuggerHidden]
			public <LoadLevelQueue>d__46(int <>1__state)
			{
			}

			[Token(Token = "0x6002701")]
			[Address(RVA = "0xB1EA7C", Offset = "0xB1EA7C", VA = "0xB1EA7C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002702")]
			[Address(RVA = "0xB1EA80", Offset = "0xB1EA80", VA = "0xB1EA80", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002704")]
			[Address(RVA = "0xB1EB94", Offset = "0xB1EB94", VA = "0xB1EB94", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001341")]
		public const BiomeType DefaultBiome = BiomeType.Intro;

		[Token(Token = "0x4001342")]
		public const Cortopia.Scripts.Rooms.RoomType DefaultStartRoom = Cortopia.Scripts.Rooms.RoomType.HomeScene;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ScriptableEvent m_playTitleEvent;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private BoolVariable m_skipLogoSequence;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_sendBiomeActivatedEvent;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool m_saveOnBiomeActivated;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		private bool m_waitForStartup;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Cortopia.Scripts.Rooms.Room m_lastLoadedRoom;

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Cortopia.Scripts.Rooms.RoomType m_customStartRoom;

		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ISet<Cortopia.Scripts.Rooms.RoomType> m_loadedRooms;

		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ISet<Cortopia.Scripts.Rooms.RoomType> m_pendingRooms;

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private IList<BiomeType> m_loadedBiomes;

		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IReadOnlyDictionary<Cortopia.Scripts.Rooms.RoomType, string> m_roomNames;

		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Coroutine m_loadQueueCoroutine;

		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Queue<string> m_loadQueue;

		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Dictionary<string, object> m_analyticsData;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private EventToken m_biomeLoadedEventToken;

		[Token(Token = "0x4001352")]
		private const string RoomRootObjectName = "Gameplay";

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9325A8", Offset = "0x9325A8")]
		private BiomeType <ActiveBiome>k__BackingField;

		[Token(Token = "0x17000314")]
		public BiomeType ActiveBiome
		{
			[Token(Token = "0x60019A7")]
			[Address(RVA = "0xB1BF48", Offset = "0xB1BF48", VA = "0xB1BF48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93CA14", Offset = "0x93CA14")]
			get
			{
				return default(BiomeType);
			}
			[Token(Token = "0x60019A8")]
			[Address(RVA = "0xB1BF50", Offset = "0xB1BF50", VA = "0xB1BF50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93CA24", Offset = "0x93CA24")]
			private set
			{
			}
		}

		[Token(Token = "0x1400005E")]
		private event Action OnMainSceneLoaded
		{
			[Token(Token = "0x60019A5")]
			[Address(RVA = "0xB1BD70", Offset = "0xB1BD70", VA = "0xB1BD70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93C9F4", Offset = "0x93C9F4")]
			add
			{
			}
			[Token(Token = "0x60019A6")]
			[Address(RVA = "0xB1BE5C", Offset = "0xB1BE5C", VA = "0xB1BE5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93CA04", Offset = "0x93CA04")]
			remove
			{
			}
		}

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0xB1BF58", Offset = "0xB1BF58", VA = "0xB1BF58")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0xB1BF80", Offset = "0xB1BF80", VA = "0xB1BF80")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0xB1C03C", Offset = "0xB1C03C", VA = "0xB1C03C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0xB1C0F8", Offset = "0xB1C0F8", VA = "0xB1C0F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0xB1C1E4", Offset = "0xB1C1E4", VA = "0xB1C1E4")]
		public void LoadStartScene(Action onMainSceneLoaded)
		{
		}

		[Token(Token = "0x60019AE")]
		[Address(RVA = "0xB18594", Offset = "0xB18594", VA = "0xB18594")]
		public void LoadCore(bool tryLoadNavMesh, LoadSceneMode loadSceneMode, Action onMainSceneLoaded)
		{
		}

		[Token(Token = "0x60019AF")]
		[Address(RVA = "0xB1C2E0", Offset = "0xB1C2E0", VA = "0xB1C2E0")]
		public void LoadTitle()
		{
		}

		[Token(Token = "0x60019B0")]
		[Address(RVA = "0xB1C354", Offset = "0xB1C354", VA = "0xB1C354")]
		public void ResetTitleSequence()
		{
		}

		[Token(Token = "0x60019B1")]
		[Address(RVA = "0xB1C3F0", Offset = "0xB1C3F0", VA = "0xB1C3F0")]
		public void ValidateStartRoom(Cortopia.Scripts.Rooms.RoomType customStartRoom, out Cortopia.Scripts.Rooms.RoomType startRoom)
		{
		}

		[Token(Token = "0x60019B2")]
		[Address(RVA = "0xB1C5C0", Offset = "0xB1C5C0", VA = "0xB1C5C0")]
		public void MoveGameObjectToRoom(GameObject gameObject, Cortopia.Scripts.Rooms.RoomType roomType)
		{
		}

		[Token(Token = "0x60019B3")]
		[Address(RVA = "0xB1C738", Offset = "0xB1C738", VA = "0xB1C738")]
		public YieldInstruction UnloadSceneAsync(string sceneName)
		{
			return null;
		}

		[Token(Token = "0x60019B4")]
		[Address(RVA = "0xB1C748", Offset = "0xB1C748", VA = "0xB1C748")]
		public void SendBiomeLoadedAnalyticsEvent()
		{
		}

		[Token(Token = "0x60019B5")]
		[Address(RVA = "0xB1C868", Offset = "0xB1C868", VA = "0xB1C868")]
		public void SwitchBiome(BiomeType biomeType, bool saveGame)
		{
		}

		[Token(Token = "0x60019B6")]
		[Address(RVA = "0xB1C9D0", Offset = "0xB1C9D0", VA = "0xB1C9D0")]
		public void LoadBiome(BiomeType biomeType)
		{
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0xB1CED4", Offset = "0xB1CED4", VA = "0xB1CED4")]
		public void UnloadBiome(BiomeType biomeType, Cortopia.Scripts.Rooms.RoomType[] roomsToKeepLoaded)
		{
		}

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0xB1CDA4", Offset = "0xB1CDA4", VA = "0xB1CDA4")]
		public void LoadRooms(params Cortopia.Scripts.Rooms.RoomType[] rooms)
		{
		}

		[Token(Token = "0x60019B9")]
		[Address(RVA = "0xB1D96C", Offset = "0xB1D96C", VA = "0xB1D96C")]
		public void LoadRoom(Cortopia.Scripts.Rooms.RoomType roomType)
		{
		}

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0xB1D17C", Offset = "0xB1D17C", VA = "0xB1D17C")]
		private void UnloadRooms(IReadOnlyList<Cortopia.Scripts.Rooms.RoomType> roomTypes)
		{
		}

		[Token(Token = "0x60019BB")]
		[Address(RVA = "0xB1D6AC", Offset = "0xB1D6AC", VA = "0xB1D6AC")]
		private bool TryEnqueueRoom(Cortopia.Scripts.Rooms.RoomType room)
		{
			return default(bool);
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0xB1D92C", Offset = "0xB1D92C", VA = "0xB1D92C")]
		private void TryStartLevelQueue()
		{
		}

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0xB1D9A8", Offset = "0xB1D9A8", VA = "0xB1D9A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93CA34", Offset = "0x93CA34")]
		private IEnumerator LoadLevelQueue()
		{
			return null;
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0xB1C1F8", Offset = "0xB1C1F8", VA = "0xB1C1F8")]
		private void LoadLOD()
		{
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0xB1C26C", Offset = "0xB1C26C", VA = "0xB1C26C")]
		private void LoadNavMesh()
		{
		}

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0xB1DA48", Offset = "0xB1DA48", VA = "0xB1DA48")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode loadSceneMode)
		{
		}

		[Token(Token = "0x60019C1")]
		[Address(RVA = "0xB1DE40", Offset = "0xB1DE40", VA = "0xB1DE40")]
		private void OnSceneUnloaded(Scene scene)
		{
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0xB1DBF8", Offset = "0xB1DBF8", VA = "0xB1DBF8")]
		private void OnRoomLoaded(Scene scene, Cortopia.Scripts.Rooms.RoomType roomType)
		{
		}

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0xB1CC68", Offset = "0xB1CC68", VA = "0xB1CC68")]
		private void ActivateBiome()
		{
		}

		[Token(Token = "0x60019C4")]
		[Address(RVA = "0xB1DFDC", Offset = "0xB1DFDC", VA = "0xB1DFDC")]
		private void RoomLoaded(Cortopia.Scripts.Rooms.Room room)
		{
		}

		[Token(Token = "0x60019C5")]
		[Address(RVA = "0xB1E1AC", Offset = "0xB1E1AC", VA = "0xB1E1AC")]
		public LevelManager()
		{
		}
	}
	[Token(Token = "0x200032B")]
	public class LoadingScreen : MonoBehaviour
	{
		[Token(Token = "0x20005C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927D90", Offset = "0x927D90")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x40020E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LoadingScreen <>4__this;

			[Token(Token = "0x40020E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action onComplete;

			[Token(Token = "0x6002706")]
			[Address(RVA = "0xB1F3EC", Offset = "0xB1F3EC", VA = "0xB1F3EC")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x6002707")]
			[Address(RVA = "0xB1F3F4", Offset = "0xB1F3F4", VA = "0xB1F3F4")]
			internal void <DoShow>b__2()
			{
			}

			[Token(Token = "0x6002708")]
			[Address(RVA = "0xB1F428", Offset = "0xB1F428", VA = "0xB1F428")]
			internal void <DoShow>b__3()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927DA0", Offset = "0x927DA0")]
		private sealed class <>c
		{
			[Token(Token = "0x40020E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40020E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static DOGetter<float> <>9__26_0;

			[Token(Token = "0x40020E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static DOSetter<float> <>9__26_1;

			[Token(Token = "0x40020E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static DOGetter<float> <>9__27_0;

			[Token(Token = "0x40020E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static DOSetter<float> <>9__27_1;

			[Token(Token = "0x600270A")]
			[Address(RVA = "0xB1F3C4", Offset = "0xB1F3C4", VA = "0xB1F3C4")]
			public <>c()
			{
			}

			[Token(Token = "0x600270B")]
			[Address(RVA = "0xB1F3CC", Offset = "0xB1F3CC", VA = "0xB1F3CC")]
			internal float <DoShow>b__26_0()
			{
				return default(float);
			}

			[Token(Token = "0x600270C")]
			[Address(RVA = "0xB1F3D4", Offset = "0xB1F3D4", VA = "0xB1F3D4")]
			internal void <DoShow>b__26_1(float vol)
			{
			}

			[Token(Token = "0x600270D")]
			[Address(RVA = "0xB1F3DC", Offset = "0xB1F3DC", VA = "0xB1F3DC")]
			internal float <DoHide>b__27_0()
			{
				return default(float);
			}

			[Token(Token = "0x600270E")]
			[Address(RVA = "0xB1F3E4", Offset = "0xB1F3E4", VA = "0xB1F3E4")]
			internal void <DoHide>b__27_1(float vol)
			{
			}
		}

		[Token(Token = "0x20005C2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927DB0", Offset = "0x927DB0")]
		private sealed class <DoShow>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoadingScreen <>4__this;

			[Token(Token = "0x40020EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action onComplete;

			[Token(Token = "0x170004C6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002712")]
				[Address(RVA = "0xB1FFB8", Offset = "0xB1FFB8", VA = "0xB1FFB8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004C7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002714")]
				[Address(RVA = "0xB20028", Offset = "0xB20028", VA = "0xB20028", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600270F")]
			[Address(RVA = "0xB1F2E4", Offset = "0xB1F2E4", VA = "0xB1F2E4")]
			[DebuggerHidden]
			public <DoShow>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6002710")]
			[Address(RVA = "0xB1F9CC", Offset = "0xB1F9CC", VA = "0xB1F9CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002711")]
			[Address(RVA = "0xB1F9D0", Offset = "0xB1F9D0", VA = "0xB1F9D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002713")]
			[Address(RVA = "0xB1FFC0", Offset = "0xB1FFC0", VA = "0xB1FFC0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927DC0", Offset = "0x927DC0")]
		private sealed class <DoHide>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LoadingScreen <>4__this;

			[Token(Token = "0x40020EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action onComplete;

			[Token(Token = "0x40020EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private AsyncOperation <async>5__2;

			[Token(Token = "0x170004C8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002718")]
				[Address(RVA = "0xB1F954", Offset = "0xB1F954", VA = "0xB1F954", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004C9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600271A")]
				[Address(RVA = "0xB1F9C4", Offset = "0xB1F9C4", VA = "0xB1F9C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002715")]
			[Address(RVA = "0xB1F310", Offset = "0xB1F310", VA = "0xB1F310")]
			[DebuggerHidden]
			public <DoHide>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x6002716")]
			[Address(RVA = "0xB1F47C", Offset = "0xB1F47C", VA = "0xB1F47C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002717")]
			[Address(RVA = "0xB1F480", Offset = "0xB1F480", VA = "0xB1F480", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002719")]
			[Address(RVA = "0xB1F95C", Offset = "0xB1F95C", VA = "0xB1F95C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001355")]
		private const int Infinite = -1;

		[Token(Token = "0x4001356")]
		private const float FadeTime = 0.5f;

		[Token(Token = "0x4001357")]
		private const float TargetFps = 90f;

		[Token(Token = "0x4001358")]
		private const float FadeOutSoundTime = 0.5f;

		[Token(Token = "0x4001359")]
		private const float FadeInSoundTime = 1f;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SpriteRenderer m_sprite;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_distance;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_psvrDistance;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_rotationTime;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Ease m_rotationEasing;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_minDisplayTime;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Tween m_fadeTween;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Tween m_rotationTween;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 m_previousPosition;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_startTime;

		[Token(Token = "0x17000315")]
		public float TimeDisplayed
		{
			[Token(Token = "0x60019C6")]
			[Address(RVA = "0xB1EC04", Offset = "0xB1EC04", VA = "0xB1EC04")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000316")]
		public float Distance
		{
			[Token(Token = "0x60019C7")]
			[Address(RVA = "0xB1EC30", Offset = "0xB1EC30", VA = "0xB1EC30")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0xB1EC38", Offset = "0xB1EC38", VA = "0xB1EC38")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019C9")]
		[Address(RVA = "0xB1ECD0", Offset = "0xB1ECD0", VA = "0xB1ECD0")]
		private void Update()
		{
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0xB18DBC", Offset = "0xB18DBC", VA = "0xB18DBC")]
		public YieldInstruction Show()
		{
			return null;
		}

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0xB17C44", Offset = "0xB17C44", VA = "0xB17C44")]
		public YieldInstruction Hide()
		{
			return null;
		}

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0xB1E768", Offset = "0xB1E768", VA = "0xB1E768")]
		public void Show(Action onCompleted)
		{
		}

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0xB1F24C", Offset = "0xB1F24C", VA = "0xB1F24C")]
		public void Hide(Action onCompleted)
		{
		}

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0xB1EF50", Offset = "0xB1EF50", VA = "0xB1EF50")]
		private void GetPositionAndRotation(out Vector3 position, out Quaternion rotation)
		{
		}

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0xB1F11C", Offset = "0xB1F11C", VA = "0xB1F11C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93CA98", Offset = "0x93CA98")]
		private IEnumerator DoShow(Action onComplete)
		{
			return null;
		}

		[Token(Token = "0x60019D0")]
		[Address(RVA = "0xB1F1B4", Offset = "0xB1F1B4", VA = "0xB1F1B4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93CAFC", Offset = "0x93CAFC")]
		private IEnumerator DoHide(Action onComplete)
		{
			return null;
		}

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0xB1F33C", Offset = "0xB1F33C", VA = "0xB1F33C")]
		public LoadingScreen()
		{
		}
	}
	[Token(Token = "0x200032C")]
	public class LODManager : MonoBehaviour
	{
		[Token(Token = "0x20005C4")]
		private enum LODStage
		{
			[Token(Token = "0x40020F1")]
			Intro,
			[Token(Token = "0x40020F2")]
			IntroEstate,
			[Token(Token = "0x40020F3")]
			Estate,
			[Token(Token = "0x40020F4")]
			EstateMirrorRealm,
			[Token(Token = "0x40020F5")]
			MirrorRealm,
			[Token(Token = "0x40020F6")]
			CaterpillarForest,
			[Token(Token = "0x40020F7")]
			CaterpillarForestFourCastles,
			[Token(Token = "0x40020F8")]
			FourCastles,
			[Token(Token = "0x40020F9")]
			KeepOfHearts,
			[Token(Token = "0x40020FA")]
			Party
		}

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject[] m_lodRootObjects;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private EventToken m_biomeActivatedEventToken;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private EventToken m_biomeDeactivatedEventToken;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_firstTimeActivatingBiome;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly Dictionary<BiomeType, LODStage[]> m_lodMap;

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0xB1B3C8", Offset = "0xB1B3C8", VA = "0xB1B3C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0xB1B468", Offset = "0xB1B468", VA = "0xB1B468")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0xB1B560", Offset = "0xB1B560", VA = "0xB1B560")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0xB1B5E8", Offset = "0xB1B5E8", VA = "0xB1B5E8")]
		private void OnBiomeActivated(RoomEvents.BiomeActivatedEvent eventData)
		{
		}

		[Token(Token = "0x60019D6")]
		[Address(RVA = "0xB1B7F4", Offset = "0xB1B7F4", VA = "0xB1B7F4")]
		private void OnBiomeDeactivated(RoomEvents.BiomeDeactivatedEvent eventData)
		{
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0xB1B72C", Offset = "0xB1B72C", VA = "0xB1B72C")]
		private void TryDisableLODForBiome(BiomeType biomeType)
		{
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0xB1B664", Offset = "0xB1B664", VA = "0xB1B664")]
		private void TryEnableLODForBiome(BiomeType biomeType)
		{
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0xB1B908", Offset = "0xB1B908", VA = "0xB1B908")]
		private void TryEnableLOD(LODStage lodStage)
		{
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0xB1B828", Offset = "0xB1B828", VA = "0xB1B828")]
		private void TryDisableLOD(LODStage lodStage)
		{
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0xB1B9E8", Offset = "0xB1B9E8", VA = "0xB1B9E8")]
		public LODManager()
		{
		}
	}
	[Token(Token = "0x200032D")]
	public class MusicManager : MonoBehaviour, IScriptableEventListener
	{
		[Token(Token = "0x20005C5")]
		private struct Defaults
		{
			[Token(Token = "0x40020FB")]
			public const float FadeInTime = 1f;

			[Token(Token = "0x40020FC")]
			public const float FadeOutTime = 1f;
		}

		[Token(Token = "0x20005C6")]
		private enum PlayState
		{
			[Token(Token = "0x40020FE")]
			None,
			[Token(Token = "0x40020FF")]
			FadeOut,
			[Token(Token = "0x4002100")]
			FadeIn,
			[Token(Token = "0x4002101")]
			Switch
		}

		[Token(Token = "0x20005C7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927DD0", Offset = "0x927DD0")]
		private sealed class <FadeMusic>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002102")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002103")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002104")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MusicManager <>4__this;

			[Token(Token = "0x4002105")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float fadeOutTime;

			[Token(Token = "0x4002106")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeInTime;

			[Token(Token = "0x170004CA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600271E")]
				[Address(RVA = "0xB20F7C", Offset = "0xB20F7C", VA = "0xB20F7C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004CB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002720")]
				[Address(RVA = "0xB20FEC", Offset = "0xB20FEC", VA = "0xB20FEC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600271B")]
			[Address(RVA = "0xB20A84", Offset = "0xB20A84", VA = "0xB20A84")]
			[DebuggerHidden]
			public <FadeMusic>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x600271C")]
			[Address(RVA = "0xB20E40", Offset = "0xB20E40", VA = "0xB20E40", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600271D")]
			[Address(RVA = "0xB20E44", Offset = "0xB20E44", VA = "0xB20E44", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600271F")]
			[Address(RVA = "0xB20F84", Offset = "0xB20F84", VA = "0xB20F84", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927DE0", Offset = "0x927DE0")]
		private sealed class <FadeMusic>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002107")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002108")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002109")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MusicManager <>4__this;

			[Token(Token = "0x400210A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float fadeOutTime;

			[Token(Token = "0x400210B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeInTime;

			[Token(Token = "0x400210C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AudioClip[] audioClips;

			[Token(Token = "0x400210D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <i>5__2;

			[Token(Token = "0x170004CC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002724")]
				[Address(RVA = "0xB21324", Offset = "0xB21324", VA = "0xB21324", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004CD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002726")]
				[Address(RVA = "0xB21394", Offset = "0xB21394", VA = "0xB21394", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002721")]
			[Address(RVA = "0xB20AB0", Offset = "0xB20AB0", VA = "0xB20AB0")]
			[DebuggerHidden]
			public <FadeMusic>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x6002722")]
			[Address(RVA = "0xB20FF4", Offset = "0xB20FF4", VA = "0xB20FF4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002723")]
			[Address(RVA = "0xB20FF8", Offset = "0xB20FF8", VA = "0xB20FF8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002725")]
			[Address(RVA = "0xB2132C", Offset = "0xB2132C", VA = "0xB2132C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005C9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927DF0", Offset = "0x927DF0")]
		private sealed class <FadeOutMusic>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400210E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400210F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002110")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MusicManager <>4__this;

			[Token(Token = "0x4002111")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public PlayState state;

			[Token(Token = "0x4002112")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x4002113")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <t>5__2;

			[Token(Token = "0x4002114")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startVolume>5__3;

			[Token(Token = "0x170004CE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600272A")]
				[Address(RVA = "0xB21588", Offset = "0xB21588", VA = "0xB21588", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004CF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600272C")]
				[Address(RVA = "0xB215F8", Offset = "0xB215F8", VA = "0xB215F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002727")]
			[Address(RVA = "0xB20ADC", Offset = "0xB20ADC", VA = "0xB20ADC")]
			[DebuggerHidden]
			public <FadeOutMusic>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x6002728")]
			[Address(RVA = "0xB2139C", Offset = "0xB2139C", VA = "0xB2139C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002729")]
			[Address(RVA = "0xB213A0", Offset = "0xB213A0", VA = "0xB213A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600272B")]
			[Address(RVA = "0xB21590", Offset = "0xB21590", VA = "0xB21590", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927E00", Offset = "0x927E00")]
		private sealed class <FadeInMusic>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002115")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002116")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002117")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MusicManager <>4__this;

			[Token(Token = "0x4002118")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x4002119")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <startVolume>5__3;

			[Token(Token = "0x170004D0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002730")]
				[Address(RVA = "0xB20DC8", Offset = "0xB20DC8", VA = "0xB20DC8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004D1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002732")]
				[Address(RVA = "0xB20E38", Offset = "0xB20E38", VA = "0xB20E38", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600272D")]
			[Address(RVA = "0xB20B08", Offset = "0xB20B08", VA = "0xB20B08")]
			[DebuggerHidden]
			public <FadeInMusic>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x600272E")]
			[Address(RVA = "0xB20C08", Offset = "0xB20C08", VA = "0xB20C08", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600272F")]
			[Address(RVA = "0xB20C0C", Offset = "0xB20C0C", VA = "0xB20C0C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002731")]
			[Address(RVA = "0xB20DD0", Offset = "0xB20DD0", VA = "0xB20DD0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001369")]
		private const float PuzzleResolvedWait = 0.5f;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly MathUtils.MinMax sm_defaultVolume;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly CustomWaitForEndOfFrame m_customWaitForEndOfFrame;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource m_musicAudioSource;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioSource m_stingerAudioSource;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ScriptableEvent m_playStingerEvent;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip m_puzzleResolved;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PlayState m_state;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AudioClip m_pendingMusicClip;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AudioClip[] m_pendingMusicClips;

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0xB20030", Offset = "0xB20030", VA = "0xB20030")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0xB2011C", Offset = "0xB2011C", VA = "0xB2011C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0xB202A8", Offset = "0xB202A8", VA = "0xB202A8", Slot = "4")]
		public void OnEventRaised(ScriptableVariable eventData)
		{
		}

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0xB17BE4", Offset = "0xB17BE4", VA = "0xB17BE4")]
		public void StopAllMusic(float fadeTime = 0f)
		{
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0xB2039C", Offset = "0xB2039C", VA = "0xB2039C")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0xB204CC", Offset = "0xB204CC", VA = "0xB204CC")]
		public void PlayPuzzleResolvedStinger()
		{
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0xB19430", Offset = "0xB19430", VA = "0xB19430")]
		public void PlayStinger(AudioClip clip, float wait = 0f)
		{
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0xB204D8", Offset = "0xB204D8", VA = "0xB204D8")]
		public void SwitchMusic(AudioClip clip, float fadeOutTime, float fadeInTime)
		{
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0xB208D0", Offset = "0xB208D0", VA = "0xB208D0")]
		public void SwitchMusic(AudioClip[] clips, float fadeOutTime, float fadeInTime)
		{
		}

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0xB207F8", Offset = "0xB207F8", VA = "0xB207F8")]
		private void PlayMusic(AudioClip clip)
		{
		}

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0xB20638", Offset = "0xB20638", VA = "0xB20638")]
		private void TryFadeInMusic(AudioClip clip, float fadeInTime)
		{
		}

		[Token(Token = "0x60019E7")]
		[Address(RVA = "0xB20748", Offset = "0xB20748", VA = "0xB20748")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93CB60", Offset = "0x93CB60")]
		private IEnumerator FadeMusic(float fadeOutTime, float fadeInTime)
		{
			return null;
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0xB20940", Offset = "0xB20940", VA = "0xB20940")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93CBC4", Offset = "0x93CBC4")]
		private IEnumerator FadeMusic(AudioClip[] audioClips, float fadeOutTime, float fadeInTime)
		{
			return null;
		}

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0xB20418", Offset = "0xB20418", VA = "0xB20418")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93CC28", Offset = "0x93CC28")]
		private IEnumerator FadeOutMusic(float fadeTime, PlayState state)
		{
			return null;
		}

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0xB20A10", Offset = "0xB20A10", VA = "0xB20A10")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93CC8C", Offset = "0x93CC8C")]
		private IEnumerator FadeInMusic(float fadeTime)
		{
			return null;
		}

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0xB20B34", Offset = "0xB20B34", VA = "0xB20B34")]
		public MusicManager()
		{
		}
	}
	[Token(Token = "0x200032E")]
	public class OutroManager : TitleManager
	{
		[Token(Token = "0x20005CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927E10", Offset = "0x927E10")]
		private sealed class <PlayOutroSequence>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400211A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400211B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400211C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float initialWait;

			[Token(Token = "0x400211D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public OutroManager <>4__this;

			[Token(Token = "0x170004D2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002736")]
				[Address(RVA = "0xB22578", Offset = "0xB22578", VA = "0xB22578", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004D3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002738")]
				[Address(RVA = "0xB225E8", Offset = "0xB225E8", VA = "0xB225E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002733")]
			[Address(RVA = "0xB21A34", Offset = "0xB21A34", VA = "0xB21A34")]
			[DebuggerHidden]
			public <PlayOutroSequence>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6002734")]
			[Address(RVA = "0xB22128", Offset = "0xB22128", VA = "0xB22128", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002735")]
			[Address(RVA = "0xB2212C", Offset = "0xB2212C", VA = "0xB2212C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002737")]
			[Address(RVA = "0xB22580", Offset = "0xB22580", VA = "0xB22580", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927E20", Offset = "0x927E20")]
		private sealed class <ShowCredits>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400211E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400211F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002120")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OutroManager <>4__this;

			[Token(Token = "0x4002121")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <moveTime>5__2;

			[Token(Token = "0x170004D4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600273C")]
				[Address(RVA = "0xB228C8", Offset = "0xB228C8", VA = "0xB228C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004D5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600273E")]
				[Address(RVA = "0xB22938", Offset = "0xB22938", VA = "0xB22938", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002739")]
			[Address(RVA = "0xB21D3C", Offset = "0xB21D3C", VA = "0xB21D3C")]
			[DebuggerHidden]
			public <ShowCredits>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x600273A")]
			[Address(RVA = "0xB225F0", Offset = "0xB225F0", VA = "0xB225F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600273B")]
			[Address(RVA = "0xB225F4", Offset = "0xB225F4", VA = "0xB225F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600273D")]
			[Address(RVA = "0xB228D0", Offset = "0xB228D0", VA = "0xB228D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927E30", Offset = "0x927E30")]
		private sealed class <WaitForNarrationEnd>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002122")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002123")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002124")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OutroManager <>4__this;

			[Token(Token = "0x170004D6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002742")]
				[Address(RVA = "0xB22A0C", Offset = "0xB22A0C", VA = "0xB22A0C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004D7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002744")]
				[Address(RVA = "0xB22A7C", Offset = "0xB22A7C", VA = "0xB22A7C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600273F")]
			[Address(RVA = "0xB21ED0", Offset = "0xB21ED0", VA = "0xB21ED0")]
			[DebuggerHidden]
			public <WaitForNarrationEnd>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6002740")]
			[Address(RVA = "0xB22940", Offset = "0xB22940", VA = "0xB22940", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002741")]
			[Address(RVA = "0xB22944", Offset = "0xB22944", VA = "0xB22944", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002743")]
			[Address(RVA = "0xB22A14", Offset = "0xB22A14", VA = "0xB22A14", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001373")]
		private const float UnhookBabiesThreshold = 50.25f;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x932668", Offset = "0x932668")]
		[SerializeField]
		private float m_timeToCreditsRoll;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float m_titleLoadDelay;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private BehaviourSystem m_outroDialogue;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform m_narratorSubtitleAnchor;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9326E4", Offset = "0x9326E4")]
		[SerializeField]
		private GameObject m_creditsCanvasGo;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private TextMeshProUGUI m_credits;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private TextMeshProUGUI m_productionBabies;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private float m_defaultPositionY;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		private float m_creditsMoveTime;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private float m_babiesFadeTime;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool m_isNarrating;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2 m_startPositionBabies;

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0xB21600", Offset = "0xB21600", VA = "0xB21600", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0xB2181C", Offset = "0xB2181C", VA = "0xB2181C")]
		public void StartOutro(ScriptableVariable initialWait)
		{
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0xB2199C", Offset = "0xB2199C", VA = "0xB2199C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93CCF0", Offset = "0x93CCF0")]
		private IEnumerator PlayOutroSequence(float initialWait)
		{
			return null;
		}

		[Token(Token = "0x60019F0")]
		[Address(RVA = "0xB21A60", Offset = "0xB21A60", VA = "0xB21A60")]
		private void PlaceCameraAndLockPlayer()
		{
		}

		[Token(Token = "0x60019F1")]
		[Address(RVA = "0xB21BF0", Offset = "0xB21BF0", VA = "0xB21BF0")]
		private void PlayOutroNarration()
		{
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0xB21CC8", Offset = "0xB21CC8", VA = "0xB21CC8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93CD54", Offset = "0x93CD54")]
		private IEnumerator ShowCredits()
		{
			return null;
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0xB21D68", Offset = "0xB21D68", VA = "0xB21D68")]
		private void UnloadPartyBiome()
		{
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0xB21E5C", Offset = "0xB21E5C", VA = "0xB21E5C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93CDB8", Offset = "0x93CDB8")]
		private IEnumerator WaitForNarrationEnd()
		{
			return null;
		}

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0xB21EFC", Offset = "0xB21EFC", VA = "0xB21EFC")]
		private void ResetCredits()
		{
		}

		[Token(Token = "0x60019F6")]
		[Address(RVA = "0xB220C8", Offset = "0xB220C8", VA = "0xB220C8")]
		public OutroManager()
		{
		}

		[Token(Token = "0x60019F7")]
		[Address(RVA = "0xB22120", Offset = "0xB22120", VA = "0xB22120")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93CE1C", Offset = "0x93CE1C")]
		private void <PlayOutroNarration>b__17_0()
		{
		}
	}
	[Token(Token = "0x200032F")]
	public class TitleManager : MonoBehaviour
	{
		[Token(Token = "0x20005CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927E40", Offset = "0x927E40")]
		private sealed class <LoadTitleScenes>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002125")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002126")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002127")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TitleManager <>4__this;

			[Token(Token = "0x170004D8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002748")]
				[Address(RVA = "0xB26D04", Offset = "0xB26D04", VA = "0xB26D04", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004D9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600274A")]
				[Address(RVA = "0xB26D74", Offset = "0xB26D74", VA = "0xB26D74", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002745")]
			[Address(RVA = "0xB26690", Offset = "0xB26690", VA = "0xB26690")]
			[DebuggerHidden]
			public <LoadTitleScenes>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6002746")]
			[Address(RVA = "0xB26B10", Offset = "0xB26B10", VA = "0xB26B10", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002747")]
			[Address(RVA = "0xB26B14", Offset = "0xB26B14", VA = "0xB26B14", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002749")]
			[Address(RVA = "0xB26D0C", Offset = "0xB26D0C", VA = "0xB26D0C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001380")]
		protected const float FadeTime = 0.5f;

		[Token(Token = "0x4001381")]
		protected const float FadeInTime = 2f;

		[Token(Token = "0x4001382")]
		protected const float LogoFadeTime = 0.5f;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform m_playerSpawnPoint;

		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x932790", Offset = "0x932790")]
		[SerializeField]
		protected AudioClip m_titleMusic;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected float m_fadeOutPreviousMusicTime;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		protected float m_fadeOutMusicTime;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9327FC", Offset = "0x9327FC")]
		[SerializeField]
		protected MeshRenderer m_companyLogo;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected MeshRenderer m_gameLogo;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x932858", Offset = "0x932858")]
		[SerializeField]
		protected float m_companyLogoDisplayTime;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected bool m_awaitBiomeLoad;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected IPlatformInput m_input;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static EventToken sm_biomeLoadedEventToken;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static EventToken sm_homeLoadedEventToken;

		[Token(Token = "0x60019F8")]
		[Address(RVA = "0xB26688", Offset = "0xB26688", VA = "0xB26688")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60019F9")]
		[Address(RVA = "0xB2174C", Offset = "0xB2174C", VA = "0xB2174C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60019FA")]
		[Address(RVA = "0xB18DEC", Offset = "0xB18DEC", VA = "0xB18DEC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93CE2C", Offset = "0x93CE2C")]
		protected IEnumerator LoadTitleScenes()
		{
			return null;
		}

		[Token(Token = "0x60019FB")]
		[Address(RVA = "0xB266BC", Offset = "0xB266BC", VA = "0xB266BC")]
		protected void OnBiomeLoaded(RoomEvents.BiomeActivatedEvent eventData)
		{
		}

		[Token(Token = "0x60019FC")]
		[Address(RVA = "0xB26748", Offset = "0xB26748", VA = "0xB26748")]
		private void OnRoomLoaded(RoomEvents.RoomLoadedEvent eventData)
		{
		}

		[Token(Token = "0x60019FD")]
		[Address(RVA = "0xB18BC4", Offset = "0xB18BC4", VA = "0xB18BC4")]
		protected YieldInstruction FadeInCompanyLogo()
		{
			return null;
		}

		[Token(Token = "0x60019FE")]
		[Address(RVA = "0xB18CC0", Offset = "0xB18CC0", VA = "0xB18CC0")]
		protected YieldInstruction FadeOutCompanyLogo()
		{
			return null;
		}

		[Token(Token = "0x60019FF")]
		[Address(RVA = "0xB18E60", Offset = "0xB18E60", VA = "0xB18E60")]
		public void PrepareGameLogo()
		{
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0xB18EAC", Offset = "0xB18EAC", VA = "0xB18EAC")]
		protected YieldInstruction FadeInGameLogo()
		{
			return null;
		}

		[Token(Token = "0x6001A01")]
		[Address(RVA = "0xB19554", Offset = "0xB19554", VA = "0xB19554")]
		protected YieldInstruction FadeOutGameLogo()
		{
			return null;
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0xB267F8", Offset = "0xB267F8", VA = "0xB267F8", Slot = "5")]
		protected virtual void DisableLogos()
		{
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0xB18F54", Offset = "0xB18F54", VA = "0xB18F54")]
		protected void PlayTitleMusic()
		{
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0xB22100", Offset = "0xB22100", VA = "0xB22100")]
		public TitleManager()
		{
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0xB26A2C", Offset = "0xB26A2C", VA = "0xB26A2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93CE90", Offset = "0x93CE90")]
		private void <FadeInCompanyLogo>b__19_0()
		{
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0xB26A78", Offset = "0xB26A78", VA = "0xB26A78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93CEA0", Offset = "0x93CEA0")]
		private void <FadeOutCompanyLogo>b__20_0()
		{
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0xB26AC4", Offset = "0xB26AC4", VA = "0xB26AC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93CEB0", Offset = "0x93CEB0")]
		private void <FadeOutGameLogo>b__23_0()
		{
		}
	}
	[Token(Token = "0x2000330")]
	public class VOManager : MonoBehaviour
	{
		[Token(Token = "0x20005CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927E50", Offset = "0x927E50")]
		private sealed class <PlayLines>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002128")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002129")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400212A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CharacterVoiceLine[] voiceLines;

			[Token(Token = "0x400212B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VOManager <>4__this;

			[Token(Token = "0x400212C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private CharacterVoiceLine[] <>7__wrap1;

			[Token(Token = "0x400212D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <>7__wrap2;

			[Token(Token = "0x170004DA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600274E")]
				[Address(RVA = "0xB27D34", Offset = "0xB27D34", VA = "0xB27D34", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004DB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002750")]
				[Address(RVA = "0xB27DA4", Offset = "0xB27DA4", VA = "0xB27DA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600274B")]
			[Address(RVA = "0xB279BC", Offset = "0xB279BC", VA = "0xB279BC")]
			[DebuggerHidden]
			public <PlayLines>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x600274C")]
			[Address(RVA = "0xB27A5C", Offset = "0xB27A5C", VA = "0xB27A5C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600274D")]
			[Address(RVA = "0xB27A60", Offset = "0xB27A60", VA = "0xB27A60", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600274F")]
			[Address(RVA = "0xB27D3C", Offset = "0xB27D3C", VA = "0xB27D3C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Voice m_narratorVoice;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IDictionary<CharacterData, Voice> m_voices;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Voice m_currentSpeaker;

		[Token(Token = "0x1400005F")]
		private event Action<bool> OnVoiceLinesCompleted
		{
			[Token(Token = "0x6001A08")]
			[Address(RVA = "0xB26D7C", Offset = "0xB26D7C", VA = "0xB26D7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93CEC0", Offset = "0x93CEC0")]
			add
			{
			}
			[Token(Token = "0x6001A09")]
			[Address(RVA = "0xB26E68", Offset = "0xB26E68", VA = "0xB26E68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93CED0", Offset = "0x93CED0")]
			remove
			{
			}
		}

		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0xB26F54", Offset = "0xB26F54", VA = "0xB26F54")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0xB26F5C", Offset = "0xB26F5C", VA = "0xB26F5C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0xB27148", Offset = "0xB27148", VA = "0xB27148")]
		public void SetNarratorSubtitleAnchor(Transform anchorPoint)
		{
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0xB26FD0", Offset = "0xB26FD0", VA = "0xB26FD0")]
		public void AddVoice(Voice voice)
		{
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0xB2724C", Offset = "0xB2724C", VA = "0xB2724C")]
		public void RemoveVoice(Voice voice)
		{
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0xB27464", Offset = "0xB27464", VA = "0xB27464")]
		public AnimatedVoice GetAnimatedVoice(CharacterData characterData)
		{
			return null;
		}

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0xB27618", Offset = "0xB27618", VA = "0xB27618")]
		public Voice GetVoice(CharacterData characterData)
		{
			return null;
		}

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0xB27514", Offset = "0xB27514", VA = "0xB27514")]
		private bool CanGetVoice(CharacterData characterData, out Voice voice)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0xB1E3F8", Offset = "0xB1E3F8", VA = "0xB1E3F8")]
		public void AbortAllVO()
		{
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0xB276B4", Offset = "0xB276B4", VA = "0xB276B4")]
		public void AbortVO(CharacterData speaker, bool stopTalking)
		{
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0xB27808", Offset = "0xB27808", VA = "0xB27808")]
		public void PlayVoiceLines(CharacterVoiceLine[] voiceLines, Action<bool> onVoiceLinesCompleted)
		{
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0xB27830", Offset = "0xB27830", VA = "0xB27830")]
		public void PlayVoiceLines(CharacterVoiceLine[] voiceLines)
		{
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0xB27924", Offset = "0xB27924", VA = "0xB27924")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93CEE0", Offset = "0x93CEE0")]
		private IEnumerator PlayLines(CharacterVoiceLine[] voiceLines)
		{
			return null;
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0xB27884", Offset = "0xB27884", VA = "0xB27884")]
		private void SoftResetCurrentSpeaker()
		{
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0xB27648", Offset = "0xB27648", VA = "0xB27648")]
		private void VoiceLinesCompleted(bool speakSuccess)
		{
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0xB279E8", Offset = "0xB279E8", VA = "0xB279E8")]
		public VOManager()
		{
		}
	}
	[Token(Token = "0x2000331")]
	public class InventoryManager : MonoBehaviour, ISavable
	{
		[Serializable]
		[Token(Token = "0x20005D0")]
		public class InventoryItemSaveData : SavableData
		{
			[Token(Token = "0x400212E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int ItemID;

			[Token(Token = "0x400212F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool AllowDuplicates;

			[Token(Token = "0x4002130")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string InstanceGuid;

			[Token(Token = "0x4002131")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Cortopia.Scripts.Rooms.RoomType InstanceRoom;

			[Token(Token = "0x6002751")]
			[Address(RVA = "0xB1A11C", Offset = "0xB1A11C", VA = "0xB1A11C")]
			public InventoryItemSaveData(int itemID, bool allowDuplicates, string instanceGuid, Cortopia.Scripts.Rooms.RoomType instanceRoom)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20005D1")]
		public class SaveData : SavableData
		{
			[Token(Token = "0x4002132")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Dictionary<int, List<InventoryItemSaveData>> Items;

			[Token(Token = "0x4002133")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public StringArray InvitationInstancesFound;

			[Token(Token = "0x6002752")]
			[Address(RVA = "0xB199A0", Offset = "0xB199A0", VA = "0xB199A0")]
			public SaveData()
			{
			}
		}

		[Token(Token = "0x20005D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927E60", Offset = "0x927E60")]
		private sealed class <>c__DisplayClass18_0
		{
			[Token(Token = "0x4002134")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string instanceGuid;

			[Token(Token = "0x6002753")]
			[Address(RVA = "0xB1AD00", Offset = "0xB1AD00", VA = "0xB1AD00")]
			public <>c__DisplayClass18_0()
			{
			}

			[Token(Token = "0x6002754")]
			[Address(RVA = "0xB1B388", Offset = "0xB1B388", VA = "0xB1B388")]
			internal bool <CanGetItem>b__0(InventoryItemData x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private InvitationsHandler m_invitationsManager;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SaveData m_saveData;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IDictionary<int, List<InventoryItemData>> m_items;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<InventoryItemData> m_filterList;

		[Token(Token = "0x4001396")]
		private const string SaveID = "InventoryManager";

		[Token(Token = "0x17000317")]
		public InvitationsHandler Invitations
		{
			[Token(Token = "0x6001A1C")]
			[Address(RVA = "0xB198A0", Offset = "0xB198A0", VA = "0xB198A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000060")]
		public event Action<InventoryItemData> OnInventoryUpdated
		{
			[Token(Token = "0x6001A1A")]
			[Address(RVA = "0xB196C8", Offset = "0xB196C8", VA = "0xB196C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93CF44", Offset = "0x93CF44")]
			add
			{
			}
			[Token(Token = "0x6001A1B")]
			[Address(RVA = "0xB197B4", Offset = "0xB197B4", VA = "0xB197B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93CF54", Offset = "0x93CF54")]
			remove
			{
			}
		}

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0xB198A8", Offset = "0xB198A8", VA = "0xB198A8")]
		public void ResetSaveData()
		{
		}

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0xB19A14", Offset = "0xB19A14", VA = "0xB19A14", Slot = "4")]
		public void Serialize(IWriteSave save)
		{
		}

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0xB1A174", Offset = "0xB1A174", VA = "0xB1A174", Slot = "5")]
		public void Deserialize(IReadSave save)
		{
		}

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0xB1A738", Offset = "0xB1A738", VA = "0xB1A738")]
		public bool ContainsItem(int itemID)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0xB1A844", Offset = "0xB1A844", VA = "0xB1A844")]
		public int GetItemCount(int itemID)
		{
			return default(int);
		}

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0xB1A950", Offset = "0xB1A950", VA = "0xB1A950")]
		public int GetItemCount(int itemID, Cortopia.Scripts.Rooms.RoomType roomFilter)
		{
			return default(int);
		}

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0xB1AB2C", Offset = "0xB1AB2C", VA = "0xB1AB2C")]
		public bool CanGetItem(int itemID, string instanceGuid, out InventoryItemData item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0xB1AD08", Offset = "0xB1AD08", VA = "0xB1AD08")]
		public bool CanGetItems(int itemID, out List<InventoryItemData> items)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0xB1ADD8", Offset = "0xB1ADD8", VA = "0xB1ADD8")]
		public void TryAdd(InventoryItemData itemData)
		{
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0xB1B16C", Offset = "0xB1B16C", VA = "0xB1B16C")]
		public void TryRemove(InventoryItemData itemData)
		{
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0xB1AF5C", Offset = "0xB1AF5C", VA = "0xB1AF5C")]
		private void AddItem(InventoryItemData itemData, bool newItem)
		{
		}

		[Token(Token = "0x6001A28")]
		[Address(RVA = "0xB1B1C8", Offset = "0xB1B1C8", VA = "0xB1B1C8")]
		private void RemoveItem(InventoryItemData itemData)
		{
		}

		[Token(Token = "0x6001A29")]
		[Address(RVA = "0xB1B2F8", Offset = "0xB1B2F8", VA = "0xB1B2F8")]
		public InventoryManager()
		{
		}
	}
	[Token(Token = "0x2000332")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x926D80", Offset = "0x926D80")]
	public class Save
	{
		[Token(Token = "0x20005D3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927E70", Offset = "0x927E70")]
		private sealed class <>c__DisplayClass12_0
		{
			[Token(Token = "0x4002135")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Save save;

			[Token(Token = "0x4002136")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string json;

			[Token(Token = "0x4002137")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Promise<Save> promise;

			[Token(Token = "0x6002755")]
			[Address(RVA = "0xB231B4", Offset = "0xB231B4", VA = "0xB231B4")]
			public <>c__DisplayClass12_0()
			{
			}

			[Token(Token = "0x6002756")]
			[Address(RVA = "0xB23490", Offset = "0xB23490", VA = "0xB23490")]
			internal void <FromJson>b__0()
			{
			}

			[Token(Token = "0x6002757")]
			[Address(RVA = "0xB2355C", Offset = "0xB2355C", VA = "0xB2355C")]
			internal void <FromJson>b__1(System.Threading.Tasks.Task t)
			{
			}
		}

		[Token(Token = "0x20005D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927E80", Offset = "0x927E80")]
		private sealed class <>c__DisplayClass13_0
		{
			[Token(Token = "0x4002138")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string json;

			[Token(Token = "0x4002139")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Save <>4__this;

			[Token(Token = "0x400213A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Promise<string> promise;

			[Token(Token = "0x6002758")]
			[Address(RVA = "0xB23364", Offset = "0xB23364", VA = "0xB23364")]
			public <>c__DisplayClass13_0()
			{
			}

			[Token(Token = "0x6002759")]
			[Address(RVA = "0xB23638", Offset = "0xB23638", VA = "0xB23638")]
			internal void <ToJson>b__0()
			{
			}

			[Token(Token = "0x600275A")]
			[Address(RVA = "0xB236FC", Offset = "0xB236FC", VA = "0xB236FC")]
			internal void <ToJson>b__1(System.Threading.Tasks.Task t)
			{
			}
		}

		[Token(Token = "0x4001398")]
		private const int DefaultSaveCapacity = 150;

		[Token(Token = "0x4001399")]
		private const string SaveFileDateKey = "SaveFileDateKey";

		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly JsonSerializerSettings sm_jsonSerializerSettings;

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, SavableData> m_saveMap;

		[Token(Token = "0x17000318")]
		public SavableData Item
		{
			[Token(Token = "0x6001A2A")]
			[Address(RVA = "0xB22AC8", Offset = "0xB22AC8", VA = "0xB22AC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A2B")]
			[Address(RVA = "0xB22B38", Offset = "0xB22B38", VA = "0xB22B38")]
			set
			{
			}
		}

		[Token(Token = "0x17000319")]
		public DateTime Date
		{
			[Token(Token = "0x6001A2C")]
			[Address(RVA = "0xB22BB0", Offset = "0xB22BB0", VA = "0xB22BB0")]
			get
			{
				return default(DateTime);
			}
		}

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0xB22D20", Offset = "0xB22D20", VA = "0xB22D20")]
		public Save()
		{
		}

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0xB22DE4", Offset = "0xB22DE4", VA = "0xB22DE4")]
		public Save(Save copy)
		{
		}

		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0xB22E9C", Offset = "0xB22E9C", VA = "0xB22E9C")]
		public void SetDate()
		{
		}

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0xB23008", Offset = "0xB23008", VA = "0xB23008")]
		public static Promise<Save> FromJson(string json)
		{
			return null;
		}

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0xB231BC", Offset = "0xB231BC", VA = "0xB231BC")]
		public Promise<string> ToJson()
		{
			return null;
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0xB2336C", Offset = "0xB2336C", VA = "0xB2336C")]
		public bool Contains(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A33")]
		public bool TryGetValue<T>(string key, out T data) where T : SavableData
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000333")]
	public class SaveManager : MonoBehaviour, IWriteSave, IReadSave, IScriptableEventListener
	{
		[Token(Token = "0x20005D5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927E90", Offset = "0x927E90")]
		private sealed class <>c__DisplayClass20_0
		{
			[Token(Token = "0x400213B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int i;

			[Token(Token = "0x400213C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SaveManager <>4__this;

			[Token(Token = "0x600275B")]
			[Address(RVA = "0xB23F88", Offset = "0xB23F88", VA = "0xB23F88")]
			public <>c__DisplayClass20_0()
			{
			}

			[Token(Token = "0x600275C")]
			[Address(RVA = "0xB248C4", Offset = "0xB248C4", VA = "0xB248C4")]
			internal void <LoadAndCacheSaveData>b__0(string save)
			{
			}
		}

		[Token(Token = "0x20005D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927EA0", Offset = "0x927EA0")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x400213D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action onComplete;

			[Token(Token = "0x400213E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SaveManager <>4__this;

			[Token(Token = "0x600275D")]
			[Address(RVA = "0xB24418", Offset = "0xB24418", VA = "0xB24418")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x600275E")]
			[Address(RVA = "0xB24974", Offset = "0xB24974", VA = "0xB24974")]
			internal void <SaveGame>b__0()
			{
			}
		}

		[Token(Token = "0x20005D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927EB0", Offset = "0x927EB0")]
		private sealed class <>c__DisplayClass27_0
		{
			[Token(Token = "0x400213F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action onComplete;

			[Token(Token = "0x4002140")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SaveManager <>4__this;

			[Token(Token = "0x600275F")]
			[Address(RVA = "0xB245C4", Offset = "0xB245C4", VA = "0xB245C4")]
			public <>c__DisplayClass27_0()
			{
			}

			[Token(Token = "0x6002760")]
			[Address(RVA = "0xB249B4", Offset = "0xB249B4", VA = "0xB249B4")]
			internal void <SaveToDisk>b__0()
			{
			}
		}

		[Token(Token = "0x20005D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927EC0", Offset = "0x927EC0")]
		private sealed class <DoSave>d__28 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002141")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002142")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002143")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SaveManager <>4__this;

			[Token(Token = "0x4002144")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action onComplete;

			[Token(Token = "0x4002145")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action onError;

			[Token(Token = "0x170004DC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002764")]
				[Address(RVA = "0xB24FCC", Offset = "0xB24FCC", VA = "0xB24FCC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004DD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002766")]
				[Address(RVA = "0xB2503C", Offset = "0xB2503C", VA = "0xB2503C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002761")]
			[Address(RVA = "0xB2471C", Offset = "0xB2471C", VA = "0xB2471C")]
			[DebuggerHidden]
			public <DoSave>d__28(int <>1__state)
			{
			}

			[Token(Token = "0x6002762")]
			[Address(RVA = "0xB24F1C", Offset = "0xB24F1C", VA = "0xB24F1C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002763")]
			[Address(RVA = "0xB24F20", Offset = "0xB24F20", VA = "0xB24F20", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002765")]
			[Address(RVA = "0xB24FD4", Offset = "0xB24FD4", VA = "0xB24FD4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927ED0", Offset = "0x927ED0")]
		private sealed class <DoSerialize>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002146")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002147")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002148")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SaveManager <>4__this;

			[Token(Token = "0x170004DE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600276A")]
				[Address(RVA = "0xB25234", Offset = "0xB25234", VA = "0xB25234", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004DF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600276C")]
				[Address(RVA = "0xB252A4", Offset = "0xB252A4", VA = "0xB252A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002767")]
			[Address(RVA = "0xB24748", Offset = "0xB24748", VA = "0xB24748")]
			[DebuggerHidden]
			public <DoSerialize>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6002768")]
			[Address(RVA = "0xB25044", Offset = "0xB25044", VA = "0xB25044", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002769")]
			[Address(RVA = "0xB25048", Offset = "0xB25048", VA = "0xB25048", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600276B")]
			[Address(RVA = "0xB2523C", Offset = "0xB2523C", VA = "0xB2523C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927EE0", Offset = "0x927EE0")]
		private sealed class <>c__DisplayClass30_0
		{
			[Token(Token = "0x4002149")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SaveManager <>4__this;

			[Token(Token = "0x400214A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action onComplete;

			[Token(Token = "0x400214B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action onError;

			[Token(Token = "0x400214C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action <>9__2;

			[Token(Token = "0x400214D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action<Exception> <>9__3;

			[Token(Token = "0x600276D")]
			[Address(RVA = "0xB24774", Offset = "0xB24774", VA = "0xB24774")]
			public <>c__DisplayClass30_0()
			{
			}

			[Token(Token = "0x600276E")]
			[Address(RVA = "0xB249F4", Offset = "0xB249F4", VA = "0xB249F4")]
			internal void <WriteToDisk>b__0(string json)
			{
			}

			[Token(Token = "0x600276F")]
			[Address(RVA = "0xB24BE8", Offset = "0xB24BE8", VA = "0xB24BE8")]
			internal void <WriteToDisk>b__2()
			{
			}

			[Token(Token = "0x6002770")]
			[Address(RVA = "0xB24BFC", Offset = "0xB24BFC", VA = "0xB24BFC")]
			internal void <WriteToDisk>b__3(Exception e)
			{
			}

			[Token(Token = "0x6002771")]
			[Address(RVA = "0xB24C10", Offset = "0xB24C10", VA = "0xB24C10")]
			internal void <WriteToDisk>b__1(Exception e)
			{
			}
		}

		[Token(Token = "0x20005DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927EF0", Offset = "0x927EF0")]
		private sealed class <>c__DisplayClass31_0
		{
			[Token(Token = "0x400214E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SaveManager <>4__this;

			[Token(Token = "0x400214F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action onComplete;

			[Token(Token = "0x6002772")]
			[Address(RVA = "0xB2477C", Offset = "0xB2477C", VA = "0xB2477C")]
			public <>c__DisplayClass31_0()
			{
			}

			[Token(Token = "0x6002773")]
			[Address(RVA = "0xB24C24", Offset = "0xB24C24", VA = "0xB24C24")]
			internal void <LoadGame>b__0(Save deserializedSave)
			{
			}
		}

		[Token(Token = "0x20005DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927F00", Offset = "0x927F00")]
		private sealed class <DoLoad>d__32 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002150")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002151")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002152")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SaveManager <>4__this;

			[Token(Token = "0x4002153")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Action onComplete;

			[Token(Token = "0x170004E0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002777")]
				[Address(RVA = "0xB24EA4", Offset = "0xB24EA4", VA = "0xB24EA4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004E1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002779")]
				[Address(RVA = "0xB24F14", Offset = "0xB24F14", VA = "0xB24F14", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002774")]
			[Address(RVA = "0xB2481C", Offset = "0xB2481C", VA = "0xB2481C")]
			[DebuggerHidden]
			public <DoLoad>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x6002775")]
			[Address(RVA = "0xB24CAC", Offset = "0xB24CAC", VA = "0xB24CAC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002776")]
			[Address(RVA = "0xB24CB0", Offset = "0xB24CB0", VA = "0xB24CB0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002778")]
			[Address(RVA = "0xB24EAC", Offset = "0xB24EAC", VA = "0xB24EAC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400139C")]
		public const int MaxSaveSlots = 3;

		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GlobalVariableHandler m_globalVariableHandler;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CheckpointEvent m_checkpointEvent;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private JObject[] m_cachedSaveData;

		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Save m_save;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IPlatformStorage m_storage;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_isSavingLocked;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_saveTimeStart;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int m_currentSaveSlotIndex;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x932904", Offset = "0x932904")]
		private bool <HasInitialized>k__BackingField;

		[Token(Token = "0x1700031A")]
		public bool HasInitialized
		{
			[Token(Token = "0x6001A35")]
			[Address(RVA = "0xB237D8", Offset = "0xB237D8", VA = "0xB237D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93CF64", Offset = "0x93CF64")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A36")]
			[Address(RVA = "0xB19548", Offset = "0xB19548", VA = "0xB19548")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93CF74", Offset = "0x93CF74")]
			set
			{
			}
		}

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0xB237E0", Offset = "0xB237E0", VA = "0xB237E0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0xB238C0", Offset = "0xB238C0", VA = "0xB238C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0xB23A14", Offset = "0xB23A14", VA = "0xB23A14", Slot = "6")]
		public void OnEventRaised(ScriptableVariable eventData)
		{
		}

		[Token(Token = "0x6001A3A")]
		public void Write<T>(string guid, T data) where T : SavableData
		{
		}

		[Token(Token = "0x6001A3B")]
		public T Read<T>(string guid, T defaultData) where T : SavableData
		{
			return null;
		}

		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0xB23B5C", Offset = "0xB23B5C", VA = "0xB23B5C")]
		public bool HasSave(int saveSlotIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0xB23C74", Offset = "0xB23C74", VA = "0xB23C74")]
		public IPromise<bool> CheckForSaves()
		{
			return null;
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0xB23D68", Offset = "0xB23D68", VA = "0xB23D68")]
		public void LoadAndCacheSaveData()
		{
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0xB23F90", Offset = "0xB23F90", VA = "0xB23F90")]
		public string GetInvitationsFoundInSave(int saveSlotIndex)
		{
			return null;
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0xB240D8", Offset = "0xB240D8", VA = "0xB240D8")]
		public int GetCurrentBiomeIndexInSave(int saveSlotIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0xB18218", Offset = "0xB18218", VA = "0xB18218")]
		public void UpdateSaveIndex(int saveSlotIndex)
		{
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0xB24228", Offset = "0xB24228", VA = "0xB24228")]
		public void ClearCurrentSaveData()
		{
		}

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0xB23B18", Offset = "0xB23B18", VA = "0xB23B18")]
		public void SaveCheckpoint()
		{
		}

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0xB1E09C", Offset = "0xB1E09C", VA = "0xB1E09C")]
		public void SaveGame([Optional] Action onComplete, [Optional] Action onError)
		{
		}

		[Token(Token = "0x6001A45")]
		[Address(RVA = "0xB244CC", Offset = "0xB244CC", VA = "0xB244CC")]
		public void SaveToDisk([Optional] Action onComplete, [Optional] Action onError)
		{
		}

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0xB24420", Offset = "0xB24420", VA = "0xB24420")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93CF84", Offset = "0x93CF84")]
		private IEnumerator DoSave(Action onComplete, Action onError)
		{
			return null;
		}

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0xB243A4", Offset = "0xB243A4", VA = "0xB243A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93CFE8", Offset = "0x93CFE8")]
		private IEnumerator DoSerialize()
		{
			return null;
		}

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0xB245CC", Offset = "0xB245CC", VA = "0xB245CC")]
		private void WriteToDisk(Action onComplete, Action onError)
		{
		}

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0xB18220", Offset = "0xB18220", VA = "0xB18220")]
		public void LoadGame([Optional] Action onComplete)
		{
		}

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0xB24784", Offset = "0xB24784", VA = "0xB24784")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93D04C", Offset = "0x93D04C")]
		private IEnumerator DoLoad(Action onComplete)
		{
			return null;
		}

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0xB24848", Offset = "0xB24848", VA = "0xB24848")]
		public SaveManager()
		{
		}
	}
}
namespace Cortopia.Scripts.Core.Settings
{
	[Token(Token = "0x2000334")]
	public class GameSettings : ScriptableObject
	{
		[Token(Token = "0x20005DD")]
		private struct Constants
		{
			[Token(Token = "0x4002154")]
			public const string MasterVolume = "MasterVolume";

			[Token(Token = "0x4002155")]
			public const string MusicVolume = "MusicVolume";

			[Token(Token = "0x4002156")]
			public const string SfxVolume = "SfxVolume";

			[Token(Token = "0x4002157")]
			public const string VOVolume = "VOVolume";
		}

		[Token(Token = "0x40013A6")]
		public const string Name = "GameSettings";

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly MathUtils.MinMax m_masterVolumeMinMax;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioMixer m_mixer;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameSettingsData m_data;

		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private IPlatformSettingsStorage m_settingsStorage;

		[Token(Token = "0x1700031B")]
		public float MusicVolume
		{
			[Token(Token = "0x6001A4C")]
			[Address(RVA = "0xB252AC", Offset = "0xB252AC", VA = "0xB252AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A4D")]
			[Address(RVA = "0xB252E0", Offset = "0xB252E0", VA = "0xB252E0")]
			set
			{
			}
		}

		[Token(Token = "0x1700031C")]
		public float SfxVolume
		{
			[Token(Token = "0x6001A4E")]
			[Address(RVA = "0xB254A8", Offset = "0xB254A8", VA = "0xB254A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A4F")]
			[Address(RVA = "0xB254D4", Offset = "0xB254D4", VA = "0xB254D4")]
			set
			{
			}
		}

		[Token(Token = "0x1700031D")]
		public float VOVolume
		{
			[Token(Token = "0x6001A50")]
			[Address(RVA = "0xB255F8", Offset = "0xB255F8", VA = "0xB255F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A51")]
			[Address(RVA = "0xB25624", Offset = "0xB25624", VA = "0xB25624")]
			set
			{
			}
		}

		[Token(Token = "0x1700031E")]
		public bool Mute
		{
			[Token(Token = "0x6001A52")]
			[Address(RVA = "0xB25748", Offset = "0xB25748", VA = "0xB25748")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A53")]
			[Address(RVA = "0xB25774", Offset = "0xB25774", VA = "0xB25774")]
			set
			{
			}
		}

		[Token(Token = "0x1700031F")]
		public bool Subtitles
		{
			[Token(Token = "0x6001A54")]
			[Address(RVA = "0xB258B0", Offset = "0xB258B0", VA = "0xB258B0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A55")]
			[Address(RVA = "0xB258DC", Offset = "0xB258DC", VA = "0xB258DC")]
			set
			{
			}
		}

		[Token(Token = "0x17000320")]
		public string Language
		{
			[Token(Token = "0x6001A56")]
			[Address(RVA = "0xB259CC", Offset = "0xB259CC", VA = "0xB259CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A57")]
			[Address(RVA = "0xB259F8", Offset = "0xB259F8", VA = "0xB259F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000321")]
		private GameSettingsData Data
		{
			[Token(Token = "0x6001A58")]
			[Address(RVA = "0xB252D8", Offset = "0xB252D8", VA = "0xB252D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0xB25B10", Offset = "0xB25B10", VA = "0xB25B10")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0xB25F78", Offset = "0xB25F78", VA = "0xB25F78")]
		public void SetInitialAudioMixerValues()
		{
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0xB260E4", Offset = "0xB260E4", VA = "0xB260E4")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0xB26448", Offset = "0xB26448", VA = "0xB26448")]
		public void Save()
		{
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0xB25404", Offset = "0xB25404", VA = "0xB25404")]
		private float GetConvertedVolumeFloat(float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0xB26500", Offset = "0xB26500", VA = "0xB26500")]
		public GameSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000335")]
	public class GameSettingsData
	{
		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x932934", Offset = "0x932934")]
		public bool Mute;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x93296C", Offset = "0x93296C")]
		public float MusicVolume;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x932984", Offset = "0x932984")]
		public float SfxVolume;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x93299C", Offset = "0x93299C")]
		public float VOVolume;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9329B4", Offset = "0x9329B4")]
		public bool ShowSubtitles;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Language;

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0xB2654C", Offset = "0xB2654C", VA = "0xB2654C")]
		public GameSettingsData Clone()
		{
			return null;
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0xB26620", Offset = "0xB26620", VA = "0xB26620")]
		public GameSettingsData()
		{
		}
	}
}
namespace Cortopia.Scripts.Choices
{
	[Token(Token = "0x2000336")]
	public class Card : MonoBehaviour
	{
		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Localize m_localizeHeader;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Localize m_localizeBody;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x932A0C", Offset = "0x932A0C")]
		[SerializeField]
		private Image m_image;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x932A58", Offset = "0x932A58")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private DeltaCorrectionLink m_deltaCorrection;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private PointerInteractableHold m_pointerInteractable;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly int m_resetTriggerHash;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private readonly int m_snapTriggerHash;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly int m_selectedBoolHash;

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0xB5F8D4", Offset = "0xB5F8D4", VA = "0xB5F8D4")]
		public void SetVisuals(CardData cardData)
		{
		}

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0xB5F988", Offset = "0xB5F988", VA = "0xB5F988")]
		public void InitilizeCard()
		{
		}

		[Token(Token = "0x6001A63")]
		[Address(RVA = "0xB5FB48", Offset = "0xB5FB48", VA = "0xB5FB48")]
		public void CardChosen(Transform finalPosition)
		{
		}

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0xB5FCEC", Offset = "0xB5FCEC", VA = "0xB5FCEC")]
		private void OnPointerEnter()
		{
		}

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0xB5FD28", Offset = "0xB5FD28", VA = "0xB5FD28")]
		private void OnPointerExit()
		{
		}

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0xB5FD64", Offset = "0xB5FD64", VA = "0xB5FD64")]
		public Card()
		{
		}
	}
	[Token(Token = "0x2000337")]
	public class CardChoice : MonoBehaviour
	{
		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CardChoiceData m_cardChoiceData;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private VoiceLineCollection[] m_selectResponses;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Card[] m_cards;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform[] m_joints;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform m_finalCardPosition;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x932B14", Offset = "0x932B14")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly int m_isSpawnedParameter;

		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Vector3 sm_cardStartOffset;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_delayFrames;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_currentDelay;

		[Token(Token = "0x17000322")]
		public bool HasMadeChoice
		{
			[Token(Token = "0x6001A67")]
			[Address(RVA = "0xB5FDF4", Offset = "0xB5FDF4", VA = "0xB5FDF4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x14000061")]
		private event Action OnChoiceMade
		{
			[Token(Token = "0x6001A68")]
			[Address(RVA = "0xB5FE3C", Offset = "0xB5FE3C", VA = "0xB5FE3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D0B0", Offset = "0x93D0B0")]
			add
			{
			}
			[Token(Token = "0x6001A69")]
			[Address(RVA = "0xB5FF28", Offset = "0xB5FF28", VA = "0xB5FF28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D0C0", Offset = "0x93D0C0")]
			remove
			{
			}
		}

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0xB60014", Offset = "0xB60014", VA = "0xB60014")]
		public void StartCardChoice(Action onChoiceMade)
		{
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0xB60024", Offset = "0xB60024", VA = "0xB60024")]
		public void StartCardChoice()
		{
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0xB60030", Offset = "0xB60030", VA = "0xB60030")]
		public void ChooseCard(int cardIndex)
		{
		}

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0xB60210", Offset = "0xB60210", VA = "0xB60210")]
		private void ChooseCard(Card chosenCard)
		{
		}

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0xB602CC", Offset = "0xB602CC", VA = "0xB602CC")]
		private void ResetCards()
		{
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0xB604C0", Offset = "0xB604C0", VA = "0xB604C0")]
		private string[] GetCardNames()
		{
			return null;
		}

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0xB60618", Offset = "0xB60618", VA = "0xB60618")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0xB60690", Offset = "0xB60690", VA = "0xB60690")]
		public CardChoice()
		{
		}
	}
	[Token(Token = "0x2000338")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x926DB8", Offset = "0x926DB8")]
	public class CardChoiceData : ScriptableObject
	{
		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private IntVariable m_choiceIndex;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CardData[] m_cardData;

		[Token(Token = "0x17000323")]
		public bool HasChoiceBeenMade
		{
			[Token(Token = "0x6001A73")]
			[Address(RVA = "0xB601B4", Offset = "0xB601B4", VA = "0xB601B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0xB601D8", Offset = "0xB601D8", VA = "0xB601D8")]
		public void SetChoice(int index)
		{
		}

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0xB5FE30", Offset = "0xB5FE30", VA = "0xB5FE30")]
		public int GetChoice()
		{
			return default(int);
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0xB607C4", Offset = "0xB607C4", VA = "0xB607C4")]
		public CardData GetChosenCardData()
		{
			return null;
		}

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0xB6046C", Offset = "0xB6046C", VA = "0xB6046C")]
		public CardData GetCardData(int index)
		{
			return null;
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0xB607F4", Offset = "0xB607F4", VA = "0xB607F4")]
		public CardChoiceData()
		{
		}
	}
	[Token(Token = "0x2000339")]
	public class CardChoicePlacement : MonoBehaviour
	{
		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CardChoiceData m_cardChoiceData;

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Card m_card;

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0xB60854", Offset = "0xB60854", VA = "0xB60854")]
		public void CheckChoiceMade()
		{
		}

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0xB60944", Offset = "0xB60944", VA = "0xB60944")]
		public CardChoicePlacement()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200033A")]
	public class CardData
	{
		[Token(Token = "0x40013C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string m_question;

		[Token(Token = "0x40013CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string m_response;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Sprite m_image;

		[Token(Token = "0x40013CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string m_questionTerm;

		[Token(Token = "0x40013CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public string m_responseTerm;

		[Token(Token = "0x17000324")]
		public string QuestionTerm
		{
			[Token(Token = "0x6001A7B")]
			[Address(RVA = "0xB5F970", Offset = "0xB5F970", VA = "0xB5F970")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000325")]
		public string ResponseTerm
		{
			[Token(Token = "0x6001A7C")]
			[Address(RVA = "0xB5F978", Offset = "0xB5F978", VA = "0xB5F978")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000326")]
		public Sprite Image
		{
			[Token(Token = "0x6001A7D")]
			[Address(RVA = "0xB5F980", Offset = "0xB5F980", VA = "0xB5F980")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0xB6094C", Offset = "0xB6094C", VA = "0xB6094C")]
		private void OnStringChanged()
		{
		}

		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0xB609C4", Offset = "0xB609C4", VA = "0xB609C4")]
		public CardData()
		{
		}
	}
	[Token(Token = "0x200033B")]
	public class ChoiceTrigger : RoomBehaviour
	{
		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CardChoice m_cardChoice;

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x932C10", Offset = "0x932C10")]
		private bool m_saveCheckpoint;

		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x932C5C", Offset = "0x932C5C")]
		[SerializeField]
		private CharacterReactor m_narrationBanter;

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioClip m_cardAppears;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AudioClip m_cardChosen;

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x932CC8", Offset = "0x932CC8")]
		[SerializeField]
		private GameObject m_vfxParent;

		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject m_vfxActive;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject m_vfxEnd;

		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[HideInInspector]
		private Collider m_collider;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private PlayableCharacter m_choosingCharacter;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private IDictionary<string, object> m_analyticsData;

		[Token(Token = "0x6001A80")]
		[Address(RVA = "0xB60A30", Offset = "0xB60A30", VA = "0xB60A30", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6001A81")]
		[Address(RVA = "0xB60AF0", Offset = "0xB60AF0", VA = "0xB60AF0")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0xB60CB4", Offset = "0xB60CB4", VA = "0xB60CB4")]
		private void TriggerVfx()
		{
		}

		[Token(Token = "0x6001A83")]
		[Address(RVA = "0xB6116C", Offset = "0xB6116C", VA = "0xB6116C")]
		private void OnChoiceMade()
		{
		}

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0xB612AC", Offset = "0xB612AC", VA = "0xB612AC")]
		public ChoiceTrigger()
		{
		}

		[Token(Token = "0x6001A85")]
		[Address(RVA = "0xB61328", Offset = "0xB61328", VA = "0xB61328")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D0D0", Offset = "0x93D0D0")]
		private void <OnChoiceMade>b__14_0()
		{
		}
	}
}
namespace Cortopia.Scripts.Characters
{
	[Token(Token = "0x200033C")]
	public class Adventurer : PlayableCharacter
	{
		[Token(Token = "0x40013D9")]
		private const int CloakStartIndex = 1;

		[Token(Token = "0x40013DA")]
		private const int MaterialCount = 4;

		[Token(Token = "0x40013DB")]
		private const float FogLerpTime = 0.5f;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private readonly int m_materialFogProperty;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x932D6C", Offset = "0x932D6C")]
		[SerializeField]
		private Cloth m_cloth;

		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private IntVariable m_cloakChoiceIndex;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Texture[] m_cloakTextures;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Material[] m_fogMaterials;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Material[] m_defaultMaterials;

		[Token(Token = "0x6001A86")]
		[Address(RVA = "0xB545F8", Offset = "0xB545F8", VA = "0xB545F8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A87")]
		[Address(RVA = "0xB54688", Offset = "0xB54688", VA = "0xB54688")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A88")]
		[Address(RVA = "0xB54718", Offset = "0xB54718", VA = "0xB54718", Slot = "6")]
		public override void LoadCharacter(CharacterSaveData data)
		{
		}

		[Token(Token = "0x6001A89")]
		[Address(RVA = "0xB54964", Offset = "0xB54964", VA = "0xB54964")]
		public void EnableIntro()
		{
		}

		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0xB55038", Offset = "0xB55038", VA = "0xB55038", Slot = "9")]
		public override void SetStateAndUpdateSelectIndicator(CharacterState state, bool isTethered)
		{
		}

		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0xB550CC", Offset = "0xB550CC", VA = "0xB550CC", Slot = "11")]
		public override void Teleport(Vector3 position, Quaternion rotation, Cortopia.Scripts.Rooms.RoomType activeRoom)
		{
		}

		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0xB54FF0", Offset = "0xB54FF0", VA = "0xB54FF0")]
		public void ChangeMaterial(bool useFogMaterial)
		{
		}

		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0xB55390", Offset = "0xB55390", VA = "0xB55390")]
		private void SetDefaultMaterial()
		{
		}

		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0xB55234", Offset = "0xB55234", VA = "0xB55234")]
		private void SetMaterials(Material[] materials)
		{
		}

		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0xB54858", Offset = "0xB54858", VA = "0xB54858")]
		private void UpdateCloakTexture()
		{
		}

		[Token(Token = "0x6001A90")]
		[Address(RVA = "0xB55638", Offset = "0xB55638", VA = "0xB55638")]
		public Adventurer()
		{
		}

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0xB55764", Offset = "0xB55764", VA = "0xB55764")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D0E0", Offset = "0x93D0E0")]
		private void <SetDefaultMaterial>b__16_0()
		{
		}
	}
	[Token(Token = "0x200033D")]
	public abstract class Character : MonoBehaviour
	{
		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Cortopia.Scripts.Rooms.RoomType Room;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected CharacterData m_data;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected Voice m_voice;

		[Token(Token = "0x40013E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected CharacterAnimationHandler m_animationHandler;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected Locomotion m_locomotion;

		[Token(Token = "0x17000327")]
		public Voice Voice
		{
			[Token(Token = "0x6001A92")]
			[Address(RVA = "0xB5576C", Offset = "0xB5576C", VA = "0xB5576C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000328")]
		public CharacterAnimationHandler AnimationHandler
		{
			[Token(Token = "0x6001A93")]
			[Address(RVA = "0xB55774", Offset = "0xB55774", VA = "0xB55774")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000329")]
		public Locomotion Locomotion
		{
			[Token(Token = "0x6001A94")]
			[Address(RVA = "0xB5577C", Offset = "0xB5577C", VA = "0xB5577C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032A")]
		public abstract bool IsActive
		{
			[Token(Token = "0x6001A95")]
			get;
		}

		[Token(Token = "0x6001A96")]
		public abstract CharacterSaveData SaveCharacter();

		[Token(Token = "0x6001A97")]
		public abstract void LoadCharacter(CharacterSaveData saveData);

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0xB55784", Offset = "0xB55784", VA = "0xB55784")]
		protected Character()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200033E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x926E28", Offset = "0x926E28")]
	public class CharacterData : ScriptableObject
	{
		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Cortopia.Scripts.Rooms.RoomType Room;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Sprite m_characterPortrait;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x932E48", Offset = "0x932E48")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x932E48", Offset = "0x932E48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x932E48", Offset = "0x932E48")]
		private int m_avoidancePriority;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_climbStartForwardOffset;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_climbEndVerticalOffset;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_climbDownStartForwardOffset;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_climbDownEndVerticalOffset;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float m_dropDownStartForwardOffset;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_dropDownEndVerticalOffset;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private string m_defaultAnimatorStateName;

		[Token(Token = "0x1700032B")]
		public Sprite Portrait
		{
			[Token(Token = "0x6001A99")]
			[Address(RVA = "0xB52FA0", Offset = "0xB52FA0", VA = "0xB52FA0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032C")]
		public int AvoidancePriority
		{
			[Token(Token = "0x6001A9A")]
			[Address(RVA = "0xB5578C", Offset = "0xB5578C", VA = "0xB5578C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700032D")]
		public float ClimbStartForwardOffset
		{
			[Token(Token = "0x6001A9B")]
			[Address(RVA = "0xB55794", Offset = "0xB55794", VA = "0xB55794")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700032E")]
		public float ClimbEndVerticalOffset
		{
			[Token(Token = "0x6001A9C")]
			[Address(RVA = "0xB5579C", Offset = "0xB5579C", VA = "0xB5579C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700032F")]
		public float ClimbDownForwardOffset
		{
			[Token(Token = "0x6001A9D")]
			[Address(RVA = "0xB557A4", Offset = "0xB557A4", VA = "0xB557A4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000330")]
		public float ClimbDownVerticalOffset
		{
			[Token(Token = "0x6001A9E")]
			[Address(RVA = "0xB557AC", Offset = "0xB557AC", VA = "0xB557AC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000331")]
		public float DropDownStartForwardOffset
		{
			[Token(Token = "0x6001A9F")]
			[Address(RVA = "0xB557B4", Offset = "0xB557B4", VA = "0xB557B4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000332")]
		public float DropDownEndVerticalOffset
		{
			[Token(Token = "0x6001AA0")]
			[Address(RVA = "0xB557BC", Offset = "0xB557BC", VA = "0xB557BC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000333")]
		public string DefaultAnimatorStateName
		{
			[Token(Token = "0x6001AA1")]
			[Address(RVA = "0xB557C4", Offset = "0xB557C4", VA = "0xB557C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0xB557CC", Offset = "0xB557CC", VA = "0xB557CC")]
		public CharacterData()
		{
		}
	}
	[Token(Token = "0x200033F")]
	public class CharacterGrabbable : MonoBehaviour
	{
		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayableCharacterData m_data;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private NavMeshAgent m_agent;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_characterRoot;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x932F74", Offset = "0x932F74")]
		[SerializeField]
		private float m_interactableCollisionRadius;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x932FC0", Offset = "0x932FC0")]
		[SerializeField]
		private float m_smoothEndPositionMoveSpeed;

		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private TrailRenderer m_trailRenderer;

		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ParticleSystem m_glow;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ParticleSystem[] m_visuals;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_isGrabbed;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool m_isDefaultColor;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_sampleAreaMaskIndex;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Color m_defaultFxColor;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Color m_defaultTrailColor;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 m_positionOffset;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 m_samplePosition;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Tweener m_moveTweener;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Collider[] m_interactableSampleColliders;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Collider[] m_sampleColliders;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private NavMeshPath m_path;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private CharacterOrientationState m_grabbedOrientationState;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private readonly Color m_nonWalkableColor;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private readonly Vector3 m_sampleBox;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private readonly Vector3[] m_sampleBoxOffsets;

		[Token(Token = "0x4001408")]
		private const float VerticalSampleDistance = 2.5f;

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0xB55834", Offset = "0xB55834", VA = "0xB55834")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0xB55A84", Offset = "0xB55A84", VA = "0xB55A84")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0xB55F78", Offset = "0xB55F78", VA = "0xB55F78")]
		public void OnGrab()
		{
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0xB56070", Offset = "0xB56070", VA = "0xB56070")]
		public void OnRelease()
		{
		}

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0xB5699C", Offset = "0xB5699C", VA = "0xB5699C")]
		public void ResetGrabbable(bool immediate = false)
		{
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0xB56640", Offset = "0xB56640", VA = "0xB56640")]
		private InteractableObject TryGetTransitionInteractable()
		{
			return null;
		}

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0xB55AE0", Offset = "0xB55AE0", VA = "0xB55AE0")]
		private bool SamplePosition()
		{
			return default(bool);
		}

		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0xB559B4", Offset = "0xB559B4", VA = "0xB559B4")]
		private void SetGrabbedEffectActive(bool active, bool immediate = false)
		{
		}

		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0xB56A58", Offset = "0xB56A58", VA = "0xB56A58")]
		private void SetTrailActive(bool active)
		{
		}

		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0xB55E00", Offset = "0xB55E00", VA = "0xB55E00")]
		private void SetGrabbedEffectColor(bool useDefault)
		{
		}

		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0xB558F8", Offset = "0xB558F8", VA = "0xB558F8")]
		private void SetGrabbedEffectColorReferences()
		{
		}

		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0xB5622C", Offset = "0xB5622C", VA = "0xB5622C")]
		private void SmoothSetLastPosition()
		{
		}

		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0xB56AE8", Offset = "0xB56AE8", VA = "0xB56AE8")]
		public CharacterGrabbable()
		{
		}

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0xB56C98", Offset = "0xB56C98", VA = "0xB56C98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D0F0", Offset = "0x93D0F0")]
		private void <OnRelease>b__27_0()
		{
		}
	}
	[Token(Token = "0x2000340")]
	public class CharacterIndicator : MonoBehaviour
	{
		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Color sm_nonSelectColor;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color m_selectColor;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x93304C", Offset = "0x93304C")]
		[SerializeField]
		private float m_blendSpeed;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform m_targetTransform;

		[Token(Token = "0x400140D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9330A8", Offset = "0x9330A8")]
		[SerializeField]
		private Renderer m_renderer;

		[Token(Token = "0x400140E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x400140F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private MultiLookAtConstraint m_lookAtConstraint;

		[Token(Token = "0x4001410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private LerpConstraint m_lerpConstraint;

		[Token(Token = "0x4001411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_isIndicatorActive;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform m_defaultParent;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 m_defaultLocalPosition;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private readonly int m_parameterIsActive;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly int m_parameterReset;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private readonly int m_stateSpawn;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private readonly int m_stateDeSpawn;

		[Token(Token = "0x4001418")]
		private const float AnimationStartTime = 0.9f;

		[Token(Token = "0x4001419")]
		private const int AnimationLayer = 0;

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0xB56CA0", Offset = "0xB56CA0", VA = "0xB56CA0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0xB56E24", Offset = "0xB56E24", VA = "0xB56E24")]
		public void EnableSelectIndicator(bool isActiveCharacter, CharacterOrientationState orientation)
		{
		}

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0xB57188", Offset = "0xB57188", VA = "0xB57188")]
		public void DisableSelectIndicator()
		{
		}

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0xB57128", Offset = "0xB57128", VA = "0xB57128")]
		private void EnableIndicatorConstraint(float blendSpeed)
		{
		}

		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0xB57208", Offset = "0xB57208", VA = "0xB57208")]
		private void DisableIndicatorConstraint()
		{
		}

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0xB57268", Offset = "0xB57268", VA = "0xB57268")]
		public CharacterIndicator()
		{
		}
	}
	[Token(Token = "0x2000341")]
	public enum CharacterInstantiationFallbackState
	{
		[Token(Token = "0x400141B")]
		None,
		[Token(Token = "0x400141C")]
		TeleportToPoint,
		[Token(Token = "0x400141D")]
		MoveToPoint
	}
	[Token(Token = "0x2000342")]
	public class CharacterMaterialSetter : MonoBehaviour
	{
		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_useFogMaterial;

		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0xB57384", Offset = "0xB57384", VA = "0xB57384")]
		public void SetMaterials(PlayableCharacter character)
		{
		}

		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0xB574B0", Offset = "0xB574B0", VA = "0xB574B0")]
		public CharacterMaterialSetter()
		{
		}
	}
	[Token(Token = "0x2000343")]
	public enum CharacterOrientationState
	{
		[Token(Token = "0x4001420")]
		Up,
		[Token(Token = "0x4001421")]
		Down
	}
	[Token(Token = "0x2000344")]
	public class CharacterParentSetter : MonoBehaviour
	{
		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_newParent;

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0xB574B8", Offset = "0xB574B8", VA = "0xB574B8")]
		public void SetCharacterParent(PlayableCharacter characterControl)
		{
		}

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0xB5750C", Offset = "0xB5750C", VA = "0xB5750C")]
		public CharacterParentSetter()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000345")]
	public class CharacterSaveData : SavableData
	{
		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Cortopia.Scripts.Rooms.RoomType Room;

		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SavableTransform Transform;

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0xB57514", Offset = "0xB57514", VA = "0xB57514")]
		public CharacterSaveData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000346")]
	public class PlayableCharacterSaveData : CharacterSaveData
	{
		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CharacterType Type;

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public CharacterState State;

		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0xB5D0AC", Offset = "0xB5D0AC", VA = "0xB5D0AC")]
		public PlayableCharacterSaveData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000347")]
	public class NPCSaveData : CharacterSaveData
	{
		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Guid;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NPCState State;

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0xB5C910", Offset = "0xB5C910", VA = "0xB5C910")]
		public NPCSaveData()
		{
		}
	}
	[Token(Token = "0x2000348")]
	public class CharacterSpawner : MonoBehaviour
	{
		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CharacterType m_characterType;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private CharacterState m_characterState;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_spawnPoint;

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CharacterInstantiationFallbackState m_spawnState;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private bool m_disableAgentOnSpawn;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[SerializeField]
		private bool m_disableRenderersOnSpawn;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9331A4", Offset = "0x9331A4")]
		[SerializeField]
		private Cortopia.Scripts.Rooms.RoomType m_activeRoomType;

		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0xB5751C", Offset = "0xB5751C", VA = "0xB5751C")]
		public void SpawnCharacter()
		{
		}

		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0xB57758", Offset = "0xB57758", VA = "0xB57758")]
		public CharacterSpawner()
		{
		}
	}
	[Token(Token = "0x2000349")]
	public enum CharacterState
	{
		[Token(Token = "0x4001431")]
		None = 0,
		[Token(Token = "0x4001432")]
		Active = 1,
		[Token(Token = "0x4001433")]
		Passive = 2,
		[Token(Token = "0x4001434")]
		Tethered = 4,
		[Token(Token = "0x4001435")]
		FirstPerson = 8,
		[Token(Token = "0x4001436")]
		Disabled = 16,
		[Token(Token = "0x4001437")]
		Inactive = 32,
		[Token(Token = "0x4001438")]
		NonSelectable = 60,
		[Token(Token = "0x4001439")]
		Unavailable = 48
	}
	[Token(Token = "0x200034A")]
	public static class EnumExtensions
	{
		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0xB585CC", Offset = "0xB585CC", VA = "0xB585CC")]
		public static bool ContainsFlag(this CharacterState a, CharacterState b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0xB585D8", Offset = "0xB585D8", VA = "0xB585D8")]
		public static bool ContainsFlag(this CharacterType a, CharacterType b)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200034B")]
	public class CharacterStateSetter : MonoBehaviour
	{
		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayableCharacterData m_characterData;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CharacterState m_newState;

		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0xB57774", Offset = "0xB57774", VA = "0xB57774")]
		public void SetCharacterState()
		{
		}

		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0xB57950", Offset = "0xB57950", VA = "0xB57950")]
		public void SetCharacterVisibility(bool isVisible)
		{
		}

		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0xB57B1C", Offset = "0xB57B1C", VA = "0xB57B1C")]
		public void SetCharacterStates()
		{
		}

		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0xB57F84", Offset = "0xB57F84", VA = "0xB57F84")]
		public void ResetCharacterStates()
		{
		}

		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0xB58000", Offset = "0xB58000", VA = "0xB58000")]
		public CharacterStateSetter()
		{
		}
	}
	[Token(Token = "0x200034C")]
	public enum CharacterType
	{
		[Token(Token = "0x400143D")]
		None = 0,
		[Token(Token = "0x400143E")]
		Adventurer = 1,
		[Token(Token = "0x400143F")]
		FourHalf = 2,
		[Token(Token = "0x4001440")]
		All = -1
	}
	[Token(Token = "0x200034D")]
	public static class CharacterUtils
	{
		[Token(Token = "0x20005DE")]
		public struct AvoidancePriorities
		{
			[Token(Token = "0x4002158")]
			public const int Active = 55;

			[Token(Token = "0x4002159")]
			public const int Passive = 60;

			[Token(Token = "0x400215A")]
			public const int Disabled = 45;
		}

		[Serializable]
		[Token(Token = "0x20005DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927F10", Offset = "0x927F10")]
		private sealed class <>c
		{
			[Token(Token = "0x400215B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400215C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<CharacterType, bool> <>9__5_0;

			[Token(Token = "0x400215D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<string, bool> <>9__6_0;

			[Token(Token = "0x600277B")]
			[Address(RVA = "0xB58490", Offset = "0xB58490", VA = "0xB58490")]
			public <>c()
			{
			}

			[Token(Token = "0x600277C")]
			[Address(RVA = "0xB58498", Offset = "0xB58498", VA = "0xB58498")]
			internal bool <GetCharacterTypes>b__5_0(CharacterType x)
			{
				return default(bool);
			}

			[Token(Token = "0x600277D")]
			[Address(RVA = "0xB584A8", Offset = "0xB584A8", VA = "0xB584A8")]
			internal bool <GetCharacterNames>b__6_0(string x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001441")]
		public const CharacterType MainCharacter = CharacterType.Adventurer;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CharacterType[] sm_characterTypes;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string[] sm_characterNames;

		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0xB58010", Offset = "0xB58010", VA = "0xB58010")]
		public static int GetNumberOfCharacters()
		{
			return default(int);
		}

		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0xB5803C", Offset = "0xB5803C", VA = "0xB5803C")]
		public static CharacterType[] GetCharacterTypes()
		{
			return null;
		}

		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0xB58248", Offset = "0xB58248", VA = "0xB58248")]
		public static string[] GetCharacterNames()
		{
			return null;
		}
	}
	[Token(Token = "0x200034E")]
	public class FourHalf : PlayableCharacter
	{
		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private BoolVariable m_hasFollowerBool;

		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0xB585E4", Offset = "0xB585E4", VA = "0xB585E4", Slot = "10")]
		public override void UpdateSelectIndicator(CharacterState state, bool isTethered)
		{
		}

		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0xB58678", Offset = "0xB58678", VA = "0xB58678", Slot = "7")]
		public override void AddFollower(IFollower follower)
		{
		}

		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0xB58784", Offset = "0xB58784", VA = "0xB58784", Slot = "8")]
		public override void RemoveFollower(IFollower follower)
		{
		}

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0xB587CC", Offset = "0xB587CC", VA = "0xB587CC")]
		public FourHalf()
		{
		}
	}
	[Token(Token = "0x200034F")]
	public interface ITaskable
	{
		[Token(Token = "0x6001ACF")]
		void SetIdle(bool isIdle);

		[Token(Token = "0x6001AD0")]
		void GoToTask(Transform destination, Action<bool> onDestinationReached);

		[Token(Token = "0x6001AD1")]
		void StartTask(int taskID);

		[Token(Token = "0x6001AD2")]
		void FinishTask();

		[Token(Token = "0x6001AD3")]
		void AbortTask();
	}
	[Token(Token = "0x2000350")]
	public enum UnfollowState
	{
		[Token(Token = "0x4001446")]
		Wait,
		[Token(Token = "0x4001447")]
		Complete,
		[Token(Token = "0x4001448")]
		Replaced,
		[Token(Token = "0x4001449")]
		PathBlocked,
		[Token(Token = "0x400144A")]
		WrongGarden,
		[Token(Token = "0x400144B")]
		SceneUnload
	}
	[Token(Token = "0x2000351")]
	public interface IFollower
	{
		[Token(Token = "0x6001AD4")]
		void EnableFollow(Locomotion leadLocomotion);

		[Token(Token = "0x6001AD5")]
		void DisableFollow(UnfollowState unfollowState);

		[Token(Token = "0x6001AD6")]
		void FollowCharacter();
	}
	[Token(Token = "0x2000352")]
	public class NPCCharacter : Character
	{
		[Serializable]
		[Token(Token = "0x20005E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927F20", Offset = "0x927F20")]
		private sealed class <>c
		{
			[Token(Token = "0x400215E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400215F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<bool> <>9__10_0;

			[Token(Token = "0x600277F")]
			[Address(RVA = "0xB5CA30", Offset = "0xB5CA30", VA = "0xB5CA30")]
			public <>c()
			{
			}

			[Token(Token = "0x6002780")]
			[Address(RVA = "0xB5CA38", Offset = "0xB5CA38", VA = "0xB5CA38")]
			internal bool <Awake>b__10_0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private string m_saveGuid;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		private Renderer[] m_renderers;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private NPCState m_state;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private EventToken m_roomActivatedEventToken;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private EventToken m_onBiomeDeactivated;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private NPCSaveData m_saveData;

		[Token(Token = "0x17000334")]
		public override bool IsActive
		{
			[Token(Token = "0x6001AD7")]
			[Address(RVA = "0xB5BAA8", Offset = "0xB5BAA8", VA = "0xB5BAA8", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0xB5BAB8", Offset = "0xB5BAB8", VA = "0xB5BAB8", Slot = "7")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0xB5AE38", Offset = "0xB5AE38", VA = "0xB5AE38", Slot = "8")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0xB5BABC", Offset = "0xB5BABC", VA = "0xB5BABC", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0xB5BE8C", Offset = "0xB5BE8C", VA = "0xB5BE8C", Slot = "5")]
		public override CharacterSaveData SaveCharacter()
		{
			return null;
		}

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0xB5BF28", Offset = "0xB5BF28", VA = "0xB5BF28", Slot = "6")]
		public override void LoadCharacter(CharacterSaveData saveData)
		{
		}

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0xB5C24C", Offset = "0xB5C24C", VA = "0xB5C24C")]
		public void InactivateNPC()
		{
		}

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0xB5C13C", Offset = "0xB5C13C", VA = "0xB5C13C")]
		public void DisableNPC()
		{
		}

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0xB5A520", Offset = "0xB5A520", VA = "0xB5A520")]
		public void EnableNPC()
		{
		}

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0xB5C290", Offset = "0xB5C290", VA = "0xB5C290")]
		private void TryRemoveVoice()
		{
		}

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0xB5B60C", Offset = "0xB5B60C", VA = "0xB5B60C", Slot = "10")]
		protected virtual void SetNPCActive(bool active)
		{
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0xB5BDD8", Offset = "0xB5BDD8", VA = "0xB5BDD8")]
		private void TryLoadCharacter()
		{
		}

		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0xB5C18C", Offset = "0xB5C18C", VA = "0xB5C18C")]
		private void AwaitRoomActivation()
		{
		}

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0xB5AD68", Offset = "0xB5AD68", VA = "0xB5AD68")]
		public NPCCharacter()
		{
		}

		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0xB5C920", Offset = "0xB5C920", VA = "0xB5C920")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D120", Offset = "0x93D120")]
		private void <AwaitRoomActivation>b__19_0(RoomEvents.RoomActivatedEvent eventData)
		{
		}
	}
	[Token(Token = "0x2000353")]
	public class NPCDestinationSetter : MonoBehaviour
	{
		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private NPCCharacter m_targetCharacter;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x933278", Offset = "0x933278")]
		[SerializeField]
		private bool m_teleportToNewStartPosition;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_startPosition;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9332D4", Offset = "0x9332D4")]
		[SerializeField]
		private Transform m_destinationTransform;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool m_faceDestinationOnArrival;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private UnityEvent m_onDestinationReached;

		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0xB5CAAC", Offset = "0xB5CAAC", VA = "0xB5CAAC")]
		public void SetDestination()
		{
		}

		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0xB5CCF8", Offset = "0xB5CCF8", VA = "0xB5CCF8")]
		private void OnDestinationReached(bool success)
		{
		}

		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0xB5CD28", Offset = "0xB5CD28", VA = "0xB5CD28")]
		public NPCDestinationSetter()
		{
		}
	}
	[Token(Token = "0x2000354")]
	public enum NPCState
	{
		[Token(Token = "0x4001459")]
		Active,
		[Token(Token = "0x400145A")]
		InActive,
		[Token(Token = "0x400145B")]
		Disabled
	}
	[Token(Token = "0x2000355")]
	public class PlayableCharacter : Character
	{
		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x933340", Offset = "0x933340")]
		[SerializeField]
		private CapsuleCollider m_collider;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Vector3 m_selectIndicatorOffset;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private CharacterSfxHandler m_sfxHandler;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9333AC", Offset = "0x9333AC")]
		[SerializeField]
		protected CharacterIndicator m_characterIndicator;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		protected SkinnedMeshRenderer[] m_renderers;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected bool m_trackInput;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_resetAxis;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		private bool m_resetMovement;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
		private bool m_followMainCharacter;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool m_isSelectIndicatorActive;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform m_cameraTransform;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Locomotion m_leadLocomotion;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private PlayableCharacterSaveData m_saveData;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x933408", Offset = "0x933408")]
		private CharacterState <State>k__BackingField;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x933418", Offset = "0x933418")]
		private IFollower <Follower>k__BackingField;

		[Token(Token = "0x17000335")]
		public PlayableCharacterData Data
		{
			[Token(Token = "0x6001AE9")]
			[Address(RVA = "0xB5CD90", Offset = "0xB5CD90", VA = "0xB5CD90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000336")]
		public CharacterType Type
		{
			[Token(Token = "0x6001AEA")]
			[Address(RVA = "0xB57484", Offset = "0xB57484", VA = "0xB57484")]
			get
			{
				return default(CharacterType);
			}
		}

		[Token(Token = "0x17000337")]
		public CharacterState State
		{
			[Token(Token = "0x6001AEB")]
			[Address(RVA = "0xB5CE1C", Offset = "0xB5CE1C", VA = "0xB5CE1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D130", Offset = "0x93D130")]
			get
			{
				return default(CharacterState);
			}
			[Token(Token = "0x6001AEC")]
			[Address(RVA = "0xB5CE24", Offset = "0xB5CE24", VA = "0xB5CE24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D140", Offset = "0x93D140")]
			private set
			{
			}
		}

		[Token(Token = "0x17000338")]
		public override bool IsActive
		{
			[Token(Token = "0x6001AED")]
			[Address(RVA = "0xB5CE2C", Offset = "0xB5CE2C", VA = "0xB5CE2C", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000339")]
		public CharacterOrientationState OrientationState
		{
			[Token(Token = "0x6001AEE")]
			[Address(RVA = "0xB52248", Offset = "0xB52248", VA = "0xB52248")]
			get
			{
				return default(CharacterOrientationState);
			}
		}

		[Token(Token = "0x1700033A")]
		public IFollower Follower
		{
			[Token(Token = "0x6001AEF")]
			[Address(RVA = "0xB58774", Offset = "0xB58774", VA = "0xB58774")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D150", Offset = "0x93D150")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001AF0")]
			[Address(RVA = "0xB5877C", Offset = "0xB5877C", VA = "0xB5877C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D160", Offset = "0x93D160")]
			protected set
			{
			}
		}

		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0xB5CE3C", Offset = "0xB5CE3C", VA = "0xB5CE3C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0xB5CFB8", Offset = "0xB5CFB8", VA = "0xB5CFB8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0xB5D0B4", Offset = "0xB5D0B4", VA = "0xB5D0B4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0xB5D4BC", Offset = "0xB5D4BC", VA = "0xB5D4BC", Slot = "5")]
		public override CharacterSaveData SaveCharacter()
		{
			return null;
		}

		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0xB54758", Offset = "0xB54758", VA = "0xB54758", Slot = "6")]
		public override void LoadCharacter(CharacterSaveData data)
		{
		}

		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0xB5D6DC", Offset = "0xB5D6DC", VA = "0xB5D6DC", Slot = "7")]
		public virtual void AddFollower(IFollower follower)
		{
		}

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0xB5D6E0", Offset = "0xB5D6E0", VA = "0xB5D6E0", Slot = "8")]
		public virtual void RemoveFollower(IFollower follower)
		{
		}

		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0xB5D6E4", Offset = "0xB5D6E4", VA = "0xB5D6E4")]
		public void SetLeadCharacterLocomotion(Locomotion leadLocomotion)
		{
		}

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0xB5D76C", Offset = "0xB5D76C", VA = "0xB5D76C")]
		public void SetRoom(Cortopia.Scripts.Rooms.RoomType roomType)
		{
		}

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0xB54F10", Offset = "0xB54F10", VA = "0xB54F10")]
		public void ForceSetRoom(Cortopia.Scripts.Rooms.RoomType roomType)
		{
		}

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0xB55088", Offset = "0xB55088", VA = "0xB55088", Slot = "9")]
		public virtual void SetStateAndUpdateSelectIndicator(CharacterState state, bool isTethered)
		{
		}

		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0xB5D7E8", Offset = "0xB5D7E8", VA = "0xB5D7E8", Slot = "10")]
		public virtual void UpdateSelectIndicator(CharacterState state, bool isTethered)
		{
		}

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0xB5D860", Offset = "0xB5D860", VA = "0xB5D860")]
		public void PlaySelectSound()
		{
		}

		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0xB5D8E0", Offset = "0xB5D8E0", VA = "0xB5D8E0")]
		public void RequireInputAxisReset()
		{
		}

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0xB576CC", Offset = "0xB576CC", VA = "0xB576CC")]
		public void SetVisible(bool isVisible)
		{
		}

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0xB55104", Offset = "0xB55104", VA = "0xB55104", Slot = "11")]
		public virtual void Teleport(Vector3 position, Quaternion rotation, Cortopia.Scripts.Rooms.RoomType activeRoom)
		{
		}

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0xB5DB54", Offset = "0xB5DB54", VA = "0xB5DB54")]
		public void SetSfxHandlerActive(bool isActive)
		{
		}

		[Token(Token = "0x6001B02")]
		[Address(RVA = "0xB5D55C", Offset = "0xB5D55C", VA = "0xB5D55C")]
		private void SetState(CharacterState state)
		{
		}

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0xB5DB90", Offset = "0xB5DB90", VA = "0xB5DB90")]
		private void SetInputLocked(bool isLocked)
		{
		}

		[Token(Token = "0x6001B04")]
		[Address(RVA = "0xB5D19C", Offset = "0xB5D19C", VA = "0xB5D19C")]
		protected void UpdateCharacterMoveInput()
		{
		}

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0xB5DBE4", Offset = "0xB5DBE4", VA = "0xB5DBE4")]
		private void ResetCharacterInput()
		{
		}

		[Token(Token = "0x6001B06")]
		[Address(RVA = "0xB55000", Offset = "0xB55000", VA = "0xB55000")]
		protected void SetColliderActive(bool isActive)
		{
		}

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0xB556D4", Offset = "0xB556D4", VA = "0xB556D4")]
		public PlayableCharacter()
		{
		}
	}
	[Token(Token = "0x2000356")]
	public class PlayableCharacterData : CharacterData
	{
		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private MathUtils.MinMax m_minMaxFollowDistance;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x933438", Offset = "0x933438")]
		[SerializeField]
		private CharacterType m_characterType;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AudioClip m_selectSound;

		[Token(Token = "0x1700033B")]
		public CharacterType Type
		{
			[Token(Token = "0x6001B08")]
			[Address(RVA = "0xB5CE14", Offset = "0xB5CE14", VA = "0xB5CE14")]
			get
			{
				return default(CharacterType);
			}
		}

		[Token(Token = "0x1700033C")]
		public MathUtils.MinMax MinMaxFollowDistance
		{
			[Token(Token = "0x6001B09")]
			[Address(RVA = "0xB5DDA8", Offset = "0xB5DDA8", VA = "0xB5DDA8")]
			get
			{
				return default(MathUtils.MinMax);
			}
		}

		[Token(Token = "0x1700033D")]
		public AudioClip SelectSound
		{
			[Token(Token = "0x6001B0A")]
			[Address(RVA = "0xB5D8D8", Offset = "0xB5D8D8", VA = "0xB5D8D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0xB5DDB0", Offset = "0xB5DDB0", VA = "0xB5DDB0")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x93D170", Offset = "0x93D170")]
		public void ResetData()
		{
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0xB5DDB4", Offset = "0xB5DDB4", VA = "0xB5DDB4")]
		public PlayableCharacterData()
		{
		}
	}
	[Token(Token = "0x2000357")]
	public class PlayableCharacterDestinationSetter : MonoBehaviour
	{
		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x933494", Offset = "0x933494")]
		[SerializeField]
		private PlayableCharacterData m_playableCharacterData;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9334E0", Offset = "0x9334E0")]
		[SerializeField]
		private bool m_teleportToNewStartPosition;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_startPosition;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x93353C", Offset = "0x93353C")]
		[SerializeField]
		private Transform m_destinationTransform;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool m_faceDestinationOnArrival;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private PlayableCharacterEvent m_onDestinationReached;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private PlayableCharacter m_targetCharacter;

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0xB5DDF8", Offset = "0xB5DDF8", VA = "0xB5DDF8")]
		public void SetDestination()
		{
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0xB5E0B4", Offset = "0xB5E0B4", VA = "0xB5E0B4")]
		private void OnDestinationReached(bool success)
		{
		}

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0xB5E11C", Offset = "0xB5E11C", VA = "0xB5E11C")]
		public PlayableCharacterDestinationSetter()
		{
		}
	}
}
namespace Cortopia.Scripts.Characters.Sockets
{
	[Token(Token = "0x2000358")]
	public class CharacterSocket : MonoBehaviour
	{
		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SocketType m_type;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameObject m_attachedObject;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform m_attachedObjectsOrigin;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PositionRotation m_attachedObjectsOriginOffset;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GameObject m_queuedAttachObject;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_queuedAttachMaintainOffset;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool m_queuedDetachObject;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		private bool m_queuedDetachMaintainWorldPosition;

		[Token(Token = "0x1700033E")]
		public SocketType SocketType
		{
			[Token(Token = "0x6001B10")]
			[Address(RVA = "0xB5E184", Offset = "0xB5E184", VA = "0xB5E184")]
			get
			{
				return default(SocketType);
			}
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0xB5E18C", Offset = "0xB5E18C", VA = "0xB5E18C")]
		public void AttachDuplicate(GameObject targetObject, bool maintainOffset)
		{
		}

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0xB5E4F4", Offset = "0xB5E4F4", VA = "0xB5E4F4")]
		public void AttachObject(GameObject targetObject, bool maintainOffset)
		{
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0xB5E374", Offset = "0xB5E374", VA = "0xB5E374")]
		public void DetachObject(bool keepWorldPosition)
		{
		}

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0xB5E7EC", Offset = "0xB5E7EC", VA = "0xB5E7EC")]
		public void DetachObjectNewParent(Transform newParent)
		{
		}

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0xB5E8AC", Offset = "0xB5E8AC", VA = "0xB5E8AC")]
		public void AddQueuedAttach(GameObject targetObject, bool maintainOffset)
		{
		}

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0xB5E8BC", Offset = "0xB5E8BC", VA = "0xB5E8BC")]
		public void AddQueuedDetach(bool maintainWorldPosition)
		{
		}

		[Token(Token = "0x6001B17")]
		[Address(RVA = "0xB5E8D0", Offset = "0xB5E8D0", VA = "0xB5E8D0")]
		public void AttachQueuedObject()
		{
		}

		[Token(Token = "0x6001B18")]
		[Address(RVA = "0xB5E960", Offset = "0xB5E960", VA = "0xB5E960")]
		public void DetachQueuedObject()
		{
		}

		[Token(Token = "0x6001B19")]
		[Address(RVA = "0xB5E994", Offset = "0xB5E994", VA = "0xB5E994")]
		public CharacterSocket()
		{
		}
	}
	[Token(Token = "0x2000359")]
	public class SavableSocketAttacher : SocketAttacher, IIdentifiableSavable, ISavable
	{
		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9335B8", Offset = "0x9335B8")]
		[SerializeField]
		private string m_guid;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private BoolVariable m_isAttached;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SavablePose m_localPose;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private EventToken m_allCharactersSpawnedEventToken;

		[Token(Token = "0x1700033F")]
		public string Guid
		{
			[Token(Token = "0x6001B1A")]
			[Address(RVA = "0xB5E99C", Offset = "0xB5E99C", VA = "0xB5E99C", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B1B")]
			[Address(RVA = "0xB5E9A4", Offset = "0xB5E9A4", VA = "0xB5E9A4", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0xB5E9AC", Offset = "0xB5E9AC", VA = "0xB5E9AC", Slot = "6")]
		public void Serialize(IWriteSave save)
		{
		}

		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0xB5EB8C", Offset = "0xB5EB8C", VA = "0xB5EB8C", Slot = "7")]
		public void Deserialize(IReadSave save)
		{
		}

		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0xB5EFC0", Offset = "0xB5EFC0", VA = "0xB5EFC0")]
		private void LoadAttachObject()
		{
		}

		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0xB5EA9C", Offset = "0xB5EA9C", VA = "0xB5EA9C")]
		private void SetLocalPose()
		{
		}

		[Token(Token = "0x6001B20")]
		[Address(RVA = "0xB5EDD8", Offset = "0xB5EDD8", VA = "0xB5EDD8")]
		private SavablePose GetDefaultPose()
		{
			return null;
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0xB5F1A4", Offset = "0xB5F1A4", VA = "0xB5F1A4")]
		public SavableSocketAttacher()
		{
		}

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0xB5F2CC", Offset = "0xB5F2CC", VA = "0xB5F2CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D1A8", Offset = "0x93D1A8")]
		private void <Deserialize>b__8_0(CharacterEvents.AllCharactersSpawnedEvent eventData)
		{
		}
	}
	[Token(Token = "0x200035A")]
	public class SocketAttacher : MonoBehaviour
	{
		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x933614", Offset = "0x933614")]
		[SerializeField]
		protected bool m_usingDataSocketHandler;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected CharacterData m_characterData;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SocketHandler m_socketHandler;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x933680", Offset = "0x933680")]
		[SerializeField]
		private SocketType m_socketType;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected GameObject m_socketableObject;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool m_maintainOffsetOnAttach;

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0xB5F0C8", Offset = "0xB5F0C8", VA = "0xB5F0C8")]
		public void AttachObject()
		{
		}

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0xB5F348", Offset = "0xB5F348", VA = "0xB5F348")]
		private SocketHandler GetSocketHandlerFromData()
		{
			return null;
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0xB5F2BC", Offset = "0xB5F2BC", VA = "0xB5F2BC")]
		public SocketAttacher()
		{
		}
	}
	[Token(Token = "0x200035B")]
	public class SocketDetacher : MonoBehaviour
	{
		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9336EC", Offset = "0x9336EC")]
		[SerializeField]
		private bool m_usingDataSocketHandler;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CharacterData m_characterData;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SocketHandler m_socketHandler;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x933758", Offset = "0x933758")]
		[SerializeField]
		private SocketType m_socketType;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool m_detachToNewParent;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject m_newParent;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool m_maintainOffsetOnAttach;

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0xB5F490", Offset = "0xB5F490", VA = "0xB5F490")]
		public void DetachObject()
		{
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0xB5F5B4", Offset = "0xB5F5B4", VA = "0xB5F5B4")]
		private SocketHandler GetSocketHandlerFromData()
		{
			return null;
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0xB5F720", Offset = "0xB5F720", VA = "0xB5F720")]
		public SocketDetacher()
		{
		}
	}
	[Token(Token = "0x200035C")]
	public enum SocketEventType
	{
		[Token(Token = "0x400148F")]
		Attach,
		[Token(Token = "0x4001490")]
		Detach
	}
	[Token(Token = "0x200035D")]
	public class SocketHandler : MonoBehaviour
	{
		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CharacterSocket m_leftHandSocket;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CharacterSocket m_rightHandSocket;

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0xB5B228", Offset = "0xB5B228", VA = "0xB5B228")]
		public void QueueAttachObject(SocketType attachLocation, GameObject objectToAttach, bool maintainObjectOffset)
		{
		}

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0xB5B3A8", Offset = "0xB5B3A8", VA = "0xB5B3A8")]
		public void QueueDetach(SocketType detachLocation, bool maintainWorldPosition)
		{
		}

		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0xB5F81C", Offset = "0xB5F81C", VA = "0xB5F81C")]
		public void AttachQueuedObject(SocketType attachLocation)
		{
		}

		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0xB5F848", Offset = "0xB5F848", VA = "0xB5F848")]
		public void DetachQueuedObject(SocketType detachLocation)
		{
		}

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0xB5F888", Offset = "0xB5F888", VA = "0xB5F888")]
		public void AttachDuplucate(SocketType attachLocation, GameObject objectToAttach, bool maintainObjectOffset)
		{
		}

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0xB5F44C", Offset = "0xB5F44C", VA = "0xB5F44C")]
		public void AttachObject(SocketType attachLocation, GameObject objectToAttach, bool maintainObjectOffset)
		{
		}

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0xB5F6EC", Offset = "0xB5F6EC", VA = "0xB5F6EC")]
		public void DetachObject(SocketType detachLocation, bool maintainWorldPosition)
		{
		}

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0xB5F6B8", Offset = "0xB5F6B8", VA = "0xB5F6B8")]
		public void DetachObjectNewParent(SocketType detachLocation, Transform newParent)
		{
		}

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0xB5F730", Offset = "0xB5F730", VA = "0xB5F730")]
		private CharacterSocket GetSocket(SocketType socketType)
		{
			return null;
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0xB5F8CC", Offset = "0xB5F8CC", VA = "0xB5F8CC")]
		public SocketHandler()
		{
		}
	}
	[Token(Token = "0x200035E")]
	public enum SocketType
	{
		[Token(Token = "0x4001494")]
		LeftHand,
		[Token(Token = "0x4001495")]
		RightHand
	}
}
namespace Cortopia.Scripts.Characters.NPC
{
	[Token(Token = "0x200035F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x926EA8", Offset = "0x926EA8")]
	public class BabyRabbitControl : Character
	{
		[Token(Token = "0x20005E1")]
		private enum BabyRabbitState
		{
			[Token(Token = "0x4002161")]
			Active,
			[Token(Token = "0x4002162")]
			Inactive,
			[Token(Token = "0x4002163")]
			Poked,
			[Token(Token = "0x4002164")]
			Recovering,
			[Token(Token = "0x4002165")]
			Destroyed,
			[Token(Token = "0x4002166")]
			Idle
		}

		[Token(Token = "0x4001496")]
		private const float WalkDistance = 1.5f;

		[Token(Token = "0x4001497")]
		private const float PokeForce = 4f;

		[Token(Token = "0x4001498")]
		private const float RecoveryTime = 0.25f;

		[Token(Token = "0x4001499")]
		private const float MinFallThreshold = -5f;

		[Token(Token = "0x400149A")]
		private const float MinFallScreamThreshold = -5f;

		[Token(Token = "0x400149B")]
		private const float ScreamStartTime = 0.25f;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly int m_parameterIsFalling;

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private readonly int m_parameterIsRolling;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AnimationCurve m_jumpCurve;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		private Renderer[] m_renderers;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private MathUtils.MinMax m_idleTimeRange;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x93384C", Offset = "0x93384C")]
		[SerializeField]
		private SoundEffect m_pokeSoundEffect;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private AudioSource m_screamAudio;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Rigidbody m_rigidBody;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Sequence m_spawnSequence;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private BabyRabbitState m_currentState;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Quaternion m_recoverRotation;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float m_recoveryTimer;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float m_screamTimer;

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool m_isDestroying;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float m_elapsedTime;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float m_idleTime;

		[Token(Token = "0x17000340")]
		public override bool IsActive
		{
			[Token(Token = "0x6001B33")]
			[Address(RVA = "0xB587D0", Offset = "0xB587D0", VA = "0xB587D0", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0xB587D8", Offset = "0xB587D8", VA = "0xB587D8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0xB587E4", Offset = "0xB587E4", VA = "0xB587E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0xB5883C", Offset = "0xB5883C", VA = "0xB5883C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0xB58DE4", Offset = "0xB58DE4", VA = "0xB58DE4", Slot = "5")]
		public override CharacterSaveData SaveCharacter()
		{
			return null;
		}

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0xB58DEC", Offset = "0xB58DEC", VA = "0xB58DEC", Slot = "6")]
		public override void LoadCharacter(CharacterSaveData saveData)
		{
		}

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0xB58DF0", Offset = "0xB58DF0", VA = "0xB58DF0")]
		public void Initialize(Vector3 spawnPoint)
		{
		}

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0xB58F4C", Offset = "0xB58F4C", VA = "0xB58F4C")]
		public void Spawn(Transform spawnPoint, Vector3 jumpPosition, float tweenTime)
		{
		}

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0xB59174", Offset = "0xB59174", VA = "0xB59174")]
		public void Despawn()
		{
		}

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0xB5933C", Offset = "0xB5933C", VA = "0xB5933C")]
		public void Poke(Vector3 pointerDirection)
		{
		}

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0xB58AC4", Offset = "0xB58AC4", VA = "0xB58AC4")]
		private void UpdatePoked()
		{
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0xB591B8", Offset = "0xB591B8", VA = "0xB591B8")]
		private void ResetBunny()
		{
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0xB58A20", Offset = "0xB58A20", VA = "0xB58A20")]
		private void Respawn()
		{
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0xB58C80", Offset = "0xB58C80", VA = "0xB58C80")]
		private void Recover()
		{
		}

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0xB59600", Offset = "0xB59600", VA = "0xB59600")]
		private void StopScream()
		{
		}

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0xB58D78", Offset = "0xB58D78", VA = "0xB58D78")]
		private void SetNewDestination()
		{
		}

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0xB59634", Offset = "0xB59634", VA = "0xB59634")]
		private void SetDestination()
		{
		}

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0xB59800", Offset = "0xB59800", VA = "0xB59800")]
		private void OnDestinationReached(bool success)
		{
		}

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0xB59810", Offset = "0xB59810", VA = "0xB59810")]
		public BabyRabbitControl()
		{
		}

		[Token(Token = "0x6001B46")]
		[Address(RVA = "0xB598F4", Offset = "0xB598F4", VA = "0xB598F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D1B8", Offset = "0x93D1B8")]
		private void <Spawn>b__31_0()
		{
		}
	}
	[Token(Token = "0x2000360")]
	public class BabyRabbitPoolHandler : RoomBehaviour
	{
		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_characterParent;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9338B8", Offset = "0x9338B8")]
		private int m_poolCount;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_spawnTime;

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private BabyRabbitControl m_babyRabbitPrefab;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform[] m_respawnPoints;

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<BabyRabbitControl> m_availableRabbits;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private EventToken m_respawnBabyRabbitEventToken;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private EventToken m_biomeActivatedEventToken;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private EventToken m_biomeDeactivatedEventToken;

		[Token(Token = "0x6001B47")]
		[Address(RVA = "0xB5997C", Offset = "0xB5997C", VA = "0xB5997C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B48")]
		[Address(RVA = "0xB59AC4", Offset = "0xB59AC4", VA = "0xB59AC4", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6001B49")]
		[Address(RVA = "0xB59D20", Offset = "0xB59D20", VA = "0xB59D20")]
		private void RespawnBabyRabbit(CharacterEvents.BabyRabbitRespawnEvent eventData)
		{
		}

		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0xB59BC4", Offset = "0xB59BC4", VA = "0xB59BC4")]
		private void EnableAllRabbits()
		{
		}

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0xB59F20", Offset = "0xB59F20", VA = "0xB59F20")]
		private void DisableAllRabbits()
		{
		}

		[Token(Token = "0x6001B4C")]
		[Address(RVA = "0xB59980", Offset = "0xB59980", VA = "0xB59980")]
		private void CreatePool()
		{
		}

		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0xB59E04", Offset = "0xB59E04", VA = "0xB59E04")]
		private Vector3 JumpPosition(Transform spawnPoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0xB59FE4", Offset = "0xB59FE4", VA = "0xB59FE4")]
		public BabyRabbitPoolHandler()
		{
		}

		[Token(Token = "0x6001B4F")]
		[Address(RVA = "0xB5A050", Offset = "0xB5A050", VA = "0xB5A050")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D1C8", Offset = "0x93D1C8")]
		private void <Initialize>b__10_0(RoomEvents.BiomeDeactivatedEvent eventData)
		{
		}
	}
	[Token(Token = "0x2000361")]
	public abstract class CardWorkerControl : NPCCharacter, ITaskable, IFollower
	{
		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly int m_parameterIsWorking;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private readonly int m_parameterActionType;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x933928", Offset = "0x933928")]
		[SerializeField]
		private CharacterIndicator m_selectIndicator;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		protected NPCWorker m_workerBehaviour;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private float m_defaultWalkSpeed;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private float m_followWalkSpeed;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9339A4", Offset = "0x9339A4")]
		[SerializeField]
		private VoiceLineCollection m_selectVO;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		protected VoiceLine m_interactionFailedVO;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private VoiceLineCollection m_unfollowReactions;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool m_isIdle;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Locomotion m_leadLocomotion;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private NavMeshPath m_path;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x933A10", Offset = "0x933A10")]
		private CastlesTree <CurrentTree>k__BackingField;

		[Token(Token = "0x17000341")]
		protected CastlesTree CurrentTree
		{
			[Token(Token = "0x6001B50")]
			[Address(RVA = "0xB5A0E0", Offset = "0xB5A0E0", VA = "0xB5A0E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D1D8", Offset = "0x93D1D8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B51")]
			[Address(RVA = "0xB5A0E8", Offset = "0xB5A0E8", VA = "0xB5A0E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D1E8", Offset = "0x93D1E8")]
			set
			{
			}
		}

		[Token(Token = "0x17000342")]
		protected virtual CastlesTree.ParticleType WorkParticleType
		{
			[Token(Token = "0x6001B52")]
			[Address(RVA = "0xB5A0F0", Offset = "0xB5A0F0", VA = "0xB5A0F0", Slot = "19")]
			get
			{
				return default(CastlesTree.ParticleType);
			}
		}

		[Token(Token = "0x6001B53")]
		public abstract bool TryAddTreeWork(CastlesTree tree);

		[Token(Token = "0x6001B54")]
		public abstract void TryStartTreeInteraction(CastlesTree tree);

		[Token(Token = "0x6001B55")]
		public abstract void TryCompleteTreeInteraction(CastlesTree tree);

		[Token(Token = "0x6001B56")]
		[Address(RVA = "0xB5A0F8", Offset = "0xB5A0F8", VA = "0xB5A0F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B57")]
		[Address(RVA = "0xB5A218", Offset = "0xB5A218", VA = "0xB5A218")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B58")]
		[Address(RVA = "0xB5A2D8", Offset = "0xB5A2D8", VA = "0xB5A2D8", Slot = "23")]
		public virtual void TryTreeInteraction(CastlesTree tree, PlayableCharacter character, CardWork work)
		{
		}

		[Token(Token = "0x6001B59")]
		[Address(RVA = "0xB5A4CC", Offset = "0xB5A4CC", VA = "0xB5A4CC", Slot = "6")]
		public override void LoadCharacter(CharacterSaveData saveData)
		{
		}

		[Token(Token = "0x6001B5A")]
		[Address(RVA = "0xB5A160", Offset = "0xB5A160", VA = "0xB5A160", Slot = "11")]
		public void SetIdle(bool activateIdle)
		{
		}

		[Token(Token = "0x6001B5B")]
		[Address(RVA = "0xB5A660", Offset = "0xB5A660", VA = "0xB5A660", Slot = "12")]
		public void GoToTask(Transform location, Action<bool> onDestinationReached)
		{
		}

		[Token(Token = "0x6001B5C")]
		[Address(RVA = "0xB5A718", Offset = "0xB5A718", VA = "0xB5A718", Slot = "13")]
		public void StartTask(int taskID)
		{
		}

		[Token(Token = "0x6001B5D")]
		[Address(RVA = "0xB5A7C4", Offset = "0xB5A7C4", VA = "0xB5A7C4", Slot = "15")]
		public void AbortTask()
		{
		}

		[Token(Token = "0x6001B5E")]
		[Address(RVA = "0xB5A910", Offset = "0xB5A910", VA = "0xB5A910", Slot = "14")]
		public void FinishTask()
		{
		}

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0xB5A918", Offset = "0xB5A918", VA = "0xB5A918")]
		public void OnInteract(PlayableCharacter character)
		{
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0xB5AA2C", Offset = "0xB5AA2C", VA = "0xB5AA2C", Slot = "16")]
		public void EnableFollow(Locomotion leadLocomotion)
		{
		}

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0xB5A34C", Offset = "0xB5A34C", VA = "0xB5A34C", Slot = "17")]
		public void DisableFollow(UnfollowState unfollowState)
		{
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0xB5A2A0", Offset = "0xB5A2A0", VA = "0xB5A2A0", Slot = "18")]
		public void FollowCharacter()
		{
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0xB5AC04", Offset = "0xB5AC04", VA = "0xB5AC04")]
		public void SetCurrentTree(CastlesTree tree)
		{
		}

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0xB5A8D0", Offset = "0xB5A8D0", VA = "0xB5A8D0")]
		protected void SetDefaultSpeed()
		{
		}

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0xB5A7F4", Offset = "0xB5A7F4", VA = "0xB5A7F4")]
		protected void UnoccupyCurrentTree()
		{
		}

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0xB5AC0C", Offset = "0xB5AC0C", VA = "0xB5AC0C")]
		protected bool IsWorkReachable(Vector3 workPoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0xB5ACE8", Offset = "0xB5ACE8", VA = "0xB5ACE8")]
		protected CardWorkerControl()
		{
		}
	}
	[Token(Token = "0x2000362")]
	public class CookControl : NPCCharacter, ITaskable
	{
		[Serializable]
		[Token(Token = "0x20005E2")]
		public struct Task : IEquatable<Task>
		{
			[Token(Token = "0x4002167")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Transform TaskDestination;

			[Token(Token = "0x4002168")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int TaskID;

			[Token(Token = "0x4002169")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject LeftHandProp;

			[Token(Token = "0x400216A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GameObject RightHandProp;

			[Token(Token = "0x6002781")]
			[Address(RVA = "0x9CD0BC", Offset = "0x9CD0BC", VA = "0x9CD0BC", Slot = "4")]
			public bool Equals(Task other)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40014C2")]
		private const int ChopsTrim = 8;

		[Token(Token = "0x40014C3")]
		private const float DefaultChopIteractionWait = 0.2f;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly int m_parameterIsWorking;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private readonly int m_parameterActionType;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly int m_parameterAtAttention;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private readonly int m_stateOutsideIdle;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x933A20", Offset = "0x933A20")]
		[SerializeField]
		private SocketHandler m_socketHandler;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private Task m_potTask;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Task m_cuttingBoardTask;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private Task m_dishesTask;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private MathUtils.MinMax m_taskTimerRange;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool m_isLyingdown;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		private bool m_isGirlCooking;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private List<Task> m_taskList;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Task m_currentTask;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private float m_elapsedTime;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private float m_currentTaskDuration;

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0xB5AE10", Offset = "0xB5AE10", VA = "0xB5AE10", Slot = "8")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0xB5AEC4", Offset = "0xB5AEC4", VA = "0xB5AEC4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0xB5B030", Offset = "0xB5B030", VA = "0xB5B030", Slot = "11")]
		public void SetIdle(bool isIdle)
		{
		}

		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0xB5B034", Offset = "0xB5B034", VA = "0xB5B034", Slot = "12")]
		public void GoToTask(Transform location, Action<bool> onDestinationReached)
		{
		}

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0xB5B080", Offset = "0xB5B080", VA = "0xB5B080", Slot = "13")]
		public void StartTask(int taskID)
		{
		}

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0xB5B26C", Offset = "0xB5B26C", VA = "0xB5B26C", Slot = "14")]
		public void FinishTask()
		{
		}

		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0xB5B3E4", Offset = "0xB5B3E4", VA = "0xB5B3E4", Slot = "15")]
		public void AbortTask()
		{
		}

		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0xB5AF48", Offset = "0xB5AF48", VA = "0xB5AF48")]
		public void PerformTask()
		{
		}

		[Token(Token = "0x6001B70")]
		[Address(RVA = "0xB5B494", Offset = "0xB5B494", VA = "0xB5B494")]
		public void OnDestinationReached(bool success)
		{
		}

		[Token(Token = "0x6001B71")]
		[Address(RVA = "0xB5B49C", Offset = "0xB5B49C", VA = "0xB5B49C")]
		public void UpdateTaskList()
		{
		}

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0xB5B4C0", Offset = "0xB5B4C0", VA = "0xB5B4C0")]
		public void RevertTaskList()
		{
		}

		[Token(Token = "0x6001B73")]
		[Address(RVA = "0xB5B4C8", Offset = "0xB5B4C8", VA = "0xB5B4C8")]
		public void StopAllTasks()
		{
		}

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0xB5B4D4", Offset = "0xB5B4D4", VA = "0xB5B4D4", Slot = "10")]
		protected override void SetNPCActive(bool active)
		{
		}

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0xB5B3E8", Offset = "0xB5B3E8", VA = "0xB5B3E8")]
		private Task GetRandomTask()
		{
			return default(Task);
		}

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0xB5B6BC", Offset = "0xB5B6BC", VA = "0xB5B6BC")]
		public void SetStateToLyingDown()
		{
		}

		[Token(Token = "0x6001B77")]
		[Address(RVA = "0xB5B75C", Offset = "0xB5B75C", VA = "0xB5B75C")]
		public void SetStateToAttention(bool atAttention)
		{
		}

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0xB5B7BC", Offset = "0xB5B7BC", VA = "0xB5B7BC")]
		public CookControl()
		{
		}
	}
	[Token(Token = "0x2000363")]
	public class KeepGuardControl : NPCCharacter
	{
		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly int m_paremeterGuardPose;

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0xB5B8A0", Offset = "0xB5B8A0", VA = "0xB5B8A0", Slot = "7")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6001B7A")]
		[Address(RVA = "0xB5B8A4", Offset = "0xB5B8A4", VA = "0xB5B8A4", Slot = "8")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001B7B")]
		[Address(RVA = "0xB5B8A8", Offset = "0xB5B8A8", VA = "0xB5B8A8", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001B7C")]
		[Address(RVA = "0xB5B8B8", Offset = "0xB5B8B8", VA = "0xB5B8B8", Slot = "6")]
		public override void LoadCharacter(CharacterSaveData saveData)
		{
		}

		[Token(Token = "0x6001B7D")]
		[Address(RVA = "0xB5B8BC", Offset = "0xB5B8BC", VA = "0xB5B8BC")]
		public void EnterGuardPose()
		{
		}

		[Token(Token = "0x6001B7E")]
		[Address(RVA = "0xB5B914", Offset = "0xB5B914", VA = "0xB5B914")]
		public void ExitGuardPose()
		{
		}

		[Token(Token = "0x6001B7F")]
		[Address(RVA = "0xB5B990", Offset = "0xB5B990", VA = "0xB5B990")]
		public KeepGuardControl()
		{
		}
	}
	[Token(Token = "0x2000364")]
	public class MadHatterControl : NPCCharacter
	{
		[Token(Token = "0x6001B80")]
		[Address(RVA = "0xB5B9EC", Offset = "0xB5B9EC", VA = "0xB5B9EC")]
		public MadHatterControl()
		{
		}
	}
	[Token(Token = "0x2000365")]
	public class PatchesControl : NPCCharacter
	{
		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private int m_patchesIndexDefinition;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private IntVariable m_patchesIndexGlobalVariable;

		[Token(Token = "0x40014D6")]
		private const int PatchesUndefinedIndex = -1;

		[Token(Token = "0x40014D7")]
		private const int PatchesDefaultChoiceIndex = 0;

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0xB5B9F0", Offset = "0xB5B9F0", VA = "0xB5B9F0", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0xB5BA98", Offset = "0xB5BA98", VA = "0xB5BA98", Slot = "6")]
		public override void LoadCharacter(CharacterSaveData saveData)
		{
		}

		[Token(Token = "0x6001B83")]
		[Address(RVA = "0xB5BA9C", Offset = "0xB5BA9C", VA = "0xB5BA9C")]
		public PatchesControl()
		{
		}
	}
	[Token(Token = "0x2000366")]
	public class QueenControl : NPCCharacter
	{
		[Token(Token = "0x6001B84")]
		[Address(RVA = "0xB5BAA0", Offset = "0xB5BAA0", VA = "0xB5BAA0")]
		public QueenControl()
		{
		}
	}
	[Token(Token = "0x2000367")]
	public class WhiteRabbitControl : NPCCharacter
	{
		[Token(Token = "0x6001B85")]
		[Address(RVA = "0xB5BAA4", Offset = "0xB5BAA4", VA = "0xB5BAA4")]
		public WhiteRabbitControl()
		{
		}
	}
}
namespace Cortopia.Scripts.Audio
{
	[Token(Token = "0x2000368")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioMixerSnapshot[] m_audioMixerSnapshots;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioMixerGroup[] m_audioMixerGroups;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<SoundEffectPlayer> m_freeSoundEffectPlayers;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x933AFC", Offset = "0x933AFC")]
		[SerializeField]
		private SoundEffect m_defaultGrabAudio;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<SoundEffectPlayer> m_activeSoundEffectPlayers;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private HashSet<AudioPlayOrderType> m_unSupportedPlayOrders;

		[Token(Token = "0x6001B86")]
		[Address(RVA = "0xB4CC60", Offset = "0xB4CC60", VA = "0xB4CC60")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B87")]
		[Address(RVA = "0xB4CCC8", Offset = "0xB4CCC8", VA = "0xB4CCC8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0xB4CD40", Offset = "0xB4CD40", VA = "0xB4CD40")]
		public void TransitionToSnapshot(AudioMixerSnapshotType audioMixerSnapshotType, float timeToSnapshot)
		{
		}

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0xB4CDB8", Offset = "0xB4CDB8", VA = "0xB4CDB8")]
		public SoundEffectPlayer PlaySoundEffectForTarget(SoundEffect soundEffect, Vector3 position, AudioMixerGroupType mixerGroupType)
		{
			return null;
		}

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0xB4D190", Offset = "0xB4D190", VA = "0xB4D190")]
		public SoundEffectPlayer PlaySoundEffectForTarget(SoundEffect soundEffect, Transform target, AudioMixerGroupType mixerGroupType)
		{
			return null;
		}

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0xB4D34C", Offset = "0xB4D34C", VA = "0xB4D34C")]
		public SoundEffectPlayer PlaySoundEffectForTarget(SoundEffect soundEffect, Transform target)
		{
			return null;
		}

		[Token(Token = "0x6001B8C")]
		[Address(RVA = "0xB4D354", Offset = "0xB4D354", VA = "0xB4D354")]
		public void PlayDefaultGrabSound(Transform target)
		{
		}

		[Token(Token = "0x6001B8D")]
		[Address(RVA = "0xB4D08C", Offset = "0xB4D08C", VA = "0xB4D08C")]
		private void TryPlaySoundEffect(SoundEffectPlayer soundEffectPlayer, SoundEffect soundEffect, Transform target, AudioMixerGroup audioMixerGroup)
		{
		}

		[Token(Token = "0x6001B8E")]
		[Address(RVA = "0xB4CF5C", Offset = "0xB4CF5C", VA = "0xB4CF5C")]
		private bool GetFreeSoundEffectPlayer(out SoundEffectPlayer freeSoundEffectPlayer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0xB4CEE0", Offset = "0xB4CEE0", VA = "0xB4CEE0")]
		private bool IsValidPlayOrder(AudioPlayOrderType playOrder)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B90")]
		[Address(RVA = "0xB4D584", Offset = "0xB4D584", VA = "0xB4D584")]
		private void OnSoundEffectComplete(SoundEffectPlayer soundEffectPlayer)
		{
		}

		[Token(Token = "0x6001B91")]
		[Address(RVA = "0xB4D630", Offset = "0xB4D630", VA = "0xB4D630")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x2000369")]
	public enum AudioMixerGroupType
	{
		[Token(Token = "0x40014DF")]
		SoundEffects,
		[Token(Token = "0x40014E0")]
		Music,
		[Token(Token = "0x40014E1")]
		UI,
		[Token(Token = "0x40014E2")]
		VO
	}
	[Token(Token = "0x200036A")]
	public enum AudioMixerSnapshotType
	{
		[Token(Token = "0x40014E4")]
		Default,
		[Token(Token = "0x40014E5")]
		Dialogue
	}
	[Token(Token = "0x200036B")]
	public enum AudioPlayOrderType
	{
		[Token(Token = "0x40014E7")]
		OneShot,
		[Token(Token = "0x40014E8")]
		Sequential,
		[Token(Token = "0x40014E9")]
		RandomOneShot,
		[Token(Token = "0x40014EA")]
		RandomLoop,
		[Token(Token = "0x40014EB")]
		RandomSequential,
		[Token(Token = "0x40014EC")]
		Loop
	}
	[Token(Token = "0x200036C")]
	public enum VOPlayOrderType
	{
		[Token(Token = "0x40014EE")]
		RandomOneShot,
		[Token(Token = "0x40014EF")]
		RandomLoop
	}
	[Token(Token = "0x200036D")]
	public class AudioSnapshotTransitioner : MonoBehaviour
	{
		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioMixerSnapshot m_targetSnapshot;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_transitionTime;

		[Token(Token = "0x6001B92")]
		[Address(RVA = "0xB4D780", Offset = "0xB4D780", VA = "0xB4D780")]
		public void TransitionToSnapshot()
		{
		}

		[Token(Token = "0x6001B93")]
		[Address(RVA = "0xB4D7C0", Offset = "0xB4D7C0", VA = "0xB4D7C0")]
		public AudioSnapshotTransitioner()
		{
		}
	}
	[Token(Token = "0x200036E")]
	public class CharacterSfxHandler : MonoBehaviour
	{
		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SoundEffectPlayer m_locomotionSfxPlayer;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SoundEffectPlayer m_footStepSfxPlayer;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_isBlocked;

		[Token(Token = "0x6001B94")]
		[Address(RVA = "0xB4D7D0", Offset = "0xB4D7D0", VA = "0xB4D7D0")]
		public void SetSoundEffectBlocked(bool isBlocked)
		{
		}

		[Token(Token = "0x6001B95")]
		[Address(RVA = "0xB44884", Offset = "0xB44884", VA = "0xB44884")]
		public void PlayFootStep()
		{
		}

		[Token(Token = "0x6001B96")]
		[Address(RVA = "0xB447A4", Offset = "0xB447A4", VA = "0xB447A4")]
		public void PlaySoundEffect(SoundEffect soundEffect)
		{
		}

		[Token(Token = "0x6001B97")]
		[Address(RVA = "0xB448B8", Offset = "0xB448B8", VA = "0xB448B8")]
		public void StopSoundEffects()
		{
		}

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0xB4D888", Offset = "0xB4D888", VA = "0xB4D888")]
		public CharacterSfxHandler()
		{
		}
	}
	[Token(Token = "0x200036F")]
	public class MusicPlayer : MonoBehaviour
	{
		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioClip[] m_musicClips;

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x933B98", Offset = "0x933B98")]
		private float m_fadeOutTime;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x933BE4", Offset = "0x933BE4")]
		private float m_fadeInTime;

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0xB4D890", Offset = "0xB4D890", VA = "0xB4D890")]
		public void StopAllMusic(float fadeTime)
		{
		}

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0xB4D918", Offset = "0xB4D918", VA = "0xB4D918")]
		public void PlayStinger()
		{
		}

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0xB4D9CC", Offset = "0xB4D9CC", VA = "0xB4D9CC")]
		public void SwitchMusic()
		{
		}

		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0xB4DB08", Offset = "0xB4DB08", VA = "0xB4DB08")]
		public MusicPlayer()
		{
		}
	}
	[Token(Token = "0x2000370")]
	public class RoomSoundHandler : MonoBehaviour
	{
		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_narratorSubtitleAnchor;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x933C40", Offset = "0x933C40")]
		[SerializeField]
		private bool m_fadeOutPrevious;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip m_musicClip;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_fadeOutTime;

		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_fadeInTime;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x933CBC", Offset = "0x933CBC")]
		[SerializeField]
		private AudioSource m_ambience;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool m_enableAmbienceOnLevelLoad;

		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[SerializeField]
		private bool m_disableAmbienceOnLeaveRoom;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x933D28", Offset = "0x933D28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x933D28", Offset = "0x933D28")]
		[SerializeField]
		private List<AudioSource> m_audioSources;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private SoundEffectPlayer[] m_loopingSoundEffectPlayers;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IList<AudioSource> m_loopingAudioSources;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float m_defaultAmbienceVolume;

		[Token(Token = "0x4001504")]
		private const float AmbienceFadeTime = 0.5f;

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0xB4DB70", Offset = "0xB4DB70", VA = "0xB4DB70")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0xB4DB80", Offset = "0xB4DB80", VA = "0xB4DB80")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0xB4DF9C", Offset = "0xB4DF9C", VA = "0xB4DF9C")]
		public void SetActive(bool active)
		{
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0xB4E168", Offset = "0xB4E168", VA = "0xB4E168")]
		private void EnableRoomSfx()
		{
		}

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0xB4E224", Offset = "0xB4E224", VA = "0xB4E224")]
		private void DisableRoomSfx()
		{
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0xB4E2E4", Offset = "0xB4E2E4", VA = "0xB4E2E4")]
		private void TrySetAmbienceActive(bool active)
		{
		}

		[Token(Token = "0x6001BA3")]
		[Address(RVA = "0xB4DBA4", Offset = "0xB4DBA4", VA = "0xB4DBA4")]
		private void LoadAudioData()
		{
		}

		[Token(Token = "0x6001BA4")]
		[Address(RVA = "0xB4DE50", Offset = "0xB4DE50", VA = "0xB4DE50")]
		private void SetupAmbience()
		{
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0xB4E4D8", Offset = "0xB4E4D8", VA = "0xB4E4D8")]
		private void SetLoopingAudioSourcesActive(bool active)
		{
		}

		[Token(Token = "0x6001BA6")]
		[Address(RVA = "0xB4E79C", Offset = "0xB4E79C", VA = "0xB4E79C")]
		public RoomSoundHandler()
		{
		}

		[Token(Token = "0x6001BA7")]
		[Address(RVA = "0xB4E834", Offset = "0xB4E834", VA = "0xB4E834")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D1F8", Offset = "0x93D1F8")]
		private void <TrySetAmbienceActive>b__18_0()
		{
		}
	}
	[Token(Token = "0x2000371")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x926F0C", Offset = "0x926F0C")]
	public class SoundEffect : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20005E3")]
		public struct AudioClipWait
		{
			[Token(Token = "0x400216B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float Wait;

			[Token(Token = "0x400216C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AudioClip AudioClip;
		}

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x933DA8", Offset = "0x933DA8")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x933DA8", Offset = "0x933DA8")]
		private float m_pitchMin;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x933E10", Offset = "0x933E10")]
		private float m_pitchMax;

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x933E54", Offset = "0x933E54")]
		[SerializeField]
		private bool m_overrideVolume;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x933EA0", Offset = "0x933EA0")]
		private float m_volume;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x933EE4", Offset = "0x933EE4")]
		[SerializeField]
		private MathUtils.MinMax m_waitTime;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioPlayOrderType m_playOrder;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private int m_playIterations;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<AudioClipWait> m_audioSequence;

		[Token(Token = "0x17000343")]
		public AudioPlayOrderType PlayOrder
		{
			[Token(Token = "0x6001BA8")]
			[Address(RVA = "0xB4CED8", Offset = "0xB4CED8", VA = "0xB4CED8")]
			get
			{
				return default(AudioPlayOrderType);
			}
		}

		[Token(Token = "0x17000344")]
		public IReadOnlyList<AudioClipWait> AudioSequence
		{
			[Token(Token = "0x6001BA9")]
			[Address(RVA = "0xB4E864", Offset = "0xB4E864", VA = "0xB4E864")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000345")]
		public bool HasOverrideVolume
		{
			[Token(Token = "0x6001BAA")]
			[Address(RVA = "0xB4E86C", Offset = "0xB4E86C", VA = "0xB4E86C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0xB4E874", Offset = "0xB4E874", VA = "0xB4E874")]
		public void LoadAudioClipData()
		{
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0xB4E9A4", Offset = "0xB4E9A4", VA = "0xB4E9A4")]
		public AudioClipWait GetFirstSequence()
		{
			return default(AudioClipWait);
		}

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0xB4EA08", Offset = "0xB4EA08", VA = "0xB4EA08")]
		public AudioClipWait GetRandomSequence()
		{
			return default(AudioClipWait);
		}

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0xB4EA7C", Offset = "0xB4EA7C", VA = "0xB4EA7C")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0xB4EA88", Offset = "0xB4EA88", VA = "0xB4EA88")]
		public float GetVolume()
		{
			return default(float);
		}

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0xB4EA90", Offset = "0xB4EA90", VA = "0xB4EA90")]
		public float GetRandomWaitTime()
		{
			return default(float);
		}

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0xB4EA9C", Offset = "0xB4EA9C", VA = "0xB4EA9C")]
		public void SetPlayIterations(int iterations)
		{
		}

		[Token(Token = "0x6001BB2")]
		[Address(RVA = "0xB4EAA4", Offset = "0xB4EAA4", VA = "0xB4EAA4")]
		public int GetPlayIterations()
		{
			return default(int);
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0xB4EAAC", Offset = "0xB4EAAC", VA = "0xB4EAAC")]
		public SoundEffect()
		{
		}
	}
	[Token(Token = "0x2000372")]
	public class SoundEffectPlayer : MonoBehaviour
	{
		[Token(Token = "0x20005E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927F30", Offset = "0x927F30")]
		private sealed class <PlayOneShot>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400216D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400216E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400216F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float wait;

			[Token(Token = "0x4002170")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEffectPlayer <>4__this;

			[Token(Token = "0x4002171")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public AudioClip audioClip;

			[Token(Token = "0x4002172")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float pitch;

			[Token(Token = "0x4002173")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public bool hasOverrideVolume;

			[Token(Token = "0x4002174")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float volume;

			[Token(Token = "0x170004E2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002785")]
				[Address(RVA = "0xB50830", Offset = "0xB50830", VA = "0xB50830", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004E3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002787")]
				[Address(RVA = "0xB508A0", Offset = "0xB508A0", VA = "0xB508A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002782")]
			[Address(RVA = "0xB50664", Offset = "0xB50664", VA = "0xB50664")]
			[DebuggerHidden]
			public <PlayOneShot>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6002783")]
			[Address(RVA = "0xB50690", Offset = "0xB50690", VA = "0xB50690", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002784")]
			[Address(RVA = "0xB50694", Offset = "0xB50694", VA = "0xB50694", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002786")]
			[Address(RVA = "0xB50838", Offset = "0xB50838", VA = "0xB50838", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005E5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927F40", Offset = "0x927F40")]
		private sealed class <PlaySequence>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002175")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002176")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002177")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEffect clipContainer;

			[Token(Token = "0x4002178")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEffectPlayer <>4__this;

			[Token(Token = "0x4002179")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__2;

			[Token(Token = "0x400217A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private SoundEffect.AudioClipWait <clip>5__3;

			[Token(Token = "0x170004E4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600278B")]
				[Address(RVA = "0xB51150", Offset = "0xB51150", VA = "0xB51150", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004E5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600278D")]
				[Address(RVA = "0xB511C0", Offset = "0xB511C0", VA = "0xB511C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002788")]
			[Address(RVA = "0xB50E10", Offset = "0xB50E10", VA = "0xB50E10")]
			[DebuggerHidden]
			public <PlaySequence>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x6002789")]
			[Address(RVA = "0xB50E3C", Offset = "0xB50E3C", VA = "0xB50E3C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600278A")]
			[Address(RVA = "0xB50E40", Offset = "0xB50E40", VA = "0xB50E40", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600278C")]
			[Address(RVA = "0xB51158", Offset = "0xB51158", VA = "0xB51158", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927F50", Offset = "0x927F50")]
		private sealed class <PlayRandomLoop>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400217B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400217C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400217D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEffect clipContainer;

			[Token(Token = "0x400217E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEffectPlayer <>4__this;

			[Token(Token = "0x170004E6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002791")]
				[Address(RVA = "0xB50AA4", Offset = "0xB50AA4", VA = "0xB50AA4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004E7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002793")]
				[Address(RVA = "0xB50B14", Offset = "0xB50B14", VA = "0xB50B14", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600278E")]
			[Address(RVA = "0xB508A8", Offset = "0xB508A8", VA = "0xB508A8")]
			[DebuggerHidden]
			public <PlayRandomLoop>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x600278F")]
			[Address(RVA = "0xB508D4", Offset = "0xB508D4", VA = "0xB508D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002790")]
			[Address(RVA = "0xB508D8", Offset = "0xB508D8", VA = "0xB508D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002792")]
			[Address(RVA = "0xB50AAC", Offset = "0xB50AAC", VA = "0xB50AAC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927F60", Offset = "0x927F60")]
		private sealed class <PlayRandomSequence>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400217F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002180")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002181")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEffect clipContainer;

			[Token(Token = "0x4002182")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEffectPlayer <>4__this;

			[Token(Token = "0x4002183")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__2;

			[Token(Token = "0x170004E8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002797")]
				[Address(RVA = "0xB50D98", Offset = "0xB50D98", VA = "0xB50D98", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004E9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002799")]
				[Address(RVA = "0xB50E08", Offset = "0xB50E08", VA = "0xB50E08", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002794")]
			[Address(RVA = "0xB50B1C", Offset = "0xB50B1C", VA = "0xB50B1C")]
			[DebuggerHidden]
			public <PlayRandomSequence>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6002795")]
			[Address(RVA = "0xB50B48", Offset = "0xB50B48", VA = "0xB50B48", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002796")]
			[Address(RVA = "0xB50B4C", Offset = "0xB50B4C", VA = "0xB50B4C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002798")]
			[Address(RVA = "0xB50DA0", Offset = "0xB50DA0", VA = "0xB50DA0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource m_audioSource;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private SoundEffect m_soundEffect;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_playOnStart;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform m_target;

		[Token(Token = "0x14000062")]
		private event Action<SoundEffectPlayer> OnPlayCompleted
		{
			[Token(Token = "0x6001BB4")]
			[Address(RVA = "0xB4EB34", Offset = "0xB4EB34", VA = "0xB4EB34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D208", Offset = "0x93D208")]
			add
			{
			}
			[Token(Token = "0x6001BB5")]
			[Address(RVA = "0xB4EC20", Offset = "0xB4EC20", VA = "0xB4EC20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D218", Offset = "0x93D218")]
			remove
			{
			}
		}

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0xB4ED0C", Offset = "0xB4ED0C", VA = "0xB4ED0C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0xB4ED14", Offset = "0xB4ED14", VA = "0xB4ED14")]
		private void Start()
		{
		}

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0xB4EDC4", Offset = "0xB4EDC4", VA = "0xB4EDC4")]
		private void FollowTarget(Transform target)
		{
		}

		[Token(Token = "0x6001BB9")]
		[Address(RVA = "0xB4EDCC", Offset = "0xB4EDCC", VA = "0xB4EDCC")]
		public void AssignAudioSource(AudioSource audioSource)
		{
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0xB4D36C", Offset = "0xB4D36C", VA = "0xB4D36C")]
		public void AssignSoundEffect(SoundEffect soundEffect)
		{
		}

		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0xB4D374", Offset = "0xB4D374", VA = "0xB4D374")]
		public void SetAudioMixerGroup(AudioMixerGroup audioMixerGroup)
		{
		}

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0xB4D7DC", Offset = "0xB4D7DC", VA = "0xB4D7DC")]
		public void StopSoundEffect()
		{
		}

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0xB4EDD4", Offset = "0xB4EDD4", VA = "0xB4EDD4")]
		public void PlaySoundEffectOnManager()
		{
		}

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0xB4EE78", Offset = "0xB4EE78", VA = "0xB4EE78")]
		public void TryPlaySoundEffect()
		{
		}

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0xB4D3AC", Offset = "0xB4D3AC", VA = "0xB4D3AC")]
		public void TryPlaySoundEffect(Action<SoundEffectPlayer> onPlayCompleted, [Optional] Transform followTarget)
		{
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0xB4EE84", Offset = "0xB4EE84", VA = "0xB4EE84")]
		private void PlaySoundEffect()
		{
		}

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0xB4F158", Offset = "0xB4F158", VA = "0xB4F158")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93D228", Offset = "0x93D228")]
		private IEnumerator PlayOneShot(AudioClip audioClip, float pitch, float wait, bool hasOverrideVolume, float volume)
		{
			return null;
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0xB4F334", Offset = "0xB4F334", VA = "0xB4F334")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93D28C", Offset = "0x93D28C")]
		private IEnumerator PlaySequence(SoundEffect clipContainer)
		{
			return null;
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0xB4F3CC", Offset = "0xB4F3CC", VA = "0xB4F3CC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93D2F0", Offset = "0x93D2F0")]
		private IEnumerator PlayRandomLoop(SoundEffect clipContainer)
		{
			return null;
		}

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0xB4F464", Offset = "0xB4F464", VA = "0xB4F464")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93D354", Offset = "0x93D354")]
		private IEnumerator PlayRandomSequence(SoundEffect clipContainer)
		{
			return null;
		}

		[Token(Token = "0x6001BC5")]
		[Address(RVA = "0xB4F4FC", Offset = "0xB4F4FC", VA = "0xB4F4FC")]
		private void TryFollowTarget()
		{
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0xB4F260", Offset = "0xB4F260", VA = "0xB4F260")]
		private void Play(AudioClip clip, float pitch, bool overrideVolume, float volume = 1f)
		{
		}

		[Token(Token = "0x6001BC7")]
		[Address(RVA = "0xB4F5F0", Offset = "0xB4F5F0", VA = "0xB4F5F0")]
		private void RaiseEvent()
		{
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0xB4F65C", Offset = "0xB4F65C", VA = "0xB4F65C")]
		public SoundEffectPlayer()
		{
		}
	}
}
namespace Cortopia.Scripts.Audio.VO
{
	[Token(Token = "0x2000373")]
	[Flags]
	public enum ExpressionType
	{
		[Token(Token = "0x4001513")]
		Default = 1,
		[Token(Token = "0x4001514")]
		Happy = 2,
		[Token(Token = "0x4001515")]
		Angry = 4,
		[Token(Token = "0x4001516")]
		Sad = 8,
		[Token(Token = "0x4001517")]
		Scared = 0x10,
		[Token(Token = "0x4001518")]
		Disgusted = 0x20,
		[Token(Token = "0x4001519")]
		Shocked = 0x40
	}
	[Token(Token = "0x2000374")]
	public class AnimatedVoice : Voice
	{
		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x933F8C", Offset = "0x933F8C")]
		[SerializeField]
		private CharacterAnimationHandler m_animationHandler;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x933FD8", Offset = "0x933FD8")]
		[SerializeField]
		private int m_samplesize;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x934024", Offset = "0x934024")]
		private int m_lowerFreqLimit;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x934068", Offset = "0x934068")]
		private int m_upperFreqLimit;

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private float m_volumeCutOff;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9340BC", Offset = "0x9340BC")]
		private float m_amplitude;

		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private int m_jitterFilterSampleSize;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float m_currentVOExpressionStartTime;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private ExpressionType m_currentVOExpressionType;

		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private ExpressionType m_currentExpression;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Queue<ExpressionData> m_queuedVOExpressions;

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool m_isLipSyncActive;

		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float[] m_spectrum;

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float m_audioSampleRate;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int m_arrayLowFreq;

		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int m_arrayHighFreq;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float[] m_jitterFilterSamples;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float m_jitterFilterSum;

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float m_mouthPosition;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int m_currentJitterSampleCount;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private int m_currentJitterFilterSampleIndex;

		[Token(Token = "0x400152F")]
		private const float DefaultVOTimerValue = -1f;

		[Token(Token = "0x6001BC9")]
		[Address(RVA = "0xB511C8", Offset = "0xB511C8", VA = "0xB511C8", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0xB51278", Offset = "0xB51278", VA = "0xB51278")]
		private void Update()
		{
		}

		[Token(Token = "0x6001BCB")]
		[Address(RVA = "0xB517B4", Offset = "0xB517B4", VA = "0xB517B4", Slot = "6")]
		public override void StopTalking()
		{
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0xB5189C", Offset = "0xB5189C", VA = "0xB5189C")]
		public void TryPlayAnimation(AnimationData animationData)
		{
		}

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0xB51948", Offset = "0xB51948", VA = "0xB51948")]
		public void LoadVOExpressions(ExpressionData[] expressionData)
		{
		}

		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0xB51A4C", Offset = "0xB51A4C", VA = "0xB51A4C")]
		public void EnableLipSync(AudioClip clip)
		{
		}

		[Token(Token = "0x6001BCF")]
		[Address(RVA = "0xB51838", Offset = "0xB51838", VA = "0xB51838")]
		public void DisableLipSync()
		{
		}

		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0xB51AC0", Offset = "0xB51AC0", VA = "0xB51AC0", Slot = "8")]
		protected override void Speak(AudioClip clip)
		{
		}

		[Token(Token = "0x6001BD1")]
		[Address(RVA = "0xB51308", Offset = "0xB51308", VA = "0xB51308")]
		private float BandVolume(float lowFrequencyCutoff, float highFrequencyCutoff)
		{
			return default(float);
		}

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0xB514B8", Offset = "0xB514B8", VA = "0xB514B8")]
		private float MovingAverage(float sample)
		{
			return default(float);
		}

		[Token(Token = "0x6001BD3")]
		[Address(RVA = "0xB515BC", Offset = "0xB515BC", VA = "0xB515BC")]
		private void VOExpressionQueueHandler()
		{
		}

		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0xB51A40", Offset = "0xB51A40", VA = "0xB51A40")]
		private void SetCurrentVOExpressionValues(ExpressionData expressionData)
		{
		}

		[Token(Token = "0x6001BD5")]
		[Address(RVA = "0xB51AF0", Offset = "0xB51AF0", VA = "0xB51AF0")]
		public AnimatedVoice()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000375")]
	public struct ExpressionData
	{
		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ExpressionType Expression;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float StartTime;
	}
	[Token(Token = "0x2000376")]
	public class FourHalfSewerVoice : Voice
	{
		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0xB51C18", Offset = "0xB51C18", VA = "0xB51C18")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001BD7")]
		[Address(RVA = "0xB51CFC", Offset = "0xB51CFC", VA = "0xB51CFC", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0xB51DBC", Offset = "0xB51DBC", VA = "0xB51DBC")]
		public FourHalfSewerVoice()
		{
		}
	}
	[Token(Token = "0x2000377")]
	public class Narrator : Voice
	{
		[Token(Token = "0x20005E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927F70", Offset = "0x927F70")]
		private sealed class <HideSubtitlesAfterSpeaking>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002184")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002185")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002186")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Narrator <>4__this;

			[Token(Token = "0x170004EA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600279D")]
				[Address(RVA = "0xB52028", Offset = "0xB52028", VA = "0xB52028", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004EB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600279F")]
				[Address(RVA = "0xB52098", Offset = "0xB52098", VA = "0xB52098", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600279A")]
			[Address(RVA = "0xB51E94", Offset = "0xB51E94", VA = "0xB51E94")]
			[DebuggerHidden]
			public <HideSubtitlesAfterSpeaking>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x600279B")]
			[Address(RVA = "0xB51F28", Offset = "0xB51F28", VA = "0xB51F28", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600279C")]
			[Address(RVA = "0xB51F2C", Offset = "0xB51F2C", VA = "0xB51F2C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600279E")]
			[Address(RVA = "0xB52030", Offset = "0xB52030", VA = "0xB52030", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001BD9")]
		[Address(RVA = "0xB51E20", Offset = "0xB51E20", VA = "0xB51E20", Slot = "7")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93D3B8", Offset = "0x93D3B8")]
		protected override IEnumerator HideSubtitlesAfterSpeaking()
		{
			return null;
		}

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0xB51EC0", Offset = "0xB51EC0", VA = "0xB51EC0", Slot = "9")]
		protected override void UpdateSubtitleRotation()
		{
		}

		[Token(Token = "0x6001BDB")]
		[Address(RVA = "0xB51EC4", Offset = "0xB51EC4", VA = "0xB51EC4")]
		public Narrator()
		{
		}
	}
	[Token(Token = "0x2000378")]
	public class PlayableCharacterVoice : AnimatedVoice
	{
		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Vector3 sm_defaultPosition;

		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly Vector3 sm_upsideDownPosition;

		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private PlayableCharacter m_character;

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0xB520A0", Offset = "0xB520A0", VA = "0xB520A0", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0xB52130", Offset = "0xB52130", VA = "0xB52130", Slot = "9")]
		protected override void UpdateSubtitleRotation()
		{
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0xB52550", Offset = "0xB52550", VA = "0xB52550")]
		public PlayableCharacterVoice()
		{
		}
	}
	[Token(Token = "0x2000379")]
	public class RandomVOPlayer : MonoBehaviour
	{
		[Token(Token = "0x20005E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927F80", Offset = "0x927F80")]
		private sealed class <PlayRandomLoop>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002187")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002188")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002189")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RandomVOPlayer <>4__this;

			[Token(Token = "0x170004EC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027A3")]
				[Address(RVA = "0xB52D48", Offset = "0xB52D48", VA = "0xB52D48", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004ED")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027A5")]
				[Address(RVA = "0xB52DB8", Offset = "0xB52DB8", VA = "0xB52DB8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027A0")]
			[Address(RVA = "0xB52A30", Offset = "0xB52A30", VA = "0xB52A30")]
			[DebuggerHidden]
			public <PlayRandomLoop>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60027A1")]
			[Address(RVA = "0xB52B00", Offset = "0xB52B00", VA = "0xB52B00", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027A2")]
			[Address(RVA = "0xB52B04", Offset = "0xB52B04", VA = "0xB52B04", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027A4")]
			[Address(RVA = "0xB52D50", Offset = "0xB52D50", VA = "0xB52D50", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private VOPlayOrderType m_playOrder;

		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Voice m_voice;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_initialWaitTime;

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private MathUtils.MinMax m_randomDelayBetweenVO;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<VoiceLine> m_voiceLines;

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IList<VoiceLine> m_linesCopy;

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int m_playIndex;

		[Token(Token = "0x6001BE0")]
		[Address(RVA = "0xB525F4", Offset = "0xB525F4", VA = "0xB525F4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001BE1")]
		[Address(RVA = "0xB525FC", Offset = "0xB525FC", VA = "0xB525FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0xB526B8", Offset = "0xB526B8", VA = "0xB526B8")]
		public void Stop(bool resetVoice)
		{
		}

		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0xB5270C", Offset = "0xB5270C", VA = "0xB5270C")]
		public void Play()
		{
		}

		[Token(Token = "0x6001BE4")]
		[Address(RVA = "0xB529BC", Offset = "0xB529BC", VA = "0xB529BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93D41C", Offset = "0x93D41C")]
		private IEnumerator PlayRandomLoop()
		{
			return null;
		}

		[Token(Token = "0x6001BE5")]
		[Address(RVA = "0xB5278C", Offset = "0xB5278C", VA = "0xB5278C")]
		private VoiceLine GetRandomLine()
		{
			return null;
		}

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0xB52600", Offset = "0xB52600", VA = "0xB52600")]
		private void ShuffleLines()
		{
		}

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0xB52A5C", Offset = "0xB52A5C", VA = "0xB52A5C")]
		public RandomVOPlayer()
		{
		}
	}
	[Token(Token = "0x200037A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x926F8C", Offset = "0x926F8C")]
	public class Voice : MonoBehaviour
	{
		[Token(Token = "0x20005EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927F90", Offset = "0x927F90")]
		private sealed class <SpeakLines>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400218A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400218B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400218C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public IList<CharacterVoiceLine> lines;

			[Token(Token = "0x400218D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Voice <>4__this;

			[Token(Token = "0x400218E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__2;

			[Token(Token = "0x170004EE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027A9")]
				[Address(RVA = "0xB53F08", Offset = "0xB53F08", VA = "0xB53F08", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004EF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027AB")]
				[Address(RVA = "0xB53F78", Offset = "0xB53F78", VA = "0xB53F78", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027A6")]
			[Address(RVA = "0xB534DC", Offset = "0xB534DC", VA = "0xB534DC")]
			[DebuggerHidden]
			public <SpeakLines>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x60027A7")]
			[Address(RVA = "0xB53CD4", Offset = "0xB53CD4", VA = "0xB53CD4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027A8")]
			[Address(RVA = "0xB53CD8", Offset = "0xB53CD8", VA = "0xB53CD8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027AA")]
			[Address(RVA = "0xB53F10", Offset = "0xB53F10", VA = "0xB53F10", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005EB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927FA0", Offset = "0x927FA0")]
		private sealed class <SpeakLine>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400218F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002190")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002191")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Voice <>4__this;

			[Token(Token = "0x4002192")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float delay;

			[Token(Token = "0x4002193")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public VoiceLine line;

			[Token(Token = "0x170004F0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027AF")]
				[Address(RVA = "0xB53C5C", Offset = "0xB53C5C", VA = "0xB53C5C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027B1")]
				[Address(RVA = "0xB53CCC", Offset = "0xB53CCC", VA = "0xB53CCC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027AC")]
			[Address(RVA = "0xB53508", Offset = "0xB53508", VA = "0xB53508")]
			[DebuggerHidden]
			public <SpeakLine>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x60027AD")]
			[Address(RVA = "0xB53AF0", Offset = "0xB53AF0", VA = "0xB53AF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027AE")]
			[Address(RVA = "0xB53AF4", Offset = "0xB53AF4", VA = "0xB53AF4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027B0")]
			[Address(RVA = "0xB53C64", Offset = "0xB53C64", VA = "0xB53C64", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20005EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927FB0", Offset = "0x927FB0")]
		private sealed class <HideSubtitlesAfterSpeaking>d__35 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002194")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002195")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002196")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Voice <>4__this;

			[Token(Token = "0x170004F2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027B5")]
				[Address(RVA = "0xB53A78", Offset = "0xB53A78", VA = "0xB53A78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027B7")]
				[Address(RVA = "0xB53AE8", Offset = "0xB53AE8", VA = "0xB53AE8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027B2")]
			[Address(RVA = "0xB535A8", Offset = "0xB535A8", VA = "0xB535A8")]
			[DebuggerHidden]
			public <HideSubtitlesAfterSpeaking>d__35(int <>1__state)
			{
			}

			[Token(Token = "0x60027B3")]
			[Address(RVA = "0xB539BC", Offset = "0xB539BC", VA = "0xB539BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027B4")]
			[Address(RVA = "0xB539C0", Offset = "0xB539C0", VA = "0xB539C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027B6")]
			[Address(RVA = "0xB53A80", Offset = "0xB53A80", VA = "0xB53A80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CharacterData m_characterData;

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected AudioSource m_audioSource;

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x934180", Offset = "0x934180")]
		[SerializeField]
		private bool m_overridePortrait;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Sprite[] m_overridePortraits;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private IntVariable m_portraitSelectionIndex;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9341EC", Offset = "0x9341EC")]
		[SerializeField]
		private bool m_enableUI;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform m_canvasTransform;

		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Localize m_subtitleLocalize;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Image m_subtitleImage;

		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float m_startSpatialBlend;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 m_subtitleDirection;

		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Coroutine m_speakCoroutine;

		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Vector3 sm_rotationAddon;

		[Token(Token = "0x17000346")]
		private bool AreSubtitlesEnabled
		{
			[Token(Token = "0x6001BE8")]
			[Address(RVA = "0xB52DC0", Offset = "0xB52DC0", VA = "0xB52DC0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000347")]
		public CharacterData CharacterData
		{
			[Token(Token = "0x6001BE9")]
			[Address(RVA = "0xB52EBC", Offset = "0xB52EBC", VA = "0xB52EBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000348")]
		public bool IsSpeaking
		{
			[Token(Token = "0x6001BEA")]
			[Address(RVA = "0xB51F98", Offset = "0xB51F98", VA = "0xB51F98")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000349")]
		public Sprite Portrait
		{
			[Token(Token = "0x6001BEB")]
			[Address(RVA = "0xB52EC4", Offset = "0xB52EC4", VA = "0xB52EC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0xB51238", Offset = "0xB51238", VA = "0xB51238", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0xB51D90", Offset = "0xB51D90", VA = "0xB51D90", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001BEE")]
		[Address(RVA = "0xB52FA8", Offset = "0xB52FA8", VA = "0xB52FA8")]
		public void TryHideSubtitles(bool forceHide)
		{
		}

		[Token(Token = "0x6001BEF")]
		[Address(RVA = "0xB51FA4", Offset = "0xB51FA4", VA = "0xB51FA4")]
		protected void DisableSubtitles()
		{
		}

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0xB517E4", Offset = "0xB517E4", VA = "0xB517E4", Slot = "6")]
		public virtual void StopTalking()
		{
		}

		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0xB530CC", Offset = "0xB530CC", VA = "0xB530CC")]
		public void SetSpatialBlend(float value)
		{
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0xB5310C", Offset = "0xB5310C", VA = "0xB5310C")]
		public void ResetSpatialBlend()
		{
		}

		[Token(Token = "0x6001BF3")]
		[Address(RVA = "0xB53098", Offset = "0xB53098", VA = "0xB53098")]
		public void TryCancelSpeakCoroutine()
		{
		}

		[Token(Token = "0x6001BF4")]
		[Address(RVA = "0xB5314C", Offset = "0xB5314C", VA = "0xB5314C")]
		public void TrySpeak(AudioClip clip)
		{
		}

		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0xB5320C", Offset = "0xB5320C", VA = "0xB5320C")]
		public void TrySpeak(AudioClip clip, string subtitles)
		{
		}

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0xB528E4", Offset = "0xB528E4", VA = "0xB528E4")]
		public void TrySpeak(VoiceLine data, float delay)
		{
		}

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0xB53350", Offset = "0xB53350", VA = "0xB53350")]
		public void TrySpeak(IList<CharacterVoiceLine> lines)
		{
		}

		[Token(Token = "0x6001BF8")]
		[Address(RVA = "0xB53444", Offset = "0xB53444", VA = "0xB53444")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93D480", Offset = "0x93D480")]
		private IEnumerator SpeakLines(IList<CharacterVoiceLine> lines)
		{
			return null;
		}

		[Token(Token = "0x6001BF9")]
		[Address(RVA = "0xB52C90", Offset = "0xB52C90", VA = "0xB52C90")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93D4E4", Offset = "0x93D4E4")]
		public IEnumerator SpeakLine(VoiceLine line, float delay)
		{
			return null;
		}

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0xB53534", Offset = "0xB53534", VA = "0xB53534", Slot = "7")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93D548", Offset = "0x93D548")]
		protected virtual IEnumerator HideSubtitlesAfterSpeaking()
		{
			return null;
		}

		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0xB51AEC", Offset = "0xB51AEC", VA = "0xB51AEC", Slot = "8")]
		protected virtual void Speak(AudioClip clip)
		{
		}

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0xB535D4", Offset = "0xB535D4", VA = "0xB535D4")]
		private void PlayAudioClip(AudioClip clip)
		{
		}

		[Token(Token = "0x6001BFD")]
		[Address(RVA = "0xB52318", Offset = "0xB52318", VA = "0xB52318", Slot = "9")]
		protected virtual void UpdateSubtitleRotation()
		{
		}

		[Token(Token = "0x6001BFE")]
		[Address(RVA = "0xB53758", Offset = "0xB53758", VA = "0xB53758")]
		private void ShowSubtitles(VoiceLine line)
		{
		}

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0xB532D4", Offset = "0xB532D4", VA = "0xB532D4")]
		private void EnableSubtitles(string subtitle)
		{
		}

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0xB51BA8", Offset = "0xB51BA8", VA = "0xB51BA8")]
		public Voice()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200037B")]
	public class VoiceLine
	{
		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioClip Clip;

		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite SubtitleImage;

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Subtitles;

		[Token(Token = "0x1700034A")]
		public string Subtitle
		{
			[Token(Token = "0x6001C02")]
			[Address(RVA = "0xB53858", Offset = "0xB53858", VA = "0xB53858")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001C03")]
		[Address(RVA = "0xB53F80", Offset = "0xB53F80", VA = "0xB53F80")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x93D5AC", Offset = "0x93D5AC")]
		public void OnAudioClipChanged()
		{
		}

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0xB51C10", Offset = "0xB51C10", VA = "0xB51C10")]
		public VoiceLine()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200037C")]
	public class CharacterVoiceLine : VoiceLine
	{
		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public CharacterData Character;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float Delay;

		[Token(Token = "0x6001C05")]
		[Address(RVA = "0xB51C08", Offset = "0xB51C08", VA = "0xB51C08")]
		public CharacterVoiceLine()
		{
		}
	}
	[Token(Token = "0x200037D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x926FF0", Offset = "0x926FF0")]
	public class VoiceLineCollection : ScriptableObject
	{
		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CharacterVoiceLine[] VoiceLines;

		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IDictionary<CharacterData, IList<CharacterVoiceLine>> m_characterLines;

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0xB53F84", Offset = "0xB53F84", VA = "0xB53F84")]
		public bool CanGetCharacterLines(CharacterData characterData, out IList<CharacterVoiceLine> lines)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C07")]
		[Address(RVA = "0xB54434", Offset = "0xB54434", VA = "0xB54434")]
		public CharacterVoiceLine GetRandomVoiceLine()
		{
			return null;
		}

		[Token(Token = "0x6001C08")]
		[Address(RVA = "0xB544A8", Offset = "0xB544A8", VA = "0xB544A8")]
		public void Play()
		{
		}

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0xB54598", Offset = "0xB54598", VA = "0xB54598")]
		public VoiceLineCollection()
		{
		}
	}
}
namespace Cortopia.Scripts.Interactions
{
	[Token(Token = "0x200037E")]
	public class ClothTrigger : RoomBehaviour
	{
		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private TriggerEnterType m_triggerType;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_resetClothConfig;

		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private ClothConfig m_clothConfig;

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0xB304E4", Offset = "0xB304E4", VA = "0xB304E4", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0xB304E8", Offset = "0xB304E8", VA = "0xB304E8")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6001C0C")]
		[Address(RVA = "0xB307A8", Offset = "0xB307A8", VA = "0xB307A8")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6001C0D")]
		[Address(RVA = "0xB306B4", Offset = "0xB306B4", VA = "0xB306B4")]
		public void TriggerCloth(ClothController clothController)
		{
		}

		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0xB30968", Offset = "0xB30968", VA = "0xB30968")]
		public ClothTrigger()
		{
		}
	}
	[Token(Token = "0x200037F")]
	public class BabyRabbitInteractable : PointerInteractable, IInteractable
	{
		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x934298", Offset = "0x934298")]
		[SerializeField]
		private BabyRabbitControl m_babyRabbitControl;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 m_pokeDirection;

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0xB301BC", Offset = "0xB301BC", VA = "0xB301BC")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6001C10")]
		[Address(RVA = "0xB302E4", Offset = "0xB302E4", VA = "0xB302E4", Slot = "6")]
		public override void Interact()
		{
		}

		[Token(Token = "0x6001C11")]
		[Address(RVA = "0xB3039C", Offset = "0xB3039C", VA = "0xB3039C", Slot = "8")]
		public override void OnEnter(PlayerPointer pointer)
		{
		}

		[Token(Token = "0x6001C12")]
		[Address(RVA = "0xB304D8", Offset = "0xB304D8", VA = "0xB304D8", Slot = "9")]
		public override void OnExit(PlayerPointer pointer)
		{
		}

		[Token(Token = "0x6001C13")]
		[Address(RVA = "0xB3028C", Offset = "0xB3028C", VA = "0xB3028C")]
		private void PokeRabbit(Vector3 pokeDirection)
		{
		}

		[Token(Token = "0x6001C14")]
		[Address(RVA = "0xB304DC", Offset = "0xB304DC", VA = "0xB304DC")]
		public BabyRabbitInteractable()
		{
		}
	}
	[Token(Token = "0x2000380")]
	public abstract class CharacterInteractable<TEvent, TParam> : RoomBehaviour, ICharacterInteractable, IHighlightableInteractable, IInteractable where TEvent : UnityEvent<TParam>
	{
		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private Transform m_highlightPoint;

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9342F4", Offset = "0x9342F4")]
		private bool m_isMovable;

		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected TEvent m_onInteract;

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected List<Collider> m_colliders;

		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected ISet<Character> m_presentCharacters;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x934360", Offset = "0x934360")]
		private bool <IsNew>k__BackingField;

		[Token(Token = "0x1700034B")]
		public Transform HighlightPoint
		{
			[Token(Token = "0x6001C15")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034C")]
		public virtual string LocalizedTerm
		{
			[Token(Token = "0x6001C16")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700034D")]
		public bool IsMovable
		{
			[Token(Token = "0x6001C17")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700034E")]
		public bool IsNew
		{
			[Token(Token = "0x6001C18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D5E4", Offset = "0x93D5E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C19")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D5F4", Offset = "0x93D5F4")]
			protected set
			{
			}
		}

		[Token(Token = "0x6001C1A")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6001C1B")]
		public abstract void Interact();

		[Token(Token = "0x6001C1C")]
		public virtual void SetInteractableActive(bool active)
		{
		}

		[Token(Token = "0x6001C1D")]
		public bool IsCharacterPresentAndActive(Character character)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C1E")]
		public void OnCharacterEnter(Character characterControl)
		{
		}

		[Token(Token = "0x6001C1F")]
		public void OnCharacterExit(Character characterControl)
		{
		}

		[Token(Token = "0x6001C20")]
		protected virtual void EnableInteractable()
		{
		}

		[Token(Token = "0x6001C21")]
		protected virtual void DisableInteractable()
		{
		}

		[Token(Token = "0x6001C22")]
		protected CharacterInteractable()
		{
		}
	}
	[Token(Token = "0x2000381")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x927060", Offset = "0x927060")]
	public class Door : InteractableObject
	{
		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private PlayableCharacterEvent m_onDoorOpenInteract;

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x934380", Offset = "0x934380")]
		[SerializeField]
		private CharacterType m_characterTarget;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9343CC", Offset = "0x9343CC")]
		[SerializeField]
		private VoiceLineCollection m_interactionFailedResponse;

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private TriggerEnterType m_triggerEnterType;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private PlayableCharacterEvent m_onTransitionTriggered;

		[Token(Token = "0x6001C23")]
		[Address(RVA = "0xB30978", Offset = "0xB30978", VA = "0xB30978")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C24")]
		[Address(RVA = "0xB309E0", Offset = "0xB309E0", VA = "0xB309E0", Slot = "19")]
		public override void Interact(PlayableCharacter characterControl)
		{
		}

		[Token(Token = "0x6001C25")]
		[Address(RVA = "0xB30980", Offset = "0xB30980", VA = "0xB30980")]
		public void SetDoorOpened(bool isOpen)
		{
		}

		[Token(Token = "0x6001C26")]
		[Address(RVA = "0xB30C44", Offset = "0xB30C44", VA = "0xB30C44")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6001C27")]
		[Address(RVA = "0xB30E74", Offset = "0xB30E74", VA = "0xB30E74")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6001C28")]
		[Address(RVA = "0xB30E04", Offset = "0xB30E04", VA = "0xB30E04")]
		private void TriggerTransition(PlayableCharacter characterControl)
		{
		}

		[Token(Token = "0x6001C29")]
		[Address(RVA = "0xB30B68", Offset = "0xB30B68", VA = "0xB30B68")]
		private void TryPlayInteractionFailed(CharacterData character, Voice voice)
		{
		}

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0xB31034", Offset = "0xB31034", VA = "0xB31034")]
		public Door()
		{
		}
	}
	[Token(Token = "0x2000382")]
	public class Elevator : RoomBehaviour
	{
		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x934438", Offset = "0x934438")]
		[SerializeField]
		private ElevatorDestination[] m_elevatorDestinations;

		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x934484", Offset = "0x934484")]
		[SerializeField]
		private Vector3 m_platformSize;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform m_elevatorPlatform;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private BoxCollider m_collider;

		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9344F0", Offset = "0x9344F0")]
		[SerializeField]
		private AnimationCurve m_accelerationCurve;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x93453C", Offset = "0x93453C")]
		private float m_autoPilotThreshold;

		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_nextBaseLocation;

		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_currentBaseLocation;

		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float m_currentProgress;

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_lerpDirection;

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_autoPilotDirection;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_currentSpeed;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_isAtDestination;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		private bool m_charactersLocked;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private LayerMask m_layerMask;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private IList<PlayableCharacter> m_charactersOnElevator;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Collider[] sm_SampleColliders;

		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0xB310CC", Offset = "0xB310CC", VA = "0xB310CC", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0xB31544", Offset = "0xB31544", VA = "0xB31544")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0xB31C9C", Offset = "0xB31C9C", VA = "0xB31C9C")]
		public void SetElevatorSpeed(float speed)
		{
		}

		[Token(Token = "0x6001C2E")]
		[Address(RVA = "0xB315D4", Offset = "0xB315D4", VA = "0xB315D4")]
		private bool HasValidTargetLocation(int baseLocation, float direction)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C2F")]
		[Address(RVA = "0xB324AC", Offset = "0xB324AC", VA = "0xB324AC")]
		private void LocationReached(int targetLocation)
		{
		}

		[Token(Token = "0x6001C30")]
		[Address(RVA = "0xB31670", Offset = "0xB31670", VA = "0xB31670")]
		private void MovePlatform(float speed)
		{
		}

		[Token(Token = "0x6001C31")]
		[Address(RVA = "0xB318F4", Offset = "0xB318F4", VA = "0xB318F4")]
		private void AutoFinishMovePlatform()
		{
		}

		[Token(Token = "0x6001C32")]
		[Address(RVA = "0xB31490", Offset = "0xB31490", VA = "0xB31490")]
		private void ActivateNavObstacleExclusivly(int elevatorDestination)
		{
		}

		[Token(Token = "0x6001C33")]
		[Address(RVA = "0xB32400", Offset = "0xB32400", VA = "0xB32400")]
		private void ActivateAllNavObstacles()
		{
		}

		[Token(Token = "0x6001C34")]
		[Address(RVA = "0xB31CA4", Offset = "0xB31CA4", VA = "0xB31CA4")]
		private void AttachCharactersToElevator()
		{
		}

		[Token(Token = "0x6001C35")]
		[Address(RVA = "0xB31930", Offset = "0xB31930", VA = "0xB31930")]
		private void DetachCharactersToElevator()
		{
		}

		[Token(Token = "0x6001C36")]
		[Address(RVA = "0xB324C0", Offset = "0xB324C0", VA = "0xB324C0")]
		public Elevator()
		{
		}
	}
	[Token(Token = "0x2000383")]
	public class EventTrigger : RoomBehaviour
	{
		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private TriggerEnterType m_triggerEnterType;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x93458C", Offset = "0x93458C")]
		private float m_directionThreshold;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PlayableCharacterEvent m_onTriggered;

		[Token(Token = "0x6001C38")]
		[Address(RVA = "0xB32608", Offset = "0xB32608", VA = "0xB32608", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0xB3260C", Offset = "0xB3260C", VA = "0xB3260C")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6001C3A")]
		[Address(RVA = "0xB32878", Offset = "0xB32878", VA = "0xB32878")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0xB327D0", Offset = "0xB327D0", VA = "0xB327D0")]
		private void TriggerEvent(PlayableCharacter characterControl)
		{
		}

		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0xB32A3C", Offset = "0xB32A3C", VA = "0xB32A3C")]
		public EventTrigger()
		{
		}
	}
	[Token(Token = "0x2000384")]
	public class Firefly : MonoBehaviour
	{
		[Token(Token = "0x20005ED")]
		private enum EmitterType
		{
			[Token(Token = "0x4002198")]
			Base,
			[Token(Token = "0x4002199")]
			SparkDefault,
			[Token(Token = "0x400219A")]
			Bling,
			[Token(Token = "0x400219B")]
			SparkAlternate,
			[Token(Token = "0x400219C")]
			Rings
		}

		[Token(Token = "0x20005EE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927FC0", Offset = "0x927FC0")]
		private sealed class <DisableAfterStopEmitting>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400219D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400219E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400219F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Firefly <>4__this;

			[Token(Token = "0x170004F4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027BB")]
				[Address(RVA = "0xB33740", Offset = "0xB33740", VA = "0xB33740", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027BD")]
				[Address(RVA = "0xB337B0", Offset = "0xB337B0", VA = "0xB337B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027B8")]
			[Address(RVA = "0xB33590", Offset = "0xB33590", VA = "0xB33590")]
			[DebuggerHidden]
			public <DisableAfterStopEmitting>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x60027B9")]
			[Address(RVA = "0xB3361C", Offset = "0xB3361C", VA = "0xB3361C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027BA")]
			[Address(RVA = "0xB33620", Offset = "0xB33620", VA = "0xB33620", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027BC")]
			[Address(RVA = "0xB33748", Offset = "0xB33748", VA = "0xB33748", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private HandHint m_handHint;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9345EC", Offset = "0x9345EC")]
		[SerializeField]
		private Animator m_effectAnimator;

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ParticleSystem m_interactFx;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ParticleSystem[] m_emitters;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_updatePosition;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool m_isDisabling;

		[Token(Token = "0x400157A")]
		private const float MoveSpeed = 4f;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x934658", Offset = "0x934658")]
		private IHighlightableInteractable <Interactable>k__BackingField;

		[Token(Token = "0x1700034F")]
		public IHighlightableInteractable Interactable
		{
			[Token(Token = "0x6001C3D")]
			[Address(RVA = "0xB32AAC", Offset = "0xB32AAC", VA = "0xB32AAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D604", Offset = "0x93D604")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C3E")]
			[Address(RVA = "0xB32AB4", Offset = "0xB32AB4", VA = "0xB32AB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D614", Offset = "0x93D614")]
			private set
			{
			}
		}

		[Token(Token = "0x17000350")]
		public bool IsAvailable
		{
			[Token(Token = "0x6001C3F")]
			[Address(RVA = "0xB32ABC", Offset = "0xB32ABC", VA = "0xB32ABC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001C40")]
		[Address(RVA = "0xB32ADC", Offset = "0xB32ADC", VA = "0xB32ADC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0xB32C58", Offset = "0xB32C58", VA = "0xB32C58")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0xB32C94", Offset = "0xB32C94", VA = "0xB32C94")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0xB32D30", Offset = "0xB32D30", VA = "0xB32D30")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0xB32F04", Offset = "0xB32F04", VA = "0xB32F04")]
		public void Interact()
		{
		}

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0xB33184", Offset = "0xB33184", VA = "0xB33184")]
		public void EnableFirefly(IHighlightableInteractable interactable)
		{
		}

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0xB334B0", Offset = "0xB334B0", VA = "0xB334B0")]
		public void DisableFireflyEmitters()
		{
		}

		[Token(Token = "0x6001C47")]
		[Address(RVA = "0xB32CCC", Offset = "0xB32CCC", VA = "0xB32CCC")]
		public void DisableFirefly()
		{
		}

		[Token(Token = "0x6001C48")]
		[Address(RVA = "0xB32D40", Offset = "0xB32D40", VA = "0xB32D40")]
		private void FollowInteractable()
		{
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0xB33154", Offset = "0xB33154", VA = "0xB33154")]
		private void PlayInteractFx()
		{
		}

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0xB32BA8", Offset = "0xB32BA8", VA = "0xB32BA8")]
		private void SetAnimatorActive(bool active)
		{
		}

		[Token(Token = "0x6001C4B")]
		[Address(RVA = "0xB32B08", Offset = "0xB32B08", VA = "0xB32B08")]
		private void SetEmittersActive(bool active)
		{
		}

		[Token(Token = "0x6001C4C")]
		[Address(RVA = "0xB3351C", Offset = "0xB3351C", VA = "0xB3351C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93D624", Offset = "0x93D624")]
		private IEnumerator DisableAfterStopEmitting()
		{
			return null;
		}

		[Token(Token = "0x6001C4D")]
		[Address(RVA = "0xB33000", Offset = "0xB33000", VA = "0xB33000")]
		private void SetAlternateEmittersActive(bool isNew)
		{
		}

		[Token(Token = "0x6001C4E")]
		[Address(RVA = "0xB335BC", Offset = "0xB335BC", VA = "0xB335BC")]
		public Firefly()
		{
		}
	}
	[Token(Token = "0x2000385")]
	public class FireflyPointerInteractable : PointerInteractable, IHighlightableInteractable, IInteractable, IIdentifiableSavable, ISavable
	{
		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		[HideInInspector]
		private string m_guid;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9346A0", Offset = "0x9346A0")]
		[SerializeField]
		private bool m_skipInteractEffect;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		[SerializeField]
		private bool m_toggleHandHintWithInteractableState;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private float m_customHintTime;

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Transform m_highlightPoint;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private bool m_isMovable;

		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private InteractableSaveData m_saveData;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93472C", Offset = "0x93472C")]
		private bool <IsNew>k__BackingField;

		[Token(Token = "0x17000351")]
		public Transform HighlightPoint
		{
			[Token(Token = "0x6001C4F")]
			[Address(RVA = "0xB337B8", Offset = "0xB337B8", VA = "0xB337B8", Slot = "12")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000352")]
		public bool IsMovable
		{
			[Token(Token = "0x6001C50")]
			[Address(RVA = "0xB33848", Offset = "0xB33848", VA = "0xB33848", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000353")]
		public bool IsNew
		{
			[Token(Token = "0x6001C51")]
			[Address(RVA = "0xB33850", Offset = "0xB33850", VA = "0xB33850", Slot = "14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D688", Offset = "0x93D688")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C52")]
			[Address(RVA = "0xB33858", Offset = "0xB33858", VA = "0xB33858")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D698", Offset = "0x93D698")]
			private set
			{
			}
		}

		[Token(Token = "0x17000354")]
		public string Guid
		{
			[Token(Token = "0x6001C53")]
			[Address(RVA = "0xB33864", Offset = "0xB33864", VA = "0xB33864", Slot = "15")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C54")]
			[Address(RVA = "0xB3386C", Offset = "0xB3386C", VA = "0xB3386C", Slot = "16")]
			set
			{
			}
		}

		[Token(Token = "0x6001C55")]
		[Address(RVA = "0xB33874", Offset = "0xB33874", VA = "0xB33874", Slot = "17")]
		public void Serialize(IWriteSave save)
		{
		}

		[Token(Token = "0x6001C56")]
		[Address(RVA = "0xB339B0", Offset = "0xB339B0", VA = "0xB339B0", Slot = "18")]
		public void Deserialize(IReadSave save)
		{
		}

		[Token(Token = "0x6001C57")]
		[Address(RVA = "0xB33B8C", Offset = "0xB33B8C", VA = "0xB33B8C", Slot = "6")]
		public override void Interact()
		{
		}

		[Token(Token = "0x6001C58")]
		[Address(RVA = "0xB33C30", Offset = "0xB33C30", VA = "0xB33C30")]
		public void MirrorInteraction(bool disableInteraction)
		{
		}

		[Token(Token = "0x6001C59")]
		[Address(RVA = "0xB33CD8", Offset = "0xB33CD8", VA = "0xB33CD8", Slot = "7")]
		public override void SetInteractableActive(bool active)
		{
		}

		[Token(Token = "0x6001C5A")]
		[Address(RVA = "0xB33CF8", Offset = "0xB33CF8", VA = "0xB33CF8")]
		public void SetHighlightActive(bool active)
		{
		}

		[Token(Token = "0x6001C5B")]
		[Address(RVA = "0xB33AF4", Offset = "0xB33AF4", VA = "0xB33AF4")]
		private InteractableSaveData GetDefaultSaveData()
		{
			return null;
		}

		[Token(Token = "0x6001C5C")]
		[Address(RVA = "0xB33DE0", Offset = "0xB33DE0", VA = "0xB33DE0")]
		public FireflyPointerInteractable()
		{
		}
	}
	[Token(Token = "0x2000386")]
	public class HandHint : MonoBehaviour
	{
		[Token(Token = "0x4001584")]
		public const float DefaultHintTime = 5f;

		[Token(Token = "0x4001585")]
		public const float DisableHintTime = 2f;

		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly int m_isEnabledParameter;

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioSource m_handAppearSfx;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ParticleSystem[] m_vfxObject;

		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_hintTime;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_elapsedTime;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_isTimerActive;

		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool m_isActive;

		[Token(Token = "0x17000355")]
		public bool IsActiveOrPendingActive
		{
			[Token(Token = "0x6001C5D")]
			[Address(RVA = "0xADCB24", Offset = "0xADCB24", VA = "0xADCB24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001C5E")]
		[Address(RVA = "0xADCB44", Offset = "0xADCB44", VA = "0xADCB44")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001C5F")]
		[Address(RVA = "0xADCC40", Offset = "0xADCC40", VA = "0xADCC40")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C60")]
		[Address(RVA = "0xADCE0C", Offset = "0xADCE0C", VA = "0xADCE0C")]
		public void InitilizeHintTimer()
		{
		}

		[Token(Token = "0x6001C61")]
		[Address(RVA = "0xADCE20", Offset = "0xADCE20", VA = "0xADCE20")]
		public void InitilizeHintTimer(float hintTime)
		{
		}

		[Token(Token = "0x6001C62")]
		[Address(RVA = "0xADCB84", Offset = "0xADCB84", VA = "0xADCB84")]
		public void DisableHint(bool fadeOut)
		{
		}

		[Token(Token = "0x6001C63")]
		[Address(RVA = "0xADCD10", Offset = "0xADCD10", VA = "0xADCD10")]
		private void EnableHint(bool fadeIn)
		{
		}

		[Token(Token = "0x6001C64")]
		[Address(RVA = "0xADCE34", Offset = "0xADCE34", VA = "0xADCE34")]
		public HandHint()
		{
		}
	}
	[Token(Token = "0x2000387")]
	public class HighlightTrigger : MonoBehaviour, IIdentifiableSavable, ISavable
	{
		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string m_guid;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private InteractableObject m_interactable;

		[Token(Token = "0x17000356")]
		public string Guid
		{
			[Token(Token = "0x6001C65")]
			[Address(RVA = "0xADCEAC", Offset = "0xADCEAC", VA = "0xADCEAC", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C66")]
			[Address(RVA = "0xADCEB4", Offset = "0xADCEB4", VA = "0xADCEB4", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001C67")]
		[Address(RVA = "0xADCEBC", Offset = "0xADCEBC", VA = "0xADCEBC", Slot = "6")]
		public void Serialize(IWriteSave save)
		{
		}

		[Token(Token = "0x6001C68")]
		[Address(RVA = "0xADD04C", Offset = "0xADD04C", VA = "0xADD04C", Slot = "7")]
		public void Deserialize(IReadSave save)
		{
		}

		[Token(Token = "0x6001C69")]
		[Address(RVA = "0xADD2A0", Offset = "0xADD2A0", VA = "0xADD2A0")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0xADD36C", Offset = "0xADD36C", VA = "0xADD36C")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0xADD438", Offset = "0xADD438", VA = "0xADD438")]
		public HighlightTrigger()
		{
		}
	}
	[Token(Token = "0x2000388")]
	public interface IInteractable
	{
		[Token(Token = "0x6001C6C")]
		void Interact();

		[Token(Token = "0x6001C6D")]
		void SetInteractableActive(bool active);
	}
	[Token(Token = "0x2000389")]
	public interface IHighlightableInteractable : IInteractable
	{
		[Token(Token = "0x17000357")]
		Transform HighlightPoint
		{
			[Token(Token = "0x6001C6E")]
			get;
		}

		[Token(Token = "0x17000358")]
		bool IsMovable
		{
			[Token(Token = "0x6001C6F")]
			get;
		}

		[Token(Token = "0x17000359")]
		bool IsNew
		{
			[Token(Token = "0x6001C70")]
			get;
		}
	}
	[Token(Token = "0x200038A")]
	public interface ICharacterInteractable : IHighlightableInteractable, IInteractable
	{
		[Token(Token = "0x1700035A")]
		string LocalizedTerm
		{
			[Token(Token = "0x6001C71")]
			get;
		}

		[Token(Token = "0x6001C72")]
		bool IsCharacterPresentAndActive(Character character);
	}
	[Token(Token = "0x200038B")]
	public class InteractableObject : CharacterInteractable<PlayableCharacterEvent, PlayableCharacter>, ICharacterInteractable, IHighlightableInteractable, IInteractable
	{
		[Token(Token = "0x20005EF")]
		private enum CharacterPresenceStatus
		{
			[Token(Token = "0x40021A1")]
			NoneAvailable,
			[Token(Token = "0x40021A2")]
			OtherCharacterPresent,
			[Token(Token = "0x40021A3")]
			CharacterCanInteract,
			[Token(Token = "0x40021A4")]
			CharacterIsPresent
		}

		[Token(Token = "0x20005F0")]
		private enum PickUpState
		{
			[Token(Token = "0x40021A6")]
			None,
			[Token(Token = "0x40021A7")]
			AutoPickup,
			[Token(Token = "0x40021A8")]
			DisableMesh
		}

		[Token(Token = "0x4001590")]
		private const float MinAcceptableDistanceToInteractable = 0.015f;

		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x93478C", Offset = "0x93478C")]
		[SerializeField]
		private LocalizationTerm m_localizationTerm;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Transform m_interactPoint;

		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private bool m_shouldLookAtObjectOnInteract;

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private InteractionType m_interactionType;

		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x934808", Offset = "0x934808")]
		[SerializeField]
		private PickUpAnimationType m_pickUpHeight;

		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private PickUpState m_pickUpState;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private InventoryItem m_pickupItem;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject m_pickupObject;

		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x934884", Offset = "0x934884")]
		[SerializeField]
		protected UsableVariableType m_activeControlType;

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[SerializeField]
		protected bool m_isInteractable;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		protected BoolVariable m_isInteractableGlobal;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private bool m_reverseCompareGlobalVariable;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		protected bool m_isListeningToGlobalBool;

		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		protected bool m_hasPendingInteraction;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private InteractableSaveData m_saveData;

		[Token(Token = "0x1700035B")]
		public override string LocalizedTerm
		{
			[Token(Token = "0x6001C73")]
			[Address(RVA = "0xADD440", Offset = "0xADD440", VA = "0xADD440", Slot = "13")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035C")]
		public Transform InteractPosition
		{
			[Token(Token = "0x6001C74")]
			[Address(RVA = "0xADD4EC", Offset = "0xADD4EC", VA = "0xADD4EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700035D")]
		public InteractionType InteractionType
		{
			[Token(Token = "0x6001C75")]
			[Address(RVA = "0xADD57C", Offset = "0xADD57C", VA = "0xADD57C")]
			get
			{
				return default(InteractionType);
			}
		}

		[Token(Token = "0x1700035E")]
		public bool ShouldLookAtObjectOnInteract
		{
			[Token(Token = "0x6001C76")]
			[Address(RVA = "0xADD584", Offset = "0xADD584", VA = "0xADD584")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001C77")]
		[Address(RVA = "0xADD58C", Offset = "0xADD58C", VA = "0xADD58C", Slot = "18")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001C78")]
		[Address(RVA = "0xADD640", Offset = "0xADD640", VA = "0xADD640", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6001C79")]
		[Address(RVA = "0xADD644", Offset = "0xADD644", VA = "0xADD644", Slot = "14")]
		public override void Interact()
		{
		}

		[Token(Token = "0x6001C7A")]
		[Address(RVA = "0xADDB34", Offset = "0xADDB34", VA = "0xADDB34", Slot = "19")]
		public virtual void Interact(PlayableCharacter character)
		{
		}

		[Token(Token = "0x6001C7B")]
		[Address(RVA = "0xADCFB8", Offset = "0xADCFB8", VA = "0xADCFB8")]
		public InteractableSaveData Save()
		{
			return null;
		}

		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0xADD170", Offset = "0xADD170", VA = "0xADD170")]
		public void Load(InteractableSaveData saveData)
		{
		}

		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0xADDD34", Offset = "0xADDD34", VA = "0xADDD34", Slot = "16")]
		protected override void EnableInteractable()
		{
		}

		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0xADDD90", Offset = "0xADDD90", VA = "0xADDD90", Slot = "17")]
		protected override void DisableInteractable()
		{
		}

		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0xADDCA8", Offset = "0xADDCA8", VA = "0xADDCA8")]
		protected void OnInteractableStateChanged()
		{
		}

		[Token(Token = "0x6001C80")]
		[Address(RVA = "0xADDE54", Offset = "0xADDE54", VA = "0xADDE54")]
		private void OnPickupAnimationComplete()
		{
		}

		[Token(Token = "0x6001C81")]
		[Address(RVA = "0xADD86C", Offset = "0xADD86C", VA = "0xADD86C")]
		private CharacterPresenceStatus GetCharacterPresenceStatus(PlayableCharacter characterControl)
		{
			return default(CharacterPresenceStatus);
		}

		[Token(Token = "0x6001C82")]
		[Address(RVA = "0xADDED0", Offset = "0xADDED0", VA = "0xADDED0")]
		private bool HidePickupItem()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C83")]
		[Address(RVA = "0xADDEF4", Offset = "0xADDEF4", VA = "0xADDEF4")]
		private bool HidePickupObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C84")]
		[Address(RVA = "0xADDF18", Offset = "0xADDF18", VA = "0xADDF18")]
		public InteractableObject()
		{
		}

		[Token(Token = "0x6001C85")]
		[Address(RVA = "0xADDF98", Offset = "0xADDF98", VA = "0xADDF98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D6A8", Offset = "0x93D6A8")]
		private void <Interact>b__28_0(bool success)
		{
		}
	}
	[Token(Token = "0x200038C")]
	public class InteractableTrigger : InteractableObject
	{
		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x934900", Offset = "0x934900")]
		[SerializeField]
		private TriggerEnterType m_triggerEnterType;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private PlayableCharacterEvent m_onCharacterTriggered;

		[Token(Token = "0x6001C86")]
		[Address(RVA = "0xADDFA0", Offset = "0xADDFA0", VA = "0xADDFA0", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6001C87")]
		[Address(RVA = "0xADE078", Offset = "0xADE078", VA = "0xADE078")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6001C88")]
		[Address(RVA = "0xADE320", Offset = "0xADE320", VA = "0xADE320")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6001C89")]
		[Address(RVA = "0xADE138", Offset = "0xADE138", VA = "0xADE138")]
		private void TriggerInteractable(PlayableCharacter characterControl)
		{
		}

		[Token(Token = "0x6001C8A")]
		[Address(RVA = "0xADE3E0", Offset = "0xADE3E0", VA = "0xADE3E0")]
		public InteractableTrigger()
		{
		}
	}
	[Token(Token = "0x200038D")]
	public struct PendingHighlight
	{
		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93495C", Offset = "0x93495C")]
		private ICharacterInteractable <Interactable>k__BackingField;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93496C", Offset = "0x93496C")]
		private bool <IsPending>k__BackingField;

		[Token(Token = "0x1700035F")]
		public ICharacterInteractable Interactable
		{
			[Token(Token = "0x6001C8C")]
			[Address(RVA = "0x9CC97C", Offset = "0x9CC97C", VA = "0x9CC97C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D6B8", Offset = "0x93D6B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C8D")]
			[Address(RVA = "0x9CC984", Offset = "0x9CC984", VA = "0x9CC984")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D6C8", Offset = "0x93D6C8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000360")]
		public bool IsPending
		{
			[Token(Token = "0x6001C8E")]
			[Address(RVA = "0x9CC98C", Offset = "0x9CC98C", VA = "0x9CC98C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D6D8", Offset = "0x93D6D8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001C8F")]
			[Address(RVA = "0x9CC994", Offset = "0x9CC994", VA = "0x9CC994")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D6E8", Offset = "0x93D6E8")]
			set
			{
			}
		}

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0x9CC96C", Offset = "0x9CC96C", VA = "0x9CC96C")]
		public PendingHighlight(ICharacterInteractable interactable)
		{
		}
	}
	[Token(Token = "0x200038E")]
	public class InteractionHighlight : MonoBehaviour
	{
		[Token(Token = "0x20005F1")]
		private enum UpdateState
		{
			[Token(Token = "0x40021AA")]
			None,
			[Token(Token = "0x40021AB")]
			Rotation,
			[Token(Token = "0x40021AC")]
			RotationAndPosition
		}

		[Token(Token = "0x40015A4")]
		private const float MoveSpeed = 0.5f;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Color m_defaultTextColor;

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Color m_isNewTextColor;

		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_tweenTime;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x93498C", Offset = "0x93498C")]
		[SerializeField]
		private Image m_interactButtonImage;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private GameObject m_messageGroupObject;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TextMeshProUGUI m_interactText;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Localize m_interactMessage;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private UpdateState m_updateState;

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 m_velocity;

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 m_lookDirection;

		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Tweener m_scaleTween;

		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private PendingHighlight m_pendingHighlight;

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x934A08", Offset = "0x934A08")]
		private IHighlightableInteractable <Interactable>k__BackingField;

		[Token(Token = "0x17000361")]
		public bool IsActive
		{
			[Token(Token = "0x6001C90")]
			[Address(RVA = "0xADE44C", Offset = "0xADE44C", VA = "0xADE44C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000362")]
		public IHighlightableInteractable Interactable
		{
			[Token(Token = "0x6001C91")]
			[Address(RVA = "0xADE480", Offset = "0xADE480", VA = "0xADE480")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D6F8", Offset = "0x93D6F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001C92")]
			[Address(RVA = "0xADE488", Offset = "0xADE488", VA = "0xADE488")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D708", Offset = "0x93D708")]
			private set
			{
			}
		}

		[Token(Token = "0x6001C93")]
		[Address(RVA = "0xADE490", Offset = "0xADE490", VA = "0xADE490")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C94")]
		[Address(RVA = "0xADE4B0", Offset = "0xADE4B0", VA = "0xADE4B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C95")]
		[Address(RVA = "0xADED20", Offset = "0xADED20", VA = "0xADED20")]
		public void SetInteractIcon(Sprite sprite)
		{
		}

		[Token(Token = "0x6001C96")]
		[Address(RVA = "0xADED58", Offset = "0xADED58", VA = "0xADED58")]
		public void Interact()
		{
		}

		[Token(Token = "0x6001C97")]
		[Address(RVA = "0xADEE10", Offset = "0xADEE10", VA = "0xADEE10")]
		public void EnableHighlight(ICharacterInteractable interactable)
		{
		}

		[Token(Token = "0x6001C98")]
		[Address(RVA = "0xADE520", Offset = "0xADE520", VA = "0xADE520")]
		public void ShowPendingHighlight(ICharacterInteractable interactable)
		{
		}

		[Token(Token = "0x6001C99")]
		[Address(RVA = "0xADF080", Offset = "0xADF080", VA = "0xADF080")]
		public void DisableHighlight()
		{
		}

		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0xADEE2C", Offset = "0xADEE2C", VA = "0xADEE2C")]
		private void ShowHighlight()
		{
		}

		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0xADF08C", Offset = "0xADF08C", VA = "0xADF08C")]
		private void HideHighlight()
		{
		}

		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0xADE988", Offset = "0xADE988", VA = "0xADE988")]
		private void LookAtPlayer()
		{
		}

		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0xADEB6C", Offset = "0xADEB6C", VA = "0xADEB6C")]
		private void FollowInteractable()
		{
		}

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0xADEF88", Offset = "0xADEF88", VA = "0xADEF88")]
		private bool TrySetTerm(string term)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0xADF230", Offset = "0xADF230", VA = "0xADF230")]
		public InteractionHighlight()
		{
		}

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0xADF27C", Offset = "0xADF27C", VA = "0xADF27C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D718", Offset = "0x93D718")]
		private void <HideHighlight>b__28_0()
		{
		}
	}
	[Token(Token = "0x200038F")]
	public enum InteractionType
	{
		[Token(Token = "0x40015B3")]
		Default = 0,
		[Token(Token = "0x40015B4")]
		Pickup = 1,
		[Token(Token = "0x40015B5")]
		Transition = 2,
		[Token(Token = "0x40015B6")]
		Traversable = 4,
		[Token(Token = "0x40015B7")]
		FirstPerson = 8,
		[Token(Token = "0x40015B8")]
		Observation = 0x10
	}
	[Token(Token = "0x2000390")]
	public static class EnumExtensions
	{
		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0xB325FC", Offset = "0xB325FC", VA = "0xB325FC")]
		public static bool ContainsFlag(this InteractionType a, InteractionType b)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0xB306A8", Offset = "0xB306A8", VA = "0xB306A8")]
		public static bool ContainsFlag(this TriggerEnterType a, TriggerEnterType b)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000391")]
	public class ManualFireFlyHint : SaveObject
	{
		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private HandHint m_handHint;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_customHintTime;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SavableBool m_hasPlayed;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_isHintActive;

		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0xAE5D68", Offset = "0xAE5D68", VA = "0xAE5D68")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0xAE5D98", Offset = "0xAE5D98", VA = "0xAE5D98")]
		public void ActivateHint()
		{
		}

		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0xAE5DF8", Offset = "0xAE5DF8", VA = "0xAE5DF8")]
		public void DeactivateHint()
		{
		}

		[Token(Token = "0x6001CA6")]
		[Address(RVA = "0xAE5E58", Offset = "0xAE5E58", VA = "0xAE5E58", Slot = "8")]
		public override void Deserialize(IReadSave save)
		{
		}

		[Token(Token = "0x6001CA7")]
		[Address(RVA = "0xAE5F5C", Offset = "0xAE5F5C", VA = "0xAE5F5C", Slot = "9")]
		public override void Serialize(IWriteSave save)
		{
		}

		[Token(Token = "0x6001CA8")]
		[Address(RVA = "0xAE6050", Offset = "0xAE6050", VA = "0xAE6050")]
		public ManualFireFlyHint()
		{
		}
	}
	[Token(Token = "0x2000392")]
	public class PointerEffectTrigger : RoomBehaviour
	{
		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ParticleSystem m_pointerEffectPrefab;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x934A48", Offset = "0x934A48")]
		private Collider m_referenceCollider;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x934A94", Offset = "0x934A94")]
		[SerializeField]
		private bool m_hasInitEffect;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ParticleSystem m_initEffectPrefab;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private int m_initEffectPoolCount;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x934B00", Offset = "0x934B00")]
		[SerializeField]
		private SoundEffectPlayer m_enterSoundEffectPlayer;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private SoundEffectPlayer m_exitSoundEffectPlayer;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AudioSource[] m_loopingAudioSources;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ParticleSystem[] m_pointerEffectPool;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ParticleSystem[] m_effectPool;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private IDictionary<PlayerPointer, int> m_pointers;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool m_isPointerPresent;

		[Token(Token = "0x6001CA9")]
		[Address(RVA = "0xAE60CC", Offset = "0xAE60CC", VA = "0xAE60CC", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6001CAA")]
		[Address(RVA = "0xAE6464", Offset = "0xAE6464", VA = "0xAE6464")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CAB")]
		[Address(RVA = "0xAE6A10", Offset = "0xAE6A10", VA = "0xAE6A10")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6001CAC")]
		[Address(RVA = "0xAE6DBC", Offset = "0xAE6DBC", VA = "0xAE6DBC")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6001CAD")]
		[Address(RVA = "0xAE6B08", Offset = "0xAE6B08", VA = "0xAE6B08")]
		private void OnPointerEnter(PlayerPointer pointer)
		{
		}

		[Token(Token = "0x6001CAE")]
		[Address(RVA = "0xAE6EB4", Offset = "0xAE6EB4", VA = "0xAE6EB4")]
		private void OnPointerExit(PlayerPointer pointer)
		{
		}

		[Token(Token = "0x6001CAF")]
		[Address(RVA = "0xAE7198", Offset = "0xAE7198", VA = "0xAE7198")]
		private void EnableParticles(int pointerIndex, Vector3 position)
		{
		}

		[Token(Token = "0x6001CB0")]
		[Address(RVA = "0xAE7280", Offset = "0xAE7280", VA = "0xAE7280")]
		private void DisableParticles(int pointerIndex)
		{
		}

		[Token(Token = "0x6001CB1")]
		[Address(RVA = "0xAE741C", Offset = "0xAE741C", VA = "0xAE741C")]
		private void PlayInitEffect(Vector3 position)
		{
		}

		[Token(Token = "0x6001CB2")]
		[Address(RVA = "0xAE75F4", Offset = "0xAE75F4", VA = "0xAE75F4")]
		private ParticleSystem GetPoolEffect(bool force = false)
		{
			return null;
		}

		[Token(Token = "0x6001CB3")]
		[Address(RVA = "0xAE69BC", Offset = "0xAE69BC", VA = "0xAE69BC")]
		private ParticleSystem GetPointerEffect(int pointerIndex)
		{
			return null;
		}

		[Token(Token = "0x6001CB4")]
		[Address(RVA = "0xAE61A4", Offset = "0xAE61A4", VA = "0xAE61A4")]
		private void CreatePool()
		{
		}

		[Token(Token = "0x6001CB5")]
		[Address(RVA = "0xAE74EC", Offset = "0xAE74EC", VA = "0xAE74EC")]
		private void TryPlayEnterSoundEffect(Vector3 position)
		{
		}

		[Token(Token = "0x6001CB6")]
		[Address(RVA = "0xAE7314", Offset = "0xAE7314", VA = "0xAE7314")]
		private void TryPlayExitSoundEffect(Vector3 position)
		{
		}

		[Token(Token = "0x6001CB7")]
		[Address(RVA = "0xAE76B8", Offset = "0xAE76B8", VA = "0xAE76B8")]
		public PointerEffectTrigger()
		{
		}
	}
	[Token(Token = "0x2000393")]
	public class PointerHighlightEnabler : MonoBehaviour
	{
		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private FireflyPointerInteractable[] m_pointerInteractables;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_toggleInteractableState;

		[Token(Token = "0x6001CB8")]
		[Address(RVA = "0xAE76C0", Offset = "0xAE76C0", VA = "0xAE76C0")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6001CB9")]
		[Address(RVA = "0xAE77DC", Offset = "0xAE77DC", VA = "0xAE77DC")]
		public PointerHighlightEnabler()
		{
		}
	}
	[Token(Token = "0x2000394")]
	public class PointerInteractable : MonoBehaviour, IInteractable
	{
		[Token(Token = "0x20005F2")]
		public enum PointerEnterType
		{
			[Token(Token = "0x40021AE")]
			OnEnter,
			[Token(Token = "0x40021AF")]
			OnExit
		}

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x934B7C", Offset = "0x934B7C")]
		[SerializeField]
		private PointerEnterType m_pointerEnterType;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		protected bool m_isInteractable;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x934BD8", Offset = "0x934BD8")]
		private int m_requiredPokes;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x934C18", Offset = "0x934C18")]
		[SerializeField]
		protected UnityEvent m_onInteract;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent m_onPokeConditionMet;

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x934C74", Offset = "0x934C74")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x934C74", Offset = "0x934C74")]
		private HapticClip m_hapticClip;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x934CE4", Offset = "0x934CE4")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x934CE4", Offset = "0x934CE4")]
		private SoundEffect m_pokeSoundEffect;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int m_currentPokes;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private SoundEffectPlayer m_soundEffectPlayer;

		[Token(Token = "0x17000363")]
		public bool IsInteractable
		{
			[Token(Token = "0x6001CBA")]
			[Address(RVA = "0xAE77D4", Offset = "0xAE77D4", VA = "0xAE77D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000364")]
		public PointerEnterType EnterType
		{
			[Token(Token = "0x6001CBB")]
			[Address(RVA = "0xAE871C", Offset = "0xAE871C", VA = "0xAE871C")]
			get
			{
				return default(PointerEnterType);
			}
		}

		[Token(Token = "0x17000365")]
		public HapticClip OverrideHapticClip
		{
			[Token(Token = "0x6001CBC")]
			[Address(RVA = "0xAE8724", Offset = "0xAE8724", VA = "0xAE8724")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CBD")]
		[Address(RVA = "0xAE872C", Offset = "0xAE872C", VA = "0xAE872C", Slot = "6")]
		public virtual void Interact()
		{
		}

		[Token(Token = "0x6001CBE")]
		[Address(RVA = "0xAE88CC", Offset = "0xAE88CC", VA = "0xAE88CC", Slot = "7")]
		public virtual void SetInteractableActive(bool active)
		{
		}

		[Token(Token = "0x6001CBF")]
		[Address(RVA = "0xAE88E8", Offset = "0xAE88E8", VA = "0xAE88E8", Slot = "8")]
		public virtual void OnEnter(PlayerPointer pointer)
		{
		}

		[Token(Token = "0x6001CC0")]
		[Address(RVA = "0xAE88F4", Offset = "0xAE88F4", VA = "0xAE88F4", Slot = "9")]
		public virtual void OnExit(PlayerPointer pointer)
		{
		}

		[Token(Token = "0x6001CC1")]
		[Address(RVA = "0xAE8900", Offset = "0xAE8900", VA = "0xAE8900", Slot = "10")]
		public virtual bool CanInteract(PointerEnterType enterType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CC2")]
		[Address(RVA = "0xAE8924", Offset = "0xAE8924", VA = "0xAE8924", Slot = "11")]
		protected virtual void Reset()
		{
		}

		[Token(Token = "0x6001CC3")]
		[Address(RVA = "0xAE87AC", Offset = "0xAE87AC", VA = "0xAE87AC")]
		protected void TryPlayPokeSound()
		{
		}

		[Token(Token = "0x6001CC4")]
		[Address(RVA = "0xAE8928", Offset = "0xAE8928", VA = "0xAE8928")]
		protected void TryAbortPokeSound()
		{
		}

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0xAE89C0", Offset = "0xAE89C0", VA = "0xAE89C0")]
		public PointerInteractable()
		{
		}
	}
	[Token(Token = "0x2000395")]
	public class PointerInteractableHold : PointerInteractable, IInteractable
	{
		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private bool m_deactivateOnInteract;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private HapticClip m_onInteractHapticClip;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float m_holdTime;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float m_elapsedTime;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool m_isPointerPresent;

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private ISet<PlayerPointer> m_presentPointers;

		[Token(Token = "0x17000366")]
		public float NormalizedTime
		{
			[Token(Token = "0x6001CCA")]
			[Address(RVA = "0xAE8C2C", Offset = "0xAE8C2C", VA = "0xAE8C2C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x14000063")]
		public event Action OnPointerEnter
		{
			[Token(Token = "0x6001CC6")]
			[Address(RVA = "0xAE7998", Offset = "0xAE7998", VA = "0xAE7998")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D748", Offset = "0x93D748")]
			add
			{
			}
			[Token(Token = "0x6001CC7")]
			[Address(RVA = "0xAE8A54", Offset = "0xAE8A54", VA = "0xAE8A54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D758", Offset = "0x93D758")]
			remove
			{
			}
		}

		[Token(Token = "0x14000064")]
		public event Action OnPointerExit
		{
			[Token(Token = "0x6001CC8")]
			[Address(RVA = "0xAE7A84", Offset = "0xAE7A84", VA = "0xAE7A84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D768", Offset = "0x93D768")]
			add
			{
			}
			[Token(Token = "0x6001CC9")]
			[Address(RVA = "0xAE8B40", Offset = "0xAE8B40", VA = "0xAE8B40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D778", Offset = "0x93D778")]
			remove
			{
			}
		}

		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0xAE8C38", Offset = "0xAE8C38", VA = "0xAE8C38")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0xAE90B4", Offset = "0xAE90B4", VA = "0xAE90B4", Slot = "6")]
		public override void Interact()
		{
		}

		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0xAE90E4", Offset = "0xAE90E4", VA = "0xAE90E4", Slot = "8")]
		public override void OnEnter(PlayerPointer pointer)
		{
		}

		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0xAE91E0", Offset = "0xAE91E0", VA = "0xAE91E0", Slot = "9")]
		public override void OnExit(PlayerPointer pointer)
		{
		}

		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0xAE8C60", Offset = "0xAE8C60", VA = "0xAE8C60")]
		private void IncreaseTimer()
		{
		}

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0xAE9024", Offset = "0xAE9024", VA = "0xAE9024")]
		private void DecreaseTimer()
		{
		}

		[Token(Token = "0x6001CD1")]
		[Address(RVA = "0xAE9464", Offset = "0xAE9464", VA = "0xAE9464", Slot = "10")]
		public override bool CanInteract(PointerEnterType enterType)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0xAE946C", Offset = "0xAE946C", VA = "0xAE946C", Slot = "11")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x6001CD3")]
		[Address(RVA = "0xAE9804", Offset = "0xAE9804", VA = "0xAE9804")]
		public PointerInteractableHold()
		{
		}
	}
	[Token(Token = "0x2000396")]
	public class PointerInteractionHighlight : MonoBehaviour
	{
		[Token(Token = "0x40015DC")]
		private const float MoveSpeed = 0.25f;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private HandHint m_handHint;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ParticleSystem m_interactVfx;

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioSource m_interactSfx;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_updatePosition;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform m_followTransform;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 m_velocity;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 m_lookDirection;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x934DD4", Offset = "0x934DD4")]
		private IHighlightableInteractable <Interactable>k__BackingField;

		[Token(Token = "0x17000367")]
		public IHighlightableInteractable Interactable
		{
			[Token(Token = "0x6001CD4")]
			[Address(RVA = "0xAE9880", Offset = "0xAE9880", VA = "0xAE9880")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D788", Offset = "0x93D788")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CD5")]
			[Address(RVA = "0xAE9888", Offset = "0xAE9888", VA = "0xAE9888")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D798", Offset = "0x93D798")]
			private set
			{
			}
		}

		[Token(Token = "0x17000368")]
		public bool IsAvailable
		{
			[Token(Token = "0x6001CD6")]
			[Address(RVA = "0xAE9890", Offset = "0xAE9890", VA = "0xAE9890")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001CD7")]
		[Address(RVA = "0xAE98E0", Offset = "0xAE98E0", VA = "0xAE98E0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001CD8")]
		[Address(RVA = "0xAE98E8", Offset = "0xAE98E8", VA = "0xAE98E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CD9")]
		[Address(RVA = "0xAE9944", Offset = "0xAE9944", VA = "0xAE9944")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CDA")]
		[Address(RVA = "0xAE9C7C", Offset = "0xAE9C7C", VA = "0xAE9C7C")]
		public void Interact()
		{
		}

		[Token(Token = "0x6001CDB")]
		[Address(RVA = "0xAE9EE8", Offset = "0xAE9EE8", VA = "0xAE9EE8")]
		public void EnableHighlight(IHighlightableInteractable interactable, float hintTime)
		{
		}

		[Token(Token = "0x6001CDC")]
		[Address(RVA = "0xAE9D0C", Offset = "0xAE9D0C", VA = "0xAE9D0C")]
		public void DisableHighlight(bool immediate)
		{
		}

		[Token(Token = "0x6001CDD")]
		[Address(RVA = "0xAEA27C", Offset = "0xAEA27C", VA = "0xAEA27C")]
		private void EnableMovement(Transform followTransform)
		{
		}

		[Token(Token = "0x6001CDE")]
		[Address(RVA = "0xAEA28C", Offset = "0xAEA28C", VA = "0xAEA28C")]
		private void DisableMovement()
		{
		}

		[Token(Token = "0x6001CDF")]
		[Address(RVA = "0xAE9980", Offset = "0xAE9980", VA = "0xAE9980")]
		private void FollowInteractable()
		{
		}

		[Token(Token = "0x6001CE0")]
		[Address(RVA = "0xAE9AC0", Offset = "0xAE9AC0", VA = "0xAE9AC0")]
		private void UpdateHandRotation()
		{
		}

		[Token(Token = "0x6001CE1")]
		[Address(RVA = "0xAEA298", Offset = "0xAEA298", VA = "0xAEA298")]
		public PointerInteractionHighlight()
		{
		}

		[Token(Token = "0x6001CE2")]
		[Address(RVA = "0xAEA2A0", Offset = "0xAEA2A0", VA = "0xAEA2A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D7A8", Offset = "0x93D7A8")]
		private bool <DisableHighlight>b__19_0()
		{
			return default(bool);
		}

		[Token(Token = "0x6001CE3")]
		[Address(RVA = "0xAEA2E0", Offset = "0xAEA2E0", VA = "0xAEA2E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D7B8", Offset = "0x93D7B8")]
		private void <DisableHighlight>b__19_1()
		{
		}
	}
	[Token(Token = "0x2000397")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9270D4", Offset = "0x9270D4")]
	public class RockPile : PointerInteractable, IIdentifiableSavable, ISavable
	{
		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x934DE4", Offset = "0x934DE4")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[HideInInspector]
		private string m_guid;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private SavableBool m_savedInteractableState;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly int m_rockCrumbleHash;

		[Token(Token = "0x17000369")]
		public string Guid
		{
			[Token(Token = "0x6001CE4")]
			[Address(RVA = "0xAEACEC", Offset = "0xAEACEC", VA = "0xAEACEC", Slot = "12")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CE5")]
			[Address(RVA = "0xAEACF4", Offset = "0xAEACF4", VA = "0xAEACF4", Slot = "13")]
			set
			{
			}
		}

		[Token(Token = "0x6001CE6")]
		[Address(RVA = "0xAEACFC", Offset = "0xAEACFC", VA = "0xAEACFC", Slot = "14")]
		public void Serialize(IWriteSave save)
		{
		}

		[Token(Token = "0x6001CE7")]
		[Address(RVA = "0xAEAE70", Offset = "0xAEAE70", VA = "0xAEAE70", Slot = "15")]
		public void Deserialize(IReadSave save)
		{
		}

		[Token(Token = "0x6001CE8")]
		[Address(RVA = "0xAEAFD0", Offset = "0xAEAFD0", VA = "0xAEAFD0", Slot = "7")]
		public override void SetInteractableActive(bool active)
		{
		}

		[Token(Token = "0x6001CE9")]
		[Address(RVA = "0xAEAE08", Offset = "0xAEAE08", VA = "0xAEAE08")]
		private SavableBool GetDefaultSaveData()
		{
			return null;
		}

		[Token(Token = "0x6001CEA")]
		[Address(RVA = "0xAEAFEC", Offset = "0xAEAFEC", VA = "0xAEAFEC")]
		public RockPile()
		{
		}
	}
	[Token(Token = "0x2000398")]
	public class TransitionFixer : MonoBehaviour
	{
		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private InteractableObject m_interactable;

		[Token(Token = "0x6001CEB")]
		[Address(RVA = "0xAEB048", Offset = "0xAEB048", VA = "0xAEB048")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6001CEC")]
		[Address(RVA = "0xAEB144", Offset = "0xAEB144", VA = "0xAEB144")]
		public TransitionFixer()
		{
		}
	}
	[Token(Token = "0x2000399")]
	public enum TriggerEnterType
	{
		[Token(Token = "0x40015EB")]
		OnEnter = 1,
		[Token(Token = "0x40015EC")]
		OnExit = 2,
		[Token(Token = "0x40015ED")]
		OnActive = 4,
		[Token(Token = "0x40015EE")]
		OnInactive = 8,
		[Token(Token = "0x40015EF")]
		BlockPassiveCharacters = 0x10,
		[Token(Token = "0x40015F0")]
		Directional = 0x20
	}
	[Token(Token = "0x200039A")]
	public class PointerHoldButton : MonoBehaviour
	{
		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly int m_parameterIsSpawned;

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private readonly int m_parameterChosenTrigger;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly int m_parameterOpacity;

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private readonly int m_disabledStateName;

		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly int m_materialColorPropertyID;

		[Token(Token = "0x40015F6")]
		private const float TextFadeDelay = 0.5f;

		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private PointerInteractableHold m_pointerInteractable;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x934E98", Offset = "0x934E98")]
		[SerializeField]
		private TextMenuItem[] m_textFaders;

		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x934EE4", Offset = "0x934EE4")]
		[SerializeField]
		private SoundEffect m_soundEffect;

		[Token(Token = "0x40015FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private MeshRenderer[] m_renderers;

		[Token(Token = "0x40015FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Collider m_collider;

		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SoundEffectPlayer m_soundEffectPlayer;

		[Token(Token = "0x6001CED")]
		[Address(RVA = "0xAE77E4", Offset = "0xAE77E4", VA = "0xAE77E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001CEE")]
		[Address(RVA = "0xAE7B70", Offset = "0xAE7B70", VA = "0xAE7B70")]
		private void Update()
		{
		}

		[Token(Token = "0x6001CEF")]
		[Address(RVA = "0xAE7CB4", Offset = "0xAE7CB4", VA = "0xAE7CB4")]
		public void StartSpawn(float delayTime)
		{
		}

		[Token(Token = "0x6001CF0")]
		[Address(RVA = "0xAE7F9C", Offset = "0xAE7F9C", VA = "0xAE7F9C")]
		public void StartDespawn(float delayTime)
		{
		}

		[Token(Token = "0x6001CF1")]
		[Address(RVA = "0xAE8138", Offset = "0xAE8138", VA = "0xAE8138")]
		public void Disable()
		{
		}

		[Token(Token = "0x6001CF2")]
		[Address(RVA = "0xAE8194", Offset = "0xAE8194", VA = "0xAE8194")]
		public void Select()
		{
		}

		[Token(Token = "0x6001CF3")]
		[Address(RVA = "0xAE8200", Offset = "0xAE8200", VA = "0xAE8200")]
		public void DisableButton()
		{
		}

		[Token(Token = "0x6001CF4")]
		[Address(RVA = "0xAE8204", Offset = "0xAE8204", VA = "0xAE8204")]
		public void EnableButton()
		{
		}

		[Token(Token = "0x6001CF5")]
		[Address(RVA = "0xAE820C", Offset = "0xAE820C", VA = "0xAE820C")]
		public void SetInteractable(bool isInteractable)
		{
		}

		[Token(Token = "0x6001CF6")]
		[Address(RVA = "0xAE8248", Offset = "0xAE8248", VA = "0xAE8248")]
		private void EnableText()
		{
		}

		[Token(Token = "0x6001CF7")]
		[Address(RVA = "0xAE82F0", Offset = "0xAE82F0", VA = "0xAE82F0")]
		private void SetSpawnParameters()
		{
		}

		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0xAE8380", Offset = "0xAE8380", VA = "0xAE8380")]
		private void SetDespawnParameters()
		{
		}

		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0xAE83BC", Offset = "0xAE83BC", VA = "0xAE83BC")]
		private void OnPointerExit()
		{
		}

		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0xAE8458", Offset = "0xAE8458", VA = "0xAE8458")]
		private void OnPointerEnter()
		{
		}

		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0xAE8508", Offset = "0xAE8508", VA = "0xAE8508")]
		public PointerHoldButton()
		{
		}

		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0xAE85F8", Offset = "0xAE85F8", VA = "0xAE85F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D7C8", Offset = "0x93D7C8")]
		private IPromise <StartSpawn>b__15_0()
		{
			return null;
		}
	}
}
namespace Cortopia.Scripts.Interactions.Transitions
{
	[Token(Token = "0x200039B")]
	public class CaterpillarMirror : InteractableObject
	{
		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int sm_materialProperty;

		[Token(Token = "0x40015FF")]
		private const float InvitationFadeTime = 0.25f;

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x934F50", Offset = "0x934F50")]
		[SerializeField]
		private IntVariable m_unlockedCompareIndex;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private bool m_autoLoadBiome;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		[SerializeField]
		private bool m_autoCheckUnlockCondition;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private BiomeLoader m_biomeLoader;

		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private Renderer m_mirrorRenderer;

		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private Transform m_teleportPoint;

		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem m_unlockEffect;

		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private SoundEffect m_unlockSoundEffect;

		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private Condition m_unlockedCondition;

		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x93501C", Offset = "0x93501C")]
		[SerializeField]
		private bool m_forceCharactersToBeTethered;

		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		private CharacterReactor m_notTetheredReactor;

		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x935078", Offset = "0x935078")]
		[SerializeField]
		private BoolVariable m_isFirstTimeTravel;

		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		private VoiceLineCollection m_customFirstReaction;

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		private VoiceLineCollection m_lockedReaction;

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		private VoiceLineCollection m_unlockedReaction;

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9350F4", Offset = "0x9350F4")]
		[SerializeField]
		private SoundEffect m_teleportOutSoundEffect;

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[SerializeField]
		private SoundEffect m_teleportInSoundEffect;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x935150", Offset = "0x935150")]
		[SerializeField]
		private bool m_showUI;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[SerializeField]
		private BiomeType m_biomeType;

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		private CanvasGroup m_invitationInfoCanvasGroup;

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[SerializeField]
		private TextMeshProUGUI m_invitationCountText;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private IList<CharacterVoiceLine> m_filterList;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private bool m_isUnlocked;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private int m_invitationCount;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Tweener m_invitationDisplayTween;

		[Token(Token = "0x1700036A")]
		private bool ShouldShowUI
		{
			[Token(Token = "0x6001CFD")]
			[Address(RVA = "0xAEB14C", Offset = "0xAEB14C", VA = "0xAEB14C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700036B")]
		public override string LocalizedTerm
		{
			[Token(Token = "0x6001CFE")]
			[Address(RVA = "0xAEB16C", Offset = "0xAEB16C", VA = "0xAEB16C", Slot = "13")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0xAEB1D0", Offset = "0xAEB1D0", VA = "0xAEB1D0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D00")]
		[Address(RVA = "0xAEB338", Offset = "0xAEB338", VA = "0xAEB338", Slot = "18")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6001D01")]
		[Address(RVA = "0xAEB3E8", Offset = "0xAEB3E8", VA = "0xAEB3E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0xAEB54C", Offset = "0xAEB54C", VA = "0xAEB54C", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6001D03")]
		[Address(RVA = "0xAEB550", Offset = "0xAEB550", VA = "0xAEB550", Slot = "19")]
		public override void Interact(PlayableCharacter character)
		{
		}

		[Token(Token = "0x6001D04")]
		[Address(RVA = "0xAEB288", Offset = "0xAEB288", VA = "0xAEB288")]
		public void CheckConditionMet()
		{
		}

		[Token(Token = "0x6001D05")]
		[Address(RVA = "0xAEBC9C", Offset = "0xAEBC9C", VA = "0xAEBC9C")]
		public void CheckConditionMet(bool playEffect)
		{
		}

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0xAEBE90", Offset = "0xAEBE90", VA = "0xAEBE90")]
		public void TeleportArrivals()
		{
		}

		[Token(Token = "0x6001D07")]
		[Address(RVA = "0xAEB9EC", Offset = "0xAEB9EC", VA = "0xAEB9EC")]
		private void PlayTeleportSoundEffect(SoundEffect soundEffect)
		{
		}

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0xAEC094", Offset = "0xAEC094", VA = "0xAEC094")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0xAEC1D8", Offset = "0xAEC1D8", VA = "0xAEC1D8")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0xAEBB24", Offset = "0xAEBB24", VA = "0xAEBB24")]
		private void LoadBiome(PlayableCharacter character)
		{
		}

		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0xAEBDBC", Offset = "0xAEBDBC", VA = "0xAEBDBC")]
		private void SetMirrorMaterialProperty(bool isUnlocked)
		{
		}

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0xAEC2BC", Offset = "0xAEC2BC", VA = "0xAEC2BC")]
		private float GetMaterialPropertyValue(bool isUnlocked)
		{
			return default(float);
		}

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0xAEB738", Offset = "0xAEB738", VA = "0xAEB738")]
		private bool CanGetMirrorLockedReaction(PlayableCharacter character, out VoiceLine voiceLine)
		{
			return default(bool);
		}

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0xAEC178", Offset = "0xAEC178", VA = "0xAEC178")]
		private void TryShowInvitationUI()
		{
		}

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0xAEBACC", Offset = "0xAEBACC", VA = "0xAEBACC")]
		private void TryHideInvitationUI()
		{
		}

		[Token(Token = "0x6001D10")]
		[Address(RVA = "0xAEC2D4", Offset = "0xAEC2D4", VA = "0xAEC2D4")]
		private void UpdateInvitationsFoundCount()
		{
		}

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0xAEC4D8", Offset = "0xAEC4D8", VA = "0xAEC4D8")]
		public CaterpillarMirror()
		{
		}
	}
	[Token(Token = "0x200039C")]
	public class CaterpillarMirrorHandler : RoomBehaviour
	{
		[Token(Token = "0x20005F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927FD0", Offset = "0x927FD0")]
		private sealed class <UnlockMirrors>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int previousIndex;

			[Token(Token = "0x40021B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public CaterpillarMirrorHandler <>4__this;

			[Token(Token = "0x40021B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__2;

			[Token(Token = "0x170004F6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027C1")]
				[Address(RVA = "0xAECB90", Offset = "0xAECB90", VA = "0xAECB90", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027C3")]
				[Address(RVA = "0xAECC00", Offset = "0xAECC00", VA = "0xAECC00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027BE")]
			[Address(RVA = "0xAEC970", Offset = "0xAEC970", VA = "0xAEC970")]
			[DebuggerHidden]
			public <UnlockMirrors>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60027BF")]
			[Address(RVA = "0xAECA04", Offset = "0xAECA04", VA = "0xAECA04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027C0")]
			[Address(RVA = "0xAECA08", Offset = "0xAECA08", VA = "0xAECA08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027C2")]
			[Address(RVA = "0xAECB98", Offset = "0xAECB98", VA = "0xAECB98", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private BiomeType m_biomeType;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private IntVariable m_biomesUnlockedIndex;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_checkConditionOnInitialize;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_unlockDelay;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TutorialScroll m_invitationsReminder;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private CaterpillarMirror[] m_caterpillarMirrors;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SoundEffect m_unlockSoundEffect;

		[Token(Token = "0x6001D13")]
		[Address(RVA = "0xAEC548", Offset = "0xAEC548", VA = "0xAEC548")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001D14")]
		[Address(RVA = "0xAEC578", Offset = "0xAEC578", VA = "0xAEC578", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6001D15")]
		[Address(RVA = "0xAEC744", Offset = "0xAEC744", VA = "0xAEC744")]
		public void UnlockMirrorTravel()
		{
		}

		[Token(Token = "0x6001D16")]
		[Address(RVA = "0xAEC630", Offset = "0xAEC630", VA = "0xAEC630")]
		private void UpdateMirrorUnlockConditions()
		{
		}

		[Token(Token = "0x6001D17")]
		[Address(RVA = "0xAEC8D8", Offset = "0xAEC8D8", VA = "0xAEC8D8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93D7D8", Offset = "0x93D7D8")]
		private IEnumerator UnlockMirrors(int previousIndex)
		{
			return null;
		}

		[Token(Token = "0x6001D18")]
		[Address(RVA = "0xAEC87C", Offset = "0xAEC87C", VA = "0xAEC87C")]
		private void TryUpdateUnlockedIndex()
		{
		}

		[Token(Token = "0x6001D19")]
		[Address(RVA = "0xAEC99C", Offset = "0xAEC99C", VA = "0xAEC99C")]
		public CaterpillarMirrorHandler()
		{
		}
	}
	[Token(Token = "0x200039D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x927138", Offset = "0x927138")]
	public class TransitionData : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x20005F4")]
		public struct DoorTimelineAsset
		{
			[Token(Token = "0x40021B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CharacterType CharacterType;

			[Token(Token = "0x40021B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public TimelineAsset[] TimelineAssets;
		}

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<DoorTimelineAsset> m_doorTimelineAssets;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IDictionary<CharacterType, TimelineAsset[]> m_doorTimelinePairs;

		[Token(Token = "0x6001D1A")]
		[Address(RVA = "0xAECC08", Offset = "0xAECC08", VA = "0xAECC08")]
		public void LoadData()
		{
		}

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0xAECE10", Offset = "0xAECE10", VA = "0xAECE10")]
		public TimelineAsset GetTimelineAsset(CharacterType characterType, int doorDirectionIndex)
		{
			return null;
		}

		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0xAECF54", Offset = "0xAECF54", VA = "0xAECF54")]
		public TransitionData()
		{
		}
	}
}
namespace Cortopia.Scripts.Interactions.PressurePlates
{
	[Token(Token = "0x200039E")]
	public class PressurePlate : RoomBehaviour
	{
		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private CharacterType m_characterTarget;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PressurePlateEvent m_onTargetEnter;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PressurePlateEvent m_onTargetExit;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ISet<Collider> m_presentCollider;

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0xAEA328", Offset = "0xAEA328", VA = "0xAEA328", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0xAEA32C", Offset = "0xAEA32C", VA = "0xAEA32C")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0xAEA610", Offset = "0xAEA610", VA = "0xAEA610")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6001D20")]
		[Address(RVA = "0xAEA418", Offset = "0xAEA418", VA = "0xAEA418")]
		private void TryTriggerPlate(Collider collider)
		{
		}

		[Token(Token = "0x6001D21")]
		[Address(RVA = "0xAEA6FC", Offset = "0xAEA6FC", VA = "0xAEA6FC")]
		private void TryReleasePlate(Collider collider)
		{
		}

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0xAEA8B4", Offset = "0xAEA8B4", VA = "0xAEA8B4")]
		public PressurePlate()
		{
		}
	}
	[Token(Token = "0x200039F")]
	public class PressurePlateConnector : RoomBehaviour
	{
		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x93527C", Offset = "0x93527C")]
		[SerializeField]
		private int m_triggerTarget;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent m_onAllPlatesActivated;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<PressurePlate> m_activePlates;

		[Token(Token = "0x6001D23")]
		[Address(RVA = "0xAEA96C", Offset = "0xAEA96C", VA = "0xAEA96C", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0xAEA970", Offset = "0xAEA970", VA = "0xAEA970")]
		public void AddPressure(PressurePlate pressurePlate)
		{
		}

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0xAEABB0", Offset = "0xAEABB0", VA = "0xAEABB0")]
		public void RemovePressure(PressurePlate pressurePlate)
		{
		}

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0xAEAA54", Offset = "0xAEAA54", VA = "0xAEAA54")]
		private void TriggerPressurePlateComplete()
		{
		}

		[Token(Token = "0x6001D27")]
		[Address(RVA = "0xAEAC5C", Offset = "0xAEAC5C", VA = "0xAEAC5C")]
		public PressurePlateConnector()
		{
		}
	}
}
namespace Cortopia.Scripts.Interactions.Listeners
{
	[Token(Token = "0x20003A0")]
	public class AnimationPlayer : MonoBehaviour
	{
		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x9352D8", Offset = "0x9352D8")]
		private bool m_useCharacterAnimator;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_customAnimator;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AnimationData m_animationData;

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0xADF2B4", Offset = "0xADF2B4", VA = "0xADF2B4")]
		public void TriggerAnimator(PlayableCharacter characterControl)
		{
		}

		[Token(Token = "0x6001D29")]
		[Address(RVA = "0xADF334", Offset = "0xADF334", VA = "0xADF334")]
		public void TriggerAnimator()
		{
		}

		[Token(Token = "0x6001D2A")]
		[Address(RVA = "0xADF3D8", Offset = "0xADF3D8", VA = "0xADF3D8")]
		public AnimationPlayer()
		{
		}
	}
	[Token(Token = "0x20003A1")]
	public class BiomeLoader : MonoBehaviour
	{
		[Token(Token = "0x20005F5")]
		private enum CameraFocusType
		{
			[Token(Token = "0x40021B8")]
			None,
			[Token(Token = "0x40021B9")]
			ActiveCharacter,
			[Token(Token = "0x40021BA")]
			CustomPoint
		}

		[Token(Token = "0x20005F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927FE0", Offset = "0x927FE0")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x40021BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayableCharacter character;

			[Token(Token = "0x60027C4")]
			[Address(RVA = "0xADF9A4", Offset = "0xADF9A4", VA = "0xADF9A4")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x60027C5")]
			[Address(RVA = "0xAE0464", Offset = "0xAE0464", VA = "0xAE0464")]
			internal bool <TryLoadBiome>b__0()
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private BiomeType m_biomeType;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEngine.Object m_newRoom;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x935364", Offset = "0x935364")]
		private int m_blockerIndex;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform m_teleportPoint;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool m_saveGameAfterBiomeSwitch;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9353D0", Offset = "0x9353D0")]
		[SerializeField]
		private CameraFocusType m_cameraFocusOnLoad;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform m_cameraFocusPoint;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x93542C", Offset = "0x93542C")]
		[SerializeField]
		private ScriptableEvent m_biomeLoadedEvent;

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[HideInInspector]
		private Cortopia.Scripts.Rooms.RoomType m_newRoomType;

		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 m_cameraFocusPosition;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SavablePose m_destinationPoint;

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private EventToken m_biomeLoadedEventToken;

		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0xADF3E0", Offset = "0xADF3E0", VA = "0xADF3E0")]
		public void Load(BiomeType biomeType, Cortopia.Scripts.Rooms.RoomType roomType)
		{
		}

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0xADF3EC", Offset = "0xADF3EC", VA = "0xADF3EC")]
		public void LoadBiome()
		{
		}

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0xADF734", Offset = "0xADF734", VA = "0xADF734")]
		public void TryLoadBiome(PlayableCharacter character)
		{
		}

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0xADF5F8", Offset = "0xADF5F8", VA = "0xADF5F8")]
		private void SwitchBiome()
		{
		}

		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0xADFB90", Offset = "0xADFB90", VA = "0xADFB90")]
		private void OnBiomeLoaded(RoomEvents.BiomeActivatedEvent eventData)
		{
		}

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0xADF4D4", Offset = "0xADF4D4", VA = "0xADF4D4")]
		private void TryTeleportToNewRoom()
		{
		}

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0xADFD18", Offset = "0xADFD18", VA = "0xADFD18")]
		private void TeleportCharacters()
		{
		}

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0xAE0020", Offset = "0xAE0020", VA = "0xAE0020")]
		private void MoveToNewRoom(PlayableCharacter character)
		{
		}

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0xAE020C", Offset = "0xAE020C", VA = "0xAE020C")]
		private void FocusOnCharactersAndFadeIn()
		{
		}

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0xAE016C", Offset = "0xAE016C", VA = "0xAE016C")]
		private void TryRaiseEvent()
		{
		}

		[Token(Token = "0x6001D35")]
		[Address(RVA = "0xADFAF4", Offset = "0xADFAF4", VA = "0xADFAF4")]
		private void SaveCameraFocusPosition()
		{
		}

		[Token(Token = "0x6001D36")]
		[Address(RVA = "0xADF9AC", Offset = "0xADF9AC", VA = "0xADF9AC")]
		private SavablePose GetTeleportTransform()
		{
			return null;
		}

		[Token(Token = "0x6001D37")]
		[Address(RVA = "0xADFEA8", Offset = "0xADFEA8", VA = "0xADFEA8")]
		private SavablePose GetRoomSpawnPoint()
		{
			return null;
		}

		[Token(Token = "0x6001D38")]
		[Address(RVA = "0xAE038C", Offset = "0xAE038C", VA = "0xAE038C")]
		public BiomeLoader()
		{
		}

		[Token(Token = "0x6001D39")]
		[Address(RVA = "0xAE03A8", Offset = "0xAE03A8", VA = "0xAE03A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D83C", Offset = "0x93D83C")]
		private void <OnBiomeLoaded>b__17_0()
		{
		}

		[Token(Token = "0x6001D3A")]
		[Address(RVA = "0xAE0438", Offset = "0xAE0438", VA = "0xAE0438")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D84C", Offset = "0x93D84C")]
		private void <TryTeleportToNewRoom>b__18_0()
		{
		}
	}
	[Token(Token = "0x20003A2")]
	public class CameraRedirector : MonoBehaviour
	{
		[Token(Token = "0x20005F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x927FF0", Offset = "0x927FF0")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x40021BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CameraRedirector <>4__this;

			[Token(Token = "0x40021BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PlayableCharacter character;

			[Token(Token = "0x60027C6")]
			[Address(RVA = "0xAE078C", Offset = "0xAE078C", VA = "0xAE078C")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x60027C7")]
			[Address(RVA = "0xAE1054", Offset = "0xAE1054", VA = "0xAE1054")]
			internal void <FocusOnCharacter>b__0()
			{
			}
		}

		[Token(Token = "0x20005F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x928000", Offset = "0x928000")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x40021BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CameraRedirector <>4__this;

			[Token(Token = "0x40021BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Transform focusPoint;

			[Token(Token = "0x60027C8")]
			[Address(RVA = "0xAE0DA0", Offset = "0xAE0DA0", VA = "0xAE0DA0")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x60027C9")]
			[Address(RVA = "0xAE1084", Offset = "0xAE1084", VA = "0xAE1084")]
			internal void <FocusOnPoint>b__0()
			{
			}
		}

		[Token(Token = "0x20005F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x928010", Offset = "0x928010")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x40021C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayableCharacter character;

			[Token(Token = "0x40021C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CameraRedirector <>4__this;

			[Token(Token = "0x60027CA")]
			[Address(RVA = "0xAE0F58", Offset = "0xAE0F58", VA = "0xAE0F58")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x60027CB")]
			[Address(RVA = "0xAE10F0", Offset = "0xAE10F0", VA = "0xAE10F0")]
			internal void <LookAtCharacter>b__0()
			{
			}
		}

		[Token(Token = "0x20005FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x928020", Offset = "0x928020")]
		private sealed class <>c__DisplayClass16_0
		{
			[Token(Token = "0x40021C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 position;

			[Token(Token = "0x40021C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CameraRedirector <>4__this;

			[Token(Token = "0x60027CC")]
			[Address(RVA = "0xAE0F60", Offset = "0xAE0F60", VA = "0xAE0F60")]
			public <>c__DisplayClass16_0()
			{
			}

			[Token(Token = "0x60027CD")]
			[Address(RVA = "0xAE1220", Offset = "0xAE1220", VA = "0xAE1220")]
			internal void <LookAtPosition>b__0()
			{
			}
		}

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CharacterOrientationState m_characterOrientationOverride;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_moveDelay;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_useFade;

		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_cameraFadeTime;

		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9354F0", Offset = "0x9354F0")]
		[SerializeField]
		private CortopiaEventType m_onRedirectEventType;

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent m_onRedirectUnityEvent;

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ScriptableEvent m_onRedirectEvent;

		[Token(Token = "0x6001D3B")]
		[Address(RVA = "0xAE04B8", Offset = "0xAE04B8", VA = "0xAE04B8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D3C")]
		[Address(RVA = "0xAE04C0", Offset = "0xAE04C0", VA = "0xAE04C0")]
		public void SetCameraHeightAdjustment(float heightAdjustment)
		{
		}

		[Token(Token = "0x6001D3D")]
		[Address(RVA = "0xAE0560", Offset = "0xAE0560", VA = "0xAE0560")]
		public void ResetCameraHeightAdjustment()
		{
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0xAE05F0", Offset = "0xAE05F0", VA = "0xAE05F0")]
		public void FocusOnCharacter(PlayableCharacter character)
		{
		}

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0xAE0934", Offset = "0xAE0934", VA = "0xAE0934")]
		public void FocusOnCharacter(PlayableCharacterData characterData)
		{
		}

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0xAE09DC", Offset = "0xAE09DC", VA = "0xAE09DC")]
		public void FocusOnActiveCharacter()
		{
		}

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0xAE0A64", Offset = "0xAE0A64", VA = "0xAE0A64")]
		public void FocusOnCharacterIfActive(PlayableCharacterData characterData)
		{
		}

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0xAE0BF0", Offset = "0xAE0BF0", VA = "0xAE0BF0")]
		public void FocusOnPoint(Transform focusPoint)
		{
		}

		[Token(Token = "0x6001D43")]
		[Address(RVA = "0xAE0794", Offset = "0xAE0794", VA = "0xAE0794")]
		private void LookAtCharacter(PlayableCharacter character)
		{
		}

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0xAE0DA8", Offset = "0xAE0DA8", VA = "0xAE0DA8")]
		private void LookAtPosition(Vector3 position)
		{
		}

		[Token(Token = "0x6001D45")]
		[Address(RVA = "0xAE0F68", Offset = "0xAE0F68", VA = "0xAE0F68")]
		private void InvokeEvent()
		{
		}

		[Token(Token = "0x6001D46")]
		[Address(RVA = "0xAE0FD8", Offset = "0xAE0FD8", VA = "0xAE0FD8")]
		public CameraRedirector()
		{
		}
	}
	[Token(Token = "0x20003A3")]
	public class CameraZoomer : MonoBehaviour
	{
		[Token(Token = "0x20005FB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x928030", Offset = "0x928030")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x40021C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PlayableCharacter characterControl;

			[Token(Token = "0x40021C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public CameraZoomer <>4__this;

			[Token(Token = "0x60027CE")]
			[Address(RVA = "0xAE17D0", Offset = "0xAE17D0", VA = "0xAE17D0")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x60027CF")]
			[Address(RVA = "0xAE18C8", Offset = "0xAE18C8", VA = "0xAE18C8")]
			internal void <ZoomIn>b__0()
			{
			}
		}

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_zoomInPoint;

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x93556C", Offset = "0x93556C")]
		[SerializeField]
		private Transform m_companionTeleportPoint;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_isManualZoomedOutBlocked;

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9355C8", Offset = "0x9355C8")]
		[SerializeField]
		private bool m_playEventOnManualZoomOut;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private UnityEvent m_onZoomOut;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_isZoomedOut;

		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private EventToken m_firstPersonCameraEventToken;

		[Token(Token = "0x6001D47")]
		[Address(RVA = "0xAE1344", Offset = "0xAE1344", VA = "0xAE1344")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D48")]
		[Address(RVA = "0xAE13F0", Offset = "0xAE13F0", VA = "0xAE13F0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D49")]
		[Address(RVA = "0xAE1464", Offset = "0xAE1464", VA = "0xAE1464")]
		private void Update()
		{
		}

		[Token(Token = "0x6001D4A")]
		[Address(RVA = "0xAE160C", Offset = "0xAE160C", VA = "0xAE160C")]
		public void ZoomIn(PlayableCharacter characterControl)
		{
		}

		[Token(Token = "0x6001D4B")]
		[Address(RVA = "0xAE17D8", Offset = "0xAE17D8", VA = "0xAE17D8")]
		public void ZoomOut()
		{
		}

		[Token(Token = "0x6001D4C")]
		[Address(RVA = "0xAE1510", Offset = "0xAE1510", VA = "0xAE1510")]
		public void ZoomOut(bool playEvent)
		{
		}

		[Token(Token = "0x6001D4D")]
		[Address(RVA = "0xAE17E0", Offset = "0xAE17E0", VA = "0xAE17E0")]
		private void OnFirstPersonCameraStateChanged(CameraEvents.FirstPersonCameraEvent eventData)
		{
		}

		[Token(Token = "0x6001D4E")]
		[Address(RVA = "0xAE181C", Offset = "0xAE181C", VA = "0xAE181C")]
		public CameraZoomer()
		{
		}

		[Token(Token = "0x6001D4F")]
		[Address(RVA = "0xAE1898", Offset = "0xAE1898", VA = "0xAE1898")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D85C", Offset = "0x93D85C")]
		private void <ZoomOut>b__12_0()
		{
		}
	}
	[Token(Token = "0x20003A4")]
	public class CharacterReactor : SaveObject
	{
		[Token(Token = "0x20005FC")]
		public enum PlayState
		{
			[Token(Token = "0x40021C7")]
			Multiple,
			[Token(Token = "0x40021C8")]
			Once,
			[Token(Token = "0x40021C9")]
			OnceDisable
		}

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PlayState m_playState;

		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x935634", Offset = "0x935634")]
		private bool m_forceStopOnReact;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x935680", Offset = "0x935680")]
		[SerializeField]
		protected bool m_useSingleLine;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected VoiceLineCollection m_dataCollection;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected PlayableCharacterData m_playableCharacterData;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected float m_delay;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected VoiceLine m_voiceLine;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SavableBool m_hasPlayed;

		[Token(Token = "0x1700036C")]
		protected bool IsPlayBlocked
		{
			[Token(Token = "0x6001D50")]
			[Address(RVA = "0xAE1B24", Offset = "0xAE1B24", VA = "0xAE1B24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001D51")]
		[Address(RVA = "0xAE1B40", Offset = "0xAE1B40", VA = "0xAE1B40", Slot = "9")]
		public override void Serialize(IWriteSave save)
		{
		}

		[Token(Token = "0x6001D52")]
		[Address(RVA = "0xAE1C4C", Offset = "0xAE1C4C", VA = "0xAE1C4C", Slot = "8")]
		public override void Deserialize(IReadSave save)
		{
		}

		[Token(Token = "0x6001D53")]
		[Address(RVA = "0xAE1DA8", Offset = "0xAE1DA8", VA = "0xAE1DA8")]
		public void AbortVO(CharacterData character)
		{
		}

		[Token(Token = "0x6001D54")]
		[Address(RVA = "0xAE1E2C", Offset = "0xAE1E2C", VA = "0xAE1E2C")]
		public void TryPlayBanter()
		{
		}

		[Token(Token = "0x6001D55")]
		[Address(RVA = "0xAE20BC", Offset = "0xAE20BC", VA = "0xAE20BC")]
		public void TrySpeak(PlayableCharacter character)
		{
		}

		[Token(Token = "0x6001D56")]
		[Address(RVA = "0xAE204C", Offset = "0xAE204C", VA = "0xAE204C")]
		public void SetPlayed()
		{
		}

		[Token(Token = "0x6001D57")]
		[Address(RVA = "0xAE241C", Offset = "0xAE241C", VA = "0xAE241C")]
		public CharacterReactor()
		{
		}
	}
	[Token(Token = "0x20003A5")]
	public class CharacterReactorInteractive : CharacterReactor
	{
		[Token(Token = "0x20005FD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x928040", Offset = "0x928040")]
		private sealed class <SpeakLine>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CharacterData characterData;

			[Token(Token = "0x40021CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public VoiceLine voiceLine;

			[Token(Token = "0x40021CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float delay;

			[Token(Token = "0x40021CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public CharacterReactorInteractive <>4__this;

			[Token(Token = "0x170004F8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027D3")]
				[Address(RVA = "0xAE2904", Offset = "0xAE2904", VA = "0xAE2904", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004F9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027D5")]
				[Address(RVA = "0xAE2974", Offset = "0xAE2974", VA = "0xAE2974", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027D0")]
			[Address(RVA = "0xAE272C", Offset = "0xAE272C", VA = "0xAE272C")]
			[DebuggerHidden]
			public <SpeakLine>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x60027D1")]
			[Address(RVA = "0xAE27EC", Offset = "0xAE27EC", VA = "0xAE27EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027D2")]
			[Address(RVA = "0xAE27F0", Offset = "0xAE27F0", VA = "0xAE27F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027D4")]
			[Address(RVA = "0xAE290C", Offset = "0xAE290C", VA = "0xAE290C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UnityEvent m_onLinesCompleted;

		[Token(Token = "0x6001D58")]
		[Address(RVA = "0xAE2488", Offset = "0xAE2488", VA = "0xAE2488")]
		public void TryPlayBanterWithCallback()
		{
		}

		[Token(Token = "0x6001D59")]
		[Address(RVA = "0xAE2660", Offset = "0xAE2660", VA = "0xAE2660")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93D86C", Offset = "0x93D86C")]
		private IEnumerator SpeakLine(CharacterData characterData, VoiceLine voiceLine, float delay)
		{
			return null;
		}

		[Token(Token = "0x6001D5A")]
		[Address(RVA = "0xAE2758", Offset = "0xAE2758", VA = "0xAE2758")]
		public CharacterReactorInteractive()
		{
		}

		[Token(Token = "0x6001D5B")]
		[Address(RVA = "0xAE27BC", Offset = "0xAE27BC", VA = "0xAE27BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D8D0", Offset = "0x93D8D0")]
		private void <TryPlayBanterWithCallback>b__1_0(bool success)
		{
		}
	}
	[Token(Token = "0x20003A6")]
	public class CharacterTetherHandler : MonoBehaviour
	{
		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_enableTethered;

		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_shouldTeleportCompanion;

		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[SerializeField]
		private bool m_setCustomActiveCharacter;

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private CharacterType m_activeCharacterType;

		[Token(Token = "0x1700036D")]
		private bool ShouldTeleportCompanion
		{
			[Token(Token = "0x6001D5C")]
			[Address(RVA = "0xAE297C", Offset = "0xAE297C", VA = "0xAE297C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0xAE299C", Offset = "0xAE299C", VA = "0xAE299C")]
		public void ForceSetTetheredState(PlayableCharacter characterControl)
		{
		}

		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0xAE2AE8", Offset = "0xAE2AE8", VA = "0xAE2AE8")]
		public void SetTetheredState(PlayableCharacter characterControl)
		{
		}

		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0xAE2C60", Offset = "0xAE2C60", VA = "0xAE2C60")]
		public void SetTetheredState()
		{
		}

		[Token(Token = "0x6001D60")]
		[Address(RVA = "0xAE2D2C", Offset = "0xAE2D2C", VA = "0xAE2D2C")]
		public CharacterTetherHandler()
		{
		}
	}
	[Token(Token = "0x20003A7")]
	public class CharacterTetherModifier : MonoBehaviour
	{
		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_resetFollow;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x93576C", Offset = "0x93576C")]
		private float m_followMaxDistance;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9357B0", Offset = "0x9357B0")]
		private float m_followMinDistance;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private readonly MathUtils.MinMax m_minMaxFollowDistance;

		[Token(Token = "0x6001D61")]
		[Address(RVA = "0xAE2D44", Offset = "0xAE2D44", VA = "0xAE2D44")]
		private CharacterTetherModifier()
		{
		}

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0xAE2D98", Offset = "0xAE2D98", VA = "0xAE2D98")]
		public void ModifyTetheredValues(PlayableCharacter characterControl)
		{
		}
	}
	[Token(Token = "0x20003A8")]
	public class CompanionCatcherUpper : MonoBehaviour
	{
		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Cortopia.Scripts.Rooms.RoomType m_roomType;

		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_teleportTransform;

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_maxDistance;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private NavMeshPath m_path;

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0xAE2E68", Offset = "0xAE2E68", VA = "0xAE2E68")]
		public void TryTeleport(PlayableCharacter character)
		{
		}

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0xAE31DC", Offset = "0xAE31DC", VA = "0xAE31DC")]
		public CompanionCatcherUpper()
		{
		}
	}
	[Token(Token = "0x20003A9")]
	public class DestinationSetter : MonoBehaviour
	{
		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_destinationTransform;

		[Token(Token = "0x6001D65")]
		[Address(RVA = "0xAE31EC", Offset = "0xAE31EC", VA = "0xAE31EC")]
		public void OverrideDestination()
		{
		}

		[Token(Token = "0x6001D66")]
		[Address(RVA = "0xAE32E4", Offset = "0xAE32E4", VA = "0xAE32E4")]
		public void OverrideDestination(PlayableCharacter character)
		{
		}

		[Token(Token = "0x6001D67")]
		[Address(RVA = "0xAE337C", Offset = "0xAE337C", VA = "0xAE337C")]
		public void SetDestination()
		{
		}

		[Token(Token = "0x6001D68")]
		[Address(RVA = "0xAE3404", Offset = "0xAE3404", VA = "0xAE3404")]
		public void SetDestination(PlayableCharacter character)
		{
		}

		[Token(Token = "0x6001D69")]
		[Address(RVA = "0xAE350C", Offset = "0xAE350C", VA = "0xAE350C")]
		public DestinationSetter()
		{
		}
	}
	[Token(Token = "0x20003AA")]
	public class DialogueHandler : MonoBehaviour
	{
		[Token(Token = "0x20005FE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x928050", Offset = "0x928050")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x40021D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DialogueHandler <>4__this;

			[Token(Token = "0x40021D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PlayableCharacter character;

			[Token(Token = "0x40021D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action <>9__1;

			[Token(Token = "0x60027D6")]
			[Address(RVA = "0xAE371C", Offset = "0xAE371C", VA = "0xAE371C")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x60027D7")]
			[Address(RVA = "0xAE384C", Offset = "0xAE384C", VA = "0xAE384C")]
			internal void <StartDialogue>b__0()
			{
			}

			[Token(Token = "0x60027D8")]
			[Address(RVA = "0xAE3C54", Offset = "0xAE3C54", VA = "0xAE3C54")]
			internal void <StartDialogue>b__1()
			{
			}
		}

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform m_zoomInPoint;

		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_subtitleAnchorPoint;

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x935854", Offset = "0x935854")]
		[SerializeField]
		private Transform m_companionTeleportPoint;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9358A0", Offset = "0x9358A0")]
		[SerializeField]
		private BehaviourSystem m_dialogue;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9358EC", Offset = "0x9358EC")]
		[SerializeField]
		private PlayableCharacterEvent m_onDialogueStart;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x935938", Offset = "0x935938")]
		private PlayableCharacterEvent m_onDialogueCompleted;

		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0xAE3514", Offset = "0xAE3514", VA = "0xAE3514")]
		public void StartDialogue(PlayableCharacter character)
		{
		}

		[Token(Token = "0x6001D6B")]
		[Address(RVA = "0xAE3724", Offset = "0xAE3724", VA = "0xAE3724", Slot = "4")]
		protected virtual void OnDialogueCompleted(PlayableCharacter character)
		{
		}

		[Token(Token = "0x6001D6C")]
		[Address(RVA = "0xAE37C4", Offset = "0xAE37C4", VA = "0xAE37C4")]
		public DialogueHandler()
		{
		}
	}
	[Token(Token = "0x20003AB")]
	public class DominoBellRinger : MonoBehaviour, IIdentifiableSavable, ISavable
	{
		[Token(Token = "0x20005FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x928060", Offset = "0x928060")]
		private sealed class <Ring>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DominoBellRinger <>4__this;

			[Token(Token = "0x40021D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int bellValue;

			[Token(Token = "0x170004FA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027DC")]
				[Address(RVA = "0xAE4444", Offset = "0xAE4444", VA = "0xAE4444", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004FB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027DE")]
				[Address(RVA = "0xAE44B4", Offset = "0xAE44B4", VA = "0xAE44B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027D9")]
			[Address(RVA = "0xAE404C", Offset = "0xAE404C", VA = "0xAE404C")]
			[DebuggerHidden]
			public <Ring>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x60027DA")]
			[Address(RVA = "0xAE41D0", Offset = "0xAE41D0", VA = "0xAE41D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027DB")]
			[Address(RVA = "0xAE41D4", Offset = "0xAE41D4", VA = "0xAE41D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027DD")]
			[Address(RVA = "0xAE444C", Offset = "0xAE444C", VA = "0xAE444C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int sm_parameterRing;

		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int sm_parameterBellHit;

		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		private string m_guid;

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9359BC", Offset = "0x9359BC")]
		private int m_bellCount;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool m_isCoolDownEnabled;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		[SerializeField]
		private bool m_sendEventWhenPoked;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Renderer m_meshRenderer;

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Material m_defaultMaterial;

		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Material m_ringingMaterial;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private SoundEffectPlayer m_sfx;

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UnityEvent m_onCooldownComplete;

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SavableBool m_isCoolingDown;

		[Token(Token = "0x1700036E")]
		public string Guid
		{
			[Token(Token = "0x6001D6D")]
			[Address(RVA = "0xAE3C8C", Offset = "0xAE3C8C", VA = "0xAE3C8C", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D6E")]
			[Address(RVA = "0xAE3C94", Offset = "0xAE3C94", VA = "0xAE3C94", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0xAE3C9C", Offset = "0xAE3C9C", VA = "0xAE3C9C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D70")]
		[Address(RVA = "0xAE3CA4", Offset = "0xAE3CA4", VA = "0xAE3CA4", Slot = "6")]
		public void Serialize(IWriteSave write)
		{
		}

		[Token(Token = "0x6001D71")]
		[Address(RVA = "0xAE3D8C", Offset = "0xAE3D8C", VA = "0xAE3D8C", Slot = "7")]
		public void Deserialize(IReadSave read)
		{
		}

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0xAE3F00", Offset = "0xAE3F00", VA = "0xAE3F00")]
		public void SetEventActive(bool active)
		{
		}

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0xAE3F0C", Offset = "0xAE3F0C", VA = "0xAE3F0C")]
		public void RingBell(int bellValue)
		{
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0xAE3FB4", Offset = "0xAE3FB4", VA = "0xAE3FB4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93D8E0", Offset = "0x93D8E0")]
		private IEnumerator Ring(int bellValue)
		{
			return null;
		}

		[Token(Token = "0x6001D75")]
		[Address(RVA = "0xAE3EAC", Offset = "0xAE3EAC", VA = "0xAE3EAC")]
		private void CooldownCompleted()
		{
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0xAE4078", Offset = "0xAE4078", VA = "0xAE4078")]
		private void SetMaterial(Material material)
		{
		}

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0xAE40B0", Offset = "0xAE40B0", VA = "0xAE40B0")]
		public DominoBellRinger()
		{
		}
	}
	[Token(Token = "0x20003AC")]
	public class EventRaiser : MonoBehaviour
	{
		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ScriptableVariable m_variable;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ScriptableEvent m_interactEvent;

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0xAE44BC", Offset = "0xAE44BC", VA = "0xAE44BC")]
		public void RaiseEvent()
		{
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0xAE44F0", Offset = "0xAE44F0", VA = "0xAE44F0")]
		public EventRaiser()
		{
		}
	}
	[Token(Token = "0x20003AD")]
	public class HatterDialogue : DialogueHandler
	{
		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x935A9C", Offset = "0x935A9C")]
		[SerializeField]
		private IntVariable m_hatterResponseIndex;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private BiomeLoader m_biomeLoader;

		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0xAE44F8", Offset = "0xAE44F8", VA = "0xAE44F8", Slot = "4")]
		protected override void OnDialogueCompleted(PlayableCharacter character)
		{
		}

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0xAE4660", Offset = "0xAE4660", VA = "0xAE4660")]
		private bool IsActiveCharacterPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0xAE4778", Offset = "0xAE4778", VA = "0xAE4778")]
		private void CompareDialogueChoice()
		{
		}

		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0xAE4884", Offset = "0xAE4884", VA = "0xAE4884")]
		public HatterDialogue()
		{
		}

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0xAE4888", Offset = "0xAE4888", VA = "0xAE4888")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D944", Offset = "0x93D944")]
		private void <CompareDialogueChoice>b__4_0()
		{
		}
	}
	[Token(Token = "0x20003AE")]
	public class InteractionSplitter : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000600")]
		public struct CharacterInteraction
		{
			[Token(Token = "0x40021D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public CharacterType CharacterTarget;

			[Token(Token = "0x40021D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public PlayableCharacterEvent OnInteract;
		}

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x935AF8", Offset = "0x935AF8")]
		[SerializeField]
		private VoiceLineCollection m_interactionFailedResponse;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_treatFailedResponseAsBanter;

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CharacterInteraction[] m_characterInteractions;

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0xAE48B4", Offset = "0xAE48B4", VA = "0xAE48B4")]
		public void TryInteract()
		{
		}

		[Token(Token = "0x6001D81")]
		[Address(RVA = "0xAE49C8", Offset = "0xAE49C8", VA = "0xAE49C8")]
		public void Interact(PlayableCharacter characterControl)
		{
		}

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0xAE4B58", Offset = "0xAE4B58", VA = "0xAE4B58")]
		private void PlayInteractionFailedResponse(CharacterData character, Voice voice)
		{
		}

		[Token(Token = "0x6001D83")]
		[Address(RVA = "0xAE4C64", Offset = "0xAE4C64", VA = "0xAE4C64")]
		public InteractionSplitter()
		{
		}
	}
	[Token(Token = "0x20003AF")]
	public class InvitationPickupReaction : MonoBehaviour
	{
		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private VoiceLineCollection m_invitationPickupVO;

		[Token(Token = "0x6001D84")]
		[Address(RVA = "0xAE4CC4", Offset = "0xAE4CC4", VA = "0xAE4CC4")]
		public void TrySpeak(PlayableCharacter character)
		{
		}

		[Token(Token = "0x6001D85")]
		[Address(RVA = "0xAE5128", Offset = "0xAE5128", VA = "0xAE5128")]
		public InvitationPickupReaction()
		{
		}
	}
	[Token(Token = "0x20003B0")]
	public class RoomBlockerDisabler : MonoBehaviour
	{
		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Cortopia.Scripts.Rooms.RoomType m_roomType;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool m_disableAllBlockers;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int m_blockerIndex;

		[Token(Token = "0x6001D86")]
		[Address(RVA = "0xAE5130", Offset = "0xAE5130", VA = "0xAE5130")]
		public void DisableBlocker()
		{
		}

		[Token(Token = "0x6001D87")]
		[Address(RVA = "0xAE51E0", Offset = "0xAE51E0", VA = "0xAE51E0")]
		public RoomBlockerDisabler()
		{
		}
	}
	[Token(Token = "0x20003B1")]
	public class RoomBlockerEnabler : MonoBehaviour
	{
		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Cortopia.Scripts.Rooms.RoomType m_roomType;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int m_blockerIndex;

		[Token(Token = "0x6001D88")]
		[Address(RVA = "0xAE51E8", Offset = "0xAE51E8", VA = "0xAE51E8")]
		public void EnableBlocker()
		{
		}

		[Token(Token = "0x6001D89")]
		[Address(RVA = "0xAE527C", Offset = "0xAE527C", VA = "0xAE527C")]
		public RoomBlockerEnabler()
		{
		}
	}
	[Token(Token = "0x20003B2")]
	public class RoomLoader : MonoBehaviour
	{
		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Cortopia.Scripts.Rooms.RoomType m_roomType;

		[Token(Token = "0x6001D8A")]
		[Address(RVA = "0xAE5284", Offset = "0xAE5284", VA = "0xAE5284")]
		public void LoadRoom()
		{
		}

		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0xAE5308", Offset = "0xAE5308", VA = "0xAE5308")]
		public RoomLoader()
		{
		}
	}
	[Token(Token = "0x20003B3")]
	public class RoomTransitioner : MonoBehaviour
	{
		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Cortopia.Scripts.Rooms.RoomType m_roomType;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool m_disableAllBlockers;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int m_blockerIndex;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool m_manuallySetRoomActive;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PlayableCharacterData[] m_playableCharacterData;

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0xAE5310", Offset = "0xAE5310", VA = "0xAE5310")]
		public void SetRoomActive(PlayableCharacter character)
		{
		}

		[Token(Token = "0x6001D8D")]
		[Address(RVA = "0xAE5480", Offset = "0xAE5480", VA = "0xAE5480")]
		public void SetRoomActiveCharacterData()
		{
		}

		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0xAE5638", Offset = "0xAE5638", VA = "0xAE5638")]
		public RoomTransitioner()
		{
		}
	}
	[Token(Token = "0x20003B4")]
	public class StairsMirrorTransition : InteractableObject
	{
		[Token(Token = "0x2000601")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x928070", Offset = "0x928070")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x40021D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public StairsMirrorTransition <>4__this;

			[Token(Token = "0x40021DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public PlayableCharacter character;

			[Token(Token = "0x40021DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action <>9__1;

			[Token(Token = "0x60027DF")]
			[Address(RVA = "0xAE5984", Offset = "0xAE5984", VA = "0xAE5984")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x60027E0")]
			[Address(RVA = "0xAE5A44", Offset = "0xAE5A44", VA = "0xAE5A44")]
			internal void <Interact>b__0(bool success)
			{
			}

			[Token(Token = "0x60027E1")]
			[Address(RVA = "0xAE5BBC", Offset = "0xAE5BBC", VA = "0xAE5BBC")]
			internal void <Interact>b__1()
			{
			}
		}

		[Token(Token = "0x4001682")]
		private const float SfxHandlerEnableWait = 0.25f;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x935C24", Offset = "0x935C24")]
		[SerializeField]
		protected Transform m_destinationTransform;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private ScriptableEvent m_onDestinationReachedEvent;

		[Token(Token = "0x6001D8F")]
		[Address(RVA = "0xAE5698", Offset = "0xAE5698", VA = "0xAE5698", Slot = "14")]
		public override void Interact()
		{
		}

		[Token(Token = "0x6001D90")]
		[Address(RVA = "0xAE57FC", Offset = "0xAE57FC", VA = "0xAE57FC", Slot = "19")]
		public override void Interact(PlayableCharacter character)
		{
		}

		[Token(Token = "0x6001D91")]
		[Address(RVA = "0xAE598C", Offset = "0xAE598C", VA = "0xAE598C")]
		public StairsMirrorTransition()
		{
		}

		[Token(Token = "0x6001D92")]
		[Address(RVA = "0xAE5990", Offset = "0xAE5990", VA = "0xAE5990")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D954", Offset = "0x93D954")]
		private void <Interact>b__3_0(bool success)
		{
		}
	}
	[Token(Token = "0x20003B5")]
	public class ValueCounter : RoomBehaviour
	{
		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private IntVariable m_value;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_allowNegativeValue;

		[Token(Token = "0x6001D93")]
		[Address(RVA = "0xAE5BF0", Offset = "0xAE5BF0", VA = "0xAE5BF0", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6001D94")]
		[Address(RVA = "0xAE5C24", Offset = "0xAE5C24", VA = "0xAE5C24")]
		public void Add(int addOnValue)
		{
		}

		[Token(Token = "0x6001D95")]
		[Address(RVA = "0xAE5C90", Offset = "0xAE5C90", VA = "0xAE5C90")]
		public void Remove(int removeValue)
		{
		}

		[Token(Token = "0x6001D96")]
		[Address(RVA = "0xAE5D58", Offset = "0xAE5D58", VA = "0xAE5D58")]
		public ValueCounter()
		{
		}
	}
}
namespace Cortopia.Scripts.Interactions.Grabbables
{
	[Token(Token = "0x20003B6")]
	public class ButterflyHandle : RootHandle, IScriptableEventListener, IIdentifiableSavable, ISavable
	{
		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly int m_parameterIdleSpeed;

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private readonly int m_parameterSpawnTrigger;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly int m_parameterIdleStateName;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x935CA0", Offset = "0x935CA0")]
		[SerializeField]
		private string m_guid;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x935CEC", Offset = "0x935CEC")]
		[SerializeField]
		private float m_spawnDelay;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ScriptableEvent m_scriptableEvent;

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_hasTriggered;

		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float m_idleFloat;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SavableAnimationFloat m_animationSavableData;

		[Token(Token = "0x1700036F")]
		public string Guid
		{
			[Token(Token = "0x6001D97")]
			[Address(RVA = "0xB33DFC", Offset = "0xB33DFC", VA = "0xB33DFC", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D98")]
			[Address(RVA = "0xB33E04", Offset = "0xB33E04", VA = "0xB33E04", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x6001D99")]
		[Address(RVA = "0xB33E0C", Offset = "0xB33E0C", VA = "0xB33E0C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001D9A")]
		[Address(RVA = "0xB33E40", Offset = "0xB33E40", VA = "0xB33E40")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001D9B")]
		[Address(RVA = "0xB33E74", Offset = "0xB33E74", VA = "0xB33E74", Slot = "9")]
		public void Serialize(IWriteSave save)
		{
		}

		[Token(Token = "0x6001D9C")]
		[Address(RVA = "0xB33FA4", Offset = "0xB33FA4", VA = "0xB33FA4", Slot = "10")]
		public void Deserialize(IReadSave save)
		{
		}

		[Token(Token = "0x6001D9D")]
		[Address(RVA = "0xB34130", Offset = "0xB34130", VA = "0xB34130", Slot = "6")]
		public void OnEventRaised(ScriptableVariable eventData)
		{
		}

		[Token(Token = "0x6001D9E")]
		[Address(RVA = "0xB34134", Offset = "0xB34134", VA = "0xB34134")]
		private void InitilizeSpawn()
		{
		}

		[Token(Token = "0x6001D9F")]
		[Address(RVA = "0xB342AC", Offset = "0xB342AC", VA = "0xB342AC")]
		private void TriggerAnimation()
		{
		}

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0xB342FC", Offset = "0xB342FC", VA = "0xB342FC")]
		public ButterflyHandle()
		{
		}
	}
	[Token(Token = "0x20003B7")]
	public class Cookie : MonoBehaviour
	{
		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Grabbable m_grabbable;

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_despawnThresholdY;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SoundEffectPlayer m_soundEffectPlayer;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x935D88", Offset = "0x935D88")]
		private bool <IsAvailable>k__BackingField;

		[Token(Token = "0x17000370")]
		public Rigidbody Rigidbody
		{
			[Token(Token = "0x6001DA1")]
			[Address(RVA = "0xB343AC", Offset = "0xB343AC", VA = "0xB343AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000371")]
		public bool IsAvailable
		{
			[Token(Token = "0x6001DA2")]
			[Address(RVA = "0xB343D8", Offset = "0xB343D8", VA = "0xB343D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D964", Offset = "0x93D964")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001DA3")]
			[Address(RVA = "0xB343E0", Offset = "0xB343E0", VA = "0xB343E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D974", Offset = "0x93D974")]
			private set
			{
			}
		}

		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0xB343EC", Offset = "0xB343EC", VA = "0xB343EC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0xB34448", Offset = "0xB34448", VA = "0xB34448")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0xB344D8", Offset = "0xB344D8", VA = "0xB344D8")]
		public void SetAvailable(bool isAvailable)
		{
		}

		[Token(Token = "0x6001DA7")]
		[Address(RVA = "0xB3460C", Offset = "0xB3460C", VA = "0xB3460C")]
		public void EnableCookie()
		{
		}

		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0xB344A0", Offset = "0xB344A0", VA = "0xB344A0")]
		public void DisableCookie()
		{
		}

		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0xB34668", Offset = "0xB34668", VA = "0xB34668")]
		public void DisableGrabber()
		{
		}

		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0xB346A4", Offset = "0xB346A4", VA = "0xB346A4")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0xB346D4", Offset = "0xB346D4", VA = "0xB346D4")]
		public Cookie()
		{
		}
	}
	[Token(Token = "0x20003B8")]
	public class CrankHandle : RoomBehaviour
	{
		[Token(Token = "0x2000602")]
		private enum InterpolationDirection
		{
			[Token(Token = "0x40021DD")]
			None,
			[Token(Token = "0x40021DE")]
			Start,
			[Token(Token = "0x40021DF")]
			End
		}

		[Token(Token = "0x2000603")]
		private struct AudioConstants
		{
			[Token(Token = "0x40021E0")]
			public const float MinRotationAngleThreshold = 0.25f;

			[Token(Token = "0x40021E1")]
			public const float MaxAudioPlayThreshold = 0.15f;
		}

		[Token(Token = "0x4001695")]
		private const float MaxRotationSnapValue = 0.9f;

		[Token(Token = "0x4001696")]
		private const float MinRotationSnapValue = 0.05f;

		[Token(Token = "0x4001697")]
		private const float InterpValueSpeed = 0.001f;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private FloatVariable m_rotationProgress;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_limitNumberOfRotations;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x935DB8", Offset = "0x935DB8")]
		private int m_maxRotations;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x935DF8", Offset = "0x935DF8")]
		[SerializeField]
		private Grabbable m_grabbable;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform m_resetTransform;

		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform m_graphicsPivot;

		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Transform m_rotationPivot;

		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource m_audioSource;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private SoundEffect m_onSnapToEndSound;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private HapticClip m_snapToEndHaptic;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x935EA4", Offset = "0x935EA4")]
		[SerializeField]
		private Vector3 m_rotationAxis;

		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float m_handleOffset;

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool m_clockWiseIsPositive;

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x935F10", Offset = "0x935F10")]
		[SerializeField]
		private bool m_isGrabbed;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		[SerializeField]
		private bool m_isTrackingOtherHandle;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7B")]
		private bool m_interpolateToEndPosition;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private InterpolationDirection m_interpolationDirection;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Quaternion m_previousRotation;

		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float m_currentRotatedAngle;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float m_audioPlayThreshold;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float m_previousAngle;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float m_currentAngle;

		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float m_rotationInDegrees;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float m_maxTargetRotateDegrees;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float m_floatValueChange;

		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0xADA7D4", Offset = "0xADA7D4", VA = "0xADA7D4")]
		private bool IsApplicationNotPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0xADA7F4", Offset = "0xADA7F4", VA = "0xADA7F4", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0xADAEF8", Offset = "0xADAEF8", VA = "0xADAEF8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001DAF")]
		[Address(RVA = "0xADAF00", Offset = "0xADAF00", VA = "0xADAF00")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DB0")]
		[Address(RVA = "0xADB178", Offset = "0xADB178", VA = "0xADB178")]
		public void GrabBegin(Grabber grabber)
		{
		}

		[Token(Token = "0x6001DB1")]
		[Address(RVA = "0xADB1C0", Offset = "0xADB1C0", VA = "0xADB1C0")]
		public void GrabEnd(Grabber grabber, Vector3 velocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6001DB2")]
		[Address(RVA = "0xADB1FC", Offset = "0xADB1FC", VA = "0xADB1FC")]
		public void SetGrabbableActive(bool active)
		{
		}

		[Token(Token = "0x6001DB3")]
		[Address(RVA = "0xADADD4", Offset = "0xADADD4", VA = "0xADADD4")]
		private void ResetPosition()
		{
		}

		[Token(Token = "0x6001DB4")]
		[Address(RVA = "0xADA8D8", Offset = "0xADA8D8", VA = "0xADA8D8")]
		private void UpdateRotation()
		{
		}

		[Token(Token = "0x6001DB5")]
		[Address(RVA = "0xADB414", Offset = "0xADB414", VA = "0xADB414")]
		private void TryStartInterpolateSplineValue(InterpolationDirection direction)
		{
		}

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0xADB010", Offset = "0xADB010", VA = "0xADB010")]
		private void InterpolateToEndPosition()
		{
		}

		[Token(Token = "0x6001DB7")]
		[Address(RVA = "0xADB2BC", Offset = "0xADB2BC", VA = "0xADB2BC")]
		private void NormalizePreviousAngle()
		{
		}

		[Token(Token = "0x6001DB8")]
		[Address(RVA = "0xADB324", Offset = "0xADB324", VA = "0xADB324")]
		private void TryLimitRotation()
		{
		}

		[Token(Token = "0x6001DB9")]
		[Address(RVA = "0xADAD5C", Offset = "0xADAD5C", VA = "0xADAD5C")]
		private void UpdateGraphics()
		{
		}

		[Token(Token = "0x6001DBA")]
		[Address(RVA = "0xADAF50", Offset = "0xADAF50", VA = "0xADAF50")]
		private void UpdateAudio()
		{
		}

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0xADB654", Offset = "0xADB654", VA = "0xADB654")]
		private void TryPlayAudio()
		{
		}

		[Token(Token = "0x6001DBC")]
		[Address(RVA = "0xADB1C8", Offset = "0xADB1C8", VA = "0xADB1C8")]
		private void StopAudio()
		{
		}

		[Token(Token = "0x6001DBD")]
		[Address(RVA = "0xADB730", Offset = "0xADB730", VA = "0xADB730")]
		public CrankHandle()
		{
		}
	}
	[Token(Token = "0x20003B9")]
	public class DoorKnob : SaveObject
	{
		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_isGrabbed;

		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Rigidbody m_knobRigidbody;

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform m_hingeTransform;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x935F9C", Offset = "0x935F9C")]
		[SerializeField]
		private VectorAxisType m_compareAxis;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Condition m_interactableActivationCondition;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x935FF8", Offset = "0x935FF8")]
		[SerializeField]
		private InteractableObject[] m_interactables;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_isInteractablesActive;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 m_graphicsDefaultPosition;

		[Token(Token = "0x6001DBE")]
		[Address(RVA = "0xADB7C8", Offset = "0xADB7C8", VA = "0xADB7C8")]
		private bool IsApplicationNotPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DBF")]
		[Address(RVA = "0xADB7E8", Offset = "0xADB7E8", VA = "0xADB7E8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001DC0")]
		[Address(RVA = "0xADB91C", Offset = "0xADB91C", VA = "0xADB91C", Slot = "9")]
		public override void Serialize(IWriteSave save)
		{
		}

		[Token(Token = "0x6001DC1")]
		[Address(RVA = "0xADBA74", Offset = "0xADBA74", VA = "0xADBA74", Slot = "8")]
		public override void Deserialize(IReadSave save)
		{
		}

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0xADBC68", Offset = "0xADBC68", VA = "0xADBC68")]
		public void GrabBegin(Grabber grabber)
		{
		}

		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0xADBC74", Offset = "0xADBC74", VA = "0xADBC74")]
		public void GrabEnd(Grabber grabber, Vector3 velocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6001DC4")]
		[Address(RVA = "0xADBC7C", Offset = "0xADBC7C", VA = "0xADBC7C")]
		private void ResetPosition()
		{
		}

		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0xADB824", Offset = "0xADB824", VA = "0xADB824")]
		private void UpdateGraphics()
		{
		}

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0xADB89C", Offset = "0xADB89C", VA = "0xADB89C")]
		private void CheckInteractableCondition()
		{
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0xADBF3C", Offset = "0xADBF3C", VA = "0xADBF3C")]
		private void SetInteractablesActive(bool active)
		{
		}

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0xADBE00", Offset = "0xADBE00", VA = "0xADBE00")]
		private float GetAxisValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0xADBFD4", Offset = "0xADBFD4", VA = "0xADBFD4")]
		public DoorKnob()
		{
		}
	}
	[Token(Token = "0x20003BA")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x9271A8", Offset = "0x9271A8")]
	public class MagicDrawer : MonoBehaviour
	{
		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		private Grabbable m_grabbable;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ObjectTransformable m_objectTransformable;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x93608C", Offset = "0x93608C")]
		[SerializeField]
		private UnityEvent m_onMaxPositionReached;

		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0xADC03C", Offset = "0xADC03C", VA = "0xADC03C")]
		public void SetInteractable(bool interactable)
		{
		}

		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0xADC074", Offset = "0xADC074", VA = "0xADC074")]
		public void OnGrab(Grabber grabber)
		{
		}

		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0xADC230", Offset = "0xADC230", VA = "0xADC230")]
		public void UpdatePosition(MinMaxType valueType)
		{
		}

		[Token(Token = "0x6001DCD")]
		[Address(RVA = "0xADC1EC", Offset = "0xADC1EC", VA = "0xADC1EC")]
		private void UpdateScale(float t)
		{
		}

		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0xADC40C", Offset = "0xADC40C", VA = "0xADC40C")]
		public MagicDrawer()
		{
		}
	}
	[Token(Token = "0x20003BB")]
	public class MagicDrawerHandler : RoomBehaviour
	{
		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MagicDrawer[] m_grabbableDrawers;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ObjectTransformable[] m_objectTransformables;

		[Token(Token = "0x6001DCF")]
		[Address(RVA = "0xADC474", Offset = "0xADC474", VA = "0xADC474", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0xADC630", Offset = "0xADC630", VA = "0xADC630", Slot = "4")]
		public override void SetActive(bool active)
		{
		}

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0xADC4A4", Offset = "0xADC4A4", VA = "0xADC4A4")]
		private void SetDrawersActive(bool active, int interactableIndex = 0)
		{
		}

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0xADC5A0", Offset = "0xADC5A0", VA = "0xADC5A0")]
		private void SetTransformablesOpened(bool open)
		{
		}

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0xADC678", Offset = "0xADC678", VA = "0xADC678")]
		private void TweenCloseMagicDrawers()
		{
		}

		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0xADC74C", Offset = "0xADC74C", VA = "0xADC74C")]
		public MagicDrawerHandler()
		{
		}
	}
	[Token(Token = "0x20003BC")]
	public class RootHandle : RoomBehaviour
	{
		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject m_grabbableObject;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform m_rootTransform;

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x936118", Offset = "0x936118")]
		[SerializeField]
		private SoundEffect m_soundEffectGrab;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PlayerControl m_playerControl;

		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0xADC7C4", Offset = "0xADC7C4", VA = "0xADC7C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0xADC8E8", Offset = "0xADC8E8", VA = "0xADC8E8", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0xADC9D4", Offset = "0xADC9D4", VA = "0xADC9D4")]
		public void GrabBegin(Grabber activatedGrabber)
		{
		}

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0xADCAE4", Offset = "0xADCAE4", VA = "0xADCAE4")]
		public void GrabEnd(Grabber activatedGrabber, Vector3 velocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0xADC838", Offset = "0xADC838", VA = "0xADC838")]
		private void SetGrabbableObjectActive(bool active)
		{
		}

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0xADCB1C", Offset = "0xADCB1C", VA = "0xADCB1C")]
		public RootHandle()
		{
		}
	}
}
namespace Cortopia.Scripts.Animation
{
	[Token(Token = "0x20003BD")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x92720C", Offset = "0x92720C")]
	public class AnimationData : ScriptableObject
	{
		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x936164", Offset = "0x936164")]
		[SerializeField]
		public string ParameterName;

		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public AnimatorParameterType ParameterType;

		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		public float FloatValue;

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public int IntValue;

		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		public bool BoolValue;

		[Token(Token = "0x6001DDB")]
		[Address(RVA = "0xB3E010", Offset = "0xB3E010", VA = "0xB3E010")]
		public void TriggerAnimator(Animator animator)
		{
		}

		[Token(Token = "0x6001DDC")]
		[Address(RVA = "0xB39F40", Offset = "0xB39F40", VA = "0xB39F40")]
		public static AnimationData CreateInstance(string parameterName, AnimatorParameterType parameterType, float floatValue = 0f, int intValue = 0, bool boolValue = false)
		{
			return null;
		}

		[Token(Token = "0x6001DDD")]
		[Address(RVA = "0xB3E224", Offset = "0xB3E224", VA = "0xB3E224")]
		public AnimationData()
		{
		}
	}
	[Token(Token = "0x20003BE")]
	public class AnimationEventListener : MonoBehaviour
	{
		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UnityEvent[] m_onAnimationEventTriggered;

		[Token(Token = "0x6001DDE")]
		[Address(RVA = "0xB3E73C", Offset = "0xB3E73C", VA = "0xB3E73C")]
		public void TriggerCustomEvent(int eventIndex)
		{
		}

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0xB3E7DC", Offset = "0xB3E7DC", VA = "0xB3E7DC")]
		public void DisableGameObject()
		{
		}

		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0xB3E814", Offset = "0xB3E814", VA = "0xB3E814")]
		public AnimationEventListener()
		{
		}
	}
	[Token(Token = "0x20003BF")]
	public class AnimationEventParticles : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000604")]
		private struct ParticleEvent
		{
			[Token(Token = "0x40021E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string ID;

			[Token(Token = "0x40021E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public ParticleSystem ParticleSystem;
		}

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ParticleEvent[] m_particleEvents;

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0xB3E874", Offset = "0xB3E874", VA = "0xB3E874")]
		public void PlayParticleSystem(string particleID, bool includeChilden)
		{
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0xB3E91C", Offset = "0xB3E91C", VA = "0xB3E91C")]
		public void StopParticleSystem(string particleID, bool includeChildren, ParticleSystemStopBehavior stopBehaviour)
		{
		}

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0xB3E9CC", Offset = "0xB3E9CC", VA = "0xB3E9CC")]
		public AnimationEventParticles()
		{
		}
	}
	[Token(Token = "0x20003C0")]
	public class AnimationHandler : MonoBehaviour
	{
		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x936210", Offset = "0x936210")]
		[SerializeField]
		protected Transform m_rootBone;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x93625C", Offset = "0x93625C")]
		[SerializeField]
		protected Animator m_mainAnimator;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected Animator[] m_slaveAnimators;

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0xB3EA2C", Offset = "0xB3EA2C", VA = "0xB3EA2C")]
		public float GetFloatParameter(int hash)
		{
			return default(float);
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0xB3EA64", Offset = "0xB3EA64", VA = "0xB3EA64")]
		public void SetFloatParameter(int hash, float value)
		{
		}

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0xB3EB28", Offset = "0xB3EB28", VA = "0xB3EB28")]
		public bool GetBoolParameter(int hash)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0xB3EB60", Offset = "0xB3EB60", VA = "0xB3EB60")]
		public void SetBoolParameter(int hash, bool value)
		{
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0xB3EC24", Offset = "0xB3EC24", VA = "0xB3EC24")]
		public int GetIntParameter(int hash)
		{
			return default(int);
		}

		[Token(Token = "0x6001DE9")]
		[Address(RVA = "0xB3EC5C", Offset = "0xB3EC5C", VA = "0xB3EC5C")]
		public void SetIntParameter(int hash, int value)
		{
		}

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0xB3ED20", Offset = "0xB3ED20", VA = "0xB3ED20")]
		public void SetTriggerParameter(int hash, bool reset)
		{
		}

		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0xB3EE58", Offset = "0xB3EE58", VA = "0xB3EE58")]
		public AnimationHandler()
		{
		}
	}
	[Token(Token = "0x20003C1")]
	public enum AnimatorParameterType
	{
		[Token(Token = "0x40016CD")]
		Trigger,
		[Token(Token = "0x40016CE")]
		Bool,
		[Token(Token = "0x40016CF")]
		Int,
		[Token(Token = "0x40016D0")]
		Float
	}
	[Token(Token = "0x20003C2")]
	public class ButterflyAnimation : MonoBehaviour
	{
		[Token(Token = "0x2000605")]
		private struct AnimatorParameters
		{
			[Token(Token = "0x40021E4")]
			public const string FlyingSpeed = "Speed";

			[Token(Token = "0x40021E5")]
			public const string IsFlying = "IsFlying";

			[Token(Token = "0x40021E6")]
			public const string AnimationSpeed = "AnimationSpeed";

			[Token(Token = "0x40021E7")]
			public const string IdleFlip = "Flip";
		}

		[Token(Token = "0x2000606")]
		private struct DefaultSettings
		{
			[Token(Token = "0x40021E8")]
			public const float MinAnimationSpeed = 0.95f;

			[Token(Token = "0x40021E9")]
			public const float MaxAnimationSpeed = 1.05f;
		}

		[Token(Token = "0x2000607")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x928080", Offset = "0x928080")]
		private sealed class <AnimateFloatParameterOvertime>d__24 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Animator animator;

			[Token(Token = "0x40021ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string parameter;

			[Token(Token = "0x40021EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float endFloatValue;

			[Token(Token = "0x40021EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float time;

			[Token(Token = "0x40021F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public ButterflyAnimation <>4__this;

			[Token(Token = "0x40021F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startFloatValue>5__2;

			[Token(Token = "0x40021F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <elapsedTime>5__3;

			[Token(Token = "0x170004FC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027E5")]
				[Address(RVA = "0xB3FC40", Offset = "0xB3FC40", VA = "0xB3FC40", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004FD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027E7")]
				[Address(RVA = "0xB3FCB0", Offset = "0xB3FCB0", VA = "0xB3FCB0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027E2")]
			[Address(RVA = "0xB3F884", Offset = "0xB3F884", VA = "0xB3F884")]
			[DebuggerHidden]
			public <AnimateFloatParameterOvertime>d__24(int <>1__state)
			{
			}

			[Token(Token = "0x60027E3")]
			[Address(RVA = "0xB3FAB0", Offset = "0xB3FAB0", VA = "0xB3FAB0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027E4")]
			[Address(RVA = "0xB3FAB4", Offset = "0xB3FAB4", VA = "0xB3FAB4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027E6")]
			[Address(RVA = "0xB3FC48", Offset = "0xB3FC48", VA = "0xB3FC48", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9362B8", Offset = "0x9362B8")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x936304", Offset = "0x936304")]
		[SerializeField]
		private float m_lerpSpeed;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_defaultTravelDuration;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AnimationCurve m_speedCurve;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x936370", Offset = "0x936370")]
		[SerializeField]
		private MathUtils.MinMax m_normalizedTimeThresholds;

		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private BezierSpline m_targetSpline;

		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_isTraversingSpline;

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool m_reverseSpline;

		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_elapsedTime;

		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_travelDuration;

		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 m_targetDirection;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 m_currentDirection;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 m_startPosition;

		[Token(Token = "0x14000065")]
		private event Action OnPathCompleted
		{
			[Token(Token = "0x6001DEC")]
			[Address(RVA = "0xB3EECC", Offset = "0xB3EECC", VA = "0xB3EECC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D984", Offset = "0x93D984")]
			add
			{
			}
			[Token(Token = "0x6001DED")]
			[Address(RVA = "0xB3EFB8", Offset = "0xB3EFB8", VA = "0xB3EFB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93D994", Offset = "0x93D994")]
			remove
			{
			}
		}

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0xB3F0A4", Offset = "0xB3F0A4", VA = "0xB3F0A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0xB3F3C8", Offset = "0xB3F3C8", VA = "0xB3F3C8")]
		public void StartSplineTraversal(BezierSpline spline, bool reverseDirection, float startingProgress, float travelDuration, Action onPathCompleted)
		{
		}

		[Token(Token = "0x6001DF0")]
		[Address(RVA = "0xB3F5B0", Offset = "0xB3F5B0", VA = "0xB3F5B0")]
		public void StartSplineTraversal(BezierSpline spline, Action onPathCompleted)
		{
		}

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0xB3F60C", Offset = "0xB3F60C", VA = "0xB3F60C")]
		public void StartSplineTraversal(BezierSpline spline, bool reverseDirection, Action onPathCompleted)
		{
		}

		[Token(Token = "0x6001DF2")]
		[Address(RVA = "0xB3F61C", Offset = "0xB3F61C", VA = "0xB3F61C")]
		public void ResetAnimation()
		{
		}

		[Token(Token = "0x6001DF3")]
		[Address(RVA = "0xB3F6B0", Offset = "0xB3F6B0", VA = "0xB3F6B0")]
		public void SetAnimationToHover()
		{
		}

		[Token(Token = "0x6001DF4")]
		[Address(RVA = "0xB3F7A4", Offset = "0xB3F7A4", VA = "0xB3F7A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93D9A4", Offset = "0x93D9A4")]
		private IEnumerator AnimateFloatParameterOvertime(float endFloatValue, float time, Animator animator, string parameter)
		{
			return null;
		}

		[Token(Token = "0x6001DF5")]
		[Address(RVA = "0xB3F0B4", Offset = "0xB3F0B4", VA = "0xB3F0B4")]
		private void SplineMovementHandler()
		{
		}

		[Token(Token = "0x6001DF6")]
		[Address(RVA = "0xB3F8B0", Offset = "0xB3F8B0", VA = "0xB3F8B0")]
		private float CurrentProgression()
		{
			return default(float);
		}

		[Token(Token = "0x6001DF7")]
		[Address(RVA = "0xB3F94C", Offset = "0xB3F94C", VA = "0xB3F94C")]
		private Vector3 GetSplineDirection(BezierSpline spline, float normalizedTime)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001DF8")]
		[Address(RVA = "0xB3F580", Offset = "0xB3F580", VA = "0xB3F580")]
		private void OnDestinationReached()
		{
		}

		[Token(Token = "0x6001DF9")]
		[Address(RVA = "0xB3FA70", Offset = "0xB3FA70", VA = "0xB3FA70")]
		public ButterflyAnimation()
		{
		}
	}
	[Token(Token = "0x20003C3")]
	public class CharacterAnimationHandler : AnimationHandler
	{
		[Token(Token = "0x2000608")]
		[Flags]
		private enum AnimationType
		{
			[Token(Token = "0x40021F4")]
			Talk = 1,
			[Token(Token = "0x40021F5")]
			Blink = 2,
			[Token(Token = "0x40021F6")]
			Expressions = 4
		}

		[Token(Token = "0x40016DF")]
		private const float SecondsPerMinute = 60f;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9363CC", Offset = "0x9363CC")]
		[SerializeField]
		private AnimationType m_supportedAnimations;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x936418", Offset = "0x936418")]
		[SerializeField]
		private ExpressionType m_supportedExpressions;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_blinksPerMinute;

		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x936474", Offset = "0x936474")]
		private float m_blinksPollRate;

		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9364C0", Offset = "0x9364C0")]
		[SerializeField]
		private LookIKGeneric m_lookIKGeneric;

		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_canBlink;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_elapsedBlinkTime;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float m_blinksPerSecond;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_blinkChance;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly int m_parameterLipSync;

		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private readonly int m_parameterChangeExpressionTrigger;

		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly int m_parameterExpressionType;

		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private readonly int m_parameterBlink;

		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly int m_parameterPickUp;

		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93651C", Offset = "0x93651C")]
		private ExpressionType <CurrentExpression>k__BackingField;

		[Token(Token = "0x17000372")]
		public ExpressionType CurrentExpression
		{
			[Token(Token = "0x6001DFC")]
			[Address(RVA = "0xB3FE90", Offset = "0xB3FE90", VA = "0xB3FE90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93DA28", Offset = "0x93DA28")]
			get
			{
				return default(ExpressionType);
			}
			[Token(Token = "0x6001DFD")]
			[Address(RVA = "0xB3FE98", Offset = "0xB3FE98", VA = "0xB3FE98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93DA38", Offset = "0x93DA38")]
			private set
			{
			}
		}

		[Token(Token = "0x17000373")]
		public bool CanTalk
		{
			[Token(Token = "0x6001DFE")]
			[Address(RVA = "0xB3FEA0", Offset = "0xB3FEA0", VA = "0xB3FEA0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000374")]
		public Transform HeadJoint
		{
			[Token(Token = "0x6001DFF")]
			[Address(RVA = "0xB39D2C", Offset = "0xB39D2C", VA = "0xB39D2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000375")]
		public Transform RootBone
		{
			[Token(Token = "0x6001E00")]
			[Address(RVA = "0xB3FED8", Offset = "0xB3FED8", VA = "0xB3FED8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000376")]
		public Animator MainAnimator
		{
			[Token(Token = "0x6001E01")]
			[Address(RVA = "0xB3FEE0", Offset = "0xB3FEE0", VA = "0xB3FEE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x14000066")]
		private event Action OnPickupAnimationComplete
		{
			[Token(Token = "0x6001DFA")]
			[Address(RVA = "0xB3FCB8", Offset = "0xB3FCB8", VA = "0xB3FCB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93DA08", Offset = "0x93DA08")]
			add
			{
			}
			[Token(Token = "0x6001DFB")]
			[Address(RVA = "0xB3FDA4", Offset = "0xB3FDA4", VA = "0xB3FDA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93DA18", Offset = "0x93DA18")]
			remove
			{
			}
		}

		[Token(Token = "0x6001E02")]
		[Address(RVA = "0xB3FEE8", Offset = "0xB3FEE8", VA = "0xB3FEE8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E03")]
		[Address(RVA = "0xB3FF30", Offset = "0xB3FF30", VA = "0xB3FF30")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E04")]
		[Address(RVA = "0xB3FFF8", Offset = "0xB3FFF8", VA = "0xB3FFF8")]
		public void OpenMouth(float amount)
		{
		}

		[Token(Token = "0x6001E05")]
		[Address(RVA = "0xB40040", Offset = "0xB40040", VA = "0xB40040")]
		public ExpressionType GetExpression()
		{
			return default(ExpressionType);
		}

		[Token(Token = "0x6001E06")]
		[Address(RVA = "0xB40078", Offset = "0xB40078", VA = "0xB40078")]
		public void SetExpression(ExpressionType newExpression)
		{
		}

		[Token(Token = "0x6001E07")]
		[Address(RVA = "0xB40128", Offset = "0xB40128", VA = "0xB40128")]
		public void PlayAnimation(AnimationData animation)
		{
		}

		[Token(Token = "0x6001E08")]
		[Address(RVA = "0xB4015C", Offset = "0xB4015C", VA = "0xB4015C")]
		public void SetRandomExpression()
		{
		}

		[Token(Token = "0x6001E09")]
		[Address(RVA = "0xB401D4", Offset = "0xB401D4", VA = "0xB401D4")]
		private ExpressionType GetRandom(ExpressionType exclude)
		{
			return default(ExpressionType);
		}

		[Token(Token = "0x6001E0A")]
		[Address(RVA = "0xB40218", Offset = "0xB40218", VA = "0xB40218")]
		private ExpressionType GetRandom()
		{
			return default(ExpressionType);
		}

		[Token(Token = "0x6001E0B")]
		[Address(RVA = "0xB40080", Offset = "0xB40080", VA = "0xB40080")]
		public void SetAnimatorExpression(ExpressionType newExpression)
		{
		}

		[Token(Token = "0x6001E0C")]
		[Address(RVA = "0xB40244", Offset = "0xB40244", VA = "0xB40244")]
		public void ResetExpression()
		{
		}

		[Token(Token = "0x6001E0D")]
		[Address(RVA = "0xB40254", Offset = "0xB40254", VA = "0xB40254")]
		public void SetBlinkFrequency(float frequency)
		{
		}

		[Token(Token = "0x6001E0E")]
		[Address(RVA = "0xB4025C", Offset = "0xB4025C", VA = "0xB4025C")]
		public void PlayPickUpAnimation(PickUpAnimationType type, Action onPickedUp)
		{
		}

		[Token(Token = "0x6001E0F")]
		[Address(RVA = "0xB402A8", Offset = "0xB402A8", VA = "0xB402A8")]
		public void PickupAnimationComplete()
		{
		}

		[Token(Token = "0x6001E10")]
		[Address(RVA = "0xB402D8", Offset = "0xB402D8", VA = "0xB402D8")]
		public bool EnableLookIK(Transform target, float blendSpeed)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E11")]
		[Address(RVA = "0xB40440", Offset = "0xB40440", VA = "0xB40440")]
		public bool EnableLookIK(Transform target)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E12")]
		[Address(RVA = "0xB404F8", Offset = "0xB404F8", VA = "0xB404F8")]
		public void EnableLookIK(PlayableCharacter character)
		{
		}

		[Token(Token = "0x6001E13")]
		[Address(RVA = "0xB405D8", Offset = "0xB405D8", VA = "0xB405D8")]
		public void DisableLookIK(float blendSpeed)
		{
		}

		[Token(Token = "0x6001E14")]
		[Address(RVA = "0xB406A8", Offset = "0xB406A8", VA = "0xB406A8")]
		public void DisableLookIK()
		{
		}

		[Token(Token = "0x6001E15")]
		[Address(RVA = "0xB3FF40", Offset = "0xB3FF40", VA = "0xB3FF40")]
		private void BlinkHandler()
		{
		}

		[Token(Token = "0x6001E16")]
		[Address(RVA = "0xB40770", Offset = "0xB40770", VA = "0xB40770")]
		public CharacterAnimationHandler()
		{
		}
	}
	[Token(Token = "0x20003C4")]
	public class ClothController : MonoBehaviour
	{
		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Cloth m_cloth;

		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ClothConfig m_standardConfig;

		[Token(Token = "0x6001E17")]
		[Address(RVA = "0xB40854", Offset = "0xB40854", VA = "0xB40854")]
		public void UpdateClothConfig(ClothConfig config)
		{
		}

		[Token(Token = "0x6001E18")]
		[Address(RVA = "0xB40910", Offset = "0xB40910", VA = "0xB40910")]
		public void ResetClothConfig()
		{
		}

		[Token(Token = "0x6001E19")]
		[Address(RVA = "0xB409C8", Offset = "0xB409C8", VA = "0xB409C8")]
		public ClothController()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C5")]
	public struct ClothConfig
	{
		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool GravityEnabled;

		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 ExternalForce;

		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 RandomForce;

		[Token(Token = "0x6001E1A")]
		[Address(RVA = "0x9CCE48", Offset = "0x9CCE48", VA = "0x9CCE48")]
		public ClothConfig(bool gravityEnabled, Vector3 externalForce, Vector3 randomForce)
		{
		}
	}
	[Token(Token = "0x20003C6")]
	public class DeltaCorrectionLink : MonoBehaviour
	{
		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93655C", Offset = "0x93655C")]
		private bool <HasDeltaCorrection>k__BackingField;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93656C", Offset = "0x93656C")]
		private PositionRotation <DeltaCorrection>k__BackingField;

		[Token(Token = "0x17000377")]
		public bool HasDeltaCorrection
		{
			[Token(Token = "0x6001E1B")]
			[Address(RVA = "0xB42EC8", Offset = "0xB42EC8", VA = "0xB42EC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93DA48", Offset = "0x93DA48")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E1C")]
			[Address(RVA = "0xB42ED0", Offset = "0xB42ED0", VA = "0xB42ED0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93DA58", Offset = "0x93DA58")]
			private set
			{
			}
		}

		[Token(Token = "0x17000378")]
		public PositionRotation DeltaCorrection
		{
			[Token(Token = "0x6001E1D")]
			[Address(RVA = "0xB42EDC", Offset = "0xB42EDC", VA = "0xB42EDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93DA68", Offset = "0x93DA68")]
			get
			{
				return default(PositionRotation);
			}
			[Token(Token = "0x6001E1E")]
			[Address(RVA = "0xB42EF0", Offset = "0xB42EF0", VA = "0xB42EF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93DA78", Offset = "0x93DA78")]
			private set
			{
			}
		}

		[Token(Token = "0x6001E1F")]
		[Address(RVA = "0xB42F0C", Offset = "0xB42F0C", VA = "0xB42F0C")]
		private bool ValidateAnimator(Animator animator)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E20")]
		[Address(RVA = "0xB42FF4", Offset = "0xB42FF4", VA = "0xB42FF4")]
		public void SetDeltaCorrectionValues(Vector3 position, Quaternion rotation, bool hasDeltaCorrection)
		{
		}

		[Token(Token = "0x6001E21")]
		[Address(RVA = "0xB43048", Offset = "0xB43048", VA = "0xB43048")]
		public DeltaCorrectionLink()
		{
		}
	}
	[Token(Token = "0x20003C7")]
	public class DoorAnimator : MonoBehaviour
	{
		[Token(Token = "0x2000609")]
		private enum DoorDirectionType
		{
			[Token(Token = "0x40021F8")]
			Pull,
			[Token(Token = "0x40021F9")]
			Push
		}

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TransitionData m_transitionData;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PlayableDirector m_director;

		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Animator m_doorAnimator;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioSource m_doorSoundSource;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Transform[] m_characterSyncPoints;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9365CC", Offset = "0x9365CC")]
		[SerializeField]
		private PlayableCharacterEvent m_onDoorPulledOpened;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private PlayableCharacterEvent m_onDoorPushedOpened;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private PlayableCharacter m_characterControl;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private DoorDirectionType m_direction;

		[Token(Token = "0x6001E22")]
		[Address(RVA = "0xB43050", Offset = "0xB43050", VA = "0xB43050")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E23")]
		[Address(RVA = "0xB43080", Offset = "0xB43080", VA = "0xB43080")]
		public void PullOpenDoor(PlayableCharacter character)
		{
		}

		[Token(Token = "0x6001E24")]
		[Address(RVA = "0xB4329C", Offset = "0xB4329C", VA = "0xB4329C")]
		public void PushOpenDoor(PlayableCharacter character)
		{
		}

		[Token(Token = "0x6001E25")]
		[Address(RVA = "0xB43088", Offset = "0xB43088", VA = "0xB43088")]
		private void OpenDoor(PlayableCharacter character, DoorDirectionType direction)
		{
		}

		[Token(Token = "0x6001E26")]
		[Address(RVA = "0xB432A4", Offset = "0xB432A4", VA = "0xB432A4")]
		private void OnDirectorStopped(PlayableDirector director)
		{
		}

		[Token(Token = "0x6001E27")]
		[Address(RVA = "0xB43384", Offset = "0xB43384", VA = "0xB43384")]
		private void TriggerEvent()
		{
		}

		[Token(Token = "0x6001E28")]
		[Address(RVA = "0xB43410", Offset = "0xB43410", VA = "0xB43410")]
		public DoorAnimator()
		{
		}
	}
	[Token(Token = "0x20003C8")]
	public class EntranceClockAnimation : RoomBehaviour
	{
		[Token(Token = "0x200060A")]
		public enum ClockAnimationState
		{
			[Token(Token = "0x40021FB")]
			Forward,
			[Token(Token = "0x40021FC")]
			Backward,
			[Token(Token = "0x40021FD")]
			Stop
		}

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Animator m_animator;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x936638", Offset = "0x936638")]
		private float m_clockSpeed;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private ClockAnimationState m_startState;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x936688", Offset = "0x936688")]
		private float m_clockOffset;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int sm_speed;

		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int sm_interact;

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int sm_idleStateName;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static readonly int sm_idleStateLayer;

		[Token(Token = "0x6001E29")]
		[Address(RVA = "0xB434B0", Offset = "0xB434B0", VA = "0xB434B0", Slot = "5")]
		protected override void Initialize()
		{
		}

		[Token(Token = "0x6001E2A")]
		[Address(RVA = "0xB43564", Offset = "0xB43564", VA = "0xB43564")]
		public void InteractClock()
		{
		}

		[Token(Token = "0x6001E2B")]
		[Address(RVA = "0xB435EC", Offset = "0xB435EC", VA = "0xB435EC")]
		public void StartAnimation()
		{
		}

		[Token(Token = "0x6001E2C")]
		[Address(RVA = "0xB4375C", Offset = "0xB4375C", VA = "0xB4375C")]
		public void StopAnimation()
		{
		}

		[Token(Token = "0x6001E2D")]
		[Address(RVA = "0xB434B4", Offset = "0xB434B4", VA = "0xB434B4")]
		protected void RandomizeAnimator()
		{
		}

		[Token(Token = "0x6001E2E")]
		[Address(RVA = "0xB435F4", Offset = "0xB435F4", VA = "0xB435F4")]
		protected void SetState(ClockAnimationState state)
		{
		}

		[Token(Token = "0x6001E2F")]
		[Address(RVA = "0xB43764", Offset = "0xB43764", VA = "0xB43764")]
		public EntranceClockAnimation()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C9")]
	public struct SMBEventCollection
	{
		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string ClipName;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AnimationClip Clip;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<SMBEvent> Events;

		[Token(Token = "0x6001E31")]
		[Address(RVA = "0x9CCFF8", Offset = "0x9CCFF8", VA = "0x9CCFF8")]
		public void EnableFire()
		{
		}

		[Token(Token = "0x6001E32")]
		[Address(RVA = "0x9CD000", Offset = "0x9CD000", VA = "0x9CD000")]
		public void EnableFire(int eventIndex)
		{
		}

		[Token(Token = "0x6001E33")]
		[Address(RVA = "0x9CD008", Offset = "0x9CD008", VA = "0x9CD008")]
		public void DisableFire()
		{
		}

		[Token(Token = "0x6001E34")]
		[Address(RVA = "0x9CD010", Offset = "0x9CD010", VA = "0x9CD010")]
		public void DisableFire(int eventIndex)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003CA")]
	public class SMBEvent
	{
		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string EventName;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FireTime;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool CanFire;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int EventIndex;

		[Token(Token = "0x6001E35")]
		[Address(RVA = "0xB4C2B4", Offset = "0xB4C2B4", VA = "0xB4C2B4")]
		public SMBEvent()
		{
		}
	}
	[Token(Token = "0x20003CB")]
	public class GenericSplineTraverser : MonoBehaviour
	{
		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9366C8", Offset = "0x9366C8")]
		[SerializeField]
		private Transform m_traversingTransform;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x936714", Offset = "0x936714")]
		[SerializeField]
		private BezierSpline m_targetSpline;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_reverseSpline;

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_travelDuration;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x936780", Offset = "0x936780")]
		[SerializeField]
		private float m_lerpSpeed;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AnimationCurve m_speedCurve;

		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9367DC", Offset = "0x9367DC")]
		[SerializeField]
		private MathUtils.MinMax m_normalizedTimeThresholds;

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x936828", Offset = "0x936828")]
		[SerializeField]
		private UnityEvent m_onTraversalStart;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private UnityEvent m_onTraversalEnd;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_isTraversingSpline;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float m_elapsedTime;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 m_targetDirection;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 m_currentDirection;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 m_startPosition;

		[Token(Token = "0x6001E36")]
		[Address(RVA = "0xB452E0", Offset = "0xB452E0", VA = "0xB452E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E37")]
		[Address(RVA = "0xB455A8", Offset = "0xB455A8", VA = "0xB455A8")]
		public void StartSplineTraversal()
		{
		}

		[Token(Token = "0x6001E38")]
		[Address(RVA = "0xB45674", Offset = "0xB45674", VA = "0xB45674")]
		public void StartSplineTraversal(Transform traversingTransform)
		{
		}

		[Token(Token = "0x6001E39")]
		[Address(RVA = "0xB452F0", Offset = "0xB452F0", VA = "0xB452F0")]
		private void SplineMovementHandler()
		{
		}

		[Token(Token = "0x6001E3A")]
		[Address(RVA = "0xB45680", Offset = "0xB45680", VA = "0xB45680")]
		private float CurrentProgression()
		{
			return default(float);
		}

		[Token(Token = "0x6001E3B")]
		[Address(RVA = "0xB4571C", Offset = "0xB4571C", VA = "0xB4571C")]
		private Vector3 GetSplineDirection(BezierSpline spline, float normalizedTime)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E3C")]
		[Address(RVA = "0xB45840", Offset = "0xB45840", VA = "0xB45840")]
		public GenericSplineTraverser()
		{
		}
	}
	[Token(Token = "0x20003CC")]
	public class InputSplineTraverser : MonoBehaviour
	{
		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x936884", Offset = "0x936884")]
		[SerializeField]
		protected Transform m_traversingTransform;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9368D0", Offset = "0x9368D0")]
		[SerializeField]
		private BezierSpline m_targetSpline;

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_useScriptableFloat;

		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private FloatVariable m_scriptableFloat;

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool m_reverseSpline;

		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x93694C", Offset = "0x93694C")]
		[SerializeField]
		private bool m_isElasticFollow;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float m_lerpSpeed;

		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool m_orientToSplineDirection;

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_targetProgress;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float m_currentProgress;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_elasticProgress;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 m_targetPosition;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 m_targetDirection;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 m_currentDirection;

		[Token(Token = "0x6001E3D")]
		[Address(RVA = "0xB458E4", Offset = "0xB458E4", VA = "0xB458E4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E3E")]
		[Address(RVA = "0xB45ABC", Offset = "0xB45ABC", VA = "0xB45ABC")]
		public void SetCurrentProgress(float normalizedProgress)
		{
		}

		[Token(Token = "0x6001E3F")]
		[Address(RVA = "0xB458E8", Offset = "0xB458E8", VA = "0xB458E8")]
		private void SplineMovementHandler()
		{
		}

		[Token(Token = "0x6001E40")]
		[Address(RVA = "0xB45B38", Offset = "0xB45B38", VA = "0xB45B38")]
		private float GetCurrentProgression()
		{
			return default(float);
		}

		[Token(Token = "0x6001E41")]
		[Address(RVA = "0xB45C30", Offset = "0xB45C30", VA = "0xB45C30")]
		private Vector3 GetSplineDirection(BezierSpline spline, float normalizedTime)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001E42")]
		[Address(RVA = "0xB45D0C", Offset = "0xB45D0C", VA = "0xB45D0C")]
		public InputSplineTraverser()
		{
		}
	}
	[Token(Token = "0x20003CD")]
	public class Locomotion : MonoBehaviour
	{
		[Token(Token = "0x200060B")]
		private enum OffMeshLocomotionState
		{
			[Token(Token = "0x40021FF")]
			None,
			[Token(Token = "0x4002200")]
			Start,
			[Token(Token = "0x4002201")]
			Loop,
			[Token(Token = "0x4002202")]
			Finish
		}

		[Token(Token = "0x200060C")]
		private struct AnimatorOffMeshLinkTypes
		{
			[Token(Token = "0x4002203")]
			public const int ClimbUp = 1;

			[Token(Token = "0x4002204")]
			public const int DropDown = 2;

			[Token(Token = "0x4002205")]
			public const int GapJump = 3;

			[Token(Token = "0x4002206")]
			public const int SkipJump = 4;

			[Token(Token = "0x4002207")]
			public const int ClimbDown = 5;
		}

		[Token(Token = "0x200060D")]
		private struct DefaultSettings
		{
			[Token(Token = "0x4002208")]
			public const float TransitionStartThreshold = 0.25f;

			[Token(Token = "0x4002209")]
			public const float FollowUpdateDistance = 1f;

			[Token(Token = "0x400220A")]
			public const float FollowStoppingDistance = 1f;

			[Token(Token = "0x400220B")]
			public const float SpeedReductionFactor = 2f;

			[Token(Token = "0x400220C")]
			public const float DestinationReachedSpeedBuffer = 0.1f;

			[Token(Token = "0x400220D")]
			public const float ObstacleCheckRayLength = 2f;

			[Token(Token = "0x400220E")]
			public const float FaceDestinationDeadAngle = 2.5f;

			[Token(Token = "0x400220F")]
			public const float RemainingDistanceThreshold = 0.05f;

			[Token(Token = "0x4002210")]
			public const float BaseOffsetLerpDistance = 0.005f;

			[Token(Token = "0x4002211")]
			public const float NavSampleDistance = 1f;
		}

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9369B8", Offset = "0x9369B8")]
		[SerializeField]
		private CharacterData m_data;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x936A04", Offset = "0x936A04")]
		[SerializeField]
		private float m_turnDeadAngle;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_offMeshLookAtDeadZone;

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_enableObstacleAvoidance;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private LayerMask m_obstacleAvoidLayer;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x936A80", Offset = "0x936A80")]
		[SerializeField]
		private bool m_debugTeleport;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x936ACC", Offset = "0x936ACC")]
		[SerializeField]
		private CharacterAnimationHandler m_animatorHandler;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private NavMeshAgent m_navMeshAgent;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x936B28", Offset = "0x936B28")]
		private bool <HasDeltaCorrection>k__BackingField;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x936B38", Offset = "0x936B38")]
		private bool <IsLocomotionLocked>k__BackingField;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x936B48", Offset = "0x936B48")]
		private Vector3 <DeltaCorrectionPosition>k__BackingField;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x936B58", Offset = "0x936B58")]
		private Quaternion <DeltaCorrectionRotation>k__BackingField;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool m_isUsingAgentLocomotion;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		private bool m_faceDestinationOnArrival;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float m_targetSpeed;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_currentSpeed;

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Vector3 m_inputDirection;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Transform m_cachedDestination;

		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private LocomotionLockState m_lockState;

		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool m_isTraversingOffMeshLink;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private OffMeshLocomotionState m_currentOffMeshLocomotionState;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private OffMeshLinkAnimation m_currentOffMeshLinkAnimation;

		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int m_offMeshLinkOrientation;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector3 m_offMeshWalkStartPosition;

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private NavMeshQueryFilter m_navMeshQueryFilter;

		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool m_isFollowingTarget;

		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private MathUtils.MinMax m_minMaxFollowDistance;

		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private readonly Quaternion m_avoidanceAngle;

		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private readonly int m_parameterSpeed;

		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private readonly int m_parameterIsOffMeshAnimating;

		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private readonly int m_parameterIsOffMeshTraversing;

		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private readonly int m_parameterOffMeshLinkType;

		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private readonly int m_parameterIsTalking;

		[Token(Token = "0x17000379")]
		public bool HasDeltaCorrection
		{
			[Token(Token = "0x6001E43")]
			[Address(RVA = "0xB45D14", Offset = "0xB45D14", VA = "0xB45D14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93DA88", Offset = "0x93DA88")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E44")]
			[Address(RVA = "0xB45D1C", Offset = "0xB45D1C", VA = "0xB45D1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93DA98", Offset = "0x93DA98")]
			private set
			{
			}
		}

		[Token(Token = "0x1700037A")]
		public bool IsLocomotionLocked
		{
			[Token(Token = "0x6001E45")]
			[Address(RVA = "0xB45D28", Offset = "0xB45D28", VA = "0xB45D28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93DAA8", Offset = "0x93DAA8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E46")]
			[Address(RVA = "0xB45D30", Offset = "0xB45D30", VA = "0xB45D30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93DAB8", Offset = "0x93DAB8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700037B")]
		public Vector3 DeltaCorrectionPosition
		{
			[Token(Token = "0x6001E47")]
			[Address(RVA = "0xB45D3C", Offset = "0xB45D3C", VA = "0xB45D3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93DAC8", Offset = "0x93DAC8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001E48")]
			[Address(RVA = "0xB45D48", Offset = "0xB45D48", VA = "0xB45D48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93DAD8", Offset = "0x93DAD8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700037C")]
		public Quaternion DeltaCorrectionRotation
		{
			[Token(Token = "0x6001E49")]
			[Address(RVA = "0xB45D54", Offset = "0xB45D54", VA = "0xB45D54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93DAE8", Offset = "0x93DAE8")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001E4A")]
			[Address(RVA = "0xB45D60", Offset = "0xB45D60", VA = "0xB45D60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93DAF8", Offset = "0x93DAF8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700037D")]
		public int WalkableAreas
		{
			[Token(Token = "0x6001E4B")]
			[Address(RVA = "0xB45D6C", Offset = "0xB45D6C", VA = "0xB45D6C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700037E")]
		public float NavAgentSpeed
		{
			[Token(Token = "0x6001E50")]
			[Address(RVA = "0xB4614C", Offset = "0xB4614C", VA = "0xB4614C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E51")]
			[Address(RVA = "0xB4617C", Offset = "0xB4617C", VA = "0xB4617C")]
			set
			{
			}
		}

		[Token(Token = "0x1700037F")]
		private Vector3 AgentPosition
		{
			[Token(Token = "0x6001E52")]
			[Address(RVA = "0xB461BC", Offset = "0xB461BC", VA = "0xB461BC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001E53")]
			[Address(RVA = "0xB461F0", Offset = "0xB461F0", VA = "0xB461F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000380")]
		private Quaternion AgentRotation
		{
			[Token(Token = "0x6001E54")]
			[Address(RVA = "0xB4624C", Offset = "0xB4624C", VA = "0xB4624C")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001E55")]
			[Address(RVA = "0xB46280", Offset = "0xB46280", VA = "0xB46280")]
			set
			{
			}
		}

		[Token(Token = "0x14000067")]
		private event Action<bool> OnDestinationReached
		{
			[Token(Token = "0x6001E4C")]
			[Address(RVA = "0xB45D9C", Offset = "0xB45D9C", VA = "0xB45D9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93DB08", Offset = "0x93DB08")]
			add
			{
			}
			[Token(Token = "0x6001E4D")]
			[Address(RVA = "0xB45E88", Offset = "0xB45E88", VA = "0xB45E88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93DB18", Offset = "0x93DB18")]
			remove
			{
			}
		}

		[Token(Token = "0x14000068")]
		private event Action OnOffMeshLinkTraversed
		{
			[Token(Token = "0x6001E4E")]
			[Address(RVA = "0xB45F74", Offset = "0xB45F74", VA = "0xB45F74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93DB28", Offset = "0x93DB28")]
			add
			{
			}
			[Token(Token = "0x6001E4F")]
			[Address(RVA = "0xB46060", Offset = "0xB46060", VA = "0xB46060")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93DB38", Offset = "0x93DB38")]
			remove
			{
			}
		}

		[Token(Token = "0x6001E56")]
		[Address(RVA = "0xB462E4", Offset = "0xB462E4", VA = "0xB462E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E57")]
		[Address(RVA = "0xB464B0", Offset = "0xB464B0", VA = "0xB464B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001E58")]
		[Address(RVA = "0xB4709C", Offset = "0xB4709C", VA = "0xB4709C")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x6001E59")]
		[Address(RVA = "0xB46A90", Offset = "0xB46A90", VA = "0xB46A90")]
		public bool IsUsingAgentLocomotion()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E5A")]
		[Address(RVA = "0xB4737C", Offset = "0xB4737C", VA = "0xB4737C")]
		public void SetDestination(Vector3 destination)
		{
		}

		[Token(Token = "0x6001E5B")]
		[Address(RVA = "0xB47498", Offset = "0xB47498", VA = "0xB47498")]
		public void SetDestination(Vector3 destination, LocomotionLockState lockState)
		{
		}

		[Token(Token = "0x6001E5C")]
		[Address(RVA = "0xB47388", Offset = "0xB47388", VA = "0xB47388")]
		public void SetDestination(Vector3 destination, LocomotionLockState lockState, Action<bool> onDestinationReached)
		{
		}

		[Token(Token = "0x6001E5D")]
		[Address(RVA = "0xB47518", Offset = "0xB47518", VA = "0xB47518")]
		public void SetDestination(Transform destination, LocomotionLockState lockState, Action<bool> onDestinationReached)
		{
		}

		[Token(Token = "0x6001E5E")]
		[Address(RVA = "0xB475F8", Offset = "0xB475F8", VA = "0xB475F8")]
		public void TryAbortDestination()
		{
		}

		[Token(Token = "0x6001E5F")]
		[Address(RVA = "0xB474A0", Offset = "0xB474A0", VA = "0xB474A0")]
		public void SetInputLockState(LocomotionLockState lockState)
		{
		}

		[Token(Token = "0x6001E60")]
		[Address(RVA = "0xB476A0", Offset = "0xB476A0", VA = "0xB476A0")]
		public void LockLocomotion()
		{
		}

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0xB476AC", Offset = "0xB476AC", VA = "0xB476AC")]
		public void UnlockLocomotion()
		{
		}

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0xB476B4", Offset = "0xB476B4", VA = "0xB476B4")]
		public void FollowLocomotion(Locomotion targetLocomotion)
		{
		}

		[Token(Token = "0x6001E63")]
		[Address(RVA = "0xB47A9C", Offset = "0xB47A9C", VA = "0xB47A9C")]
		public bool InputMove(Vector3 directionalMagnitude)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E64")]
		[Address(RVA = "0xB47BD0", Offset = "0xB47BD0", VA = "0xB47BD0")]
		public bool TryMove(Vector3 directionalMagnitude)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0xB47C60", Offset = "0xB47C60", VA = "0xB47C60")]
		public void TryResetInput()
		{
		}

		[Token(Token = "0x6001E66")]
		[Address(RVA = "0xB47CE4", Offset = "0xB47CE4", VA = "0xB47CE4")]
		public void Teleport(Vector3 location, Quaternion rotation)
		{
		}

		[Token(Token = "0x6001E67")]
		[Address(RVA = "0xB47ED0", Offset = "0xB47ED0", VA = "0xB47ED0")]
		public void CompleteDeltaCorrection()
		{
		}

		[Token(Token = "0x6001E68")]
		[Address(RVA = "0xB47ED8", Offset = "0xB47ED8", VA = "0xB47ED8")]
		public void SetFollowThresholds(MathUtils.MinMax minMaxFollowDistance)
		{
		}

		[Token(Token = "0x6001E69")]
		[Address(RVA = "0xB46428", Offset = "0xB46428", VA = "0xB46428")]
		public void ResetFollowThresholds()
		{
		}

		[Token(Token = "0x6001E6A")]
		[Address(RVA = "0xB47EE0", Offset = "0xB47EE0", VA = "0xB47EE0")]
		public void SetNavAgentActive(bool enabled)
		{
		}

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0xB4807C", Offset = "0xB4807C", VA = "0xB4807C")]
		public bool TryGetNavmeshBaseOffset(out float baseOffset)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E6C")]
		[Address(RVA = "0xB47DC8", Offset = "0xB47DC8", VA = "0xB47DC8")]
		public void ResetPath(bool abortCurrentOffmeshlink = false)
		{
		}

		[Token(Token = "0x6001E6D")]
		[Address(RVA = "0xB4636C", Offset = "0xB4636C", VA = "0xB4636C")]
		private void InitilizeNavAgent()
		{
		}

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0xB47678", Offset = "0xB47678", VA = "0xB47678")]
		private void AbortDestination()
		{
		}

		[Token(Token = "0x6001E6F")]
		[Address(RVA = "0xB474A8", Offset = "0xB474A8", VA = "0xB474A8")]
		private void MoveToDestination(Vector3 destination)
		{
		}

		[Token(Token = "0x6001E70")]
		[Address(RVA = "0xB477DC", Offset = "0xB477DC", VA = "0xB477DC")]
		private void FollowLocomotionHandler(Locomotion targetLocomotion)
		{
		}

		[Token(Token = "0x6001E71")]
		[Address(RVA = "0xB46FD8", Offset = "0xB46FD8", VA = "0xB46FD8")]
		private void InputLocomotionHandler()
		{
		}

		[Token(Token = "0x6001E72")]
		[Address(RVA = "0xB46AEC", Offset = "0xB46AEC", VA = "0xB46AEC")]
		private void AgentLocomotionHandler()
		{
		}

		[Token(Token = "0x6001E73")]
		[Address(RVA = "0xB48428", Offset = "0xB48428", VA = "0xB48428")]
		private bool IsAgentDone()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E74")]
		[Address(RVA = "0xB484D4", Offset = "0xB484D4", VA = "0xB484D4")]
		private bool IsAgentStopping()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E75")]
		[Address(RVA = "0xB486E0", Offset = "0xB486E0", VA = "0xB486E0")]
		private void ObstacleAvoidanceCheck(Vector3 walkDirection)
		{
		}

		[Token(Token = "0x6001E76")]
		[Address(RVA = "0xB469AC", Offset = "0xB469AC", VA = "0xB469AC")]
		private void SetCurrentSpeed()
		{
		}

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0xB482B8", Offset = "0xB482B8", VA = "0xB482B8")]
		private void TurnToDirection(Vector3 direction)
		{
		}

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0xB4853C", Offset = "0xB4853C", VA = "0xB4853C")]
		private void TryInitilizeOffMeshTraversing(NavMeshAgent agent)
		{
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0xB481EC", Offset = "0xB481EC", VA = "0xB481EC")]
		private void AbortOffMeshTraversal()
		{
		}

		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0xB488B4", Offset = "0xB488B4", VA = "0xB488B4")]
		private void FinishOffMeshTraversing()
		{
		}

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0xB48908", Offset = "0xB48908", VA = "0xB48908")]
		private void FinishOffMeshTraversing(bool CompensateVerticalOffset)
		{
		}

		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0xB46680", Offset = "0xB46680", VA = "0xB46680")]
		private void OffMeshLinkHandler()
		{
		}

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0xB48A88", Offset = "0xB48A88", VA = "0xB48A88")]
		private void OffMeshTeleportHandler(OffMeshLinkData linkData)
		{
		}

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0xB48B64", Offset = "0xB48B64", VA = "0xB48B64")]
		private void OffMeshWalkHandler(OffMeshLinkData linkData)
		{
		}

		[Token(Token = "0x6001E7F")]
		[Address(RVA = "0xB48DE0", Offset = "0xB48DE0", VA = "0xB48DE0")]
		private void OffMeshClimbingHandler(OffMeshLinkData linkData, OffMeshLinkAnimation offMeshAnimation)
		{
		}

		[Token(Token = "0x6001E80")]
		[Address(RVA = "0xB49460", Offset = "0xB49460", VA = "0xB49460")]
		private void OffMeshDropDownHandler(OffMeshLinkData linkData, OffMeshLinkAnimation offMeshAnimation)
		{
		}

		[Token(Token = "0x6001E81")]
		[Address(RVA = "0xB49FCC", Offset = "0xB49FCC", VA = "0xB49FCC")]
		private void OffMeshClimbDownHandler(OffMeshLinkData linkData, OffMeshLinkAnimation offMeshAnimation)
		{
		}

		[Token(Token = "0x6001E82")]
		[Address(RVA = "0xB49A64", Offset = "0xB49A64", VA = "0xB49A64")]
		private void OffMeshJumpHandler(OffMeshLinkData linkData, OffMeshLinkAnimation offMeshAnimation)
		{
		}

		[Token(Token = "0x6001E83")]
		[Address(RVA = "0xB49DC0", Offset = "0xB49DC0", VA = "0xB49DC0")]
		private void OffMeshTimelineHandler(OffMeshLinkData linkData, OffMeshLinkAnimation offMeshAnimation)
		{
		}

		[Token(Token = "0x6001E84")]
		[Address(RVA = "0xB4A728", Offset = "0xB4A728", VA = "0xB4A728")]
		private void SetOffMeshLinkOrientation(OffMeshLinkData linkdata, bool upIsDefault)
		{
		}

		[Token(Token = "0x6001E85")]
		[Address(RVA = "0xB4A9C0", Offset = "0xB4A9C0", VA = "0xB4A9C0")]
		private void EnableOffMeshTraversalAnimation(int offMeshLinkType)
		{
		}

		[Token(Token = "0x6001E86")]
		[Address(RVA = "0xB4AB10", Offset = "0xB4AB10", VA = "0xB4AB10")]
		private void DisableOffMeshTraversalAnimation()
		{
		}

		[Token(Token = "0x6001E87")]
		[Address(RVA = "0xB46334", Offset = "0xB46334", VA = "0xB46334")]
		public void SetAvoidancePriority(int avoidancePriority)
		{
		}

		[Token(Token = "0x6001E88")]
		[Address(RVA = "0xB4AC64", Offset = "0xB4AC64", VA = "0xB4AC64")]
		public Locomotion()
		{
		}
	}
	[Token(Token = "0x20003CE")]
	public enum LocomotionLockState
	{
		[Token(Token = "0x4001750")]
		Open,
		[Token(Token = "0x4001751")]
		Locked,
		[Token(Token = "0x4001752")]
		Cancelable
	}
	[Token(Token = "0x20003CF")]
	[DisallowMultipleComponent]
	public class OffMeshLinkAnimation : MonoBehaviour
	{
		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x936B88", Offset = "0x936B88")]
		[SerializeField]
		private NavMeshLinkType m_linkType;

		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private OffMeshLink m_offMeshLink;

		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private NavMeshLink m_navMeshLink;

		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x936BF4", Offset = "0x936BF4")]
		[SerializeField]
		private OffMeshLinkAnimationType m_animationType;

		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private OffMeshLinkTimeline m_timelineTraversal;

		[Token(Token = "0x17000381")]
		public OffMeshLinkAnimationType OffMeshAnimationType
		{
			[Token(Token = "0x6001E89")]
			[Address(RVA = "0xB48B5C", Offset = "0xB48B5C", VA = "0xB48B5C")]
			get
			{
				return default(OffMeshLinkAnimationType);
			}
		}

		[Token(Token = "0x17000382")]
		public NavMeshLinkType LinkType
		{
			[Token(Token = "0x6001E8A")]
			[Address(RVA = "0xB4A5C8", Offset = "0xB4A5C8", VA = "0xB4A5C8")]
			get
			{
				return default(NavMeshLinkType);
			}
		}

		[Token(Token = "0x17000383")]
		public Vector3 StartPosition
		{
			[Token(Token = "0x6001E8B")]
			[Address(RVA = "0xB4A644", Offset = "0xB4A644", VA = "0xB4A644")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000384")]
		public Quaternion StartRotation
		{
			[Token(Token = "0x6001E8C")]
			[Address(RVA = "0xB4A7A4", Offset = "0xB4A7A4", VA = "0xB4A7A4")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x17000385")]
		public Vector3 EndPosition
		{
			[Token(Token = "0x6001E8D")]
			[Address(RVA = "0xB4AA2C", Offset = "0xB4AA2C", VA = "0xB4AA2C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000386")]
		public Quaternion EndRotation
		{
			[Token(Token = "0x6001E8E")]
			[Address(RVA = "0xB4A5D0", Offset = "0xB4A5D0", VA = "0xB4A5D0")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x17000387")]
		public OffMeshLinkTimeline TimelineTraversal
		{
			[Token(Token = "0x6001E8F")]
			[Address(RVA = "0xB4AB78", Offset = "0xB4AB78", VA = "0xB4AB78")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000388")]
		public Vector3 OffMeshDistance
		{
			[Token(Token = "0x6001E90")]
			[Address(RVA = "0xB4A818", Offset = "0xB4A818", VA = "0xB4A818")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0xB4AD88", Offset = "0xB4AD88", VA = "0xB4AD88")]
		private bool IsNavMeshLink()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E92")]
		[Address(RVA = "0xB4AD98", Offset = "0xB4AD98", VA = "0xB4AD98")]
		private bool IsUpsidedownOffMeshLink()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E93")]
		[Address(RVA = "0xB4AE78", Offset = "0xB4AE78", VA = "0xB4AE78")]
		private void ClearOpposite()
		{
		}

		[Token(Token = "0x6001E94")]
		[Address(RVA = "0xB4AE94", Offset = "0xB4AE94", VA = "0xB4AE94")]
		private void VerifyOffMeshLinkTransform()
		{
		}

		[Token(Token = "0x6001E95")]
		[Address(RVA = "0xB4AF78", Offset = "0xB4AF78", VA = "0xB4AF78")]
		private void VerifyNavMeshLinkTransform()
		{
		}

		[Token(Token = "0x6001E96")]
		[Address(RVA = "0xB4B05C", Offset = "0xB4B05C", VA = "0xB4B05C")]
		public OffMeshLinkAnimation()
		{
		}
	}
	[Token(Token = "0x20003D0")]
	public enum OffMeshLinkAnimationType
	{
		[Token(Token = "0x4001759")]
		Walk,
		[Token(Token = "0x400175A")]
		ClimbUp,
		[Token(Token = "0x400175B")]
		DropDown,
		[Token(Token = "0x400175C")]
		GapJump,
		[Token(Token = "0x400175D")]
		Teleport,
		[Token(Token = "0x400175E")]
		Timeline,
		[Token(Token = "0x400175F")]
		SkipJump,
		[Token(Token = "0x4001760")]
		ClimbDown
	}
	[Token(Token = "0x20003D1")]
	public enum NavMeshLinkType
	{
		[Token(Token = "0x4001762")]
		OffMeshLink,
		[Token(Token = "0x4001763")]
		NavMeshLink
	}
	[Token(Token = "0x20003D2")]
	public class OffMeshLinkTimeline : MonoBehaviour
	{
		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PlayableDirector m_playableDirector;

		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x936C60", Offset = "0x936C60")]
		private bool <IsPlaying>k__BackingField;

		[Token(Token = "0x17000389")]
		public bool IsPlaying
		{
			[Token(Token = "0x6001E97")]
			[Address(RVA = "0xB4AC5C", Offset = "0xB4AC5C", VA = "0xB4AC5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93DB48", Offset = "0x93DB48")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E98")]
			[Address(RVA = "0xB4B064", Offset = "0xB4B064", VA = "0xB4B064")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93DB58", Offset = "0x93DB58")]
			private set
			{
			}
		}

		[Token(Token = "0x6001E99")]
		[Address(RVA = "0xB4AB80", Offset = "0xB4AB80", VA = "0xB4AB80")]
		public void StartTimelineTransition(Animator animator)
		{
		}

		[Token(Token = "0x6001E9A")]
		[Address(RVA = "0xB4B070", Offset = "0xB4B070", VA = "0xB4B070")]
		private void FinishTimeline(PlayableDirector director)
		{
		}

		[Token(Token = "0x6001E9B")]
		[Address(RVA = "0xB4B110", Offset = "0xB4B110", VA = "0xB4B110")]
		public OffMeshLinkTimeline()
		{
		}
	}
	[Token(Token = "0x20003D3")]
	public enum PickUpAnimationType
	{
		[Token(Token = "0x4001767")]
		Low,
		[Token(Token = "0x4001768")]
		Middle,
		[Token(Token = "0x4001769")]
		High
	}
	[Token(Token = "0x20003D4")]
	public class RecipeCheckMark : MonoBehaviour
	{
		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int sm_panProperty;

		[Token(Token = "0x400176B")]
		private const float VisiblePanValue = 0f;

		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private InventoryItemData m_inventoryItemData;

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer m_meshRenderer;

		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_tweenTime;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool m_isListeningToEvent;

		[Token(Token = "0x6001E9C")]
		[Address(RVA = "0xB4B118", Offset = "0xB4B118", VA = "0xB4B118")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001E9D")]
		[Address(RVA = "0xB4B2E0", Offset = "0xB4B2E0", VA = "0xB4B2E0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001E9E")]
		[Address(RVA = "0xB4B3BC", Offset = "0xB4B3BC", VA = "0xB4B3BC")]
		private void OnInventoryUpdated(InventoryItemData itemData)
		{
		}

		[Token(Token = "0x6001E9F")]
		[Address(RVA = "0xB4B5B0", Offset = "0xB4B5B0", VA = "0xB4B5B0")]
		public RecipeCheckMark()
		{
		}
	}
	[Token(Token = "0x20003D5")]
	public class RigScaler : MonoBehaviour
	{
		[Token(Token = "0x6001EA1")]
		[Address(RVA = "0xB4B628", Offset = "0xB4B628", VA = "0xB4B628")]
		public void ResetScale(PlayableCharacter character)
		{
		}

		[Token(Token = "0x6001EA2")]
		[Address(RVA = "0xB4B748", Offset = "0xB4B748", VA = "0xB4B748")]
		public void RetainTimelineScale(PlayableCharacter character)
		{
		}

		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0xB4B8B8", Offset = "0xB4B8B8", VA = "0xB4B8B8")]
		public RigScaler()
		{
		}
	}
	[Token(Token = "0x20003D6")]
	public class SelectionAnimationController : MonoBehaviour
	{
		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PointerInteractableHold m_interactable;

		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int m_cardProgressHash;

		[Token(Token = "0x6001EA4")]
		[Address(RVA = "0xB4C8A4", Offset = "0xB4C8A4", VA = "0xB4C8A4")]
		public void Update()
		{
		}

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0xB4C90C", Offset = "0xB4C90C", VA = "0xB4C90C")]
		public SelectionAnimationController()
		{
		}
	}
	[Token(Token = "0x20003D7")]
	public class AnimationActiveSerializer : SaveObject
	{
		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_defaultActiveSaveState;

		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0xB3DD88", Offset = "0xB3DD88", VA = "0xB3DD88", Slot = "8")]
		public override void Deserialize(IReadSave save)
		{
		}

		[Token(Token = "0x6001EA7")]
		[Address(RVA = "0xB3DED4", Offset = "0xB3DED4", VA = "0xB3DED4", Slot = "9")]
		public override void Serialize(IWriteSave save)
		{
		}

		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0xB3E008", Offset = "0xB3E008", VA = "0xB3E008")]
		public AnimationActiveSerializer()
		{
		}
	}
	[Token(Token = "0x20003D8")]
	public class AnimationDataSerializer : SaveObject
	{
		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x936CE0", Offset = "0x936CE0")]
		[SerializeField]
		private AnimationData m_animationData;

		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x936D3C", Offset = "0x936D3C")]
		[SerializeField]
		private bool m_triggerOnLoad;

		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool m_hasTriggered;

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AnimationSavableData m_animationSavableData;

		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0xB3E22C", Offset = "0xB3E22C", VA = "0xB3E22C")]
		public void TriggerAnimation()
		{
		}

		[Token(Token = "0x6001EAA")]
		[Address(RVA = "0xB3E274", Offset = "0xB3E274", VA = "0xB3E274")]
		public void SetHasTriggered(bool hasTriggered)
		{
		}

		[Token(Token = "0x6001EAB")]
		[Address(RVA = "0xB3E280", Offset = "0xB3E280", VA = "0xB3E280", Slot = "9")]
		public override void Serialize(IWriteSave save)
		{
		}

		[Token(Token = "0x6001EAC")]
		[Address(RVA = "0xB3E470", Offset = "0xB3E470", VA = "0xB3E470", Slot = "8")]
		public override void Deserialize(IReadSave save)
		{
		}

		[Token(Token = "0x6001EAD")]
		[Address(RVA = "0xB3E5CC", Offset = "0xB3E5CC", VA = "0xB3E5CC")]
		private AnimationSavableData GetDefaultSaveData()
		{
			return null;
		}

		[Token(Token = "0x6001EAE")]
		[Address(RVA = "0xB3E734", Offset = "0xB3E734", VA = "0xB3E734")]
		public AnimationDataSerializer()
		{
		}
	}
	[Token(Token = "0x20003D9")]
	public abstract class AnimationSavableData : SavableData
	{
		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool HasTriggered;

		[Token(Token = "0x6001EAF")]
		[Address(RVA = "0xB3EEB8", Offset = "0xB3EEB8", VA = "0xB3EEB8", Slot = "4")]
		public virtual void SetValue(bool value)
		{
		}

		[Token(Token = "0x6001EB0")]
		[Address(RVA = "0xB3EEBC", Offset = "0xB3EEBC", VA = "0xB3EEBC", Slot = "5")]
		public virtual void SetValue(float value)
		{
		}

		[Token(Token = "0x6001EB1")]
		[Address(RVA = "0xB3EEC0", Offset = "0xB3EEC0", VA = "0xB3EEC0", Slot = "6")]
		public virtual void SetValue(int value)
		{
		}

		[Token(Token = "0x6001EB2")]
		[Address(RVA = "0xB3EEC4", Offset = "0xB3EEC4", VA = "0xB3EEC4")]
		protected AnimationSavableData()
		{
		}
	}
	[Token(Token = "0x20003DA")]
	public class SavableAnimationBool : AnimationSavableData
	{
		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool Value;

		[Token(Token = "0x6001EB3")]
		[Address(RVA = "0xB4C888", Offset = "0xB4C888", VA = "0xB4C888", Slot = "4")]
		public override void SetValue(bool value)
		{
		}

		[Token(Token = "0x6001EB4")]
		[Address(RVA = "0xB3E724", Offset = "0xB3E724", VA = "0xB3E724")]
		public SavableAnimationBool()
		{
		}
	}
	[Token(Token = "0x20003DB")]
	public class SavableAnimationFloat : AnimationSavableData
	{
		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float Value;

		[Token(Token = "0x6001EB5")]
		[Address(RVA = "0xB4C894", Offset = "0xB4C894", VA = "0xB4C894", Slot = "5")]
		public override void SetValue(float value)
		{
		}

		[Token(Token = "0x6001EB6")]
		[Address(RVA = "0xB3E714", Offset = "0xB3E714", VA = "0xB3E714")]
		public SavableAnimationFloat()
		{
		}
	}
	[Token(Token = "0x20003DC")]
	public class SavableAnimationInt : AnimationSavableData
	{
		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int Value;

		[Token(Token = "0x6001EB7")]
		[Address(RVA = "0xB4C89C", Offset = "0xB4C89C", VA = "0xB4C89C", Slot = "6")]
		public override void SetValue(int value)
		{
		}

		[Token(Token = "0x6001EB8")]
		[Address(RVA = "0xB3E71C", Offset = "0xB3E71C", VA = "0xB3E71C")]
		public SavableAnimationInt()
		{
		}
	}
	[Token(Token = "0x20003DD")]
	public class SavableAnimationTrigger : AnimationSavableData
	{
		[Token(Token = "0x6001EB9")]
		[Address(RVA = "0xB3E72C", Offset = "0xB3E72C", VA = "0xB3E72C")]
		public SavableAnimationTrigger()
		{
		}
	}
	[Token(Token = "0x20003DE")]
	public class SMBDeltaCorrection : StateMachineBehaviour
	{
		[Serializable]
		[Token(Token = "0x200060E")]
		private struct TargetWeightMask
		{
			[Token(Token = "0x4002212")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 PositionXYZWeight;

			[Token(Token = "0x4002213")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float RotationWeight;

			[Token(Token = "0x60027E8")]
			[Address(RVA = "0x9CCFA0", Offset = "0x9CCFA0", VA = "0x9CCFA0")]
			public TargetWeightMask(Vector3 positionXYZWeight, float rotationWeight)
			{
			}

			[Token(Token = "0x60027E9")]
			[Address(RVA = "0xB4C270", Offset = "0xB4C270", VA = "0xB4C270")]
			public static implicit operator MatchTargetWeightMask(TargetWeightMask myMask)
			{
				return default(MatchTargetWeightMask);
			}
		}

		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x936D88", Offset = "0x936D88")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x936D88", Offset = "0x936D88")]
		private float m_normalizedStartTime;

		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x936DEC", Offset = "0x936DEC")]
		private float m_normalizedFinishTime;

		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x936E2C", Offset = "0x936E2C")]
		[SerializeField]
		private TargetWeightMask m_targetWeightMask;

		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private DeltaCorrectionLink m_deltaCorrectionComponent;

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_hasDeltaCorrection;

		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool m_isCorrectionExecuted;

		[Token(Token = "0x6001EBA")]
		[Address(RVA = "0xB4C04C", Offset = "0xB4C04C", VA = "0xB4C04C", Slot = "4")]
		public override void OnStateEnter(Animator animator, AnimatorStateInfo animatorStateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001EBB")]
		[Address(RVA = "0xB4C118", Offset = "0xB4C118", VA = "0xB4C118", Slot = "5")]
		public override void OnStateUpdate(Animator animator, AnimatorStateInfo animatorStateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001EBC")]
		[Address(RVA = "0xB4C2A0", Offset = "0xB4C2A0", VA = "0xB4C2A0")]
		public SMBDeltaCorrection()
		{
		}
	}
	[Token(Token = "0x20003DF")]
	public class SMBLocomotionDeltaCorrection : StateMachineBehaviour
	{
		[Serializable]
		[Token(Token = "0x200060F")]
		private struct TargetWeightMask
		{
			[Token(Token = "0x4002214")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 PositionXYZWeight;

			[Token(Token = "0x4002215")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float RotationWeight;

			[Token(Token = "0x60027EA")]
			[Address(RVA = "0x9CD018", Offset = "0x9CD018", VA = "0x9CD018")]
			public TargetWeightMask(Vector3 positionXYZWeight, float rotationWeight)
			{
			}

			[Token(Token = "0x60027EB")]
			[Address(RVA = "0xB4C630", Offset = "0xB4C630", VA = "0xB4C630")]
			public static implicit operator MatchTargetWeightMask(TargetWeightMask myMask)
			{
				return default(MatchTargetWeightMask);
			}
		}

		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x936E78", Offset = "0x936E78")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x936E78", Offset = "0x936E78")]
		private float m_normalizedStartTime;

		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x936EDC", Offset = "0x936EDC")]
		private float m_normalizedFinishTime;

		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x936F1C", Offset = "0x936F1C")]
		[SerializeField]
		private TargetWeightMask m_targetWeightMask;

		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Locomotion m_locomotion;

		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_isCorrectionExecuted;

		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool m_isFinished;

		[Token(Token = "0x6001EBD")]
		[Address(RVA = "0xB4C348", Offset = "0xB4C348", VA = "0xB4C348", Slot = "4")]
		public override void OnStateEnter(Animator animator, AnimatorStateInfo animatorStateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001EBE")]
		[Address(RVA = "0xB4C424", Offset = "0xB4C424", VA = "0xB4C424", Slot = "5")]
		public override void OnStateUpdate(Animator animator, AnimatorStateInfo animatorStateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001EBF")]
		[Address(RVA = "0xB4C660", Offset = "0xB4C660", VA = "0xB4C660")]
		public SMBLocomotionDeltaCorrection()
		{
		}
	}
	[Token(Token = "0x20003E0")]
	public class SMBLoopVelocity : StateMachineBehaviour
	{
		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x936F68", Offset = "0x936F68")]
		private float m_startingFallSpeed;

		[Token(Token = "0x400178B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x936FB4", Offset = "0x936FB4")]
		private string m_fallingSpeedParameter;

		[Token(Token = "0x400178C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x937000", Offset = "0x937000")]
		private float m_defaultParameterSpeed;

		[Token(Token = "0x400178D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x93704C", Offset = "0x93704C")]
		private float m_terminalVelocity;

		[Token(Token = "0x400178E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_currentFallSpeed;

		[Token(Token = "0x400178F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_elapsedTime;

		[Token(Token = "0x6001EC0")]
		[Address(RVA = "0xB4C674", Offset = "0xB4C674", VA = "0xB4C674", Slot = "4")]
		public override void OnStateEnter(Animator animator, AnimatorStateInfo animatorStateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0xB4C6D4", Offset = "0xB4C6D4", VA = "0xB4C6D4", Slot = "5")]
		public override void OnStateUpdate(Animator animator, AnimatorStateInfo animatorStateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001EC2")]
		[Address(RVA = "0xB4C7E0", Offset = "0xB4C7E0", VA = "0xB4C7E0", Slot = "6")]
		public override void OnStateExit(Animator animator, AnimatorStateInfo animatorStateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001EC3")]
		[Address(RVA = "0xB4C828", Offset = "0xB4C828", VA = "0xB4C828")]
		public SMBLoopVelocity()
		{
		}
	}
	[Token(Token = "0x20003E1")]
	public class TransformRotationLerper : MonoBehaviour
	{
		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x937098", Offset = "0x937098")]
		[SerializeField]
		private Transform m_targetTransform;

		[Token(Token = "0x4001791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_useScriptableFloat;

		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private FloatVariable m_scriptableFloat;

		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x937104", Offset = "0x937104")]
		[SerializeField]
		private Vector3 m_startRotation;

		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private Vector3 m_finalRotation;

		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion m_cachedStartRotation;

		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion m_cachedFinalRotation;

		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_internalLerpValue;

		[Token(Token = "0x1700038A")]
		private float LerpValue
		{
			[Token(Token = "0x6001EC4")]
			[Address(RVA = "0xB4C96C", Offset = "0xB4C96C", VA = "0xB4C96C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001EC5")]
			[Address(RVA = "0xB4C9AC", Offset = "0xB4C9AC", VA = "0xB4C9AC")]
			set
			{
			}
		}

		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0xB4CA08", Offset = "0xB4CA08", VA = "0xB4CA08")]
		private void Start()
		{
		}

		[Token(Token = "0x6001EC7")]
		[Address(RVA = "0xB4CAC0", Offset = "0xB4CAC0", VA = "0xB4CAC0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EC8")]
		[Address(RVA = "0xB4CBD4", Offset = "0xB4CBD4", VA = "0xB4CBD4")]
		public void SetLerpValue(float newValue)
		{
		}

		[Token(Token = "0x6001EC9")]
		[Address(RVA = "0xB4CAC4", Offset = "0xB4CAC4", VA = "0xB4CAC4")]
		private void SlerpRotation()
		{
		}

		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0xB4CBD8", Offset = "0xB4CBD8", VA = "0xB4CBD8")]
		public TransformRotationLerper()
		{
		}
	}
}
namespace Cortopia.Scripts.Animation.SMB
{
	[Token(Token = "0x20003E2")]
	public class SMBIdleRandomizer : StateMachineBehaviour
	{
		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string m_flavorIdleTriggerParameter;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x937170", Offset = "0x937170")]
		[SerializeField]
		private float m_variationChance;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9371BC", Offset = "0x9371BC")]
		[SerializeField]
		private int m_minLoops;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int m_maxLoops;

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_elapsedTime;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int m_currentLoop;

		[Token(Token = "0x6001ECB")]
		[Address(RVA = "0xB4B8C0", Offset = "0xB4B8C0", VA = "0xB4B8C0", Slot = "4")]
		public override void OnStateEnter(Animator animator, AnimatorStateInfo animatorStateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0xB4B8C8", Offset = "0xB4B8C8", VA = "0xB4B8C8", Slot = "5")]
		public override void OnStateUpdate(Animator animator, AnimatorStateInfo animatorStateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0xB4B988", Offset = "0xB4B988", VA = "0xB4B988")]
		private void RandomIdleTrigger(Animator animator)
		{
		}

		[Token(Token = "0x6001ECE")]
		[Address(RVA = "0xB4B9E4", Offset = "0xB4B9E4", VA = "0xB4B9E4")]
		public SMBIdleRandomizer()
		{
		}
	}
	[Token(Token = "0x20003E3")]
	public class SMBLocomotionLocker : StateMachineBehaviour
	{
		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_lockLocomotion;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private SMBState m_executionState;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x937238", Offset = "0x937238")]
		private float m_normalizedExecuteTime;

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool m_canExecuteInOverrideControllers;

		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Locomotion m_locomotion;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_hasExecuted;

		[Token(Token = "0x6001ECF")]
		[Address(RVA = "0xB4BA44", Offset = "0xB4BA44", VA = "0xB4BA44", Slot = "4")]
		public override void OnStateEnter(Animator animator, AnimatorStateInfo animatorStateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001ED0")]
		[Address(RVA = "0xB4BC60", Offset = "0xB4BC60", VA = "0xB4BC60", Slot = "5")]
		public override void OnStateUpdate(Animator animator, AnimatorStateInfo animatorStateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001ED1")]
		[Address(RVA = "0xB4BCCC", Offset = "0xB4BCCC", VA = "0xB4BCCC", Slot = "6")]
		public override void OnStateExit(Animator animator, AnimatorStateInfo animatorStateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001ED2")]
		[Address(RVA = "0xB4BB7C", Offset = "0xB4BB7C", VA = "0xB4BB7C")]
		private bool IsStateExecutable(SMBState state)
		{
			return default(bool);
		}

		[Token(Token = "0x6001ED3")]
		[Address(RVA = "0xB4BC1C", Offset = "0xB4BC1C", VA = "0xB4BC1C")]
		private void Execute()
		{
		}

		[Token(Token = "0x6001ED4")]
		[Address(RVA = "0xB4BD1C", Offset = "0xB4BD1C", VA = "0xB4BD1C")]
		public SMBLocomotionLocker()
		{
		}
	}
	[Token(Token = "0x20003E4")]
	public class SMBParameterController : StateMachineBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000610")]
		public struct IntParameter
		{
			[Token(Token = "0x4002216")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string ParameterID;

			[Token(Token = "0x4002217")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int NewValue;
		}

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string[] m_boolsToEnable;

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string[] m_boolsToDisable;

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string[] m_triggersToSet;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string[] m_triggersToReset;

		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private IntParameter[] m_intsToSet;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private SMBState m_executionState;

		[Token(Token = "0x6001ED5")]
		[Address(RVA = "0xB4BD24", Offset = "0xB4BD24", VA = "0xB4BD24", Slot = "4")]
		public override void OnStateEnter(Animator animator, AnimatorStateInfo animatorStateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001ED6")]
		[Address(RVA = "0xB4BF7C", Offset = "0xB4BF7C", VA = "0xB4BF7C", Slot = "5")]
		public override void OnStateUpdate(Animator animator, AnimatorStateInfo animatorStateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001ED7")]
		[Address(RVA = "0xB4BF90", Offset = "0xB4BF90", VA = "0xB4BF90", Slot = "6")]
		public override void OnStateExit(Animator animator, AnimatorStateInfo animatorStateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001ED8")]
		[Address(RVA = "0xB4BD34", Offset = "0xB4BD34", VA = "0xB4BD34")]
		private void SetParameters(Animator animator)
		{
		}

		[Token(Token = "0x6001ED9")]
		[Address(RVA = "0xB4BFA4", Offset = "0xB4BFA4", VA = "0xB4BFA4")]
		public SMBParameterController()
		{
		}
	}
	[Token(Token = "0x20003E5")]
	public enum SMBState
	{
		[Token(Token = "0x40017AB")]
		OnEnter,
		[Token(Token = "0x40017AC")]
		OnUpdate,
		[Token(Token = "0x40017AD")]
		OnExit
	}
}
namespace Cortopia.Scripts.Animation.Events
{
	[Token(Token = "0x20003E6")]
	public abstract class SMBAnimationEvent : StateMachineBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000611")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9280A0", Offset = "0x9280A0")]
		private sealed class <>c
		{
			[Token(Token = "0x4002218")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002219")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<SMBEventCollection, AnimationClip> <>9__7_0;

			[Token(Token = "0x60027ED")]
			[Address(RVA = "0xB443BC", Offset = "0xB443BC", VA = "0xB443BC")]
			public <>c()
			{
			}

			[Token(Token = "0x60027EE")]
			[Address(RVA = "0xB443C4", Offset = "0xB443C4", VA = "0xB443C4")]
			internal AnimationClip <OnStateEnter>b__7_0(SMBEventCollection x)
			{
				return null;
			}
		}

		[Token(Token = "0x40017AE")]
		private const float ResetTimeThreshold = 0.999f;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float MinBlendWeight;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<SMBEventCollection> EventCollections;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool CanExecuteInOverrideControllers;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected ISet<AnimationClip> m_eventClips;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<AnimatorClipInfo> sm_animatorClipInfos;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_normalizedTime;

		[Token(Token = "0x6001EDA")]
		[Address(RVA = "0xB43820", Offset = "0xB43820", VA = "0xB43820", Slot = "4")]
		public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001EDB")]
		[Address(RVA = "0xB43B50", Offset = "0xB43B50", VA = "0xB43B50", Slot = "5")]
		public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001EDC")]
		[Address(RVA = "0xB440C4", Offset = "0xB440C4", VA = "0xB440C4", Slot = "18")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x93DB68", Offset = "0x93DB68")]
		public virtual void ResetData()
		{
		}

		[Token(Token = "0x6001EDD")]
		[Address(RVA = "0xB440C8", Offset = "0xB440C8", VA = "0xB440C8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x93DBA0", Offset = "0x93DBA0")]
		public void UpdateEventData(AnimationClip animationClip, int eventIndex = 0)
		{
		}

		[Token(Token = "0x6001EDE")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x93DBD8", Offset = "0x93DBD8")]
		protected abstract void SetEventParameters(IReadOnlyList<SMBEvent> events);

		[Token(Token = "0x6001EDF")]
		protected abstract void SetBehaviourReferences(Animator animator);

		[Token(Token = "0x6001EE0")]
		protected abstract void TriggeredEvent(int eventIndex, int paramIndex);

		[Token(Token = "0x6001EE1")]
		[Address(RVA = "0xB43F14", Offset = "0xB43F14", VA = "0xB43F14")]
		private void CheckEventFireConditions(SMBEventCollection eventCollection, float normalizedTime, float clipWeight)
		{
		}

		[Token(Token = "0x6001EE2")]
		[Address(RVA = "0xB43A10", Offset = "0xB43A10", VA = "0xB43A10")]
		private void ResetEvents()
		{
		}

		[Token(Token = "0x6001EE3")]
		[Address(RVA = "0xB44264", Offset = "0xB44264", VA = "0xB44264")]
		protected SMBAnimationEvent()
		{
		}
	}
	[Token(Token = "0x20003E7")]
	public class SMBAudioEvent : SMBAnimationEvent
	{
		[Token(Token = "0x2000612")]
		public enum SMBAudioEventType
		{
			[Token(Token = "0x400221B")]
			SoundEffect,
			[Token(Token = "0x400221C")]
			FootStep,
			[Token(Token = "0x400221D")]
			StopSoundEffect
		}

		[Serializable]
		[Token(Token = "0x2000613")]
		public struct SMBEventParam
		{
			[Token(Token = "0x400221E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SMBAudioEventType[] EventTypes;

			[Token(Token = "0x400221F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public SoundEffect[] SoundEffects;

			[Token(Token = "0x60027EF")]
			[Address(RVA = "0x9CCEAC", Offset = "0x9CCEAC", VA = "0x9CCEAC")]
			public SMBEventParam(int size)
			{
			}
		}

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool UseUnifiedEventCall;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<SMBEventParam> EventParams;

		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CharacterSfxHandler m_characterSFXHandler;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private SoundEffect m_eventSfx;

		[Token(Token = "0x6001EE5")]
		[Address(RVA = "0xB443CC", Offset = "0xB443CC", VA = "0xB443CC", Slot = "4")]
		public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6001EE6")]
		[Address(RVA = "0xB44480", Offset = "0xB44480", VA = "0xB44480", Slot = "18")]
		public override void ResetData()
		{
		}

		[Token(Token = "0x6001EE7")]
		[Address(RVA = "0xB44484", Offset = "0xB44484", VA = "0xB44484", Slot = "19")]
		protected override void SetEventParameters(IReadOnlyList<SMBEvent> events)
		{
		}

		[Token(Token = "0x6001EE8")]
		[Address(RVA = "0xB44488", Offset = "0xB44488", VA = "0xB44488", Slot = "20")]
		protected override void SetBehaviourReferences(Animator animator)
		{
		}

		[Token(Token = "0x6001EE9")]
		[Address(RVA = "0xB445E8", Offset = "0xB445E8", VA = "0xB445E8", Slot = "21")]
		protected override void TriggeredEvent(int eventIndex, int paramIndex)
		{
		}

		[Token(Token = "0x6001EEA")]
		[Address(RVA = "0xB448E4", Offset = "0xB448E4", VA = "0xB448E4")]
		public SMBAudioEvent()
		{
		}
	}
	[Token(Token = "0x20003E8")]
	public class SMBParticleEvent : SMBAnimationEvent
	{
		[Token(Token = "0x2000614")]
		public enum ParticleSystemAction
		{
			[Token(Token = "0x4002221")]
			Play,
			[Token(Token = "0x4002222")]
			Stop
		}

		[Serializable]
		[Token(Token = "0x2000615")]
		public struct SMBEventParam
		{
			[Token(Token = "0x4002223")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ParticleSystemAction[] Actions;

			[Token(Token = "0x4002224")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public ParticleSystemStopBehavior[] StopBehaviours;

			[Token(Token = "0x4002225")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool[] IncludeChildren;

			[Token(Token = "0x4002226")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string[] ParticleSystemIDs;

			[Token(Token = "0x60027F0")]
			[Address(RVA = "0x9CCF00", Offset = "0x9CCF00", VA = "0x9CCF00")]
			public SMBEventParam(int size)
			{
			}
		}

		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<SMBEventParam> EventParams;

		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AnimationEventParticles m_eventParticleHandler;

		[Token(Token = "0x6001EEB")]
		[Address(RVA = "0xB449F4", Offset = "0xB449F4", VA = "0xB449F4", Slot = "20")]
		protected override void SetBehaviourReferences(Animator animator)
		{
		}

		[Token(Token = "0x6001EEC")]
		[Address(RVA = "0xB44A9C", Offset = "0xB44A9C", VA = "0xB44A9C", Slot = "18")]
		public override void ResetData()
		{
		}

		[Token(Token = "0x6001EED")]
		[Address(RVA = "0xB44AA0", Offset = "0xB44AA0", VA = "0xB44AA0", Slot = "19")]
		protected override void SetEventParameters(IReadOnlyList<SMBEvent> events)
		{
		}

		[Token(Token = "0x6001EEE")]
		[Address(RVA = "0xB44AA4", Offset = "0xB44AA4", VA = "0xB44AA4", Slot = "21")]
		protected override void TriggeredEvent(int eventIndex, int paramIndex)
		{
		}

		[Token(Token = "0x6001EEF")]
		[Address(RVA = "0xB44CD4", Offset = "0xB44CD4", VA = "0xB44CD4")]
		public SMBParticleEvent()
		{
		}
	}
	[Token(Token = "0x20003E9")]
	public class SMBPickupEvent : SMBAnimationEvent
	{
		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CharacterAnimationHandler m_characterAnimationHandler;

		[Token(Token = "0x6001EF0")]
		[Address(RVA = "0xB44E14", Offset = "0xB44E14", VA = "0xB44E14", Slot = "19")]
		protected override void SetEventParameters(IReadOnlyList<SMBEvent> events)
		{
		}

		[Token(Token = "0x6001EF1")]
		[Address(RVA = "0xB44E18", Offset = "0xB44E18", VA = "0xB44E18", Slot = "20")]
		protected override void SetBehaviourReferences(Animator animator)
		{
		}

		[Token(Token = "0x6001EF2")]
		[Address(RVA = "0xB44EC0", Offset = "0xB44EC0", VA = "0xB44EC0", Slot = "21")]
		protected override void TriggeredEvent(int eventIndex, int paramIndex)
		{
		}

		[Token(Token = "0x6001EF3")]
		[Address(RVA = "0xB44EFC", Offset = "0xB44EFC", VA = "0xB44EFC")]
		public SMBPickupEvent()
		{
		}
	}
	[Token(Token = "0x20003EA")]
	public class SMBSocketEvent : SMBAnimationEvent
	{
		[Serializable]
		[Token(Token = "0x2000616")]
		public struct SMBEventParam
		{
			[Token(Token = "0x4002227")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SocketEventType[] EventTypes;

			[Token(Token = "0x4002228")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public SocketType[] SocketTypes;

			[Token(Token = "0x60027F1")]
			[Address(RVA = "0x9CCF08", Offset = "0x9CCF08", VA = "0x9CCF08")]
			public SMBEventParam(int size)
			{
			}
		}

		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<SMBEventParam> EventParams;

		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SocketHandler m_socketHandler;

		[Token(Token = "0x6001EF4")]
		[Address(RVA = "0xB44F60", Offset = "0xB44F60", VA = "0xB44F60", Slot = "18")]
		public override void ResetData()
		{
		}

		[Token(Token = "0x6001EF5")]
		[Address(RVA = "0xB44F64", Offset = "0xB44F64", VA = "0xB44F64", Slot = "19")]
		protected override void SetEventParameters(IReadOnlyList<SMBEvent> events)
		{
		}

		[Token(Token = "0x6001EF6")]
		[Address(RVA = "0xB44F68", Offset = "0xB44F68", VA = "0xB44F68", Slot = "20")]
		protected override void SetBehaviourReferences(Animator animator)
		{
		}

		[Token(Token = "0x6001EF7")]
		[Address(RVA = "0xB45010", Offset = "0xB45010", VA = "0xB45010", Slot = "21")]
		protected override void TriggeredEvent(int eventIndex, int paramIndex)
		{
		}

		[Token(Token = "0x6001EF8")]
		[Address(RVA = "0xB451D0", Offset = "0xB451D0", VA = "0xB451D0")]
		public SMBSocketEvent()
		{
		}
	}
}
namespace Cortopia.Scripts.Animation.Constraints
{
	[Token(Token = "0x20003EB")]
	public class CustomParentConstraint : MonoBehaviour
	{
		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9372F4", Offset = "0x9372F4")]
		[SerializeField]
		private Transform m_defaultParent;

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_defaultChild;

		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x937350", Offset = "0x937350")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x937350", Offset = "0x937350")]
		private float m_weight;

		[Token(Token = "0x40017C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private bool m_updateParentTransform;

		[Token(Token = "0x40017C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[SerializeField]
		private bool m_constrainOverTime;

		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_constraintBlendTime;

		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9373E4", Offset = "0x9373E4")]
		private float m_startingWeight;

		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x937424", Offset = "0x937424")]
		private float m_targetWeight;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x937464", Offset = "0x937464")]
		[SerializeField]
		private bool m_constrainPosition;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[SerializeField]
		private bool m_keepCurrentPositionOffsets;

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Vector3 m_customPositionOffset;

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9374D0", Offset = "0x9374D0")]
		[SerializeField]
		private bool m_constrainRotation;

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		[SerializeField]
		private bool m_keepCurrentRotationOffset;

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Vector3 m_customRotationOffset;

		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform m_parent;

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform m_child;

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 m_childStartingPosition;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Quaternion m_childStartingRotation;

		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 m_targetPosition;

		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Quaternion m_targetRotation;

		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 m_childPositionOffset;

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Matrix4x4 m_parentMatrix;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private bool m_isConstraintActive;

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float m_elapsedTime;

		[Token(Token = "0x1700038B")]
		public float Weight
		{
			[Token(Token = "0x6001EF9")]
			[Address(RVA = "0xB409D0", Offset = "0xB409D0", VA = "0xB409D0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001EFA")]
		[Address(RVA = "0xB409D8", Offset = "0xB409D8", VA = "0xB409D8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001EFB")]
		[Address(RVA = "0xB40F84", Offset = "0xB40F84", VA = "0xB40F84")]
		public void EnableConstraint(Transform newParent, Transform newChild)
		{
		}

		[Token(Token = "0x6001EFC")]
		[Address(RVA = "0xB4120C", Offset = "0xB4120C", VA = "0xB4120C")]
		public void EnableConstraint(Transform newChild)
		{
		}

		[Token(Token = "0x6001EFD")]
		[Address(RVA = "0xB41220", Offset = "0xB41220", VA = "0xB41220")]
		public void EnableConstraint()
		{
		}

		[Token(Token = "0x6001EFE")]
		[Address(RVA = "0xB41228", Offset = "0xB41228", VA = "0xB41228")]
		public void DisableConstraint()
		{
		}

		[Token(Token = "0x6001EFF")]
		[Address(RVA = "0xB40C28", Offset = "0xB40C28", VA = "0xB40C28")]
		private void UpdateParentPositionTransforms()
		{
		}

		[Token(Token = "0x6001F00")]
		[Address(RVA = "0xB40DC0", Offset = "0xB40DC0", VA = "0xB40DC0")]
		private void UpdateParentRotationTransforms()
		{
		}

		[Token(Token = "0x6001F01")]
		[Address(RVA = "0xB411CC", Offset = "0xB411CC", VA = "0xB411CC")]
		private Vector3 DivideVectors(Vector3 num, Vector3 den)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F02")]
		[Address(RVA = "0xB41230", Offset = "0xB41230", VA = "0xB41230")]
		public CustomParentConstraint()
		{
		}
	}
	[Token(Token = "0x20003EC")]
	public class LerpConstraint : MonoBehaviour
	{
		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x93753C", Offset = "0x93753C")]
		[SerializeField]
		private Transform m_parentJoint;

		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_childJoint;

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x937598", Offset = "0x937598")]
		[SerializeField]
		private bool m_constrainPosition;

		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool m_keepPositionOffset;

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_positionLerpStrength;

		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x937604", Offset = "0x937604")]
		[SerializeField]
		private bool m_constrainRotation;

		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		private bool m_keepRotationOffset;

		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_rotationLerpStrength;

		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x937670", Offset = "0x937670")]
		[SerializeField]
		private bool m_constrainOnStart;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool m_constrainActive;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 m_childPositionOffset;

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion m_childRotationOffset;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion m_parentRotationOffset;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Matrix4x4 m_parentMatrix;

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 m_targetPosition;

		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Quaternion m_targetRotation;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float m_deltaAngle;

		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float m_deltaDistance;

		[Token(Token = "0x6001F03")]
		[Address(RVA = "0xB412C4", Offset = "0xB412C4", VA = "0xB412C4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F04")]
		[Address(RVA = "0xB414F8", Offset = "0xB414F8", VA = "0xB414F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F05")]
		[Address(RVA = "0xB412D4", Offset = "0xB412D4", VA = "0xB412D4")]
		public void ActivateConstraint()
		{
		}

		[Token(Token = "0x6001F06")]
		[Address(RVA = "0xB41A20", Offset = "0xB41A20", VA = "0xB41A20")]
		public void DeactivateConstraint()
		{
		}

		[Token(Token = "0x6001F07")]
		[Address(RVA = "0xB41508", Offset = "0xB41508", VA = "0xB41508")]
		private void Constrain()
		{
		}

		[Token(Token = "0x6001F08")]
		[Address(RVA = "0xB419E0", Offset = "0xB419E0", VA = "0xB419E0")]
		private Vector3 DivideVectors(Vector3 num, Vector3 den)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001F09")]
		[Address(RVA = "0xB41A28", Offset = "0xB41A28", VA = "0xB41A28")]
		public LerpConstraint()
		{
		}
	}
	[Token(Token = "0x20003ED")]
	public class LookAtPlayer : LookIKGeneric
	{
		[Token(Token = "0x40017E8")]
		private const float TargetUpdateSpeed = 0.5f;

		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private bool m_constraintOnStart;

		[Token(Token = "0x6001F0A")]
		[Address(RVA = "0xB41A30", Offset = "0xB41A30", VA = "0xB41A30")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F0B")]
		[Address(RVA = "0xB41A40", Offset = "0xB41A40", VA = "0xB41A40")]
		public void UpdateTarget()
		{
		}

		[Token(Token = "0x6001F0C")]
		[Address(RVA = "0xB41B2C", Offset = "0xB41B2C", VA = "0xB41B2C")]
		public LookAtPlayer()
		{
		}
	}
	[Token(Token = "0x20003EE")]
	public class LookIKGeneric : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000617")]
		public class JointConstraint
		{
			[Token(Token = "0x4002229")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform Joint;

			[Token(Token = "0x400222A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 RotationForwardOffset;

			[Token(Token = "0x400222B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float LookWeight;

			[Token(Token = "0x400222C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[HideInInspector]
			public Quaternion CurrentAnimatorRotation;

			[Token(Token = "0x60027F2")]
			[Address(RVA = "0xB424E4", Offset = "0xB424E4", VA = "0xB424E4")]
			public JointConstraint()
			{
			}
		}

		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9376CC", Offset = "0x9376CC")]
		[SerializeField]
		private JointConstraint[] m_eyeJoints;

		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private JointConstraint m_headJoint;

		[Token(Token = "0x40017EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private JointConstraint m_chestJoint;

		[Token(Token = "0x40017ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private JointConstraint[] m_additionalJoints;

		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x937748", Offset = "0x937748")]
		[SerializeField]
		private float m_defaultBlendSpeed;

		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private AnimationCurve m_constraintTweenCurve;

		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Transform m_target;

		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_isIKActive;

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_masterLerpValue;

		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_targetWeight;

		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float m_lerpSpeed;

		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 m_targetPosition;

		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float m_startLerpValue;

		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 m_startPosition;

		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float m_lerpProgression;

		[Token(Token = "0x1700038C")]
		public Transform HeadJoint
		{
			[Token(Token = "0x6001F0D")]
			[Address(RVA = "0xB3FEAC", Offset = "0xB3FEAC", VA = "0xB3FEAC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F0E")]
		[Address(RVA = "0xB41BB4", Offset = "0xB41BB4", VA = "0xB41BB4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001F0F")]
		[Address(RVA = "0xB421CC", Offset = "0xB421CC", VA = "0xB421CC")]
		public void EnableLookIK(PlayableCharacter character)
		{
		}

		[Token(Token = "0x6001F10")]
		[Address(RVA = "0xB404F0", Offset = "0xB404F0", VA = "0xB404F0")]
		public void EnableLookIK(Transform target)
		{
		}

		[Token(Token = "0x6001F11")]
		[Address(RVA = "0xB40394", Offset = "0xB40394", VA = "0xB40394")]
		public void EnableLookIK(Transform target, float blendSpeed)
		{
		}

		[Token(Token = "0x6001F12")]
		[Address(RVA = "0xB40744", Offset = "0xB40744", VA = "0xB40744")]
		public void DisableLookIK()
		{
		}

		[Token(Token = "0x6001F13")]
		[Address(RVA = "0xB40680", Offset = "0xB40680", VA = "0xB40680")]
		public void DisableLookIK(float blendSpeed)
		{
		}

		[Token(Token = "0x6001F14")]
		[Address(RVA = "0xB41C08", Offset = "0xB41C08", VA = "0xB41C08")]
		private void SetCurrentAnimationValues()
		{
		}

		[Token(Token = "0x6001F15")]
		[Address(RVA = "0xB4223C", Offset = "0xB4223C", VA = "0xB4223C")]
		private void InitilizeLerp(float blendSpeed)
		{
		}

		[Token(Token = "0x6001F16")]
		[Address(RVA = "0xB41E70", Offset = "0xB41E70", VA = "0xB41E70")]
		private void LookIKSolver()
		{
		}

		[Token(Token = "0x6001F17")]
		[Address(RVA = "0xB422B0", Offset = "0xB422B0", VA = "0xB422B0")]
		private void ApplyConstraintBlend(JointConstraint jointConstraint, Vector3 targetLookAtPoint, float masterLerpValue)
		{
		}

		[Token(Token = "0x6001F18")]
		[Address(RVA = "0xB41B30", Offset = "0xB41B30", VA = "0xB41B30")]
		public LookIKGeneric()
		{
		}
	}
	[Token(Token = "0x20003EF")]
	public class MultiLookAtConstraint : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000618")]
		public class JointConstraint
		{
			[Token(Token = "0x400222D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform Joint;

			[Token(Token = "0x400222E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 RotationForwardOffset;

			[Token(Token = "0x400222F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float ConstrainWeight;

			[Token(Token = "0x60027F3")]
			[Address(RVA = "0xB42B48", Offset = "0xB42B48", VA = "0xB42B48")]
			public JointConstraint()
			{
			}
		}

		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9377A4", Offset = "0x9377A4")]
		[SerializeField]
		private bool m_lookAtPlayer;

		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform m_target;

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x937800", Offset = "0x937800")]
		[SerializeField]
		private JointConstraint[] m_jointConstraints;

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x93784C", Offset = "0x93784C")]
		[SerializeField]
		private bool m_constraintOnStart;

		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_defaultBlendSpeed;

		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_isConstraintActive;

		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_masterLerpValue;

		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_targetWeight;

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float m_lerpSpeed;

		[Token(Token = "0x6001F19")]
		[Address(RVA = "0xB424EC", Offset = "0xB424EC", VA = "0xB424EC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F1A")]
		[Address(RVA = "0xB4263C", Offset = "0xB4263C", VA = "0xB4263C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001F1B")]
		[Address(RVA = "0xB42A70", Offset = "0xB42A70", VA = "0xB42A70")]
		public void EnableConstraint(PlayableCharacter character)
		{
		}

		[Token(Token = "0x6001F1C")]
		[Address(RVA = "0xB42ABC", Offset = "0xB42ABC", VA = "0xB42ABC")]
		public void EnableConstraint(float blendSpeed)
		{
		}

		[Token(Token = "0x6001F1D")]
		[Address(RVA = "0xB42628", Offset = "0xB42628", VA = "0xB42628")]
		public void EnableConstraint(Transform target, float blendSpeed)
		{
		}

		[Token(Token = "0x6001F1E")]
		[Address(RVA = "0xB42ACC", Offset = "0xB42ACC", VA = "0xB42ACC")]
		public void DisableConstraint(float blendSpeed)
		{
		}

		[Token(Token = "0x6001F1F")]
		[Address(RVA = "0xB42758", Offset = "0xB42758", VA = "0xB42758")]
		private void ConstraintHandler()
		{
		}

		[Token(Token = "0x6001F20")]
		[Address(RVA = "0xB42AD8", Offset = "0xB42AD8", VA = "0xB42AD8")]
		public MultiLookAtConstraint()
		{
		}
	}
	[Token(Token = "0x20003F0")]
	public class TranslationToRotationConstraint : MonoBehaviour
	{
		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x9378A8", Offset = "0x9378A8")]
		[SerializeField]
		private Transform m_motionSource;

		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Vector3 m_motionAxis;

		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x937904", Offset = "0x937904")]
		private Vector3 m_rotationAxis;

		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private float m_rotationPerUnit;

		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x937960", Offset = "0x937960")]
		[SerializeField]
		private bool m_enableOnAwake;

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[SerializeField]
		private bool m_isAnimatorDriven;

		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x9379BC", Offset = "0x9379BC")]
		private float m_weight;

		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 m_motionSourceLastFramePosition;

		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float m_motionSourceDeltaMovement;

		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool m_isEnabled;

		[Token(Token = "0x1700038D")]
		public float Weight
		{
			[Token(Token = "0x6001F21")]
			[Address(RVA = "0xB42B50", Offset = "0xB42B50", VA = "0xB42B50")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001F22")]
		[Address(RVA = "0xB42B58", Offset = "0xB42B58", VA = "0xB42B58")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F23")]
		[Address(RVA = "0xB42B64", Offset = "0xB42B64", VA = "0xB42B64")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F24")]
		[Address(RVA = "0xB42D84", Offset = "0xB42D84", VA = "0xB42D84")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001F25")]
		[Address(RVA = "0xB42C4C", Offset = "0xB42C4C", VA = "0xB42C4C")]
		private void ApplyConstraint()
		{
		}

		[Token(Token = "0x6001F26")]
		[Address(RVA = "0xB42C0C", Offset = "0xB42C0C", VA = "0xB42C0C")]
		private void UpdateLastFramePosition()
		{
		}

		[Token(Token = "0x6001F27")]
		[Address(RVA = "0xB42E2C", Offset = "0xB42E2C", VA = "0xB42E2C")]
		public void EnableConstraint()
		{
		}

		[Token(Token = "0x6001F28")]
		[Address(RVA = "0xB42E38", Offset = "0xB42E38", VA = "0xB42E38")]
		public void DisableConstraint()
		{
		}

		[Token(Token = "0x6001F29")]
		[Address(RVA = "0xB42E40", Offset = "0xB42E40", VA = "0xB42E40")]
		public TranslationToRotationConstraint()
		{
		}
	}
}
namespace Cortopia.Scripts.AI
{
	[Token(Token = "0x20003F1")]
	public class DialogueBehaviour : BE_AI
	{
		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_delayTimer;

		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9379FC", Offset = "0x9379FC")]
		private bool <IsDelayingSpeak>k__BackingField;

		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x937A0C", Offset = "0x937A0C")]
		private float <SpeakDelay>k__BackingField;

		[Token(Token = "0x1700038E")]
		public bool IsDelayingSpeak
		{
			[Token(Token = "0x6001F2A")]
			[Address(RVA = "0xB3A980", Offset = "0xB3A980", VA = "0xB3A980")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93DC10", Offset = "0x93DC10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001F2B")]
			[Address(RVA = "0xB3B04C", Offset = "0xB3B04C", VA = "0xB3B04C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93DC20", Offset = "0x93DC20")]
			set
			{
			}
		}

		[Token(Token = "0x1700038F")]
		public float SpeakDelay
		{
			[Token(Token = "0x6001F2C")]
			[Address(RVA = "0xB3B060", Offset = "0xB3B060", VA = "0xB3B060")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93DC30", Offset = "0x93DC30")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F2D")]
			[Address(RVA = "0xB3B044", Offset = "0xB3B044", VA = "0xB3B044")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93DC40", Offset = "0x93DC40")]
			set
			{
			}
		}

		[Token(Token = "0x6001F2E")]
		[Address(RVA = "0xB3B068", Offset = "0xB3B068", VA = "0xB3B068", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6001F2F")]
		[Address(RVA = "0xB3B0DC", Offset = "0xB3B0DC", VA = "0xB3B0DC")]
		public void EnableDialogueBehaviour(BehaviourSystem dialogue)
		{
		}

		[Token(Token = "0x6001F30")]
		[Address(RVA = "0xB3B10C", Offset = "0xB3B10C", VA = "0xB3B10C")]
		public void DisableDialogueBehaviour()
		{
		}

		[Token(Token = "0x6001F31")]
		[Address(RVA = "0xB3B118", Offset = "0xB3B118", VA = "0xB3B118")]
		public void SkipDialogueLine()
		{
		}

		[Token(Token = "0x6001F32")]
		[Address(RVA = "0xB3B030", Offset = "0xB3B030", VA = "0xB3B030")]
		public void ResetDelay()
		{
		}

		[Token(Token = "0x6001F33")]
		[Address(RVA = "0xB3B124", Offset = "0xB3B124", VA = "0xB3B124")]
		public DialogueBehaviour()
		{
		}
	}
}
namespace Cortopia.Scripts.AI.Tutorial
{
	[Token(Token = "0x20003F2")]
	public class ClimbTutorial : TutorialBehaviour
	{
		[Token(Token = "0x2000619")]
		private enum TutorialState
		{
			[Token(Token = "0x4002231")]
			FirstRoot,
			[Token(Token = "0x4002232")]
			SecondRoot,
			[Token(Token = "0x4002233")]
			ThirdRoot,
			[Token(Token = "0x4002234")]
			Rotate
		}

		[Token(Token = "0x200061A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9280B0", Offset = "0x9280B0")]
		private sealed class <HideRotationHintRoutine>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002235")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002236")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002237")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ClimbTutorial <>4__this;

			[Token(Token = "0x170004FE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027F7")]
				[Address(RVA = "0xB3D454", Offset = "0xB3D454", VA = "0xB3D454", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170004FF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027F9")]
				[Address(RVA = "0xB3D4C4", Offset = "0xB3D4C4", VA = "0xB3D4C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027F4")]
			[Address(RVA = "0xB3D278", Offset = "0xB3D278", VA = "0xB3D278")]
			[DebuggerHidden]
			public <HideRotationHintRoutine>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x60027F5")]
			[Address(RVA = "0xB3D398", Offset = "0xB3D398", VA = "0xB3D398", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027F6")]
			[Address(RVA = "0xB3D39C", Offset = "0xB3D39C", VA = "0xB3D39C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027F8")]
			[Address(RVA = "0xB3D45C", Offset = "0xB3D45C", VA = "0xB3D45C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400180F")]
		private const float HideRotationHintAfterDuration = 8f;

		[Token(Token = "0x4001810")]
		private const float EndAfterDuration = 4f;

		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private Grabbable[] m_roots;

		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private CharacterReactor[] m_characterReactors;

		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private Transform[] m_narrationSubtitleTransforms;

		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private TutorialState m_currentState;

		[Token(Token = "0x17000390")]
		private bool IncludeRotationInstruction
		{
			[Token(Token = "0x6001F34")]
			[Address(RVA = "0xB3C918", Offset = "0xB3C918", VA = "0xB3C918")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001F35")]
		[Address(RVA = "0xB3C920", Offset = "0xB3C920", VA = "0xB3C920", Slot = "7")]
		public override void StartTutorial()
		{
		}

		[Token(Token = "0x6001F36")]
		[Address(RVA = "0xB3CCC0", Offset = "0xB3CCC0", VA = "0xB3CCC0")]
		public void OnGrabbedFirstRoot(Grabber grabber)
		{
		}

		[Token(Token = "0x6001F37")]
		[Address(RVA = "0xB3CE3C", Offset = "0xB3CE3C", VA = "0xB3CE3C")]
		public void OnGrabbedSecondRoot(Grabber grabber)
		{
		}

		[Token(Token = "0x6001F38")]
		[Address(RVA = "0xB3CE94", Offset = "0xB3CE94", VA = "0xB3CE94")]
		public void OnGrabbedThirdRoot(Grabber grabber)
		{
		}

		[Token(Token = "0x6001F39")]
		[Address(RVA = "0xB3CF8C", Offset = "0xB3CF8C", VA = "0xB3CF8C")]
		public void OnHideRotationHint()
		{
		}

		[Token(Token = "0x6001F3A")]
		[Address(RVA = "0xB3CF9C", Offset = "0xB3CF9C", VA = "0xB3CF9C", Slot = "8")]
		protected override void OnTutorialEnded()
		{
		}

		[Token(Token = "0x6001F3B")]
		[Address(RVA = "0xB3CA00", Offset = "0xB3CA00", VA = "0xB3CA00")]
		private void AddGrabBeginListeners()
		{
		}

		[Token(Token = "0x6001F3C")]
		[Address(RVA = "0xB3D084", Offset = "0xB3D084", VA = "0xB3D084")]
		private void RemoveGrabBeginListeners()
		{
		}

		[Token(Token = "0x6001F3D")]
		[Address(RVA = "0xB3CBA8", Offset = "0xB3CBA8", VA = "0xB3CBA8")]
		private void ShowRootAtCurrentState()
		{
		}

		[Token(Token = "0x6001F3E")]
		[Address(RVA = "0xB3CD28", Offset = "0xB3CD28", VA = "0xB3CD28")]
		private void PlayBanterAtCurrentState()
		{
		}

		[Token(Token = "0x6001F3F")]
		[Address(RVA = "0xB3CF18", Offset = "0xB3CF18", VA = "0xB3CF18")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93DC50", Offset = "0x93DC50")]
		private IEnumerator HideRotationHintRoutine()
		{
			return null;
		}

		[Token(Token = "0x6001F40")]
		[Address(RVA = "0xB3D2A4", Offset = "0xB3D2A4", VA = "0xB3D2A4")]
		public ClimbTutorial()
		{
		}
	}
	[Token(Token = "0x20003F3")]
	public class StartGameTutorial : TutorialBehaviour
	{
		[Token(Token = "0x200061B")]
		private enum TutorialState
		{
			[Token(Token = "0x4002239")]
			Move,
			[Token(Token = "0x400223A")]
			Interact,
			[Token(Token = "0x400223B")]
			FindKey,
			[Token(Token = "0x400223C")]
			OpenHatch
		}

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject m_locationIndicator;

		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private InteractableObject m_hatchInteractionLocked;

		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private InteractableObject m_hatchInteractionUnlocked;

		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private InteractableObject m_keyInteraction;

		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private TutorialState m_currentState;

		[Token(Token = "0x6001F41")]
		[Address(RVA = "0xB3D4CC", Offset = "0xB3D4CC", VA = "0xB3D4CC", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001F42")]
		[Address(RVA = "0xB3D584", Offset = "0xB3D584", VA = "0xB3D584", Slot = "7")]
		public override void StartTutorial()
		{
		}

		[Token(Token = "0x6001F43")]
		[Address(RVA = "0xB3D690", Offset = "0xB3D690", VA = "0xB3D690")]
		public void OnEnterLocationTrigger()
		{
		}

		[Token(Token = "0x6001F44")]
		[Address(RVA = "0xB3D718", Offset = "0xB3D718", VA = "0xB3D718")]
		public void OnHatchAnimationCompleted()
		{
		}

		[Token(Token = "0x6001F45")]
		[Address(RVA = "0xB3D780", Offset = "0xB3D780", VA = "0xB3D780")]
		public void OnGotKeyAnimationCompleted()
		{
		}

		[Token(Token = "0x6001F46")]
		[Address(RVA = "0xB3D810", Offset = "0xB3D810", VA = "0xB3D810")]
		public StartGameTutorial()
		{
		}
	}
	[Token(Token = "0x20003F4")]
	public class TutorialBehaviour : BE_AI
	{
		[Token(Token = "0x200061C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x9280C0", Offset = "0x9280C0")]
		private sealed class <EndAfterDelay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400223D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400223E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400223F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TutorialBehaviour <>4__this;

			[Token(Token = "0x17000500")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60027FD")]
				[Address(RVA = "0xB3DD10", Offset = "0xB3DD10", VA = "0xB3DD10", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000501")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60027FF")]
				[Address(RVA = "0xB3DD80", Offset = "0xB3DD80", VA = "0xB3DD80", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60027FA")]
			[Address(RVA = "0xB3DC1C", Offset = "0xB3DC1C", VA = "0xB3DC1C")]
			[DebuggerHidden]
			public <EndAfterDelay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x60027FB")]
			[Address(RVA = "0xB3DC48", Offset = "0xB3DC48", VA = "0xB3DC48", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60027FC")]
			[Address(RVA = "0xB3DC4C", Offset = "0xB3DC4C", VA = "0xB3DC4C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60027FE")]
			[Address(RVA = "0xB3DD18", Offset = "0xB3DD18", VA = "0xB3DD18", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private TutorialScroll[] m_scrolls;

		[Token(Token = "0x400181B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private UnityEvent m_onTutorialEnded;

		[Token(Token = "0x400181C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private TutorialScroll m_currentScroll;

		[Token(Token = "0x400181D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x937AAC", Offset = "0x937AAC")]
		private int <CurrentObjective>k__BackingField;

		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x937ABC", Offset = "0x937ABC")]
		private int <TargetObjective>k__BackingField;

		[Token(Token = "0x400181F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x937ACC", Offset = "0x937ACC")]
		private int <NumberOfObjectives>k__BackingField;

		[Token(Token = "0x4001820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x937ADC", Offset = "0x937ADC")]
		private float <EndDelay>k__BackingField;

		[Token(Token = "0x17000391")]
		protected int CurrentObjective
		{
			[Token(Token = "0x6001F47")]
			[Address(RVA = "0xB3D814", Offset = "0xB3D814", VA = "0xB3D814")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93DCB4", Offset = "0x93DCB4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001F48")]
			[Address(RVA = "0xB3D81C", Offset = "0xB3D81C", VA = "0xB3D81C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93DCC4", Offset = "0x93DCC4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000392")]
		protected int TargetObjective
		{
			[Token(Token = "0x6001F49")]
			[Address(RVA = "0xB3D824", Offset = "0xB3D824", VA = "0xB3D824")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93DCD4", Offset = "0x93DCD4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001F4A")]
			[Address(RVA = "0xB3D82C", Offset = "0xB3D82C", VA = "0xB3D82C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93DCE4", Offset = "0x93DCE4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000393")]
		protected int NumberOfObjectives
		{
			[Token(Token = "0x6001F4B")]
			[Address(RVA = "0xB3D834", Offset = "0xB3D834", VA = "0xB3D834")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93DCF4", Offset = "0x93DCF4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001F4C")]
			[Address(RVA = "0xB3D83C", Offset = "0xB3D83C", VA = "0xB3D83C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93DD04", Offset = "0x93DD04")]
			private set
			{
			}
		}

		[Token(Token = "0x17000394")]
		protected float EndDelay
		{
			[Token(Token = "0x6001F4D")]
			[Address(RVA = "0xB3D844", Offset = "0xB3D844", VA = "0xB3D844")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93DD14", Offset = "0x93DD14")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F4E")]
			[Address(RVA = "0xB3D84C", Offset = "0xB3D84C", VA = "0xB3D84C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93DD24", Offset = "0x93DD24")]
			private set
			{
			}
		}

		[Token(Token = "0x6001F4F")]
		[Address(RVA = "0xB3D580", Offset = "0xB3D580", VA = "0xB3D580", Slot = "6")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001F50")]
		[Address(RVA = "0xB3D8F0", Offset = "0xB3D8F0", VA = "0xB3D8F0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001F51")]
		[Address(RVA = "0xB3C9FC", Offset = "0xB3C9FC", VA = "0xB3C9FC", Slot = "7")]
		public virtual void StartTutorial()
		{
		}

		[Token(Token = "0x6001F52")]
		[Address(RVA = "0xB3CD18", Offset = "0xB3CD18", VA = "0xB3CD18")]
		public void SetObjectiveCompleted()
		{
		}

		[Token(Token = "0x6001F53")]
		[Address(RVA = "0xB3DA34", Offset = "0xB3DA34", VA = "0xB3DA34")]
		public void HasCompletedObjective(BE_Action action)
		{
		}

		[Token(Token = "0x6001F54")]
		[Address(RVA = "0xB3D8F8", Offset = "0xB3D8F8", VA = "0xB3D8F8")]
		public bool TryOpenNextScroll()
		{
			return default(bool);
		}

		[Token(Token = "0x6001F55")]
		[Address(RVA = "0xB3DAB4", Offset = "0xB3DAB4", VA = "0xB3DAB4")]
		public void CloseCurrentScroll()
		{
		}

		[Token(Token = "0x6001F56")]
		[Address(RVA = "0xB3CF0C", Offset = "0xB3CF0C", VA = "0xB3CF0C")]
		public void SkipToLastObjective()
		{
		}

		[Token(Token = "0x6001F57")]
		[Address(RVA = "0xB3C9F4", Offset = "0xB3C9F4", VA = "0xB3C9F4")]
		protected void SetNumberOfObjectives(int objectivesNum)
		{
		}

		[Token(Token = "0x6001F58")]
		[Address(RVA = "0xB3D22C", Offset = "0xB3D22C", VA = "0xB3D22C", Slot = "8")]
		protected virtual void OnTutorialEnded()
		{
		}

		[Token(Token = "0x6001F59")]
		[Address(RVA = "0xB3CF04", Offset = "0xB3CF04", VA = "0xB3CF04")]
		protected void SetEndDelay(float newEndDelay)
		{
		}

		[Token(Token = "0x6001F5A")]
		[Address(RVA = "0xB3DB4C", Offset = "0xB3DB4C", VA = "0xB3DB4C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x93DD34", Offset = "0x93DD34")]
		private IEnumerator EndAfterDelay()
		{
			return null;
		}

		[Token(Token = "0x6001F5B")]
		[Address(RVA = "0xB3DBC0", Offset = "0xB3DBC0", VA = "0xB3DBC0")]
		private void EndTutorial()
		{
		}

		[Token(Token = "0x6001F5C")]
		[Address(RVA = "0xB3D854", Offset = "0xB3D854", VA = "0xB3D854")]
		private void DeactivateAllScrolls()
		{
		}

		[Token(Token = "0x6001F5D")]
		[Address(RVA = "0xB3D330", Offset = "0xB3D330", VA = "0xB3D330")]
		public TutorialBehaviour()
		{
		}
	}
}
namespace Cortopia.Scripts.AI.NPC.Workers
{
	[Token(Token = "0x20003F5")]
	public abstract class CardWork : Work
	{
		[Token(Token = "0x4001821")]
		protected const float RestFactor = 0.6f;

		[Token(Token = "0x4001822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private CastlesTree m_castlesTree;

		[Token(Token = "0x17000395")]
		public CastlesTree CastlesTree
		{
			[Token(Token = "0x6001F5E")]
			[Address(RVA = "0xB3B134", Offset = "0xB3B134", VA = "0xB3B134")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F5F")]
		[Address(RVA = "0xB3B13C", Offset = "0xB3B13C", VA = "0xB3B13C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F60")]
		public abstract void CreateWork(float duration, Transform location);

		[Token(Token = "0x6001F61")]
		public abstract void ReplaceWithRest();

		[Token(Token = "0x6001F62")]
		[Address(RVA = "0xB3B19C", Offset = "0xB3B19C", VA = "0xB3B19C", Slot = "4")]
		public override void OnWorkStarted(Character character)
		{
		}

		[Token(Token = "0x6001F63")]
		[Address(RVA = "0xB3B384", Offset = "0xB3B384", VA = "0xB3B384", Slot = "5")]
		public override void OnWorkCompleted(Character character)
		{
		}

		[Token(Token = "0x6001F64")]
		[Address(RVA = "0xB3B528", Offset = "0xB3B528", VA = "0xB3B528")]
		protected CardWork()
		{
		}
	}
	[Token(Token = "0x20003F6")]
	public class LumberjackWork : CardWork
	{
		[Token(Token = "0x200061D")]
		public enum LumberjackWorkType
		{
			[Token(Token = "0x4002241")]
			CutWood = 1,
			[Token(Token = "0x4002242")]
			CutTree,
			[Token(Token = "0x4002243")]
			Rest
		}

		[Token(Token = "0x4001823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private LumberjackWorkType m_workType;

		[Token(Token = "0x6001F65")]
		[Address(RVA = "0xB3B5D8", Offset = "0xB3B5D8", VA = "0xB3B5D8", Slot = "6")]
		public override void CreateWork(float duration, Transform location)
		{
		}

		[Token(Token = "0x6001F66")]
		[Address(RVA = "0xB3B704", Offset = "0xB3B704", VA = "0xB3B704", Slot = "7")]
		public override void ReplaceWithRest()
		{
		}

		[Token(Token = "0x6001F67")]
		[Address(RVA = "0xB3B768", Offset = "0xB3B768", VA = "0xB3B768")]
		public LumberjackWork()
		{
		}
	}
	[Token(Token = "0x20003F7")]
	public class NPCWorker : BE_AI
	{
		[Token(Token = "0x200061E")]
		public enum WorkerState
		{
			[Token(Token = "0x4002245")]
			Idle,
			[Token(Token = "0x4002246")]
			Moving,
			[Token(Token = "0x4002247")]
			Working
		}

		[Token(Token = "0x4001824")]
		private const float TaskInteractionDistance = 0.5f;

		[Token(Token = "0x4001825")]
		private const float RemainingWorkDecreaseFactor = 0.5f;

		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private CardWork[] m_work;

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private WorkerState m_workerState;

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float m_remainingDuration;

		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CardWork m_currentWork;

		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Task m_currentTask;

		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private ITaskable m_taskable;

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool m_isAtTaskLocation;

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool m_idle;

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Queue<CardWork> m_remainingWork;

		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private CardWork[] m_workCopy;

		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int m_workCount;

		[Token(Token = "0x6001F68")]
		[Address(RVA = "0xB3B774", Offset = "0xB3B774", VA = "0xB3B774")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F69")]
		[Address(RVA = "0xB3B8A0", Offset = "0xB3B8A0", VA = "0xB3B8A0")]
		public void IsIdle(BE_Action action)
		{
		}

		[Token(Token = "0x6001F6A")]
		[Address(RVA = "0xB3B99C", Offset = "0xB3B99C", VA = "0xB3B99C")]
		public void HasCompletedTask(BE_Action action)
		{
		}

		[Token(Token = "0x6001F6B")]
		[Address(RVA = "0xB3BB6C", Offset = "0xB3BB6C", VA = "0xB3BB6C")]
		public void HasReachedTask(BE_Action action)
		{
		}

		[Token(Token = "0x6001F6C")]
		[Address(RVA = "0xB3BCE8", Offset = "0xB3BCE8", VA = "0xB3BCE8")]
		public void PickNewTask(BE_Action action)
		{
		}

		[Token(Token = "0x6001F6D")]
		[Address(RVA = "0xB3BD1C", Offset = "0xB3BD1C", VA = "0xB3BD1C")]
		private void PickNextAssignment()
		{
		}

		[Token(Token = "0x6001F6E")]
		[Address(RVA = "0xB3BDAC", Offset = "0xB3BDAC", VA = "0xB3BDAC")]
		public void PerformIdle(BE_Action action)
		{
		}

		[Token(Token = "0x6001F6F")]
		[Address(RVA = "0xB3BE08", Offset = "0xB3BE08", VA = "0xB3BE08")]
		public void PerformMoveToTask(BE_Action action)
		{
		}

		[Token(Token = "0x6001F70")]
		[Address(RVA = "0xB3BE4C", Offset = "0xB3BE4C", VA = "0xB3BE4C")]
		public void PerformTask(BE_Action action)
		{
		}

		[Token(Token = "0x6001F71")]
		[Address(RVA = "0xB3C084", Offset = "0xB3C084", VA = "0xB3C084")]
		public void EnterIdle()
		{
		}

		[Token(Token = "0x6001F72")]
		[Address(RVA = "0xB3C090", Offset = "0xB3C090", VA = "0xB3C090")]
		public void ExitIdle()
		{
		}

		[Token(Token = "0x6001F73")]
		[Address(RVA = "0xB3C098", Offset = "0xB3C098", VA = "0xB3C098")]
		public void SetNewWork(Work[] newWork)
		{
		}

		[Token(Token = "0x6001F74")]
		[Address(RVA = "0xB3C144", Offset = "0xB3C144", VA = "0xB3C144")]
		public void AddSelectedWork(CardWork work)
		{
		}

		[Token(Token = "0x6001F75")]
		[Address(RVA = "0xB3C270", Offset = "0xB3C270", VA = "0xB3C270")]
		public void SetTaskDurationRemaining(float remainingDuration)
		{
		}

		[Token(Token = "0x6001F76")]
		[Address(RVA = "0xB3BDE8", Offset = "0xB3BDE8", VA = "0xB3BDE8")]
		private bool TryChangeWorkerState(WorkerState workerState)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F77")]
		[Address(RVA = "0xB3C278", Offset = "0xB3C278", VA = "0xB3C278")]
		private void CreateNewRandomWork()
		{
		}

		[Token(Token = "0x6001F78")]
		[Address(RVA = "0xB3B7D8", Offset = "0xB3B7D8", VA = "0xB3B7D8")]
		private void AddWorkToQueue()
		{
		}

		[Token(Token = "0x6001F79")]
		[Address(RVA = "0xB3C35C", Offset = "0xB3C35C", VA = "0xB3C35C")]
		private void OnTaskLocationReached(bool success)
		{
		}

		[Token(Token = "0x6001F7A")]
		[Address(RVA = "0xB3C4F8", Offset = "0xB3C4F8", VA = "0xB3C4F8")]
		public NPCWorker()
		{
		}
	}
	[Token(Token = "0x20003F8")]
	public class PainterWork : CardWork
	{
		[Token(Token = "0x200061F")]
		public enum PainterWorkType
		{
			[Token(Token = "0x4002249")]
			Paint = 1,
			[Token(Token = "0x400224A")]
			Rest
		}

		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private PainterWorkType m_workType;

		[Token(Token = "0x6001F7B")]
		[Address(RVA = "0xB3C59C", Offset = "0xB3C59C", VA = "0xB3C59C", Slot = "6")]
		public override void CreateWork(float duration, Transform location)
		{
		}

		[Token(Token = "0x6001F7C")]
		[Address(RVA = "0xB3C6A0", Offset = "0xB3C6A0", VA = "0xB3C6A0", Slot = "7")]
		public override void ReplaceWithRest()
		{
		}

		[Token(Token = "0x6001F7D")]
		[Address(RVA = "0xB3C704", Offset = "0xB3C704", VA = "0xB3C704")]
		public PainterWork()
		{
		}
	}
	[Token(Token = "0x20003F9")]
	public struct Task
	{
		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x937B4C", Offset = "0x937B4C")]
		private int <AnimationParam>k__BackingField;

		[Token(Token = "0x4001833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x937B5C", Offset = "0x937B5C")]
		private TaskType <TaskType>k__BackingField;

		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x937B6C", Offset = "0x937B6C")]
		private float <RemainingDuration>k__BackingField;

		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x937B7C", Offset = "0x937B7C")]
		private readonly Transform <Location>k__BackingField;

		[Token(Token = "0x17000396")]
		public int AnimationParam
		{
			[Token(Token = "0x6001F7E")]
			[Address(RVA = "0x9CCD3C", Offset = "0x9CCD3C", VA = "0x9CCD3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93DD98", Offset = "0x93DD98")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001F7F")]
			[Address(RVA = "0x9CCD44", Offset = "0x9CCD44", VA = "0x9CCD44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93DDA8", Offset = "0x93DDA8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000397")]
		public TaskType TaskType
		{
			[Token(Token = "0x6001F80")]
			[Address(RVA = "0x9CCD4C", Offset = "0x9CCD4C", VA = "0x9CCD4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93DDB8", Offset = "0x93DDB8")]
			get
			{
				return default(TaskType);
			}
			[Token(Token = "0x6001F81")]
			[Address(RVA = "0x9CCD54", Offset = "0x9CCD54", VA = "0x9CCD54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93DDC8", Offset = "0x93DDC8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000398")]
		public float RemainingDuration
		{
			[Token(Token = "0x6001F82")]
			[Address(RVA = "0x9CCD5C", Offset = "0x9CCD5C", VA = "0x9CCD5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93DDD8", Offset = "0x93DDD8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001F83")]
			[Address(RVA = "0x9CCD64", Offset = "0x9CCD64", VA = "0x9CCD64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93DDE8", Offset = "0x93DDE8")]
			set
			{
			}
		}

		[Token(Token = "0x17000399")]
		public Transform Location
		{
			[Token(Token = "0x6001F84")]
			[Address(RVA = "0x9CCD6C", Offset = "0x9CCD6C", VA = "0x9CCD6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93DDF8", Offset = "0x93DDF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F85")]
		[Address(RVA = "0x9CCD74", Offset = "0x9CCD74", VA = "0x9CCD74")]
		public Task(int animationParam, TaskType taskType, float duration, Transform location)
		{
		}

		[Token(Token = "0x6001F86")]
		[Address(RVA = "0x9CCD84", Offset = "0x9CCD84", VA = "0x9CCD84")]
		public void ReplaceWithRest()
		{
		}
	}
	[Token(Token = "0x20003FA")]
	public enum TaskType
	{
		[Token(Token = "0x4001837")]
		Unassigned,
		[Token(Token = "0x4001838")]
		Rest,
		[Token(Token = "0x4001839")]
		Work
	}
	[Token(Token = "0x20003FB")]
	public class TrimmerWork : CardWork
	{
		[Token(Token = "0x2000620")]
		public enum TrimmerWorkType
		{
			[Token(Token = "0x400224C")]
			Trim = 1,
			[Token(Token = "0x400224D")]
			Sharpen,
			[Token(Token = "0x400224E")]
			Rest
		}

		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrimmerWorkType m_workType;

		[Token(Token = "0x6001F87")]
		[Address(RVA = "0xB3C734", Offset = "0xB3C734", VA = "0xB3C734", Slot = "6")]
		public override void CreateWork(float duration, Transform location)
		{
		}

		[Token(Token = "0x6001F88")]
		[Address(RVA = "0xB3C83C", Offset = "0xB3C83C", VA = "0xB3C83C", Slot = "7")]
		public override void ReplaceWithRest()
		{
		}

		[Token(Token = "0x6001F89")]
		[Address(RVA = "0xB3C8A0", Offset = "0xB3C8A0", VA = "0xB3C8A0")]
		public TrimmerWork()
		{
		}
	}
	[Token(Token = "0x20003FC")]
	public class Work : MonoBehaviour
	{
		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MathUtils.MinMax m_duration;

		[Token(Token = "0x400183C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x937BAC", Offset = "0x937BAC")]
		[SerializeField]
		private CharacterEvent m_onWorkStarted;

		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CharacterEvent m_onWorkCompleted;

		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x937C08", Offset = "0x937C08")]
		private Task <Task>k__BackingField;

		[Token(Token = "0x1700039A")]
		public Task Task
		{
			[Token(Token = "0x6001F8A")]
			[Address(RVA = "0xB3B368", Offset = "0xB3B368", VA = "0xB3B368")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93DE08", Offset = "0x93DE08")]
			get
			{
				return default(Task);
			}
			[Token(Token = "0x6001F8B")]
			[Address(RVA = "0xB3B6F0", Offset = "0xB3B6F0", VA = "0xB3B6F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x93DE18", Offset = "0x93DE18")]
			protected set
			{
			}
		}

		[Token(Token = "0x6001F8C")]
		[Address(RVA = "0xB3B2F8", Offset = "0xB3B2F8", VA = "0xB3B2F8", Slot = "4")]
		public virtual void OnWorkStarted(Character character)
		{
		}

		[Token(Token = "0x6001F8D")]
		[Address(RVA = "0xB3B4B8", Offset = "0xB3B4B8", VA = "0xB3B4B8", Slot = "5")]
		public virtual void OnWorkCompleted(Character character)
		{
		}

		[Token(Token = "0x6001F8E")]
		[Address(RVA = "0xB3B190", Offset = "0xB3B190", VA = "0xB3B190")]
		protected float GetRandomDuration()
		{
			return default(float);
		}

		[Token(Token = "0x6001F8F")]
		[Address(RVA = "0xB3B52C", Offset = "0xB3B52C", VA = "0xB3B52C")]
		public Work()
		{
		}
	}
	[Token(Token = "0x20003FD")]
	public class WorkScheduler : MonoBehaviour
	{
		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private NPCWorker m_npcWorker;

		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_onlyFireOnce;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Work[] m_newWork;

		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool m_fired;

		[Token(Token = "0x6001F90")]
		[Address(RVA = "0xB3C8AC", Offset = "0xB3C8AC", VA = "0xB3C8AC")]
		public void ScheduleNewWork()
		{
		}

		[Token(Token = "0x6001F91")]
		[Address(RVA = "0xB3C908", Offset = "0xB3C908", VA = "0xB3C908")]
		public WorkScheduler()
		{
		}
	}
}
namespace Cortopia.Scripts.AI.Actions
{
	[Token(Token = "0x20003FE")]
	public class AddLookAtConstraint : BE_Action
	{
		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float BlendSpeed;

		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public CharacterData CharacterData;

		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool LookAtPlayer;

		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public CharacterData TargetCharacterData;

		[Token(Token = "0x6001F92")]
		[Address(RVA = "0xB39A64", Offset = "0xB39A64", VA = "0xB39A64", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001F93")]
		[Address(RVA = "0xB39AB8", Offset = "0xB39AB8", VA = "0xB39AB8", Slot = "5")]
		public override void Process()
		{
		}

		[Token(Token = "0x6001F94")]
		[Address(RVA = "0xB39AE0", Offset = "0xB39AE0", VA = "0xB39AE0")]
		private void LookAtTarget()
		{
		}

		[Token(Token = "0x6001F95")]
		[Address(RVA = "0xB39D68", Offset = "0xB39D68", VA = "0xB39D68")]
		public AddLookAtConstraint()
		{
		}
	}
	[Token(Token = "0x20003FF")]
	public class Animate : BE_Action
	{
		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x937C48", Offset = "0x937C48")]
		public CharacterData CharacterDataOverride;

		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string ParameterName;

		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimatorParameterType ParameterType;

		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float FloatValue;

		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int IntValue;

		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool BoolValue;

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AnimationData sm_animationData;

		[Token(Token = "0x6001F96")]
		[Address(RVA = "0xB39D78", Offset = "0xB39D78", VA = "0xB39D78", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001F97")]
		[Address(RVA = "0xB39DCC", Offset = "0xB39DCC", VA = "0xB39DCC", Slot = "5")]
		public override void Process()
		{
		}

		[Token(Token = "0x6001F98")]
		[Address(RVA = "0xB3A020", Offset = "0xB3A020", VA = "0xB3A020")]
		private void TriggerAnimation(AnimationData animationData)
		{
		}

		[Token(Token = "0x6001F99")]
		[Address(RVA = "0xB3A160", Offset = "0xB3A160", VA = "0xB3A160")]
		public Animate()
		{
		}
	}
	[Token(Token = "0x2000400")]
	public class CompleteDialogue : BE_Action
	{
		[Token(Token = "0x6001F9A")]
		[Address(RVA = "0xB3A168", Offset = "0xB3A168", VA = "0xB3A168", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001F9B")]
		[Address(RVA = "0xB3A1BC", Offset = "0xB3A1BC", VA = "0xB3A1BC", Slot = "5")]
		public override void Process()
		{
		}

		[Token(Token = "0x6001F9C")]
		[Address(RVA = "0xB3A244", Offset = "0xB3A244", VA = "0xB3A244")]
		public CompleteDialogue()
		{
		}
	}
	[Token(Token = "0x2000401")]
	public class FlavorTalk : BE_Action
	{
		[Token(Token = "0x400184E")]
		private const string FlavorTalkParamTypeID = "FlavorTalkType";

		[Token(Token = "0x400184F")]
		private const string FlavorTalkParamTriggerID = "FlavorTalk";

		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x937C80", Offset = "0x937C80")]
		public CharacterData CharacterDataOverride;

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int FlavorTalkID;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AnimationData sm_flavorTalkAnimationTypeData;

		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static AnimationData sm_flavorTalkAnimationTriggerData;

		[Token(Token = "0x6001F9D")]
		[Address(RVA = "0xB3A24C", Offset = "0xB3A24C", VA = "0xB3A24C", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001F9E")]
		[Address(RVA = "0xB3A2A0", Offset = "0xB3A2A0", VA = "0xB3A2A0", Slot = "5")]
		public override void Process()
		{
		}

		[Token(Token = "0x6001F9F")]
		[Address(RVA = "0xB3A3FC", Offset = "0xB3A3FC", VA = "0xB3A3FC")]
		private void TriggerAnimations()
		{
		}

		[Token(Token = "0x6001FA0")]
		[Address(RVA = "0xB3A5C0", Offset = "0xB3A5C0", VA = "0xB3A5C0")]
		public FlavorTalk()
		{
		}
	}
	[Token(Token = "0x2000402")]
	public class RemoveLookAtConstraint : BE_Action
	{
		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float BlendSpeed;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public CharacterData CharacterData;

		[Token(Token = "0x6001FA1")]
		[Address(RVA = "0xB3A5C8", Offset = "0xB3A5C8", VA = "0xB3A5C8", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001FA2")]
		[Address(RVA = "0xB3A61C", Offset = "0xB3A61C", VA = "0xB3A61C", Slot = "5")]
		public override void Process()
		{
		}

		[Token(Token = "0x6001FA3")]
		[Address(RVA = "0xB3A644", Offset = "0xB3A644", VA = "0xB3A644")]
		private void ResetLookAtTarget()
		{
		}

		[Token(Token = "0x6001FA4")]
		[Address(RVA = "0xB3A724", Offset = "0xB3A724", VA = "0xB3A724")]
		public RemoveLookAtConstraint()
		{
		}
	}
	[Token(Token = "0x2000403")]
	public class SetBoolVariable : BE_Action
	{
		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BoolVariable BoolVariable;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool BoolValue;

		[Token(Token = "0x6001FA5")]
		[Address(RVA = "0xB3A734", Offset = "0xB3A734", VA = "0xB3A734", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001FA6")]
		[Address(RVA = "0xB3A788", Offset = "0xB3A788", VA = "0xB3A788", Slot = "5")]
		public override void Process()
		{
		}

		[Token(Token = "0x6001FA7")]
		[Address(RVA = "0xB3A7C4", Offset = "0xB3A7C4", VA = "0xB3A7C4")]
		public SetBoolVariable()
		{
		}
	}
	[Token(Token = "0x2000404")]
	public class SetFacialExpression : BE_Action
	{
		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ExpressionData[] ExpressionData;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private DialogueBehaviour m_dialogueBehaviour;

		[Token(Token = "0x6001FA8")]
		[Address(RVA = "0xB3A7CC", Offset = "0xB3A7CC", VA = "0xB3A7CC", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001FA9")]
		[Address(RVA = "0xB3A820", Offset = "0xB3A820", VA = "0xB3A820", Slot = "5")]
		public override void Process()
		{
		}

		[Token(Token = "0x6001FAA")]
		[Address(RVA = "0xB3A988", Offset = "0xB3A988", VA = "0xB3A988")]
		public SetFacialExpression()
		{
		}
	}
	[Token(Token = "0x2000405")]
	public class SetIntVariable : BE_Action
	{
		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IntVariable IntVariable;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int IntValue;

		[Token(Token = "0x6001FAB")]
		[Address(RVA = "0xB3A990", Offset = "0xB3A990", VA = "0xB3A990", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001FAC")]
		[Address(RVA = "0xB3A9E4", Offset = "0xB3A9E4", VA = "0xB3A9E4", Slot = "5")]
		public override void Process()
		{
		}

		[Token(Token = "0x6001FAD")]
		[Address(RVA = "0xB3AA34", Offset = "0xB3AA34", VA = "0xB3AA34")]
		public SetIntVariable()
		{
		}
	}
	[Token(Token = "0x2000406")]
	public class ShowOptions : BE_Action
	{
		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IntVariable SelectedOptionIndex;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string[] OptionTitles;

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_showOptions;

		[Token(Token = "0x6001FAE")]
		[Address(RVA = "0xB3AA3C", Offset = "0xB3AA3C", VA = "0xB3AA3C", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001FAF")]
		[Address(RVA = "0xB3AA90", Offset = "0xB3AA90", VA = "0xB3AA90", Slot = "5")]
		public override void Process()
		{
		}

		[Token(Token = "0x6001FB0")]
		[Address(RVA = "0xB3AC18", Offset = "0xB3AC18", VA = "0xB3AC18")]
		private void SetIntVariable(int optionIndex)
		{
		}

		[Token(Token = "0x6001FB1")]
		[Address(RVA = "0xB3ACC8", Offset = "0xB3ACC8", VA = "0xB3ACC8")]
		public ShowOptions()
		{
		}
	}
	[Token(Token = "0x2000407")]
	public class Speak : BE_Action
	{
		[Token(Token = "0x2000621")]
		private enum SpeakState
		{
			[Token(Token = "0x4002250")]
			Delay,
			[Token(Token = "0x4002251")]
			Speak,
			[Token(Token = "0x4002252")]
			WaitForFinish
		}

		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public CharacterVoiceLine Line;

		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private DialogueBehaviour m_dialogueBehaviour;

		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SpeakState m_currentState;

		[Token(Token = "0x6001FB2")]
		[Address(RVA = "0xB3AD30", Offset = "0xB3AD30", VA = "0xB3AD30", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001FB3")]
		[Address(RVA = "0xB3AD84", Offset = "0xB3AD84", VA = "0xB3AD84", Slot = "5")]
		public override void Process()
		{
		}

		[Token(Token = "0x6001FB4")]
		[Address(RVA = "0xB3AFA8", Offset = "0xB3AFA8", VA = "0xB3AFA8")]
		private void ProcessDelay()
		{
		}

		[Token(Token = "0x6001FB5")]
		[Address(RVA = "0xB3B058", Offset = "0xB3B058", VA = "0xB3B058")]
		public Speak()
		{
		}
	}
}
