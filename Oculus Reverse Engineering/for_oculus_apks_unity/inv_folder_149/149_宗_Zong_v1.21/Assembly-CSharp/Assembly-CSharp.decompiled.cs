using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Text;
using AK.Wwise;
using Facebook.WitAi;
using Facebook.WitAi.Lib;
using ICSharpCode.SharpZipLib.Tar;
using Il2CppDummyDll;
using Obi;
using Oculus.Platform;
using Oculus.Platform.Models;
using Oculus.Voice;
using PixelCrushers;
using PixelCrushers.DialogueSystem;
using SimpleFileBrowser;
using TMPro;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using UnityEngine.UI.Extensions;
using UnityEngine.Video;
using UnityStandardAssets.Effects;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class FPSCheck : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TMP_Text fpsText;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float deltaTime;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x1179008", Offset = "0x1179008", VA = "0x1179008")]
	private void Update()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x1179094", Offset = "0x1179094", VA = "0x1179094")]
	public FPSCheck()
	{
	}
}
[Token(Token = "0x2000003")]
public class Borders
{
	[Token(Token = "0x2000004")]
	public class Border
	{
		[Token(Token = "0x4000003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vertices[] vertices;

		[Token(Token = "0x6000004")]
		[Address(RVA = "0x10A3494", Offset = "0x10A3494", VA = "0x10A3494")]
		public Border()
		{
		}
	}

	[Token(Token = "0x2000005")]
	public class BorderNormalized
	{
		[Token(Token = "0x4000004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vertices[] normalizedVertices;

		[Token(Token = "0x6000005")]
		[Address(RVA = "0x10A349C", Offset = "0x10A349C", VA = "0x10A349C")]
		public BorderNormalized()
		{
		}
	}

	[Token(Token = "0x2000006")]
	public class Vertices
	{
		[Token(Token = "0x4000005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float x;

		[Token(Token = "0x4000006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float y;

		[Token(Token = "0x6000006")]
		[Address(RVA = "0x10A34A4", Offset = "0x10A34A4", VA = "0x10A34A4")]
		public Vertices()
		{
		}
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x108C748", Offset = "0x108C748", VA = "0x108C748")]
	public Borders()
	{
	}
}
[Token(Token = "0x2000007")]
public class CropHintsDetection
{
	[Token(Token = "0x2000008")]
	public class CropHintsResponses
	{
		[Token(Token = "0x4000009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CropHintsAnnotation cropHintsAnnotation;

		[Token(Token = "0x6000008")]
		[Address(RVA = "0x10A3CA4", Offset = "0x10A3CA4", VA = "0x10A3CA4")]
		public CropHintsResponses()
		{
		}
	}

	[Token(Token = "0x2000009")]
	public class CropHintsAnnotation
	{
		[Token(Token = "0x400000A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CropHints[] cropHints;

		[Token(Token = "0x6000009")]
		[Address(RVA = "0x10A3C9C", Offset = "0x10A3C9C", VA = "0x10A3C9C")]
		public CropHintsAnnotation()
		{
		}
	}

	[Token(Token = "0x200000A")]
	public class CropHints
	{
		[Token(Token = "0x400000B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float confidence;

		[Token(Token = "0x400000C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float importanceFraction;

		[Token(Token = "0x400000D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Borders.Border boundingPoly;

		[Token(Token = "0x600000A")]
		[Address(RVA = "0x10A3C94", Offset = "0x10A3C94", VA = "0x10A3C94")]
		public CropHints()
		{
		}
	}

	[Token(Token = "0x4000007")]
	public const string TAG = "Crop Hints Detection";

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public CropHintsResponses[] responses;

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x109B65C", Offset = "0x109B65C", VA = "0x109B65C")]
	public CropHintsDetection()
	{
	}
}
[Token(Token = "0x200000B")]
public class ExplicitContentDetection
{
	[Token(Token = "0x200000C")]
	public class ExplicitContentResponses
	{
		[Token(Token = "0x4000010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SafeSearchAnnotation safeSearchAnnotation;

		[Token(Token = "0x600000C")]
		[Address(RVA = "0x10A5DA4", Offset = "0x10A5DA4", VA = "0x10A5DA4")]
		public ExplicitContentResponses()
		{
		}
	}

	[Token(Token = "0x200000D")]
	public class SafeSearchAnnotation
	{
		[Token(Token = "0x4000011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string adult;

		[Token(Token = "0x4000012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string spoof;

		[Token(Token = "0x4000013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string medical;

		[Token(Token = "0x4000014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string violence;

		[Token(Token = "0x4000015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string racy;

		[Token(Token = "0x600000D")]
		[Address(RVA = "0x10A5DAC", Offset = "0x10A5DAC", VA = "0x10A5DAC")]
		public SafeSearchAnnotation()
		{
		}
	}

	[Token(Token = "0x400000E")]
	public const string TAG = "Explicit Content Detection";

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ExplicitContentResponses[] responses;

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x1178654", Offset = "0x1178654", VA = "0x1178654")]
	public ExplicitContentDetection()
	{
	}
}
[Token(Token = "0x200000E")]
public class FacesDetection
{
	[Token(Token = "0x200000F")]
	public class FaceResponses
	{
		[Token(Token = "0x4000018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceAnnotations[] faceAnnotations;

		[Token(Token = "0x600000F")]
		[Address(RVA = "0x10A6A4C", Offset = "0x10A6A4C", VA = "0x10A6A4C")]
		public FaceResponses()
		{
		}
	}

	[Token(Token = "0x2000010")]
	public class FaceAnnotations
	{
		[Token(Token = "0x4000019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Borders.Border boundingPoly;

		[Token(Token = "0x6000010")]
		[Address(RVA = "0x10A6A44", Offset = "0x10A6A44", VA = "0x10A6A44")]
		public FaceAnnotations()
		{
		}
	}

	[Token(Token = "0x4000016")]
	public const string TAG = "Faces Detection";

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public FaceResponses[] responses;

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x11792E8", Offset = "0x11792E8", VA = "0x11792E8")]
	public FacesDetection()
	{
	}
}
[Token(Token = "0x2000011")]
public class ImagePropertiesDetection
{
	[Token(Token = "0x2000012")]
	public class ImagePropertiesResponses
	{
		[Token(Token = "0x400001C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ImagePropertiesAnnotation imagePropertiesAnnotation;

		[Token(Token = "0x6000012")]
		[Address(RVA = "0x10A9A84", Offset = "0x10A9A84", VA = "0x10A9A84")]
		public ImagePropertiesResponses()
		{
		}
	}

	[Token(Token = "0x2000013")]
	public class ImagePropertiesAnnotation
	{
		[Token(Token = "0x400001D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DominantColors dominantColors;

		[Token(Token = "0x6000013")]
		[Address(RVA = "0x10A9A7C", Offset = "0x10A9A7C", VA = "0x10A9A7C")]
		public ImagePropertiesAnnotation()
		{
		}
	}

	[Token(Token = "0x2000014")]
	public class DominantColors
	{
		[Token(Token = "0x400001E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Colors[] colors;

		[Token(Token = "0x6000014")]
		[Address(RVA = "0x10A9A74", Offset = "0x10A9A74", VA = "0x10A9A74")]
		public DominantColors()
		{
		}
	}

	[Token(Token = "0x2000015")]
	public class Colors
	{
		[Token(Token = "0x400001F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color color;

		[Token(Token = "0x4000020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float score;

		[Token(Token = "0x4000021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float pixelFraction;

		[Token(Token = "0x6000015")]
		[Address(RVA = "0x10A9A6C", Offset = "0x10A9A6C", VA = "0x10A9A6C")]
		public Colors()
		{
		}
	}

	[Token(Token = "0x2000016")]
	public class Color
	{
		[Token(Token = "0x4000022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int red;

		[Token(Token = "0x4000023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int green;

		[Token(Token = "0x4000024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int blue;

		[Token(Token = "0x6000016")]
		[Address(RVA = "0x10A9A64", Offset = "0x10A9A64", VA = "0x10A9A64")]
		public Color()
		{
		}
	}

	[Token(Token = "0x400001A")]
	public const string TAG = "Image Properties Detection";

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ImagePropertiesResponses[] responses;

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x10EFCDC", Offset = "0x10EFCDC", VA = "0x10EFCDC")]
	public ImagePropertiesDetection()
	{
	}
}
[Token(Token = "0x2000017")]
public class LabelsDetection
{
	[Token(Token = "0x2000018")]
	public class LabelsResponses
	{
		[Token(Token = "0x4000027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LabelAnnotations[] labelAnnotations;

		[Token(Token = "0x6000018")]
		[Address(RVA = "0x10AC928", Offset = "0x10AC928", VA = "0x10AC928")]
		public LabelsResponses()
		{
		}
	}

	[Token(Token = "0x2000019")]
	public class LabelAnnotations
	{
		[Token(Token = "0x4000028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string description;

		[Token(Token = "0x4000029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float score;

		[Token(Token = "0x400002A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float topicality;

		[Token(Token = "0x6000019")]
		[Address(RVA = "0x10AC920", Offset = "0x10AC920", VA = "0x10AC920")]
		public LabelAnnotations()
		{
		}
	}

	[Token(Token = "0x4000025")]
	public const string TAG = "Labels Detection";

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public LabelsResponses[] responses;

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x10FF120", Offset = "0x10FF120", VA = "0x10FF120")]
	public LabelsDetection()
	{
	}
}
[Token(Token = "0x200001A")]
public class LandmarksDetection
{
	[Token(Token = "0x200001B")]
	public class LandmarkResponses
	{
		[Token(Token = "0x400002D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LandmarkAnnotations[] landmarkAnnotations;

		[Token(Token = "0x600001B")]
		[Address(RVA = "0x10AD0EC", Offset = "0x10AD0EC", VA = "0x10AD0EC")]
		public LandmarkResponses()
		{
		}
	}

	[Token(Token = "0x200001C")]
	public class LandmarkAnnotations
	{
		[Token(Token = "0x400002E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string description;

		[Token(Token = "0x400002F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float score;

		[Token(Token = "0x4000030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Borders.Border boundingPoly;

		[Token(Token = "0x600001C")]
		[Address(RVA = "0x10AD0E4", Offset = "0x10AD0E4", VA = "0x10AD0E4")]
		public LandmarkAnnotations()
		{
		}
	}

	[Token(Token = "0x400002B")]
	public const string TAG = "Landmarks Detection";

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public LandmarkResponses[] responses;

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x10FF1EC", Offset = "0x10FF1EC", VA = "0x10FF1EC")]
	public LandmarksDetection()
	{
	}
}
[Token(Token = "0x200001D")]
public class LogosDetection
{
	[Token(Token = "0x200001E")]
	public class LogosResponses
	{
		[Token(Token = "0x4000033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LogoAnnotations[] logoAnnotations;

		[Token(Token = "0x600001E")]
		[Address(RVA = "0x10AE3A4", Offset = "0x10AE3A4", VA = "0x10AE3A4")]
		public LogosResponses()
		{
		}
	}

	[Token(Token = "0x200001F")]
	public class LogoAnnotations
	{
		[Token(Token = "0x4000034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string description;

		[Token(Token = "0x4000035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float score;

		[Token(Token = "0x4000036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Borders.Border boundingPoly;

		[Token(Token = "0x600001F")]
		[Address(RVA = "0x10AE39C", Offset = "0x10AE39C", VA = "0x10AE39C")]
		public LogoAnnotations()
		{
		}
	}

	[Token(Token = "0x4000031")]
	public const string TAG = "Logos Detection";

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public LogosResponses[] responses;

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x11028E4", Offset = "0x11028E4", VA = "0x11028E4")]
	public LogosDetection()
	{
	}
}
[Token(Token = "0x2000020")]
public class MultipleObjectsDetection
{
	[Token(Token = "0x2000021")]
	public class MultipleObjectsResponses
	{
		[Token(Token = "0x4000039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LocalizedObjectAnnotations[] localizedObjectAnnotations;

		[Token(Token = "0x6000021")]
		[Address(RVA = "0x10AF294", Offset = "0x10AF294", VA = "0x10AF294")]
		public MultipleObjectsResponses()
		{
		}
	}

	[Token(Token = "0x2000022")]
	public class LocalizedObjectAnnotations
	{
		[Token(Token = "0x400003A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400003B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float score;

		[Token(Token = "0x400003C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Borders.BorderNormalized boundingPoly;

		[Token(Token = "0x6000022")]
		[Address(RVA = "0x10AF28C", Offset = "0x10AF28C", VA = "0x10AF28C")]
		public LocalizedObjectAnnotations()
		{
		}
	}

	[Token(Token = "0x4000037")]
	public const string TAG = "Multiple Objects Detection";

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public MultipleObjectsResponses[] responses;

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xC71C04", Offset = "0xC71C04", VA = "0xC71C04")]
	public MultipleObjectsDetection()
	{
	}
}
[Token(Token = "0x2000023")]
public class TextDetection
{
	[Token(Token = "0x2000024")]
	public class TextResponses
	{
		[Token(Token = "0x4000040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TextAnnotations[] textAnnotations;

		[Token(Token = "0x6000024")]
		[Address(RVA = "0xEA313C", Offset = "0xEA313C", VA = "0xEA313C")]
		public TextResponses()
		{
		}
	}

	[Token(Token = "0x2000025")]
	public class TextAnnotations
	{
		[Token(Token = "0x4000041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string locale;

		[Token(Token = "0x4000042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string description;

		[Token(Token = "0x4000043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Borders.Border boundingPoly;

		[Token(Token = "0x6000025")]
		[Address(RVA = "0xEA3134", Offset = "0xEA3134", VA = "0xEA3134")]
		public TextAnnotations()
		{
		}
	}

	[Token(Token = "0x400003D")]
	public const string TAG1 = "Text Detection";

	[Token(Token = "0x400003E")]
	public const string TAG2 = "Handwriting Detection";

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TextResponses[] responses;

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x1155358", Offset = "0x1155358", VA = "0x1155358")]
	public TextDetection()
	{
	}
}
[Token(Token = "0x2000026")]
public class WebEntitiesDetection
{
	[Token(Token = "0x2000027")]
	public class WebEntitiesResponses
	{
		[Token(Token = "0x4000046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WebDetection webDetection;

		[Token(Token = "0x6000027")]
		[Address(RVA = "0xEA4ECC", Offset = "0xEA4ECC", VA = "0xEA4ECC")]
		public WebEntitiesResponses()
		{
		}
	}

	[Token(Token = "0x2000028")]
	public class WebDetection
	{
		[Token(Token = "0x4000047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WebEntities[] webEntities;

		[Token(Token = "0x6000028")]
		[Address(RVA = "0xEA4EBC", Offset = "0xEA4EBC", VA = "0xEA4EBC")]
		public WebDetection()
		{
		}
	}

	[Token(Token = "0x2000029")]
	public class WebEntities
	{
		[Token(Token = "0x4000048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float score;

		[Token(Token = "0x4000049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string description;

		[Token(Token = "0x6000029")]
		[Address(RVA = "0xEA4EC4", Offset = "0xEA4EC4", VA = "0xEA4EC4")]
		public WebEntities()
		{
		}
	}

	[Token(Token = "0x4000044")]
	public const string TAG = "Web Entities Detection";

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public WebEntitiesResponses[] responses;

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x115F978", Offset = "0x115F978", VA = "0x115F978")]
	public WebEntitiesDetection()
	{
	}
}
[Token(Token = "0x200002A")]
public class CropHintsDetectionHandler
{
	[Token(Token = "0x200002B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BFA24", Offset = "0x8BFA24")]
	private sealed class <Run>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400004B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400004C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400004D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string image_path;

		[Token(Token = "0x400004E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isUrl;

		[Token(Token = "0x400004F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<List<Borders.Vertices[]>, List<string[]>, string> onSuccess;

		[Token(Token = "0x4000050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<string> onFailure;

		[Token(Token = "0x17000001")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600002F")]
			[Address(RVA = "0x10A444C", Offset = "0x10A444C", VA = "0x10A444C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000002")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000031")]
			[Address(RVA = "0x10A4494", Offset = "0x10A4494", VA = "0x10A4494", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600002C")]
		[Address(RVA = "0x10A3CAC", Offset = "0x10A3CAC", VA = "0x10A3CAC")]
		[DebuggerHidden]
		public <Run>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x600002D")]
		[Address(RVA = "0x10A3CD8", Offset = "0x10A3CD8", VA = "0x10A3CD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600002E")]
		[Address(RVA = "0x10A3CDC", Offset = "0x10A3CDC", VA = "0x10A3CDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000030")]
		[Address(RVA = "0x10A4454", Offset = "0x10A4454", VA = "0x10A4454", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400004A")]
	private const string REQUEST_PATH = "Requests/Crop Hints/";

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x109B664", Offset = "0x109B664", VA = "0x109B664")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C4614", Offset = "0x8C4614")]
	public static IEnumerator Run(Action<List<Borders.Vertices[]>, List<string[]>, string> onSuccess, Action<string> onFailure, string image_path, bool isUrl)
	{
		return null;
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x109B720", Offset = "0x109B720", VA = "0x109B720")]
	public CropHintsDetectionHandler()
	{
	}
}
[Token(Token = "0x200002C")]
public class ExplicitContentDetectionHandler
{
	[Token(Token = "0x200002D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BFA34", Offset = "0x8BFA34")]
	private sealed class <Run>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string image_path;

		[Token(Token = "0x4000055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isUrl;

		[Token(Token = "0x4000056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<List<Borders.Vertices[]>, List<string[]>, string> onSuccess;

		[Token(Token = "0x4000057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<string> onFailure;

		[Token(Token = "0x17000003")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000037")]
			[Address(RVA = "0x10A68BC", Offset = "0x10A68BC", VA = "0x10A68BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000004")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000039")]
			[Address(RVA = "0x10A6904", Offset = "0x10A6904", VA = "0x10A6904", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000034")]
		[Address(RVA = "0x10A5DB4", Offset = "0x10A5DB4", VA = "0x10A5DB4")]
		[DebuggerHidden]
		public <Run>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000035")]
		[Address(RVA = "0x10A5DE0", Offset = "0x10A5DE0", VA = "0x10A5DE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000036")]
		[Address(RVA = "0x10A5DE4", Offset = "0x10A5DE4", VA = "0x10A5DE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000038")]
		[Address(RVA = "0x10A68C4", Offset = "0x10A68C4", VA = "0x10A68C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000051")]
	private const string REQUEST_PATH = "Requests/Explicit Content/";

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x117865C", Offset = "0x117865C", VA = "0x117865C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C46C4", Offset = "0x8C46C4")]
	public static IEnumerator Run(Action<List<Borders.Vertices[]>, List<string[]>, string> onSuccess, Action<string> onFailure, string image_path, bool isUrl)
	{
		return null;
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x1178718", Offset = "0x1178718", VA = "0x1178718")]
	public ExplicitContentDetectionHandler()
	{
	}
}
[Token(Token = "0x200002E")]
public class FacesDetectionHandler
{
	[Token(Token = "0x200002F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BFA44", Offset = "0x8BFA44")]
	private sealed class <Run>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400005A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400005B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string image_path;

		[Token(Token = "0x400005C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isUrl;

		[Token(Token = "0x400005D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<List<Borders.Vertices[]>, List<string[]>, string> onSuccess;

		[Token(Token = "0x400005E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<string> onFailure;

		[Token(Token = "0x17000005")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600003F")]
			[Address(RVA = "0x10A6E40", Offset = "0x10A6E40", VA = "0x10A6E40", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000006")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000041")]
			[Address(RVA = "0x10A6E88", Offset = "0x10A6E88", VA = "0x10A6E88", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600003C")]
		[Address(RVA = "0x10A6A54", Offset = "0x10A6A54", VA = "0x10A6A54")]
		[DebuggerHidden]
		public <Run>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x600003D")]
		[Address(RVA = "0x10A6A80", Offset = "0x10A6A80", VA = "0x10A6A80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600003E")]
		[Address(RVA = "0x10A6A84", Offset = "0x10A6A84", VA = "0x10A6A84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000040")]
		[Address(RVA = "0x10A6E48", Offset = "0x10A6E48", VA = "0x10A6E48", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000058")]
	private const string REQUEST_PATH = "Requests/Faces/";

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x11792F0", Offset = "0x11792F0", VA = "0x11792F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C4774", Offset = "0x8C4774")]
	public static IEnumerator Run(Action<List<Borders.Vertices[]>, List<string[]>, string> onSuccess, Action<string> onFailure, string image_path, bool isUrl)
	{
		return null;
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x11793AC", Offset = "0x11793AC", VA = "0x11793AC")]
	public FacesDetectionHandler()
	{
	}
}
[Token(Token = "0x2000030")]
public class ImagePropertiesDetectionHandler
{
	[Token(Token = "0x2000031")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BFA54", Offset = "0x8BFA54")]
	private sealed class <Run>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string image_path;

		[Token(Token = "0x4000063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isUrl;

		[Token(Token = "0x4000064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<List<Borders.Vertices[]>, List<string[]>, string> onSuccess;

		[Token(Token = "0x4000065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<string> onFailure;

		[Token(Token = "0x17000007")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000047")]
			[Address(RVA = "0x10AA508", Offset = "0x10AA508", VA = "0x10AA508", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000008")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000049")]
			[Address(RVA = "0x10AA550", Offset = "0x10AA550", VA = "0x10AA550", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000044")]
		[Address(RVA = "0x10A9A8C", Offset = "0x10A9A8C", VA = "0x10A9A8C")]
		[DebuggerHidden]
		public <Run>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000045")]
		[Address(RVA = "0x10A9AB8", Offset = "0x10A9AB8", VA = "0x10A9AB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000046")]
		[Address(RVA = "0x10A9ABC", Offset = "0x10A9ABC", VA = "0x10A9ABC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000048")]
		[Address(RVA = "0x10AA510", Offset = "0x10AA510", VA = "0x10AA510", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400005F")]
	private const string REQUEST_PATH = "Requests/Image Properties/";

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x10EFCE4", Offset = "0x10EFCE4", VA = "0x10EFCE4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C4824", Offset = "0x8C4824")]
	public static IEnumerator Run(Action<List<Borders.Vertices[]>, List<string[]>, string> onSuccess, Action<string> onFailure, string image_path, bool isUrl)
	{
		return null;
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x10EFDA0", Offset = "0x10EFDA0", VA = "0x10EFDA0")]
	public ImagePropertiesDetectionHandler()
	{
	}
}
[Token(Token = "0x2000032")]
public class LabelsDetectionHandler
{
	[Token(Token = "0x2000033")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BFA64", Offset = "0x8BFA64")]
	private sealed class <Run>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string image_path;

		[Token(Token = "0x400006A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isUrl;

		[Token(Token = "0x400006B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<List<Borders.Vertices[]>, List<string[]>, string> onSuccess;

		[Token(Token = "0x400006C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<string> onFailure;

		[Token(Token = "0x17000009")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600004F")]
			[Address(RVA = "0x10AD094", Offset = "0x10AD094", VA = "0x10AD094", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000051")]
			[Address(RVA = "0x10AD0DC", Offset = "0x10AD0DC", VA = "0x10AD0DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600004C")]
		[Address(RVA = "0x10AC930", Offset = "0x10AC930", VA = "0x10AC930")]
		[DebuggerHidden]
		public <Run>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x600004D")]
		[Address(RVA = "0x10AC95C", Offset = "0x10AC95C", VA = "0x10AC95C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600004E")]
		[Address(RVA = "0x10AC960", Offset = "0x10AC960", VA = "0x10AC960", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000050")]
		[Address(RVA = "0x10AD09C", Offset = "0x10AD09C", VA = "0x10AD09C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000066")]
	private const string REQUEST_PATH = "Requests/Labels/";

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x10FF128", Offset = "0x10FF128", VA = "0x10FF128")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C48D4", Offset = "0x8C48D4")]
	public static IEnumerator Run(Action<List<Borders.Vertices[]>, List<string[]>, string> onSuccess, Action<string> onFailure, string image_path, bool isUrl)
	{
		return null;
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0x10FF1E4", Offset = "0x10FF1E4", VA = "0x10FF1E4")]
	public LabelsDetectionHandler()
	{
	}
}
[Token(Token = "0x2000034")]
public class LandmarksDetectionHandler
{
	[Token(Token = "0x2000035")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BFA74", Offset = "0x8BFA74")]
	private sealed class <Run>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400006E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400006F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string image_path;

		[Token(Token = "0x4000071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isUrl;

		[Token(Token = "0x4000072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<List<Borders.Vertices[]>, List<string[]>, string> onSuccess;

		[Token(Token = "0x4000073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<string> onFailure;

		[Token(Token = "0x1700000B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000057")]
			[Address(RVA = "0x10AD84C", Offset = "0x10AD84C", VA = "0x10AD84C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000059")]
			[Address(RVA = "0x10AD894", Offset = "0x10AD894", VA = "0x10AD894", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000054")]
		[Address(RVA = "0x10AD0F4", Offset = "0x10AD0F4", VA = "0x10AD0F4")]
		[DebuggerHidden]
		public <Run>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000055")]
		[Address(RVA = "0x10AD120", Offset = "0x10AD120", VA = "0x10AD120", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000056")]
		[Address(RVA = "0x10AD124", Offset = "0x10AD124", VA = "0x10AD124", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000058")]
		[Address(RVA = "0x10AD854", Offset = "0x10AD854", VA = "0x10AD854", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400006D")]
	private const string REQUEST_PATH = "Requests/Landmarks/";

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x10FF1F4", Offset = "0x10FF1F4", VA = "0x10FF1F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C4984", Offset = "0x8C4984")]
	public static IEnumerator Run(Action<List<Borders.Vertices[]>, List<string[]>, string> onSuccess, Action<string> onFailure, string image_path, bool isUrl)
	{
		return null;
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x10FF2B0", Offset = "0x10FF2B0", VA = "0x10FF2B0")]
	public LandmarksDetectionHandler()
	{
	}
}
[Token(Token = "0x2000036")]
public class LogosDetectionHandler
{
	[Token(Token = "0x2000037")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BFA84", Offset = "0x8BFA84")]
	private sealed class <Run>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string image_path;

		[Token(Token = "0x4000078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isUrl;

		[Token(Token = "0x4000079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<List<Borders.Vertices[]>, List<string[]>, string> onSuccess;

		[Token(Token = "0x400007A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<string> onFailure;

		[Token(Token = "0x1700000D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600005F")]
			[Address(RVA = "0x10AEB04", Offset = "0x10AEB04", VA = "0x10AEB04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700000E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000061")]
			[Address(RVA = "0x10AEB4C", Offset = "0x10AEB4C", VA = "0x10AEB4C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600005C")]
		[Address(RVA = "0x10AE3AC", Offset = "0x10AE3AC", VA = "0x10AE3AC")]
		[DebuggerHidden]
		public <Run>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x600005D")]
		[Address(RVA = "0x10AE3D8", Offset = "0x10AE3D8", VA = "0x10AE3D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600005E")]
		[Address(RVA = "0x10AE3DC", Offset = "0x10AE3DC", VA = "0x10AE3DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000060")]
		[Address(RVA = "0x10AEB0C", Offset = "0x10AEB0C", VA = "0x10AEB0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000074")]
	private const string REQUEST_PATH = "Requests/Logos/";

	[Token(Token = "0x600005A")]
	[Address(RVA = "0x11028EC", Offset = "0x11028EC", VA = "0x11028EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C4A34", Offset = "0x8C4A34")]
	public static IEnumerator Run(Action<List<Borders.Vertices[]>, List<string[]>, string> onSuccess, Action<string> onFailure, string image_path, bool isUrl)
	{
		return null;
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x11029A8", Offset = "0x11029A8", VA = "0x11029A8")]
	public LogosDetectionHandler()
	{
	}
}
[Token(Token = "0x2000038")]
public class MultipleObjectsDetectionHandler
{
	[Token(Token = "0x2000039")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BFA94", Offset = "0x8BFA94")]
	private sealed class <Run>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400007C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400007D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400007E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string image_path;

		[Token(Token = "0x400007F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isUrl;

		[Token(Token = "0x4000080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<List<Borders.Vertices[]>, List<string[]>, string> onSuccess;

		[Token(Token = "0x4000081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<string> onFailure;

		[Token(Token = "0x1700000F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000067")]
			[Address(RVA = "0x10AFA9C", Offset = "0x10AFA9C", VA = "0x10AFA9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000010")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000069")]
			[Address(RVA = "0x10AFAE4", Offset = "0x10AFAE4", VA = "0x10AFAE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000064")]
		[Address(RVA = "0x10AF29C", Offset = "0x10AF29C", VA = "0x10AF29C")]
		[DebuggerHidden]
		public <Run>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000065")]
		[Address(RVA = "0x10AF2C8", Offset = "0x10AF2C8", VA = "0x10AF2C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000066")]
		[Address(RVA = "0x10AF2CC", Offset = "0x10AF2CC", VA = "0x10AF2CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000068")]
		[Address(RVA = "0x10AFAA4", Offset = "0x10AFAA4", VA = "0x10AFAA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400007B")]
	private const string REQUEST_PATH = "Requests/Multiple Objects/";

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xC6CB14", Offset = "0xC6CB14", VA = "0xC6CB14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C4AE4", Offset = "0x8C4AE4")]
	public static IEnumerator Run(Action<List<Borders.Vertices[]>, List<string[]>, string> onSuccess, Action<string> onFailure, string image_path, bool isUrl)
	{
		return null;
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xC71C0C", Offset = "0xC71C0C", VA = "0xC71C0C")]
	public MultipleObjectsDetectionHandler()
	{
	}
}
[Token(Token = "0x200003A")]
public class RequestHandler
{
	[Token(Token = "0x200003B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BFAA4", Offset = "0x8BFAA4")]
	private sealed class <SendRequest>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string requestString;

		[Token(Token = "0x17000011")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000072")]
			[Address(RVA = "0xEA17C8", Offset = "0xEA17C8", VA = "0xEA17C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000012")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000074")]
			[Address(RVA = "0xEA1810", Offset = "0xEA1810", VA = "0xEA1810", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600006F")]
		[Address(RVA = "0xEA152C", Offset = "0xEA152C", VA = "0xEA152C")]
		[DebuggerHidden]
		public <SendRequest>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000070")]
		[Address(RVA = "0xEA1558", Offset = "0xEA1558", VA = "0xEA1558", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000071")]
		[Address(RVA = "0xEA155C", Offset = "0xEA155C", VA = "0xEA155C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000073")]
		[Address(RVA = "0xEA17D0", Offset = "0xEA17D0", VA = "0xEA17D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static UnityWebRequest request;

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x98264C", Offset = "0x98264C", VA = "0x98264C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C4B94", Offset = "0x8C4B94")]
	public static IEnumerator SendRequest(string requestString)
	{
		return null;
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x9826C4", Offset = "0x9826C4", VA = "0x9826C4")]
	public static bool CheckResult()
	{
		return default(bool);
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x98274C", Offset = "0x98274C", VA = "0x98274C")]
	public static string GetResult()
	{
		return null;
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x9827B0", Offset = "0x9827B0", VA = "0x9827B0")]
	public static string GetError()
	{
		return null;
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x982808", Offset = "0x982808", VA = "0x982808")]
	public RequestHandler()
	{
	}
}
[Token(Token = "0x200003C")]
public class TextDetectionHandler
{
	[Token(Token = "0x200003D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BFAB4", Offset = "0x8BFAB4")]
	private sealed class <Run>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string image_path;

		[Token(Token = "0x400008A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isUrl;

		[Token(Token = "0x400008B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string type;

		[Token(Token = "0x400008C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<List<Borders.Vertices[]>, List<string[]>, string> onSuccess;

		[Token(Token = "0x400008D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Action<string> onFailure;

		[Token(Token = "0x17000013")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600007A")]
			[Address(RVA = "0xEA3924", Offset = "0xEA3924", VA = "0xEA3924", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000014")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600007C")]
			[Address(RVA = "0xEA396C", Offset = "0xEA396C", VA = "0xEA396C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000077")]
		[Address(RVA = "0xEA3144", Offset = "0xEA3144", VA = "0xEA3144")]
		[DebuggerHidden]
		public <Run>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000078")]
		[Address(RVA = "0xEA3170", Offset = "0xEA3170", VA = "0xEA3170", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000079")]
		[Address(RVA = "0xEA3174", Offset = "0xEA3174", VA = "0xEA3174", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600007B")]
		[Address(RVA = "0xEA392C", Offset = "0xEA392C", VA = "0xEA392C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000086")]
	private const string REQUEST_PATH = "Requests/Text/";

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x1155360", Offset = "0x1155360", VA = "0x1155360")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C4C44", Offset = "0x8C4C44")]
	public static IEnumerator Run(Action<List<Borders.Vertices[]>, List<string[]>, string> onSuccess, Action<string> onFailure, string image_path, bool isUrl, string type)
	{
		return null;
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x1155430", Offset = "0x1155430", VA = "0x1155430")]
	public TextDetectionHandler()
	{
	}
}
[Token(Token = "0x200003E")]
public class WebEntitiesDetectionHandler
{
	[Token(Token = "0x200003F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BFAC4", Offset = "0x8BFAC4")]
	private sealed class <Run>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400008F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string image_path;

		[Token(Token = "0x4000092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isUrl;

		[Token(Token = "0x4000093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<List<Borders.Vertices[]>, List<string[]>, string> onSuccess;

		[Token(Token = "0x4000094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Action<string> onFailure;

		[Token(Token = "0x17000015")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000082")]
			[Address(RVA = "0xEA550C", Offset = "0xEA550C", VA = "0xEA550C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000016")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000084")]
			[Address(RVA = "0xEA5554", Offset = "0xEA5554", VA = "0xEA5554", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600007F")]
		[Address(RVA = "0xEA4ED4", Offset = "0xEA4ED4", VA = "0xEA4ED4")]
		[DebuggerHidden]
		public <Run>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000080")]
		[Address(RVA = "0xEA4F00", Offset = "0xEA4F00", VA = "0xEA4F00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000081")]
		[Address(RVA = "0xEA4F04", Offset = "0xEA4F04", VA = "0xEA4F04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000083")]
		[Address(RVA = "0xEA5514", Offset = "0xEA5514", VA = "0xEA5514", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400008E")]
	private const string REQUEST_PATH = "Requests/Web Entities/";

	[Token(Token = "0x600007D")]
	[Address(RVA = "0x115F980", Offset = "0x115F980", VA = "0x115F980")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C4CF4", Offset = "0x8C4CF4")]
	public static IEnumerator Run(Action<List<Borders.Vertices[]>, List<string[]>, string> onSuccess, Action<string> onFailure, string image_path, bool isUrl)
	{
		return null;
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0x115FA3C", Offset = "0x115FA3C", VA = "0x115FA3C")]
	public WebEntitiesDetectionHandler()
	{
	}
}
[Token(Token = "0x2000040")]
public class ApiKey : MonoBehaviour
{
	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C14B0", Offset = "0x8C14B0")]
	public GameObject editControls;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C14E8", Offset = "0x8C14E8")]
	public InputField keyInput;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C1520", Offset = "0x8C1520")]
	public Button keyWarning;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C1558", Offset = "0x8C1558")]
	public Text helpField;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C1590", Offset = "0x8C1590")]
	public Text openKeyText;

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x10878D8", Offset = "0x10878D8", VA = "0x10878D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x1087A20", Offset = "0x1087A20", VA = "0x1087A20")]
	public void OpenEditKey()
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x1087B74", Offset = "0x1087B74", VA = "0x1087B74")]
	public void SaveKey()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x1087964", Offset = "0x1087964", VA = "0x1087964")]
	private void CheckKey()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x1087C14", Offset = "0x1087C14", VA = "0x1087C14")]
	public void OpenCloudConsole()
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x1087C5C", Offset = "0x1087C5C", VA = "0x1087C5C")]
	public void ShowHelp()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x108813C", Offset = "0x108813C", VA = "0x108813C")]
	public ApiKey()
	{
	}
}
[Token(Token = "0x2000041")]
public class Main : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000042")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BFAD4", Offset = "0x8BFAD4")]
	private sealed class <>c
	{
		[Token(Token = "0x40000AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40000AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static FileBrowser.OnCancel <>9__19_1;

		[Token(Token = "0x600009F")]
		[Address(RVA = "0x10AEF34", Offset = "0x10AEF34", VA = "0x10AEF34")]
		public <>c()
		{
		}

		[Token(Token = "0x60000A0")]
		[Address(RVA = "0x10AEF3C", Offset = "0x10AEF3C", VA = "0x10AEF3C")]
		internal void <BrowseFiles>b__19_1()
		{
		}
	}

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string IMAGE_PATH;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string IMAGE_URL;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string RAW_DATA;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string FORMATTED_DATA;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C15C8", Offset = "0x8C15C8")]
	public Image image;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C1600", Offset = "0x8C1600")]
	public Dropdown detectionTypes;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C1638", Offset = "0x8C1638")]
	public GameObject container;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C1670", Offset = "0x8C1670")]
	public UILineRenderer rectPrefab;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C16A8", Offset = "0x8C16A8")]
	public Text resultText;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C16E0", Offset = "0x8C16E0")]
	public GameObject responsePlaceholder;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C1718", Offset = "0x8C1718")]
	public InputField imageUrlInput;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C1750", Offset = "0x8C1750")]
	public UnityEngine.UI.Toggle urlToggle;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C1788", Offset = "0x8C1788")]
	public GameObject loadingCover;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C17C0", Offset = "0x8C17C0")]
	public GameObject loadingIndicator;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C17F8", Offset = "0x8C17F8")]
	public Text imagePath;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C1830", Offset = "0x8C1830")]
	public Text networkError;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool isImageDownloaded;

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xC6B6F8", Offset = "0xC6B6F8", VA = "0xC6B6F8")]
	private void Start()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xC6BD54", Offset = "0xC6BD54", VA = "0xC6BD54")]
	private void Update()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xC6BDE4", Offset = "0xC6BDE4", VA = "0xC6BDE4")]
	public void BrowseFiles()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xC6BF98", Offset = "0xC6BF98", VA = "0xC6BF98")]
	private void RemoveRectangles()
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xC6C094", Offset = "0xC6C094", VA = "0xC6C094")]
	public void Analyze()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xC6CBD0", Offset = "0xC6CBD0", VA = "0xC6CBD0")]
	private void NetworkError(string error)
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xC6CA40", Offset = "0xC6CA40", VA = "0xC6CA40")]
	private bool CheckImageSource()
	{
		return default(bool);
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xC6CC18", Offset = "0xC6CC18", VA = "0xC6CC18")]
	private void ShowResult(List<Borders.Vertices[]> vertices, List<string[]> values, string rawData)
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xC6CC8C", Offset = "0xC6CC8C", VA = "0xC6CC8C")]
	private void DisplayText(List<string[]> values)
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xC6D1CC", Offset = "0xC6D1CC", VA = "0xC6D1CC")]
	public void OpenImage(string path)
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xC6D2A8", Offset = "0xC6D2A8", VA = "0xC6D2A8")]
	public void DownloadImage()
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xC6D200", Offset = "0xC6D200", VA = "0xC6D200")]
	public void ShowImage(Texture2D texture, bool isDownload)
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xC6CAE4", Offset = "0xC6CAE4", VA = "0xC6CAE4")]
	private void ShowLoading(bool show)
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xC6D440", Offset = "0xC6D440", VA = "0xC6D440")]
	public void CopyResult()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xC6D4DC", Offset = "0xC6D4DC", VA = "0xC6D4DC")]
	public void ClearResult()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xC6D53C", Offset = "0xC6D53C", VA = "0xC6D53C")]
	public void ShowRawResult(UnityEngine.UI.Toggle toggle)
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xC6D5D4", Offset = "0xC6D5D4", VA = "0xC6D5D4")]
	public Main()
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xC6D640", Offset = "0xC6D640", VA = "0xC6D640")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C4DA4", Offset = "0x8C4DA4")]
	private void <BrowseFiles>b__19_0(string[] path)
	{
	}
}
[Token(Token = "0x2000043")]
public class Constants
{
	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string API_KEY;

	[Token(Token = "0x40000AE")]
	public const string GOOGLE_URL = "https://vision.googleapis.com/v1/images:annotate?key=";

	[Token(Token = "0x40000AF")]
	public const string GOOGLE_CLOUD_CONSOLE_URL = "https://cloud.google.com/compute/docs/console";

	[Token(Token = "0x40000B0")]
	public const string DETECTION_ERROR = "Detection error: probably wrong type is selected";

	[Token(Token = "0x40000B1")]
	public const string INTERNET_CONNECTION_ERROR = "No Internet connection";

	[Token(Token = "0x40000B2")]
	public const string NO_IMAGE_SELECTED = "Open an image or download from URL first";

	[Token(Token = "0x40000B3")]
	public const string EMPTY_URL = "Enter a valid url";

	[Token(Token = "0x40000B4")]
	public const string EMPTY_API_KEY = "API key is not set";

	[Token(Token = "0x40000B5")]
	public const string RESPONSE_LENGTH_ERROR = "Raw response is too large to be shown";

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x109A5DC", Offset = "0x109A5DC", VA = "0x109A5DC")]
	public Constants()
	{
	}
}
[Token(Token = "0x2000044")]
public class ImageProcessing : MonoBehaviour
{
	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static float IMAGE_WIDTH;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static float IMAGE_HEIGHT;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static float ORIGINAL_IMAGE_WIDTH;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static float ORIGINAL_IMAGE_HEIGHT;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static float RESIZE_MULTIPLIER;

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x10EF4B4", Offset = "0x10EF4B4", VA = "0x10EF4B4")]
	public static void DrawRectangles(List<Borders.Vertices[]> vertices, UILineRenderer rectPrefab, GameObject container, Image image)
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x10EF93C", Offset = "0x10EF93C", VA = "0x10EF93C")]
	public static void ShowImage(Texture2D texture, Image image, GameObject container)
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x10EFCD4", Offset = "0x10EFCD4", VA = "0x10EFCD4")]
	public ImageProcessing()
	{
	}
}
[Token(Token = "0x2000045")]
public class Storage
{
	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x114F840", Offset = "0x114F840", VA = "0x114F840")]
	public static string LoadKey()
	{
		return null;
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x114F888", Offset = "0x114F888", VA = "0x114F888")]
	public static void SaveKey(string key)
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x114F8D8", Offset = "0x114F8D8", VA = "0x114F8D8")]
	public Storage()
	{
	}
}
[Token(Token = "0x2000046")]
public class Utilities
{
	[Token(Token = "0x2000047")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BFAE4", Offset = "0x8BFAE4")]
	private sealed class <DownloadImage>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string image_url;

		[Token(Token = "0x40000BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<string> onFailure;

		[Token(Token = "0x40000BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<Texture2D, bool> onSuccess;

		[Token(Token = "0x40000C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x17000017")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000B3")]
			[Address(RVA = "0xEA4A84", Offset = "0xEA4A84", VA = "0xEA4A84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000018")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000B5")]
			[Address(RVA = "0xEA4ACC", Offset = "0xEA4ACC", VA = "0xEA4ACC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000B0")]
		[Address(RVA = "0xEA48D8", Offset = "0xEA48D8", VA = "0xEA48D8")]
		[DebuggerHidden]
		public <DownloadImage>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x60000B1")]
		[Address(RVA = "0xEA4904", Offset = "0xEA4904", VA = "0xEA4904", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000B2")]
		[Address(RVA = "0xEA4908", Offset = "0xEA4908", VA = "0xEA4908", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000B4")]
		[Address(RVA = "0xEA4A8C", Offset = "0xEA4A8C", VA = "0xEA4A8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x115E69C", Offset = "0x115E69C", VA = "0x115E69C")]
	public static Texture2D OpenImage(string path)
	{
		return null;
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x115E738", Offset = "0x115E738", VA = "0x115E738")]
	public static string ConvertToBase64(string path)
	{
		return null;
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x115E7B0", Offset = "0x115E7B0", VA = "0x115E7B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C4DB4", Offset = "0x8C4DB4")]
	public static IEnumerator DownloadImage(Action<Texture2D, bool> onSuccess, Action<string> onFailure, string image_url)
	{
		return null;
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x115E858", Offset = "0x115E858", VA = "0x115E858")]
	public static string GenerateRequest(string request_path, string image_path, bool isUrl)
	{
		return null;
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x115E98C", Offset = "0x115E98C", VA = "0x115E98C")]
	public static bool CheckInternetConnection()
	{
		return default(bool);
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x115E9AC", Offset = "0x115E9AC", VA = "0x115E9AC")]
	public static bool IsApiKeySet()
	{
		return default(bool);
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x115EA40", Offset = "0x115EA40", VA = "0x115EA40")]
	public Utilities()
	{
	}
}
[Token(Token = "0x2000048")]
public class ActorCOMTransform : MonoBehaviour
{
	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 offset;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ObiActor actor;

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x10846B4", Offset = "0x10846B4", VA = "0x10846B4")]
	public void Update()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x10847B8", Offset = "0x10847B8", VA = "0x10847B8")]
	public ActorCOMTransform()
	{
	}
}
[Token(Token = "0x2000049")]
public class ActorSpawner : MonoBehaviour
{
	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ObiActor template;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int basePhase;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int maxInstances;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spawnDelay;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int phase;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int instances;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float timeFromLastSpawn;

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x10847C0", Offset = "0x10847C0", VA = "0x10847C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x10849A4", Offset = "0x10849A4", VA = "0x10849A4")]
	public ActorSpawner()
	{
	}
}
[Token(Token = "0x200004A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8BFAF4", Offset = "0x8BFAF4")]
public class AddRandomVelocity : MonoBehaviour
{
	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float intensity;

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x10849E4", Offset = "0x10849E4", VA = "0x10849E4")]
	private void Update()
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x1084A80", Offset = "0x1084A80", VA = "0x1084A80")]
	public AddRandomVelocity()
	{
	}
}
[Token(Token = "0x200004B")]
public class Blinker : MonoBehaviour
{
	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color highlightColor;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Renderer rend;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color original;

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x108BEB4", Offset = "0x108BEB4", VA = "0x108BEB4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x108BF3C", Offset = "0x108BF3C", VA = "0x108BF3C")]
	public void Blink()
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x108BF7C", Offset = "0x108BF7C", VA = "0x108BF7C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x108C0A8", Offset = "0x108C0A8", VA = "0x108C0A8")]
	public Blinker()
	{
	}
}
[Token(Token = "0x200004C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8BFB54", Offset = "0x8BFB54")]
public class ColliderHighlighter : MonoBehaviour
{
	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ObiSolver solver;

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x1098C80", Offset = "0x1098C80", VA = "0x1098C80")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x1098CDC", Offset = "0x1098CDC", VA = "0x1098CDC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x1098D70", Offset = "0x1098D70", VA = "0x1098D70")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x1098E04", Offset = "0x1098E04", VA = "0x1098E04")]
	private void Solver_OnCollision(object sender, ObiSolver.ObiCollisionEventArgs e)
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x1098FCC", Offset = "0x1098FCC", VA = "0x1098FCC")]
	public ColliderHighlighter()
	{
	}
}
[Token(Token = "0x200004D")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8BFBB4", Offset = "0x8BFBB4")]
public class CollisionEventHandler : MonoBehaviour
{
	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ObiSolver solver;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int contactCount;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ObiSolver.ObiCollisionEventArgs frame;

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x1098FD4", Offset = "0x1098FD4", VA = "0x1098FD4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x1099030", Offset = "0x1099030", VA = "0x1099030")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0x10990C4", Offset = "0x10990C4", VA = "0x10990C4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0x1099158", Offset = "0x1099158", VA = "0x1099158")]
	private void Solver_OnCollision(object sender, ObiSolver.ObiCollisionEventArgs e)
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x1099164", Offset = "0x1099164", VA = "0x1099164")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0x1099584", Offset = "0x1099584", VA = "0x1099584")]
	public CollisionEventHandler()
	{
	}
}
[Token(Token = "0x200004E")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8BFC14", Offset = "0x8BFC14")]
public class DebugParticleFrames : MonoBehaviour
{
	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ObiActor actor;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float size;

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x109BE70", Offset = "0x109BE70", VA = "0x109BE70")]
	public void Awake()
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x109BECC", Offset = "0x109BECC", VA = "0x109BECC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x109C150", Offset = "0x109C150", VA = "0x109C150")]
	public DebugParticleFrames()
	{
	}
}
[Token(Token = "0x200004F")]
public class ExtrapolationCamera : MonoBehaviour
{
	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float extrapolation;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C1868", Offset = "0x8C1868")]
	public float smoothness;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C1880", Offset = "0x8C1880")]
	public float linearSpeed;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C1898", Offset = "0x8C1898")]
	public float rotationalSpeed;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "MinAttribute", RVA = "0x8C18B0", Offset = "0x8C18B0")]
	public float distanceFromTarget;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 lastPosition;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 extrapolatedPos;

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x1178B18", Offset = "0x1178B18", VA = "0x1178B18")]
	private void Start()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x1178BA8", Offset = "0x1178BA8", VA = "0x1178BA8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x1178CDC", Offset = "0x1178CDC", VA = "0x1178CDC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x1178ED0", Offset = "0x1178ED0", VA = "0x1178ED0")]
	public void Teleport(Vector3 position, Quaternion rotation)
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x1178FEC", Offset = "0x1178FEC", VA = "0x1178FEC")]
	public ExtrapolationCamera()
	{
	}
}
[Token(Token = "0x2000050")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8BFC84", Offset = "0x8BFC84")]
public class FPSDisplay : MonoBehaviour
{
	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float updateInterval;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool showMedian;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float medianLearnrate;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float accum;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int frames;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float timeleft;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float currentFPS;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float median;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float average;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Text uguiText;

	[Token(Token = "0x17000019")]
	public float CurrentFPS
	{
		[Token(Token = "0x60000D3")]
		[Address(RVA = "0x117909C", Offset = "0x117909C", VA = "0x117909C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700001A")]
	public float FPSMedian
	{
		[Token(Token = "0x60000D4")]
		[Address(RVA = "0x11790A4", Offset = "0x11790A4", VA = "0x11790A4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700001B")]
	public float FPSAverage
	{
		[Token(Token = "0x60000D5")]
		[Address(RVA = "0x11790AC", Offset = "0x11790AC", VA = "0x11790AC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x11790B4", Offset = "0x11790B4", VA = "0x11790B4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x117911C", Offset = "0x117911C", VA = "0x117911C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x11792C4", Offset = "0x11792C4", VA = "0x11792C4")]
	public void ResetMedianAndAverage()
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x11792CC", Offset = "0x11792CC", VA = "0x11792CC")]
	public FPSDisplay()
	{
	}
}
[Token(Token = "0x2000051")]
public class ObiActorTeleport : MonoBehaviour
{
	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ObiActor actor;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xC75A5C", Offset = "0xC75A5C", VA = "0xC75A5C")]
	public void Teleport()
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xC75AFC", Offset = "0xC75AFC", VA = "0xC75AFC")]
	public ObiActorTeleport()
	{
	}
}
[Token(Token = "0x2000052")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8BFCE4", Offset = "0x8BFCE4")]
public class ObiParticleCounter : MonoBehaviour
{
	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ObiSolver solver;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int counter;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Collider2D targetCollider;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ObiSolver.ObiCollisionEventArgs frame;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private HashSet<int> particles;

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xC7672C", Offset = "0xC7672C", VA = "0xC7672C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xC76788", Offset = "0xC76788", VA = "0xC76788")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xC7681C", Offset = "0xC7681C", VA = "0xC7681C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xC768B0", Offset = "0xC768B0", VA = "0xC768B0")]
	private void Solver_OnCollision(object sender, ObiSolver.ObiCollisionEventArgs e)
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xC76A54", Offset = "0xC76A54", VA = "0xC76A54")]
	public ObiParticleCounter()
	{
	}
}
[Token(Token = "0x2000053")]
public class ObjectDragger : MonoBehaviour
{
	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 screenPoint;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 offset;

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xC76B24", Offset = "0xC76B24", VA = "0xC76B24")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xC76C18", Offset = "0xC76C18", VA = "0xC76C18")]
	private void OnMouseDrag()
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xC76CB4", Offset = "0xC76CB4", VA = "0xC76CB4")]
	public ObjectDragger()
	{
	}
}
[Token(Token = "0x2000054")]
public class ObjectLimit : MonoBehaviour
{
	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minX;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxX;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float minY;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxY;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minZ;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxZ;

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xC76CBC", Offset = "0xC76CBC", VA = "0xC76CBC")]
	private void Update()
	{
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xC76DB0", Offset = "0xC76DB0", VA = "0xC76DB0")]
	public ObjectLimit()
	{
	}
}
[Token(Token = "0x2000055")]
public class SlowmoToggler : MonoBehaviour
{
	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x98D290", Offset = "0x98D290", VA = "0x98D290")]
	public void Slowmo(bool slowmo)
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x98D2A8", Offset = "0x98D2A8", VA = "0x98D2A8")]
	public SlowmoToggler()
	{
	}
}
[Token(Token = "0x2000056")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8BFD44", Offset = "0x8BFD44")]
public class WorldSpaceGravity : MonoBehaviour
{
	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ObiSolver solver;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 worldGravity;

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x109EC1C", Offset = "0x109EC1C", VA = "0x109EC1C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x109EC78", Offset = "0x109EC78", VA = "0x109EC78")]
	private void Update()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x109ECD0", Offset = "0x109ECD0", VA = "0x109ECD0")]
	public WorldSpaceGravity()
	{
	}
}
[Token(Token = "0x2000057")]
public class CharacterControl2D : MonoBehaviour
{
	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float acceleration;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxSpeed;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float jumpPower;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody unityRigidbody;

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x1098B08", Offset = "0x1098B08", VA = "0x1098B08")]
	public void Awake()
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x1098B64", Offset = "0x1098B64", VA = "0x1098B64")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x1098C64", Offset = "0x1098C64", VA = "0x1098C64")]
	public CharacterControl2D()
	{
	}
}
[Token(Token = "0x2000058")]
public class CraneController : MonoBehaviour
{
	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ObiRopeCursor cursor;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ObiRope rope;

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x109AAB0", Offset = "0x109AAB0", VA = "0x109AAB0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x109AB44", Offset = "0x109AB44", VA = "0x109AB44")]
	private void Update()
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x109AC90", Offset = "0x109AC90", VA = "0x109AC90")]
	public CraneController()
	{
	}
}
[Token(Token = "0x2000059")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8BFDA4", Offset = "0x8BFDA4")]
public class CursorController : MonoBehaviour
{
	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ObiRopeCursor cursor;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ObiRope rope;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minLength;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float speed;

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x109B728", Offset = "0x109B728", VA = "0x109B728")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x109B7B4", Offset = "0x109B7B4", VA = "0x109B7B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x109B9E0", Offset = "0x109B9E0", VA = "0x109B9E0")]
	public CursorController()
	{
	}
}
[Token(Token = "0x200005A")]
public class GrapplingHook : MonoBehaviour
{
	[Token(Token = "0x200005B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BFE04", Offset = "0x8BFE04")]
	private sealed class <AttachHook>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400010B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400010C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400010D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GrapplingHook <>4__this;

		[Token(Token = "0x1700001C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000FE")]
			[Address(RVA = "0x10A8C64", Offset = "0x10A8C64", VA = "0x10A8C64", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000100")]
			[Address(RVA = "0x10A8CAC", Offset = "0x10A8CAC", VA = "0x10A8CAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60000FB")]
		[Address(RVA = "0x10A85C8", Offset = "0x10A85C8", VA = "0x10A85C8")]
		[DebuggerHidden]
		public <AttachHook>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60000FC")]
		[Address(RVA = "0x10A85F4", Offset = "0x10A85F4", VA = "0x10A85F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60000FD")]
		[Address(RVA = "0x10A85F8", Offset = "0x10A85F8", VA = "0x10A85F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000FF")]
		[Address(RVA = "0x10A8C6C", Offset = "0x10A8C6C", VA = "0x10A8C6C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ObiSolver solver;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ObiCollider character;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float hookExtendRetractSpeed;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material material;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ObiRopeSection section;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ObiRope rope;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ObiRopeBlueprint blueprint;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ObiRopeExtrudedRenderer ropeRenderer;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private ObiRopeCursor cursor;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private RaycastHit hookAttachment;

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x117E45C", Offset = "0x117E45C", VA = "0x117E45C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x117E648", Offset = "0x117E648", VA = "0x117E648")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x117E6B0", Offset = "0x117E6B0", VA = "0x117E6B0")]
	private void LaunchHook()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x117E810", Offset = "0x117E810", VA = "0x117E810")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C4E64", Offset = "0x8C4E64")]
	private IEnumerator AttachHook()
	{
		return null;
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x117E888", Offset = "0x117E888", VA = "0x117E888")]
	private void DetachHook()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x117E900", Offset = "0x117E900", VA = "0x117E900")]
	private void Update()
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x117EA00", Offset = "0x117EA00", VA = "0x117EA00")]
	public GrapplingHook()
	{
	}
}
[Token(Token = "0x200005C")]
public class RobotArmController : MonoBehaviour
{
	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform section1;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform section2;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform actuator;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float speed;

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x982810", Offset = "0x982810", VA = "0x982810")]
	private void Update()
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x982A44", Offset = "0x982A44", VA = "0x982A44")]
	public RobotArmController()
	{
	}
}
[Token(Token = "0x200005D")]
public class RopeBetweenTwoPoints : MonoBehaviour
{
	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform start;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform end;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ObiSolver solver;

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x9849E0", Offset = "0x9849E0", VA = "0x9849E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x9849E4", Offset = "0x9849E4", VA = "0x9849E4")]
	private void Generate()
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x984FD8", Offset = "0x984FD8", VA = "0x984FD8")]
	public RopeBetweenTwoPoints()
	{
	}
}
[Token(Token = "0x200005E")]
public class RopeNet : MonoBehaviour
{
	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2Int resolution;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 size;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float nodeSize;

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x984FE0", Offset = "0x984FE0", VA = "0x984FE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x985238", Offset = "0x985238", VA = "0x985238")]
	private void CreateNet(ObiSolver solver)
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x985BD8", Offset = "0x985BD8", VA = "0x985BD8")]
	private void PinRope(ObiRope rope, ObiCollider bodyA, ObiCollider bodyB, Vector3 offsetA, Vector3 offsetB)
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x985714", Offset = "0x985714", VA = "0x985714")]
	private ObiRope CreateRope(Vector3 pointA, Vector3 pointB)
	{
		return null;
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x985E34", Offset = "0x985E34", VA = "0x985E34")]
	public RopeNet()
	{
	}
}
[Token(Token = "0x200005F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8BFE14", Offset = "0x8BFE14")]
public class RopeSweepCut : MonoBehaviour
{
	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera cam;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ObiRope rope;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 cutStartPosition;

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x9864E0", Offset = "0x9864E0", VA = "0x9864E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x9866E8", Offset = "0x9866E8", VA = "0x9866E8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x986544", Offset = "0x986544", VA = "0x986544")]
	private void AddMouseLine()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x9866EC", Offset = "0x9866EC", VA = "0x9866EC")]
	private void DeleteMouseLine()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x9867B4", Offset = "0x9867B4", VA = "0x9867B4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x986838", Offset = "0x986838", VA = "0x986838")]
	private void ProcessInput()
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x986988", Offset = "0x986988", VA = "0x986988")]
	private void ScreenSpaceCut(Vector2 lineStart, Vector2 lineEnd)
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x986BE0", Offset = "0x986BE0", VA = "0x986BE0")]
	private bool SegmentSegmentIntersection(Vector2 A, Vector2 B, Vector2 C, Vector2 D, out float r, out float s)
	{
		return default(bool);
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x986CF0", Offset = "0x986CF0", VA = "0x986CF0")]
	public RopeSweepCut()
	{
	}
}
[Token(Token = "0x2000060")]
public class RopeTenser : MonoBehaviour
{
	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float force;

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x986CF8", Offset = "0x986CF8", VA = "0x986CF8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x986D74", Offset = "0x986D74", VA = "0x986D74")]
	public RopeTenser()
	{
	}
}
[Token(Token = "0x2000061")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8BFE74", Offset = "0x8BFE74")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8BFE74", Offset = "0x8BFE74")]
public class RopeTensionColorizer : MonoBehaviour
{
	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minTension;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxTension;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color normalColor;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color tensionColor;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RopeTenser tenser;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float tenserThreshold;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float tenserMax;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ObiRope rope;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material localMaterial;

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x986D84", Offset = "0x986D84", VA = "0x986D84")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0x986E20", Offset = "0x986E20", VA = "0x986E20")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x986E88", Offset = "0x986E88", VA = "0x986E88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x986FE4", Offset = "0x986FE4", VA = "0x986FE4")]
	public RopeTensionColorizer()
	{
	}
}
[Token(Token = "0x2000062")]
public class RuntimeRopeGenerator
{
	[Token(Token = "0x2000063")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BFF08", Offset = "0x8BFF08")]
	private sealed class <MakeRope>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400012A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700001E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000123")]
			[Address(RVA = "0xEA1A3C", Offset = "0xEA1A3C", VA = "0xEA1A3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000125")]
			[Address(RVA = "0xEA1A84", Offset = "0xEA1A84", VA = "0xEA1A84", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000120")]
		[Address(RVA = "0xEA1968", Offset = "0xEA1968", VA = "0xEA1968")]
		[DebuggerHidden]
		public <MakeRope>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000121")]
		[Address(RVA = "0xEA1994", Offset = "0xEA1994", VA = "0xEA1994", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000122")]
		[Address(RVA = "0xEA1998", Offset = "0xEA1998", VA = "0xEA1998", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000124")]
		[Address(RVA = "0xEA1A44", Offset = "0xEA1A44", VA = "0xEA1A44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private ObiSolver solver;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int pinnedParticle;

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x98A1D0", Offset = "0x98A1D0", VA = "0x98A1D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C4F14", Offset = "0x8C4F14")]
	public IEnumerator MakeRope(Transform anchoredTo, Vector3 attachmentOffset, float ropeLength)
	{
		return null;
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x98A22C", Offset = "0x98A22C", VA = "0x98A22C")]
	public void AddPendulum(ObiCollider pendulum, Vector3 attachmentOffset)
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x98A230", Offset = "0x98A230", VA = "0x98A230")]
	public void RemovePendulum()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x98A234", Offset = "0x98A234", VA = "0x98A234")]
	public void ChangeRopeLength(float changeAmount)
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x98A238", Offset = "0x98A238", VA = "0x98A238")]
	private void UpdateTethers()
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x98A23C", Offset = "0x98A23C", VA = "0x98A23C")]
	public RuntimeRopeGenerator()
	{
	}
}
[Token(Token = "0x2000064")]
public class RuntimeRopeGeneratorUse : MonoBehaviour
{
	[Token(Token = "0x2000065")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BFF18", Offset = "0x8BFF18")]
	private sealed class <Start>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400012D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400012E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400012F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RuntimeRopeGeneratorUse <>4__this;

		[Token(Token = "0x17000020")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600012C")]
			[Address(RVA = "0xEA1BE4", Offset = "0xEA1BE4", VA = "0xEA1BE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000021")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600012E")]
			[Address(RVA = "0xEA1C2C", Offset = "0xEA1C2C", VA = "0xEA1C2C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000129")]
		[Address(RVA = "0xEA1A8C", Offset = "0xEA1A8C", VA = "0xEA1A8C")]
		[DebuggerHidden]
		public <Start>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x600012A")]
		[Address(RVA = "0xEA1AB8", Offset = "0xEA1AB8", VA = "0xEA1AB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600012B")]
		[Address(RVA = "0xEA1ABC", Offset = "0xEA1ABC", VA = "0xEA1ABC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600012D")]
		[Address(RVA = "0xEA1BEC", Offset = "0xEA1BEC", VA = "0xEA1BEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ObiCollider pendulum;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RuntimeRopeGenerator rg;

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x98A24C", Offset = "0x98A24C", VA = "0x98A24C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C4FC4", Offset = "0x8C4FC4")]
	public IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x98A2C4", Offset = "0x98A2C4", VA = "0x98A2C4")]
	public void Update()
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x98A324", Offset = "0x98A324", VA = "0x98A324")]
	public RuntimeRopeGeneratorUse()
	{
	}
}
[Token(Token = "0x2000066")]
public class SnakeController : MonoBehaviour
{
	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform headReferenceFrame;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float headSpeed;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float upSpeed;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float slitherSpeed;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ObiRope rope;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ObiSolver solver;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float[] traction;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3[] surfaceNormal;

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x98D2B0", Offset = "0x98D2B0", VA = "0x98D2B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x98D49C", Offset = "0x98D49C", VA = "0x98D49C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0x98D5C8", Offset = "0x98D5C8", VA = "0x98D5C8")]
	private void ResetSurfaceInfo(ObiSolver s, float stepTime)
	{
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0x98D660", Offset = "0x98D660", VA = "0x98D660")]
	private void AnalyzeContacts(object sender, ObiSolver.ObiCollisionEventArgs e)
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x98D894", Offset = "0x98D894", VA = "0x98D894")]
	public void Update()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x98DEB4", Offset = "0x98DEB4", VA = "0x98DEB4")]
	public SnakeController()
	{
	}
}
[Token(Token = "0x2000067")]
[ExecuteInEditMode]
public class SpiralCurve : MonoBehaviour
{
	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float radius;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float radialStep;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float heightStep;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float points;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float rotationalMass;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float thickness;

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x114F180", Offset = "0x114F180", VA = "0x114F180")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x114F184", Offset = "0x114F184", VA = "0x114F184")]
	public void Generate()
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x114F4E8", Offset = "0x114F4E8", VA = "0x114F4E8")]
	public SpiralCurve()
	{
	}
}
[Token(Token = "0x2000068")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8BFF38", Offset = "0x8BFF38")]
public class WrapRopeGameController : MonoBehaviour
{
	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ObiSolver solver;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Wrappable[] wrappables;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent onFinish;

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x109ECE8", Offset = "0x109ECE8", VA = "0x109ECE8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x109ED44", Offset = "0x109ED44", VA = "0x109ED44")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x109EDD8", Offset = "0x109EDD8", VA = "0x109EDD8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x109EE6C", Offset = "0x109EE6C", VA = "0x109EE6C")]
	private void Update()
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x109EEE0", Offset = "0x109EEE0", VA = "0x109EEE0")]
	private void Solver_OnCollision(ObiSolver s, ObiSolver.ObiCollisionEventArgs e)
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x109F348", Offset = "0x109F348", VA = "0x109F348")]
	public WrapRopeGameController()
	{
	}
}
[Token(Token = "0x2000069")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8BFF98", Offset = "0x8BFF98")]
public class WrapRopePlayerController : MonoBehaviour
{
	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float acceleration;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rb;

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x109F3B8", Offset = "0x109F3B8", VA = "0x109F3B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x109F414", Offset = "0x109F414", VA = "0x109F414")]
	private void Update()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x109F58C", Offset = "0x109F58C", VA = "0x109F58C")]
	public WrapRopePlayerController()
	{
	}
}
[Token(Token = "0x200006A")]
public class Wrappable : MonoBehaviour
{
	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool wrapped;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color normalColor;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color wrappedColor;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material localMaterial;

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x109F59C", Offset = "0x109F59C", VA = "0x109F59C")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x109F608", Offset = "0x109F608", VA = "0x109F608")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x109F2EC", Offset = "0x109F2EC", VA = "0x109F2EC")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x109F318", Offset = "0x109F318", VA = "0x109F318")]
	public void SetWrapped()
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x109F670", Offset = "0x109F670", VA = "0x109F670")]
	public bool IsWrapped()
	{
		return default(bool);
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x109F678", Offset = "0x109F678", VA = "0x109F678")]
	public Wrappable()
	{
	}
}
[Token(Token = "0x200006B")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xCA4D5C", Offset = "0xCA4D5C", VA = "0xCA4D5C")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xCA4EC0", Offset = "0xCA4EC0", VA = "0xCA4EC0")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xCA525C", Offset = "0xCA525C", VA = "0xCA525C")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xCA5400", Offset = "0xCA5400", VA = "0xCA5400", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0xCA542C", Offset = "0xCA542C", VA = "0xCA542C")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x200006C")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x97FD58", Offset = "0x97FD58", VA = "0x97FD58")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x97FDE0", Offset = "0x97FDE0", VA = "0x97FDE0")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x97FF54", Offset = "0x97FF54", VA = "0x97FF54")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x200006D")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x17000022")]
	public bool IsVisible
	{
		[Token(Token = "0x600014F")]
		[Address(RVA = "0x117DD44", Offset = "0x117DD44", VA = "0x117DD44")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000150")]
		[Address(RVA = "0x117DD4C", Offset = "0x117DD4C", VA = "0x117DD4C")]
		set
		{
		}
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x117DE88", Offset = "0x117DE88", VA = "0x117DE88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x117E050", Offset = "0x117E050", VA = "0x117E050")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x117E058", Offset = "0x117E058", VA = "0x117E058")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x200006E")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x200006F")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x4000154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x4000155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x600015A")]
		[Address(RVA = "0xEA1350", Offset = "0xEA1350", VA = "0xEA1350")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000070")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x4000156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C18D4", Offset = "0x8C18D4")]
		public float FakeLatencyMax;

		[Token(Token = "0x4000157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C18EC", Offset = "0x8C18EC")]
		public float FakeLatencyMin;

		[Token(Token = "0x4000158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C1904", Offset = "0x8C1904")]
		public float LatencyWeight;

		[Token(Token = "0x4000159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C191C", Offset = "0x8C191C")]
		public int MaxSamples;

		[Token(Token = "0x400015A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x400015B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x400015C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x600015B")]
		[Address(RVA = "0xEA1358", Offset = "0xEA1358", VA = "0xEA1358")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x600015C")]
		[Address(RVA = "0xEA1490", Offset = "0xEA1490", VA = "0xEA1490")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x981A34", Offset = "0x981A34", VA = "0x981A34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x981B8C", Offset = "0x981B8C", VA = "0x981B8C")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x981F70", Offset = "0x981F70", VA = "0x981F70")]
	private void Update()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x981EBC", Offset = "0x981EBC", VA = "0x981EBC")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0x9822A0", Offset = "0x9822A0", VA = "0x9822A0")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0x982588", Offset = "0x982588", VA = "0x982588")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x2000071")]
public class P2PManager
{
	[Token(Token = "0x2000072")]
	private enum MessageType : byte
	{
		[Token(Token = "0x400015E")]
		Update = 1
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xCA5FA0", Offset = "0xCA5FA0", VA = "0xCA5FA0")]
	public P2PManager()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xCA6080", Offset = "0xCA6080", VA = "0xCA6080")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xCA6164", Offset = "0xCA6164", VA = "0xCA6164")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xCA61E4", Offset = "0xCA61E4", VA = "0xCA61E4")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0xCA6354", Offset = "0xCA6354", VA = "0xCA6354")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0xCA6594", Offset = "0xCA6594", VA = "0xCA6594")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xCA6984", Offset = "0xCA6984", VA = "0xCA6984")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0xCA6C40", Offset = "0xCA6C40", VA = "0xCA6C40")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0xCA6760", Offset = "0xCA6760", VA = "0xCA6760")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0xCA6B74", Offset = "0xCA6B74", VA = "0xCA6B74")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0xCA6844", Offset = "0xCA6844", VA = "0xCA6844")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0xCA6E78", Offset = "0xCA6E78", VA = "0xCA6E78")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0xCA67A8", Offset = "0xCA67A8", VA = "0xCA67A8")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0xCA6BB8", Offset = "0xCA6BB8", VA = "0xCA6BB8")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xCA68E8", Offset = "0xCA68E8", VA = "0xCA68E8")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xCA6F00", Offset = "0xCA6F00", VA = "0xCA6F00")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x2000073")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x97DC00", Offset = "0x97DC00", VA = "0x97DC00", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x97E038", Offset = "0x97E038", VA = "0x97E038", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x97E05C", Offset = "0x97E05C", VA = "0x97E05C", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x97E424", Offset = "0x97E424", VA = "0x97E424")]
	private void checkInput()
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x97E5C0", Offset = "0x97E5C0", VA = "0x97E5C0")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x97E640", Offset = "0x97E640", VA = "0x97E640")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x97E694", Offset = "0x97E694", VA = "0x97E694")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x2000074")]
public class RemotePlayer
{
	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x982644", Offset = "0x982644", VA = "0x982644")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x2000075")]
public class RoomManager
{
	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x982A54", Offset = "0x982A54", VA = "0x982A54")]
	public RoomManager()
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x982B58", Offset = "0x982B58", VA = "0x982B58")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x982E48", Offset = "0x982E48", VA = "0x982E48")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x982F80", Offset = "0x982F80", VA = "0x982F80")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x983054", Offset = "0x983054", VA = "0x983054")]
	private void CreateAndJoinPrivateRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x983604", Offset = "0x983604", VA = "0x983604")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x982E78", Offset = "0x982E78", VA = "0x982E78")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x983688", Offset = "0x983688", VA = "0x983688")]
	private void JoinRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x983E0C", Offset = "0x983E0C", VA = "0x983E0C")]
	private void RoomUpdateCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x984158", Offset = "0x984158", VA = "0x984158")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x9839B8", Offset = "0x9839B8", VA = "0x9839B8")]
	private void ProcessRoomData(Message<Room> msg)
	{
	}
}
[Token(Token = "0x2000076")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x2000077")]
	public enum State
	{
		[Token(Token = "0x4000196")]
		INITIALIZING,
		[Token(Token = "0x4000197")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x4000198")]
		CREATING_A_ROOM,
		[Token(Token = "0x4000199")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x400019A")]
		JOINING_A_ROOM,
		[Token(Token = "0x400019B")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x400019C")]
		LEAVING_A_ROOM,
		[Token(Token = "0x400019D")]
		SHUTDOWN
	}

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x17000023")]
	public static State CurrentState
	{
		[Token(Token = "0x600018C")]
		[Address(RVA = "0x98F21C", Offset = "0x98F21C", VA = "0x98F21C")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x17000024")]
	public static ulong MyID
	{
		[Token(Token = "0x600018D")]
		[Address(RVA = "0x983180", Offset = "0x983180", VA = "0x983180")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x17000025")]
	public static string MyOculusID
	{
		[Token(Token = "0x600018E")]
		[Address(RVA = "0x98F28C", Offset = "0x98F28C", VA = "0x98F28C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x97E080", Offset = "0x97E080", VA = "0x97E080", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x97DC40", Offset = "0x97DC40", VA = "0x97DC40", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x98E008", Offset = "0x98E008", VA = "0x98E008")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x97E058", Offset = "0x97E058", VA = "0x97E058", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x98E1B0", Offset = "0x98E1B0", VA = "0x98E1B0")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x98E2D0", Offset = "0x98E2D0", VA = "0x98E2D0")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x98EA30", Offset = "0x98EA30", VA = "0x98EA30")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x98EE1C", Offset = "0x98EE1C", VA = "0x98EE1C")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x98F02C", Offset = "0x98F02C", VA = "0x98F02C")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x98F1B0", Offset = "0x98F1B0", VA = "0x98F1B0")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x98DF54", Offset = "0x98DF54", VA = "0x98DF54")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x982CD0", Offset = "0x982CD0", VA = "0x982CD0")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x983260", Offset = "0x983260", VA = "0x983260")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x98F3B4", Offset = "0x98F3B4", VA = "0x98F3B4")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x983520", Offset = "0x983520", VA = "0x983520")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x9841CC", Offset = "0x9841CC", VA = "0x9841CC")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x9845C8", Offset = "0x9845C8", VA = "0x9845C8")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x9846AC", Offset = "0x9846AC", VA = "0x9846AC")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x982D88", Offset = "0x982D88", VA = "0x982D88")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x984328", Offset = "0x984328", VA = "0x984328")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x9843BC", Offset = "0x9843BC", VA = "0x9843BC")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x98F530", Offset = "0x98F530", VA = "0x98F530")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x98F744", Offset = "0x98F744", VA = "0x98F744")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x98DED0", Offset = "0x98DED0", VA = "0x98DED0")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8C5074", Offset = "0x8C5074")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x98F888", Offset = "0x98F888", VA = "0x98F888")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x97E6FC", Offset = "0x97E6FC", VA = "0x97E6FC")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x2000078")]
public class VoipManager
{
	[Token(Token = "0x600019E")]
	[Address(RVA = "0x115F2D4", Offset = "0x115F2D4", VA = "0x115F2D4")]
	public VoipManager()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x115F3B4", Offset = "0x115F3B4", VA = "0x115F3B4")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x115F498", Offset = "0x115F498", VA = "0x115F498")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x115F518", Offset = "0x115F518", VA = "0x115F518")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x115F688", Offset = "0x115F688", VA = "0x115F688")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x2000079")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x117DA00", Offset = "0x117DA00", VA = "0x117DA00")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x117DA88", Offset = "0x117DA88", VA = "0x117DA88")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x117DBFC", Offset = "0x117DBFC", VA = "0x117DBFC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x117DC60", Offset = "0x117DC60", VA = "0x117DC60")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x117DAC4", Offset = "0x117DAC4", VA = "0x117DAC4")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x117DD24", Offset = "0x117DD24", VA = "0x117DD24")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x117DD3C", Offset = "0x117DD3C", VA = "0x117DD3C")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x200007A")]
public class AvatarLayer
{
	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x1089DBC", Offset = "0x1089DBC", VA = "0x1089DBC")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x200007B")]
public class PacketRecordSettings
{
	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x979550", Offset = "0x979550", VA = "0x979550")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x200007C")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x200007D")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x40001FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x60001E0")]
		[Address(RVA = "0x10B0620", Offset = "0x10B0620", VA = "0x10B0620")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x200007E")]
	public enum HandType
	{
		[Token(Token = "0x40001FF")]
		Right,
		[Token(Token = "0x4000200")]
		Left,
		[Token(Token = "0x4000201")]
		Max
	}

	[Token(Token = "0x200007F")]
	public enum HandJoint
	{
		[Token(Token = "0x4000203")]
		HandBase,
		[Token(Token = "0x4000204")]
		IndexBase,
		[Token(Token = "0x4000205")]
		IndexTip,
		[Token(Token = "0x4000206")]
		ThumbBase,
		[Token(Token = "0x4000207")]
		ThumbTip,
		[Token(Token = "0x4000208")]
		Max
	}

	[Token(Token = "0x2000080")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8BFFF8", Offset = "0x8BFFF8")]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400020A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400020B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x17000026")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001E4")]
			[Address(RVA = "0x10B05D0", Offset = "0x10B05D0", VA = "0x10B05D0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000027")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001E6")]
			[Address(RVA = "0x10B0618", Offset = "0x10B0618", VA = "0x10B0618", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60001E1")]
		[Address(RVA = "0x10B03F4", Offset = "0x10B03F4", VA = "0x10B03F4")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x60001E2")]
		[Address(RVA = "0x10B0420", Offset = "0x10B0420", VA = "0x10B0420", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001E3")]
		[Address(RVA = "0x10B0424", Offset = "0x10B0424", VA = "0x10B0424", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001E5")]
		[Address(RVA = "0x10B05D8", Offset = "0x10B05D8", VA = "0x10B05D8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C1934", Offset = "0x8C1934")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C196C", Offset = "0x8C196C")]
	public bool EnableBody;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C19A4", Offset = "0x8C19A4")]
	public bool RecordPackets;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C19DC", Offset = "0x8C19DC")]
	public bool StartWithControllers;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1A14", Offset = "0x8C1A14")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C1A14", Offset = "0x8C1A14")]
	[SerializeField]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1A84", Offset = "0x8C1A84")]
	private bool CombineMeshes;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1ABC", Offset = "0x8C1ABC")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C1AF4", Offset = "0x8C1AF4")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C1B2C", Offset = "0x8C1B2C")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1B64", Offset = "0x8C1B64")]
	public bool EnableLaughter;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x40001DF")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x40001E1")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x40001E2")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x40001E3")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x40001E4")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x40001E5")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xC92660", Offset = "0xC92660", VA = "0xC92660")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xC92B00", Offset = "0xC92B00", VA = "0xC92B00")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xC92B94", Offset = "0xC92B94", VA = "0xC92B94")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xC92BFC", Offset = "0xC92BFC", VA = "0xC92BFC")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xC92D2C", Offset = "0xC92D2C", VA = "0xC92D2C")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xC92F94", Offset = "0xC92F94", VA = "0xC92F94")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xC931C8", Offset = "0xC931C8", VA = "0xC931C8")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xC937FC", Offset = "0xC937FC", VA = "0xC937FC")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xC938D8", Offset = "0xC938D8", VA = "0xC938D8")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xC93950", Offset = "0xC93950", VA = "0xC93950")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xC93A38", Offset = "0xC93A38", VA = "0xC93A38")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xC93AC4", Offset = "0xC93AC4", VA = "0xC93AC4")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xC93B4C", Offset = "0xC93B4C", VA = "0xC93B4C")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xC93B64", Offset = "0xC93B64", VA = "0xC93B64")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x60001BA")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0xC94014", Offset = "0xC94014", VA = "0xC94014")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xC94394", Offset = "0xC94394", VA = "0xC94394")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0xC94580", Offset = "0xC94580", VA = "0xC94580")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xC947CC", Offset = "0xC947CC", VA = "0xC947CC")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xC948C0", Offset = "0xC948C0", VA = "0xC948C0")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xC953D4", Offset = "0xC953D4", VA = "0xC953D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xC957EC", Offset = "0xC957EC", VA = "0xC957EC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xC9627C", Offset = "0xC9627C", VA = "0xC9627C")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xC962D0", Offset = "0xC962D0", VA = "0xC962D0")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xC94B68", Offset = "0xC94B68", VA = "0xC94B68")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xC94C0C", Offset = "0xC94C0C", VA = "0xC94C0C")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xC96300", Offset = "0xC96300", VA = "0xC96300")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xC95BB8", Offset = "0xC95BB8", VA = "0xC95BB8")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xC96570", Offset = "0xC96570", VA = "0xC96570")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xC96364", Offset = "0xC96364", VA = "0xC96364")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xC96CFC", Offset = "0xC96CFC", VA = "0xC96CFC")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xC97178", Offset = "0xC97178", VA = "0xC97178")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xC9757C", Offset = "0xC9757C", VA = "0xC9757C")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xC976D0", Offset = "0xC976D0", VA = "0xC976D0")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xC978B4", Offset = "0xC978B4", VA = "0xC978B4")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xC95DFC", Offset = "0xC95DFC", VA = "0xC95DFC")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xC97988", Offset = "0xC97988", VA = "0xC97988")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xC95BC8", Offset = "0xC95BC8", VA = "0xC95BC8")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xC97A78", Offset = "0xC97A78", VA = "0xC97A78")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xC9812C", Offset = "0xC9812C", VA = "0xC9812C")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xC98610", Offset = "0xC98610", VA = "0xC98610")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xC98638", Offset = "0xC98638", VA = "0xC98638")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xC98660", Offset = "0xC98660", VA = "0xC98660")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xC96108", Offset = "0xC96108", VA = "0xC96108")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xC97B48", Offset = "0xC97B48", VA = "0xC97B48")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xC98A90", Offset = "0xC98A90", VA = "0xC98A90")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C50D4", Offset = "0x8C50D4")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xC98B08", Offset = "0xC98B08", VA = "0xC98B08")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xC98950", Offset = "0xC98950", VA = "0xC98950")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0xC98BCC", Offset = "0xC98BCC", VA = "0xC98BCC")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0xC98CB4", Offset = "0xC98CB4", VA = "0xC98CB4")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xC9869C", Offset = "0xC9869C", VA = "0xC9869C")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xC98D9C", Offset = "0xC98D9C", VA = "0xC98D9C")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x2000081")]
public class OvrAvatarAsset
{
	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xC98F98", Offset = "0xC98F98", VA = "0xC98F98")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x2000082")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0xC99068", Offset = "0xC99068", VA = "0xC99068")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0xC9A320", Offset = "0xC9A320", VA = "0xC9A320")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0xC99EF4", Offset = "0xC99EF4", VA = "0xC99EF4")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0xC99C78", Offset = "0xC99C78", VA = "0xC99C78")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0xC99D60", Offset = "0xC99D60", VA = "0xC99D60")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0xC9A5B0", Offset = "0xC9A5B0", VA = "0xC9A5B0")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x2000083")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x4000211")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xC9AB78", Offset = "0xC9AB78", VA = "0xC9AB78")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x2000084")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xC9ADF4", Offset = "0xC9ADF4", VA = "0xC9ADF4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xC9B244", Offset = "0xC9B244", VA = "0xC9B244")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x2000085")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xC9740C", Offset = "0xC9740C", VA = "0xC9740C")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xC9B374", Offset = "0xC9B374", VA = "0xC9B374")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xC9B4A4", Offset = "0xC9B4A4", VA = "0xC9B4A4")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x2000086")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xC9B504", Offset = "0xC9B504", VA = "0xC9B504")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xC9AF24", Offset = "0xC9AF24", VA = "0xC9AF24")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xC9BB54", Offset = "0xC9BB54", VA = "0xC9BB54")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xC9BBB4", Offset = "0xC9BBB4", VA = "0xC9BBB4")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0xC9C368", Offset = "0xC9C368", VA = "0xC9C368")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xC9B2A4", Offset = "0xC9B2A4", VA = "0xC9B2A4")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x2000087")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x2000088")]
	public enum PacketMode
	{
		[Token(Token = "0x4000225")]
		SDK,
		[Token(Token = "0x4000226")]
		Unity
	}

	[Token(Token = "0x2000089")]
	public struct ControllerPose
	{
		[Token(Token = "0x4000227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x4000228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x4000229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x400022A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x400022B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x400022C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x6000201")]
		[Address(RVA = "0x10B06A0", Offset = "0x10B06A0", VA = "0x10B06A0")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x200008A")]
	public struct PoseFrame
	{
		[Token(Token = "0x400022D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x400022E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x400022F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x4000230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x4000231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x4000232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x4000233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x4000234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x4000235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x6000202")]
		[Address(RVA = "0x10B077C", Offset = "0x10B077C", VA = "0x10B077C")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xC9DC98", Offset = "0xC9DC98", VA = "0xC9DC98")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x60001FC")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xC9DCA8", Offset = "0xC9DCA8", VA = "0xC9DCA8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xC94CB0", Offset = "0xC94CB0", VA = "0xC94CB0")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xC9DD30", Offset = "0xC9DD30", VA = "0xC9DD30")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0xC9DD38", Offset = "0xC9DD38", VA = "0xC9DD38")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x200008B")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x6000203")]
	[Address(RVA = "0xC9DD48", Offset = "0xC9DD48", VA = "0xC9DD48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0xC9DEB8", Offset = "0xC9DEB8", VA = "0xC9DEB8")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x200008C")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xC9DF20", Offset = "0xC9DF20", VA = "0xC9DF20")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0xC9E084", Offset = "0xC9E084", VA = "0xC9E084")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0xC9E420", Offset = "0xC9E420", VA = "0xC9E420")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xC9E644", Offset = "0xC9E644", VA = "0xC9E644", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0xC9E670", Offset = "0xC9E670", VA = "0xC9E670")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x200008D")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x200008E")]
	public enum TextureType
	{
		[Token(Token = "0x400025C")]
		DiffuseTextures,
		[Token(Token = "0x400025D")]
		NormalMaps,
		[Token(Token = "0x400025E")]
		RoughnessMaps,
		[Token(Token = "0x400025F")]
		Count
	}

	[Token(Token = "0x200008F")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x4000260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x4000261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x4000262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x4000263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x4000264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x4000265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x2000090")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x4000266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x4000267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x2000091")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x4000268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x4000269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x400026A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x400026B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x2000092")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x400026C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x400026D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x6000219")]
		[Address(RVA = "0x10B11C0", Offset = "0x10B11C0", VA = "0x10B11C0")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x2000093")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0008", Offset = "0x8C0008")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400026E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400026F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x4000271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x4000272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x4000273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x4000274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x4000275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x4000276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x4000277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x4000278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x4000279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x17000028")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600021D")]
			[Address(RVA = "0x10B1170", Offset = "0x10B1170", VA = "0x10B1170", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000029")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600021F")]
			[Address(RVA = "0x10B11B8", Offset = "0x10B11B8", VA = "0x10B11B8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600021A")]
		[Address(RVA = "0x10B0A80", Offset = "0x10B0A80", VA = "0x10B0A80")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x600021B")]
		[Address(RVA = "0x10B0AAC", Offset = "0x10B0AAC", VA = "0x10B0AAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600021C")]
		[Address(RVA = "0x10B0AB0", Offset = "0x10B0AB0", VA = "0x10B0AB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600021E")]
		[Address(RVA = "0x10B1178", Offset = "0x10B1178", VA = "0x10B1178", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x4000257")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x4000258")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x4000259")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x400025A")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xC9E6BC", Offset = "0xC9E6BC", VA = "0xC9E6BC")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0xC9E89C", Offset = "0xC9E89C", VA = "0xC9E89C")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0xC9E8DC", Offset = "0xC9E8DC", VA = "0xC9E8DC")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xC9F070", Offset = "0xC9F070", VA = "0xC9F070")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xC9F358", Offset = "0xC9F358", VA = "0xC9F358")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xC9E978", Offset = "0xC9E978", VA = "0xC9E978")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0xC9F444", Offset = "0xC9F444", VA = "0xC9F444")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xC9EDCC", Offset = "0xC9EDCC", VA = "0xC9EDCC")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xC9F6D4", Offset = "0xC9F6D4", VA = "0xC9F6D4")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0xC9F978", Offset = "0xC9F978", VA = "0xC9F978")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xC9FAA0", Offset = "0xC9FAA0", VA = "0xC9FAA0")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xC9FAD8", Offset = "0xC9FAD8", VA = "0xC9FAD8")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xC9EFDC", Offset = "0xC9EFDC", VA = "0xC9EFDC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C5184", Offset = "0x8C5184")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xCA0A40", Offset = "0xCA0A40", VA = "0xCA0A40")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x2000094")]
public class OvrAvatarPacket
{
	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x1700002A")]
	public float Duration
	{
		[Token(Token = "0x6000220")]
		[Address(RVA = "0xC969F4", Offset = "0xC969F4", VA = "0xC969F4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700002B")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x6000221")]
		[Address(RVA = "0xC96B40", Offset = "0xC96B40", VA = "0xC96B40")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xC96BD0", Offset = "0xC96BD0", VA = "0xC96BD0")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xC96828", Offset = "0xC96828", VA = "0xC96828")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0xCA107C", Offset = "0xCA107C", VA = "0xCA107C")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0xC96A68", Offset = "0xC96A68", VA = "0xC96A68")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xCA11E8", Offset = "0xCA11E8", VA = "0xCA11E8")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xCA1418", Offset = "0xCA1418", VA = "0xCA1418")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xCA16F4", Offset = "0xCA16F4", VA = "0xCA16F4")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x2000095")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x6000229")]
	[Address(RVA = "0x108BBA0", Offset = "0x108BBA0", VA = "0x108BBA0")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x108BCB4", Offset = "0x108BCB4", VA = "0x108BCB4")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x108BE60", Offset = "0x108BE60", VA = "0x108BE60")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x108BD24", Offset = "0x108BD24", VA = "0x108BD24")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x108BDB8", Offset = "0x108BDB8", VA = "0x108BDB8")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x2000096")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x600022E")]
	[Address(RVA = "0x108B7A0", Offset = "0x108B7A0", VA = "0x108B7A0")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x108BB44", Offset = "0x108BB44", VA = "0x108BB44")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x108B940", Offset = "0x108B940", VA = "0x108B940")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x108B9B8", Offset = "0x108B9B8", VA = "0x108B9B8")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x108BA54", Offset = "0x108BA54", VA = "0x108BA54")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x2000097")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x4000281")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x4000282")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xCA191C", Offset = "0xCA191C", VA = "0xCA191C")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xCA19A4", Offset = "0xCA19A4", VA = "0xCA19A4", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0xCA19C0", Offset = "0xCA19C0", VA = "0xCA19C0")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xCA1B64", Offset = "0xCA1B64", VA = "0xCA1B64")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xCA1D50", Offset = "0xCA1D50", VA = "0xCA1D50")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x2000098")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xCA1DF4", Offset = "0xCA1DF4", VA = "0xCA1DF4")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xCA1ED8", Offset = "0xCA1ED8", VA = "0xCA1ED8")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xCA20CC", Offset = "0xCA20CC", VA = "0xCA20CC")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xCA2484", Offset = "0xCA2484", VA = "0xCA2484")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xCA2590", Offset = "0xCA2590", VA = "0xCA2590")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x2000099")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x400028B")]
	Body = 1,
	[Token(Token = "0x400028C")]
	Hands = 2,
	[Token(Token = "0x400028D")]
	Base = 4,
	[Token(Token = "0x400028E")]
	BodyTilt = 0x10,
	[Token(Token = "0x400028F")]
	Expressive = 0x20,
	[Token(Token = "0x4000290")]
	All = -1
}
[Token(Token = "0x200009A")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x4000292")]
	AvatarSpecification,
	[Token(Token = "0x4000293")]
	AssetLoaded,
	[Token(Token = "0x4000294")]
	Count
}
[Token(Token = "0x200009B")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x200009C")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x200009D")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x400029A")]
	Mesh,
	[Token(Token = "0x400029B")]
	Texture,
	[Token(Token = "0x400029C")]
	Pose,
	[Token(Token = "0x400029D")]
	Material,
	[Token(Token = "0x400029E")]
	CombinedMesh,
	[Token(Token = "0x400029F")]
	PBSMaterial,
	[Token(Token = "0x40002A0")]
	FailedLoad,
	[Token(Token = "0x40002A1")]
	Count
}
[Token(Token = "0x200009E")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x200009F")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x20000A0")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x20000A1")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x20000A2")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x20000A3")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x40002D6")]
	RGB24,
	[Token(Token = "0x40002D7")]
	DXT1,
	[Token(Token = "0x40002D8")]
	DXT5,
	[Token(Token = "0x40002D9")]
	ASTC_RGB_6x6,
	[Token(Token = "0x40002DA")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x40002DB")]
	Count
}
[Token(Token = "0x20000A4")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x20000A5")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x40002E3")]
	SkinnedMeshRender,
	[Token(Token = "0x40002E4")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x40002E5")]
	ProjectorRender,
	[Token(Token = "0x40002E6")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x40002E7")]
	Count
}
[Token(Token = "0x20000A6")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x40002E9")]
	Unknown,
	[Token(Token = "0x40002EA")]
	Default,
	[Token(Token = "0x40002EB")]
	Verbose,
	[Token(Token = "0x40002EC")]
	Debug,
	[Token(Token = "0x40002ED")]
	Info,
	[Token(Token = "0x40002EE")]
	Warn,
	[Token(Token = "0x40002EF")]
	Error,
	[Token(Token = "0x40002F0")]
	Fatal,
	[Token(Token = "0x40002F1")]
	Silent
}
[Token(Token = "0x20000A7")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x20000A8")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x40002F6")]
	One = 1,
	[Token(Token = "0x40002F7")]
	Two = 2,
	[Token(Token = "0x40002F8")]
	Three = 4,
	[Token(Token = "0x40002F9")]
	Joystick = 8
}
[Token(Token = "0x20000A9")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x40002FB")]
	One = 1,
	[Token(Token = "0x40002FC")]
	Two = 2,
	[Token(Token = "0x40002FD")]
	Joystick = 4,
	[Token(Token = "0x40002FE")]
	ThumbRest = 8,
	[Token(Token = "0x40002FF")]
	Index = 0x10,
	[Token(Token = "0x4000300")]
	Pointing = 0x40,
	[Token(Token = "0x4000301")]
	ThumbUp = 0x80
}
[Token(Token = "0x20000AA")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x20000AB")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x20000AC")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x20000AD")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000AE")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000AF")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x20000B0")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000B1")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000B2")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x4000321")]
	Add,
	[Token(Token = "0x4000322")]
	Multiply,
	[Token(Token = "0x4000323")]
	Count
}
[Token(Token = "0x20000B3")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x4000325")]
	Color,
	[Token(Token = "0x4000326")]
	Texture,
	[Token(Token = "0x4000327")]
	TextureSingleChannel,
	[Token(Token = "0x4000328")]
	Parallax,
	[Token(Token = "0x4000329")]
	Count
}
[Token(Token = "0x20000B4")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x400032B")]
	None,
	[Token(Token = "0x400032C")]
	Positional,
	[Token(Token = "0x400032D")]
	ViewReflection,
	[Token(Token = "0x400032E")]
	Fresnel,
	[Token(Token = "0x400032F")]
	Pulse,
	[Token(Token = "0x4000330")]
	Count
}
[Token(Token = "0x20000B5")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x4000332")]
	Touch,
	[Token(Token = "0x4000333")]
	Malibu,
	[Token(Token = "0x4000334")]
	Go,
	[Token(Token = "0x4000335")]
	Quest,
	[Token(Token = "0x4000336")]
	Count
}
[Token(Token = "0x20000B6")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x4000338")]
	Lowest = 1,
	[Token(Token = "0x4000339")]
	Medium = 3,
	[Token(Token = "0x400033A")]
	Highest = 5
}
[Token(Token = "0x20000B7")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x400033C")]
	Unknown = -1,
	[Token(Token = "0x400033D")]
	One,
	[Token(Token = "0x400033E")]
	Two
}
[Token(Token = "0x20000B8")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x10A1BB0", Offset = "0x10A1BB0", VA = "0x10A1BB0")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x10A1BE0", Offset = "0x10A1BE0", VA = "0x10A1BE0", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x10A1DFC", Offset = "0x10A1DFC", VA = "0x10A1DFC", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000B9")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x10A1EE0", Offset = "0x10A1EE0", VA = "0x10A1EE0")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x10A1F10", Offset = "0x10A1F10", VA = "0x10A1F10", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x10A22AC", Offset = "0x10A22AC", VA = "0x10A22AC", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000BA")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x10A1140", Offset = "0x10A1140", VA = "0x10A1140")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x10A1170", Offset = "0x10A1170", VA = "0x10A1170", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x10A1400", Offset = "0x10A1400", VA = "0x10A1400", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000BB")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x10A2414", Offset = "0x10A2414", VA = "0x10A2414")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x10A2444", Offset = "0x10A2444", VA = "0x10A2444", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x10A2634", Offset = "0x10A2634", VA = "0x10A2634", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000BC")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x600024B")]
	[Address(RVA = "0xC98FA0", Offset = "0xC98FA0", VA = "0xC98FA0")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x20000BD")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x20000BE")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x4000373")]
	FirstPerson = 1,
	[Token(Token = "0x4000374")]
	ThirdPerson = 2,
	[Token(Token = "0x4000375")]
	SelfOccluding = 4
}
[Token(Token = "0x20000BF")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20000C0")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20000C1")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x20000C2")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20000C3")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x400038B")]
	Default,
	[Token(Token = "0x400038C")]
	GripSphere,
	[Token(Token = "0x400038D")]
	GripCube,
	[Token(Token = "0x400038E")]
	Count
}
[Token(Token = "0x20000C4")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x4000390")]
	Body,
	[Token(Token = "0x4000391")]
	Clothing,
	[Token(Token = "0x4000392")]
	Eyewear,
	[Token(Token = "0x4000393")]
	Hair,
	[Token(Token = "0x4000394")]
	Beard,
	[Token(Token = "0x4000395")]
	Count
}
[Token(Token = "0x20000C5")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x20000C6")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x20000C7")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x20000C8")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x20000C9")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x400039F")]
	AvatarHead,
	[Token(Token = "0x40003A0")]
	AvatarHand,
	[Token(Token = "0x40003A1")]
	Object,
	[Token(Token = "0x40003A2")]
	ObjectStatic,
	[Token(Token = "0x40003A3")]
	Count
}
[Token(Token = "0x20000CA")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x20000CB")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x20000CC")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x20000CD")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x20000CE")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x40003AF")]
	Point,
	[Token(Token = "0x40003B0")]
	Direction,
	[Token(Token = "0x40003B1")]
	Spot,
	[Token(Token = "0x40003B2")]
	Count
}
[Token(Token = "0x20000CF")]
public struct ovrAvatarLight
{
	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x20000D0")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x20000D1")]
public struct ovrAvatarLights
{
	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x20000D2")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x20000D3")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x40003C8")]
	None = 0u,
	[Token(Token = "0x40003C9")]
	GazeTarget = 1u,
	[Token(Token = "0x40003CA")]
	Any = uint.MaxValue
}
[Token(Token = "0x20000D4")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x20000D5")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x20000D6")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x20000D7")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x20000D8")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x20000D9")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x20000DA")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x40003E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x40003E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x40003E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x40003E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x40003E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x40003E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x40003E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x40003E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x600026F")]
		[Address(RVA = "0x10B11C8", Offset = "0x10B11C8", VA = "0x10B11C8")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x40003DF")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x1700002C")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x600025E")]
		[Address(RVA = "0xC94F18", Offset = "0xC94F18", VA = "0xC94F18")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xCA25A0", Offset = "0xCA25A0", VA = "0xCA25A0")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0xCA28F0", Offset = "0xCA28F0", VA = "0xCA28F0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0xCA2960", Offset = "0xCA2960", VA = "0xCA2960")]
	private void Update()
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0xCA3330", Offset = "0xCA3330", VA = "0xCA3330")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0xCA3384", Offset = "0xCA3384", VA = "0xCA3384")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xC95788", Offset = "0xC95788", VA = "0xC95788")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0xC95D98", Offset = "0xC95D98", VA = "0xC95D98")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xC956F8", Offset = "0xC956F8", VA = "0xC956F8")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xCA3130", Offset = "0xCA3130", VA = "0xCA3130")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0xC9518C", Offset = "0xC9518C", VA = "0xC9518C")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xC952E0", Offset = "0xC952E0", VA = "0xC952E0")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0xC95110", Offset = "0xC95110", VA = "0xC95110")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0xCA3424", Offset = "0xCA3424", VA = "0xCA3424")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0xCA28A4", Offset = "0xCA28A4", VA = "0xCA28A4")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xC9F0D0", Offset = "0xC9F0D0", VA = "0xC9F0D0")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xCA3504", Offset = "0xCA3504", VA = "0xCA3504")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x20000DB")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x1700002D")]
	public static string AppID
	{
		[Token(Token = "0x6000270")]
		[Address(RVA = "0xCA34C4", Offset = "0xCA34C4", VA = "0xCA34C4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000271")]
		[Address(RVA = "0xCA3674", Offset = "0xCA3674", VA = "0xCA3674")]
		set
		{
		}
	}

	[Token(Token = "0x1700002E")]
	public static string MobileAppID
	{
		[Token(Token = "0x6000272")]
		[Address(RVA = "0xCA34E4", Offset = "0xCA34E4", VA = "0xCA34E4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000273")]
		[Address(RVA = "0xCA36A4", Offset = "0xCA36A4", VA = "0xCA36A4")]
		set
		{
		}
	}

	[Token(Token = "0x1700002F")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x6000274")]
		[Address(RVA = "0xCA351C", Offset = "0xCA351C", VA = "0xCA351C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000275")]
		[Address(RVA = "0xCA36D4", Offset = "0xCA36D4", VA = "0xCA36D4")]
		set
		{
		}
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0xCA3728", Offset = "0xCA3728", VA = "0xCA3728")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x20000DC")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x6000277")]
	[Address(RVA = "0xC92E08", Offset = "0xC92E08", VA = "0xC92E08")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0xC9B50C", Offset = "0xC9B50C", VA = "0xC9B50C")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0xCA4BD4", Offset = "0xCA4BD4", VA = "0xCA4BD4")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0xCA4D3C", Offset = "0xCA4D3C", VA = "0xCA4D3C")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x20000DD")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x600027B")]
	[Address(RVA = "0xC9306C", Offset = "0xC9306C", VA = "0xC9306C")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0xC9B748", Offset = "0xC9B748", VA = "0xC9B748")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0xCA4D4C", Offset = "0xCA4D4C", VA = "0xCA4D4C")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x20000DE")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x40003F6")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x40003F7")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x40003F8")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x600027E")]
	[Address(RVA = "0xC933A8", Offset = "0xC933A8", VA = "0xC933A8")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0xC9B918", Offset = "0xC9B918", VA = "0xC9B918")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0xCA4358", Offset = "0xCA4358", VA = "0xCA4358")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0xCA3A70", Offset = "0xCA3A70", VA = "0xCA3A70")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0xCA3794", Offset = "0xCA3794", VA = "0xCA3794")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0xCA38F8", Offset = "0xCA38F8", VA = "0xCA38F8")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0xCA4BC4", Offset = "0xCA4BC4", VA = "0xCA4BC4")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x20000DF")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000E0")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x4000407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x4000408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x4000409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x20000E1")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x400040A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x400040B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x400040C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x400040D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x400040E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x600028F")]
		[Address(RVA = "0x10B18C4", Offset = "0x10B18C4", VA = "0x10B18C4")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x20000E2")]
	public struct TextureSet
	{
		[Token(Token = "0x400040F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x4000410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x6000290")]
		[Address(RVA = "0x10B1920", Offset = "0x10B1920", VA = "0x10B1920")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x20000E3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0088", Offset = "0x8C0088")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x4000414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x4000415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x17000030")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000294")]
			[Address(RVA = "0x10B1874", Offset = "0x10B1874", VA = "0x10B1874", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000031")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000296")]
			[Address(RVA = "0x10B18BC", Offset = "0x10B18BC", VA = "0x10B18BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000291")]
		[Address(RVA = "0x10B1244", Offset = "0x10B1244", VA = "0x10B1244")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000292")]
		[Address(RVA = "0x10B1270", Offset = "0x10B1270", VA = "0x10B1270", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000293")]
		[Address(RVA = "0x10B1274", Offset = "0x10B1274", VA = "0x10B1274", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000295")]
		[Address(RVA = "0x10B187C", Offset = "0x10B187C", VA = "0x10B187C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x40003FC")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x40003FD")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x4000400")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x4000401")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x4000402")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x4000403")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x4000404")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x4000405")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x4000406")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x6000285")]
	[Address(RVA = "0xCA5478", Offset = "0xCA5478", VA = "0xCA5478")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0xCA5958", Offset = "0xCA5958", VA = "0xCA5958")]
	public void Update()
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0xCA5B58", Offset = "0xCA5B58", VA = "0xCA5B58")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0xC9F528", Offset = "0xC9F528", VA = "0xC9F528")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0xCA5ACC", Offset = "0xCA5ACC", VA = "0xCA5ACC")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0xC9F150", Offset = "0xC9F150", VA = "0xC9F150")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0xC9F3A0", Offset = "0xC9F3A0", VA = "0xC9F3A0")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0xCA5BA4", Offset = "0xCA5BA4", VA = "0xCA5BA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C52D4", Offset = "0x8C52D4")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0xCA33D8", Offset = "0xCA33D8", VA = "0xCA33D8")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0xCA5C50", Offset = "0xCA5C50", VA = "0xCA5C50")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x20000E4")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x6000297")]
	[Address(RVA = "0xCA5DC8", Offset = "0xCA5DC8", VA = "0xCA5DC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xCA5F38", Offset = "0xCA5F38", VA = "0xCA5F38")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x20000E5")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x20000E6")]
	public delegate void OnClick();

	[Token(Token = "0x20000E7")]
	public delegate void OnToggleValueChange(UnityEngine.UI.Toggle t);

	[Token(Token = "0x20000E8")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x20000E9")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x20000EA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0098", Offset = "0x8C0098")]
	private sealed class <>c__DisplayClass38_0
	{
		[Token(Token = "0x4000435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x60002B8")]
		[Address(RVA = "0x10A449C", Offset = "0x10A449C", VA = "0x10A449C")]
		public <>c__DisplayClass38_0()
		{
		}

		[Token(Token = "0x60002B9")]
		[Address(RVA = "0x10A44A4", Offset = "0x10A44A4", VA = "0x10A44A4")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x20000EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C00A8", Offset = "0x8C00A8")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x4000436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x60002BA")]
		[Address(RVA = "0x10A46C8", Offset = "0x10A46C8", VA = "0x10A46C8")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x60002BB")]
		[Address(RVA = "0x10A46D0", Offset = "0x10A46D0", VA = "0x10A46D0")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x20000EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C00B8", Offset = "0x8C00B8")]
	private sealed class <>c__DisplayClass42_0
	{
		[Token(Token = "0x4000437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEngine.UI.Toggle t;

		[Token(Token = "0x60002BC")]
		[Address(RVA = "0x10A491C", Offset = "0x10A491C", VA = "0x10A491C")]
		public <>c__DisplayClass42_0()
		{
		}

		[Token(Token = "0x60002BD")]
		[Address(RVA = "0x10A4924", Offset = "0x10A4924", VA = "0x10A4924")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20000ED")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C00C8", Offset = "0x8C00C8")]
	private sealed class <>c__DisplayClass43_0
	{
		[Token(Token = "0x4000439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x400043A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEngine.UI.Toggle t;

		[Token(Token = "0x60002BE")]
		[Address(RVA = "0x10A4CB8", Offset = "0x10A4CB8", VA = "0x10A4CB8")]
		public <>c__DisplayClass43_0()
		{
		}

		[Token(Token = "0x60002BF")]
		[Address(RVA = "0x10A4CC0", Offset = "0x10A4CC0", VA = "0x10A4CC0")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20000EE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C00D8", Offset = "0x8C00D8")]
	private sealed class <>c__DisplayClass44_0
	{
		[Token(Token = "0x400043B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x400043C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEngine.UI.Toggle tb;

		[Token(Token = "0x60002C0")]
		[Address(RVA = "0x10A4CE0", Offset = "0x10A4CE0", VA = "0x10A4CE0")]
		public <>c__DisplayClass44_0()
		{
		}

		[Token(Token = "0x60002C1")]
		[Address(RVA = "0x10A4CE8", Offset = "0x10A4CE8", VA = "0x10A4CE8")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x4000418")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x4000419")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x400041A")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform[] additionalButtonPrefab;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool[] reEnable;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x4000429")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x400042A")]
	public const float marginH = 16f;

	[Token(Token = "0x400042B")]
	public const float marginV = 16f;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector2[] insertPositions;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 menuOffset;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private OVRCameraRig rig;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private LaserPointer lp;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private LineRenderer lr;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public bool isHorizontal;

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x109C160", Offset = "0x109C160", VA = "0x109C160")]
	public void Awake()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x1088DB8", Offset = "0x1088DB8", VA = "0x1088DB8")]
	public void Show()
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x10893F4", Offset = "0x10893F4", VA = "0x10893F4")]
	public void Hide()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x109C690", Offset = "0x109C690", VA = "0x109C690")]
	private void Relayout()
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x109C8D4", Offset = "0x109C8D4", VA = "0x109C8D4")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x10886D0", Offset = "0x10886D0", VA = "0x10886D0")]
	public RectTransform AddButton(string label, [Optional] OnClick handler, int buttonIndex = -1, int targetCanvas = 0, bool highResolutionText = false)
	{
		return null;
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x1088528", Offset = "0x1088528", VA = "0x1088528")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x109CBF4", Offset = "0x109CBF4", VA = "0x109CBF4")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x108862C", Offset = "0x108862C", VA = "0x108862C")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x109CDD8", Offset = "0x109CDD8", VA = "0x109CDD8")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x109CFC8", Offset = "0x109CFC8", VA = "0x109CFC8")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x109D1D0", Offset = "0x109D1D0", VA = "0x109D1D0")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x109D4D4", Offset = "0x109D4D4", VA = "0x109D4D4")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x1088D0C", Offset = "0x1088D0C", VA = "0x1088D0C")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x109D5D0", Offset = "0x109D5D0", VA = "0x109D5D0")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x20000EF")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x1183C68", Offset = "0x1183C68", VA = "0x1183C68")]
	private void Start()
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x1183D18", Offset = "0x1183D18", VA = "0x1183D18")]
	private void Update()
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x1183DD8", Offset = "0x1183DD8", VA = "0x1183DD8")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x1183E14", Offset = "0x1183E14", VA = "0x1183E14")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x20000F0")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x20000F1")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4000449")]
		On,
		[Token(Token = "0x400044A")]
		Off,
		[Token(Token = "0x400044B")]
		OnWhenHitTarget
	}

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected Vector3 _startPoint;

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected Vector3 _forward;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected Vector3 _endPoint;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected bool _hitTarget;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected LineRenderer lineRenderer;

	[Token(Token = "0x17000032")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x60002C7")]
		[Address(RVA = "0x10FF2FC", Offset = "0x10FF2FC", VA = "0x10FF2FC")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x60002C6")]
		[Address(RVA = "0x10FF2B8", Offset = "0x10FF2B8", VA = "0x10FF2B8")]
		set
		{
		}
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x10FF304", Offset = "0x10FF304", VA = "0x10FF304")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x10FF360", Offset = "0x10FF360", VA = "0x10FF360", Slot = "6")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x10FF4A4", Offset = "0x10FF4A4", VA = "0x10FF4A4", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x10FF4C0", Offset = "0x10FF4C0", VA = "0x10FF4C0", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x10FF514", Offset = "0x10FF514", VA = "0x10FF514", Slot = "7")]
	protected virtual void LateUpdate()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x10FF6D0", Offset = "0x10FF6D0", VA = "0x10FF6D0")]
	protected void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x10FF7E4", Offset = "0x10FF7E4", VA = "0x10FF7E4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x10FF874", Offset = "0x10FF874", VA = "0x10FF874")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x10FF940", Offset = "0x10FF940", VA = "0x10FF940")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x10FF9F4", Offset = "0x10FF9F4", VA = "0x10FF9F4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x10FFAE0", Offset = "0x10FFAE0", VA = "0x10FFAE0")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x20000F2")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x400044C")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x400044D")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x400044E")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1C8C", Offset = "0x8C1C8C")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1CC4", Offset = "0x8C1CC4")]
	public LayerMask CollideLayers;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1CFC", Offset = "0x8C1CFC")]
	public float HeightOffset;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1D34", Offset = "0x8C1D34")]
	public float MinimumHeight;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1D6C", Offset = "0x8C1D6C")]
	public float MaximumHeight;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x109742C", Offset = "0x109742C", VA = "0x109742C")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x1097434", Offset = "0x1097434", VA = "0x1097434")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x10974C0", Offset = "0x10974C0", VA = "0x10974C0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x10975A8", Offset = "0x10975A8", VA = "0x10975A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x1097690", Offset = "0x1097690", VA = "0x1097690")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x10979BC", Offset = "0x10979BC", VA = "0x10979BC")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x1097BEC", Offset = "0x1097BEC", VA = "0x1097BEC")]
	private bool CheckCameraNearClipping(out float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000F3")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x10FFF84", Offset = "0x10FFF84", VA = "0x10FFF84")]
	private void Start()
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x1100050", Offset = "0x1100050", VA = "0x1100050")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x20000F4")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x20000F5")]
	public enum States
	{
		[Token(Token = "0x400047C")]
		Ready,
		[Token(Token = "0x400047D")]
		Aim,
		[Token(Token = "0x400047E")]
		CancelAim,
		[Token(Token = "0x400047F")]
		PreTeleport,
		[Token(Token = "0x4000480")]
		CancelTeleport,
		[Token(Token = "0x4000481")]
		Teleporting,
		[Token(Token = "0x4000482")]
		PostTeleport
	}

	[Token(Token = "0x20000F6")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x4000484")]
		None,
		[Token(Token = "0x4000485")]
		Aim,
		[Token(Token = "0x4000486")]
		PreTeleport,
		[Token(Token = "0x4000487")]
		Teleport
	}

	[Token(Token = "0x20000F7")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4000489")]
		Point,
		[Token(Token = "0x400048A")]
		Sphere,
		[Token(Token = "0x400048B")]
		Capsule
	}

	[Token(Token = "0x20000F8")]
	public class AimData
	{
		[Token(Token = "0x400048C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x400048D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x400048E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x400048F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x4000490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2184", Offset = "0x8C2184")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x17000036")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6000311")]
			[Address(RVA = "0x10AE32C", Offset = "0x10AE32C", VA = "0x10AE32C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C57FC", Offset = "0x8C57FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000312")]
			[Address(RVA = "0x10AE334", Offset = "0x10AE334", VA = "0x10AE334")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C580C", Offset = "0x8C580C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000310")]
		[Address(RVA = "0x10AE2A8", Offset = "0x10AE2A8", VA = "0x10AE2A8")]
		public AimData()
		{
		}

		[Token(Token = "0x6000313")]
		[Address(RVA = "0x10AE33C", Offset = "0x10AE33C", VA = "0x10AE33C")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20000F9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C00E8", Offset = "0x8C00E8")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000037")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000317")]
			[Address(RVA = "0x10AE0F4", Offset = "0x10AE0F4", VA = "0x10AE0F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000038")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000319")]
			[Address(RVA = "0x10AE13C", Offset = "0x10AE13C", VA = "0x10AE13C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000314")]
		[Address(RVA = "0x10ADFB8", Offset = "0x10ADFB8", VA = "0x10ADFB8")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6000315")]
		[Address(RVA = "0x10ADFE4", Offset = "0x10ADFE4", VA = "0x10ADFE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000316")]
		[Address(RVA = "0x10ADFE8", Offset = "0x10ADFE8", VA = "0x10ADFE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000318")]
		[Address(RVA = "0x10AE0FC", Offset = "0x10AE0FC", VA = "0x10AE0FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C00F8", Offset = "0x8C00F8")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000039")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600031D")]
			[Address(RVA = "0x10ADA24", Offset = "0x10ADA24", VA = "0x10ADA24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600031F")]
			[Address(RVA = "0x10ADA6C", Offset = "0x10ADA6C", VA = "0x10ADA6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600031A")]
		[Address(RVA = "0x10AD89C", Offset = "0x10AD89C", VA = "0x10AD89C")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x600031B")]
		[Address(RVA = "0x10AD8C8", Offset = "0x10AD8C8", VA = "0x10AD8C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600031C")]
		[Address(RVA = "0x10AD8CC", Offset = "0x10AD8CC", VA = "0x10AD8CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600031E")]
		[Address(RVA = "0x10ADA2C", Offset = "0x10ADA2C", VA = "0x10ADA2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000FB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0108", Offset = "0x8C0108")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700003B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000323")]
			[Address(RVA = "0x10ADB50", Offset = "0x10ADB50", VA = "0x10ADB50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000325")]
			[Address(RVA = "0x10ADB98", Offset = "0x10ADB98", VA = "0x10ADB98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000320")]
		[Address(RVA = "0x10ADA74", Offset = "0x10ADA74", VA = "0x10ADA74")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6000321")]
		[Address(RVA = "0x10ADAA0", Offset = "0x10ADAA0", VA = "0x10ADAA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000322")]
		[Address(RVA = "0x10ADAA4", Offset = "0x10ADAA4", VA = "0x10ADAA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000324")]
		[Address(RVA = "0x10ADB58", Offset = "0x10ADB58", VA = "0x10ADB58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0118", Offset = "0x8C0118")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400049A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400049B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400049C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700003D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000329")]
			[Address(RVA = "0x10ADF68", Offset = "0x10ADF68", VA = "0x10ADF68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700003E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600032B")]
			[Address(RVA = "0x10ADFB0", Offset = "0x10ADFB0", VA = "0x10ADFB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000326")]
		[Address(RVA = "0x10ADE4C", Offset = "0x10ADE4C", VA = "0x10ADE4C")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6000327")]
		[Address(RVA = "0x10ADE78", Offset = "0x10ADE78", VA = "0x10ADE78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000328")]
		[Address(RVA = "0x10ADE7C", Offset = "0x10ADE7C", VA = "0x10ADE7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600032A")]
		[Address(RVA = "0x10ADF70", Offset = "0x10ADF70", VA = "0x10ADF70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0128", Offset = "0x8C0128")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400049D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400049E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400049F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700003F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600032F")]
			[Address(RVA = "0x10ADC7C", Offset = "0x10ADC7C", VA = "0x10ADC7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000040")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000331")]
			[Address(RVA = "0x10ADCC4", Offset = "0x10ADCC4", VA = "0x10ADCC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600032C")]
		[Address(RVA = "0x10ADBA0", Offset = "0x10ADBA0", VA = "0x10ADBA0")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x600032D")]
		[Address(RVA = "0x10ADBCC", Offset = "0x10ADBCC", VA = "0x10ADBCC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600032E")]
		[Address(RVA = "0x10ADBD0", Offset = "0x10ADBD0", VA = "0x10ADBD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000330")]
		[Address(RVA = "0x10ADC84", Offset = "0x10ADC84", VA = "0x10ADC84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0138", Offset = "0x8C0138")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000041")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000335")]
			[Address(RVA = "0x10AE258", Offset = "0x10AE258", VA = "0x10AE258", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000042")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000337")]
			[Address(RVA = "0x10AE2A0", Offset = "0x10AE2A0", VA = "0x10AE2A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000332")]
		[Address(RVA = "0x10AE144", Offset = "0x10AE144", VA = "0x10AE144")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6000333")]
		[Address(RVA = "0x10AE170", Offset = "0x10AE170", VA = "0x10AE170", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000334")]
		[Address(RVA = "0x10AE174", Offset = "0x10AE174", VA = "0x10AE174", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000336")]
		[Address(RVA = "0x10AE260", Offset = "0x10AE260", VA = "0x10AE260", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0148", Offset = "0x8C0148")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000043")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600033B")]
			[Address(RVA = "0x10ADDFC", Offset = "0x10ADDFC", VA = "0x10ADDFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000044")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600033D")]
			[Address(RVA = "0x10ADE44", Offset = "0x10ADE44", VA = "0x10ADE44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000338")]
		[Address(RVA = "0x10ADCCC", Offset = "0x10ADCCC", VA = "0x10ADCCC")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6000339")]
		[Address(RVA = "0x10ADCF8", Offset = "0x10ADCF8", VA = "0x10ADCF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600033A")]
		[Address(RVA = "0x10ADCFC", Offset = "0x10ADCFC", VA = "0x10ADCFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600033C")]
		[Address(RVA = "0x10ADE04", Offset = "0x10ADE04", VA = "0x10ADE04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1DA4", Offset = "0x8C1DA4")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1DDC", Offset = "0x8C1DDC")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1E14", Offset = "0x8C1E14")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1E4C", Offset = "0x8C1E4C")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1E84", Offset = "0x8C1E84")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1EBC", Offset = "0x8C1EBC")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1EF4", Offset = "0x8C1EF4")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1F2C", Offset = "0x8C1F2C")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C1F64", Offset = "0x8C1F64")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1F74", Offset = "0x8C1F74")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C1FAC", Offset = "0x8C1FAC")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C1FF4", Offset = "0x8C1FF4")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2004", Offset = "0x8C2004")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C203C", Offset = "0x8C203C")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2074", Offset = "0x8C2074")]
	public float AimCollisionRadius;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C20AC", Offset = "0x8C20AC")]
	public float AimCollisionHeight;

	[Token(Token = "0x17000033")]
	public States CurrentState
	{
		[Token(Token = "0x60002DE")]
		[Address(RVA = "0x1100B4C", Offset = "0x1100B4C", VA = "0x1100B4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5384", Offset = "0x8C5384")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x60002DF")]
		[Address(RVA = "0x1100B54", Offset = "0x1100B54", VA = "0x1100B54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5394", Offset = "0x8C5394")]
		private set
		{
		}
	}

	[Token(Token = "0x17000034")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x60002E3")]
		[Address(RVA = "0x1100D78", Offset = "0x1100D78", VA = "0x1100D78")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000035")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x60002E4")]
		[Address(RVA = "0x1100DA0", Offset = "0x1100DA0", VA = "0x1100DA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C53C4", Offset = "0x8C53C4")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002E5")]
		[Address(RVA = "0x1100DA8", Offset = "0x1100DA8", VA = "0x1100DA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C53D4", Offset = "0x8C53D4")]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x60002E0")]
		[Address(RVA = "0x1100B5C", Offset = "0x1100B5C", VA = "0x1100B5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C53A4", Offset = "0x8C53A4")]
		add
		{
		}
		[Token(Token = "0x60002E1")]
		[Address(RVA = "0x1100BFC", Offset = "0x1100BFC", VA = "0x1100BFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C53B4", Offset = "0x8C53B4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x60002EF")]
		[Address(RVA = "0x11013E8", Offset = "0x11013E8", VA = "0x11013E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C541C", Offset = "0x8C541C")]
		add
		{
		}
		[Token(Token = "0x60002F0")]
		[Address(RVA = "0x1101488", Offset = "0x1101488", VA = "0x1101488")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C542C", Offset = "0x8C542C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x60002F2")]
		[Address(RVA = "0x1101528", Offset = "0x1101528", VA = "0x1101528")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C549C", Offset = "0x8C549C")]
		add
		{
		}
		[Token(Token = "0x60002F3")]
		[Address(RVA = "0x11015C8", Offset = "0x11015C8", VA = "0x11015C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C54AC", Offset = "0x8C54AC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x60002F4")]
		[Address(RVA = "0x1101668", Offset = "0x1101668", VA = "0x1101668")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C54BC", Offset = "0x8C54BC")]
		add
		{
		}
		[Token(Token = "0x60002F5")]
		[Address(RVA = "0x1101708", Offset = "0x1101708", VA = "0x1101708")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C54CC", Offset = "0x8C54CC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x60002F7")]
		[Address(RVA = "0x1101818", Offset = "0x1101818", VA = "0x1101818")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C54DC", Offset = "0x8C54DC")]
		add
		{
		}
		[Token(Token = "0x60002F8")]
		[Address(RVA = "0x11018B8", Offset = "0x11018B8", VA = "0x11018B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C54EC", Offset = "0x8C54EC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x60002FA")]
		[Address(RVA = "0x11019D0", Offset = "0x11019D0", VA = "0x11019D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C555C", Offset = "0x8C555C")]
		add
		{
		}
		[Token(Token = "0x60002FB")]
		[Address(RVA = "0x1101A70", Offset = "0x1101A70", VA = "0x1101A70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C556C", Offset = "0x8C556C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x60002FD")]
		[Address(RVA = "0x1101B88", Offset = "0x1101B88", VA = "0x1101B88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C55DC", Offset = "0x8C55DC")]
		add
		{
		}
		[Token(Token = "0x60002FE")]
		[Address(RVA = "0x1101C28", Offset = "0x1101C28", VA = "0x1101C28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C55EC", Offset = "0x8C55EC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x6000300")]
		[Address(RVA = "0x1101D40", Offset = "0x1101D40", VA = "0x1101D40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C565C", Offset = "0x8C565C")]
		add
		{
		}
		[Token(Token = "0x6000301")]
		[Address(RVA = "0x1101DE0", Offset = "0x1101DE0", VA = "0x1101DE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C566C", Offset = "0x8C566C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x6000303")]
		[Address(RVA = "0x1101EF8", Offset = "0x1101EF8", VA = "0x1101EF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C56DC", Offset = "0x8C56DC")]
		add
		{
		}
		[Token(Token = "0x6000304")]
		[Address(RVA = "0x1101F98", Offset = "0x1101F98", VA = "0x1101F98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C56EC", Offset = "0x8C56EC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x6000306")]
		[Address(RVA = "0x11020B0", Offset = "0x11020B0", VA = "0x11020B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C575C", Offset = "0x8C575C")]
		add
		{
		}
		[Token(Token = "0x6000307")]
		[Address(RVA = "0x1102150", Offset = "0x1102150", VA = "0x1102150")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C576C", Offset = "0x8C576C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x6000309")]
		[Address(RVA = "0x1102268", Offset = "0x1102268", VA = "0x1102268")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C57DC", Offset = "0x8C57DC")]
		add
		{
		}
		[Token(Token = "0x600030A")]
		[Address(RVA = "0x1102308", Offset = "0x1102308", VA = "0x1102308")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C57EC", Offset = "0x8C57EC")]
		remove
		{
		}
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x11007F8", Offset = "0x11007F8", VA = "0x11007F8")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x110081C", Offset = "0x110081C", VA = "0x110081C")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x1100C9C", Offset = "0x1100C9C", VA = "0x1100C9C")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x1100DB0", Offset = "0x1100DB0", VA = "0x1100DB0")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x1100FFC", Offset = "0x1100FFC", VA = "0x1100FFC")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8C53E4", Offset = "0x8C53E4")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x11010B0", Offset = "0x11010B0", VA = "0x11010B0")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x11011B0", Offset = "0x11011B0", VA = "0x11011B0")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x11011CC", Offset = "0x11011CC", VA = "0x11011CC")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x1101290", Offset = "0x1101290", VA = "0x1101290")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x11012D4", Offset = "0x11012D4", VA = "0x11012D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x1101338", Offset = "0x1101338", VA = "0x1101338", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x11013E0", Offset = "0x11013E0", VA = "0x11013E0", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x1101368", Offset = "0x1101368", VA = "0x1101368")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C543C", Offset = "0x8C543C")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x11017A8", Offset = "0x11017A8", VA = "0x11017A8")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x1101958", Offset = "0x1101958", VA = "0x1101958")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C54FC", Offset = "0x8C54FC")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x1101B10", Offset = "0x1101B10", VA = "0x1101B10")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C557C", Offset = "0x8C557C")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x1101CC8", Offset = "0x1101CC8", VA = "0x1101CC8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C55FC", Offset = "0x8C55FC")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x1101E80", Offset = "0x1101E80", VA = "0x1101E80")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C567C", Offset = "0x8C567C")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x1102038", Offset = "0x1102038", VA = "0x1102038")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C56FC", Offset = "0x8C56FC")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x11021F0", Offset = "0x11021F0", VA = "0x11021F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C577C", Offset = "0x8C577C")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x11023A8", Offset = "0x11023A8", VA = "0x11023A8")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x11024E8", Offset = "0x11024E8", VA = "0x11024E8")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x110251C", Offset = "0x110251C", VA = "0x110251C")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x11025E4", Offset = "0x11025E4", VA = "0x11025E4")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x11026DC", Offset = "0x11026DC", VA = "0x11026DC")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x2000100")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000C")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x600033E")]
		[Address(RVA = "0x98C444", Offset = "0x98C444", VA = "0x98C444")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5A4C", Offset = "0x8C5A4C")]
		add
		{
		}
		[Token(Token = "0x600033F")]
		[Address(RVA = "0x98C4E4", Offset = "0x98C4E4", VA = "0x98C4E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5A5C", Offset = "0x8C5A5C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x6000340")]
		[Address(RVA = "0x98C584", Offset = "0x98C584", VA = "0x98C584")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5A6C", Offset = "0x8C5A6C")]
		add
		{
		}
		[Token(Token = "0x6000341")]
		[Address(RVA = "0x98C624", Offset = "0x98C624", VA = "0x98C624")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5A7C", Offset = "0x8C5A7C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x98C6C4", Offset = "0x98C6C4", VA = "0x98C6C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x98C7B0", Offset = "0x98C7B0", VA = "0x98C7B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x98C7B4", Offset = "0x98C7B4", VA = "0x98C7B4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x98C828", Offset = "0x98C828", VA = "0x98C828")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x98C94C", Offset = "0x98C94C", VA = "0x98C94C")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x98CB34", Offset = "0x98CB34", VA = "0x98CB34")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x98CD3C", Offset = "0x98CD3C", VA = "0x98CD3C")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x2000101")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x6000349")]
	[Address(RVA = "0x114FBF8", Offset = "0x114FBF8", VA = "0x114FBF8", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x114FC98", Offset = "0x114FC98", VA = "0x114FC98", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x600034B")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x114FD88", Offset = "0x114FD88", VA = "0x114FD88")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x2000102")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C21B4", Offset = "0x8C21B4")]
	public float Range;

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x114FD98", Offset = "0x114FD98", VA = "0x114FD98", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x114FE94", Offset = "0x114FE94", VA = "0x114FE94")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x2000103")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C21EC", Offset = "0x8C21EC")]
	public float Range;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2224", Offset = "0x8C2224")]
	public float MinimumElevation;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C225C", Offset = "0x8C225C")]
	public float Gravity;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2294", Offset = "0x8C2294")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C2294", Offset = "0x8C2294")]
	public float AimVelocity;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C22F0", Offset = "0x8C22F0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C22F0", Offset = "0x8C22F0")]
	public float AimStep;

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x114FEA4", Offset = "0x114FEA4", VA = "0x114FEA4", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x1150034", Offset = "0x1150034", VA = "0x1150034")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x2000104")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2348", Offset = "0x8C2348")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x1150048", Offset = "0x1150048", VA = "0x1150048")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x1150184", Offset = "0x1150184", VA = "0x1150184")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x11501B4", Offset = "0x11501B4", VA = "0x11501B4")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x11501E4", Offset = "0x11501E4", VA = "0x11501E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x1150294", Offset = "0x1150294", VA = "0x1150294", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x1150300", Offset = "0x1150300", VA = "0x1150300", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x1150368", Offset = "0x1150368", VA = "0x1150368")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x2000105")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2380", Offset = "0x8C2380")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2390", Offset = "0x8C2390")]
	public Transform PositionIndicator;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C23C8", Offset = "0x8C23C8")]
	public Transform OrientationIndicator;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2400", Offset = "0x8C2400")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x17000045")]
	public bool IsValidDestination
	{
		[Token(Token = "0x6000358")]
		[Address(RVA = "0x115048C", Offset = "0x115048C", VA = "0x115048C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5A8C", Offset = "0x8C5A8C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000359")]
		[Address(RVA = "0x1150494", Offset = "0x1150494", VA = "0x1150494")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5A9C", Offset = "0x8C5A9C")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x600035E")]
		[Address(RVA = "0x1150650", Offset = "0x1150650", VA = "0x1150650")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5AAC", Offset = "0x8C5AAC")]
		add
		{
		}
		[Token(Token = "0x600035F")]
		[Address(RVA = "0x11506F0", Offset = "0x11506F0", VA = "0x11506F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5ABC", Offset = "0x8C5ABC")]
		remove
		{
		}
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x11504A0", Offset = "0x11504A0", VA = "0x11504A0")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x1150538", Offset = "0x1150538", VA = "0x1150538")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x115060C", Offset = "0x115060C", VA = "0x115060C")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x115064C", Offset = "0x115064C", VA = "0x115064C")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x1150790", Offset = "0x1150790", VA = "0x1150790")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x11507F4", Offset = "0x11507F4", VA = "0x11507F4")]
	public void Recycle()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x1150814", Offset = "0x1150814", VA = "0x1150814", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x2000106")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x2000107")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0158", Offset = "0x8C0158")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000046")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600036F")]
			[Address(RVA = "0xEA2064", Offset = "0xEA2064", VA = "0xEA2064", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000047")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000371")]
			[Address(RVA = "0xEA20AC", Offset = "0xEA20AC", VA = "0xEA20AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600036C")]
		[Address(RVA = "0xEA1F9C", Offset = "0xEA1F9C", VA = "0xEA1F9C")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600036D")]
		[Address(RVA = "0xEA1FC8", Offset = "0xEA1FC8", VA = "0xEA1FC8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600036E")]
		[Address(RVA = "0xEA1FCC", Offset = "0xEA1FCC", VA = "0xEA1FCC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000370")]
		[Address(RVA = "0xEA206C", Offset = "0xEA206C", VA = "0xEA206C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000108")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0168", Offset = "0x8C0168")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000048")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000375")]
			[Address(RVA = "0xEA1F4C", Offset = "0xEA1F4C", VA = "0xEA1F4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000049")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000377")]
			[Address(RVA = "0xEA1F94", Offset = "0xEA1F94", VA = "0xEA1F94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000372")]
		[Address(RVA = "0xEA1E80", Offset = "0xEA1E80", VA = "0xEA1E80")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000373")]
		[Address(RVA = "0xEA1EAC", Offset = "0xEA1EAC", VA = "0xEA1EAC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000374")]
		[Address(RVA = "0xEA1EB0", Offset = "0xEA1EB0", VA = "0xEA1EB0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000376")]
		[Address(RVA = "0xEA1F54", Offset = "0xEA1F54", VA = "0xEA1F54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x1150A20", Offset = "0x1150A20", VA = "0x1150A20")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x1150AF4", Offset = "0x1150AF4", VA = "0x1150AF4", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x1150B54", Offset = "0x1150B54", VA = "0x1150B54", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x1150C14", Offset = "0x1150C14", VA = "0x1150C14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C5ACC", Offset = "0x8C5ACC")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x1150C8C", Offset = "0x1150C8C", VA = "0x1150C8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C5B2C", Offset = "0x8C5B2C")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000368")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x6000369")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x1150D04", Offset = "0x1150D04", VA = "0x1150D04")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5B8C", Offset = "0x8C5B8C")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x1150D30", Offset = "0x1150D30", VA = "0x1150D30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5B9C", Offset = "0x8C5B9C")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x2000109")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2448", Offset = "0x8C2448")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2458", Offset = "0x8C2458")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2490", Offset = "0x8C2490")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C24C8", Offset = "0x8C24C8")]
	public bool FastTeleport;

	[Token(Token = "0x1700004A")]
	public Transform Pointer
	{
		[Token(Token = "0x6000378")]
		[Address(RVA = "0x1150D5C", Offset = "0x1150D5C", VA = "0x1150D5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5C4C", Offset = "0x8C5C4C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000379")]
		[Address(RVA = "0x1150D64", Offset = "0x1150D64", VA = "0x1150D64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5C5C", Offset = "0x8C5C5C")]
		private set
		{
		}
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x1150D6C", Offset = "0x1150D6C", VA = "0x1150D6C", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x1150EC4", Offset = "0x1150EC4", VA = "0x1150EC4", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x1150F7C", Offset = "0x1150F7C", VA = "0x1150F7C")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x200010A")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x200010B")]
	public enum InputModes
	{
		[Token(Token = "0x40004DC")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x40004DD")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x40004DE")]
		ThumbstickTeleport,
		[Token(Token = "0x40004DF")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x200010C")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x40004E1")]
		A,
		[Token(Token = "0x40004E2")]
		B,
		[Token(Token = "0x40004E3")]
		LeftTrigger,
		[Token(Token = "0x40004E4")]
		LeftThumbstick,
		[Token(Token = "0x40004E5")]
		RightTrigger,
		[Token(Token = "0x40004E6")]
		RightThumbstick,
		[Token(Token = "0x40004E7")]
		X,
		[Token(Token = "0x40004E8")]
		Y
	}

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2500", Offset = "0x8C2500")]
	public InputModes InputMode;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2538", Offset = "0x8C2538")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2570", Offset = "0x8C2570")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C25A8", Offset = "0x8C25A8")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x1150F80", Offset = "0x1150F80", VA = "0x1150F80")]
	private void Start()
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x1150F84", Offset = "0x1150F84", VA = "0x1150F84", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x115136C", Offset = "0x115136C", VA = "0x115136C", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x115142C", Offset = "0x115142C", VA = "0x115142C")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x200010D")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x200010E")]
	public enum OrientationModes
	{
		[Token(Token = "0x40004ED")]
		HeadRelative,
		[Token(Token = "0x40004EE")]
		ForwardFacing
	}

	[Token(Token = "0x200010F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0178", Offset = "0x8C0178")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x1700004B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600038D")]
			[Address(RVA = "0xEA2194", Offset = "0xEA2194", VA = "0xEA2194", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600038F")]
			[Address(RVA = "0xEA21DC", Offset = "0xEA21DC", VA = "0xEA21DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600038A")]
		[Address(RVA = "0xEA20B4", Offset = "0xEA20B4", VA = "0xEA20B4")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600038B")]
		[Address(RVA = "0xEA20E0", Offset = "0xEA20E0", VA = "0xEA20E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600038C")]
		[Address(RVA = "0xEA20E4", Offset = "0xEA20E4", VA = "0xEA20E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600038E")]
		[Address(RVA = "0xEA219C", Offset = "0xEA219C", VA = "0xEA219C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x1151510", Offset = "0x1151510", VA = "0x1151510")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x1151604", Offset = "0x1151604", VA = "0x1151604")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x115160C", Offset = "0x115160C", VA = "0x115160C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x1151658", Offset = "0x1151658", VA = "0x1151658", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x11516A0", Offset = "0x11516A0", VA = "0x11516A0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C5C6C", Offset = "0x8C5C6C")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000386")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x6000387")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x1151718", Offset = "0x1151718", VA = "0x1151718")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x11517D4", Offset = "0x11517D4", VA = "0x11517D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5CCC", Offset = "0x8C5CCC")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000110")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x6000390")]
	[Address(RVA = "0x1151800", Offset = "0x1151800", VA = "0x1151800", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x1151804", Offset = "0x1151804", VA = "0x1151804", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x1151880", Offset = "0x1151880", VA = "0x1151880")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x2000111")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C25E0", Offset = "0x8C25E0")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2618", Offset = "0x8C2618")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2650", Offset = "0x8C2650")]
	public float AimDistanceThreshold;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2688", Offset = "0x8C2688")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x1151884", Offset = "0x1151884", VA = "0x1151884", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x11518B0", Offset = "0x11518B0", VA = "0x11518B0", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x1151C60", Offset = "0x1151C60", VA = "0x1151C60")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x2000112")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C26C0", Offset = "0x8C26C0")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C26F8", Offset = "0x8C26F8")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2730", Offset = "0x8C2730")]
	public float RotateStickThreshold;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x1151C64", Offset = "0x1151C64", VA = "0x1151C64", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x1151CA8", Offset = "0x1151CA8", VA = "0x1151CA8", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x1152050", Offset = "0x1152050", VA = "0x1152050")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x2000113")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x1152060", Offset = "0x1152060", VA = "0x1152060")]
	private void Start()
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x1152064", Offset = "0x1152064", VA = "0x1152064")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x115206C", Offset = "0x115206C", VA = "0x115206C")]
	private void Update()
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x1152128", Offset = "0x1152128", VA = "0x1152128")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x1152150", Offset = "0x1152150", VA = "0x1152150")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x2000114")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2768", Offset = "0x8C2768")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x1700004D")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x600039E")]
		[Address(RVA = "0x1152168", Offset = "0x1152168", VA = "0x1152168")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5D2C", Offset = "0x8C5D2C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600039F")]
		[Address(RVA = "0x1152170", Offset = "0x1152170", VA = "0x1152170")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5D3C", Offset = "0x8C5D3C")]
		private set
		{
		}
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x114FC2C", Offset = "0x114FC2C", VA = "0x114FC2C", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x114FD54", Offset = "0x114FD54", VA = "0x114FD54", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x1152178", Offset = "0x1152178", VA = "0x1152178")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8C5D4C", Offset = "0x8C5D4C")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x11502F4", Offset = "0x11502F4", VA = "0x11502F4", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x1150360", Offset = "0x1150360", VA = "0x1150360", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x114FD90", Offset = "0x114FD90", VA = "0x114FD90")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x2000115")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x2000116")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0188", Offset = "0x8C0188")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400050A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400050B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x1700004E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003B1")]
			[Address(RVA = "0xEA24B4", Offset = "0xEA24B4", VA = "0xEA24B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003B3")]
			[Address(RVA = "0xEA24FC", Offset = "0xEA24FC", VA = "0xEA24FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003AE")]
		[Address(RVA = "0xEA21E4", Offset = "0xEA21E4", VA = "0xEA21E4")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60003AF")]
		[Address(RVA = "0xEA2210", Offset = "0xEA2210", VA = "0xEA2210", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003B0")]
		[Address(RVA = "0xEA2214", Offset = "0xEA2214", VA = "0xEA2214", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003B2")]
		[Address(RVA = "0xEA24BC", Offset = "0xEA24BC", VA = "0xEA24BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2778", Offset = "0x8C2778")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x4000508")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x1152254", Offset = "0x1152254", VA = "0x1152254")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x1152364", Offset = "0x1152364", VA = "0x1152364", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x1152390", Offset = "0x1152390", VA = "0x1152390", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x11523B8", Offset = "0x11523B8", VA = "0x11523B8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C5D84", Offset = "0x8C5D84")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x1152430", Offset = "0x1152430", VA = "0x1152430", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x60003AB")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x115244C", Offset = "0x115244C", VA = "0x115244C", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x115256C", Offset = "0x115256C", VA = "0x115256C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5DE4", Offset = "0x8C5DE4")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000117")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x1152598", Offset = "0x1152598", VA = "0x1152598")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x11525FC", Offset = "0x11525FC", VA = "0x11525FC", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x11526F4", Offset = "0x11526F4", VA = "0x11526F4", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x11527EC", Offset = "0x11527EC", VA = "0x11527EC")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8C5E44", Offset = "0x8C5E44")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x11527F0", Offset = "0x11527F0", VA = "0x11527F0")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x2000118")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C27B0", Offset = "0x8C27B0")]
	public float LOSOffset;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C27E8", Offset = "0x8C27E8")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x11527FC", Offset = "0x11527FC", VA = "0x11527FC", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x1152A08", Offset = "0x1152A08", VA = "0x1152A08")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x2000119")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x1152A14", Offset = "0x1152A14", VA = "0x1152A14", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x1152B0C", Offset = "0x1152B0C", VA = "0x1152B0C")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x200011A")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x1152B10", Offset = "0x1152B10", VA = "0x1152B10", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x1152BA4", Offset = "0x1152BA4", VA = "0x1152BA4", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60003BF")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x1152C34", Offset = "0x1152C34", VA = "0x1152C34")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x200011B")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x200011C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0198", Offset = "0x8C0198")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4000516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4000517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4000518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000050")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003C7")]
			[Address(RVA = "0xEA263C", Offset = "0xEA263C", VA = "0xEA263C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000051")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003C9")]
			[Address(RVA = "0xEA2684", Offset = "0xEA2684", VA = "0xEA2684", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003C4")]
		[Address(RVA = "0xEA2504", Offset = "0xEA2504", VA = "0xEA2504")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x60003C5")]
		[Address(RVA = "0xEA2530", Offset = "0xEA2530", VA = "0xEA2530", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003C6")]
		[Address(RVA = "0xEA2534", Offset = "0xEA2534", VA = "0xEA2534", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003C8")]
		[Address(RVA = "0xEA2644", Offset = "0xEA2644", VA = "0xEA2644", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2820", Offset = "0x8C2820")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C2820", Offset = "0x8C2820")]
	public float TransitionDuration;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2878", Offset = "0x8C2878")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C2878", Offset = "0x8C2878")]
	public float TeleportDelay;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C28CC", Offset = "0x8C28CC")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x1152C3C", Offset = "0x1152C3C", VA = "0x1152C3C", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x1152C68", Offset = "0x1152C68", VA = "0x1152C68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C5E7C", Offset = "0x8C5E7C")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x1152CE0", Offset = "0x1152CE0", VA = "0x1152CE0")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x200011D")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x1152E8C", Offset = "0x1152E8C", VA = "0x1152E8C", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x1152EA8", Offset = "0x1152EA8", VA = "0x1152EA8")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x200011E")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x200011F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C01A8", Offset = "0x8C01A8")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400051B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400051C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400051D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x400051E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x400051F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000052")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003D2")]
			[Address(RVA = "0xEA27F8", Offset = "0xEA27F8", VA = "0xEA27F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000053")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003D4")]
			[Address(RVA = "0xEA2840", Offset = "0xEA2840", VA = "0xEA2840", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003CF")]
		[Address(RVA = "0xEA268C", Offset = "0xEA268C", VA = "0xEA268C")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60003D0")]
		[Address(RVA = "0xEA26B8", Offset = "0xEA26B8", VA = "0xEA26B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003D1")]
		[Address(RVA = "0xEA26BC", Offset = "0xEA26BC", VA = "0xEA26BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003D3")]
		[Address(RVA = "0xEA2800", Offset = "0xEA2800", VA = "0xEA2800", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2904", Offset = "0x8C2904")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C2904", Offset = "0x8C2904")]
	public float TransitionDuration;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x1152EB0", Offset = "0x1152EB0", VA = "0x1152EB0", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x1152EDC", Offset = "0x1152EDC", VA = "0x1152EDC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C5F2C", Offset = "0x8C5F2C")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x1152F54", Offset = "0x1152F54", VA = "0x1152F54")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x2000120")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x2000121")]
	public enum PlabackState
	{
		[Token(Token = "0x4000538")]
		Idle = 1,
		[Token(Token = "0x4000539")]
		Preparing,
		[Token(Token = "0x400053A")]
		Buffering,
		[Token(Token = "0x400053B")]
		Ready,
		[Token(Token = "0x400053C")]
		Ended
	}

	[Token(Token = "0x2000122")]
	public enum StereoMode
	{
		[Token(Token = "0x400053E")]
		Unknown = -1,
		[Token(Token = "0x400053F")]
		Mono,
		[Token(Token = "0x4000540")]
		TopBottom,
		[Token(Token = "0x4000541")]
		LeftRight,
		[Token(Token = "0x4000542")]
		Mesh
	}

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getStereoModeMethodId;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr getWidthMethodId;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr getHeightMethodId;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x17000054")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x60003D5")]
		[Address(RVA = "0xC72040", Offset = "0xC72040", VA = "0xC72040")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000055")]
	private static IntPtr Activity
	{
		[Token(Token = "0x60003D6")]
		[Address(RVA = "0xC72370", Offset = "0xC72370", VA = "0xC72370")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000056")]
	public static bool IsAvailable
	{
		[Token(Token = "0x60003D7")]
		[Address(RVA = "0xC6F0C4", Offset = "0xC6F0C4", VA = "0xC6F0C4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000057")]
	public static bool IsPlaying
	{
		[Token(Token = "0x60003D8")]
		[Address(RVA = "0xC708C0", Offset = "0xC708C0", VA = "0xC708C0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000058")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x60003D9")]
		[Address(RVA = "0xC72640", Offset = "0xC72640", VA = "0xC72640")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x17000059")]
	public static long Duration
	{
		[Token(Token = "0x60003DA")]
		[Address(RVA = "0xC70AE4", Offset = "0xC70AE4", VA = "0xC70AE4")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x1700005A")]
	public static StereoMode VideoStereoMode
	{
		[Token(Token = "0x60003DB")]
		[Address(RVA = "0xC6F6EC", Offset = "0xC6F6EC", VA = "0xC6F6EC")]
		get
		{
			return default(StereoMode);
		}
	}

	[Token(Token = "0x1700005B")]
	public static int VideoWidth
	{
		[Token(Token = "0x60003DC")]
		[Address(RVA = "0xC6F4C4", Offset = "0xC6F4C4", VA = "0xC6F4C4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700005C")]
	public static int VideoHeight
	{
		[Token(Token = "0x60003DD")]
		[Address(RVA = "0xC6F5D8", Offset = "0xC6F5D8", VA = "0xC6F5D8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700005D")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x60003DE")]
		[Address(RVA = "0xC709D0", Offset = "0xC709D0", VA = "0xC709D0")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60003DF")]
		[Address(RVA = "0xC6FFA4", Offset = "0xC6FFA4", VA = "0xC6FFA4")]
		set
		{
		}
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0xC72754", Offset = "0xC72754", VA = "0xC72754")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0xC70EB4", Offset = "0xC70EB4", VA = "0xC70EB4")]
	public static void Stop()
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0xC6FBF0", Offset = "0xC6FBF0", VA = "0xC6FBF0")]
	public static void Play()
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0xC6FD90", Offset = "0xC6FD90", VA = "0xC6FD90")]
	public static void Pause()
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0xC70CAC", Offset = "0xC70CAC", VA = "0xC70CAC")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0xC72980", Offset = "0xC72980", VA = "0xC72980")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0xC706D0", Offset = "0xC706D0", VA = "0xC706D0")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x2000123")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x1400000F")]
	public event Action onButtonDown
	{
		[Token(Token = "0x60003E8")]
		[Address(RVA = "0x108DA30", Offset = "0x108DA30", VA = "0x108DA30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5FDC", Offset = "0x8C5FDC")]
		add
		{
		}
		[Token(Token = "0x60003E9")]
		[Address(RVA = "0x108DAD0", Offset = "0x108DAD0", VA = "0x108DAD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5FEC", Offset = "0x8C5FEC")]
		remove
		{
		}
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x108DB70", Offset = "0x108DB70", VA = "0x108DB70", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x108DB84", Offset = "0x108DB84", VA = "0x108DB84")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x2000124")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x2000125")]
	public enum ButtonType
	{
		[Token(Token = "0x4000546")]
		Play,
		[Token(Token = "0x4000547")]
		Pause,
		[Token(Token = "0x4000548")]
		FastForward,
		[Token(Token = "0x4000549")]
		Rewind,
		[Token(Token = "0x400054A")]
		SkipForward,
		[Token(Token = "0x400054B")]
		SkipBack,
		[Token(Token = "0x400054C")]
		Stop
	}

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x1700005E")]
	public ButtonType buttonType
	{
		[Token(Token = "0x60003EC")]
		[Address(RVA = "0xC6D6E8", Offset = "0xC6D6E8", VA = "0xC6D6E8")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x60003ED")]
		[Address(RVA = "0xC6D6F0", Offset = "0xC6D6F0", VA = "0xC6D6F0")]
		set
		{
		}
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0xC6D714", Offset = "0xC6D714", VA = "0xC6D714", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xC6EBAC", Offset = "0xC6EBAC", VA = "0xC6EBAC")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x2000126")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x2000127")]
	public enum VideoShape
	{
		[Token(Token = "0x4000561")]
		_360,
		[Token(Token = "0x4000562")]
		_180,
		[Token(Token = "0x4000563")]
		Quad
	}

	[Token(Token = "0x2000128")]
	public enum VideoStereo
	{
		[Token(Token = "0x4000565")]
		Mono,
		[Token(Token = "0x4000566")]
		TopBottom,
		[Token(Token = "0x4000567")]
		LeftRight,
		[Token(Token = "0x4000568")]
		BottomTop
	}

	[Token(Token = "0x2000129")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C01B8", Offset = "0x8C01B8")]
	private sealed class <Start>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400056A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400056B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x17000062")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000406")]
			[Address(RVA = "0x10AF23C", Offset = "0x10AF23C", VA = "0x10AF23C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000063")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000408")]
			[Address(RVA = "0x10AF284", Offset = "0x10AF284", VA = "0x10AF284", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000403")]
		[Address(RVA = "0x10AF048", Offset = "0x10AF048", VA = "0x10AF048")]
		[DebuggerHidden]
		public <Start>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6000404")]
		[Address(RVA = "0x10AF074", Offset = "0x10AF074", VA = "0x10AF074", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000405")]
		[Address(RVA = "0x10AF078", Offset = "0x10AF078", VA = "0x10AF078", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000407")]
		[Address(RVA = "0x10AF244", Offset = "0x10AF244", VA = "0x10AF244", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200012A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C01C8", Offset = "0x8C01C8")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x400056C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x400056D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x400056E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x6000409")]
		[Address(RVA = "0x10AEF50", Offset = "0x10AEF50", VA = "0x10AEF50")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x600040A")]
		[Address(RVA = "0x10AEF58", Offset = "0x10AEF58", VA = "0x10AEF58")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C298C", Offset = "0x8C298C")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C299C", Offset = "0x8C299C")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C29AC", Offset = "0x8C29AC")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool AutoDetectStereoLayout;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	public bool DisplayMono;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x1700005F")]
	public bool IsPlaying
	{
		[Token(Token = "0x60003F0")]
		[Address(RVA = "0xC6EDE8", Offset = "0xC6EDE8", VA = "0xC6EDE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C5FFC", Offset = "0x8C5FFC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003F1")]
		[Address(RVA = "0xC6EDF0", Offset = "0xC6EDF0", VA = "0xC6EDF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C600C", Offset = "0x8C600C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000060")]
	public long Duration
	{
		[Token(Token = "0x60003F2")]
		[Address(RVA = "0xC6EDFC", Offset = "0xC6EDFC", VA = "0xC6EDFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C601C", Offset = "0x8C601C")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60003F3")]
		[Address(RVA = "0xC6EE04", Offset = "0xC6EE04", VA = "0xC6EE04")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C602C", Offset = "0x8C602C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000061")]
	public long PlaybackPosition
	{
		[Token(Token = "0x60003F4")]
		[Address(RVA = "0xC6EE0C", Offset = "0xC6EE0C", VA = "0xC6EE0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C603C", Offset = "0x8C603C")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60003F5")]
		[Address(RVA = "0xC6EE14", Offset = "0xC6EE14", VA = "0xC6EE14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C604C", Offset = "0x8C604C")]
		private set
		{
		}
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0xC6EE1C", Offset = "0xC6EE1C", VA = "0xC6EE1C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0xC6F134", Offset = "0xC6F134", VA = "0xC6F134")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0xC6F198", Offset = "0xC6F198", VA = "0xC6F198")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0xC6F800", Offset = "0xC6F800", VA = "0xC6F800")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C605C", Offset = "0x8C605C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0xC6F878", Offset = "0xC6F878", VA = "0xC6F878")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0xC6FB60", Offset = "0xC6FB60", VA = "0xC6FB60")]
	public void Play()
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0xC6FD04", Offset = "0xC6FD04", VA = "0xC6FD04")]
	public void Pause()
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0xC6FEA4", Offset = "0xC6FEA4", VA = "0xC6FEA4")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0xC70118", Offset = "0xC70118", VA = "0xC70118")]
	private void Update()
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0xC70BF8", Offset = "0xC70BF8", VA = "0xC70BF8")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0xC70E28", Offset = "0xC70E28", VA = "0xC70E28")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0xC70FC8", Offset = "0xC70FC8", VA = "0xC70FC8")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0xC710B4", Offset = "0xC710B4", VA = "0xC710B4")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x200012B")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x200012C")]
	private enum PlaybackState
	{
		[Token(Token = "0x4000585")]
		Playing,
		[Token(Token = "0x4000586")]
		Paused,
		[Token(Token = "0x4000587")]
		Rewinding,
		[Token(Token = "0x4000588")]
		FastForwarding
	}

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x600040B")]
	[Address(RVA = "0xC710C4", Offset = "0xC710C4", VA = "0xC710C4")]
	private void Start()
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0xC71418", Offset = "0xC71418", VA = "0xC71418")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xC715F4", Offset = "0xC715F4", VA = "0xC715F4")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xC71728", Offset = "0xC71728", VA = "0xC71728")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xC71830", Offset = "0xC71830", VA = "0xC71830")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xC716FC", Offset = "0xC716FC", VA = "0xC716FC")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xC71890", Offset = "0xC71890", VA = "0xC71890")]
	private void Update()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xC71304", Offset = "0xC71304", VA = "0xC71304")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0xC71BF4", Offset = "0xC71BF4", VA = "0xC71BF4")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x200012D")]
public static class VectorUtil
{
	[Token(Token = "0x6000414")]
	[Address(RVA = "0x115EB6C", Offset = "0x115EB6C", VA = "0x115EB6C")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x200012E")]
public class AppDeeplinkUI : MonoBehaviour
{
	[Token(Token = "0x4000589")]
	private const ulong UNITY_COMPANION_APP_ID = 3535750239844224uL;

	[Token(Token = "0x400058A")]
	private const ulong UNREAL_COMPANION_APP_ID = 4055411724486843uL;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform deeplinkAppId;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform deeplinkMessage;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform uiLaunchType;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform uiLaunchSource;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform uiDeepLinkMessage;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool inMenu;

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x1088144", Offset = "0x1088144", VA = "0x1088144")]
	private void Start()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x1089170", Offset = "0x1089170", VA = "0x1089170")]
	private void Update()
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x10895B0", Offset = "0x10895B0", VA = "0x10895B0")]
	private void LaunchUnrealDeeplinkSample()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x1089718", Offset = "0x1089718", VA = "0x1089718")]
	private void LaunchSelf()
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x1089884", Offset = "0x1089884", VA = "0x1089884")]
	private void LaunchOtherApp()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x1089A14", Offset = "0x1089A14", VA = "0x1089A14")]
	public AppDeeplinkUI()
	{
	}
}
[Token(Token = "0x200012F")]
public class CustomDebugUI : MonoBehaviour
{
	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform textPrefab;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CustomDebugUI instance;

	[Token(Token = "0x4000593")]
	private const BindingFlags privateFlags = BindingFlags.Instance | BindingFlags.NonPublic;

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x109BAB0", Offset = "0x109BAB0", VA = "0x109BAB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0x109BB04", Offset = "0x109BB04", VA = "0x109BB04")]
	private void Start()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0x109BB08", Offset = "0x109BB08", VA = "0x109BB08")]
	private void Update()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0x1088A98", Offset = "0x1088A98", VA = "0x1088A98")]
	public RectTransform AddTextField(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0x109BB0C", Offset = "0x109BB0C", VA = "0x109BB0C")]
	public void RemoveFromCanvas(RectTransform element, int targetCanvas = 0)
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0x109BD3C", Offset = "0x109BD3C", VA = "0x109BD3C")]
	public CustomDebugUI()
	{
	}
}
[Token(Token = "0x2000130")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x6000421")]
	[Address(RVA = "0x1170CFC", Offset = "0x1170CFC", VA = "0x1170CFC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0x1171254", Offset = "0x1171254", VA = "0x1171254")]
	public void TogglePressed(UnityEngine.UI.Toggle t)
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0x1171314", Offset = "0x1171314", VA = "0x1171314")]
	public void RadioPressed(string radioLabel, string group, UnityEngine.UI.Toggle t)
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0x1171594", Offset = "0x1171594", VA = "0x1171594")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x1171674", Offset = "0x1171674", VA = "0x1171674")]
	private void Update()
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x1171760", Offset = "0x1171760", VA = "0x1171760")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x11717D4", Offset = "0x11717D4", VA = "0x11717D4")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x11717DC", Offset = "0x11717DC", VA = "0x11717DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C611C", Offset = "0x8C611C")]
	private void <Start>b__2_0(UnityEngine.UI.Toggle t)
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x1171840", Offset = "0x1171840", VA = "0x1171840")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C612C", Offset = "0x8C612C")]
	private void <Start>b__2_1(UnityEngine.UI.Toggle t)
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x11718A4", Offset = "0x11718A4", VA = "0x11718A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C613C", Offset = "0x8C613C")]
	private void <Start>b__2_2(UnityEngine.UI.Toggle t)
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x1171908", Offset = "0x1171908", VA = "0x1171908")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C614C", Offset = "0x8C614C")]
	private void <Start>b__2_3(UnityEngine.UI.Toggle t)
	{
	}
}
[Token(Token = "0x2000131")]
public class AnalyticsUI : MonoBehaviour
{
	[Token(Token = "0x600042C")]
	[Address(RVA = "0x1085240", Offset = "0x1085240", VA = "0x1085240")]
	public AnalyticsUI()
	{
	}
}
[Token(Token = "0x2000132")]
public class SampleUI : MonoBehaviour
{
	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform collectionButton;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform inputText;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform valueText;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool inMenu;

	[Token(Token = "0x600042D")]
	[Address(RVA = "0x98A934", Offset = "0x98A934", VA = "0x98A934")]
	private void Start()
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x98A9D8", Offset = "0x98A9D8", VA = "0x98A9D8")]
	private void Update()
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0x98AAC4", Offset = "0x98AAC4", VA = "0x98AAC4")]
	private string GetText()
	{
		return null;
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x98AB24", Offset = "0x98AB24", VA = "0x98AB24")]
	public SampleUI()
	{
	}
}
[Token(Token = "0x2000133")]
public class StartCrashlytics : MonoBehaviour
{
	[Token(Token = "0x6000431")]
	[Address(RVA = "0x114F504", Offset = "0x114F504", VA = "0x114F504")]
	public StartCrashlytics()
	{
	}
}
[Token(Token = "0x2000134")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x2000135")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C01E8", Offset = "0x8C01E8")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400059E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400059F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x17000064")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000439")]
			[Address(RVA = "0x10A8EC8", Offset = "0x10A8EC8", VA = "0x10A8EC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000065")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600043B")]
			[Address(RVA = "0x10A8F10", Offset = "0x10A8F10", VA = "0x10A8F10", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000436")]
		[Address(RVA = "0x10A8D4C", Offset = "0x10A8D4C", VA = "0x10A8D4C")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000437")]
		[Address(RVA = "0x10A8D78", Offset = "0x10A8D78", VA = "0x10A8D78", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000438")]
		[Address(RVA = "0x10A8D7C", Offset = "0x10A8D7C", VA = "0x10A8D7C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600043A")]
		[Address(RVA = "0x10A8ED0", Offset = "0x10A8ED0", VA = "0x10A8ED0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x1183E1C", Offset = "0x1183E1C", VA = "0x1183E1C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x1183F38", Offset = "0x1183F38", VA = "0x1183F38")]
	private void Update()
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x1183EC0", Offset = "0x1183EC0", VA = "0x1183EC0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C615C", Offset = "0x8C615C")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x11840E4", Offset = "0x11840E4", VA = "0x11840E4")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x2000136")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C29DC", Offset = "0x8C29DC")]
	public int SubdivisionsU;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C29F8", Offset = "0x8C29F8")]
	public int SubdivisionsV;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x10980B8", Offset = "0x10980B8", VA = "0x10980B8")]
	private void Update()
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x1098B00", Offset = "0x1098B00", VA = "0x1098B00")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x2000137")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x17000066")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x600043E")]
		[Address(RVA = "0x1100058", Offset = "0x1100058", VA = "0x1100058")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x11000AC", Offset = "0x11000AC", VA = "0x11000AC")]
	public void Start()
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x11004D4", Offset = "0x11004D4", VA = "0x11004D4")]
	public void Update()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x11005C0", Offset = "0x11005C0", VA = "0x11005C0")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8C620C", Offset = "0x8C620C")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x6000442")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000443")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x6000444")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x6000445")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x6000446")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x6000447")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x6000448")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x6000449")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0x1100624", Offset = "0x1100624", VA = "0x1100624")]
	protected void UpdateToggle(UnityEngine.UI.Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0x1100660", Offset = "0x1100660", VA = "0x1100660")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0x11006D0", Offset = "0x11006D0", VA = "0x11006D0")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0x1100840", Offset = "0x1100840", VA = "0x1100840")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0x110091C", Offset = "0x110091C", VA = "0x110091C")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0x11003CC", Offset = "0x11003CC", VA = "0x11003CC")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0x11009E4", Offset = "0x11009E4", VA = "0x11009E4")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0x1100A4C", Offset = "0x1100A4C", VA = "0x1100A4C")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x1100B44", Offset = "0x1100B44", VA = "0x1100B44")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x2000138")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C0208", Offset = "0x8C0208")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x2000139")]
	public enum DrawMode
	{
		[Token(Token = "0x40005C2")]
		Opaque,
		[Token(Token = "0x40005C3")]
		OpaqueWithClip,
		[Token(Token = "0x40005C4")]
		TransparentDefaultAlpha,
		[Token(Token = "0x40005C5")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	[SerializeField]
	private Shader _opaqueShader;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x17000067")]
	public bool overlayEnabled
	{
		[Token(Token = "0x6000459")]
		[Address(RVA = "0xC740F0", Offset = "0xC740F0", VA = "0xC740F0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600045A")]
		[Address(RVA = "0xC74180", Offset = "0xC74180", VA = "0xC74180")]
		set
		{
		}
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0xC72B6C", Offset = "0xC72B6C", VA = "0xC72B6C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0xC7375C", Offset = "0xC7375C", VA = "0xC7375C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0xC737DC", Offset = "0xC737DC", VA = "0xC737DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0xC738CC", Offset = "0xC738CC", VA = "0xC738CC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0xC739BC", Offset = "0xC739BC", VA = "0xC739BC", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0xC73BC8", Offset = "0xC73BC8", VA = "0xC73BC8")]
	private void Update()
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0xC7424C", Offset = "0xC7424C", VA = "0xC7424C")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x200013A")]
public class AugmentedObject : MonoBehaviour
{
	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform shadow;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool groundShadow;

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x1089A2C", Offset = "0x1089A2C", VA = "0x1089A2C")]
	private void Start()
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x1089C14", Offset = "0x1089C14", VA = "0x1089C14")]
	private void Update()
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x1089D9C", Offset = "0x1089D9C", VA = "0x1089D9C")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x1089DA4", Offset = "0x1089DA4", VA = "0x1089DA4")]
	public void Release()
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x1089D8C", Offset = "0x1089D8C", VA = "0x1089D8C")]
	private void ToggleShadowType()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x1089DAC", Offset = "0x1089DAC", VA = "0x1089DAC")]
	public AugmentedObject()
	{
	}
}
[Token(Token = "0x200013B")]
public class BrushController : MonoBehaviour
{
	[Token(Token = "0x200013C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0268", Offset = "0x8C0268")]
	private sealed class <FadeCameraClearColor>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fadeTime;

		[Token(Token = "0x40005D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color newColor;

		[Token(Token = "0x40005D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <timer>5__2;

		[Token(Token = "0x40005D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <currentColor>5__3;

		[Token(Token = "0x17000068")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600046D")]
			[Address(RVA = "0x10A35DC", Offset = "0x10A35DC", VA = "0x10A35DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000069")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600046F")]
			[Address(RVA = "0x10A3624", Offset = "0x10A3624", VA = "0x10A3624", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600046A")]
		[Address(RVA = "0x10A34AC", Offset = "0x10A34AC", VA = "0x10A34AC")]
		[DebuggerHidden]
		public <FadeCameraClearColor>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x600046B")]
		[Address(RVA = "0x10A34D8", Offset = "0x10A34D8", VA = "0x10A34D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600046C")]
		[Address(RVA = "0x10A34DC", Offset = "0x10A34DC", VA = "0x10A34DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600046E")]
		[Address(RVA = "0x10A35E4", Offset = "0x10A35E4", VA = "0x10A35E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200013D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0278", Offset = "0x8C0278")]
	private sealed class <FadeSphere>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BrushController <>4__this;

		[Token(Token = "0x40005D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x40005D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool disableOnFinish;

		[Token(Token = "0x40005D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x40005DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x1700006A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000473")]
			[Address(RVA = "0x10A37E4", Offset = "0x10A37E4", VA = "0x10A37E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000475")]
			[Address(RVA = "0x10A382C", Offset = "0x10A382C", VA = "0x10A382C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000470")]
		[Address(RVA = "0x10A362C", Offset = "0x10A362C", VA = "0x10A362C")]
		[DebuggerHidden]
		public <FadeSphere>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000471")]
		[Address(RVA = "0x10A3658", Offset = "0x10A3658", VA = "0x10A3658", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000472")]
		[Address(RVA = "0x10A365C", Offset = "0x10A365C", VA = "0x10A365C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000474")]
		[Address(RVA = "0x10A37EC", Offset = "0x10A37EC", VA = "0x10A37EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PassthroughBrush brush;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer backgroundSphere;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator grabRoutine;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator releaseRoutine;

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x108C750", Offset = "0x108C750", VA = "0x108C750")]
	private void Start()
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x108CA24", Offset = "0x108CA24", VA = "0x108CA24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x108CA80", Offset = "0x108CA80", VA = "0x108CA80")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x108CC00", Offset = "0x108CC00", VA = "0x108CC00")]
	public void Release()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x108CCD4", Offset = "0x108CCD4", VA = "0x108CCD4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C6244", Offset = "0x8C6244")]
	private IEnumerator FadeCameraClearColor(Color newColor, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x108CB3C", Offset = "0x108CB3C", VA = "0x108CB3C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C62A4", Offset = "0x8C62A4")]
	private IEnumerator FadeSphere(Color newColor, float fadeTime, bool disableOnFinish = false)
	{
		return null;
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x108CD70", Offset = "0x108CD70", VA = "0x108CD70")]
	public BrushController()
	{
	}
}
[Token(Token = "0x200013E")]
public class EnableUnpremultipliedAlpha : MonoBehaviour
{
	[Token(Token = "0x6000476")]
	[Address(RVA = "0x11752BC", Offset = "0x11752BC", VA = "0x11752BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x117531C", Offset = "0x117531C", VA = "0x117531C")]
	public EnableUnpremultipliedAlpha()
	{
	}
}
[Token(Token = "0x200013F")]
public class Flashlight : MonoBehaviour
{
	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject lightVolume;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light spotlight;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject bulbGlow;

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x117A130", Offset = "0x117A130", VA = "0x117A130")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x117A264", Offset = "0x117A264", VA = "0x117A264")]
	public void ToggleFlashlight()
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x117A2F8", Offset = "0x117A2F8", VA = "0x117A2F8")]
	public void EnableFlashlight(bool doEnable)
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0x117A360", Offset = "0x117A360", VA = "0x117A360")]
	public Flashlight()
	{
	}
}
[Token(Token = "0x2000140")]
public class FlashlightController : MonoBehaviour
{
	[Token(Token = "0x2000141")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0288", Offset = "0x8C0288")]
	private sealed class <FadeLighting>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40005E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40005E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FlashlightController <>4__this;

		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x40005EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Color newColor;

		[Token(Token = "0x40005ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float sceneLightIntensity;

		[Token(Token = "0x40005EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <timer>5__2;

		[Token(Token = "0x40005EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Color <currentColor>5__3;

		[Token(Token = "0x40005F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float <currentLight>5__4;

		[Token(Token = "0x1700006C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000488")]
			[Address(RVA = "0x10A7520", Offset = "0x10A7520", VA = "0x10A7520", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600048A")]
			[Address(RVA = "0x10A7568", Offset = "0x10A7568", VA = "0x10A7568", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000485")]
		[Address(RVA = "0x10A7314", Offset = "0x10A7314", VA = "0x10A7314")]
		[DebuggerHidden]
		public <FadeLighting>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000486")]
		[Address(RVA = "0x10A7340", Offset = "0x10A7340", VA = "0x10A7340", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000487")]
		[Address(RVA = "0x10A7344", Offset = "0x10A7344", VA = "0x10A7344", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000489")]
		[Address(RVA = "0x10A7528", Offset = "0x10A7528", VA = "0x10A7528", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light sceneLight;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform flashlightRoot;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 localPosition;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion localRotation;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TextMesh infoText;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GrabObject externalController;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private OVRSkeleton[] skeletons;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVRHand[] hands;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int handIndex;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private bool pinching;

	[Token(Token = "0x600047C")]
	[Address(RVA = "0x117A368", Offset = "0x117A368", VA = "0x117A368")]
	private void Start()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0x117A64C", Offset = "0x117A64C", VA = "0x117A64C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0x117A99C", Offset = "0x117A99C", VA = "0x117A99C")]
	private void FindHands()
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0x117ACF8", Offset = "0x117ACF8", VA = "0x117ACF8")]
	private void AlignWithHand(OVRHand hand, OVRSkeleton skeleton)
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0x117AFFC", Offset = "0x117AFFC", VA = "0x117AFFC")]
	private void AlignWithController(OVRInput.Controller controller)
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0x117B0F0", Offset = "0x117B0F0", VA = "0x117B0F0")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0x117B2BC", Offset = "0x117B2BC", VA = "0x117B2BC")]
	public void Release()
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0x117B208", Offset = "0x117B208", VA = "0x117B208")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C63A4", Offset = "0x8C63A4")]
	private IEnumerator FadeLighting(Color newColor, float sceneLightIntensity, float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0x117B3A4", Offset = "0x117B3A4", VA = "0x117B3A4")]
	public FlashlightController()
	{
	}
}
[Token(Token = "0x2000142")]
public class GrabObject : MonoBehaviour
{
	[Token(Token = "0x2000143")]
	public enum ManipulationType
	{
		[Token(Token = "0x40005FA")]
		Default,
		[Token(Token = "0x40005FB")]
		ForcedHand,
		[Token(Token = "0x40005FC")]
		DollyHand,
		[Token(Token = "0x40005FD")]
		DollyAttached,
		[Token(Token = "0x40005FE")]
		HorizontalScaled,
		[Token(Token = "0x40005FF")]
		VerticalScaled,
		[Token(Token = "0x4000600")]
		Menu
	}

	[Token(Token = "0x2000144")]
	public delegate void GrabbedObject(OVRInput.Controller grabHand);

	[Token(Token = "0x2000145")]
	public delegate void ReleasedObject();

	[Token(Token = "0x2000146")]
	public delegate void SetCursorPosition(Vector3 cursorPosition);

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x8C2A84", Offset = "0x8C2A84")]
	public string ObjectName;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x8C2A94", Offset = "0x8C2A94")]
	public string ObjectInstructions;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ManipulationType objectManipulationType;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool showLaserWhileGrabbed;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Quaternion grabbedRotation;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GrabbedObject GrabbedObjectDelegate;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ReleasedObject ReleasedObjectDelegate;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public SetCursorPosition CursorPositionDelegate;

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x117E2E8", Offset = "0x117E2E8", VA = "0x117E2E8")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x117E344", Offset = "0x117E344", VA = "0x117E344")]
	public void Release()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x117E358", Offset = "0x117E358", VA = "0x117E358")]
	public void CursorPos(Vector3 cursorPos)
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x117E36C", Offset = "0x117E36C", VA = "0x117E36C")]
	public GrabObject()
	{
	}
}
[Token(Token = "0x2000147")]
public class HandMeshMask : MonoBehaviour
{
	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRSkeleton referenceHand;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material maskMaterial;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2AB4", Offset = "0x8C2AB4")]
	public int radialDivisions;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2AEC", Offset = "0x8C2AEC")]
	public float borderSize;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2B24", Offset = "0x8C2B24")]
	public float fingerTaper;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2B5C", Offset = "0x8C2B5C")]
	public float fingerTipLength;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2B94", Offset = "0x8C2B94")]
	public float webOffset;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float handScale;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject maskMeshObject;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Mesh maskMesh;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] handVertices;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector2[] handUVs;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color32[] handColors;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int[] handTriangles;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int vertCounter;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int triCounter;

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x117F804", Offset = "0x117F804", VA = "0x117F804")]
	private void Awake()
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x117FA04", Offset = "0x117FA04", VA = "0x117FA04")]
	private void Update()
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x117FC10", Offset = "0x117FC10", VA = "0x117FC10")]
	private void CreateHandMesh()
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x1180294", Offset = "0x1180294", VA = "0x1180294")]
	private void AddKnuckleMesh(int knuckleVerts, float point1scale, float point2scale, Vector3 point1, Vector3 point2)
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x11808C4", Offset = "0x11808C4", VA = "0x11808C4")]
	private void AddPalmMesh(int knuckleVerts)
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x1182F40", Offset = "0x1182F40", VA = "0x1182F40")]
	private void AddVertex(Vector3 position, Vector2 uv, Color color)
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x1182FFC", Offset = "0x1182FFC", VA = "0x1182FFC")]
	public HandMeshMask()
	{
	}
}
[Token(Token = "0x2000148")]
public class HandMeshUI : MonoBehaviour
{
	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SphereCollider[] knobs;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMesh[] readouts;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int rightHeldKnob;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int leftHeldKnob;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public OVRSkeleton leftHand;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OVRSkeleton rightHand;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HandMeshMask leftMask;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HandMeshMask rightMask;

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x1183020", Offset = "0x1183020", VA = "0x1183020")]
	private void Start()
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x1183358", Offset = "0x1183358", VA = "0x1183358")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x11830C8", Offset = "0x11830C8", VA = "0x11830C8")]
	private void SetSliderValue(int sliderID, float value, bool isNormalized)
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x1183748", Offset = "0x1183748", VA = "0x1183748")]
	private void CheckForHands()
	{
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x1183C38", Offset = "0x1183C38", VA = "0x1183C38")]
	public HandMeshUI()
	{
	}
}
[Token(Token = "0x2000149")]
public class ObjectManipulator : MonoBehaviour
{
	[Token(Token = "0x200014A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0298", Offset = "0x8C0298")]
	private sealed class <StartDemo>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400062C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400062D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400062E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectManipulator <>4__this;

		[Token(Token = "0x400062F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x4000630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <fadeTime>5__3;

		[Token(Token = "0x1700006E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004B6")]
			[Address(RVA = "0x10B03A4", Offset = "0x10B03A4", VA = "0x10B03A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004B8")]
			[Address(RVA = "0x10B03EC", Offset = "0x10B03EC", VA = "0x10B03EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004B3")]
		[Address(RVA = "0x10B00D4", Offset = "0x10B00D4", VA = "0x10B00D4")]
		[DebuggerHidden]
		public <StartDemo>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x60004B4")]
		[Address(RVA = "0x10B0100", Offset = "0x10B0100", VA = "0x10B0100", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004B5")]
		[Address(RVA = "0x10B0104", Offset = "0x10B0104", VA = "0x10B0104", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004B7")]
		[Address(RVA = "0x10B03AC", Offset = "0x10B03AC", VA = "0x10B03AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRInput.Controller controller;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject hoverObject;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject grabObject;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float grabTime;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 localGrabOffset;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion localGrabRotation;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 camGrabPosition;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion camGrabRotation;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 handGrabPosition;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Quaternion handGrabRotation;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 cursorPosition;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float rotationOffset;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LineRenderer laser;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform objectInfo;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMesh objectNameLabel;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMesh objectInstructionsLabel;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Image objectInfoBG;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject demoObjects;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public OVRPassthroughLayer passthrough;

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0xC76DC8", Offset = "0xC76DC8", VA = "0xC76DC8")]
	private void Start()
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0xC77000", Offset = "0xC77000", VA = "0xC77000")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0xC77C50", Offset = "0xC77C50", VA = "0xC77C50")]
	private void GrabHoverObject(GameObject grbObj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0xC78858", Offset = "0xC78858", VA = "0xC78858")]
	private void ReleaseObject()
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0xC76F88", Offset = "0xC76F88", VA = "0xC76F88")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C6454", Offset = "0x8C6454")]
	private IEnumerator StartDemo()
	{
		return null;
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0xC7726C", Offset = "0xC7726C", VA = "0xC7726C")]
	private void FindHoverObject(Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0xC77F14", Offset = "0xC77F14", VA = "0xC77F14")]
	private void ManipulateObject(GameObject obj, Vector3 controllerPos, Quaternion controllerRot)
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0xC78B1C", Offset = "0xC78B1C", VA = "0xC78B1C")]
	private void ClampGrabOffset(ref Vector3 localOffset, float thumbY)
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0xC78BA8", Offset = "0xC78BA8", VA = "0xC78BA8")]
	private Vector3 ClampScale(Vector3 localScale, Vector2 thumb)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0xC78BD8", Offset = "0xC78BD8", VA = "0xC78BD8")]
	private void CheckForDominantHand()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0xC789E4", Offset = "0xC789E4", VA = "0xC789E4")]
	private void AssignInstructions(GrabObject targetObject)
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0xC78CFC", Offset = "0xC78CFC", VA = "0xC78CFC")]
	public ObjectManipulator()
	{
	}
}
[Token(Token = "0x200014B")]
public class OverlayPassthrough : MonoBehaviour
{
	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0xC923F8", Offset = "0xC923F8", VA = "0xC923F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0xC92590", Offset = "0xC92590", VA = "0xC92590")]
	private void Update()
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0xC92658", Offset = "0xC92658", VA = "0xC92658")]
	public OverlayPassthrough()
	{
	}
}
[Token(Token = "0x200014C")]
public class PassthroughBrush : MonoBehaviour
{
	[Token(Token = "0x200014D")]
	public enum BrushState
	{
		[Token(Token = "0x400063D")]
		Idle,
		[Token(Token = "0x400063E")]
		Inking
	}

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject lineSegmentPrefab;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject lineContainer;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool forceActive;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LineRenderer currentLineSegment;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Vector3> inkPositions;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float minInkDist;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float strokeWidth;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float strokeLength;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private BrushState brushStatus;

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x97B230", Offset = "0x97B230", VA = "0x97B230")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x97B238", Offset = "0x97B238", VA = "0x97B238")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x97B520", Offset = "0x97B520", VA = "0x97B520")]
	private void StartLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x97B718", Offset = "0x97B718", VA = "0x97B718")]
	private void UpdateLine(Vector3 inkPos)
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x97B8C0", Offset = "0x97B8C0", VA = "0x97B8C0")]
	public void ClearLines()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x97B42C", Offset = "0x97B42C", VA = "0x97B42C")]
	public void UndoInkLine()
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x97B99C", Offset = "0x97B99C", VA = "0x97B99C")]
	public PassthroughBrush()
	{
	}
}
[Token(Token = "0x200014E")]
public class PassthroughController : MonoBehaviour
{
	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x97BA34", Offset = "0x97BA34", VA = "0x97BA34")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0x97BBCC", Offset = "0x97BBCC", VA = "0x97BBCC")]
	private void Update()
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0x97BD30", Offset = "0x97BD30", VA = "0x97BD30")]
	public PassthroughController()
	{
	}
}
[Token(Token = "0x200014F")]
public class PassthroughProjectionSurface : MonoBehaviour
{
	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer quadOutline;

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0x97BD38", Offset = "0x97BD38", VA = "0x97BD38")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0x97BF4C", Offset = "0x97BF4C", VA = "0x97BF4C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0x97C11C", Offset = "0x97C11C", VA = "0x97C11C")]
	public PassthroughProjectionSurface()
	{
	}
}
[Token(Token = "0x2000150")]
public class PassthroughStyler : MonoBehaviour
{
	[Token(Token = "0x2000151")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C02A8", Offset = "0x8C02A8")]
	private sealed class <FadeToCurrentStyle>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x4000655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x4000656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x4000657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x4000658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x4000659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <posterize>5__5;

		[Token(Token = "0x400065A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <edgeCol>5__6;

		[Token(Token = "0x17000070")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004DB")]
			[Address(RVA = "0x10B2324", Offset = "0x10B2324", VA = "0x10B2324", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000071")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004DD")]
			[Address(RVA = "0x10B236C", Offset = "0x10B236C", VA = "0x10B236C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004D8")]
		[Address(RVA = "0x10B2140", Offset = "0x10B2140", VA = "0x10B2140")]
		[DebuggerHidden]
		public <FadeToCurrentStyle>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60004D9")]
		[Address(RVA = "0x10B216C", Offset = "0x10B216C", VA = "0x10B216C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004DA")]
		[Address(RVA = "0x10B2170", Offset = "0x10B2170", VA = "0x10B2170", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004DC")]
		[Address(RVA = "0x10B232C", Offset = "0x10B232C", VA = "0x10B232C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000152")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C02B8", Offset = "0x8C02B8")]
	private sealed class <FadeToDefaultPassthrough>d__20 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400065B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400065C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400065D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PassthroughStyler <>4__this;

		[Token(Token = "0x400065E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fadeTime;

		[Token(Token = "0x400065F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timer>5__2;

		[Token(Token = "0x4000660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <brightness>5__3;

		[Token(Token = "0x4000661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <contrast>5__4;

		[Token(Token = "0x4000662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <posterize>5__5;

		[Token(Token = "0x4000663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Color <edgeCol>5__6;

		[Token(Token = "0x17000072")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004E1")]
			[Address(RVA = "0x10B2598", Offset = "0x10B2598", VA = "0x10B2598", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000073")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004E3")]
			[Address(RVA = "0x10B25E0", Offset = "0x10B25E0", VA = "0x10B25E0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004DE")]
		[Address(RVA = "0x10B2374", Offset = "0x10B2374", VA = "0x10B2374")]
		[DebuggerHidden]
		public <FadeToDefaultPassthrough>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x60004DF")]
		[Address(RVA = "0x10B23A0", Offset = "0x10B23A0", VA = "0x10B23A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004E0")]
		[Address(RVA = "0x10B23A4", Offset = "0x10B23A4", VA = "0x10B23A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004E2")]
		[Address(RVA = "0x10B25A0", Offset = "0x10B25A0", VA = "0x10B25A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRInput.Controller controllerHand;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IEnumerator fadeIn;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IEnumerator fadeOut;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public RectTransform[] menuOptions;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RectTransform colorWheel;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Texture2D colorTexture;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 cursorPosition;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool settingColor;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color savedColor;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float savedBrightness;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float savedContrast;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float savedPosterize;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public CanvasGroup mainCanvas;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject[] compactObjects;

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0x97C124", Offset = "0x97C124", VA = "0x97C124")]
	private void Start()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0x97C45C", Offset = "0x97C45C", VA = "0x97C45C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0x97C6B4", Offset = "0x97C6B4", VA = "0x97C6B4")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0x97C838", Offset = "0x97C838", VA = "0x97C838")]
	public void Release()
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x97C7B0", Offset = "0x97C7B0", VA = "0x97C7B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C6504", Offset = "0x8C6504")]
	private IEnumerator FadeToCurrentStyle(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0x97C928", Offset = "0x97C928", VA = "0x97C928")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C6564", Offset = "0x8C6564")]
	private IEnumerator FadeToDefaultPassthrough(float fadeTime)
	{
		return null;
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0x97C9B0", Offset = "0x97C9B0", VA = "0x97C9B0")]
	public void OnBrightnessChanged(float newValue)
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0x97C9D0", Offset = "0x97C9D0", VA = "0x97C9D0")]
	public void OnContrastChanged(float newValue)
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0x97C9F0", Offset = "0x97C9F0", VA = "0x97C9F0")]
	public void OnPosterizeChanged(float newValue)
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0x97CA10", Offset = "0x97CA10", VA = "0x97CA10")]
	public void OnAlphaChanged(float newValue)
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0x97C3E0", Offset = "0x97C3E0", VA = "0x97C3E0")]
	private void ShowFullMenu(bool doShow)
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0x97CA74", Offset = "0x97CA74", VA = "0x97CA74")]
	public void Cursor(Vector3 cP)
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0x97CA80", Offset = "0x97CA80", VA = "0x97CA80")]
	public void DoColorDrag(bool doDrag)
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0x97C474", Offset = "0x97C474", VA = "0x97C474")]
	public void GetColorFromWheel()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0x97CA8C", Offset = "0x97CA8C", VA = "0x97CA8C")]
	public PassthroughStyler()
	{
	}
}
[Token(Token = "0x2000153")]
public class PassthroughSurface : MonoBehaviour
{
	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0x97CAD0", Offset = "0x97CAD0", VA = "0x97CAD0")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0x97CB90", Offset = "0x97CB90", VA = "0x97CB90")]
	public PassthroughSurface()
	{
	}
}
[Token(Token = "0x2000154")]
public class SPPquad : MonoBehaviour
{
	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRPassthroughLayer passthroughLayer;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshFilter projectionObject;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRInput.Controller controllerHand;

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0x98A32C", Offset = "0x98A32C", VA = "0x98A32C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0x98A570", Offset = "0x98A570", VA = "0x98A570")]
	public void Grab(OVRInput.Controller grabHand)
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0x98A5C8", Offset = "0x98A5C8", VA = "0x98A5C8")]
	public void Release()
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0x98A614", Offset = "0x98A614", VA = "0x98A614")]
	public SPPquad()
	{
	}
}
[Token(Token = "0x2000155")]
public class SceneSampler : MonoBehaviour
{
	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int currentSceneIndex;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject displayText;

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0x98AC34", Offset = "0x98AC34", VA = "0x98AC34")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0x98ACAC", Offset = "0x98ACAC", VA = "0x98ACAC")]
	private void Update()
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0x98AFD0", Offset = "0x98AFD0", VA = "0x98AFD0")]
	public SceneSampler()
	{
	}
}
[Token(Token = "0x2000156")]
public class SelectivePassthroughExperience : MonoBehaviour
{
	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject leftMaskObject;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject rightMaskObject;

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0x98B668", Offset = "0x98B668", VA = "0x98B668")]
	private void Update()
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0x98BAF0", Offset = "0x98BAF0", VA = "0x98BAF0")]
	public SelectivePassthroughExperience()
	{
	}
}
[Token(Token = "0x2000157")]
public class Anchor : MonoBehaviour
{
	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong anchorHandle_;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Canvas canvas_;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform pivot_;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject anchorMenu_;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isSelected_;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool isHovered_;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private TextMeshProUGUI anchorName_;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject saveIcon_;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Image labelImage_;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Color labelBaseColor_;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Color labelHighlightColor_;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Color labelSelectedColor_;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private AnchorUIManager uiManager_;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[SerializeField]
	private MeshRenderer[] renderers_;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int menuIndex_;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private List<Button> buttonList_;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Button selectedButton_;

	[Token(Token = "0x17000074")]
	public ulong anchorHandle
	{
		[Token(Token = "0x60004EF")]
		[Address(RVA = "0x1085248", Offset = "0x1085248", VA = "0x1085248")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0x1085250", Offset = "0x1085250", VA = "0x1085250")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0x1085338", Offset = "0x1085338", VA = "0x1085338")]
	private void Update()
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x10855A0", Offset = "0x10855A0", VA = "0x10855A0")]
	public void OnSaveLocalButtonPressed()
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x1085608", Offset = "0x1085608", VA = "0x1085608")]
	public void OnHideButtonPressed()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x108566C", Offset = "0x108566C", VA = "0x108566C")]
	public void OnEraseButtonPressed()
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x10856D0", Offset = "0x10856D0", VA = "0x10856D0")]
	public void OnHoverStart()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x10857D8", Offset = "0x10857D8", VA = "0x10857D8")]
	public void OnHoverEnd()
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x10858F8", Offset = "0x10858F8", VA = "0x10858F8")]
	public void OnSelect()
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x1085A2C", Offset = "0x1085A2C", VA = "0x1085A2C")]
	public void SetAnchorHandle(ulong handle)
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x1085AC0", Offset = "0x1085AC0", VA = "0x1085AC0")]
	public void ShowSaveIcon()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x108537C", Offset = "0x108537C", VA = "0x108537C")]
	private void BillboardPanel(Transform panel)
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x1085490", Offset = "0x1085490", VA = "0x1085490")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x1085AE0", Offset = "0x1085AE0", VA = "0x1085AE0")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x1085BF8", Offset = "0x1085BF8", VA = "0x1085BF8")]
	public Anchor()
	{
	}
}
[Token(Token = "0x2000158")]
public class AnchorHelpers
{
	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Camera camera;

	[Token(Token = "0x17000075")]
	private static Camera MainCamera
	{
		[Token(Token = "0x60004FE")]
		[Address(RVA = "0x1085C00", Offset = "0x1085C00", VA = "0x1085C00")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0x1085CB8", Offset = "0x1085CB8", VA = "0x1085CB8")]
	public static OVRPlugin.Posef UnityWorldSpacePoseToTrackingSpacePose(Transform pose)
	{
		return default(OVRPlugin.Posef);
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0x1085D34", Offset = "0x1085D34", VA = "0x1085D34")]
	public static OVRPose TrackingSpacePoseToUnityWorldSpacePose(OVRPlugin.Posef pose)
	{
		return default(OVRPose);
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0x1085DA8", Offset = "0x1085DA8", VA = "0x1085DA8")]
	public static OVRPose getTransformUnityWorldFromDevice()
	{
		return default(OVRPose);
	}

	[Token(Token = "0x6000502")]
	public static T ByteArrayToStruct<T>(byte[] bytes) where T : struct
	{
		return (T)null;
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0x1085E00", Offset = "0x1085E00", VA = "0x1085E00")]
	public static string UuidToString(byte[] encodedMessage)
	{
		return null;
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0x10860A4", Offset = "0x10860A4", VA = "0x10860A4")]
	public static byte[] StringToUuid(string str)
	{
		return null;
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0x108621C", Offset = "0x108621C", VA = "0x108621C")]
	private static int GetHexVal(char hex)
	{
		return default(int);
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0x10862E0", Offset = "0x10862E0", VA = "0x10862E0")]
	public AnchorHelpers()
	{
	}
}
[Token(Token = "0x2000159")]
public abstract class AnchorSession : MonoBehaviour
{
	[Token(Token = "0x200015A")]
	public enum StorageLocation
	{
		[Token(Token = "0x4000686")]
		LOCAL
	}

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnchorSession Instance;

	[Token(Token = "0x4000680")]
	public const ulong kInvalidHandle = ulong.MaxValue;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Dictionary<ulong, Anchor> handleToAnchor;

	[Token(Token = "0x4000682")]
	protected const int maxEvents = 5;

	[Token(Token = "0x4000683")]
	protected const float eventPollingRate = 0.1f;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected GameObject anchorPrefab_;

	[Token(Token = "0x6000507")]
	[Address(RVA = "0x10862E8", Offset = "0x10862E8", VA = "0x10862E8", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0x1086014", Offset = "0x1086014", VA = "0x1086014")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0x10863F0", Offset = "0x10863F0", VA = "0x10863F0")]
	protected static bool isFlagSet(uint bitset, uint flag)
	{
		return default(bool);
	}

	[Token(Token = "0x600050A")]
	public abstract ulong CreateSpatialAnchor(Transform T_UnityWorld_Anchor);

	[Token(Token = "0x600050B")]
	public abstract void DestroyAnchor(ulong anchorHandle);

	[Token(Token = "0x600050C")]
	public abstract void SaveAnchor(ulong anchorHandle, StorageLocation location);

	[Token(Token = "0x600050D")]
	public abstract void EraseAnchor(ulong anchorHandle);

	[Token(Token = "0x600050E")]
	public abstract void QueryAllLocalAnchors();

	[Token(Token = "0x600050F")]
	[Address(RVA = "0x10863FC", Offset = "0x10863FC", VA = "0x10863FC")]
	protected AnchorSession()
	{
	}
}
[Token(Token = "0x200015B")]
public class AnchorSpawner : MonoBehaviour
{
	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnchorSpawner Instance;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject anchorPrefab_;

	[Token(Token = "0x17000076")]
	public GameObject AnchorPrefab
	{
		[Token(Token = "0x6000510")]
		[Address(RVA = "0x1086480", Offset = "0x1086480", VA = "0x1086480")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0x1086488", Offset = "0x1086488", VA = "0x1086488")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0x1086588", Offset = "0x1086588", VA = "0x1086588")]
	public void PlaceAnchorAtTransform(Transform transform)
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0x10867BC", Offset = "0x10867BC", VA = "0x10867BC")]
	public AnchorSpawner()
	{
	}
}
[Token(Token = "0x200015C")]
public class AnchorUIManager : MonoBehaviour
{
	[Token(Token = "0x200015D")]
	public enum AnchorMode
	{
		[Token(Token = "0x400069C")]
		Create,
		[Token(Token = "0x400069D")]
		Select
	}

	[Token(Token = "0x200015E")]
	private delegate void PrimaryPressDelegate();

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AnchorUIManager Instance;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject mainMenu_;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject createModeButton_;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private GameObject selectModeButton_;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform trackedDevice_;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform raycastOrigin_;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool drawRaycast_;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private LineRenderer lineRenderer_;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Anchor hoveredAnchor_;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Anchor selectedAnchor_;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AnchorMode mode_;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<Button> buttonList_;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int menuIndex_;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Button selectedButton_;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject placementPreview_;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Transform anchorPlacementTransform_;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private PrimaryPressDelegate primaryPressDelegate_;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool isFocused_;

	[Token(Token = "0x6000514")]
	[Address(RVA = "0x10867C4", Offset = "0x10867C4", VA = "0x10867C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0x108689C", Offset = "0x108689C", VA = "0x108689C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0x1086A08", Offset = "0x1086A08", VA = "0x1086A08")]
	private void Update()
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0x1086E5C", Offset = "0x1086E5C", VA = "0x1086E5C")]
	public void OnCreateModeButtonPressed()
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x1086ECC", Offset = "0x1086ECC", VA = "0x1086ECC")]
	public void OnLoadAnchorsButtonPressed()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x1086990", Offset = "0x1086990", VA = "0x1086990")]
	private void ToggleCreateMode()
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x1086F54", Offset = "0x1086F54", VA = "0x1086F54")]
	private void StartPlacementMode()
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0x1086FDC", Offset = "0x1086FDC", VA = "0x1086FDC")]
	private void EndPlacementMode()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0x1087008", Offset = "0x1087008", VA = "0x1087008")]
	private void StartSelectMode()
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0x1086F28", Offset = "0x1086F28", VA = "0x1086F28")]
	private void EndSelectMode()
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0x1086D4C", Offset = "0x1086D4C", VA = "0x1086D4C")]
	private void HandleMenuNavigation()
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0x1087144", Offset = "0x1087144", VA = "0x1087144")]
	private void NavigateToIndexInMenu(bool moveNext)
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0x1087090", Offset = "0x1087090", VA = "0x1087090")]
	private void ShowAnchorPreview()
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0x10870B0", Offset = "0x10870B0", VA = "0x10870B0")]
	private void HideAnchorPreview()
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0x108725C", Offset = "0x108725C", VA = "0x108725C")]
	private void PlaceAnchor()
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0x10870D0", Offset = "0x10870D0", VA = "0x10870D0")]
	private void ShowRaycastLine()
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0x108710C", Offset = "0x108710C", VA = "0x108710C")]
	private void HideRaycastLine()
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0x1086B14", Offset = "0x1086B14", VA = "0x1086B14")]
	private void ControllerRaycast()
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0x10872B8", Offset = "0x10872B8", VA = "0x10872B8")]
	private void HoverAnchor(Anchor anchor)
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0x10872EC", Offset = "0x10872EC", VA = "0x10872EC")]
	private void UnhoverAnchor()
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0x1087388", Offset = "0x1087388", VA = "0x1087388")]
	private void SelectAnchor()
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0x1087504", Offset = "0x1087504", VA = "0x1087504")]
	public AnchorUIManager()
	{
	}
}
[Token(Token = "0x200015F")]
public class SpatialAnchorSession : AnchorSession
{
	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Dictionary<ulong, ulong> locateAnchorRequest;

	[Token(Token = "0x400069F")]
	private const string numUuids = "numUuids";

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x114CA94", Offset = "0x114CA94", VA = "0x114CA94")]
	private void Start()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x114CCE0", Offset = "0x114CCE0", VA = "0x114CCE0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x114CF2C", Offset = "0x114CF2C", VA = "0x114CF2C")]
	private void SpatialEntitySetComponentEnabled(ulong requestId, bool result, OVRPlugin.SpatialEntityComponentType componentType, ulong space)
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x114D13C", Offset = "0x114D13C", VA = "0x114D13C")]
	private void SpatialAnchorSaved(ulong requestId, ulong space, bool result, OVRPlugin.SpatialEntityUuid uuid)
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x114D62C", Offset = "0x114D62C", VA = "0x114D62C")]
	private void SpatialEntityStorageErase(ulong requestId, bool result, OVRPlugin.SpatialEntityUuid uuid, OVRPlugin.SpatialEntityStorageLocation location)
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x114D95C", Offset = "0x114D95C", VA = "0x114D95C")]
	private void SpatialEntityQueryResults(ulong requestId, int numResults, OVRPlugin.SpatialEntityQueryResult[] results)
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x114E080", Offset = "0x114E080", VA = "0x114E080")]
	private void SpatialEntityQueryComplete(ulong requestId, bool result, int numFound)
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x114D550", Offset = "0x114D550", VA = "0x114D550")]
	private string GetUuidString(OVRPlugin.SpatialEntityUuid uuid)
	{
		return null;
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x114DC44", Offset = "0x114DC44", VA = "0x114DC44")]
	private void tryEnableComponent(ulong anchorHandle, OVRPlugin.SpatialEntityComponentType type)
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x114D01C", Offset = "0x114D01C", VA = "0x114D01C")]
	private void CreateAnchorGameobject(ulong anchorHandle)
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x114E2D4", Offset = "0x114E2D4", VA = "0x114E2D4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x114E584", Offset = "0x114E584", VA = "0x114E584", Slot = "5")]
	public override ulong CreateSpatialAnchor(Transform T_UnityWorld_Anchor)
	{
		return default(ulong);
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x114E724", Offset = "0x114E724", VA = "0x114E724", Slot = "6")]
	public override void DestroyAnchor(ulong anchorHandle)
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x114E8E0", Offset = "0x114E8E0", VA = "0x114E8E0", Slot = "8")]
	public override void EraseAnchor(ulong anchorHandle)
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x114EAAC", Offset = "0x114EAAC", VA = "0x114EAAC")]
	public void QueryAnchorByUuid()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x114EDA4", Offset = "0x114EDA4", VA = "0x114EDA4", Slot = "9")]
	public override void QueryAllLocalAnchors()
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x114EE94", Offset = "0x114EE94", VA = "0x114EE94", Slot = "7")]
	public override void SaveAnchor(ulong anchorHandle, StorageLocation location)
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x114F004", Offset = "0x114F004", VA = "0x114F004")]
	public SpatialAnchorSession()
	{
	}
}
[Token(Token = "0x2000160")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x2000161")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C02C8", Offset = "0x8C02C8")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x40006A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x40006A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x6000543")]
		[Address(RVA = "0xEA1E54", Offset = "0xEA1E54", VA = "0xEA1E54")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6000544")]
		[Address(RVA = "0xEA1E5C", Offset = "0xEA1E5C", VA = "0xEA1E5C")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x114F50C", Offset = "0x114F50C", VA = "0x114F50C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x114F728", Offset = "0x114F728", VA = "0x114F728")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x114F838", Offset = "0x114F838", VA = "0x114F838")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x2000162")]
public class RotateTiger : MonoBehaviour
{
	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int counter;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 newRotation;

	[Token(Token = "0x6000545")]
	[Address(RVA = "0x987040", Offset = "0x987040", VA = "0x987040")]
	private void Update()
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0x987170", Offset = "0x987170", VA = "0x987170")]
	public RotateTiger()
	{
	}
}
[Token(Token = "0x2000163")]
public class MenuSceneLoader : MonoBehaviour
{
	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject menuUI;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject m_Go;

	[Token(Token = "0x6000547")]
	[Address(RVA = "0xC6EC10", Offset = "0xC6EC10", VA = "0xC6EC10")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0xC6ECE8", Offset = "0xC6ECE8", VA = "0xC6ECE8")]
	public MenuSceneLoader()
	{
	}
}
[Token(Token = "0x2000164")]
public class PauseMenu : MonoBehaviour
{
	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UnityEngine.UI.Toggle m_MenuToggle;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_TimeScaleRef;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float m_VolumeRef;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_Paused;

	[Token(Token = "0x6000549")]
	[Address(RVA = "0x97CB98", Offset = "0x97CB98", VA = "0x97CB98")]
	private void Awake()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0x97CBF4", Offset = "0x97CBF4", VA = "0x97CBF4")]
	private void MenuOn()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x97CC48", Offset = "0x97CC48", VA = "0x97CC48")]
	public void MenuOff()
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x97CC80", Offset = "0x97CC80", VA = "0x97CC80")]
	public void OnMenuStatusChange()
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x97CCE8", Offset = "0x97CCE8", VA = "0x97CCE8")]
	public PauseMenu()
	{
	}
}
[Token(Token = "0x2000165")]
public class SceneAndURLLoader : MonoBehaviour
{
	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PauseMenu m_PauseMenu;

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x98AB2C", Offset = "0x98AB2C", VA = "0x98AB2C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x98AB88", Offset = "0x98AB88", VA = "0x98AB88")]
	public void SceneLoad(string sceneName)
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x98AC20", Offset = "0x98AC20", VA = "0x98AC20")]
	public void LoadURL(string url)
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x98AC2C", Offset = "0x98AC2C", VA = "0x98AC2C")]
	public SceneAndURLLoader()
	{
	}
}
[Token(Token = "0x2000166")]
public class CameraSwitch : MonoBehaviour
{
	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] objects;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text text;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int m_CurrentActiveObject;

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x10972D8", Offset = "0x10972D8", VA = "0x10972D8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x109734C", Offset = "0x109734C", VA = "0x109734C")]
	public void NextCamera()
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0x1097424", Offset = "0x1097424", VA = "0x1097424")]
	public CameraSwitch()
	{
	}
}
[Token(Token = "0x2000167")]
public class LevelReset : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x6000555")]
	[Address(RVA = "0x10FFE78", Offset = "0x10FFE78", VA = "0x10FFE78", Slot = "4")]
	public void OnPointerClick(PointerEventData data)
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0x10FFEF8", Offset = "0x10FFEF8", VA = "0x10FFEF8")]
	public LevelReset()
	{
	}
}
[Token(Token = "0x2000168")]
public class AddressableHelper : MonoBehaviour
{
	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AddressableHelper Instance;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private IntAddressableDictionary _audioAssetRef;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AssetLoadedDelegate _onLoadDelegate;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<UnityEngine.Object> _loadedObjects;

	[Token(Token = "0x6000557")]
	[Address(RVA = "0x1084A90", Offset = "0x1084A90", VA = "0x1084A90")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0x1084CE0", Offset = "0x1084CE0", VA = "0x1084CE0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0x1084EB0", Offset = "0x1084EB0", VA = "0x1084EB0")]
	private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0x10850B4", Offset = "0x10850B4", VA = "0x10850B4")]
	private void OnSceneUnLoaded(Scene scene)
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0x1084EE8", Offset = "0x1084EE8", VA = "0x1084EE8")]
	public void LoadAssetAsync(int levelIndex)
	{
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0x10851D4", Offset = "0x10851D4", VA = "0x10851D4")]
	private void OnAssetLoaded(UnityEngine.Object asset)
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0x10850E8", Offset = "0x10850E8", VA = "0x10850E8")]
	private void Remove(int buildIndex)
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0x1085238", Offset = "0x1085238", VA = "0x1085238")]
	public AddressableHelper()
	{
	}
}
[Serializable]
[Token(Token = "0x2000169")]
public struct ListStructure
{
	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<string> AssetReferences;
}
[Token(Token = "0x200016A")]
public class LaserPointer_Extended : LaserPointer
{
	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private UIGrabber _uiGrabber;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool _isGrabbed;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float _distance;

	[Token(Token = "0x600055F")]
	[Address(RVA = "0x10FFAF0", Offset = "0x10FFAF0", VA = "0x10FFAF0", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0x10FFBD4", Offset = "0x10FFBD4", VA = "0x10FFBD4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0x10FFCB8", Offset = "0x10FFCB8", VA = "0x10FFCB8")]
	private void UpdateGrab(bool grabStatus)
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0x10FFCF8", Offset = "0x10FFCF8", VA = "0x10FFCF8", Slot = "7")]
	protected override void LateUpdate()
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0x10FFE68", Offset = "0x10FFE68", VA = "0x10FFE68")]
	public LaserPointer_Extended()
	{
	}
}
[Token(Token = "0x200016B")]
public class OVRRaycaster_Extended : OVRRaycaster
{
	[Serializable]
	[Token(Token = "0x200016C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C02D8", Offset = "0x8C02D8")]
	private sealed class <>c
	{
		[Token(Token = "0x40006BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40006BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<bool> <>9__3_0;

		[Token(Token = "0x600056A")]
		[Address(RVA = "0x10AFDD0", Offset = "0x10AFDD0", VA = "0x10AFDD0")]
		public <>c()
		{
		}

		[Token(Token = "0x600056B")]
		[Address(RVA = "0x10AFDD8", Offset = "0x10AFDD8", VA = "0x10AFDD8")]
		internal bool <UpdatePointerAfterAFrame>b__3_0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200016D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C02E8", Offset = "0x8C02E8")]
	private sealed class <UpdatePointerAfterAFrame>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OVRRaycaster_Extended <>4__this;

		[Token(Token = "0x17000077")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600056F")]
			[Address(RVA = "0x10B0084", Offset = "0x10B0084", VA = "0x10B0084", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000078")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000571")]
			[Address(RVA = "0x10B00CC", Offset = "0x10B00CC", VA = "0x10B00CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600056C")]
		[Address(RVA = "0x10AFE5C", Offset = "0x10AFE5C", VA = "0x10AFE5C")]
		[DebuggerHidden]
		public <UpdatePointerAfterAFrame>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600056D")]
		[Address(RVA = "0x10AFE88", Offset = "0x10AFE88", VA = "0x10AFE88", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600056E")]
		[Address(RVA = "0x10AFE8C", Offset = "0x10AFE8C", VA = "0x10AFE8C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000570")]
		[Address(RVA = "0x10B008C", Offset = "0x10B008C", VA = "0x10B008C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Canvas _extendedCanvas;

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xC7577C", Offset = "0xC7577C", VA = "0xC7577C", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0xC75904", Offset = "0xC75904", VA = "0xC75904", Slot = "8")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0xC7588C", Offset = "0xC7588C", VA = "0xC7588C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C6664", Offset = "0x8C6664")]
	private IEnumerator UpdatePointerAfterAFrame()
	{
		return null;
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0xC759CC", Offset = "0xC759CC", VA = "0xC759CC")]
	private void OnSceneChanged(Scene sceneOld, Scene sceneNew)
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0xC759F8", Offset = "0xC759F8", VA = "0xC759F8")]
	public OVRRaycaster_Extended()
	{
	}
}
[Token(Token = "0x200016E")]
public class UIGrabber : MonoBehaviour
{
	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float _radius;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private LayerMask _layersToCheck;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Collider[] _results;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _grabbedIUObject;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _grabbedObjectParent;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Action<bool> HasGrabbed;

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x115A6D0", Offset = "0x115A6D0", VA = "0x115A6D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x115A72C", Offset = "0x115A72C", VA = "0x115A72C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x115A838", Offset = "0x115A838", VA = "0x115A838")]
	private void OnBeginGrab()
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x115AA1C", Offset = "0x115AA1C", VA = "0x115AA1C")]
	private void OnEndGrab()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x115AB0C", Offset = "0x115AB0C", VA = "0x115AB0C")]
	public UIGrabber()
	{
	}
}
[Serializable]
[Token(Token = "0x200016F")]
public class StringAudioClipDictionary : SerializableDictionary<string, AudioClip>
{
	[Token(Token = "0x6000577")]
	[Address(RVA = "0x114F9D0", Offset = "0x114F9D0", VA = "0x114F9D0")]
	public StringAudioClipDictionary()
	{
	}
}
[Serializable]
[Token(Token = "0x2000170")]
public class ImprintGameObjectDictionary : SerializableDictionary<ImprintValue, GameObject>
{
	[Token(Token = "0x6000578")]
	[Address(RVA = "0x10F18E8", Offset = "0x10F18E8", VA = "0x10F18E8")]
	public ImprintGameObjectDictionary()
	{
	}
}
[Serializable]
[Token(Token = "0x2000171")]
public class InformationLookUpDictionary : SerializableDictionary<string, LookUpData>
{
	[Token(Token = "0x6000579")]
	[Address(RVA = "0x10F1C18", Offset = "0x10F1C18", VA = "0x10F1C18")]
	public InformationLookUpDictionary()
	{
	}
}
[Serializable]
[Token(Token = "0x2000172")]
public class CreaturaVolutaGroupDictionary : SerializableDictionary<string, CreatureVoluta>
{
	[Token(Token = "0x600057A")]
	[Address(RVA = "0x109AC98", Offset = "0x109AC98", VA = "0x109AC98")]
	public CreaturaVolutaGroupDictionary()
	{
	}
}
[Serializable]
[Token(Token = "0x2000173")]
public class InquiryAccessDictionary : SerializableDictionary<string, InquiryData>
{
	[Token(Token = "0x600057B")]
	[Address(RVA = "0x10F30B8", Offset = "0x10F30B8", VA = "0x10F30B8")]
	public InquiryAccessDictionary()
	{
	}
}
[Serializable]
[Token(Token = "0x2000174")]
public class IntStringDictionary : SerializableDictionary<int, string>
{
	[Token(Token = "0x600057C")]
	[Address(RVA = "0x10F3ABC", Offset = "0x10F3ABC", VA = "0x10F3ABC")]
	public IntStringDictionary()
	{
	}
}
[Serializable]
[Token(Token = "0x2000175")]
public class StringSpeechEventDictionary : SerializableDictionary<string, SpeechEventPathKeywords>
{
	[Token(Token = "0x600057D")]
	[Address(RVA = "0x114FA68", Offset = "0x114FA68", VA = "0x114FA68")]
	public StringSpeechEventDictionary()
	{
	}
}
[Serializable]
[Token(Token = "0x2000176")]
public class IntAddressableDictionary : SerializableDictionary<int, ListStructure>
{
	[Token(Token = "0x600057E")]
	[Address(RVA = "0x10F3A70", Offset = "0x10F3A70", VA = "0x10F3A70")]
	public IntAddressableDictionary()
	{
	}
}
[Token(Token = "0x2000177")]
public class DebugManager : MonoBehaviour
{
	[Token(Token = "0x600057F")]
	[Address(RVA = "0x109BD44", Offset = "0x109BD44", VA = "0x109BD44")]
	private void Update()
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x109BE68", Offset = "0x109BE68", VA = "0x109BE68")]
	public DebugManager()
	{
	}
}
[Token(Token = "0x2000178")]
public class ScreenTextTrigger : MonoBehaviour
{
	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LevelText CurrentLevelText;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _currentTextIndex;

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x98AFD8", Offset = "0x98AFD8", VA = "0x98AFD8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x98AFDC", Offset = "0x98AFDC", VA = "0x98AFDC")]
	private void TriggerUIText()
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x98B170", Offset = "0x98B170", VA = "0x98B170")]
	public ScreenTextTrigger()
	{
	}
}
[Token(Token = "0x2000179")]
public static class UnityExtensions
{
	[Token(Token = "0x6000584")]
	[Address(RVA = "0x115E644", Offset = "0x115E644", VA = "0x115E644")]
	public static bool Contains(this LayerMask mask, int layer)
	{
		return default(bool);
	}
}
[Token(Token = "0x200017A")]
public class ActivateAfterTime : MonoBehaviour
{
	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject[] m_objectsToActivate;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float m_timeToWaitBeforeActivating;

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x10845E8", Offset = "0x10845E8", VA = "0x10845E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x108463C", Offset = "0x108463C", VA = "0x108463C")]
	private void ActivateObjects()
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x10846AC", Offset = "0x10846AC", VA = "0x10846AC")]
	public ActivateAfterTime()
	{
	}
}
[Token(Token = "0x200017B")]
public class FireLookAtPlayer : MonoBehaviour
{
	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C2D7C", Offset = "0x8C2D7C")]
	[SerializeField]
	private Transform m_playerTransform;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform m_cacheTransform;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 m_direction;

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x117A050", Offset = "0x117A050", VA = "0x117A050")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x117A080", Offset = "0x117A080", VA = "0x117A080")]
	private void Update()
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x117A0FC", Offset = "0x117A0FC", VA = "0x117A0FC")]
	public FireLookAtPlayer()
	{
	}
}
[Token(Token = "0x200017C")]
public class ShaderVariantCollectionLoader : MonoBehaviour
{
	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C2DC8", Offset = "0x8C2DC8")]
	private string m_varientCollectionName;

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x98BD90", Offset = "0x98BD90", VA = "0x98BD90")]
	private void Start()
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x98BE1C", Offset = "0x98BE1C", VA = "0x98BE1C")]
	public ShaderVariantCollectionLoader()
	{
	}
}
[Token(Token = "0x200017D")]
public class SkipFunctionality : MonoBehaviour
{
	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool m_isAlreadySkipped;

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x98D034", Offset = "0x98D034", VA = "0x98D034")]
	private void Update()
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x98D130", Offset = "0x98D130", VA = "0x98D130")]
	public SkipFunctionality()
	{
	}
}
[Token(Token = "0x200017E")]
public class AnimationComponent : MonoBehaviour
{
	[Token(Token = "0x200017F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0308", Offset = "0x8C0308")]
	private sealed class <PlayNextSequenceAfterAudioIsCompelte>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x40006D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationComponent <>4__this;

		[Token(Token = "0x40006D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string triggerKey;

		[Token(Token = "0x17000079")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000598")]
			[Address(RVA = "0x10A3080", Offset = "0x10A3080", VA = "0x10A3080", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600059A")]
			[Address(RVA = "0x10A30C8", Offset = "0x10A30C8", VA = "0x10A30C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000595")]
		[Address(RVA = "0x10A2F88", Offset = "0x10A2F88", VA = "0x10A2F88")]
		[DebuggerHidden]
		public <PlayNextSequenceAfterAudioIsCompelte>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000596")]
		[Address(RVA = "0x10A2FB4", Offset = "0x10A2FB4", VA = "0x10A2FB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000597")]
		[Address(RVA = "0x10A2FB8", Offset = "0x10A2FB8", VA = "0x10A2FB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000599")]
		[Address(RVA = "0x10A3088", Offset = "0x10A3088", VA = "0x10A3088", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator Animator;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource ComponentSource;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioData VOData;

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x1087514", Offset = "0x1087514", VA = "0x1087514")]
	public void OnBeginVO(string key)
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x1087660", Offset = "0x1087660", VA = "0x1087660")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C6724", Offset = "0x8C6724")]
	private IEnumerator PlayNextSequenceAfterAudioIsCompelte(float duration, string triggerKey)
	{
		return null;
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x1087704", Offset = "0x1087704", VA = "0x1087704")]
	public void PlayGoingAndSpeakToPlayer()
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x108775C", Offset = "0x108775C", VA = "0x108775C")]
	public void PlayImprintBestow()
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x10877B4", Offset = "0x10877B4", VA = "0x10877B4")]
	public void PlaySmile()
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x108780C", Offset = "0x108780C", VA = "0x108780C")]
	public AnimationComponent()
	{
	}
}
[Token(Token = "0x2000180")]
public static class AnimationParamterData
{
	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int NPCState;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly int MoveZ;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly int MoveType;
}
[Token(Token = "0x2000181")]
public enum MovementType
{
	[Token(Token = "0x40006DA")]
	WALK,
	[Token(Token = "0x40006DB")]
	PACE
}
[Token(Token = "0x2000182")]
public class BaseCharacterController : MonoBehaviour
{
	[Token(Token = "0x2000183")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0318", Offset = "0x8C0318")]
	private sealed class <SetWalkSpeedSmooth>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BaseCharacterController <>4__this;

		[Token(Token = "0x40006E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MovementType movementType;

		[Token(Token = "0x40006E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float beginZ;

		[Token(Token = "0x40006E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float endZ;

		[Token(Token = "0x40006E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float duration;

		[Token(Token = "0x40006EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float overrideWalkSpeed;

		[Token(Token = "0x40006EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float <time>5__2;

		[Token(Token = "0x1700007B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005A9")]
			[Address(RVA = "0x10A330C", Offset = "0x10A330C", VA = "0x10A330C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005AB")]
			[Address(RVA = "0x10A3354", Offset = "0x10A3354", VA = "0x10A3354", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005A6")]
		[Address(RVA = "0x10A30D0", Offset = "0x10A30D0", VA = "0x10A30D0")]
		[DebuggerHidden]
		public <SetWalkSpeedSmooth>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60005A7")]
		[Address(RVA = "0x10A30FC", Offset = "0x10A30FC", VA = "0x10A30FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005A8")]
		[Address(RVA = "0x10A3100", Offset = "0x10A3100", VA = "0x10A3100", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005AA")]
		[Address(RVA = "0x10A3314", Offset = "0x10A3314", VA = "0x10A3314", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000184")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0328", Offset = "0x8C0328")]
	private sealed class <WaitCoroutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40006EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40006ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40006EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x40006EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callback;

		[Token(Token = "0x1700007D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005AF")]
			[Address(RVA = "0x10A3444", Offset = "0x10A3444", VA = "0x10A3444", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005B1")]
			[Address(RVA = "0x10A348C", Offset = "0x10A348C", VA = "0x10A348C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005AC")]
		[Address(RVA = "0x10A335C", Offset = "0x10A335C", VA = "0x10A335C")]
		[DebuggerHidden]
		public <WaitCoroutine>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x60005AD")]
		[Address(RVA = "0x10A3388", Offset = "0x10A3388", VA = "0x10A3388", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005AE")]
		[Address(RVA = "0x10A338C", Offset = "0x10A338C", VA = "0x10A338C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005B0")]
		[Address(RVA = "0x10A344C", Offset = "0x10A344C", VA = "0x10A344C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float WalkSpeedMult;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform TargetTransform;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animator AnimatorObject;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected NavMeshAgent navMeshAgent;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject InteractionArea;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool cancelMovement;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	[SerializeField]
	private bool _keepAnimatorControllerStateOnDisable;

	[Token(Token = "0x600059C")]
	[Address(RVA = "0x108A0B4", Offset = "0x108A0B4", VA = "0x108A0B4")]
	public void SetBool(int param, bool status)
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0x108A0D4", Offset = "0x108A0D4", VA = "0x108A0D4")]
	public void SetFloat(int param, float value)
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x108A0F0", Offset = "0x108A0F0", VA = "0x108A0F0")]
	public void SetInt(int param, int value)
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0x108A10C", Offset = "0x108A10C", VA = "0x108A10C")]
	public void SetTrigger(int param)
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0x108A128", Offset = "0x108A128", VA = "0x108A128", Slot = "4")]
	public virtual void SetState(int value)
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0x108A1B4", Offset = "0x108A1B4", VA = "0x108A1B4")]
	public void SetWalkSpeed(float value)
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0x108A260", Offset = "0x108A260", VA = "0x108A260")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C67D4", Offset = "0x8C67D4")]
	public IEnumerator SetWalkSpeedSmooth(float beginZ, float endZ, float duration, MovementType movementType, float overrideWalkSpeed = -1f)
	{
		return null;
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0x108A310", Offset = "0x108A310", VA = "0x108A310")]
	private void Start()
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x108A3B4", Offset = "0x108A3B4", VA = "0x108A3B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C6834", Offset = "0x8C6834")]
	protected IEnumerator WaitCoroutine(float duration, [Optional] Action callback)
	{
		return null;
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x108A43C", Offset = "0x108A43C", VA = "0x108A43C")]
	public BaseCharacterController()
	{
	}
}
[Token(Token = "0x2000185")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C0338", Offset = "0x8C0338")]
public class BaseTriggerSystem : MonoBehaviour
{
	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnPlayerEnterTrigger;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask layerMask;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool IsDisableAfterTrigger;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C2E24", Offset = "0x8C2E24")]
	public float DelayBeforeNextTap;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private bool InvokeUGUIButton;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float LastClickTime;

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x108A454", Offset = "0x108A454", VA = "0x108A454", Slot = "4")]
	public virtual void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x108A578", Offset = "0x108A578", VA = "0x108A578")]
	public BaseTriggerSystem()
	{
	}
}
[Token(Token = "0x2000186")]
public class EventPlayer : MonoBehaviour
{
	[Token(Token = "0x2000187")]
	public enum GlobalEventID
	{
		[Token(Token = "0x4000705")]
		ENABLE_RING,
		[Token(Token = "0x4000706")]
		GLOW_RING,
		[Token(Token = "0x4000707")]
		DISABLE_RING_GLOW,
		[Token(Token = "0x4000708")]
		DISPLAY_PLAYER_ID,
		[Token(Token = "0x4000709")]
		DISPLAY_DEFINATION_UI
	}

	[Token(Token = "0x2000188")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0398", Offset = "0x8C0398")]
	private sealed class <StopVibration>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400070B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700007F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005EF")]
			[Address(RVA = "0x10A5A84", Offset = "0x10A5A84", VA = "0x10A5A84", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000080")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005F1")]
			[Address(RVA = "0x10A5ACC", Offset = "0x10A5ACC", VA = "0x10A5ACC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005EC")]
		[Address(RVA = "0x10A5974", Offset = "0x10A5974", VA = "0x10A5974")]
		[DebuggerHidden]
		public <StopVibration>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60005ED")]
		[Address(RVA = "0x10A59A0", Offset = "0x10A59A0", VA = "0x10A59A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005EE")]
		[Address(RVA = "0x10A59A4", Offset = "0x10A59A4", VA = "0x10A59A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005F0")]
		[Address(RVA = "0x10A5A8C", Offset = "0x10A5A8C", VA = "0x10A5A8C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000189")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C03A8", Offset = "0x8C03A8")]
	private sealed class <>c__DisplayClass22_0
	{
		[Token(Token = "0x400070C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject targetToMove;

		[Token(Token = "0x60005F2")]
		[Address(RVA = "0x10A55B8", Offset = "0x10A55B8", VA = "0x10A55B8")]
		public <>c__DisplayClass22_0()
		{
		}

		[Token(Token = "0x60005F3")]
		[Address(RVA = "0x10A55C0", Offset = "0x10A55C0", VA = "0x10A55C0")]
		internal void <DelayedAnnouncerPlayback>b__0()
		{
		}
	}

	[Token(Token = "0x200018A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C03B8", Offset = "0x8C03B8")]
	private sealed class <WaitNFrame>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400070D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400070E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400070F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int numOfFrames;

		[Token(Token = "0x4000710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action<GameObject> callback;

		[Token(Token = "0x4000711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject gameObject;

		[Token(Token = "0x4000712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__2;

		[Token(Token = "0x17000081")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60005F7")]
			[Address(RVA = "0x10A5D54", Offset = "0x10A5D54", VA = "0x10A5D54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000082")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60005F9")]
			[Address(RVA = "0x10A5D9C", Offset = "0x10A5D9C", VA = "0x10A5D9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005F4")]
		[Address(RVA = "0x10A5C44", Offset = "0x10A5C44", VA = "0x10A5C44")]
		[DebuggerHidden]
		public <WaitNFrame>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60005F5")]
		[Address(RVA = "0x10A5C70", Offset = "0x10A5C70", VA = "0x10A5C70", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005F6")]
		[Address(RVA = "0x10A5C74", Offset = "0x10A5C74", VA = "0x10A5C74", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60005F8")]
		[Address(RVA = "0x10A5D5C", Offset = "0x10A5D5C", VA = "0x10A5D5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200018B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C03C8", Offset = "0x8C03C8")]
	private sealed class <>c__DisplayClass32_0
	{
		[Token(Token = "0x4000713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AddImprtintInfoEvent currentEvent;

		[Token(Token = "0x4000714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string firstEncounteredKey;

		[Token(Token = "0x60005FA")]
		[Address(RVA = "0x10A5634", Offset = "0x10A5634", VA = "0x10A5634")]
		public <>c__DisplayClass32_0()
		{
		}

		[Token(Token = "0x60005FB")]
		[Address(RVA = "0x10A563C", Offset = "0x10A563C", VA = "0x10A563C")]
		internal void <ImprintEvent>b__0()
		{
		}

		[Token(Token = "0x60005FC")]
		[Address(RVA = "0x10A5708", Offset = "0x10A5708", VA = "0x10A5708")]
		internal void <ImprintEvent>b__1()
		{
		}
	}

	[Token(Token = "0x200018C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C03D8", Offset = "0x8C03D8")]
	private sealed class <WaitBeforeCallback>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x4000718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callback;

		[Token(Token = "0x17000083")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000600")]
			[Address(RVA = "0x10A5BF4", Offset = "0x10A5BF4", VA = "0x10A5BF4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000084")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000602")]
			[Address(RVA = "0x10A5C3C", Offset = "0x10A5C3C", VA = "0x10A5C3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60005FD")]
		[Address(RVA = "0x10A5AD4", Offset = "0x10A5AD4", VA = "0x10A5AD4")]
		[DebuggerHidden]
		public <WaitBeforeCallback>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x60005FE")]
		[Address(RVA = "0x10A5B00", Offset = "0x10A5B00", VA = "0x10A5B00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60005FF")]
		[Address(RVA = "0x10A5B04", Offset = "0x10A5B04", VA = "0x10A5B04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000601")]
		[Address(RVA = "0x10A5BFC", Offset = "0x10A5BFC", VA = "0x10A5BFC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200018D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C03E8", Offset = "0x8C03E8")]
	private sealed class <CallbackAfterDuration>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400071A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callback;

		[Token(Token = "0x17000085")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000606")]
			[Address(RVA = "0x10A5924", Offset = "0x10A5924", VA = "0x10A5924", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000086")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000608")]
			[Address(RVA = "0x10A596C", Offset = "0x10A596C", VA = "0x10A596C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000603")]
		[Address(RVA = "0x10A583C", Offset = "0x10A583C", VA = "0x10A583C")]
		[DebuggerHidden]
		public <CallbackAfterDuration>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6000604")]
		[Address(RVA = "0x10A5868", Offset = "0x10A5868", VA = "0x10A5868", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000605")]
		[Address(RVA = "0x10A586C", Offset = "0x10A586C", VA = "0x10A586C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000607")]
		[Address(RVA = "0x10A592C", Offset = "0x10A592C", VA = "0x10A592C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static EventPlayer instance;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BaseEventDetail _curretEventDetail;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LookUpGroup LevelLookUpData;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CreturaData LevelcreatureVolutaData;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform[] _exitWaypoint;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip[] _levelAmbient;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private KeywordData keywordData;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int _quickSaveSlotNum;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Coroutine _waitTimeCoroutine;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform[] _navigationWaypoints;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private HumanoidController _solInstance;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool ignoreFirstSaveCallOnLoad;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool hasFollowBegan;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject _currentBoundry;

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x117552C", Offset = "0x117552C", VA = "0x117552C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x1175598", Offset = "0x1175598", VA = "0x1175598")]
	public void PlayGlobalEvent(GlobalEventID ID)
	{
	}

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x11757C4", Offset = "0x11757C4", VA = "0x11757C4")]
	public void PlayAmbient(int id)
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x1175744", Offset = "0x1175744", VA = "0x1175744")]
	public void BeginVibrate()
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x11757C8", Offset = "0x11757C8", VA = "0x11757C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C6934", Offset = "0x8C6934")]
	private IEnumerator StopVibration()
	{
		return null;
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x1175824", Offset = "0x1175824", VA = "0x1175824")]
	public void SetDefinationUIAppearPoint(Transform positionPoint)
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x1175884", Offset = "0x1175884", VA = "0x1175884")]
	public void BeginEventPlayAnnouncerAudio(GameObject targetToMove)
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x11759D0", Offset = "0x11759D0", VA = "0x11759D0")]
	private void DelayedAnnouncerPlayback(GameObject targetToMove)
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x1175CDC", Offset = "0x1175CDC", VA = "0x1175CDC")]
	public void EnableWhiteAltertInterface()
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x1175D34", Offset = "0x1175D34", VA = "0x1175D34")]
	public void EnableBlackAlertInterface()
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x1175934", Offset = "0x1175934", VA = "0x1175934")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C6994", Offset = "0x8C6994")]
	private IEnumerator WaitNFrame(GameObject gameObject, Action<GameObject> callback, int numOfFrames = 1)
	{
		return null;
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x1175D8C", Offset = "0x1175D8C", VA = "0x1175D8C")]
	public void DisplayGenericPopup(int dialogID, bool enableClose = true, float autoCloseDuration = 0f, [Optional] Action OnCloseClick)
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x1175E68", Offset = "0x1175E68", VA = "0x1175E68")]
	public void CallPlayerVoice()
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x1176004", Offset = "0x1176004", VA = "0x1176004")]
	public void ToggleSpeechOn()
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x11760F0", Offset = "0x11760F0", VA = "0x11760F0")]
	public void ToggleSpeechOn(bool doSavePlayerTalk)
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x1175F74", Offset = "0x1175F74", VA = "0x1175F74")]
	public void ToggleSpeechOn(float duration, [Optional] Action<string, bool> callback)
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x11761DC", Offset = "0x11761DC", VA = "0x11761DC")]
	public void ToggleSpeechOff()
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x1176250", Offset = "0x1176250", VA = "0x1176250")]
	public void ImprintEvent(AddImprtintInfoEvent currentEvent)
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x11768C4", Offset = "0x11768C4", VA = "0x11768C4")]
	public void ToggleImprint(bool status)
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x1176924", Offset = "0x1176924", VA = "0x1176924")]
	public void SetKeywordsForSpeech(KeywordData keywordData)
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x117692C", Offset = "0x117692C", VA = "0x117692C")]
	public int ProcessSpeech(string recievedText)
	{
		return default(int);
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x1176BA8", Offset = "0x1176BA8", VA = "0x1176BA8")]
	public void TogglePlayerMarker(bool value)
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x1176C08", Offset = "0x1176C08", VA = "0x1176C08")]
	public void OnPlayerAccept()
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x1172818", Offset = "0x1172818", VA = "0x1172818")]
	public void SendWaitComplete()
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x1176D70", Offset = "0x1176D70", VA = "0x1176D70")]
	public void CheckIfActionPerformed()
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x1176EA8", Offset = "0x1176EA8", VA = "0x1176EA8")]
	public void SetActionPerformFalse()
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x1176F50", Offset = "0x1176F50", VA = "0x1176F50")]
	public void SetKeywordStatus(int value)
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x1175C54", Offset = "0x1175C54", VA = "0x1175C54")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C69F4", Offset = "0x8C69F4")]
	private IEnumerator WaitBeforeCallback(float duration, [Optional] Action callback)
	{
		return null;
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x1177004", Offset = "0x1177004", VA = "0x1177004")]
	public static void EnableOnLoadIgnoreSaveFlag()
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x117706C", Offset = "0x117706C", VA = "0x117706C")]
	public void OnQuickSave()
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x117714C", Offset = "0x117714C", VA = "0x117714C")]
	public void OnQuickLoad()
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x11771C0", Offset = "0x11771C0", VA = "0x11771C0")]
	public void StartWaitTimer(float waitDuration)
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x1176D5C", Offset = "0x1176D5C", VA = "0x1176D5C")]
	public void CloseWaitCoroutineEvent()
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x1177268", Offset = "0x1177268", VA = "0x1177268")]
	public void OnVoiceFeedback(string value, bool bypass = false)
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x117683C", Offset = "0x117683C", VA = "0x117683C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C6A54", Offset = "0x8C6A54")]
	private IEnumerator CallbackAfterDuration(float duration, Action callback)
	{
		return null;
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x1177354", Offset = "0x1177354", VA = "0x1177354")]
	public void ToggleRock(bool status)
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x11773B4", Offset = "0x11773B4", VA = "0x11773B4")]
	public void ToggleEye(bool status)
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x1177414", Offset = "0x1177414", VA = "0x1177414")]
	public void ToggleWhip(bool status)
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x1177474", Offset = "0x1177474", VA = "0x1177474")]
	public void ToggleSyringe(bool status)
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x117752C", Offset = "0x117752C", VA = "0x117752C")]
	public void AnimateImprintPickup(int itemID)
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x1177530", Offset = "0x1177530", VA = "0x1177530")]
	public void ToggleConversationStateSaver(bool value)
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x11775C4", Offset = "0x11775C4", VA = "0x11775C4")]
	public void ToggleConversationStateSaverAfterLoad(bool value)
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x1177658", Offset = "0x1177658", VA = "0x1177658")]
	public void ToggleLoadOnStart(bool status)
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x11776EC", Offset = "0x11776EC", VA = "0x11776EC")]
	public void OnSceneChange()
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x1177780", Offset = "0x1177780", VA = "0x1177780")]
	public void AddEventListenerToOnSceneLoad()
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x11778EC", Offset = "0x11778EC", VA = "0x11778EC")]
	private void EnableConverstationStateSaver()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x117797C", Offset = "0x117797C", VA = "0x117797C")]
	public void AssignWaypoint(Transform parentWaypoint)
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x1177CC8", Offset = "0x1177CC8", VA = "0x1177CC8")]
	public void ToggleCurrentBoundry(bool value)
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x1177CE0", Offset = "0x1177CE0", VA = "0x1177CE0")]
	public void ReassignBoundry(GameObject boundry)
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x1177CE8", Offset = "0x1177CE8", VA = "0x1177CE8")]
	public void MoveSolOnWaypoints(bool isPlayerFollowNPC = false)
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x1177F98", Offset = "0x1177F98", VA = "0x1177F98")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8C6AB4", Offset = "0x8C6AB4")]
	public void FollowSol()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x117800C", Offset = "0x117800C", VA = "0x117800C")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8C6AEC", Offset = "0x8C6AEC")]
	public void EndFollowSol()
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x117806C", Offset = "0x117806C", VA = "0x117806C")]
	public void SpawnPlayerAtEndofFollow()
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x1178258", Offset = "0x1178258", VA = "0x1178258")]
	public EventPlayer()
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x117826C", Offset = "0x117826C", VA = "0x117826C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C6B24", Offset = "0x8C6B24")]
	private void <MoveSolOnWaypoints>b__64_0()
	{
	}
}
[Token(Token = "0x200018E")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C03F8", Offset = "0x8C03F8")]
public class EventTriggerSystem : BaseTriggerSystem
{
	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BaseEventDetail _currentEventToTrigger;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool RemoveListener;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool IsInteractionEnabled;

	[Token(Token = "0x6000609")]
	[Address(RVA = "0x117827C", Offset = "0x117827C", VA = "0x117827C", Slot = "4")]
	public override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x1178374", Offset = "0x1178374", VA = "0x1178374")]
	public EventTriggerSystem()
	{
	}
}
[Token(Token = "0x200018F")]
public class ExtractFluid : MonoBehaviour
{
	[Token(Token = "0x2000190")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0458", Offset = "0x8C0458")]
	private sealed class <WaitForDuration>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400072A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400072B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x400072C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callback;

		[Token(Token = "0x17000087")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000614")]
			[Address(RVA = "0x10A69F4", Offset = "0x10A69F4", VA = "0x10A69F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000088")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000616")]
			[Address(RVA = "0x10A6A3C", Offset = "0x10A6A3C", VA = "0x10A6A3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000611")]
		[Address(RVA = "0x10A690C", Offset = "0x10A690C", VA = "0x10A690C")]
		[DebuggerHidden]
		public <WaitForDuration>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000612")]
		[Address(RVA = "0x10A6938", Offset = "0x10A6938", VA = "0x10A6938", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000613")]
		[Address(RVA = "0x10A693C", Offset = "0x10A693C", VA = "0x10A693C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000615")]
		[Address(RVA = "0x10A69FC", Offset = "0x10A69FC", VA = "0x10A69FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Animator syringeAnimator;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float ExtractionPerSecond;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int ExtractCount;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isSyringeInsideTiger;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool isSyringeTouchedByRHand;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	private bool isWaitForAnimToComplete;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float fluidExtract;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float currentTime;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AK.Wwise.Event pullandPushSound;

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x1178720", Offset = "0x1178720", VA = "0x1178720")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x1178728", Offset = "0x1178728", VA = "0x1178728")]
	public void OnSyringeInsideAnimal(GameObject objectOnSyringe)
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x1178950", Offset = "0x1178950", VA = "0x1178950")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C6C74", Offset = "0x8C6C74")]
	private IEnumerator WaitForDuration(float duration, Action callback)
	{
		return null;
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x11789D8", Offset = "0x11789D8", VA = "0x11789D8")]
	public void OnSyringeLeftCollider(GameObject leftCollider)
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x1178A84", Offset = "0x1178A84", VA = "0x1178A84")]
	public ExtractFluid()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x1178A98", Offset = "0x1178A98", VA = "0x1178A98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C6CD4", Offset = "0x8C6CD4")]
	private void <OnSyringeInsideAnimal>b__10_0()
	{
	}
}
[Token(Token = "0x2000191")]
public class HumanoidController : BaseCharacterController
{
	[Token(Token = "0x2000192")]
	public enum PlayerHandAction
	{
		[Token(Token = "0x4000741")]
		GET_RING,
		[Token(Token = "0x4000742")]
		GIVE_EYE,
		[Token(Token = "0x4000743")]
		GIVE_ROCK,
		[Token(Token = "0x4000744")]
		GIVE_WHIP,
		[Token(Token = "0x4000745")]
		TAKE_WHIP,
		[Token(Token = "0x4000746")]
		GIVE_HIFIVE
	}

	[Token(Token = "0x2000193")]
	public enum SolState
	{
		[Token(Token = "0x4000748")]
		NONE = -1,
		[Token(Token = "0x4000749")]
		LOCOMOTION,
		[Token(Token = "0x400074A")]
		LOOK_PLAYER_EAGERLY,
		[Token(Token = "0x400074B")]
		PUTTING_RING,
		[Token(Token = "0x400074C")]
		TRY_SAYING_SOMETHING,
		[Token(Token = "0x400074D")]
		DRAW_CIRCLE_IN_AIR,
		[Token(Token = "0x400074E")]
		POINTING_UP,
		[Token(Token = "0x400074F")]
		BEND_OVER_AND_PICKUP
	}

	[Token(Token = "0x2000194")]
	public enum SoundID
	{
		[Token(Token = "0x4000751")]
		FOOT_STEPS,
		[Token(Token = "0x4000752")]
		PACING,
		[Token(Token = "0x4000753")]
		STANDUP,
		[Token(Token = "0x4000754")]
		PATTING_HAND,
		[Token(Token = "0x4000755")]
		SIGH,
		[Token(Token = "0x4000756")]
		JAM_WHIP,
		[Token(Token = "0x4000757")]
		PULL_PUSH_SYRINGE,
		[Token(Token = "0x4000758")]
		HI_FIVE
	}

	[Token(Token = "0x2000195")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0468", Offset = "0x8C0468")]
	private sealed class <>c__DisplayClass31_0
	{
		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HumanoidController <>4__this;

		[Token(Token = "0x400075A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BaseEventDetail currentEvent;

		[Token(Token = "0x6000644")]
		[Address(RVA = "0x10A9308", Offset = "0x10A9308", VA = "0x10A9308")]
		public <>c__DisplayClass31_0()
		{
		}

		[Token(Token = "0x6000645")]
		[Address(RVA = "0x10A9310", Offset = "0x10A9310", VA = "0x10A9310")]
		internal void <PlaySequence>b__0()
		{
		}
	}

	[Token(Token = "0x2000196")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0478", Offset = "0x8C0478")]
	private sealed class <>c__DisplayClass32_0
	{
		[Token(Token = "0x400075B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HumanoidController <>4__this;

		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int state;

		[Token(Token = "0x6000646")]
		[Address(RVA = "0x10A93D0", Offset = "0x10A93D0", VA = "0x10A93D0")]
		public <>c__DisplayClass32_0()
		{
		}

		[Token(Token = "0x6000647")]
		[Address(RVA = "0x10A93D8", Offset = "0x10A93D8", VA = "0x10A93D8")]
		internal void <SetCharacterStateMachineDelayed>b__0()
		{
		}
	}

	[Token(Token = "0x2000197")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0488", Offset = "0x8C0488")]
	private sealed class <CallbackAfterDuration>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callback;

		[Token(Token = "0x1700008B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600064B")]
			[Address(RVA = "0x10A96B8", Offset = "0x10A96B8", VA = "0x10A96B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600064D")]
			[Address(RVA = "0x10A9700", Offset = "0x10A9700", VA = "0x10A9700", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000648")]
		[Address(RVA = "0x10A95D0", Offset = "0x10A95D0", VA = "0x10A95D0")]
		[DebuggerHidden]
		public <CallbackAfterDuration>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6000649")]
		[Address(RVA = "0x10A95FC", Offset = "0x10A95FC", VA = "0x10A95FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600064A")]
		[Address(RVA = "0x10A9600", Offset = "0x10A9600", VA = "0x10A9600", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600064C")]
		[Address(RVA = "0x10A96C0", Offset = "0x10A96C0", VA = "0x10A96C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000198")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0498", Offset = "0x8C0498")]
	private sealed class <WaitUntilReached>d__36 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HumanoidController <>4__this;

		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callback;

		[Token(Token = "0x1700008D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000651")]
			[Address(RVA = "0x10A9A14", Offset = "0x10A9A14", VA = "0x10A9A14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000653")]
			[Address(RVA = "0x10A9A5C", Offset = "0x10A9A5C", VA = "0x10A9A5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600064E")]
		[Address(RVA = "0x10A98C4", Offset = "0x10A98C4", VA = "0x10A98C4")]
		[DebuggerHidden]
		public <WaitUntilReached>d__36(int <>1__state)
		{
		}

		[Token(Token = "0x600064F")]
		[Address(RVA = "0x10A98F0", Offset = "0x10A98F0", VA = "0x10A98F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000650")]
		[Address(RVA = "0x10A98F4", Offset = "0x10A98F4", VA = "0x10A98F4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000652")]
		[Address(RVA = "0x10A9A1C", Offset = "0x10A9A1C", VA = "0x10A9A1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000199")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C04A8", Offset = "0x8C04A8")]
	private sealed class <RotateOvertime>d__48 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HumanoidController <>4__this;

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion origDir;

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Quaternion targetDir;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float duration;

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <currentDuration>5__2;

		[Token(Token = "0x1700008F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000657")]
			[Address(RVA = "0x10A9874", Offset = "0x10A9874", VA = "0x10A9874", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000090")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000659")]
			[Address(RVA = "0x10A98BC", Offset = "0x10A98BC", VA = "0x10A98BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000654")]
		[Address(RVA = "0x10A9708", Offset = "0x10A9708", VA = "0x10A9708")]
		[DebuggerHidden]
		public <RotateOvertime>d__48(int <>1__state)
		{
		}

		[Token(Token = "0x6000655")]
		[Address(RVA = "0x10A9734", Offset = "0x10A9734", VA = "0x10A9734", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000656")]
		[Address(RVA = "0x10A9738", Offset = "0x10A9738", VA = "0x10A9738", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000658")]
		[Address(RVA = "0x10A987C", Offset = "0x10A987C", VA = "0x10A987C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200019A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C04B8", Offset = "0x8C04B8")]
	private sealed class <>c__DisplayClass52_0
	{
		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool sendwaitComplete;

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HumanoidController <>4__this;

		[Token(Token = "0x600065A")]
		[Address(RVA = "0x10A93FC", Offset = "0x10A93FC", VA = "0x10A93FC")]
		public <>c__DisplayClass52_0()
		{
		}

		[Token(Token = "0x600065B")]
		[Address(RVA = "0x10A9404", Offset = "0x10A9404", VA = "0x10A9404")]
		internal void <OnWalkTowardTarget>b__0()
		{
		}
	}

	[Token(Token = "0x200019B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C04C8", Offset = "0x8C04C8")]
	private sealed class <>c__DisplayClass53_0
	{
		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool sendwaitComplete;

		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HumanoidController <>4__this;

		[Token(Token = "0x600065C")]
		[Address(RVA = "0x10A94CC", Offset = "0x10A94CC", VA = "0x10A94CC")]
		public <>c__DisplayClass53_0()
		{
		}

		[Token(Token = "0x600065D")]
		[Address(RVA = "0x10A94D4", Offset = "0x10A94D4", VA = "0x10A94D4")]
		internal void <OnWalkBackFromTarget>b__0()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200019C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C04D8", Offset = "0x8C04D8")]
	private sealed class <>c
	{
		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action <>9__63_0;

		[Token(Token = "0x600065F")]
		[Address(RVA = "0x10A9260", Offset = "0x10A9260", VA = "0x10A9260")]
		public <>c()
		{
		}

		[Token(Token = "0x6000660")]
		[Address(RVA = "0x10A9268", Offset = "0x10A9268", VA = "0x10A9268")]
		internal void <StartNavigatingTowardsExit>b__63_0()
		{
		}
	}

	[Token(Token = "0x200019D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C04E8", Offset = "0x8C04E8")]
	private sealed class <>c__DisplayClass66_0
	{
		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HumanoidController <>4__this;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action callback;

		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int waypointNumber;

		[Token(Token = "0x6000661")]
		[Address(RVA = "0x10A959C", Offset = "0x10A959C", VA = "0x10A959C")]
		public <>c__DisplayClass66_0()
		{
		}

		[Token(Token = "0x6000662")]
		[Address(RVA = "0x10A95A4", Offset = "0x10A95A4", VA = "0x10A95A4")]
		internal void <BeginWaypointNavigation>b__0()
		{
		}
	}

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private SolState _State;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Action<SolState> OnStateChange;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float DelayBeforeSwitchesToNextState;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioSource CharSource;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private BaseEventDetail currentEvent;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Coroutine moveCoroutine;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8C2EAC", Offset = "0x8C2EAC")]
	public AudioData data;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject VisualHandForAddingRing;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject HandForHiFive;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject[] Whip;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform[] paceAroundWaypoints;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int _currentTransformIndex;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int RetryVoiceAttempt;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private PlayerHandAction _currentAction;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private bool exitPacing;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
	private bool _onTargetReachedIsHide;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[SerializeField]
	private Transform _positionPoint;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private AK.Wwise.Event[] sfx;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C2EDC", Offset = "0x8C2EDC")]
	private Transform[] <WayPoints>k__BackingField;

	[Token(Token = "0x17000089")]
	public SolState State
	{
		[Token(Token = "0x6000617")]
		[Address(RVA = "0x11852D0", Offset = "0x11852D0", VA = "0x11852D0")]
		get
		{
			return default(SolState);
		}
		[Token(Token = "0x6000618")]
		[Address(RVA = "0x11852D8", Offset = "0x11852D8", VA = "0x11852D8")]
		set
		{
		}
	}

	[Token(Token = "0x1700008A")]
	public Transform[] WayPoints
	{
		[Token(Token = "0x6000619")]
		[Address(RVA = "0x1185354", Offset = "0x1185354", VA = "0x1185354")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C6D34", Offset = "0x8C6D34")]
		private get
		{
			return null;
		}
		[Token(Token = "0x600061A")]
		[Address(RVA = "0x118535C", Offset = "0x118535C", VA = "0x118535C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C6D44", Offset = "0x8C6D44")]
		set
		{
		}
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0x1185364", Offset = "0x1185364", VA = "0x1185364")]
	public void SetOnPlayerHandAction(int actionId)
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0x118538C", Offset = "0x118538C", VA = "0x118538C")]
	public void SetOnPlayerHandAction_NonInteractiveArea(int actionId)
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x1185394", Offset = "0x1185394", VA = "0x1185394")]
	public void EnableHiFive()
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x1185444", Offset = "0x1185444", VA = "0x1185444")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8C6D54", Offset = "0x8C6D54")]
	public void PlaySequence(BaseEventDetail currentEvent)
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x118572C", Offset = "0x118572C", VA = "0x118572C")]
	public void SetCharacterStateMachineDelayed(int state)
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x11856A4", Offset = "0x11856A4", VA = "0x11856A4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C6D64", Offset = "0x8C6D64")]
	private IEnumerator CallbackAfterDuration(float duration, Action callback)
	{
		return null;
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x11855AC", Offset = "0x11855AC", VA = "0x11855AC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8C6DC4", Offset = "0x8C6DC4")]
	private float PlayVO(string clipid)
	{
		return default(float);
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x1185838", Offset = "0x1185838", VA = "0x1185838")]
	public void WalkTowards(Vector3 target, [Optional] Action callback)
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x118591C", Offset = "0x118591C", VA = "0x118591C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C6DD4", Offset = "0x8C6DD4")]
	private IEnumerator WaitUntilReached(Action callback)
	{
		return null;
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x11859B0", Offset = "0x11859B0", VA = "0x11859B0")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8C6E34", Offset = "0x8C6E34")]
	public void PlayVoice(string audioclipID)
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x1185A88", Offset = "0x1185A88", VA = "0x1185A88")]
	public void OnEndOfAction(UnityEngine.Object _curretEventDetail)
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x1185C34", Offset = "0x1185C34", VA = "0x1185C34")]
	public void SetHandPointForUI()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x1185CA8", Offset = "0x1185CA8", VA = "0x1185CA8")]
	public void PlaySound(int id)
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x1185DEC", Offset = "0x1185DEC", VA = "0x1185DEC")]
	public void PlayStoredEvent()
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x1185EF0", Offset = "0x1185EF0", VA = "0x1185EF0")]
	public void OnEndofVoice(int state)
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x1185EF4", Offset = "0x1185EF4", VA = "0x1185EF4")]
	public void OnEndofVoice_Wait(UnityEngine.Object _curretEventDetail)
	{
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x1185EFC", Offset = "0x1185EFC", VA = "0x1185EFC")]
	public void CallGlobalEvent(string eventID)
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x1185FE4", Offset = "0x1185FE4", VA = "0x1185FE4")]
	public void SpawnOnTarget(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x1186084", Offset = "0x1186084", VA = "0x1186084")]
	private void OnNPCStandup()
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x1186194", Offset = "0x1186194", VA = "0x1186194")]
	public void LookatTarget(Transform target)
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x118628C", Offset = "0x118628C", VA = "0x118628C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C6E44", Offset = "0x8C6E44")]
	private IEnumerator RotateOvertime(Quaternion origDir, Quaternion targetDir, float duration)
	{
		return null;
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x1186368", Offset = "0x1186368", VA = "0x1186368")]
	public void SetTargetTranformPlayer()
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x11863D4", Offset = "0x11863D4", VA = "0x11863D4")]
	public void SetTargetTranform(Transform target)
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x11863DC", Offset = "0x11863DC", VA = "0x11863DC")]
	public void OnTargetReachedDeactivate()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x11863E8", Offset = "0x11863E8", VA = "0x11863E8")]
	public void OnWalkTowardTarget(bool sendwaitComplete)
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x1186538", Offset = "0x1186538", VA = "0x1186538")]
	public void OnWalkBackFromTarget(bool sendwaitComplete)
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x11866C0", Offset = "0x11866C0", VA = "0x11866C0")]
	public void OnTargetReached()
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x1186720", Offset = "0x1186720", VA = "0x1186720")]
	public void OnTargetReached(BaseEventDetail currentEvent)
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x11867CC", Offset = "0x11867CC", VA = "0x11867CC")]
	public void OnPlayerHandReachingInTrigger()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x1186860", Offset = "0x1186860", VA = "0x1186860")]
	public void CallGlobalEvent(GlobalEventData globalEventData)
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x1186990", Offset = "0x1186990", VA = "0x1186990")]
	public void PaceAround()
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x118699C", Offset = "0x118699C", VA = "0x118699C")]
	private void PaceArounTo()
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x1186B64", Offset = "0x1186B64", VA = "0x1186B64")]
	public void ExitPacing()
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x1186B70", Offset = "0x1186B70", VA = "0x1186B70")]
	public void ToggleInteractionArea(bool status)
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x1186B90", Offset = "0x1186B90", VA = "0x1186B90")]
	public void OnPerformingAction()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x1186ED4", Offset = "0x1186ED4", VA = "0x1186ED4")]
	public void StartNavigatingTowardsExit()
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x1187188", Offset = "0x1187188", VA = "0x1187188")]
	public void ToggleHandVisualForAddingRing(bool status)
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x1186E58", Offset = "0x1186E58", VA = "0x1186E58")]
	public void ToggleWhip(bool status)
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x1177DC0", Offset = "0x1177DC0", VA = "0x1177DC0")]
	public void BeginWaypointNavigation(Action callback, int waypointNumber = 0)
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x11871C4", Offset = "0x11871C4", VA = "0x11871C4")]
	public HumanoidController()
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x11871DC", Offset = "0x11871DC", VA = "0x11871DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C6EA4", Offset = "0x8C6EA4")]
	private void <OnNPCStandup>b__46_0()
	{
	}
}
[Token(Token = "0x200019E")]
public class PlaceInfrontOfPlayer : MonoBehaviour
{
	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float distanceFromPlayer;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool isEnableRotation;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool autoRotate;

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x97D7F8", Offset = "0x97D7F8", VA = "0x97D7F8")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0x97D99C", Offset = "0x97D99C", VA = "0x97D99C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x97DA40", Offset = "0x97DA40", VA = "0x97DA40")]
	public PlaceInfrontOfPlayer()
	{
	}
}
[Token(Token = "0x200019F")]
public class PlayerControllerExtended : MonoBehaviour
{
	[Token(Token = "0x20001A0")]
	public enum InteractionType
	{
		[Token(Token = "0x400078F")]
		FIRE_TAP
	}

	[Token(Token = "0x20001A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C04F8", Offset = "0x8C04F8")]
	private sealed class <CallAfterAframe>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<bool> callback;

		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool status;

		[Token(Token = "0x17000092")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600068C")]
			[Address(RVA = "0x10B26E4", Offset = "0x10B26E4", VA = "0x10B26E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000093")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600068E")]
			[Address(RVA = "0x10B272C", Offset = "0x10B272C", VA = "0x10B272C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000689")]
		[Address(RVA = "0x10B25E8", Offset = "0x10B25E8", VA = "0x10B25E8")]
		[DebuggerHidden]
		public <CallAfterAframe>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x600068A")]
		[Address(RVA = "0x10B2614", Offset = "0x10B2614", VA = "0x10B2614", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600068B")]
		[Address(RVA = "0x10B2618", Offset = "0x10B2618", VA = "0x10B2618", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600068D")]
		[Address(RVA = "0x10B26EC", Offset = "0x10B26EC", VA = "0x10B26EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001A2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0508", Offset = "0x8C0508")]
	private sealed class <FadeInOutGlow>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerControllerExtended <>4__this;

		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float beginIntensity;

		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float endIntensity;

		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float totalDuration;

		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <time>5__2;

		[Token(Token = "0x17000094")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000692")]
			[Address(RVA = "0xEA0FA8", Offset = "0xEA0FA8", VA = "0xEA0FA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000095")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000694")]
			[Address(RVA = "0xEA0FF0", Offset = "0xEA0FF0", VA = "0xEA0FF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600068F")]
		[Address(RVA = "0xEA0E54", Offset = "0xEA0E54", VA = "0xEA0E54")]
		[DebuggerHidden]
		public <FadeInOutGlow>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6000690")]
		[Address(RVA = "0xEA0E80", Offset = "0xEA0E80", VA = "0xEA0E80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000691")]
		[Address(RVA = "0xEA0E84", Offset = "0xEA0E84", VA = "0xEA0E84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000693")]
		[Address(RVA = "0xEA0FB0", Offset = "0xEA0FB0", VA = "0xEA0FB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0518", Offset = "0x8C0518")]
	private sealed class <WaitUntilClosdAIFollow>d__43 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerControllerExtended <>4__this;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform target;

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action callback;

		[Token(Token = "0x17000096")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000698")]
			[Address(RVA = "0xEA12F8", Offset = "0xEA12F8", VA = "0xEA12F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000097")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600069A")]
			[Address(RVA = "0xEA1340", Offset = "0xEA1340", VA = "0xEA1340", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000695")]
		[Address(RVA = "0xEA1164", Offset = "0xEA1164", VA = "0xEA1164")]
		[DebuggerHidden]
		public <WaitUntilClosdAIFollow>d__43(int <>1__state)
		{
		}

		[Token(Token = "0x6000696")]
		[Address(RVA = "0xEA1190", Offset = "0xEA1190", VA = "0xEA1190", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000697")]
		[Address(RVA = "0xEA1194", Offset = "0xEA1194", VA = "0xEA1194", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000699")]
		[Address(RVA = "0xEA1300", Offset = "0xEA1300", VA = "0xEA1300", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0528", Offset = "0x8C0528")]
	private sealed class <WaitForCallToComplete>d__51 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public OVRInput.Controller controller;

		[Token(Token = "0x17000098")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600069E")]
			[Address(RVA = "0xEA1114", Offset = "0xEA1114", VA = "0xEA1114", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000099")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006A0")]
			[Address(RVA = "0xEA115C", Offset = "0xEA115C", VA = "0xEA115C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600069B")]
		[Address(RVA = "0xEA0FF8", Offset = "0xEA0FF8", VA = "0xEA0FF8")]
		[DebuggerHidden]
		public <WaitForCallToComplete>d__51(int <>1__state)
		{
		}

		[Token(Token = "0x600069C")]
		[Address(RVA = "0xEA1024", Offset = "0xEA1024", VA = "0xEA1024", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600069D")]
		[Address(RVA = "0xEA1028", Offset = "0xEA1028", VA = "0xEA1028", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600069F")]
		[Address(RVA = "0xEA111C", Offset = "0xEA111C", VA = "0xEA111C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlayerControllerExtended instance;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OVRPlayerController _OVRController;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform CenterEye;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject RingObject;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material RingMaterial;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Color _emissionColorValue;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float _intensity;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private WhiteBoardMarker _penObject;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject _rock;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private GameObject _eye;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private EventTriggerSystem _interactiveArea;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private GameObject[] _whip;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private GameObject _syringe;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject _laserPointer;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private NavMeshAgent _navmeshAgent;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C2F9C", Offset = "0x8C2F9C")]
	[SerializeField]
	private Camera _lEyeCamera;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[SerializeField]
	private Camera _rEyeCamera;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[SerializeField]
	private Camera _cEyeCamera;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x8C3008", Offset = "0x8C3008")]
	private InteractionType _currentInteraction;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int scrapeCount;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Coroutine moveCoroutine;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool isAIFollow;

	[Token(Token = "0x17000091")]
	public GameObject Pointer
	{
		[Token(Token = "0x6000666")]
		[Address(RVA = "0x97E780", Offset = "0x97E780", VA = "0x97E780")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x97E788", Offset = "0x97E788", VA = "0x97E788")]
	private void Start()
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x97E7DC", Offset = "0x97E7DC", VA = "0x97E7DC")]
	public void SetInteraction(int interactionID)
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x97E820", Offset = "0x97E820", VA = "0x97E820")]
	public void ToggleOVRController(bool status)
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x97E874", Offset = "0x97E874", VA = "0x97E874")]
	public void SpawnOnTarget(Transform target)
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x97EA20", Offset = "0x97EA20", VA = "0x97EA20")]
	public void SpawnOnTarget(Vector3 position, Quaternion rotation)
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x97E994", Offset = "0x97E994", VA = "0x97E994")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C6FA4", Offset = "0x8C6FA4")]
	private IEnumerator CallAfterAframe(Action<bool> callback, bool status)
	{
		return null;
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x97EB60", Offset = "0x97EB60", VA = "0x97EB60")]
	public void ToggleMovement(bool status)
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x97EBA0", Offset = "0x97EBA0", VA = "0x97EBA0")]
	public void ToggleRing(bool value)
	{
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0x97EBC0", Offset = "0x97EBC0", VA = "0x97EBC0")]
	public void EnableRingGlow()
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x97ED44", Offset = "0x97ED44", VA = "0x97ED44")]
	public void DisableRingGlow(bool instant)
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x97ECA8", Offset = "0x97ECA8", VA = "0x97ECA8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C7004", Offset = "0x8C7004")]
	private IEnumerator FadeInOutGlow(float beginIntensity, float endIntensity, float totalDuration)
	{
		return null;
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x97EE00", Offset = "0x97EE00", VA = "0x97EE00")]
	public void ToggleBranch(bool status)
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x97EE3C", Offset = "0x97EE3C", VA = "0x97EE3C")]
	public void ToggleRock(bool status)
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x97EE5C", Offset = "0x97EE5C", VA = "0x97EE5C")]
	public void ToggleInteractiveArea(bool value)
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x97E800", Offset = "0x97E800", VA = "0x97E800")]
	public void EnableInteraction(bool value)
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x97EE98", Offset = "0x97EE98", VA = "0x97EE98")]
	public void OnPlayerInteracted()
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x97F060", Offset = "0x97F060", VA = "0x97F060")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x8C7064", Offset = "0x8C7064")]
	public void FollowAI(Transform target)
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x97F140", Offset = "0x97F140", VA = "0x97F140")]
	public void WalkTowards(Transform target, [Optional] Action callback)
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x97F1CC", Offset = "0x97F1CC", VA = "0x97F1CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C709C", Offset = "0x8C709C")]
	private IEnumerator WaitUntilClosdAIFollow(Transform target, Action callback)
	{
		return null;
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x97F274", Offset = "0x97F274", VA = "0x97F274")]
	public void DisableFollowAI()
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x97F27C", Offset = "0x97F27C", VA = "0x97F27C")]
	public void OnRockScrape()
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0x97F36C", Offset = "0x97F36C", VA = "0x97F36C")]
	public void ToggleEye(bool value)
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0x97F38C", Offset = "0x97F38C", VA = "0x97F38C")]
	public void ToggleWhip(bool status)
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0x97F45C", Offset = "0x97F45C", VA = "0x97F45C")]
	public void ToggleSyringe(bool status)
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0x97F47C", Offset = "0x97F47C", VA = "0x97F47C")]
	public void OnBoneMarrowExtractionComplete()
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0x97F51C", Offset = "0x97F51C", VA = "0x97F51C")]
	public void EnableHapticFeedbck(float duration, OVRInput.Controller controller = OVRInput.Controller.All)
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0x97F5BC", Offset = "0x97F5BC", VA = "0x97F5BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C70FC", Offset = "0x8C70FC")]
	private IEnumerator WaitForCallToComplete(float duration, OVRInput.Controller controller = OVRInput.Controller.All)
	{
		return null;
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0x97F638", Offset = "0x97F638", VA = "0x97F638")]
	public void ToggleLaserPointer(bool status)
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0x97F6DC", Offset = "0x97F6DC", VA = "0x97F6DC")]
	public void SetBackgroundType(bool isSkybox)
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0x97F8AC", Offset = "0x97F8AC", VA = "0x97F8AC")]
	public void OnEndofDemo()
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0x97F8F0", Offset = "0x97F8F0", VA = "0x97F8F0")]
	public PlayerControllerExtended()
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0x97F8F8", Offset = "0x97F8F8", VA = "0x97F8F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C715C", Offset = "0x8C715C")]
	private void <FollowAI>b__41_0()
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0x97F9A8", Offset = "0x97F9A8", VA = "0x97F9A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C716C", Offset = "0x8C716C")]
	private void <SetBackgroundType>b__53_0(bool value)
	{
	}

	[Token(Token = "0x6000688")]
	[Address(RVA = "0x97FA94", Offset = "0x97FA94", VA = "0x97FA94")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C717C", Offset = "0x8C717C")]
	private void <SetBackgroundType>b__53_1(bool value)
	{
	}
}
[Token(Token = "0x20001A5")]
public class Spawnner : MonoBehaviour
{
	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x114F088", Offset = "0x114F088", VA = "0x114F088")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x114F08C", Offset = "0x114F08C", VA = "0x114F08C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x114F090", Offset = "0x114F090", VA = "0x114F090")]
	public void SpawnObject(GameObject instance, Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x114F160", Offset = "0x114F160", VA = "0x114F160")]
	public Spawnner()
	{
	}
}
[Token(Token = "0x20001A6")]
public class TrackPlay : MonoBehaviour
{
	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioData voiceData;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource source;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int currentIndex;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<string> audioKey;

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x1157234", Offset = "0x1157234", VA = "0x1157234")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x1157348", Offset = "0x1157348", VA = "0x1157348")]
	public void PlayVoiceOver()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x1157364", Offset = "0x1157364", VA = "0x1157364")]
	public void NextVoiceOver()
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x1157460", Offset = "0x1157460", VA = "0x1157460")]
	public void PrevVoiceOver()
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x1157558", Offset = "0x1157558", VA = "0x1157558")]
	public TrackPlay()
	{
	}
}
[Token(Token = "0x20001A7")]
public class UITextManager : MonoBehaviour
{
	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UITextManager instance;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LevelText LevelText;

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x115E2FC", Offset = "0x115E2FC", VA = "0x115E2FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x115E350", Offset = "0x115E350", VA = "0x115E350")]
	public string GetTextForDialogID(int id)
	{
		return null;
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x115E3BC", Offset = "0x115E3BC", VA = "0x115E3BC")]
	public UITextManager()
	{
	}
}
[Token(Token = "0x20001A8")]
public class VoicePanel : MonoBehaviour
{
	[Token(Token = "0x20001A9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0538", Offset = "0x8C0538")]
	private sealed class <WaitForVoice>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VoicePanel <>4__this;

		[Token(Token = "0x40007B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x1700009A")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006B8")]
			[Address(RVA = "0xEA4E6C", Offset = "0xEA4E6C", VA = "0xEA4E6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009B")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006BA")]
			[Address(RVA = "0xEA4EB4", Offset = "0xEA4EB4", VA = "0xEA4EB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006B5")]
		[Address(RVA = "0xEA4C14", Offset = "0xEA4C14", VA = "0xEA4C14")]
		[DebuggerHidden]
		public <WaitForVoice>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60006B6")]
		[Address(RVA = "0xEA4C40", Offset = "0xEA4C40", VA = "0xEA4C40", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006B7")]
		[Address(RVA = "0xEA4C44", Offset = "0xEA4C44", VA = "0xEA4C44", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006B9")]
		[Address(RVA = "0xEA4E74", Offset = "0xEA4E74", VA = "0xEA4E74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001AA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0548", Offset = "0x8C0548")]
	private sealed class <CloseAfterDelay>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VoicePanel <>4__this;

		[Token(Token = "0x1700009C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006BE")]
			[Address(RVA = "0xEA4BC4", Offset = "0xEA4BC4", VA = "0xEA4BC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006C0")]
			[Address(RVA = "0xEA4C0C", Offset = "0xEA4C0C", VA = "0xEA4C0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006BB")]
		[Address(RVA = "0xEA4AD4", Offset = "0xEA4AD4", VA = "0xEA4AD4")]
		[DebuggerHidden]
		public <CloseAfterDelay>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60006BC")]
		[Address(RVA = "0xEA4B00", Offset = "0xEA4B00", VA = "0xEA4B00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006BD")]
		[Address(RVA = "0xEA4B04", Offset = "0xEA4B04", VA = "0xEA4B04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006BF")]
		[Address(RVA = "0xEA4BCC", Offset = "0xEA4BCC", VA = "0xEA4BCC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AppVoiceExperience appVoiceExperience;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI _displayText;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Action<string, bool> _callbackOnCloseClick;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine DeactivationTimeout;

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x115EC00", Offset = "0x115EC00", VA = "0x115EC00")]
	private void Start()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x115ECE8", Offset = "0x115ECE8", VA = "0x115ECE8")]
	public void PopVoiceUI(float duration, Action<string, bool> callback)
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x115EDF8", Offset = "0x115EDF8", VA = "0x115EDF8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C72CC", Offset = "0x8C72CC")]
	private IEnumerator WaitForVoice(float duration)
	{
		return null;
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x115EE80", Offset = "0x115EE80", VA = "0x115EE80")]
	public void OnVoiceTranscription(string text)
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x115EF50", Offset = "0x115EF50", VA = "0x115EF50")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C732C", Offset = "0x8C732C")]
	private IEnumerator CloseAfterDelay(float delay)
	{
		return null;
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x115EFD8", Offset = "0x115EFD8", VA = "0x115EFD8")]
	public void OnCloseDuetoTimeout()
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x115EFE0", Offset = "0x115EFE0", VA = "0x115EFE0")]
	public void CloseVoice(bool bypassVoice)
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x115F0A4", Offset = "0x115F0A4", VA = "0x115F0A4")]
	public VoicePanel()
	{
	}
}
[Token(Token = "0x20001AB")]
public class VoiceoverManager : MonoBehaviour
{
	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static VoiceoverManager instance;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<AudioData> unseenNPCVoices;

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x115F0AC", Offset = "0x115F0AC", VA = "0x115F0AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x115F100", Offset = "0x115F100", VA = "0x115F100")]
	public float PlayUnSeenEnemy(int hash, string clipid)
	{
		return default(float);
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x115F2CC", Offset = "0x115F2CC", VA = "0x115F2CC")]
	public VoiceoverManager()
	{
	}
}
[Token(Token = "0x20001AC")]
public class PlayerMovement : MonoBehaviour
{
	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CharacterController controller;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float gravity;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float speed;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 velocity;

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x97FAF0", Offset = "0x97FAF0", VA = "0x97FAF0")]
	private void Start()
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x97FAF4", Offset = "0x97FAF4", VA = "0x97FAF4")]
	private void Update()
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x97FC90", Offset = "0x97FC90", VA = "0x97FC90")]
	public PlayerMovement()
	{
	}
}
[Token(Token = "0x20001AD")]
public class RotateTowardPlayer : MonoBehaviour
{
	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform m_player;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform m_cacheTransform;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 m_direction;

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x987180", Offset = "0x987180", VA = "0x987180")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x9871B0", Offset = "0x9871B0", VA = "0x9871B0")]
	private void Update()
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x98722C", Offset = "0x98722C", VA = "0x98722C")]
	public RotateTowardPlayer()
	{
	}
}
[Token(Token = "0x20001AE")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8C0558", Offset = "0x8C0558")]
public class AudioData : ScriptableObject
{
	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int ID;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public StringAudioClipDictionary AudioStreams;

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x1089A24", Offset = "0x1089A24", VA = "0x1089A24")]
	public AudioData()
	{
	}
}
[Token(Token = "0x20001AF")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8C05C4", Offset = "0x8C05C4")]
public class CreturaData : ScriptableObject
{
	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CreaturaVolutaGroupDictionary InformationLookup;

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x109B654", Offset = "0x109B654", VA = "0x109B654")]
	public CreturaData()
	{
	}
}
[Serializable]
[Token(Token = "0x20001B0")]
public class CreatureVoluta : BaseDataGroup
{
	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject _creatureInstance;

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x109B64C", Offset = "0x109B64C", VA = "0x109B64C")]
	public CreatureVoluta()
	{
	}
}
[Token(Token = "0x20001B1")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8C0630", Offset = "0x8C0630")]
public class InquiryGroup : ScriptableObject
{
	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InquiryAccessDictionary inquiryData;

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x10F36EC", Offset = "0x10F36EC", VA = "0x10F36EC")]
	public InquiryGroup()
	{
	}
}
[Serializable]
[Token(Token = "0x20001B2")]
public class InquiryData
{
	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string Question;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Subtitles;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int clipDataID;

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x10F36E4", Offset = "0x10F36E4", VA = "0x10F36E4")]
	public InquiryData()
	{
	}
}
[Token(Token = "0x20001B3")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8C069C", Offset = "0x8C069C")]
public class LevelText : ScriptableObject
{
	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntStringDictionary GameInfoTextInLevel;

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x10FFF00", Offset = "0x10FFF00", VA = "0x10FFF00")]
	public LevelText()
	{
	}
}
[Token(Token = "0x20001B4")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8C0708", Offset = "0x8C0708")]
public class LookUpGroup : ScriptableObject
{
	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InformationLookUpDictionary InformationLookup;

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0x1103230", Offset = "0x1103230", VA = "0x1103230")]
	public LookUpGroup()
	{
	}
}
[Serializable]
[Token(Token = "0x20001B5")]
public class LookUpData : BaseDataGroup
{
	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isChild;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string[] childCategories;

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0x1103228", Offset = "0x1103228", VA = "0x1103228")]
	public LookUpData()
	{
	}
}
[Serializable]
[Token(Token = "0x20001B6")]
public class BaseDataGroup
{
	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string Title;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ShortTitle;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string TextDetails;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite Image;

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x108A44C", Offset = "0x108A44C", VA = "0x108A44C")]
	public BaseDataGroup()
	{
	}
}
[Serializable]
[Token(Token = "0x20001B7")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8C0774", Offset = "0x8C0774")]
public class AddImprtintInfoEvent : BaseEventDetail
{
	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ImprintValue Event_ImprintType;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<string> keysToBeAddedInEvent;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool isOpenImprint;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float imprintUIPopupTime;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isOpenDefination;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	public bool isAddToDefination;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float definationUIPopupTime;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector3 definationUIscale;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Vector3 definationUIAngle;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public bool isDialogWaitingToContinue;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	public bool isOnCloseSendWaitComplete;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
	public bool isEnableHighlightOnImprint;

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x10849C4", Offset = "0x10849C4", VA = "0x10849C4")]
	public AddImprtintInfoEvent()
	{
	}
}
[Serializable]
[Token(Token = "0x20001B8")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8C07E0", Offset = "0x8C07E0")]
public class BaseEventDetail : ScriptableObject
{
	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string sequenceTitle;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform target;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ClipData audioClipData;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public HumanoidController.SolState nextState;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BaseEventDetail NextEvent;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int duration;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int delyaBeforeNextEvent;

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x10849DC", Offset = "0x10849DC", VA = "0x10849DC")]
	public BaseEventDetail()
	{
	}
}
[Serializable]
[Token(Token = "0x20001B9")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8C084C", Offset = "0x8C084C")]
public class EventDetail : BaseEventDetail
{
	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<NPCEventDetail> eventDetailsOfNPC;

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x1175524", Offset = "0x1175524", VA = "0x1175524")]
	public EventDetail()
	{
	}
}
[Token(Token = "0x20001BA")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8C08B8", Offset = "0x8C08B8")]
public class EventSequence : ScriptableObject
{
	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EventDetail[] SequenceBuilder;

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x1178274", Offset = "0x1178274", VA = "0x1178274")]
	public EventSequence()
	{
	}
}
[Token(Token = "0x20001BB")]
public enum GameEventType
{
	[Token(Token = "0x40007E6")]
	SPAWN,
	[Token(Token = "0x40007E7")]
	IDLE,
	[Token(Token = "0x40007E8")]
	WALK,
	[Token(Token = "0x40007E9")]
	PICK,
	[Token(Token = "0x40007EA")]
	WAIT
}
[Serializable]
[Token(Token = "0x20001BC")]
public struct NPCEventDetail
{
	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject NPCRef;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public BaseEventDetail[] NPCEvent;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int CurrentEventCounter;

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0xC71FB8", Offset = "0xC71FB8", VA = "0xC71FB8")]
	public BaseEventDetail getNextEvent()
	{
		return null;
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0xC72000", Offset = "0xC72000", VA = "0xC72000")]
	public BaseEventDetail GetCurrentEvent()
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x20001BD")]
public struct ClipData
{
	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int objectHash;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string clipID;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int dialogID;
}
[Serializable]
[Token(Token = "0x20001BE")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8C0924", Offset = "0x8C0924")]
public class GlobalEventData : ScriptableObject
{
	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EventPlayer.GlobalEventID GlobalEventID;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ClipData AudioClipData;

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x117E16C", Offset = "0x117E16C", VA = "0x117E16C")]
	public GlobalEventData()
	{
	}
}
[Serializable]
[Token(Token = "0x20001BF")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8C0990", Offset = "0x8C0990")]
public class KeywordData : ScriptableObject
{
	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StringSpeechEventDictionary SpeechOptions;

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x10FF118", Offset = "0x10FF118", VA = "0x10FF118")]
	public KeywordData()
	{
	}
}
[Serializable]
[Token(Token = "0x20001C0")]
public struct SpeechEventPathKeywords
{
	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<string> keywords;
}
[Serializable]
[Token(Token = "0x20001C1")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8C09FC", Offset = "0x8C09FC")]
public class SpeechWaitEventDetail : BaseEventDetail
{
	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int RetryAttempt;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int OnRetryDialogID;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int OnFailedDialogID;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int OnSuccessDialogID;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public HumanoidController.SolState OnSuccess;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BaseEventDetail OnSuccessStartEvent;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public HumanoidController.SolState OnRetry;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BaseEventDetail OnRetryStartEvent;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public HumanoidController.SolState OnFailed;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public BaseEventDetail OnFailedStartEvent;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public StringSpeechEventDictionary SpeechOptions;

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x114F168", Offset = "0x114F168", VA = "0x114F168")]
	public SpeechWaitEventDetail()
	{
	}
}
[Token(Token = "0x20001C2")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8C0A68", Offset = "0x8C0A68")]
public class StorySequence : ScriptableObject
{
	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<EventSequence> SequencesInStory;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int CurrentEventCounter;

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x114F8E0", Offset = "0x114F8E0", VA = "0x114F8E0")]
	public EventSequence getNextEvent()
	{
		return null;
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x114F95C", Offset = "0x114F95C", VA = "0x114F95C")]
	public EventSequence GetCurrentEvent()
	{
		return null;
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x114F9C8", Offset = "0x114F9C8", VA = "0x114F9C8")]
	public StorySequence()
	{
	}
}
[Token(Token = "0x20001C3")]
public class AuthManager : MonoBehaviour
{
	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x1089DB4", Offset = "0x1089DB4", VA = "0x1089DB4")]
	public AuthManager()
	{
	}
}
[Token(Token = "0x20001C4")]
public class DistanceJoint3D : MonoBehaviour
{
	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform ConnectedRigidbody;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool DetermineDistanceOnStart;

	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Distance;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Spring;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float Damper;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Rigidbody Rigidbody;

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x1174A68", Offset = "0x1174A68", VA = "0x1174A68")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x1174AC4", Offset = "0x1174AC4", VA = "0x1174AC4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x1174BA4", Offset = "0x1174BA4", VA = "0x1174BA4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x1174D58", Offset = "0x1174D58", VA = "0x1174D58")]
	public DistanceJoint3D()
	{
	}
}
[Token(Token = "0x20001C5")]
public class Follow : MonoBehaviour
{
	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Follow instance;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Transform> waypointsLeft;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Transform> waypointsRight;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform targetWaypointLeft;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform targetWaypointRight;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int targetWayPointIndex;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float minDistance;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int lastWayPointIndex1;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int lastWayPointIndex2;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool set;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float movementSpeed;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float roatationSpeed;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AK.Wwise.Event[] sfx;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Quaternion rotationToTargetLeft;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion rotationToTargetRight;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private GameObject syringeInteractionArea;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private FollowWp followWp;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public LookAtPlayer lookatplayer;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Animator anim;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int i;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private int saveRoute;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private uint stopsound;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float distance;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float movementStep;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float rotationStep;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 directionToTargetLeft;

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x117B3F0", Offset = "0x117B3F0", VA = "0x117B3F0")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x117B544", Offset = "0x117B544", VA = "0x117B544")]
	private void Update()
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x117B848", Offset = "0x117B848", VA = "0x117B848")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x117B898", Offset = "0x117B898", VA = "0x117B898")]
	public void stopBattleSound()
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x117B7AC", Offset = "0x117B7AC", VA = "0x117B7AC")]
	private void CheckDistanceToWayPoint(float currentDistance)
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x117B900", Offset = "0x117B900", VA = "0x117B900")]
	private void UpdateTargetWayypoint()
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x117B6D0", Offset = "0x117B6D0", VA = "0x117B6D0")]
	private void UpdateTargetDirection(Quaternion rotationToTarget)
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x117B9B8", Offset = "0x117B9B8", VA = "0x117B9B8")]
	public void FollowWpTurnON()
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x117B9FC", Offset = "0x117B9FC", VA = "0x117B9FC")]
	public void TigerSFX(string sfxName)
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x117BD4C", Offset = "0x117BD4C", VA = "0x117BD4C")]
	public void BattleAlmostFinish()
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x117BDA4", Offset = "0x117BDA4", VA = "0x117BDA4")]
	public void BattleEnding()
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x117750C", Offset = "0x117750C", VA = "0x117750C")]
	public void ToggleSyringeInteraction(bool status)
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x117BDFC", Offset = "0x117BDFC", VA = "0x117BDFC")]
	public Follow()
	{
	}
}
[Token(Token = "0x20001C6")]
public class Follow1 : MonoBehaviour
{
	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Transform> waypointsLeft;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform targetWaypoint;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int targetWayPointIndex;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float minDistance;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int lastWayPointIndex;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool set;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float movementSpeed;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float roatationSpeed;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion rotationToTarget;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Animator anim;

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x117BECC", Offset = "0x117BECC", VA = "0x117BECC")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x117BF90", Offset = "0x117BF90", VA = "0x117BF90")]
	private void Update()
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x117C1CC", Offset = "0x117C1CC", VA = "0x117C1CC")]
	private void CheckDistanceToWayPoint(float currentDistance)
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x117C2A0", Offset = "0x117C2A0", VA = "0x117C2A0")]
	private void UpdateTargetWayypoint()
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x117C118", Offset = "0x117C118", VA = "0x117C118")]
	private void UpdateTargetDirection(Quaternion rotationToTarget)
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x117C3A4", Offset = "0x117C3A4", VA = "0x117C3A4")]
	public void StopTigerRotation()
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x117C3A8", Offset = "0x117C3A8", VA = "0x117C3A8")]
	public void RunAnim()
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x117C3B4", Offset = "0x117C3B4", VA = "0x117C3B4")]
	public Follow1()
	{
	}
}
[Token(Token = "0x20001C7")]
public class FollowWp : MonoBehaviour
{
	[Token(Token = "0x20001C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0AD4", Offset = "0x8C0AD4")]
	private sealed class <TigerChangePos>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FollowWp <>4__this;

		[Token(Token = "0x1700009E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000704")]
			[Address(RVA = "0x10A7A50", Offset = "0x10A7A50", VA = "0x10A7A50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700009F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000706")]
			[Address(RVA = "0x10A7A98", Offset = "0x10A7A98", VA = "0x10A7A98", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000701")]
		[Address(RVA = "0x10A76AC", Offset = "0x10A76AC", VA = "0x10A76AC")]
		[DebuggerHidden]
		public <TigerChangePos>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000702")]
		[Address(RVA = "0x10A76D8", Offset = "0x10A76D8", VA = "0x10A76D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000703")]
		[Address(RVA = "0x10A76DC", Offset = "0x10A76DC", VA = "0x10A76DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000705")]
		[Address(RVA = "0x10A7A58", Offset = "0x10A7A58", VA = "0x10A7A58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001C9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0AE4", Offset = "0x8C0AE4")]
	private sealed class <StopParticleEffect>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FollowWp <>4__this;

		[Token(Token = "0x170000A0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600070A")]
			[Address(RVA = "0x10A765C", Offset = "0x10A765C", VA = "0x10A765C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600070C")]
			[Address(RVA = "0x10A76A4", Offset = "0x10A76A4", VA = "0x10A76A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000707")]
		[Address(RVA = "0x10A7570", Offset = "0x10A7570", VA = "0x10A7570")]
		[DebuggerHidden]
		public <StopParticleEffect>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000708")]
		[Address(RVA = "0x10A759C", Offset = "0x10A759C", VA = "0x10A759C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000709")]
		[Address(RVA = "0x10A75A0", Offset = "0x10A75A0", VA = "0x10A75A0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600070B")]
		[Address(RVA = "0x10A7664", Offset = "0x10A7664", VA = "0x10A7664", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform playerColliderPos;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform PlayerCollidePosLeft;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform PlayerCollidePosRight;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 pos;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform tigerStopPos;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool set;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Follow follow;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Animator anim;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float random1;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float random2;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float random3;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float randomPos;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject dustEffect;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private LookAtPlayer lookat;

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x117C458", Offset = "0x117C458", VA = "0x117C458")]
	private void Start()
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x117C61C", Offset = "0x117C61C", VA = "0x117C61C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x117C6D8", Offset = "0x117C6D8", VA = "0x117C6D8")]
	public void ResetTigerPos()
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x117C5F0", Offset = "0x117C5F0", VA = "0x117C5F0")]
	public void ChangePos()
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x117C778", Offset = "0x117C778", VA = "0x117C778")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C742C", Offset = "0x8C742C")]
	private IEnumerator TigerChangePos()
	{
		return null;
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x117C7F0", Offset = "0x117C7F0", VA = "0x117C7F0")]
	public void DustParticleEffect()
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x117C838", Offset = "0x117C838", VA = "0x117C838")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C748C", Offset = "0x8C748C")]
	private IEnumerator StopParticleEffect()
	{
		return null;
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x117C8B0", Offset = "0x117C8B0", VA = "0x117C8B0")]
	public FollowWp()
	{
	}
}
[Token(Token = "0x20001CA")]
public class FrictionJoint3D : MonoBehaviour
{
	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C3048", Offset = "0x8C3048")]
	public float Friction;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected Rigidbody Rigidbody;

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x117C8C8", Offset = "0x117C8C8", VA = "0x117C8C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x117C924", Offset = "0x117C924", VA = "0x117C924")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x117C9B4", Offset = "0x117C9B4", VA = "0x117C9B4")]
	public FrictionJoint3D()
	{
	}
}
[Token(Token = "0x20001CB")]
public class GameManager : MonoBehaviour
{
	[Token(Token = "0x6000710")]
	[Address(RVA = "0x117C9BC", Offset = "0x117C9BC", VA = "0x117C9BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0x117C9C0", Offset = "0x117C9C0", VA = "0x117C9C0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0x117C9C4", Offset = "0x117C9C4", VA = "0x117C9C4")]
	public void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x117CAC4", Offset = "0x117CAC4", VA = "0x117CAC4")]
	public GameManager()
	{
	}
}
[Token(Token = "0x20001CC")]
public class GetControllerVelocity : MonoBehaviour
{
	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource whipAudio;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 pos;

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x117E06C", Offset = "0x117E06C", VA = "0x117E06C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0x117E070", Offset = "0x117E070", VA = "0x117E070")]
	private void Update()
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0x117E164", Offset = "0x117E164", VA = "0x117E164")]
	public GetControllerVelocity()
	{
	}
}
[Token(Token = "0x20001CD")]
public class LoadLevelTwo : MonoBehaviour
{
	[Token(Token = "0x6000717")]
	[Address(RVA = "0x10FFF08", Offset = "0x10FFF08", VA = "0x10FFF08")]
	public void LoadLevel()
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0x10FFF7C", Offset = "0x10FFF7C", VA = "0x10FFF7C")]
	public LoadLevelTwo()
	{
	}
}
[Token(Token = "0x20001CE")]
public class LoginUIManager : MonoBehaviour
{
	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LoginUIManager instance;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject loginUI;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject registerUI;

	[Token(Token = "0x6000719")]
	[Address(RVA = "0x11026EC", Offset = "0x11026EC", VA = "0x11026EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0x1102854", Offset = "0x1102854", VA = "0x1102854")]
	public void LoginScreen()
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x1102898", Offset = "0x1102898", VA = "0x1102898")]
	public void RegisterScreen()
	{
	}

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x11028DC", Offset = "0x11028DC", VA = "0x11028DC")]
	public LoginUIManager()
	{
	}
}
[Token(Token = "0x20001CF")]
public class LookAtPlayer : MonoBehaviour
{
	[Token(Token = "0x20001D0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0AF4", Offset = "0x8C0AF4")]
	private sealed class <LookAt>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LookAtPlayer <>4__this;

		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <time>5__2;

		[Token(Token = "0x170000A2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000725")]
			[Address(RVA = "0x10AED14", Offset = "0x10AED14", VA = "0x10AED14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000727")]
			[Address(RVA = "0x10AED5C", Offset = "0x10AED5C", VA = "0x10AED5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000722")]
		[Address(RVA = "0x10AEB7C", Offset = "0x10AEB7C", VA = "0x10AEB7C")]
		[DebuggerHidden]
		public <LookAt>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000723")]
		[Address(RVA = "0x10AEBA8", Offset = "0x10AEBA8", VA = "0x10AEBA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000724")]
		[Address(RVA = "0x10AEBAC", Offset = "0x10AEBAC", VA = "0x10AEBAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000726")]
		[Address(RVA = "0x10AED1C", Offset = "0x10AED1C", VA = "0x10AED1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 initialPos;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 newPosCam;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Quaternion lookRotation;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Coroutine LookCorotine;

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x1103034", Offset = "0x1103034", VA = "0x1103034")]
	private void Start()
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0x1103070", Offset = "0x1103070", VA = "0x1103070")]
	public void StartRotating()
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x110311C", Offset = "0x110311C", VA = "0x110311C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C758C", Offset = "0x8C758C")]
	public IEnumerator LookAt()
	{
		return null;
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x1103194", Offset = "0x1103194", VA = "0x1103194")]
	private void Update()
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x1103218", Offset = "0x1103218", VA = "0x1103218")]
	public LookAtPlayer()
	{
	}
}
[Token(Token = "0x20001D1")]
public class Music : MonoBehaviour
{
	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] musicClip;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AudioSource audio;

	[Token(Token = "0x6000728")]
	[Address(RVA = "0xC71C14", Offset = "0xC71C14", VA = "0xC71C14")]
	private void Start()
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0xC71CE4", Offset = "0xC71CE4", VA = "0xC71CE4")]
	public void PlayClip(int i)
	{
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0xC71D8C", Offset = "0xC71D8C", VA = "0xC71D8C")]
	public Music()
	{
	}
}
[Token(Token = "0x20001D2")]
public class MusicLevel2 : MonoBehaviour
{
	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] musicClip;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource audio;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject tiger;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool set;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool outro;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool postBattle;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject healthCanvas;

	[Token(Token = "0x600072B")]
	[Address(RVA = "0xC71D94", Offset = "0xC71D94", VA = "0xC71D94")]
	private void Start()
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0xC71DFC", Offset = "0xC71DFC", VA = "0xC71DFC")]
	public void PlayClip(int i)
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0xC71E74", Offset = "0xC71E74", VA = "0xC71E74")]
	public void Outro()
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0xC71EBC", Offset = "0xC71EBC", VA = "0xC71EBC")]
	private void Update()
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0xC71F9C", Offset = "0xC71F9C", VA = "0xC71F9C")]
	public MusicLevel2()
	{
	}
}
[Token(Token = "0x20001D3")]
public class RopeRoot : MonoBehaviour
{
	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float RigidbodyMass;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ColliderRadius;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float JointSpring;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float JointDamper;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 RotationOffset;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 PositionOffset;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected List<Transform> CopySource;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected List<Transform> CopyDestination;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static GameObject RigidBodyContainer;

	[Token(Token = "0x6000730")]
	[Address(RVA = "0x985E5C", Offset = "0x985E5C", VA = "0x985E5C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0x985FCC", Offset = "0x985FCC", VA = "0x985FCC")]
	private void AddChildren(Transform parent)
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0x9862E8", Offset = "0x9862E8", VA = "0x9862E8")]
	public void Update()
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x9864CC", Offset = "0x9864CC", VA = "0x9864CC")]
	public RopeRoot()
	{
	}
}
[Token(Token = "0x20001D4")]
public class SwitchScene : MonoBehaviour
{
	[Token(Token = "0x6000734")]
	[Address(RVA = "0x114FB00", Offset = "0x114FB00", VA = "0x114FB00")]
	private void Start()
	{
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0x114FB04", Offset = "0x114FB04", VA = "0x114FB04")]
	public void Level2()
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x114FB78", Offset = "0x114FB78", VA = "0x114FB78")]
	public void Level1()
	{
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x114FBEC", Offset = "0x114FBEC", VA = "0x114FBEC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x114FBF0", Offset = "0x114FBF0", VA = "0x114FBF0")]
	public SwitchScene()
	{
	}
}
[Token(Token = "0x20001D5")]
public class TigerCollideChecker : MonoBehaviour
{
	[Token(Token = "0x20001D6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0B04", Offset = "0x8C0B04")]
	private sealed class <DisableCanvas>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TigerCollideChecker <>4__this;

		[Token(Token = "0x170000A4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000740")]
			[Address(RVA = "0xEA3A60", Offset = "0xEA3A60", VA = "0xEA3A60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000742")]
			[Address(RVA = "0xEA3AA8", Offset = "0xEA3AA8", VA = "0xEA3AA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600073D")]
		[Address(RVA = "0xEA3974", Offset = "0xEA3974", VA = "0xEA3974")]
		[DebuggerHidden]
		public <DisableCanvas>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600073E")]
		[Address(RVA = "0xEA39A0", Offset = "0xEA39A0", VA = "0xEA39A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600073F")]
		[Address(RVA = "0xEA39A4", Offset = "0xEA39A4", VA = "0xEA39A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000741")]
		[Address(RVA = "0xEA3A68", Offset = "0xEA3A68", VA = "0xEA3A68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int count;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject bloodCanvas;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Slider slider;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool checkTigerDie;

	[Token(Token = "0x6000739")]
	[Address(RVA = "0x1155438", Offset = "0x1155438", VA = "0x1155438")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x115587C", Offset = "0x115587C", VA = "0x115587C")]
	public void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x1155804", Offset = "0x1155804", VA = "0x1155804")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C763C", Offset = "0x8C763C")]
	private IEnumerator DisableCanvas()
	{
		return null;
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0x1155880", Offset = "0x1155880", VA = "0x1155880")]
	public TigerCollideChecker()
	{
	}
}
[Token(Token = "0x20001D7")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C0B14", Offset = "0x8C0B14")]
public class TigerCollider : MonoBehaviour
{
	[Token(Token = "0x20001D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0B74", Offset = "0x8C0B74")]
	private sealed class <StopParticleEffect>d__29 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TigerCollider <>4__this;

		[Token(Token = "0x170000A6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000750")]
			[Address(RVA = "0xEA3E60", Offset = "0xEA3E60", VA = "0xEA3E60", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000752")]
			[Address(RVA = "0xEA3EA8", Offset = "0xEA3EA8", VA = "0xEA3EA8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600074D")]
		[Address(RVA = "0xEA3D60", Offset = "0xEA3D60", VA = "0xEA3D60")]
		[DebuggerHidden]
		public <StopParticleEffect>d__29(int <>1__state)
		{
		}

		[Token(Token = "0x600074E")]
		[Address(RVA = "0xEA3D8C", Offset = "0xEA3D8C", VA = "0xEA3D8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0xEA3D90", Offset = "0xEA3D90", VA = "0xEA3D90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000751")]
		[Address(RVA = "0xEA3E68", Offset = "0xEA3E68", VA = "0xEA3E68", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0B84", Offset = "0x8C0B84")]
	private sealed class <DisableScript>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TigerCollider <>4__this;

		[Token(Token = "0x170000A8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000756")]
			[Address(RVA = "0xEA3D10", Offset = "0xEA3D10", VA = "0xEA3D10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000758")]
			[Address(RVA = "0xEA3D58", Offset = "0xEA3D58", VA = "0xEA3D58", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000753")]
		[Address(RVA = "0xEA3AB0", Offset = "0xEA3AB0", VA = "0xEA3AB0")]
		[DebuggerHidden]
		public <DisableScript>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6000754")]
		[Address(RVA = "0xEA3ADC", Offset = "0xEA3ADC", VA = "0xEA3ADC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000755")]
		[Address(RVA = "0xEA3AE0", Offset = "0xEA3AE0", VA = "0xEA3AE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000757")]
		[Address(RVA = "0xEA3D18", Offset = "0xEA3D18", VA = "0xEA3D18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ObiSolver solver;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int pitasarahPoints;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Slider slider;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text textPitasarahPoints;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Animator tigerAnim;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject tiger;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private FollowWp followWp;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Follow follow;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LookAtPlayer lookatplayer;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool checkPitasarah;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int counter;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject music1;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private MusicLevel2 music;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject tigerparticleEffect;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject dustEffect;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool tigerDie;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool triggerNextConversation;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioSource audio1;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject battleOutro;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool set;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static TigerCollider _instance1;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	public bool checkTigerDie;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
	private bool m_isAbleToHitTiger;

	[Token(Token = "0x6000743")]
	[Address(RVA = "0x1155890", Offset = "0x1155890", VA = "0x1155890")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0x115592C", Offset = "0x115592C", VA = "0x115592C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0x1155A94", Offset = "0x1155A94", VA = "0x1155A94")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0x1155B28", Offset = "0x1155B28", VA = "0x1155B28")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0x1155BBC", Offset = "0x1155BBC", VA = "0x1155BBC")]
	private void Solver_OnCollision(object sender, ObiSolver.ObiCollisionEventArgs e)
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0x11562E4", Offset = "0x11562E4", VA = "0x11562E4")]
	private void ResetIsAbleToHitTiger()
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0x11561F4", Offset = "0x11561F4", VA = "0x11561F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C76EC", Offset = "0x8C76EC")]
	private IEnumerator StopParticleEffect()
	{
		return null;
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0x115626C", Offset = "0x115626C", VA = "0x115626C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C774C", Offset = "0x8C774C")]
	private IEnumerator DisableScript()
	{
		return null;
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x11562F0", Offset = "0x11562F0", VA = "0x11562F0")]
	public TigerCollider()
	{
	}
}
[Token(Token = "0x20001DA")]
public class TigerController : MonoBehaviour
{
	[Token(Token = "0x20001DB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0B94", Offset = "0x8C0B94")]
	private sealed class <StartTigerAnim>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TigerController <>4__this;

		[Token(Token = "0x170000AA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000760")]
			[Address(RVA = "0xEA3F9C", Offset = "0xEA3F9C", VA = "0xEA3F9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000762")]
			[Address(RVA = "0xEA3FE4", Offset = "0xEA3FE4", VA = "0xEA3FE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600075D")]
		[Address(RVA = "0xEA3EB0", Offset = "0xEA3EB0", VA = "0xEA3EB0")]
		[DebuggerHidden]
		public <StartTigerAnim>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x600075E")]
		[Address(RVA = "0xEA3EDC", Offset = "0xEA3EDC", VA = "0xEA3EDC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600075F")]
		[Address(RVA = "0xEA3EE0", Offset = "0xEA3EE0", VA = "0xEA3EE0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000761")]
		[Address(RVA = "0xEA3FA4", Offset = "0xEA3FA4", VA = "0xEA3FA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject tiger;

	[Token(Token = "0x6000759")]
	[Address(RVA = "0x1156310", Offset = "0x1156310", VA = "0x1156310")]
	private void Start()
	{
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x115633C", Offset = "0x115633C", VA = "0x115633C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C784C", Offset = "0x8C784C")]
	private IEnumerator StartTigerAnim()
	{
		return null;
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x11563B4", Offset = "0x11563B4", VA = "0x11563B4")]
	private void Update()
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x11563B8", Offset = "0x11563B8", VA = "0x11563B8")]
	public TigerController()
	{
	}
}
[Token(Token = "0x20001DC")]
public class TigerMusic : MonoBehaviour
{
	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AK.Wwise.Event[] battleSfx;

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x11563C0", Offset = "0x11563C0", VA = "0x11563C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x1156414", Offset = "0x1156414", VA = "0x1156414")]
	public void PlotMusic_BeforeTigerBattle()
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x1156468", Offset = "0x1156468", VA = "0x1156468")]
	public void PlotMusic_PostTigerBattle()
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x11564C0", Offset = "0x11564C0", VA = "0x11564C0")]
	public TigerMusic()
	{
	}
}
[Token(Token = "0x20001DD")]
public class VOController : MonoBehaviour
{
	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] vo1;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource audio;

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x115EA48", Offset = "0x115EA48", VA = "0x115EA48")]
	private void Start()
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x115EAA4", Offset = "0x115EAA4", VA = "0x115EAA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x115EB64", Offset = "0x115EB64", VA = "0x115EB64")]
	public VOController()
	{
	}
}
[Token(Token = "0x20001DE")]
public class WhipManager : MonoBehaviour
{
	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject whipHandle;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject whipBody;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool set;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject rightController;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GetControllerVelocity velocity;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C3060", Offset = "0x8C3060")]
	[SerializeField]
	private Transform m_whipHandlePosition;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform m_whipParent;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private ObiSolver m_whipSolver;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_isAlreadyActivate;

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x115FA44", Offset = "0x115FA44", VA = "0x115FA44")]
	private void Start()
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x115FAA8", Offset = "0x115FAA8", VA = "0x115FAA8")]
	private void Update()
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x115FC34", Offset = "0x115FC34", VA = "0x115FC34")]
	public WhipManager()
	{
	}
}
[Token(Token = "0x20001DF")]
public class WhiteBoardMarker : MonoBehaviour
{
	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform _tip;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int _penSize;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Renderer _renderer;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color[] _color;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _tipHeight;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private RaycastHit _touch;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Whitebord _whiteboard;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2 _touchPos;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector2 _lastTouchPos;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool _touchedLastFrame;

	[Token(Token = "0x600076E")]
	[Address(RVA = "0x115FC40", Offset = "0x115FC40", VA = "0x115FC40")]
	private void Start()
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0x115FD24", Offset = "0x115FD24", VA = "0x115FD24")]
	private void Update()
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0x115FD28", Offset = "0x115FD28", VA = "0x115FD28")]
	private void Draw()
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0x1160038", Offset = "0x1160038", VA = "0x1160038")]
	public WhiteBoardMarker()
	{
	}
}
[Token(Token = "0x20001E0")]
public class Whitebord : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001E1")]
	public class AnnotateImageRequests
	{
		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<AnnotateImageRequest> requests;

		[Token(Token = "0x600077D")]
		[Address(RVA = "0xEA606C", Offset = "0xEA606C", VA = "0xEA606C")]
		public AnnotateImageRequests()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001E2")]
	public class AnnotateImageRequest
	{
		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Image image;

		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Feature> features;

		[Token(Token = "0x600077E")]
		[Address(RVA = "0xEA6064", Offset = "0xEA6064", VA = "0xEA6064")]
		public AnnotateImageRequest()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001E3")]
	public class Image
	{
		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string content;

		[Token(Token = "0x600077F")]
		[Address(RVA = "0xEA607C", Offset = "0xEA607C", VA = "0xEA607C")]
		public Image()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001E4")]
	public class Feature
	{
		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string type;

		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int maxResults;

		[Token(Token = "0x6000780")]
		[Address(RVA = "0xEA6074", Offset = "0xEA6074", VA = "0xEA6074")]
		public Feature()
		{
		}
	}

	[Token(Token = "0x20001E5")]
	public enum FeatureType
	{
		[Token(Token = "0x40008BA")]
		TYPE_UNSPECIFIED,
		[Token(Token = "0x40008BB")]
		FACE_DETECTION,
		[Token(Token = "0x40008BC")]
		LANDMARK_DETECTION,
		[Token(Token = "0x40008BD")]
		LOGO_DETECTION,
		[Token(Token = "0x40008BE")]
		LABEL_DETECTION,
		[Token(Token = "0x40008BF")]
		TEXT_DETECTION,
		[Token(Token = "0x40008C0")]
		SAFE_SEARCH_DETECTION,
		[Token(Token = "0x40008C1")]
		IMAGE_PROPERTIES
	}

	[Token(Token = "0x20001E6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0BA4", Offset = "0x8C0BA4")]
	private sealed class <getResponse>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string jsonData;

		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Whitebord <>4__this;

		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<bool> callback;

		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private WWW <www>5__2;

		[Token(Token = "0x170000AC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000785")]
			[Address(RVA = "0xEA6014", Offset = "0xEA6014", VA = "0xEA6014", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000787")]
			[Address(RVA = "0xEA605C", Offset = "0xEA605C", VA = "0xEA605C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000781")]
		[Address(RVA = "0xEA56C4", Offset = "0xEA56C4", VA = "0xEA56C4")]
		[DebuggerHidden]
		public <getResponse>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000782")]
		[Address(RVA = "0xEA56F0", Offset = "0xEA56F0", VA = "0xEA56F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000783")]
		[Address(RVA = "0xEA57C8", Offset = "0xEA57C8", VA = "0xEA57C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000784")]
		[Address(RVA = "0xEA570C", Offset = "0xEA570C", VA = "0xEA570C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000786")]
		[Address(RVA = "0xEA601C", Offset = "0xEA601C", VA = "0xEA601C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001E7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0BB4", Offset = "0x8C0BB4")]
	private sealed class <convertImage>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Whitebord <>4__this;

		[Token(Token = "0x170000AE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600078B")]
			[Address(RVA = "0xEA5674", Offset = "0xEA5674", VA = "0xEA5674", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600078D")]
			[Address(RVA = "0xEA56BC", Offset = "0xEA56BC", VA = "0xEA56BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000788")]
		[Address(RVA = "0xEA555C", Offset = "0xEA555C", VA = "0xEA555C")]
		[DebuggerHidden]
		public <convertImage>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000789")]
		[Address(RVA = "0xEA5588", Offset = "0xEA5588", VA = "0xEA5588", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600078A")]
		[Address(RVA = "0xEA558C", Offset = "0xEA558C", VA = "0xEA558C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600078C")]
		[Address(RVA = "0xEA567C", Offset = "0xEA567C", VA = "0xEA567C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Whitebord instance;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 textureSize;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool processed;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<string, string> headers;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string url;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string apiKey;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float captureIntervalSeconds;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int maxResults;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMesh renderText;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text responseText;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text responseArray;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private FeatureType featureType;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int maxAllowedLength;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject OptionsPanel;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Renderer renderer;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool isProcessing;

	[Token(Token = "0x6000772")]
	[Address(RVA = "0x1160048", Offset = "0x1160048", VA = "0x1160048")]
	private string txtToBase64(Texture2D texture)
	{
		return null;
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0x11600C0", Offset = "0x11600C0", VA = "0x11600C0")]
	private string generateJSON(Texture2D texture)
	{
		return null;
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0x1160360", Offset = "0x1160360", VA = "0x1160360")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C78FC", Offset = "0x8C78FC")]
	private IEnumerator getResponse(string jsonData, [Optional] Action<bool> callback)
	{
		return null;
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0x1160408", Offset = "0x1160408", VA = "0x1160408")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C795C", Offset = "0x8C795C")]
	public IEnumerator convertImage()
	{
		return null;
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0x1160480", Offset = "0x1160480", VA = "0x1160480")]
	public void SendTexture()
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0x11604D0", Offset = "0x11604D0", VA = "0x11604D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0x11605F8", Offset = "0x11605F8", VA = "0x11605F8")]
	public void OnDone()
	{
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0x11606D0", Offset = "0x11606D0", VA = "0x11606D0")]
	public void OnClear()
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0x11607A4", Offset = "0x11607A4", VA = "0x11607A4")]
	public string GetWrittenName()
	{
		return null;
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0x1160694", Offset = "0x1160694", VA = "0x1160694")]
	public void ToggleOptionsPanel(bool value)
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0x11608EC", Offset = "0x11608EC", VA = "0x11608EC")]
	public Whitebord()
	{
	}
}
[Token(Token = "0x20001E8")]
public class boardController : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001E9")]
	public class AnnotateImageRequests
	{
		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<AnnotateImageRequest> requests;

		[Token(Token = "0x6000797")]
		[Address(RVA = "0xEA6ECC", Offset = "0xEA6ECC", VA = "0xEA6ECC")]
		public AnnotateImageRequests()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001EA")]
	public class AnnotateImageRequest
	{
		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Image image;

		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Feature> features;

		[Token(Token = "0x6000798")]
		[Address(RVA = "0xEA6EC4", Offset = "0xEA6EC4", VA = "0xEA6EC4")]
		public AnnotateImageRequest()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001EB")]
	public class Image
	{
		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string content;

		[Token(Token = "0x6000799")]
		[Address(RVA = "0xEA6EDC", Offset = "0xEA6EDC", VA = "0xEA6EDC")]
		public Image()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001EC")]
	public class Feature
	{
		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string type;

		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int maxResults;

		[Token(Token = "0x600079A")]
		[Address(RVA = "0xEA6ED4", Offset = "0xEA6ED4", VA = "0xEA6ED4")]
		public Feature()
		{
		}
	}

	[Token(Token = "0x20001ED")]
	public enum FeatureType
	{
		[Token(Token = "0x40008E7")]
		TYPE_UNSPECIFIED,
		[Token(Token = "0x40008E8")]
		FACE_DETECTION,
		[Token(Token = "0x40008E9")]
		LANDMARK_DETECTION,
		[Token(Token = "0x40008EA")]
		LOGO_DETECTION,
		[Token(Token = "0x40008EB")]
		LABEL_DETECTION,
		[Token(Token = "0x40008EC")]
		TEXT_DETECTION,
		[Token(Token = "0x40008ED")]
		SAFE_SEARCH_DETECTION,
		[Token(Token = "0x40008EE")]
		IMAGE_PROPERTIES
	}

	[Token(Token = "0x20001EE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0BC4", Offset = "0x8C0BC4")]
	private sealed class <getResponse>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string jsonData;

		[Token(Token = "0x40008F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public boardController <>4__this;

		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WWW <www>5__2;

		[Token(Token = "0x170000B0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600079F")]
			[Address(RVA = "0xEA6E74", Offset = "0xEA6E74", VA = "0xEA6E74", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007A1")]
			[Address(RVA = "0xEA6EBC", Offset = "0xEA6EBC", VA = "0xEA6EBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600079B")]
		[Address(RVA = "0xEA6588", Offset = "0xEA6588", VA = "0xEA6588")]
		[DebuggerHidden]
		public <getResponse>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x600079C")]
		[Address(RVA = "0xEA65B4", Offset = "0xEA65B4", VA = "0xEA65B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600079D")]
		[Address(RVA = "0xEA668C", Offset = "0xEA668C", VA = "0xEA668C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600079E")]
		[Address(RVA = "0xEA65D0", Offset = "0xEA65D0", VA = "0xEA65D0")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0xEA6E7C", Offset = "0xEA6E7C", VA = "0xEA6E7C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001EF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0BD4", Offset = "0x8C0BD4")]
	private sealed class <convertImage>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public boardController <>4__this;

		[Token(Token = "0x170000B2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007A5")]
			[Address(RVA = "0xEA6538", Offset = "0xEA6538", VA = "0xEA6538", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007A7")]
			[Address(RVA = "0xEA6580", Offset = "0xEA6580", VA = "0xEA6580", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007A2")]
		[Address(RVA = "0xEA63FC", Offset = "0xEA63FC", VA = "0xEA63FC")]
		[DebuggerHidden]
		public <convertImage>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x60007A3")]
		[Address(RVA = "0xEA6428", Offset = "0xEA6428", VA = "0xEA6428", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0xEA642C", Offset = "0xEA642C", VA = "0xEA642C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007A6")]
		[Address(RVA = "0xEA6540", Offset = "0xEA6540", VA = "0xEA6540", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Texture2D texture;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Color[] cols;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform pencil;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform eraser;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool erasing;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool drawing;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string url;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string apiKey;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float captureIntervalSeconds;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private FeatureType featureType;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int maxResults;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject resPanel;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Text responseText;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Text responseArray;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public TextMesh renderText;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool processed;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int textureSize;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int brushSize;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private WebCamTexture webcamTexture;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Texture2D texture2D;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Dictionary<string, string> headers;

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x109FAC0", Offset = "0x109FAC0", VA = "0x109FAC0")]
	private string txtToBase64(Texture2D texture)
	{
		return null;
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x109FB38", Offset = "0x109FB38", VA = "0x109FB38")]
	private string generateJSON(Texture2D texture)
	{
		return null;
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x109FDD8", Offset = "0x109FDD8", VA = "0x109FDD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C7A5C", Offset = "0x8C7A5C")]
	private IEnumerator getResponse(string jsonData)
	{
		return null;
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x109FE6C", Offset = "0x109FE6C", VA = "0x109FE6C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x10A0020", Offset = "0x10A0020", VA = "0x10A0020")]
	public void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x10A0174", Offset = "0x10A0174", VA = "0x10A0174")]
	public void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x10A0284", Offset = "0x10A0284", VA = "0x10A0284")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C7ABC", Offset = "0x8C7ABC")]
	public IEnumerator convertImage()
	{
		return null;
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x10A02FC", Offset = "0x10A02FC", VA = "0x10A02FC")]
	public void Update()
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x10A0758", Offset = "0x10A0758", VA = "0x10A0758")]
	public boardController()
	{
	}
}
[Token(Token = "0x20001F0")]
public struct Box
{
	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int x;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int y;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int w;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int h;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int refcount;
}
[Token(Token = "0x20001F1")]
public struct Boxa
{
	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int n;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int nalloc;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int refcount;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr box;
}
[Token(Token = "0x20001F2")]
public class TesseractDemoScript : MonoBehaviour
{
	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D imageToRecognize;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TMP_Text displayText;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TesseractDriver _tesseractDriver;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string _text;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Texture2D _texture;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Renderer renderer;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static TesseractDemoScript instance;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector2 textureSize;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Texture2D texture;

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0x1152FA8", Offset = "0x1152FA8", VA = "0x1152FA8")]
	private void Start()
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0x11530D0", Offset = "0x11530D0", VA = "0x11530D0")]
	public void UpdatedTexture()
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0x1153240", Offset = "0x1153240", VA = "0x1153240")]
	private void Recoginze(Texture2D outputTexture)
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0x1153764", Offset = "0x1153764", VA = "0x1153764")]
	private void OnSetupCompleteRecognize()
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0x1153308", Offset = "0x1153308", VA = "0x1153308")]
	private void ClearTextDisplay()
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0x1153578", Offset = "0x1153578", VA = "0x1153578")]
	private void AddToTextDisplay(string text, bool isError = false)
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0x1153804", Offset = "0x1153804", VA = "0x1153804")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0x1153800", Offset = "0x1153800", VA = "0x1153800")]
	private void SetImageDisplay()
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0x1153830", Offset = "0x1153830", VA = "0x1153830")]
	public TesseractDemoScript()
	{
	}
}
[Token(Token = "0x20001F3")]
public class TesseractDriver
{
	[StructLayout(3)]
	[Token(Token = "0x20001F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0BE4", Offset = "0x8C0BE4")]
	private struct <CopyAllFilesToPersistentData>d__5 : IAsyncStateMachine
	{
		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<string> fileNames;

		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TesseractDriver <>4__this;

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityAction onSetupComplete;

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <fromPath>5__2;

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <toPath>5__3;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<string>.Enumerator <>7__wrap3;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private string <fileName>5__5;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private WWW <www>5__6;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0xEA2848", Offset = "0xEA2848", VA = "0xEA2848", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0xEA3128", Offset = "0xEA3128", VA = "0xEA3128", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private TesseractWrapper _tesseract;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly List<string> fileNames;

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0x1153358", Offset = "0x1153358", VA = "0x1153358")]
	public string CheckTessVersion()
	{
		return null;
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0x11536E8", Offset = "0x11536E8", VA = "0x11536E8")]
	public void Setup(UnityAction onSetupComplete)
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0x1153A58", Offset = "0x1153A58", VA = "0x1153A58")]
	public void OcrSetup(UnityAction onSetupComplete)
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0x1153950", Offset = "0x1153950", VA = "0x1153950")]
	[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x8C7BBC", Offset = "0x8C7BBC")]
	private void CopyAllFilesToPersistentData(List<string> fileNames, UnityAction onSetupComplete)
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0x11537E8", Offset = "0x11537E8", VA = "0x11537E8")]
	public string GetErrorMessage()
	{
		return null;
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0x11537D0", Offset = "0x11537D0", VA = "0x11537D0")]
	public string Recognize(Texture2D imageToRecognize)
	{
		return null;
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x1154658", Offset = "0x1154658", VA = "0x1154658")]
	public Texture2D GetHighlightedTexture()
	{
		return null;
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0x1154674", Offset = "0x1154674", VA = "0x1154674")]
	private void UnZipData(string fileName)
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0x1153238", Offset = "0x1153238", VA = "0x1153238")]
	public TesseractDriver()
	{
	}
}
[Token(Token = "0x20001F5")]
public class TesseractWrapper
{
	[Token(Token = "0x4000916")]
	private const string TesseractDllName = "libtesseract.so";

	[Token(Token = "0x4000917")]
	private const string LeptonicaDllName = "liblept.so";

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr _tessHandle;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Texture2D _highlightedTexture;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string _errorMsg;

	[Token(Token = "0x400091B")]
	private const float MinimumConfidence = 60f;

	[PreserveSig]
	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x115495C", Offset = "0x115495C", VA = "0x115495C")]
	private static extern IntPtr TessVersion();

	[PreserveSig]
	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x11549D0", Offset = "0x11549D0", VA = "0x11549D0")]
	private static extern IntPtr TessBaseAPICreate();

	[PreserveSig]
	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x1154A44", Offset = "0x1154A44", VA = "0x1154A44")]
	private static extern int TessBaseAPIInit3(IntPtr handle, string dataPath, string language);

	[PreserveSig]
	[Token(Token = "0x60007C0")]
	[Address(RVA = "0x1154B0C", Offset = "0x1154B0C", VA = "0x1154B0C")]
	private static extern void TessBaseAPIDelete(IntPtr handle);

	[PreserveSig]
	[Token(Token = "0x60007C1")]
	[Address(RVA = "0x1154B8C", Offset = "0x1154B8C", VA = "0x1154B8C")]
	private static extern void TessBaseAPISetImage(IntPtr handle, IntPtr imagedata, int width, int height, int bytes_per_pixel, int bytes_per_line);

	[PreserveSig]
	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x1154C4C", Offset = "0x1154C4C", VA = "0x1154C4C")]
	private static extern void TessBaseAPISetImage2(IntPtr handle, IntPtr pix);

	[PreserveSig]
	[Token(Token = "0x60007C3")]
	[Address(RVA = "0x1154CDC", Offset = "0x1154CDC", VA = "0x1154CDC")]
	private static extern int TessBaseAPIRecognize(IntPtr handle, IntPtr monitor);

	[PreserveSig]
	[Token(Token = "0x60007C4")]
	[Address(RVA = "0x1154D6C", Offset = "0x1154D6C", VA = "0x1154D6C")]
	private static extern IntPtr TessBaseAPIGetUTF8Text(IntPtr handle);

	[PreserveSig]
	[Token(Token = "0x60007C5")]
	[Address(RVA = "0x1154DEC", Offset = "0x1154DEC", VA = "0x1154DEC")]
	private static extern void TessDeleteText(IntPtr text);

	[PreserveSig]
	[Token(Token = "0x60007C6")]
	[Address(RVA = "0x1154E6C", Offset = "0x1154E6C", VA = "0x1154E6C")]
	private static extern void TessBaseAPIEnd(IntPtr handle);

	[PreserveSig]
	[Token(Token = "0x60007C7")]
	[Address(RVA = "0x1154EEC", Offset = "0x1154EEC", VA = "0x1154EEC")]
	private static extern void TessBaseAPIClear(IntPtr handle);

	[PreserveSig]
	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x1154F6C", Offset = "0x1154F6C", VA = "0x1154F6C")]
	private static extern IntPtr TessBaseAPIGetWords(IntPtr handle, IntPtr pixa);

	[PreserveSig]
	[Token(Token = "0x60007C9")]
	[Address(RVA = "0x1154FFC", Offset = "0x1154FFC", VA = "0x1154FFC")]
	private static extern IntPtr TessBaseAPIAllWordConfidences(IntPtr handle);

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x1153898", Offset = "0x1153898", VA = "0x1153898")]
	public TesseractWrapper()
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x11538E4", Offset = "0x11538E4", VA = "0x11538E4")]
	public string Version()
	{
		return null;
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0x115507C", Offset = "0x115507C", VA = "0x115507C")]
	public string GetErrorMessage()
	{
		return null;
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x1153BD0", Offset = "0x1153BD0", VA = "0x1153BD0")]
	public bool Init(string lang, string dataPath)
	{
		return default(bool);
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x1153E54", Offset = "0x1153E54", VA = "0x1153E54")]
	public string Recognize(Texture2D texture)
	{
		return null;
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0x115510C", Offset = "0x115510C", VA = "0x115510C")]
	private void DrawLines(Texture2D texture, Rect boundingRect, Color color, int thickness = 3)
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x1155350", Offset = "0x1155350", VA = "0x1155350")]
	public Texture2D GetHighlightedTexture()
	{
		return null;
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x1155084", Offset = "0x1155084", VA = "0x1155084")]
	public void Close()
	{
	}
}
[Token(Token = "0x20001F6")]
public class DefinationGroupElements : MonoBehaviour
{
	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI Title;

	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI Content;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image Image;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button CloseButton;

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x117196C", Offset = "0x117196C", VA = "0x117196C")]
	public DefinationGroupElements()
	{
	}
}
[Token(Token = "0x20001F7")]
public class DefinationUI : MonoBehaviour
{
	[Token(Token = "0x20001F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0BF4", Offset = "0x8C0BF4")]
	private sealed class <>c__DisplayClass21_0
	{
		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DefinationUI <>4__this;

		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject defination;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DefinationGroupElements definationGroupElements;

		[Token(Token = "0x60007DF")]
		[Address(RVA = "0x10A50C4", Offset = "0x10A50C4", VA = "0x10A50C4")]
		public <>c__DisplayClass21_0()
		{
		}

		[Token(Token = "0x60007E0")]
		[Address(RVA = "0x10A50CC", Offset = "0x10A50CC", VA = "0x10A50CC")]
		internal void <AddData>b__0()
		{
		}

		[Token(Token = "0x60007E1")]
		[Address(RVA = "0x10A50F0", Offset = "0x10A50F0", VA = "0x10A50F0")]
		internal void <AddData>b__1()
		{
		}
	}

	[Token(Token = "0x20001F9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0C04", Offset = "0x8C0C04")]
	private sealed class <UpdateCanvasAfterFrame>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DefinationUI <>4__this;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform refPoint;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3? angle;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? scale;

		[Token(Token = "0x170000B5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007E5")]
			[Address(RVA = "0x10A5568", Offset = "0x10A5568", VA = "0x10A5568", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007E7")]
			[Address(RVA = "0x10A55B0", Offset = "0x10A55B0", VA = "0x10A55B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007E2")]
		[Address(RVA = "0x10A5140", Offset = "0x10A5140", VA = "0x10A5140")]
		[DebuggerHidden]
		public <UpdateCanvasAfterFrame>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0x10A516C", Offset = "0x10A516C", VA = "0x10A516C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0x10A5170", Offset = "0x10A5170", VA = "0x10A5170", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0x10A5570", Offset = "0x10A5570", VA = "0x10A5570", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0C14", Offset = "0x8C0C14")]
	private sealed class <>c__DisplayClass26_0
	{
		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DefinationUI <>4__this;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DefinationGroupElements defination;

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0x10A5114", Offset = "0x10A5114", VA = "0x10A5114")]
		public <>c__DisplayClass26_0()
		{
		}

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0x10A511C", Offset = "0x10A511C", VA = "0x10A511C")]
		internal void <SendCompleteWaitOnClose>b__0()
		{
		}
	}

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DefinationUI instance;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action<bool> callbackOnBegin;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Action<bool> callbackOnEnd;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform _attachPoint;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject _uiRoot;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject _definationPrefab;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float distanceFromPlayer;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private RectTransform _canvasRect;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Vector3 _angleFromCenterEyeOn;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private BoxCollider _assignedCollider;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<GameObject> _definationObjectList;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C316C", Offset = "0x8C316C")]
	private Transform <PositionPoint>k__BackingField;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int activeObjectCount;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool _initiateWaitCompleteAfterTap;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private RectTransform _attachPointRect;

	[Token(Token = "0x170000B4")]
	public Transform PositionPoint
	{
		[Token(Token = "0x60007D4")]
		[Address(RVA = "0x117197C", Offset = "0x117197C", VA = "0x117197C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C7C3C", Offset = "0x8C7C3C")]
		private get
		{
			return null;
		}
		[Token(Token = "0x60007D3")]
		[Address(RVA = "0x1171974", Offset = "0x1171974", VA = "0x1171974")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C7C2C", Offset = "0x8C7C2C")]
		set
		{
		}
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0x1171984", Offset = "0x1171984", VA = "0x1171984")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0x11719E8", Offset = "0x11719E8", VA = "0x11719E8")]
	private void Start()
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0x1171A88", Offset = "0x1171A88", VA = "0x1171A88")]
	public void EnableWaitCompleteAfterTap()
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0x1171A94", Offset = "0x1171A94", VA = "0x1171A94")]
	public void AddData(string title, [Optional] Sprite image, [Optional] string content, bool sendWaitOnClose = false)
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0x1171F30", Offset = "0x1171F30", VA = "0x1171F30")]
	public void ClearPrevData()
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0x1172294", Offset = "0x1172294", VA = "0x1172294")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C7C4C", Offset = "0x8C7C4C")]
	private IEnumerator UpdateCanvasAfterFrame([Optional] Transform refPoint, [Optional] Vector3? scale, [Optional] Vector3? angle)
	{
		return null;
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0x1172350", Offset = "0x1172350", VA = "0x1172350")]
	public void EnableDefinationUINonEye(Transform refPoint, Vector3? scale, Vector3? angle)
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0x1172428", Offset = "0x1172428", VA = "0x1172428")]
	private void OnCloseClick(GameObject defination)
	{
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0x1172930", Offset = "0x1172930", VA = "0x1172930")]
	private void SendCompleteWaitOnClose(DefinationGroupElements defination)
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0x1172A68", Offset = "0x1172A68", VA = "0x1172A68")]
	public DefinationUI()
	{
	}
}
[Token(Token = "0x20001FB")]
public class GameMenuUI : MonoBehaviour
{
	[Token(Token = "0x20001FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0C24", Offset = "0x8C0C24")]
	private sealed class <CallAfterAFrame>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action callback;

		[Token(Token = "0x170000B7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007FE")]
			[Address(RVA = "0x10A7B7C", Offset = "0x10A7B7C", VA = "0x10A7B7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000800")]
			[Address(RVA = "0x10A7BC4", Offset = "0x10A7BC4", VA = "0x10A7BC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007FB")]
		[Address(RVA = "0x10A7AA0", Offset = "0x10A7AA0", VA = "0x10A7AA0")]
		[DebuggerHidden]
		public <CallAfterAFrame>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x60007FC")]
		[Address(RVA = "0x10A7ACC", Offset = "0x10A7ACC", VA = "0x10A7ACC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0x10A7AD0", Offset = "0x10A7AD0", VA = "0x10A7AD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0x10A7B84", Offset = "0x10A7B84", VA = "0x10A7B84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0C34", Offset = "0x8C0C34")]
	private sealed class <UpdateCanvasAfterFrame>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform attachPoint;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameMenuUI <>4__this;

		[Token(Token = "0x170000B9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000804")]
			[Address(RVA = "0x10A7CFC", Offset = "0x10A7CFC", VA = "0x10A7CFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000806")]
			[Address(RVA = "0x10A7D44", Offset = "0x10A7D44", VA = "0x10A7D44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000801")]
		[Address(RVA = "0x10A7BCC", Offset = "0x10A7BCC", VA = "0x10A7BCC")]
		[DebuggerHidden]
		public <UpdateCanvasAfterFrame>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000802")]
		[Address(RVA = "0x10A7BF8", Offset = "0x10A7BF8", VA = "0x10A7BF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000803")]
		[Address(RVA = "0x10A7BFC", Offset = "0x10A7BFC", VA = "0x10A7BFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000805")]
		[Address(RVA = "0x10A7D04", Offset = "0x10A7D04", VA = "0x10A7D04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameMenuUI instance;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float distanceFromPlayer;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Vector3 distanceOffset;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Vector3 rotation;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject oculusMenuUIRoot;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private GameObject normalMenuUIRoot;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private TextMeshProUGUI titleText;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private TextMeshProUGUI deathText;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private GameObject continueButton;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private bool isOnMainMenuScene;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private DialogueSystemController dsController;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private SaveSystemEvents saveSystemEvents;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private ConversationStateSaver css;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private DialogueSystemSaver dss;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public bool HasPlayerDied;

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0x117CACC", Offset = "0x117CACC", VA = "0x117CACC")]
	private void Start()
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0x117CC68", Offset = "0x117CC68", VA = "0x117CC68")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C7CFC", Offset = "0x8C7CFC")]
	private IEnumerator CallAfterAFrame(Action callback)
	{
		return null;
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x117CCE0", Offset = "0x117CCE0", VA = "0x117CCE0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0x117CD9C", Offset = "0x117CD9C", VA = "0x117CD9C")]
	private void OnSceneChange(Scene scene, LoadSceneMode loadSceneMode)
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x117CF74", Offset = "0x117CF74", VA = "0x117CF74")]
	private void Update()
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x117D008", Offset = "0x117D008", VA = "0x117D008")]
	private void ToggleNormalGameMenu(bool status)
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x117D31C", Offset = "0x117D31C", VA = "0x117D31C")]
	private void ToggleOculusGameMenu()
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x117D5AC", Offset = "0x117D5AC", VA = "0x117D5AC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C7D5C", Offset = "0x8C7D5C")]
	private IEnumerator UpdateCanvasAfterFrame(Transform attachPoint)
	{
		return null;
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x117D640", Offset = "0x117D640", VA = "0x117D640")]
	public void SetupDeathScene()
	{
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x117D64C", Offset = "0x117D64C", VA = "0x117D64C")]
	public void NewGame()
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x117D7A4", Offset = "0x117D7A4", VA = "0x117D7A4")]
	public void ResumeGame()
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x117D7A8", Offset = "0x117D7A8", VA = "0x117D7A8")]
	public void ContinueGame()
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x117D8F8", Offset = "0x117D8F8", VA = "0x117D8F8")]
	public void Quit()
	{
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x117D900", Offset = "0x117D900", VA = "0x117D900")]
	public GameMenuUI()
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x117D94C", Offset = "0x117D94C", VA = "0x117D94C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C7DBC", Offset = "0x8C7DBC")]
	private void <Start>b__15_0()
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x117D988", Offset = "0x117D988", VA = "0x117D988")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C7DCC", Offset = "0x8C7DCC")]
	private void <OnSceneChange>b__18_0()
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0x117D9E0", Offset = "0x117D9E0", VA = "0x117D9E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C7DDC", Offset = "0x8C7DDC")]
	private void <ContinueGame>b__26_0()
	{
	}
}
[Serializable]
[Token(Token = "0x20001FE")]
public enum ImprintValue
{
	[Token(Token = "0x4000951")]
	InquiryAccess,
	[Token(Token = "0x4000952")]
	InformationLookUp,
	[Token(Token = "0x4000953")]
	PitasarahTree,
	[Token(Token = "0x4000954")]
	CreatureVoluta,
	[Token(Token = "0x4000955")]
	Intruments
}
[Token(Token = "0x20001FF")]
public class ImprintController : Saver
{
	[Token(Token = "0x2000200")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0C44", Offset = "0x8C0C44")]
	private sealed class <WaitForNextFrame>d__47 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VerticalLayoutGroup verticalLayoutGroup;

		[Token(Token = "0x170000C2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000827")]
			[Address(RVA = "0x10AA640", Offset = "0x10AA640", VA = "0x10AA640", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000829")]
			[Address(RVA = "0x10AA688", Offset = "0x10AA688", VA = "0x10AA688", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000824")]
		[Address(RVA = "0x10AA558", Offset = "0x10AA558", VA = "0x10AA558")]
		[DebuggerHidden]
		public <WaitForNextFrame>d__47(int <>1__state)
		{
		}

		[Token(Token = "0x6000825")]
		[Address(RVA = "0x10AA584", Offset = "0x10AA584", VA = "0x10AA584", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000826")]
		[Address(RVA = "0x10AA588", Offset = "0x10AA588", VA = "0x10AA588", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000828")]
		[Address(RVA = "0x10AA648", Offset = "0x10AA648", VA = "0x10AA648", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ImprintController instance;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float distanceFromPlayer;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject imprintRoot;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private ImprintGameObjectDictionary panelObjects;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private ImprintValue defaultActivePanel;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private TextMeshProUGUI playerID;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C32AC", Offset = "0x8C32AC")]
	private InquiryAcessWindow inquiryAcessWindow;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C32F8", Offset = "0x8C32F8")]
	private InformationLookUpWindow informationLookUpWindow;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C3344", Offset = "0x8C3344")]
	private CreaturaVolutaWindow creaturaVolutaWindow;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C3390", Offset = "0x8C3390")]
	[SerializeField]
	private PitasarahWindow pitasarahWindow;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Color highlightedUIColor;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private Vector2 highlightedUIDistance;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool _initiateWaitCompleteAfterTap;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
	private bool _initiateWaitCompleteAfterTapMenu;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private ImprintValue currentActivePanel;

	[Token(Token = "0x170000BB")]
	public InquiryAcessWindow InquiryAcessWindow
	{
		[Token(Token = "0x6000807")]
		[Address(RVA = "0x10EFDA8", Offset = "0x10EFDA8", VA = "0x10EFDA8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BC")]
	public InformationLookUpWindow InformationLookUpWindow
	{
		[Token(Token = "0x6000808")]
		[Address(RVA = "0x10EFDB0", Offset = "0x10EFDB0", VA = "0x10EFDB0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BD")]
	public CreaturaVolutaWindow CreaturaVolutaWindow
	{
		[Token(Token = "0x6000809")]
		[Address(RVA = "0x10EFDB8", Offset = "0x10EFDB8", VA = "0x10EFDB8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BE")]
	public PitasarahWindow PitasarahWindow
	{
		[Token(Token = "0x600080A")]
		[Address(RVA = "0x10EFDC0", Offset = "0x10EFDC0", VA = "0x10EFDC0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000BF")]
	public Color HighlightedUIColor
	{
		[Token(Token = "0x600080B")]
		[Address(RVA = "0x10EFDC8", Offset = "0x10EFDC8", VA = "0x10EFDC8")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x170000C0")]
	public Vector2 HighlightedUIDistance
	{
		[Token(Token = "0x600080C")]
		[Address(RVA = "0x10EFDD4", Offset = "0x10EFDD4", VA = "0x10EFDD4")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x170000C1")]
	public ImprintValue CurrentActivePanel
	{
		[Token(Token = "0x600080D")]
		[Address(RVA = "0x10EFDDC", Offset = "0x10EFDDC", VA = "0x10EFDDC")]
		get
		{
			return default(ImprintValue);
		}
		[Token(Token = "0x600080E")]
		[Address(RVA = "0x10EFDE4", Offset = "0x10EFDE4", VA = "0x10EFDE4")]
		set
		{
		}
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0x10EFDEC", Offset = "0x10EFDEC", VA = "0x10EFDEC", Slot = "11")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0x10EFF44", Offset = "0x10EFF44", VA = "0x10EFF44")]
	public void ReinitCurvedUIDetails()
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0x10EFF48", Offset = "0x10EFF48", VA = "0x10EFF48")]
	public void EnableWaitCompleteAfterTap()
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0x10EFF54", Offset = "0x10EFF54", VA = "0x10EFF54")]
	public void EnableWaitCompleteAfterTapOnMenu()
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0x10EFF60", Offset = "0x10EFF60", VA = "0x10EFF60")]
	public void ToggleImprint()
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0x10EFE58", Offset = "0x10EFE58", VA = "0x10EFE58")]
	public void ToggleImprint(bool status)
	{
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0x10F01C0", Offset = "0x10F01C0", VA = "0x10F01C0")]
	public void ToggleImprintCurrentActive(bool status, ImprintValue imprintValue, string keyToCall, Transform playerRef)
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0x10F05E4", Offset = "0x10F05E4", VA = "0x10F05E4")]
	public void SetPlayerID()
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0x10F01B4", Offset = "0x10F01B4", VA = "0x10F01B4")]
	public void DisplayPanel(int imprintEnuIntval)
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x10F03F4", Offset = "0x10F03F4", VA = "0x10F03F4")]
	public void DisplayPanel(int imprintEnuIntval, [Optional] string keyToCall, [Optional] string subkeyToCall)
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x10F0900", Offset = "0x10F0900", VA = "0x10F0900")]
	public void OnIncrementCounter(int counterType)
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x10F091C", Offset = "0x10F091C", VA = "0x10F091C")]
	public void OnDecrementCounter(int counterType)
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x10F0738", Offset = "0x10F0738", VA = "0x10F0738")]
	public void TogglePitasarahTree(bool status)
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0x10F07A0", Offset = "0x10F07A0", VA = "0x10F07A0")]
	private void CreateDisplayCategory([Optional] string keyToCall, [Optional] string subkeyToCall)
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0x10F06EC", Offset = "0x10F06EC", VA = "0x10F06EC")]
	private void CreateInquiryAcessWindow()
	{
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0x10F07EC", Offset = "0x10F07EC", VA = "0x10F07EC")]
	private void CreateCVWindow()
	{
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0x10F0838", Offset = "0x10F0838", VA = "0x10F0838")]
	private void CreatePitasarahWindow()
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x10F0BDC", Offset = "0x10F0BDC", VA = "0x10F0BDC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C7E8C", Offset = "0x8C7E8C")]
	private IEnumerator WaitForNextFrame(VerticalLayoutGroup verticalLayoutGroup)
	{
		return null;
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0x10F0C54", Offset = "0x10F0C54", VA = "0x10F0C54", Slot = "17")]
	public override void ApplyData(string s)
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0x10F1330", Offset = "0x10F1330", VA = "0x10F1330", Slot = "16")]
	public override string RecordData()
	{
		return null;
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0x10F18D8", Offset = "0x10F18D8", VA = "0x10F18D8")]
	public ImprintController()
	{
	}
}
[Serializable]
[Token(Token = "0x2000201")]
public class InformationLookUpWindow
{
	[Token(Token = "0x2000202")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0C54", Offset = "0x8C0C54")]
	private sealed class <UpdateAlpha>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Outline outline;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color <outlineColor>5__2;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color <finalColor>5__3;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool <isAlphaUp>5__4;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float <time>5__5;

		[Token(Token = "0x170000C4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000838")]
			[Address(RVA = "0x10AACB8", Offset = "0x10AACB8", VA = "0x10AACB8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600083A")]
			[Address(RVA = "0x10AAD00", Offset = "0x10AAD00", VA = "0x10AAD00", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000835")]
		[Address(RVA = "0x10AAB24", Offset = "0x10AAB24", VA = "0x10AAB24")]
		[DebuggerHidden]
		public <UpdateAlpha>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000836")]
		[Address(RVA = "0x10AAB50", Offset = "0x10AAB50", VA = "0x10AAB50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000837")]
		[Address(RVA = "0x10AAB54", Offset = "0x10AAB54", VA = "0x10AAB54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000839")]
		[Address(RVA = "0x10AACC0", Offset = "0x10AACC0", VA = "0x10AACC0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000203")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0C64", Offset = "0x8C0C64")]
	private sealed class <>c__DisplayClass12_0
	{
		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InformationLookUpWindow <>4__this;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string key;

		[Token(Token = "0x600083B")]
		[Address(RVA = "0x10AA830", Offset = "0x10AA830", VA = "0x10AA830")]
		public <>c__DisplayClass12_0()
		{
		}

		[Token(Token = "0x600083C")]
		[Address(RVA = "0x10AA838", Offset = "0x10AA838", VA = "0x10AA838")]
		internal void <AddInfoData>b__0()
		{
		}
	}

	[Token(Token = "0x2000204")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0C74", Offset = "0x8C0C74")]
	private sealed class <>c__DisplayClass12_1
	{
		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Button button;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass12_0 CS$<>8__locals1;

		[Token(Token = "0x600083D")]
		[Address(RVA = "0x10AA85C", Offset = "0x10AA85C", VA = "0x10AA85C")]
		public <>c__DisplayClass12_1()
		{
		}

		[Token(Token = "0x600083E")]
		[Address(RVA = "0x10AA864", Offset = "0x10AA864", VA = "0x10AA864")]
		internal void <AddInfoData>b__1()
		{
		}
	}

	[Token(Token = "0x2000205")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0C84", Offset = "0x8C0C84")]
	private sealed class <>c__DisplayClass12_2
	{
		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Coroutine coroutine;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass12_1 CS$<>8__locals2;

		[Token(Token = "0x600083F")]
		[Address(RVA = "0x10AA8E0", Offset = "0x10AA8E0", VA = "0x10AA8E0")]
		public <>c__DisplayClass12_2()
		{
		}

		[Token(Token = "0x6000840")]
		[Address(RVA = "0x10AA8E8", Offset = "0x10AA8E8", VA = "0x10AA8E8")]
		internal void <AddInfoData>b__2()
		{
		}
	}

	[Token(Token = "0x2000206")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0C94", Offset = "0x8C0C94")]
	private sealed class <>c__DisplayClass13_0
	{
		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InformationLookUpWindow <>4__this;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Button button;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Coroutine coroutine;

		[Token(Token = "0x6000841")]
		[Address(RVA = "0x10AA924", Offset = "0x10AA924", VA = "0x10AA924")]
		public <>c__DisplayClass13_0()
		{
		}

		[Token(Token = "0x6000842")]
		[Address(RVA = "0x10AA92C", Offset = "0x10AA92C", VA = "0x10AA92C")]
		internal void <OnCompletionRemoveOutline>b__0()
		{
		}
	}

	[Token(Token = "0x2000207")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0CA4", Offset = "0x8C0CA4")]
	private sealed class <>c__DisplayClass14_0
	{
		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InformationLookUpWindow <>4__this;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string key;

		[Token(Token = "0x6000843")]
		[Address(RVA = "0x10AA950", Offset = "0x10AA950", VA = "0x10AA950")]
		public <>c__DisplayClass14_0()
		{
		}

		[Token(Token = "0x6000844")]
		[Address(RVA = "0x10AA958", Offset = "0x10AA958", VA = "0x10AA958")]
		internal void <OnDialogWaitComplete>b__0()
		{
		}
	}

	[Token(Token = "0x2000208")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0CB4", Offset = "0x8C0CB4")]
	private sealed class <>c__DisplayClass16_0
	{
		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string subCatKey;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject currentSubCategory;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InformationLookUpWindow <>4__this;

		[Token(Token = "0x6000845")]
		[Address(RVA = "0x10AA97C", Offset = "0x10AA97C", VA = "0x10AA97C")]
		public <>c__DisplayClass16_0()
		{
		}

		[Token(Token = "0x6000846")]
		[Address(RVA = "0x10AA984", Offset = "0x10AA984", VA = "0x10AA984")]
		internal void <OnCategoryClick>b__0()
		{
		}
	}

	[Token(Token = "0x2000209")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0CC4", Offset = "0x8C0CC4")]
	private sealed class <UpdateAfterAFrame>d__17 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform transform;

		[Token(Token = "0x170000C6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600084A")]
			[Address(RVA = "0x10AAAD4", Offset = "0x10AAAD4", VA = "0x10AAAD4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600084C")]
			[Address(RVA = "0x10AAB1C", Offset = "0x10AAB1C", VA = "0x10AAB1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000847")]
		[Address(RVA = "0x10AA9A8", Offset = "0x10AA9A8", VA = "0x10AA9A8")]
		[DebuggerHidden]
		public <UpdateAfterAFrame>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6000848")]
		[Address(RVA = "0x10AA9D4", Offset = "0x10AA9D4", VA = "0x10AA9D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000849")]
		[Address(RVA = "0x10AA9D8", Offset = "0x10AA9D8", VA = "0x10AA9D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600084B")]
		[Address(RVA = "0x10AAADC", Offset = "0x10AAADC", VA = "0x10AAADC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool isInitialised;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject categoryPrefab;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject subcategoryPrefab;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject detailsPrefabs;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform categoryScrollRect;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform subcategoryScrollRect;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public InformationLookUpDictionary exposedLookUpData;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public InformationLookUpDictionary currentLookUpData;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<GameObject> detailsGroup;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<GameObject> subcategoryInfoBtn;

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x10F0938", Offset = "0x10F0938", VA = "0x10F0938")]
	public void InitiateWithGivenData(InformationLookUpDictionary givenLookUpData, [Optional] string keyToCall, [Optional] string subkeyToCall)
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x10F23B0", Offset = "0x10F23B0", VA = "0x10F23B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C7F3C", Offset = "0x8C7F3C")]
	public IEnumerator UpdateAlpha(Outline outline)
	{
		return null;
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x10F0EE4", Offset = "0x10F0EE4", VA = "0x10F0EE4")]
	public void AddInfoData(string key, LookUpData dataInstance, bool isDialogWaitingToContinue = false, bool isSendWaitCompleteOnClose = false, bool enableOutline = false)
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x10F2428", Offset = "0x10F2428", VA = "0x10F2428")]
	private void OnCompletionRemoveOutline(Button button, Coroutine coroutine)
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0x10F25C4", Offset = "0x10F25C4", VA = "0x10F25C4")]
	private void OnDialogWaitComplete(Button button, string key)
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x10F2720", Offset = "0x10F2720", VA = "0x10F2720")]
	private void OnSubcategoryClick(string key, GameObject currentButtonObject)
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x10F1C64", Offset = "0x10F1C64", VA = "0x10F1C64")]
	private void OnCategoryClick(string key)
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x10F2F3C", Offset = "0x10F2F3C", VA = "0x10F2F3C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C7F9C", Offset = "0x8C7F9C")]
	public IEnumerator UpdateAfterAFrame(Transform transform)
	{
		return null;
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x10F2B88", Offset = "0x10F2B88", VA = "0x10F2B88")]
	private GameObject SpawnNormalInfoDisplayObject(Transform transformToattach, bool isSubCategory = false)
	{
		return null;
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x10F2CF4", Offset = "0x10F2CF4", VA = "0x10F2CF4")]
	private void UpdateData(GameObject details, string key, bool isSubCategory = false)
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x10F2FB4", Offset = "0x10F2FB4", VA = "0x10F2FB4")]
	public InformationLookUpWindow()
	{
	}
}
[Serializable]
[Token(Token = "0x200020A")]
public class InquiryAcessWindow
{
	[Token(Token = "0x200020B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0CD4", Offset = "0x8C0CD4")]
	private sealed class <>c__DisplayClass10_0
	{
		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InquiryAcessWindow <>4__this;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string key;

		[Token(Token = "0x6000852")]
		[Address(RVA = "0x10AAD08", Offset = "0x10AAD08", VA = "0x10AAD08")]
		public <>c__DisplayClass10_0()
		{
		}

		[Token(Token = "0x6000853")]
		[Address(RVA = "0x10AAD10", Offset = "0x10AAD10", VA = "0x10AAD10")]
		internal void <AddInfoData>b__0()
		{
		}
	}

	[Token(Token = "0x200020C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0CE4", Offset = "0x8C0CE4")]
	private sealed class <OnEndofAudioCue>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float duration;

		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InquiryAcessWindow <>4__this;

		[Token(Token = "0x170000C8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000857")]
			[Address(RVA = "0x10AAE2C", Offset = "0x10AAE2C", VA = "0x10AAE2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000859")]
			[Address(RVA = "0x10AAE74", Offset = "0x10AAE74", VA = "0x10AAE74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000854")]
		[Address(RVA = "0x10AAD34", Offset = "0x10AAD34", VA = "0x10AAD34")]
		[DebuggerHidden]
		public <OnEndofAudioCue>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000855")]
		[Address(RVA = "0x10AAD60", Offset = "0x10AAD60", VA = "0x10AAD60", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000856")]
		[Address(RVA = "0x10AAD64", Offset = "0x10AAD64", VA = "0x10AAD64", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0x10AAE34", Offset = "0x10AAE34", VA = "0x10AAE34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool isInitialised;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource GlobalAudioSource;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject InquiryButtonPrefab;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform InquiryPanelToAttach;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<AudioData> InquiryAudioData;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public InquiryAccessDictionary exposedLookUpData;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private InquiryAccessDictionary currentLookUpData;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Coroutine coroutine;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ImprintController instanceImprintController;

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x10F0A90", Offset = "0x10F0A90", VA = "0x10F0A90")]
	public void InitiateWithGivenData(InquiryAccessDictionary givenLookUpData, ImprintController imprintController)
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x10F3104", Offset = "0x10F3104", VA = "0x10F3104")]
	public void AddInfoData(string key, InquiryData dataInstance)
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x10F331C", Offset = "0x10F331C", VA = "0x10F331C")]
	public void OnQuestionClick(string key)
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0x10F35C8", Offset = "0x10F35C8", VA = "0x10F35C8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C809C", Offset = "0x8C809C")]
	private IEnumerator OnEndofAudioCue(float duration)
	{
		return null;
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0x10F3650", Offset = "0x10F3650", VA = "0x10F3650")]
	public InquiryAcessWindow()
	{
	}
}
[Serializable]
[Token(Token = "0x200020D")]
public class CreaturaVolutaWindow
{
	[Token(Token = "0x200020E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0CF4", Offset = "0x8C0CF4")]
	private sealed class <>c__DisplayClass9_0
	{
		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CreaturaVolutaWindow <>4__this;

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string key;

		[Token(Token = "0x600085E")]
		[Address(RVA = "0x10A3C68", Offset = "0x10A3C68", VA = "0x10A3C68")]
		public <>c__DisplayClass9_0()
		{
		}

		[Token(Token = "0x600085F")]
		[Address(RVA = "0x10A3C70", Offset = "0x10A3C70", VA = "0x10A3C70")]
		internal void <AddInfoData>b__0()
		{
		}
	}

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool isInitialised;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject categoryPrefab;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject detailsPrefabs;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform categoryScrollRect;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform detailsScrollRect;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CreaturaVolutaGroupDictionary exposedLookUpData;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public CreaturaVolutaGroupDictionary currentLookUpData;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<GameObject> detailsGroup;

	[Token(Token = "0x600085A")]
	[Address(RVA = "0x109ACE4", Offset = "0x109ACE4", VA = "0x109ACE4")]
	public void InitiateWithGivenData(CreaturaVolutaGroupDictionary cvData)
	{
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0x109AE1C", Offset = "0x109AE1C", VA = "0x109AE1C")]
	public void AddInfoData(string key, CreatureVoluta dataInstance)
	{
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0x109B064", Offset = "0x109B064", VA = "0x109B064")]
	private void OnCVItemClick(string key)
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0x109B56C", Offset = "0x109B56C", VA = "0x109B56C")]
	public CreaturaVolutaWindow()
	{
	}
}
[Serializable]
[Token(Token = "0x200020F")]
public class PitasarahWindow
{
	[Token(Token = "0x2000210")]
	public enum PitasarahType
	{
		[Token(Token = "0x40009AE")]
		FRAGMENT,
		[Token(Token = "0x40009AF")]
		SEGMENT,
		[Token(Token = "0x40009B0")]
		FRUIT,
		[Token(Token = "0x40009B1")]
		TREE
	}

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool isInitialised;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject PitasarahTree;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI FragmentCounter;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI SegmentCounter;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI FruitCounter;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI TreeCounter;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C341C", Offset = "0x8C341C")]
	private int <Fragment>k__BackingField;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C342C", Offset = "0x8C342C")]
	private int <Segment>k__BackingField;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C343C", Offset = "0x8C343C")]
	private int <Fruit>k__BackingField;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C344C", Offset = "0x8C344C")]
	private int <Tree>k__BackingField;

	[Token(Token = "0x170000CA")]
	public int Fragment
	{
		[Token(Token = "0x6000860")]
		[Address(RVA = "0x97D164", Offset = "0x97D164", VA = "0x97D164")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C814C", Offset = "0x8C814C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000861")]
		[Address(RVA = "0x97D16C", Offset = "0x97D16C", VA = "0x97D16C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C815C", Offset = "0x8C815C")]
		set
		{
		}
	}

	[Token(Token = "0x170000CB")]
	public int Segment
	{
		[Token(Token = "0x6000862")]
		[Address(RVA = "0x97D174", Offset = "0x97D174", VA = "0x97D174")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C816C", Offset = "0x8C816C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000863")]
		[Address(RVA = "0x97D17C", Offset = "0x97D17C", VA = "0x97D17C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C817C", Offset = "0x8C817C")]
		set
		{
		}
	}

	[Token(Token = "0x170000CC")]
	public int Fruit
	{
		[Token(Token = "0x6000864")]
		[Address(RVA = "0x97D184", Offset = "0x97D184", VA = "0x97D184")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C818C", Offset = "0x8C818C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000865")]
		[Address(RVA = "0x97D18C", Offset = "0x97D18C", VA = "0x97D18C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C819C", Offset = "0x8C819C")]
		set
		{
		}
	}

	[Token(Token = "0x170000CD")]
	public int Tree
	{
		[Token(Token = "0x6000866")]
		[Address(RVA = "0x97D194", Offset = "0x97D194", VA = "0x97D194")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C81AC", Offset = "0x8C81AC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000867")]
		[Address(RVA = "0x97D19C", Offset = "0x97D19C", VA = "0x97D19C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C81BC", Offset = "0x8C81BC")]
		set
		{
		}
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0x97D1A4", Offset = "0x97D1A4", VA = "0x97D1A4")]
	public void InitiateWithGivenData(int Fragment, int Segment = 0, int Fruit = 0, int Tree = 0)
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0x97D32C", Offset = "0x97D32C", VA = "0x97D32C")]
	public void RefreshWindow()
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0x97D454", Offset = "0x97D454", VA = "0x97D454")]
	public void OnIncrementCounter(int counterType)
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0x97D620", Offset = "0x97D620", VA = "0x97D620")]
	public void OnDecrementCounter(int counterType)
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0x97D7F0", Offset = "0x97D7F0", VA = "0x97D7F0")]
	public PitasarahWindow()
	{
	}
}
[Serializable]
[Token(Token = "0x2000211")]
public class ImprintDataSaver
{
	[Serializable]
	[Token(Token = "0x2000212")]
	public class InformationLookUpKeys
	{
		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] keys;

		[Token(Token = "0x600086E")]
		[Address(RVA = "0x10AA698", Offset = "0x10AA698", VA = "0x10AA698")]
		public InformationLookUpKeys()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000213")]
	public class CreturaVolutaKeys
	{
		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] keys;

		[Token(Token = "0x600086F")]
		[Address(RVA = "0x10AA690", Offset = "0x10AA690", VA = "0x10AA690")]
		public CreturaVolutaKeys()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000214")]
	public class PitasarahData
	{
		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Fragment;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int Segment;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Fruit;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int Tree;

		[Token(Token = "0x6000870")]
		[Address(RVA = "0x10AA6A0", Offset = "0x10AA6A0", VA = "0x10AA6A0")]
		public PitasarahData()
		{
		}
	}

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public InformationLookUpKeys informationLookUpKeys;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CreturaVolutaKeys creturaVolutaKeys;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PitasarahData pitasarahData;

	[Token(Token = "0x600086D")]
	[Address(RVA = "0x10F18D0", Offset = "0x10F18D0", VA = "0x10F18D0")]
	public ImprintDataSaver()
	{
	}
}
[Token(Token = "0x2000215")]
public class InfoPanel : MonoBehaviour
{
	[Token(Token = "0x2000216")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0D04", Offset = "0x8C0D04")]
	private sealed class <AutoClose>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float closeAfter;

		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InfoPanel <>4__this;

		[Token(Token = "0x170000CF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600087A")]
			[Address(RVA = "0x10AA7E0", Offset = "0x10AA7E0", VA = "0x10AA7E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600087C")]
			[Address(RVA = "0x10AA828", Offset = "0x10AA828", VA = "0x10AA828", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000877")]
		[Address(RVA = "0x10AA6A8", Offset = "0x10AA6A8", VA = "0x10AA6A8")]
		[DebuggerHidden]
		public <AutoClose>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000878")]
		[Address(RVA = "0x10AA6D4", Offset = "0x10AA6D4", VA = "0x10AA6D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000879")]
		[Address(RVA = "0x10AA6D8", Offset = "0x10AA6D8", VA = "0x10AA6D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600087B")]
		[Address(RVA = "0x10AA7E8", Offset = "0x10AA7E8", VA = "0x10AA7E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshProUGUI _textComponent;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Button CloseButton;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Action _callbackOnCloseClick;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Coroutine autoCloseCoroutine;

	[Token(Token = "0x170000CE")]
	public TextMeshProUGUI TextComponent
	{
		[Token(Token = "0x6000871")]
		[Address(RVA = "0x10F1934", Offset = "0x10F1934", VA = "0x10F1934")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0x10F193C", Offset = "0x10F193C", VA = "0x10F193C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0x10F1940", Offset = "0x10F1940", VA = "0x10F1940")]
	public void PopUI(string text, bool enableClose = true, float autoCloseDuration = 0f, [Optional] Action OnCloseClick)
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0x10F1AB4", Offset = "0x10F1AB4", VA = "0x10F1AB4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C81CC", Offset = "0x8C81CC")]
	private IEnumerator AutoClose(float closeAfter)
	{
		return null;
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0x10F1B3C", Offset = "0x10F1B3C", VA = "0x10F1B3C")]
	public void CloseUI()
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0x10F1C10", Offset = "0x10F1C10", VA = "0x10F1C10")]
	public InfoPanel()
	{
	}
}
[Token(Token = "0x2000217")]
public class UIManager : MonoBehaviour
{
	[Token(Token = "0x2000218")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0D14", Offset = "0x8C0D14")]
	private sealed class <EnableAppVoice>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIManager <>4__this;

		[Token(Token = "0x170000D1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000888")]
			[Address(RVA = "0xEA4888", Offset = "0xEA4888", VA = "0xEA4888", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600088A")]
			[Address(RVA = "0xEA48D0", Offset = "0xEA48D0", VA = "0xEA48D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000885")]
		[Address(RVA = "0xEA478C", Offset = "0xEA478C", VA = "0xEA478C")]
		[DebuggerHidden]
		public <EnableAppVoice>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000886")]
		[Address(RVA = "0xEA47B8", Offset = "0xEA47B8", VA = "0xEA47B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000887")]
		[Address(RVA = "0xEA47BC", Offset = "0xEA47BC", VA = "0xEA47BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000889")]
		[Address(RVA = "0xEA4890", Offset = "0xEA4890", VA = "0xEA4890", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static UIManager Instance;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float distanceFromPlayer;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Vector3 distanceOffset;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Vector3 rotation;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public StandardDialogueUI standardDialougeUI;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public InfoPanel GenericInfoPanel;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public InfoPanel GenericInfoPanel_White;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public VoicePanel VoicePanel;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C34BC", Offset = "0x8C34BC")]
	[SerializeField]
	private AppVoiceExperience appVoiceExperience;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private float _enableAfterDuration;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool isWhiteInterfaceEnabled;

	[Token(Token = "0x600087D")]
	[Address(RVA = "0x115CB10", Offset = "0x115CB10", VA = "0x115CB10")]
	public void Awake()
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0x115CB64", Offset = "0x115CB64", VA = "0x115CB64")]
	private void Start()
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0x115CBDC", Offset = "0x115CBDC", VA = "0x115CBDC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C827C", Offset = "0x8C827C")]
	private IEnumerator EnableAppVoice()
	{
		return null;
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0x115CC54", Offset = "0x115CC54", VA = "0x115CC54")]
	public void EnableInfoPanel_Black()
	{
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0x115CD38", Offset = "0x115CD38", VA = "0x115CD38")]
	public void EnableInfoPanel_White()
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0x115CE20", Offset = "0x115CE20", VA = "0x115CE20")]
	public void PlaceInfoUIInfrontOfPlayer()
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0x115D174", Offset = "0x115D174", VA = "0x115D174")]
	public void OnClosePanel()
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0x115D49C", Offset = "0x115D49C", VA = "0x115D49C")]
	public UIManager()
	{
	}
}
[Token(Token = "0x2000219")]
public class UnZipUtil
{
	[Token(Token = "0x600088B")]
	[Address(RVA = "0x115E3C4", Offset = "0x115E3C4", VA = "0x115E3C4")]
	public static void CreateTarGZ_FromDirectory(string tgzFilename, string sourceDirectory)
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x115E518", Offset = "0x115E518", VA = "0x115E518")]
	public static void AddDirectoryFilesToTar(TarArchive tarArchive, string sourceDirectory, bool recurse)
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0x11547B4", Offset = "0x11547B4", VA = "0x11547B4")]
	public static void ExtractTGZ(string gzArchiveName, string destFolder)
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x115E63C", Offset = "0x115E63C", VA = "0x115E63C")]
	public UnZipUtil()
	{
	}
}
[Token(Token = "0x200021A")]
public class Water_Movement : MonoBehaviour
{
	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float ScrollX;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ScrollY;

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x115F8C8", Offset = "0x115F8C8", VA = "0x115F8C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0x115F968", Offset = "0x115F968", VA = "0x115F968")]
	public Water_Movement()
	{
	}
}
[Token(Token = "0x200021B")]
public class mouseLook : MonoBehaviour
{
	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float mouseSensitivity;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform playerBody;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float xRotation;

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x10A0AD4", Offset = "0x10A0AD4", VA = "0x10A0AD4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x10A0AE0", Offset = "0x10A0AE0", VA = "0x10A0AE0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x10A0C20", Offset = "0x10A0C20", VA = "0x10A0C20")]
	public mouseLook()
	{
	}
}
[Token(Token = "0x200021C")]
public class SkipBattle : MonoBehaviour
{
	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator anim;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private FollowWp followWp;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Follow follow;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private LookAtPlayer lookatplayer;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject tiger;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject audio;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool check;

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x98CD5C", Offset = "0x98CD5C", VA = "0x98CD5C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0x98CE74", Offset = "0x98CE74", VA = "0x98CE74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0x98D024", Offset = "0x98D024", VA = "0x98D024")]
	public SkipBattle()
	{
	}
}
[Token(Token = "0x200021D")]
public class DrawLines : MonoBehaviour
{
	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject linePrefab;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject currentLine;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LineRenderer lineRenderer;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public EdgeCollider2D edgeCollider;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Vector2> fingrePositions;

	[Token(Token = "0x6000897")]
	[Address(RVA = "0x1174D74", Offset = "0x1174D74", VA = "0x1174D74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0x1174ED8", Offset = "0x1174ED8", VA = "0x1174ED8")]
	private void CreateLine()
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0x11751B8", Offset = "0x11751B8", VA = "0x11751B8")]
	private void UpdateLine(Vector2 newFingrePosition)
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0x11752B4", Offset = "0x11752B4", VA = "0x11752B4")]
	public DrawLines()
	{
	}
}
[Token(Token = "0x200021E")]
public class Paintable : MonoBehaviour
{
	[Token(Token = "0x200021F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0D24", Offset = "0x8C0D24")]
	private sealed class <CoSave>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Paintable <>4__this;

		[Token(Token = "0x170000D3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008A3")]
			[Address(RVA = "0x10B1BCC", Offset = "0x10B1BCC", VA = "0x10B1BCC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008A5")]
			[Address(RVA = "0x10B1C14", Offset = "0x10B1C14", VA = "0x10B1C14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0x10B1958", Offset = "0x10B1958", VA = "0x10B1958")]
		[DebuggerHidden]
		public <CoSave>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0x10B1984", Offset = "0x10B1984", VA = "0x10B1984", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0x10B1988", Offset = "0x10B1988", VA = "0x10B1988", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0x10B1BD4", Offset = "0x10B1BD4", VA = "0x10B1BD4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Brush;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float BrushSize;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RenderTexture RTexture;

	[Token(Token = "0x600089B")]
	[Address(RVA = "0x979564", Offset = "0x979564", VA = "0x979564")]
	private void Start()
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0x979568", Offset = "0x979568", VA = "0x979568")]
	private void Update()
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0x97974C", Offset = "0x97974C", VA = "0x97974C")]
	public void Save()
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0x979778", Offset = "0x979778", VA = "0x979778")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C832C", Offset = "0x8C832C")]
	private IEnumerator CoSave()
	{
		return null;
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x9797F0", Offset = "0x9797F0", VA = "0x9797F0")]
	public Paintable()
	{
	}
}
[Token(Token = "0x2000220")]
public class Paintable1 : MonoBehaviour
{
	[Token(Token = "0x2000221")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0D34", Offset = "0x8C0D34")]
	private sealed class <CoSave>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Paintable1 <>4__this;

		[Token(Token = "0x170000D5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008B0")]
			[Address(RVA = "0x10B1E9C", Offset = "0x10B1E9C", VA = "0x10B1E9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008B2")]
			[Address(RVA = "0x10B1EE4", Offset = "0x10B1EE4", VA = "0x10B1EE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008AD")]
		[Address(RVA = "0x10B1C1C", Offset = "0x10B1C1C", VA = "0x10B1C1C")]
		[DebuggerHidden]
		public <CoSave>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60008AE")]
		[Address(RVA = "0x10B1C48", Offset = "0x10B1C48", VA = "0x10B1C48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008AF")]
		[Address(RVA = "0x10B1C4C", Offset = "0x10B1C4C", VA = "0x10B1C4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008B1")]
		[Address(RVA = "0x10B1EA4", Offset = "0x10B1EA4", VA = "0x10B1EA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RenderTexture RTexture;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject linePrefab;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject currentLine;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LineRenderer lineRenderer;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public EdgeCollider2D edgeCollider;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Vector2> fingrePositions;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject image;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RawImage image1;

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x979804", Offset = "0x979804", VA = "0x979804")]
	private void Start()
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x979868", Offset = "0x979868", VA = "0x979868")]
	private void Update()
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x979980", Offset = "0x979980", VA = "0x979980")]
	private void CreateLine()
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x979C78", Offset = "0x979C78", VA = "0x979C78")]
	private void UpdateLine(Vector2 newFingrePosition)
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x979E04", Offset = "0x979E04", VA = "0x979E04")]
	public void Save()
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0x979D8C", Offset = "0x979D8C", VA = "0x979D8C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C83DC", Offset = "0x8C83DC")]
	private IEnumerator CoSave()
	{
		return null;
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x979E30", Offset = "0x979E30", VA = "0x979E30")]
	public Paintable1()
	{
	}
}
[Token(Token = "0x2000222")]
public class Buttons : MonoBehaviour
{
	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera _camera;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject acacia;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject beech;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject birch;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject dryTree;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject fir;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject juniper;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject maple;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject oak;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject pine;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject spruce;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject sycamore;

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x108DC98", Offset = "0x108DC98", VA = "0x108DC98")]
	public void Acacia()
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x108DDF0", Offset = "0x108DDF0", VA = "0x108DDF0")]
	public void Beech()
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x108DF48", Offset = "0x108DF48", VA = "0x108DF48")]
	public void Birch()
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x108E0A0", Offset = "0x108E0A0", VA = "0x108E0A0")]
	public void DryTree()
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x108E1F8", Offset = "0x108E1F8", VA = "0x108E1F8")]
	public void Fir()
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x108E350", Offset = "0x108E350", VA = "0x108E350")]
	public void Juniper()
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x108E4A8", Offset = "0x108E4A8", VA = "0x108E4A8")]
	public void Maple()
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x108E600", Offset = "0x108E600", VA = "0x108E600")]
	public void Oak()
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x108E758", Offset = "0x108E758", VA = "0x108E758")]
	public void Pine()
	{
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x108E8B0", Offset = "0x108E8B0", VA = "0x108E8B0")]
	public void Spruce()
	{
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x108EA08", Offset = "0x108EA08", VA = "0x108EA08")]
	public void Sycamore()
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x108EB60", Offset = "0x108EB60", VA = "0x108EB60")]
	public Buttons()
	{
	}
}
[Token(Token = "0x2000223")]
public class CameraPosition : MonoBehaviour
{
	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float horizontalFoV;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera _camera;

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x10971DC", Offset = "0x10971DC", VA = "0x10971DC")]
	private void Start()
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x1097238", Offset = "0x1097238", VA = "0x1097238")]
	private void Update()
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x10972C8", Offset = "0x10972C8", VA = "0x10972C8")]
	public CameraPosition()
	{
	}
}
[Token(Token = "0x2000224")]
public class Controller : MonoBehaviour
{
	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera _camera;

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x109A648", Offset = "0x109A648", VA = "0x109A648")]
	public void Update()
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x109A81C", Offset = "0x109A81C", VA = "0x109A81C")]
	public Controller()
	{
	}
}
[Token(Token = "0x2000225")]
public class Cursors : MonoBehaviour
{
	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D handCursor;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture2D grabCursor;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture2D clickCursor;

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x109B9F4", Offset = "0x109B9F4", VA = "0x109B9F4")]
	public void ActivateHandCursor()
	{
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0x109BA24", Offset = "0x109BA24", VA = "0x109BA24")]
	public void ActivateGrabCursor()
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x109BA54", Offset = "0x109BA54", VA = "0x109BA54")]
	public void ActivateClickCursor()
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x109BA84", Offset = "0x109BA84", VA = "0x109BA84")]
	public void DeactivateCursors()
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x109BAA8", Offset = "0x109BAA8", VA = "0x109BAA8")]
	public Cursors()
	{
	}
}
[Token(Token = "0x2000226")]
public class HideImage : MonoBehaviour
{
	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject controlsImage;

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x1185238", Offset = "0x1185238", VA = "0x1185238")]
	private void Start()
	{
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x1185258", Offset = "0x1185258", VA = "0x1185258")]
	public HideImage()
	{
	}
}
[Token(Token = "0x2000227")]
public class HideShowButtons : MonoBehaviour
{
	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject buttons;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool areVisible;

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x1185260", Offset = "0x1185260", VA = "0x1185260")]
	private void Start()
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x1185264", Offset = "0x1185264", VA = "0x1185264")]
	private void Update()
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x11852C8", Offset = "0x11852C8", VA = "0x11852C8")]
	public HideShowButtons()
	{
	}
}
[Token(Token = "0x2000228")]
public class switch_scenes : MonoBehaviour
{
	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string sceneName;

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x10A2B8C", Offset = "0x10A2B8C", VA = "0x10A2B8C")]
	private void Start()
	{
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x10A2CC4", Offset = "0x10A2CC4", VA = "0x10A2CC4")]
	private void Update()
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x10A2CC8", Offset = "0x10A2CC8", VA = "0x10A2CC8")]
	public switch_scenes()
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x10A2D24", Offset = "0x10A2D24", VA = "0x10A2D24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C848C", Offset = "0x8C848C")]
	private void <Start>b__1_0()
	{
	}
}
[Token(Token = "0x2000229")]
public class ME_DemoGUI : MonoBehaviour
{
	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject Character;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject Model;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int Current;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] Prefabs;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Light Sun;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ReflectionProbe ReflectionProbe;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Light[] NightLights;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Texture HUETexture;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool UseMobileVersion;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject MobileCharacter;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject Target;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Color guiColor;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int currentNomber;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject characterInstance;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject modelInstance;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GUIStyle guiStyleHeader;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GUIStyle guiStyleHeaderMobile;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float dpiScale;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool isDay;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float colorHUE;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float startSunIntensity;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Quaternion startSunRotation;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Color startAmbientLight;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float startAmbientIntencity;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float startReflectionIntencity;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private LightShadows startLightShadows;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private bool isButtonPressed;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private GameObject instanceShieldProjectile;

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0xC66520", Offset = "0xC66520", VA = "0xC66520")]
	private void Start()
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0xC669C8", Offset = "0xC669C8", VA = "0xC669C8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0xC66694", Offset = "0xC66694", VA = "0xC66694")]
	private void ChangeCurrent(int delta)
	{
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0xC670EC", Offset = "0xC670EC", VA = "0xC670EC")]
	private void RemoveClones()
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0xC67214", Offset = "0xC67214", VA = "0xC67214")]
	private void ReactivateEffect()
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0xC67280", Offset = "0xC67280", VA = "0xC67280")]
	public ME_DemoGUI()
	{
	}
}
[Token(Token = "0x200022A")]
public class ME_MouseOrbit : MonoBehaviour
{
	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distance;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float xSpeed;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ySpeed;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float yMinLimit;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float yMaxLimit;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float x;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float y;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float prevDistance;

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0xC676CC", Offset = "0xC676CC", VA = "0xC676CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0xC67704", Offset = "0xC67704", VA = "0xC67704")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0xC67B4C", Offset = "0xC67B4C", VA = "0xC67B4C")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0xC67B7C", Offset = "0xC67B7C", VA = "0xC67B7C")]
	public ME_MouseOrbit()
	{
	}
}
[Token(Token = "0x200022B")]
public class ME_RealtimeReflection : MonoBehaviour
{
	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ReflectionProbe probe;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform camT;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool CanUpdate;

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0xC69AC4", Offset = "0xC69AC4", VA = "0xC69AC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0xC69B48", Offset = "0xC69B48", VA = "0xC69B48")]
	private void Update()
	{
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0xC69BE4", Offset = "0xC69BE4", VA = "0xC69BE4")]
	public ME_RealtimeReflection()
	{
	}
}
[Token(Token = "0x200022C")]
public class ME_AnimatorEvents : MonoBehaviour
{
	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject EffectPrefab;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject SwordPrefab;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform SwordPosition;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform StartSwordPosition;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject EffectInstance;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject SwordInstance;

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0x1103238", Offset = "0x1103238", VA = "0x1103238")]
	private void Start()
	{
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0x11033E0", Offset = "0x11033E0", VA = "0x11033E0")]
	public void ActivateEffect()
	{
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0x110360C", Offset = "0x110360C", VA = "0x110360C")]
	public void ActivateSword()
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0x11036D4", Offset = "0x11036D4", VA = "0x11036D4")]
	public void UpdateColor(float HUE)
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0x1103C74", Offset = "0x1103C74", VA = "0x1103C74")]
	public ME_AnimatorEvents()
	{
	}
}
[Token(Token = "0x200022D")]
public static class ME_ColorHelper
{
	[Token(Token = "0x200022E")]
	public struct HSBColor
	{
		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float H;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float S;

		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float B;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float A;

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0x10AED64", Offset = "0x10AED64", VA = "0x10AED64")]
		public HSBColor(float h, float s, float b, float a)
		{
		}
	}

	[Token(Token = "0x4000A37")]
	private const float TOLERANCE = 0.0001f;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string[] colorProperties;

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0x110384C", Offset = "0x110384C", VA = "0x110384C")]
	public static HSBColor ColorToHSV(Color color)
	{
		return default(HSBColor);
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0x1103A34", Offset = "0x1103A34", VA = "0x1103A34")]
	public static Color HSVToColor(HSBColor hsbColor)
	{
		return default(Color);
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0x1103C7C", Offset = "0x1103C7C", VA = "0x1103C7C")]
	public static Color ConvertRGBColorByHUE(Color rgbColor, float hue)
	{
		return default(Color);
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x1103D98", Offset = "0x1103D98", VA = "0x1103D98")]
	public static void ChangeObjectColorByHUE(GameObject go, float hue)
	{
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x1104A34", Offset = "0x1104A34", VA = "0x1104A34")]
	private static Material setMatHUEColor(Material mat, string name, float hueColor)
	{
		return null;
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x1104B0C", Offset = "0x1104B0C", VA = "0x1104B0C")]
	private static Material setMatAlphaColor(Material mat, string name, float alpha)
	{
		return null;
	}
}
[Token(Token = "0x200022F")]
public class ME_EffectSettingColor : MonoBehaviour
{
	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color Color;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color previousColor;

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0xC6735C", Offset = "0xC6735C", VA = "0xC6735C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0xC67360", Offset = "0xC67360", VA = "0xC67360")]
	private void Update()
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0xC673A8", Offset = "0xC673A8", VA = "0xC673A8")]
	private void UpdateColor()
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0xC67458", Offset = "0xC67458", VA = "0xC67458")]
	public ME_EffectSettingColor()
	{
	}
}
[Token(Token = "0x2000230")]
[ExecuteInEditMode]
public class ME_CustomLight : MonoBehaviour
{
	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int MaxLightsCount;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Texture2D PointLightAttenuation;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Light> sceneLights;

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0x1104F10", Offset = "0x1104F10", VA = "0x1104F10")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0x11052E8", Offset = "0x11052E8", VA = "0x11052E8")]
	private void Update()
	{
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0x1106504", Offset = "0x1106504", VA = "0x1106504")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0x11054C4", Offset = "0x11054C4", VA = "0x11054C4")]
	private List<Light> GetAllLights()
	{
		return null;
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0x11056B0", Offset = "0x11056B0", VA = "0x11056B0")]
	private int FillDirectionalLights(List<Light> lights, List<Vector4> lightPositions, List<Vector4> lightColors)
	{
		return default(int);
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0x1105BE4", Offset = "0x1105BE4", VA = "0x1105BE4")]
	private int FillPointLights(List<Light> lights, List<Vector4> lightPositions, List<Vector4> lightColors)
	{
		return default(int);
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0x11050A8", Offset = "0x11050A8", VA = "0x11050A8")]
	private Vector4[] ListToArrayWithMaxCount(List<Vector4> list, int count)
	{
		return null;
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0x1105904", Offset = "0x1105904", VA = "0x1105904")]
	private List<Light> SortPointLightsByDistance(List<Light> lights)
	{
		return null;
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x1105E7C", Offset = "0x1105E7C", VA = "0x1105E7C")]
	public Color SampleLightProbesUp(Vector3 pos, float grayScaleFactor)
	{
		return default(Color);
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x11051C8", Offset = "0x11051C8", VA = "0x11051C8")]
	private Texture2D GeneratePointAttenuationTexture()
	{
		return null;
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x110663C", Offset = "0x110663C", VA = "0x110663C")]
	public ME_CustomLight()
	{
	}
}
[Token(Token = "0x2000231")]
public class ME_FixParticlesAligment : MonoBehaviour
{
	[Token(Token = "0x60008FC")]
	[Address(RVA = "0xC6748C", Offset = "0xC6748C", VA = "0xC6748C")]
	private void Start()
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0xC6750C", Offset = "0xC6750C", VA = "0xC6750C")]
	public ME_FixParticlesAligment()
	{
	}
}
[Token(Token = "0x2000232")]
public class ME_LightCurves : MonoBehaviour
{
	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve LightCurve;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float GraphIntensityMultiplier;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool IsLoop;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool canUpdate;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float startTime;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light lightSource;

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0xC67514", Offset = "0xC67514", VA = "0xC67514")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0xC6759C", Offset = "0xC6759C", VA = "0xC6759C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0xC675CC", Offset = "0xC675CC", VA = "0xC675CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0xC67670", Offset = "0xC67670", VA = "0xC67670")]
	public ME_LightCurves()
	{
	}
}
[Token(Token = "0x2000233")]
public class ME_MeshMaterialEffect : MonoBehaviour
{
	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material Material;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool IsFirstMaterial;

	[Token(Token = "0x6000902")]
	[Address(RVA = "0xC676C4", Offset = "0xC676C4", VA = "0xC676C4")]
	public ME_MeshMaterialEffect()
	{
	}
}
[Token(Token = "0x2000234")]
[ExecuteInEditMode]
public class ME_ParticleCollisionDecal : MonoBehaviour
{
	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ParticleSystem DecalParticles;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool IsBilboard;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool InstantiateWhenZeroSpeed;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float MaxGroundAngleDeviation;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float MinDistanceBetweenDecals;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float MinDistanceBetweenSurface;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<ParticleCollisionEvent> collisionEvents;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private ParticleSystem initiatorPS;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<GameObject> collidedGameObjects;

	[Token(Token = "0x6000903")]
	[Address(RVA = "0xC67B98", Offset = "0xC67B98", VA = "0xC67B98")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0xC67CE0", Offset = "0xC67CE0", VA = "0xC67CE0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0xC67D44", Offset = "0xC67D44", VA = "0xC67D44")]
	private void CollisionDetect()
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0xC67E84", Offset = "0xC67E84", VA = "0xC67E84")]
	private void OnParticleCollisionManual(GameObject other, int aliveParticles = -1)
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0xC682E8", Offset = "0xC682E8", VA = "0xC682E8")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0xC683AC", Offset = "0xC683AC", VA = "0xC683AC")]
	public ME_ParticleCollisionDecal()
	{
	}
}
[Token(Token = "0x2000235")]
[ExecuteInEditMode]
public class ME_ParticleGravityPoint : MonoBehaviour
{
	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Force;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool DistanceRelative;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem ps;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ParticleSystem.MainModule mainModule;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 prevPos;

	[Token(Token = "0x6000909")]
	[Address(RVA = "0xC68494", Offset = "0xC68494", VA = "0xC68494")]
	private void Start()
	{
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0xC68514", Offset = "0xC68514", VA = "0xC68514")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0xC687CC", Offset = "0xC687CC", VA = "0xC687CC")]
	public ME_ParticleGravityPoint()
	{
	}
}
[Token(Token = "0x2000236")]
public class ME_ParticleTrails : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000237")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0D74", Offset = "0x8C0D74")]
	private sealed class <>c
	{
		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<KeyValuePair<uint, GameObject>, bool> <>9__13_0;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<KeyValuePair<uint, GameObject>, uint> <>9__13_1;

		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<KeyValuePair<uint, GameObject>, GameObject> <>9__13_2;

		[Token(Token = "0x6000916")]
		[Address(RVA = "0x10AEDD4", Offset = "0x10AEDD4", VA = "0x10AEDD4")]
		public <>c()
		{
		}

		[Token(Token = "0x6000917")]
		[Address(RVA = "0x10AEDDC", Offset = "0x10AEDDC", VA = "0x10AEDDC")]
		internal bool <ClearEmptyHashes>b__13_0(KeyValuePair<uint, GameObject> h)
		{
			return default(bool);
		}

		[Token(Token = "0x6000918")]
		[Address(RVA = "0x10AEE50", Offset = "0x10AEE50", VA = "0x10AEE50")]
		internal uint <ClearEmptyHashes>b__13_1(KeyValuePair<uint, GameObject> h)
		{
			return default(uint);
		}

		[Token(Token = "0x6000919")]
		[Address(RVA = "0x10AEE90", Offset = "0x10AEE90", VA = "0x10AEE90")]
		internal GameObject <ClearEmptyHashes>b__13_2(KeyValuePair<uint, GameObject> h)
		{
			return null;
		}
	}

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject TrailPrefab;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem ps;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<uint, GameObject> hashTrails;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<uint, GameObject> newHashTrails;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<GameObject> currentGO;

	[Token(Token = "0x600090C")]
	[Address(RVA = "0xC687DC", Offset = "0xC687DC", VA = "0xC687DC")]
	private void Start()
	{
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0xC688A0", Offset = "0xC688A0", VA = "0xC688A0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0xC688F8", Offset = "0xC688F8", VA = "0xC688F8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0xC68950", Offset = "0xC68950", VA = "0xC68950")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0xC68AB8", Offset = "0xC68AB8", VA = "0xC68AB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0xC68ABC", Offset = "0xC68ABC", VA = "0xC68ABC")]
	private void UpdateTrail()
	{
	}

	[Token(Token = "0x6000912")]
	public void AddRange<T, S>(Dictionary<T, S> source, Dictionary<T, S> collection)
	{
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0xC69250", Offset = "0xC69250", VA = "0xC69250")]
	private void ClearEmptyHashes()
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0xC69530", Offset = "0xC69530", VA = "0xC69530")]
	public ME_ParticleTrails()
	{
	}
}
[Token(Token = "0x2000238")]
public class ME_Reflection : MonoBehaviour
{
	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RenderTexture tex;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ReflectionProbe reflectionProbe;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Light> dirLight;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<float> lightIntencity;

	[Token(Token = "0x600091A")]
	[Address(RVA = "0xC69BF4", Offset = "0xC69BF4", VA = "0xC69BF4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0xC69EF4", Offset = "0xC69EF4", VA = "0xC69EF4")]
	private void Update()
	{
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0xC6A0C0", Offset = "0xC6A0C0", VA = "0xC6A0C0")]
	public ME_Reflection()
	{
	}
}
[Token(Token = "0x2000239")]
public class ME_TrailRendererNoise : MonoBehaviour
{
	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C3518", Offset = "0x8C3518")]
	public float MinVertexDistance;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float VertexTime;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float TotalLifeTime;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool SmoothCurves;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool IsRibbon;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool IsActive;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C3534", Offset = "0x8C3534")]
	public float Frequency;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C3550", Offset = "0x8C3550")]
	public float TimeScale;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C356C", Offset = "0x8C356C")]
	public float Amplitude;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float Gravity;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float TurbulenceStrength;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool AutodestructWhenNotActive;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform t;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 prevPos;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Vector3> points;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<float> lifeTimes;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<Vector3> velocities;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float randomOffset;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private List<Vector3> controlPoints;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int curveCount;

	[Token(Token = "0x4000A7F")]
	private const float MinimumSqrDistance = 0.01f;

	[Token(Token = "0x4000A80")]
	private const float DivisionThreshold = -0.99f;

	[Token(Token = "0x4000A81")]
	private const float SmoothCurvesScale = 0.5f;

	[Token(Token = "0x600091D")]
	[Address(RVA = "0xC6A0C8", Offset = "0xC6A0C8", VA = "0xC6A0C8")]
	private void Start()
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0xC6A22C", Offset = "0xC6A22C", VA = "0xC6A22C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0xC6A2B4", Offset = "0xC6A2B4", VA = "0xC6A2B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0xC6A3C8", Offset = "0xC6A3C8", VA = "0xC6A3C8")]
	private void AddNewPoints()
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0xC6A5A8", Offset = "0xC6A5A8", VA = "0xC6A5A8")]
	private void UpdatetPoints()
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0xC6A794", Offset = "0xC6A794", VA = "0xC6A794")]
	private void UpdateLineRendererBezier()
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0xC6A864", Offset = "0xC6A864", VA = "0xC6A864")]
	private void UpdateLineRenderer()
	{
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0xC6A914", Offset = "0xC6A914", VA = "0xC6A914")]
	private void CalculateTurbuelence(Vector3 position, float speed, float scale, float height, float gravity, int index)
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0xC6AAE0", Offset = "0xC6AAE0", VA = "0xC6AAE0")]
	public void InterpolateBezier(List<Vector3> segmentPoints, float scale)
	{
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0xC6AE80", Offset = "0xC6AE80", VA = "0xC6AE80")]
	public List<Vector3> GetDrawingPoints()
	{
		return null;
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0xC6AF88", Offset = "0xC6AF88", VA = "0xC6AF88")]
	private List<Vector3> FindDrawingPoints(int curveIndex)
	{
		return null;
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0xC6B24C", Offset = "0xC6B24C", VA = "0xC6B24C")]
	private int FindDrawingPoints(int curveIndex, float t0, float t1, List<Vector3> pointList, int insertionIndex)
	{
		return default(int);
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0xC6B0BC", Offset = "0xC6B0BC", VA = "0xC6B0BC")]
	public Vector3 CalculateBezierPoint(int curveIndex, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0xC6B474", Offset = "0xC6B474", VA = "0xC6B474")]
	private Vector3 CalculateBezierPoint(float t, Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0xC6B508", Offset = "0xC6B508", VA = "0xC6B508")]
	public ME_TrailRendererNoise()
	{
	}
}
[Token(Token = "0x200023A")]
[ExecuteInEditMode]
public class PSMeshRendererUpdater : MonoBehaviour
{
	[Token(Token = "0x200023B")]
	private class ParticleStartInfo
	{
		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ParticleSystem.MinMaxCurve StartSize;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ParticleSystem.MinMaxCurve StartSpeed;

		[Token(Token = "0x600093E")]
		[Address(RVA = "0x10B1950", Offset = "0x10B1950", VA = "0x10B1950")]
		public ParticleStartInfo()
		{
		}
	}

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject MeshObject;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float StartScaleMultiplier;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Color Color;

	[Token(Token = "0x4000A85")]
	private const string materialName = "MeshEffect";

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Material[]> rendererMaterials;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Material[]> skinnedMaterials;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool IsActive;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float FadeTime;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool currentActiveStatus;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool needUpdateAlpha;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Color oldColor;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float currentAlphaTime;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private string[] colorProperties;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float alpha;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float prevAlpha;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Dictionary<string, float> startAlphaColors;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool previousActiveStatus;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool needUpdate;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	private bool needLastUpdate;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Dictionary<ParticleSystem, ParticleStartInfo> startParticleParameters;

	[Token(Token = "0x600092C")]
	[Address(RVA = "0xCA6F88", Offset = "0xCA6F88", VA = "0xCA6F88")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0xCA6F98", Offset = "0xCA6F98", VA = "0xCA6F98")]
	private void Update()
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0xCA7128", Offset = "0xCA7128", VA = "0xCA7128")]
	private void InitStartAlphaColors()
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0xCA81C0", Offset = "0xCA81C0", VA = "0xCA81C0")]
	private void InitStartParticleParameters()
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0xCA77C0", Offset = "0xCA77C0", VA = "0xCA77C0")]
	private void UpdateVisibleStatus()
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0xCA83A8", Offset = "0xCA83A8", VA = "0xCA83A8")]
	private void UpdateAlphaByProperties(string rendName, int materialNumber, Material mat, float alpha)
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0xCA8018", Offset = "0xCA8018", VA = "0xCA8018")]
	private void GetStartAlphaByProperties(string rendName, int materialNumber, Material mat)
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0xCA7F24", Offset = "0xCA7F24", VA = "0xCA7F24")]
	public void UpdateColor(Color color)
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0xCA8508", Offset = "0xCA8508", VA = "0xCA8508")]
	public void UpdateColor(float HUE)
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0xCA85D4", Offset = "0xCA85D4", VA = "0xCA85D4")]
	public void UpdateMeshEffect()
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0xCA8F40", Offset = "0xCA8F40", VA = "0xCA8F40")]
	private void CheckScaleIncludedParticles()
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0xCA8F44", Offset = "0xCA8F44", VA = "0xCA8F44")]
	public void UpdateMeshEffect(GameObject go)
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0xCA86F0", Offset = "0xCA86F0", VA = "0xCA86F0")]
	private void UpdatePSMesh(GameObject go)
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0xCA9078", Offset = "0xCA9078", VA = "0xCA9078")]
	private ParticleSystem.MinMaxCurve UpdateParticleParam(ParticleSystem.MinMaxCurve startParam, ParticleSystem.MinMaxCurve currentParam, float scale)
	{
		return default(ParticleSystem.MinMaxCurve);
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0xCA8D1C", Offset = "0xCA8D1C", VA = "0xCA8D1C")]
	private void AddMaterialToMesh(GameObject go)
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0xCA9134", Offset = "0xCA9134", VA = "0xCA9134")]
	private Material[] AddToSharedMaterial(Material[] sharedMaterials, ME_MeshMaterialEffect meshMatEffect)
	{
		return null;
	}

	[Token(Token = "0x600093C")]
	[Address(RVA = "0xCA9320", Offset = "0xCA9320", VA = "0xCA9320")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0xCA9764", Offset = "0xCA9764", VA = "0xCA9764")]
	public PSMeshRendererUpdater()
	{
	}
}
[Token(Token = "0x200023C")]
public class ME_PerPlatformSettings : MonoBehaviour
{
	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool DisableOnMobiles;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool RenderMobileDistortion;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C3588", Offset = "0x8C3588")]
	public float ParticleBudgetForMobiles;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isMobile;

	[Token(Token = "0x600093F")]
	[Address(RVA = "0xC6962C", Offset = "0xC6962C", VA = "0xC6962C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0xC696B0", Offset = "0xC696B0", VA = "0xC696B0")]
	private bool IsMobilePlatform()
	{
		return default(bool);
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0xC696B8", Offset = "0xC696B8", VA = "0xC696B8")]
	private void ChangeParticlesBudget(float particlesMul)
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0xC69AB4", Offset = "0xC69AB4", VA = "0xC69AB4")]
	public ME_PerPlatformSettings()
	{
	}
}
[Token(Token = "0x200023D")]
public class SerializableDictionaryExample : MonoBehaviour
{
	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private StringStringDictionary m_stringStringDictionary;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ObjectColorDictionary m_objectColorDictionary;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public StringColorArrayDictionary m_objectColorArrayDictionary;

	[Token(Token = "0x170000D7")]
	public IDictionary<string, string> StringStringDictionary
	{
		[Token(Token = "0x6000943")]
		[Address(RVA = "0x98BAF8", Offset = "0x98BAF8", VA = "0x98BAF8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000944")]
		[Address(RVA = "0x98BB00", Offset = "0x98BB00", VA = "0x98BB00")]
		set
		{
		}
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0x98BB64", Offset = "0x98BB64", VA = "0x98BB64")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0x98BD40", Offset = "0x98BD40", VA = "0x98BD40")]
	public SerializableDictionaryExample()
	{
	}
}
[Serializable]
[Token(Token = "0x200023E")]
public class StringStringDictionary : SerializableDictionary<string, string>
{
	[Token(Token = "0x6000947")]
	[Address(RVA = "0x114FAB4", Offset = "0x114FAB4", VA = "0x114FAB4")]
	public StringStringDictionary()
	{
	}
}
[Serializable]
[Token(Token = "0x200023F")]
public class ObjectColorDictionary : SerializableDictionary<UnityEngine.Object, Color>
{
	[Token(Token = "0x6000948")]
	[Address(RVA = "0xC76AD8", Offset = "0xC76AD8", VA = "0xC76AD8")]
	public ObjectColorDictionary()
	{
	}
}
[Serializable]
[Token(Token = "0x2000240")]
public class ColorArrayStorage : SerializableDictionary.Storage<Color[]>
{
	[Token(Token = "0x6000949")]
	[Address(RVA = "0x109958C", Offset = "0x109958C", VA = "0x109958C")]
	public ColorArrayStorage()
	{
	}
}
[Serializable]
[Token(Token = "0x2000241")]
public class StringColorArrayDictionary : SerializableDictionary<string, Color[], ColorArrayStorage>
{
	[Token(Token = "0x600094A")]
	[Address(RVA = "0x114FA1C", Offset = "0x114FA1C", VA = "0x114FA1C")]
	public StringColorArrayDictionary()
	{
	}
}
[Serializable]
[Token(Token = "0x2000242")]
public class MyClass
{
	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int i;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string str;

	[Token(Token = "0x600094B")]
	[Address(RVA = "0xC71FB0", Offset = "0xC71FB0", VA = "0xC71FB0")]
	public MyClass()
	{
	}
}
[Serializable]
[Token(Token = "0x2000243")]
public class QuaternionMyClassDictionary : SerializableDictionary<Quaternion, MyClass>
{
	[Token(Token = "0x600094C")]
	[Address(RVA = "0x97FF5C", Offset = "0x97FF5C", VA = "0x97FF5C")]
	public QuaternionMyClassDictionary()
	{
	}
}
[Token(Token = "0x2000244")]
public abstract class SerializableDictionaryBase<TKey, TValue, TValueStorage> : Dictionary<TKey, TValue>, ISerializationCallbackReceiver
{
	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private TKey[] m_keys;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	private TValueStorage[] m_values;

	[Token(Token = "0x600094D")]
	public SerializableDictionaryBase()
	{
	}

	[Token(Token = "0x600094E")]
	public SerializableDictionaryBase(IDictionary<TKey, TValue> dict)
	{
	}

	[Token(Token = "0x600094F")]
	protected SerializableDictionaryBase(SerializationInfo info, StreamingContext context)
	{
	}

	[Token(Token = "0x6000950")]
	protected abstract void SetValue(TValueStorage[] storage, int i, TValue value);

	[Token(Token = "0x6000951")]
	protected abstract TValue GetValue(TValueStorage[] storage, int i);

	[Token(Token = "0x6000952")]
	public void CopyFrom(IDictionary<TKey, TValue> dict)
	{
	}

	[Token(Token = "0x6000953")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x6000954")]
	public void OnBeforeSerialize()
	{
	}
}
[Token(Token = "0x2000245")]
public class SerializableDictionary<TKey, TValue> : SerializableDictionaryBase<TKey, TValue, TValue>
{
	[Token(Token = "0x6000955")]
	public SerializableDictionary()
	{
	}

	[Token(Token = "0x6000956")]
	public SerializableDictionary(IDictionary<TKey, TValue> dict)
	{
	}

	[Token(Token = "0x6000957")]
	protected SerializableDictionary(SerializationInfo info, StreamingContext context)
	{
	}

	[Token(Token = "0x6000958")]
	protected override TValue GetValue(TValue[] storage, int i)
	{
		return (TValue)null;
	}

	[Token(Token = "0x6000959")]
	protected override void SetValue(TValue[] storage, int i, TValue value)
	{
	}
}
[Token(Token = "0x2000246")]
public static class SerializableDictionary
{
	[Token(Token = "0x2000247")]
	public class Storage<T>
	{
		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T data;

		[Token(Token = "0x600095A")]
		public Storage()
		{
		}
	}
}
[Token(Token = "0x2000248")]
public class SerializableDictionary<TKey, TValue, TValueStorage> : SerializableDictionaryBase<TKey, TValue, TValueStorage> where TValueStorage : SerializableDictionary.Storage<TValue>, new()
{
	[Token(Token = "0x600095B")]
	public SerializableDictionary()
	{
	}

	[Token(Token = "0x600095C")]
	public SerializableDictionary(IDictionary<TKey, TValue> dict)
	{
	}

	[Token(Token = "0x600095D")]
	protected SerializableDictionary(SerializationInfo info, StreamingContext context)
	{
	}

	[Token(Token = "0x600095E")]
	protected override TValue GetValue(TValueStorage[] storage, int i)
	{
		return (TValue)null;
	}

	[Token(Token = "0x600095F")]
	protected override void SetValue(TValueStorage[] storage, int i, TValue value)
	{
	}
}
[Token(Token = "0x2000249")]
public class Readme : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x200024A")]
	public class Section
	{
		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string heading;

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string text;

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string linkText;

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string url;

		[Token(Token = "0x6000961")]
		[Address(RVA = "0xEA1348", Offset = "0xEA1348", VA = "0xEA1348")]
		public Section()
		{
		}
	}

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D icon;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string title;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Section[] sections;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool loadedLayout;

	[Token(Token = "0x6000960")]
	[Address(RVA = "0x981A2C", Offset = "0x981A2C", VA = "0x981A2C")]
	public Readme()
	{
	}
}
namespace SimpleJSON
{
	[Token(Token = "0x200024B")]
	public enum JSONBinaryTag
	{
		[Token(Token = "0x4000AAD")]
		Array = 1,
		[Token(Token = "0x4000AAE")]
		Class,
		[Token(Token = "0x4000AAF")]
		Value,
		[Token(Token = "0x4000AB0")]
		IntValue,
		[Token(Token = "0x4000AB1")]
		DoubleValue,
		[Token(Token = "0x4000AB2")]
		BoolValue,
		[Token(Token = "0x4000AB3")]
		FloatValue,
		[Token(Token = "0x4000AB4")]
		LongValue,
		[Token(Token = "0x4000AB5")]
		Null
	}
	[Token(Token = "0x200024C")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8C0D94", Offset = "0x8C0D94")]
	public abstract class JSONNode
	{
		[Token(Token = "0x200024D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0DCC", Offset = "0x8C0DCC")]
		private sealed class <get_Children>d__17 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000AB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000AB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4000AB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x170000E7")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x600099D")]
				[Address(RVA = "0x10AC088", Offset = "0x10AC088", VA = "0x10AC088", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600099F")]
				[Address(RVA = "0x10AC0D0", Offset = "0x10AC0D0", VA = "0x10AC0D0", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600099A")]
			[Address(RVA = "0x10AC034", Offset = "0x10AC034", VA = "0x10AC034")]
			[DebuggerHidden]
			public <get_Children>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x600099B")]
			[Address(RVA = "0x10AC06C", Offset = "0x10AC06C", VA = "0x10AC06C", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600099C")]
			[Address(RVA = "0x10AC070", Offset = "0x10AC070", VA = "0x10AC070", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600099E")]
			[Address(RVA = "0x10AC090", Offset = "0x10AC090", VA = "0x10AC090", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60009A0")]
			[Address(RVA = "0x10AC0D8", Offset = "0x10AC0D8", VA = "0x10AC0D8", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60009A1")]
			[Address(RVA = "0x10AC16C", Offset = "0x10AC16C", VA = "0x10AC16C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x200024E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0DDC", Offset = "0x8C0DDC")]
		private sealed class <get_DeepChildren>d__19 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000ABA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000ABB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4000ABC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000ABD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONNode <>4__this;

			[Token(Token = "0x4000ABE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private IEnumerator<JSONNode> <>7__wrap1;

			[Token(Token = "0x4000ABF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private IEnumerator<JSONNode> <>7__wrap2;

			[Token(Token = "0x170000E9")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x60009A7")]
				[Address(RVA = "0x10AC81C", Offset = "0x10AC81C", VA = "0x10AC81C", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000EA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009A9")]
				[Address(RVA = "0x10AC864", Offset = "0x10AC864", VA = "0x10AC864", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009A2")]
			[Address(RVA = "0x10AC170", Offset = "0x10AC170", VA = "0x10AC170")]
			[DebuggerHidden]
			public <get_DeepChildren>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x60009A3")]
			[Address(RVA = "0x10AC1A8", Offset = "0x10AC1A8", VA = "0x10AC1A8", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009A4")]
			[Address(RVA = "0x10AC3B0", Offset = "0x10AC3B0", VA = "0x10AC3B0", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009A5")]
			[Address(RVA = "0x10AC2F4", Offset = "0x10AC2F4", VA = "0x10AC2F4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60009A6")]
			[Address(RVA = "0x10AC238", Offset = "0x10AC238", VA = "0x10AC238")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x60009A8")]
			[Address(RVA = "0x10AC824", Offset = "0x10AC824", VA = "0x10AC824", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60009AA")]
			[Address(RVA = "0x10AC86C", Offset = "0x10AC86C", VA = "0x10AC86C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60009AB")]
			[Address(RVA = "0x10AC91C", Offset = "0x10AC91C", VA = "0x10AC91C", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C35D4", Offset = "0x8C35D4")]
		private JSONBinaryTag <Tag>k__BackingField;

		[Token(Token = "0x170000D8")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x6000963")]
			[Address(RVA = "0x10F9D5C", Offset = "0x10F9D5C", VA = "0x10F9D5C", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000964")]
			[Address(RVA = "0x10F9D64", Offset = "0x10F9D64", VA = "0x10F9D64", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170000D9")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x6000965")]
			[Address(RVA = "0x10F9D68", Offset = "0x10F9D68", VA = "0x10F9D68", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000966")]
			[Address(RVA = "0x10F9D70", Offset = "0x10F9D70", VA = "0x10F9D70", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170000DA")]
		public virtual string Value
		{
			[Token(Token = "0x6000967")]
			[Address(RVA = "0x10F9D74", Offset = "0x10F9D74", VA = "0x10F9D74", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000968")]
			[Address(RVA = "0x10F9DB8", Offset = "0x10F9DB8", VA = "0x10F9DB8", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x170000DB")]
		public virtual int Count
		{
			[Token(Token = "0x6000969")]
			[Address(RVA = "0x10F9DBC", Offset = "0x10F9DBC", VA = "0x10F9DBC", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000DC")]
		public virtual IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x600096E")]
			[Address(RVA = "0x10F9E40", Offset = "0x10F9E40", VA = "0x10F9E40", Slot = "16")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C849C", Offset = "0x8C849C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DD")]
		public IEnumerable<JSONNode> DeepChildren
		{
			[Token(Token = "0x600096F")]
			[Address(RVA = "0x10F9E9C", Offset = "0x10F9E9C", VA = "0x10F9E9C")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C84FC", Offset = "0x8C84FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DE")]
		public JSONBinaryTag Tag
		{
			[Token(Token = "0x6000972")]
			[Address(RVA = "0x10F9F9C", Offset = "0x10F9F9C", VA = "0x10F9F9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C855C", Offset = "0x8C855C")]
			get
			{
				return default(JSONBinaryTag);
			}
			[Token(Token = "0x6000973")]
			[Address(RVA = "0x10F9FA4", Offset = "0x10F9FA4", VA = "0x10F9FA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C856C", Offset = "0x8C856C")]
			set
			{
			}
		}

		[Token(Token = "0x170000DF")]
		public virtual bool IsNull
		{
			[Token(Token = "0x6000974")]
			[Address(RVA = "0x10F9FAC", Offset = "0x10F9FAC", VA = "0x10F9FAC", Slot = "18")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E0")]
		public virtual int AsInt
		{
			[Token(Token = "0x6000975")]
			[Address(RVA = "0x10F9FBC", Offset = "0x10F9FBC", VA = "0x10F9FBC", Slot = "19")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000976")]
			[Address(RVA = "0x10F9FFC", Offset = "0x10F9FFC", VA = "0x10F9FFC", Slot = "20")]
			set
			{
			}
		}

		[Token(Token = "0x170000E1")]
		public virtual long AsLong
		{
			[Token(Token = "0x6000977")]
			[Address(RVA = "0x10FA098", Offset = "0x10FA098", VA = "0x10FA098", Slot = "21")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6000978")]
			[Address(RVA = "0x10FA0D8", Offset = "0x10FA0D8", VA = "0x10FA0D8", Slot = "22")]
			set
			{
			}
		}

		[Token(Token = "0x170000E2")]
		public virtual float AsFloat
		{
			[Token(Token = "0x6000979")]
			[Address(RVA = "0x10FA174", Offset = "0x10FA174", VA = "0x10FA174", Slot = "23")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600097A")]
			[Address(RVA = "0x10FA224", Offset = "0x10FA224", VA = "0x10FA224", Slot = "24")]
			set
			{
			}
		}

		[Token(Token = "0x170000E3")]
		public virtual double AsDouble
		{
			[Token(Token = "0x600097B")]
			[Address(RVA = "0x10FA2C0", Offset = "0x10FA2C0", VA = "0x10FA2C0", Slot = "25")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x600097C")]
			[Address(RVA = "0x10FA3A4", Offset = "0x10FA3A4", VA = "0x10FA3A4", Slot = "26")]
			set
			{
			}
		}

		[Token(Token = "0x170000E4")]
		public virtual bool AsBool
		{
			[Token(Token = "0x600097D")]
			[Address(RVA = "0x10FA440", Offset = "0x10FA440", VA = "0x10FA440", Slot = "27")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600097E")]
			[Address(RVA = "0x10FA504", Offset = "0x10FA504", VA = "0x10FA504", Slot = "28")]
			set
			{
			}
		}

		[Token(Token = "0x170000E5")]
		public virtual JSONArray AsArray
		{
			[Token(Token = "0x600097F")]
			[Address(RVA = "0x10FA594", Offset = "0x10FA594", VA = "0x10FA594", Slot = "29")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E6")]
		public virtual JSONClass AsObject
		{
			[Token(Token = "0x6000980")]
			[Address(RVA = "0x10FA610", Offset = "0x10FA610", VA = "0x10FA610", Slot = "30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000962")]
		[Address(RVA = "0x10F9D58", Offset = "0x10F9D58", VA = "0x10F9D58", Slot = "4")]
		public virtual void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x600096A")]
		[Address(RVA = "0x10F9DC4", Offset = "0x10F9DC4", VA = "0x10F9DC4", Slot = "12")]
		public virtual void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x600096B")]
		[Address(RVA = "0x10F9E28", Offset = "0x10F9E28", VA = "0x10F9E28", Slot = "13")]
		public virtual JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x600096C")]
		[Address(RVA = "0x10F9E30", Offset = "0x10F9E30", VA = "0x10F9E30", Slot = "14")]
		public virtual JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0x10F9E38", Offset = "0x10F9E38", VA = "0x10F9E38", Slot = "15")]
		public virtual JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x6000970")]
		[Address(RVA = "0x10F9F14", Offset = "0x10F9F14", VA = "0x10F9F14", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000971")]
		[Address(RVA = "0x10F9F58", Offset = "0x10F9F58", VA = "0x10F9F58", Slot = "17")]
		public virtual string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0x10FA68C", Offset = "0x10FA68C", VA = "0x10FA68C")]
		public static implicit operator JSONNode(string s)
		{
			return null;
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0x10FA6E8", Offset = "0x10FA6E8", VA = "0x10FA6E8")]
		public static implicit operator string(JSONNode d)
		{
			return null;
		}

		[Token(Token = "0x6000983")]
		[Address(RVA = "0x10FA734", Offset = "0x10FA734", VA = "0x10FA734")]
		public static bool operator ==(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000984")]
		[Address(RVA = "0x10FA7C8", Offset = "0x10FA7C8", VA = "0x10FA7C8")]
		public static bool operator !=(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000985")]
		[Address(RVA = "0x10FA7E4", Offset = "0x10FA7E4", VA = "0x10FA7E4", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000986")]
		[Address(RVA = "0x10F9CC8", Offset = "0x10F9CC8", VA = "0x10F9CC8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000987")]
		[Address(RVA = "0x10F858C", Offset = "0x10F858C", VA = "0x10F858C")]
		internal static string Escape(string aText)
		{
			return null;
		}

		[Token(Token = "0x6000988")]
		[Address(RVA = "0x10FA7F0", Offset = "0x10FA7F0", VA = "0x10FA7F0")]
		private static JSONData Numberize(string token)
		{
			return null;
		}

		[Token(Token = "0x6000989")]
		[Address(RVA = "0x10FAB30", Offset = "0x10FAB30", VA = "0x10FAB30")]
		private static void AddElement(JSONNode ctx, string token, string tokenName, bool tokenIsString)
		{
		}

		[Token(Token = "0x600098A")]
		[Address(RVA = "0x10F64BC", Offset = "0x10F64BC", VA = "0x10F64BC")]
		public static JSONNode Parse(string jsonString)
		{
			return null;
		}

		[Token(Token = "0x600098B")]
		[Address(RVA = "0x10FAC70", Offset = "0x10FAC70", VA = "0x10FAC70", Slot = "31")]
		public virtual void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0x10FAC74", Offset = "0x10FAC74", VA = "0x10FAC74")]
		public void SaveToStream(Stream aData)
		{
		}

		[Token(Token = "0x600098D")]
		[Address(RVA = "0x10FACF0", Offset = "0x10FACF0", VA = "0x10FACF0")]
		public void SaveToCompressedStream(Stream aData)
		{
		}

		[Token(Token = "0x600098E")]
		[Address(RVA = "0x10FAD44", Offset = "0x10FAD44", VA = "0x10FAD44")]
		public void SaveToCompressedFile(string aFileName)
		{
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0x10FAD98", Offset = "0x10FAD98", VA = "0x10FAD98")]
		public string SaveToCompressedBase64()
		{
			return null;
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0x10FADEC", Offset = "0x10FADEC", VA = "0x10FADEC")]
		public void SaveToFile(string aFileName)
		{
		}

		[Token(Token = "0x6000991")]
		[Address(RVA = "0x10FAF7C", Offset = "0x10FAF7C", VA = "0x10FAF7C")]
		public string SaveToBase64()
		{
			return null;
		}

		[Token(Token = "0x6000992")]
		[Address(RVA = "0x10FB150", Offset = "0x10FB150", VA = "0x10FB150")]
		public static JSONNode Deserialize(BinaryReader aReader)
		{
			return null;
		}

		[Token(Token = "0x6000993")]
		[Address(RVA = "0x10FB528", Offset = "0x10FB528", VA = "0x10FB528")]
		public static JSONNode LoadFromCompressedFile(string aFileName)
		{
			return null;
		}

		[Token(Token = "0x6000994")]
		[Address(RVA = "0x10FB57C", Offset = "0x10FB57C", VA = "0x10FB57C")]
		public static JSONNode LoadFromCompressedStream(Stream aData)
		{
			return null;
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0x10FB5D0", Offset = "0x10FB5D0", VA = "0x10FB5D0")]
		public static JSONNode LoadFromCompressedBase64(string aBase64)
		{
			return null;
		}

		[Token(Token = "0x6000996")]
		[Address(RVA = "0x10FB624", Offset = "0x10FB624", VA = "0x10FB624")]
		public static JSONNode LoadFromStream(Stream aData)
		{
			return null;
		}

		[Token(Token = "0x6000997")]
		[Address(RVA = "0x10FB784", Offset = "0x10FB784", VA = "0x10FB784")]
		public static JSONNode LoadFromFile(string aFileName)
		{
			return null;
		}

		[Token(Token = "0x6000998")]
		[Address(RVA = "0x10FB8C4", Offset = "0x10FB8C4", VA = "0x10FB8C4")]
		public static JSONNode LoadFromBase64(string aBase64)
		{
			return null;
		}

		[Token(Token = "0x6000999")]
		[Address(RVA = "0x10F794C", Offset = "0x10F794C", VA = "0x10F794C")]
		protected JSONNode()
		{
		}
	}
	[Token(Token = "0x200024F")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8C0DEC", Offset = "0x8C0DEC")]
	public class JSONArray : JSONNode, IEnumerable
	{
		[Token(Token = "0x2000250")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0E24", Offset = "0x8C0E24")]
		private sealed class <get_Children>d__10 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000AC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000AC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4000AC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000AC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONArray <>4__this;

			[Token(Token = "0x4000AC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170000EF")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x60009BE")]
				[Address(RVA = "0x10AB8DC", Offset = "0x10AB8DC", VA = "0x10AB8DC", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009C0")]
				[Address(RVA = "0x10AB924", Offset = "0x10AB924", VA = "0x10AB924", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009BA")]
			[Address(RVA = "0x10AB6A8", Offset = "0x10AB6A8", VA = "0x10AB6A8")]
			[DebuggerHidden]
			public <get_Children>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60009BB")]
			[Address(RVA = "0x10AB6E0", Offset = "0x10AB6E0", VA = "0x10AB6E0", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009BC")]
			[Address(RVA = "0x10AB750", Offset = "0x10AB750", VA = "0x10AB750", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009BD")]
			[Address(RVA = "0x10AB6FC", Offset = "0x10AB6FC", VA = "0x10AB6FC")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60009BF")]
			[Address(RVA = "0x10AB8E4", Offset = "0x10AB8E4", VA = "0x10AB8E4", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60009C1")]
			[Address(RVA = "0x10AB92C", Offset = "0x10AB92C", VA = "0x10AB92C", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60009C2")]
			[Address(RVA = "0x10AB9DC", Offset = "0x10AB9DC", VA = "0x10AB9DC", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000251")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0E34", Offset = "0x8C0E34")]
		private sealed class <GetEnumerator>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000AC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000AC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000AC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JSONArray <>4__this;

			[Token(Token = "0x4000AC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170000F1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60009C7")]
				[Address(RVA = "0x10AB658", Offset = "0x10AB658", VA = "0x10AB658", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009C9")]
				[Address(RVA = "0x10AB6A0", Offset = "0x10AB6A0", VA = "0x10AB6A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009C3")]
			[Address(RVA = "0x10AB430", Offset = "0x10AB430", VA = "0x10AB430")]
			[DebuggerHidden]
			public <GetEnumerator>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60009C4")]
			[Address(RVA = "0x10AB45C", Offset = "0x10AB45C", VA = "0x10AB45C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009C5")]
			[Address(RVA = "0x10AB4CC", Offset = "0x10AB4CC", VA = "0x10AB4CC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009C6")]
			[Address(RVA = "0x10AB478", Offset = "0x10AB478", VA = "0x10AB478")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60009C8")]
			[Address(RVA = "0x10AB660", Offset = "0x10AB660", VA = "0x10AB660", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<JSONNode> _nodeList;

		[Token(Token = "0x170000EB")]
		public override JSONNode Item
		{
			[Token(Token = "0x60009AC")]
			[Address(RVA = "0x10F6D2C", Offset = "0x10F6D2C", VA = "0x10F6D2C", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009AD")]
			[Address(RVA = "0x10F6E28", Offset = "0x10F6E28", VA = "0x10F6E28", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170000EC")]
		public override JSONNode Item
		{
			[Token(Token = "0x60009AE")]
			[Address(RVA = "0x10F6EE0", Offset = "0x10F6EE0", VA = "0x10F6EE0", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009AF")]
			[Address(RVA = "0x10F6F3C", Offset = "0x10F6F3C", VA = "0x10F6F3C", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170000ED")]
		public override int Count
		{
			[Token(Token = "0x60009B0")]
			[Address(RVA = "0x10F6FA0", Offset = "0x10F6FA0", VA = "0x10F6FA0", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000EE")]
		public override IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x60009B1")]
			[Address(RVA = "0x10F6FEC", Offset = "0x10F6FEC", VA = "0x10F6FEC", Slot = "16")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C865C", Offset = "0x8C865C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0x10F7064", Offset = "0x10F7064", VA = "0x10F7064", Slot = "32")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C86BC", Offset = "0x8C86BC")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0x10F70DC", Offset = "0x10F70DC", VA = "0x10F70DC", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0x10F7140", Offset = "0x10F7140", VA = "0x10F7140", Slot = "14")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0x10F7200", Offset = "0x10F7200", VA = "0x10F7200", Slot = "15")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0x10F726C", Offset = "0x10F726C", VA = "0x10F726C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0x10F747C", Offset = "0x10F747C", VA = "0x10F747C", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0x10F7754", Offset = "0x10F7754", VA = "0x10F7754", Slot = "31")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0x10F78C8", Offset = "0x10F78C8", VA = "0x10F78C8")]
		public JSONArray()
		{
		}
	}
	[Token(Token = "0x2000252")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8C0E44", Offset = "0x8C0E44")]
	public class JSONClass : JSONNode, IEnumerable
	{
		[Token(Token = "0x2000253")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0E7C", Offset = "0x8C0E7C")]
		private sealed class <get_Children>d__10 : IEnumerable<JSONNode>, IEnumerable, IEnumerator<JSONNode>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000ACB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000ACC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private JSONNode <>2__current;

			[Token(Token = "0x4000ACD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <>l__initialThreadId;

			[Token(Token = "0x4000ACE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JSONClass <>4__this;

			[Token(Token = "0x4000ACF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170000F7")]
			private JSONNode System.Collections.Generic.IEnumerator<SimpleJSON.JSONNode>.Current
			{
				[Token(Token = "0x60009DD")]
				[Address(RVA = "0x10ABF30", Offset = "0x10ABF30", VA = "0x10ABF30", Slot = "6")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009DF")]
				[Address(RVA = "0x10ABF78", Offset = "0x10ABF78", VA = "0x10ABF78", Slot = "9")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009D9")]
			[Address(RVA = "0x10ABCE8", Offset = "0x10ABCE8", VA = "0x10ABCE8")]
			[DebuggerHidden]
			public <get_Children>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x60009DA")]
			[Address(RVA = "0x10ABD20", Offset = "0x10ABD20", VA = "0x10ABD20", Slot = "7")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009DB")]
			[Address(RVA = "0x10ABD90", Offset = "0x10ABD90", VA = "0x10ABD90", Slot = "8")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009DC")]
			[Address(RVA = "0x10ABD3C", Offset = "0x10ABD3C", VA = "0x10ABD3C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60009DE")]
			[Address(RVA = "0x10ABF38", Offset = "0x10ABF38", VA = "0x10ABF38", Slot = "10")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}

			[Token(Token = "0x60009E0")]
			[Address(RVA = "0x10ABF80", Offset = "0x10ABF80", VA = "0x10ABF80", Slot = "4")]
			[DebuggerHidden]
			private IEnumerator<JSONNode> System.Collections.Generic.IEnumerable<SimpleJSON.JSONNode>.GetEnumerator()
			{
				return null;
			}

			[Token(Token = "0x60009E1")]
			[Address(RVA = "0x10AC030", Offset = "0x10AC030", VA = "0x10AC030", Slot = "5")]
			[DebuggerHidden]
			private IEnumerator System.Collections.IEnumerable.GetEnumerator()
			{
				return null;
			}
		}

		[Token(Token = "0x2000254")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0E8C", Offset = "0x8C0E8C")]
		private sealed class <GetEnumerator>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000AD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000AD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000AD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public JSONClass <>4__this;

			[Token(Token = "0x4000AD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Dictionary<string, JSONNode>.Enumerator <>7__wrap1;

			[Token(Token = "0x170000F9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60009E6")]
				[Address(RVA = "0x10ABC98", Offset = "0x10ABC98", VA = "0x10ABC98", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000FA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60009E8")]
				[Address(RVA = "0x10ABCE0", Offset = "0x10ABCE0", VA = "0x10ABCE0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60009E2")]
			[Address(RVA = "0x10ABA3C", Offset = "0x10ABA3C", VA = "0x10ABA3C")]
			[DebuggerHidden]
			public <GetEnumerator>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60009E3")]
			[Address(RVA = "0x10ABA68", Offset = "0x10ABA68", VA = "0x10ABA68", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60009E4")]
			[Address(RVA = "0x10ABAD8", Offset = "0x10ABAD8", VA = "0x10ABAD8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60009E5")]
			[Address(RVA = "0x10ABA84", Offset = "0x10ABA84", VA = "0x10ABA84")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60009E7")]
			[Address(RVA = "0x10ABCA0", Offset = "0x10ABCA0", VA = "0x10ABCA0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000255")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0E9C", Offset = "0x8C0E9C")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x4000AD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public JSONNode aNode;

			[Token(Token = "0x60009E9")]
			[Address(RVA = "0x10AB9E0", Offset = "0x10AB9E0", VA = "0x10AB9E0")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x60009EA")]
			[Address(RVA = "0x10AB9E8", Offset = "0x10AB9E8", VA = "0x10AB9E8")]
			internal bool <Remove>b__0(KeyValuePair<string, JSONNode> k)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Dictionary<string, JSONNode> _nodeDict;

		[Token(Token = "0x170000F3")]
		public override JSONNode Item
		{
			[Token(Token = "0x60009CA")]
			[Address(RVA = "0x10F7954", Offset = "0x10F7954", VA = "0x10F7954", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009CB")]
			[Address(RVA = "0x10F7A74", Offset = "0x10F7A74", VA = "0x10F7A74", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170000F4")]
		public override JSONNode Item
		{
			[Token(Token = "0x60009CC")]
			[Address(RVA = "0x10F7B44", Offset = "0x10F7B44", VA = "0x10F7B44", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009CD")]
			[Address(RVA = "0x10F7BF0", Offset = "0x10F7BF0", VA = "0x10F7BF0", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170000F5")]
		public override int Count
		{
			[Token(Token = "0x60009CE")]
			[Address(RVA = "0x10F7CD0", Offset = "0x10F7CD0", VA = "0x10F7CD0", Slot = "11")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000F6")]
		public override IEnumerable<JSONNode> Children
		{
			[Token(Token = "0x60009CF")]
			[Address(RVA = "0x10F7D24", Offset = "0x10F7D24", VA = "0x10F7D24", Slot = "16")]
			[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C87DC", Offset = "0x8C87DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x10F7D9C", Offset = "0x10F7D9C", VA = "0x10F7D9C", Slot = "32")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C883C", Offset = "0x8C883C")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0x10F7E14", Offset = "0x10F7E14", VA = "0x10F7E14", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0x10F7F60", Offset = "0x10F7F60", VA = "0x10F7F60", Slot = "13")]
		public override JSONNode Remove(string aKey)
		{
			return null;
		}

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0x10F8030", Offset = "0x10F8030", VA = "0x10F8030", Slot = "14")]
		public override JSONNode Remove(int aIndex)
		{
			return null;
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0x10F8118", Offset = "0x10F8118", VA = "0x10F8118", Slot = "15")]
		public override JSONNode Remove(JSONNode aNode)
		{
			return null;
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0x10F82DC", Offset = "0x10F82DC", VA = "0x10F82DC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0x10F87C4", Offset = "0x10F87C4", VA = "0x10F87C4", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0x10F8B34", Offset = "0x10F8B34", VA = "0x10F8B34", Slot = "31")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0x10F8D30", Offset = "0x10F8D30", VA = "0x10F8D30")]
		public JSONClass()
		{
		}
	}
	[Token(Token = "0x2000256")]
	public class JSONData : JSONNode
	{
		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _data;

		[Token(Token = "0x170000FB")]
		public override string Value
		{
			[Token(Token = "0x60009F1")]
			[Address(RVA = "0x10F8F80", Offset = "0x10F8F80", VA = "0x10F8F80", Slot = "9")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009F2")]
			[Address(RVA = "0x10F8F88", Offset = "0x10F8F88", VA = "0x10F8F88", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0x10F8DB4", Offset = "0x10F8DB4", VA = "0x10F8DB4")]
		public JSONData(string aData)
		{
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0x10F8E44", Offset = "0x10F8E44", VA = "0x10F8E44")]
		public JSONData(float aData)
		{
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0x10F8E88", Offset = "0x10F8E88", VA = "0x10F8E88")]
		public JSONData(double aData)
		{
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0x10F8ECC", Offset = "0x10F8ECC", VA = "0x10F8ECC")]
		public JSONData(bool aData)
		{
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0x10F8F08", Offset = "0x10F8F08", VA = "0x10F8F08")]
		public JSONData(int aData)
		{
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0x10F8F44", Offset = "0x10F8F44", VA = "0x10F8F44")]
		public JSONData(long aData)
		{
		}

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0x10F8FB8", Offset = "0x10F8FB8", VA = "0x10F8FB8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x10F9090", Offset = "0x10F9090", VA = "0x10F9090", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0x10F9168", Offset = "0x10F9168", VA = "0x10F9168", Slot = "31")]
		public override void Serialize(BinaryWriter aWriter)
		{
		}
	}
	[Token(Token = "0x2000257")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8C0EAC", Offset = "0x8C0EAC")]
	internal class JSONLazyCreator : JSONNode
	{
		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly string _key;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private JSONNode _node;

		[Token(Token = "0x170000FC")]
		public override JSONNode Item
		{
			[Token(Token = "0x60009F8")]
			[Address(RVA = "0x10F9348", Offset = "0x10F9348", VA = "0x10F9348", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009F9")]
			[Address(RVA = "0x10F93A4", Offset = "0x10F93A4", VA = "0x10F93A4", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x170000FD")]
		public override JSONNode Item
		{
			[Token(Token = "0x60009FA")]
			[Address(RVA = "0x10F9494", Offset = "0x10F9494", VA = "0x10F9494", Slot = "7")]
			get
			{
				return null;
			}
			[Token(Token = "0x60009FB")]
			[Address(RVA = "0x10F9500", Offset = "0x10F9500", VA = "0x10F9500", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170000FE")]
		public override int AsInt
		{
			[Token(Token = "0x60009FC")]
			[Address(RVA = "0x10F958C", Offset = "0x10F958C", VA = "0x10F958C", Slot = "19")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60009FD")]
			[Address(RVA = "0x10F960C", Offset = "0x10F960C", VA = "0x10F960C", Slot = "20")]
			set
			{
			}
		}

		[Token(Token = "0x170000FF")]
		public override long AsLong
		{
			[Token(Token = "0x60009FE")]
			[Address(RVA = "0x10F9690", Offset = "0x10F9690", VA = "0x10F9690", Slot = "21")]
			get
			{
				return default(long);
			}
			[Token(Token = "0x60009FF")]
			[Address(RVA = "0x10F9710", Offset = "0x10F9710", VA = "0x10F9710", Slot = "22")]
			set
			{
			}
		}

		[Token(Token = "0x17000100")]
		public override float AsFloat
		{
			[Token(Token = "0x6000A00")]
			[Address(RVA = "0x10F9794", Offset = "0x10F9794", VA = "0x10F9794", Slot = "23")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A01")]
			[Address(RVA = "0x10F9814", Offset = "0x10F9814", VA = "0x10F9814", Slot = "24")]
			set
			{
			}
		}

		[Token(Token = "0x17000101")]
		public override double AsDouble
		{
			[Token(Token = "0x6000A02")]
			[Address(RVA = "0x10F9898", Offset = "0x10F9898", VA = "0x10F9898", Slot = "25")]
			get
			{
				return default(double);
			}
			[Token(Token = "0x6000A03")]
			[Address(RVA = "0x10F9918", Offset = "0x10F9918", VA = "0x10F9918", Slot = "26")]
			set
			{
			}
		}

		[Token(Token = "0x17000102")]
		public override bool AsBool
		{
			[Token(Token = "0x6000A04")]
			[Address(RVA = "0x10F999C", Offset = "0x10F999C", VA = "0x10F999C", Slot = "27")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A05")]
			[Address(RVA = "0x10F9A1C", Offset = "0x10F9A1C", VA = "0x10F9A1C", Slot = "28")]
			set
			{
			}
		}

		[Token(Token = "0x17000103")]
		public override JSONArray AsArray
		{
			[Token(Token = "0x6000A06")]
			[Address(RVA = "0x10F9AA0", Offset = "0x10F9AA0", VA = "0x10F9AA0", Slot = "29")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000104")]
		public override JSONClass AsObject
		{
			[Token(Token = "0x6000A07")]
			[Address(RVA = "0x10F9B04", Offset = "0x10F9B04", VA = "0x10F9B04", Slot = "30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x10F6DE4", Offset = "0x10F6DE4", VA = "0x10F6DE4")]
		public JSONLazyCreator(JSONNode aNode)
		{
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0x10F7A24", Offset = "0x10F7A24", VA = "0x10F7A24")]
		public JSONLazyCreator(JSONNode aNode, string aKey)
		{
		}

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x10F9428", Offset = "0x10F9428", VA = "0x10F9428")]
		private void Set(JSONNode aVal)
		{
		}

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x10F9B68", Offset = "0x10F9B68", VA = "0x10F9B68", Slot = "12")]
		public override void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x10F9BEC", Offset = "0x10F9BEC", VA = "0x10F9BEC", Slot = "4")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x10F9C78", Offset = "0x10F9C78", VA = "0x10F9C78")]
		public static bool operator ==(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x10F9C90", Offset = "0x10F9C90", VA = "0x10F9C90")]
		public static bool operator !=(JSONLazyCreator a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x10F9CA8", Offset = "0x10F9CA8", VA = "0x10F9CA8", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x10F9CC0", Offset = "0x10F9CC0", VA = "0x10F9CC0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x10F9CD0", Offset = "0x10F9CD0", VA = "0x10F9CD0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0x10F9D14", Offset = "0x10F9D14", VA = "0x10F9D14", Slot = "17")]
		public override string ToString(string aPrefix)
		{
			return null;
		}
	}
	[Token(Token = "0x2000258")]
	public static class JSON
	{
		[Token(Token = "0x6000A11")]
		[Address(RVA = "0x10F64B8", Offset = "0x10F64B8", VA = "0x10F64B8")]
		public static JSONNode Parse(string jsonString)
		{
			return null;
		}
	}
}
namespace UnityTemplateProjects
{
	[Token(Token = "0x2000259")]
	public class SimpleCameraController : MonoBehaviour
	{
		[Token(Token = "0x200025A")]
		private class CameraState
		{
			[Token(Token = "0x4000ADF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float yaw;

			[Token(Token = "0x4000AE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float pitch;

			[Token(Token = "0x4000AE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float roll;

			[Token(Token = "0x4000AE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float x;

			[Token(Token = "0x4000AE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float y;

			[Token(Token = "0x4000AE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float z;

			[Token(Token = "0x6000A16")]
			[Address(RVA = "0xEA1C34", Offset = "0xEA1C34", VA = "0xEA1C34")]
			public void SetFromTransform(Transform t)
			{
			}

			[Token(Token = "0x6000A17")]
			[Address(RVA = "0xEA1CBC", Offset = "0xEA1CBC", VA = "0xEA1CBC")]
			public void Translate(Vector3 translation)
			{
			}

			[Token(Token = "0x6000A18")]
			[Address(RVA = "0xEA1D38", Offset = "0xEA1D38", VA = "0xEA1D38")]
			public void LerpTowards(CameraState target, float positionLerpPct, float rotationLerpPct)
			{
			}

			[Token(Token = "0x6000A19")]
			[Address(RVA = "0xEA1E00", Offset = "0xEA1E00", VA = "0xEA1E00")]
			public void UpdateTransform(Transform t)
			{
			}

			[Token(Token = "0x6000A1A")]
			[Address(RVA = "0xEA1E4C", Offset = "0xEA1E4C", VA = "0xEA1E4C")]
			public CameraState()
			{
			}
		}

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CameraState m_TargetCameraState;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CameraState m_InterpolatingCameraState;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C35E4", Offset = "0x8C35E4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C35E4", Offset = "0x8C35E4")]
		public float boost;

		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C3644", Offset = "0x8C3644")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C3644", Offset = "0x8C3644")]
		public float positionLerpTime;

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C369C", Offset = "0x8C369C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C369C", Offset = "0x8C369C")]
		public AnimationCurve mouseSensitivityCurve;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C36FC", Offset = "0x8C36FC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C36FC", Offset = "0x8C36FC")]
		public float rotationLerpTime;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C3754", Offset = "0x8C3754")]
		public bool invertY;

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x98BE78", Offset = "0x98BE78", VA = "0x98BE78")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x98BED8", Offset = "0x98BED8", VA = "0x98BED8")]
		private Vector3 GetInputTranslationDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x98BFEC", Offset = "0x98BFEC", VA = "0x98BFEC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0x98C268", Offset = "0x98C268", VA = "0x98C268")]
		public SimpleCameraController()
		{
		}
	}
}
namespace UnityStandardAssets.SceneUtils
{
	[Token(Token = "0x200025B")]
	public class ParticleSceneControls : MonoBehaviour
	{
		[Token(Token = "0x200025C")]
		public enum Mode
		{
			[Token(Token = "0x4000AF8")]
			Activate,
			[Token(Token = "0x4000AF9")]
			Instantiate,
			[Token(Token = "0x4000AFA")]
			Trail
		}

		[Token(Token = "0x200025D")]
		public enum AlignMode
		{
			[Token(Token = "0x4000AFC")]
			Normal,
			[Token(Token = "0x4000AFD")]
			Up
		}

		[Serializable]
		[Token(Token = "0x200025E")]
		public class DemoParticleSystem
		{
			[Token(Token = "0x4000AFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x4000AFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Mode mode;

			[Token(Token = "0x4000B00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public AlignMode align;

			[Token(Token = "0x4000B01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int maxCount;

			[Token(Token = "0x4000B02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float minDist;

			[Token(Token = "0x4000B03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int camOffset;

			[Token(Token = "0x4000B04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string instructionText;

			[Token(Token = "0x6000A24")]
			[Address(RVA = "0x10B2128", Offset = "0x10B2128", VA = "0x10B2128")]
			public DemoParticleSystem()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200025F")]
		public class DemoParticleSystemList
		{
			[Token(Token = "0x4000B05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DemoParticleSystem[] items;

			[Token(Token = "0x6000A25")]
			[Address(RVA = "0x10B2138", Offset = "0x10B2138", VA = "0x10B2138")]
			public DemoParticleSystemList()
			{
			}
		}

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DemoParticleSystemList demoParticles;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float spawnOffset;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float multiply;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool clearOnChange;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text titleText;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform sceneCamera;

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Text instructionText;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Button previousButton;

		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Button nextButton;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GraphicRaycaster graphicRaycaster;

		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public EventSystem eventSystem;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ParticleSystemMultiplier m_ParticleMultiplier;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<Transform> m_CurrentParticleList;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Transform m_Instance;

		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int s_SelectedIndex;

		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 m_CamOffsetVelocity;

		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 m_LastPos;

		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static DemoParticleSystem s_Selected;

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x97A1EC", Offset = "0x97A1EC", VA = "0x97A1EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x97A698", Offset = "0x97A698", VA = "0x97A698")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0x97A784", Offset = "0x97A784", VA = "0x97A784")]
		private void Previous()
		{
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0x97A874", Offset = "0x97A874", VA = "0x97A874")]
		public void Next()
		{
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x97A958", Offset = "0x97A958", VA = "0x97A958")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x97B088", Offset = "0x97B088", VA = "0x97B088")]
		private bool CheckForGuiCollision()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0x97A318", Offset = "0x97A318", VA = "0x97A318")]
		private void Select(int i)
		{
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x97B18C", Offset = "0x97B18C", VA = "0x97B18C")]
		public ParticleSceneControls()
		{
		}
	}
	[Token(Token = "0x2000260")]
	public class PlaceTargetWithMouse : MonoBehaviour
	{
		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float surfaceOffset;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject setTargetOn;

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0x97DA58", Offset = "0x97DA58", VA = "0x97DA58")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0x97DBF0", Offset = "0x97DBF0", VA = "0x97DBF0")]
		public PlaceTargetWithMouse()
		{
		}
	}
	[Token(Token = "0x2000261")]
	public class SlowMoButton : MonoBehaviour
	{
		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite FullSpeedTex;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Sprite SlowSpeedTex;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float fullSpeed;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float slowSpeed;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Button button;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_SlowMo;

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0x98D138", Offset = "0x98D138", VA = "0x98D138")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0x98D140", Offset = "0x98D140", VA = "0x98D140")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0x98D14C", Offset = "0x98D14C", VA = "0x98D14C")]
		public void ChangeSpeed()
		{
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0x98D27C", Offset = "0x98D27C", VA = "0x98D27C")]
		public SlowMoButton()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x2000262")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x17000105")]
		public bool Highlight
		{
			[Token(Token = "0x6000A2C")]
			[Address(RVA = "0x1099D84", Offset = "0x1099D84", VA = "0x1099D84")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A2D")]
			[Address(RVA = "0x1099D8C", Offset = "0x1099D8C", VA = "0x1099D8C")]
			set
			{
			}
		}

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0x1099D98", Offset = "0x1099D98", VA = "0x1099D98")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0x1099F60", Offset = "0x1099F60", VA = "0x1099F60", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0x1099F88", Offset = "0x1099F88", VA = "0x1099F88", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0x1099FB0", Offset = "0x1099FB0", VA = "0x1099FB0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0x1099E60", Offset = "0x1099E60", VA = "0x1099E60")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0x109A284", Offset = "0x109A284", VA = "0x109A284")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x2000263")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x17000106")]
		public bool InRange
		{
			[Token(Token = "0x6000A35")]
			[Address(RVA = "0x1172A78", Offset = "0x1172A78", VA = "0x1172A78")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A36")]
			[Address(RVA = "0x1172A80", Offset = "0x1172A80", VA = "0x1172A80")]
			set
			{
			}
		}

		[Token(Token = "0x17000107")]
		public bool Targeted
		{
			[Token(Token = "0x6000A37")]
			[Address(RVA = "0x1172BF8", Offset = "0x1172BF8", VA = "0x1172BF8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A38")]
			[Address(RVA = "0x1172C00", Offset = "0x1172C00", VA = "0x1172C00")]
			set
			{
			}
		}

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0x1172C0C", Offset = "0x1172C0C", VA = "0x1172C0C", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0x1172A8C", Offset = "0x1172A8C", VA = "0x1172A8C")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0x1172E14", Offset = "0x1172E14", VA = "0x1172E14")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x2000264")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C0EE4", Offset = "0x8C0EE4")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x17000108")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6000A3C")]
			[Address(RVA = "0x1172E1C", Offset = "0x1172E1C", VA = "0x1172E1C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A3D")]
			[Address(RVA = "0x1172E24", Offset = "0x1172E24", VA = "0x1172E24")]
			set
			{
			}
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0x1172E40", Offset = "0x1172E40", VA = "0x1172E40", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0x1173080", Offset = "0x1173080", VA = "0x1173080", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0x1173998", Offset = "0x1173998", VA = "0x1173998", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0x1173E2C", Offset = "0x1173E2C", VA = "0x1173E2C", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0x11740EC", Offset = "0x11740EC", VA = "0x11740EC")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0x11732F4", Offset = "0x11732F4", VA = "0x11732F4")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0x11741DC", Offset = "0x11741DC", VA = "0x11741DC")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A45")]
		[Address(RVA = "0x1174638", Offset = "0x1174638", VA = "0x1174638", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0x1174650", Offset = "0x1174650", VA = "0x1174650", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0x1174658", Offset = "0x1174658", VA = "0x1174658")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x2000265")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0x117E174", Offset = "0x117E174", VA = "0x117E174")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0x117E22C", Offset = "0x117E22C", VA = "0x117E22C")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0x117E2E0", Offset = "0x117E2E0", VA = "0x117E2E0")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x2000266")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x2000267")]
		public enum CrosshairState
		{
			[Token(Token = "0x4000B30")]
			Disabled,
			[Token(Token = "0x4000B31")]
			Enabled,
			[Token(Token = "0x4000B32")]
			Targeted
		}

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0x117E3A0", Offset = "0x117E3A0", VA = "0x117E3A0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0x1172D78", Offset = "0x1172D78", VA = "0x1172D78")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0x117E40C", Offset = "0x117E40C", VA = "0x117E40C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0x117E454", Offset = "0x117E454", VA = "0x117E454")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x2000268")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0x97CCF8", Offset = "0x97CCF8", VA = "0x97CCF8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A50")]
		[Address(RVA = "0x97CDE4", Offset = "0x97CDE4", VA = "0x97CDE4")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0x97CDF0", Offset = "0x97CDF0", VA = "0x97CDF0")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0x97CDFC", Offset = "0x97CDFC", VA = "0x97CDFC")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x2000269")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0x108C0B0", Offset = "0x108C0B0", VA = "0x108C0B0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0x108C104", Offset = "0x108C104", VA = "0x108C104")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A55")]
		[Address(RVA = "0x108C470", Offset = "0x108C470", VA = "0x108C470")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0x108C574", Offset = "0x108C574", VA = "0x108C574")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000A57")]
		[Address(RVA = "0x108C108", Offset = "0x108C108", VA = "0x108C108")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x6000A58")]
		[Address(RVA = "0x108C678", Offset = "0x108C678", VA = "0x108C678")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x200026A")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x200026B")]
		public enum ContactTest
		{
			[Token(Token = "0x4000B45")]
			PerpenTest,
			[Token(Token = "0x4000B46")]
			BackwardsPress
		}

		[Token(Token = "0x4000B36")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x4000B37")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private bool _allowMultipleNearFieldInteraction;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C38BC", Offset = "0x8C38BC")]
		private InteractableState <CurrentButtonState>k__BackingField;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x17000109")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x6000A59")]
			[Address(RVA = "0x108CD78", Offset = "0x108CD78", VA = "0x108CD78", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700010A")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x6000A5A")]
			[Address(RVA = "0x108CD80", Offset = "0x108CD80", VA = "0x108CD80")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700010B")]
		public InteractableState CurrentButtonState
		{
			[Token(Token = "0x6000A5B")]
			[Address(RVA = "0x108CD8C", Offset = "0x108CD8C", VA = "0x108CD8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C895C", Offset = "0x8C895C")]
			get
			{
				return default(InteractableState);
			}
			[Token(Token = "0x6000A5C")]
			[Address(RVA = "0x108CD94", Offset = "0x108CD94", VA = "0x108CD94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C896C", Offset = "0x8C896C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0x108CD9C", Offset = "0x108CD9C", VA = "0x108CD9C", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0x108CEB0", Offset = "0x108CEB0", VA = "0x108CEB0")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0x108D0C8", Offset = "0x108D0C8", VA = "0x108D0C8", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0x108D67C", Offset = "0x108D67C", VA = "0x108D67C")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x6000A61")]
		[Address(RVA = "0x108D728", Offset = "0x108D728", VA = "0x108D728")]
		public void ForceResetButton()
		{
		}

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0x108D594", Offset = "0x108D594", VA = "0x108D594")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0x108D830", Offset = "0x108D830", VA = "0x108D830")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0x108D8B4", Offset = "0x108D8B4", VA = "0x108D8B4")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6000A65")]
		[Address(RVA = "0x108D940", Offset = "0x108D940", VA = "0x108D940")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x200026C")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C38DC", Offset = "0x8C38DC")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C38EC", Offset = "0x8C38EC")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x1700010C")]
		public Collider Collider
		{
			[Token(Token = "0x6000A66")]
			[Address(RVA = "0x108DB8C", Offset = "0x108DB8C", VA = "0x108DB8C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C897C", Offset = "0x8C897C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A67")]
			[Address(RVA = "0x108DB94", Offset = "0x108DB94", VA = "0x108DB94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C898C", Offset = "0x8C898C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700010D")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x6000A68")]
			[Address(RVA = "0x108DB9C", Offset = "0x108DB9C", VA = "0x108DB9C", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C899C", Offset = "0x8C899C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A69")]
			[Address(RVA = "0x108DBA4", Offset = "0x108DBA4", VA = "0x108DBA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C89AC", Offset = "0x8C89AC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700010E")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6000A6A")]
			[Address(RVA = "0x108DBAC", Offset = "0x108DBAC", VA = "0x108DBAC", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0x108DBFC", Offset = "0x108DBFC", VA = "0x108DBFC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x108DC90", Offset = "0x108DC90", VA = "0x108DC90")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x200026D")]
	public interface ColliderZone
	{
		[Token(Token = "0x1700010F")]
		Collider Collider
		{
			[Token(Token = "0x6000A6D")]
			get;
		}

		[Token(Token = "0x17000110")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x6000A6E")]
			get;
		}

		[Token(Token = "0x17000111")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6000A6F")]
			get;
		}
	}
	[Token(Token = "0x200026E")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0x108D010", Offset = "0x108D010", VA = "0x108D010")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x200026F")]
	public enum InteractionType
	{
		[Token(Token = "0x4000B4F")]
		Enter,
		[Token(Token = "0x4000B50")]
		Stay,
		[Token(Token = "0x4000B51")]
		Exit
	}
	[Token(Token = "0x2000270")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x2000271")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4000B63")]
			Mesh,
			[Token(Token = "0x4000B64")]
			Skeleton,
			[Token(Token = "0x4000B65")]
			Both
		}

		[Token(Token = "0x2000272")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0F44", Offset = "0x8C0F44")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x1700011D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000A92")]
				[Address(RVA = "0x10A91AC", Offset = "0x10A91AC", VA = "0x10A91AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700011E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000A94")]
				[Address(RVA = "0x10A91F4", Offset = "0x10A91F4", VA = "0x10A91F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000A8F")]
			[Address(RVA = "0x10A8F18", Offset = "0x10A8F18", VA = "0x10A8F18")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6000A90")]
			[Address(RVA = "0x10A8F44", Offset = "0x10A8F44", VA = "0x10A8F44", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000A91")]
			[Address(RVA = "0x10A8F48", Offset = "0x10A8F48", VA = "0x10A8F48", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000A93")]
			[Address(RVA = "0x10A91B4", Offset = "0x10A91B4", VA = "0x10A91B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B52")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C391C", Offset = "0x8C391C")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x17000112")]
		public OVRHand RightHand
		{
			[Token(Token = "0x6000A71")]
			[Address(RVA = "0x11799BC", Offset = "0x11799BC", VA = "0x11799BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A72")]
			[Address(RVA = "0x11840EC", Offset = "0x11840EC", VA = "0x11840EC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000113")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x6000A73")]
			[Address(RVA = "0x118415C", Offset = "0x118415C", VA = "0x118415C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A74")]
			[Address(RVA = "0x1184194", Offset = "0x1184194", VA = "0x1184194")]
			private set
			{
			}
		}

		[Token(Token = "0x17000114")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x6000A75")]
			[Address(RVA = "0x1184204", Offset = "0x1184204", VA = "0x1184204")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A76")]
			[Address(RVA = "0x118423C", Offset = "0x118423C", VA = "0x118423C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000115")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x6000A77")]
			[Address(RVA = "0x11842AC", Offset = "0x11842AC", VA = "0x11842AC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A78")]
			[Address(RVA = "0x11842E4", Offset = "0x11842E4", VA = "0x11842E4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000116")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x6000A79")]
			[Address(RVA = "0x1184354", Offset = "0x1184354", VA = "0x1184354")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A7A")]
			[Address(RVA = "0x118438C", Offset = "0x118438C", VA = "0x118438C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000117")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x6000A7B")]
			[Address(RVA = "0x1179988", Offset = "0x1179988", VA = "0x1179988")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A7C")]
			[Address(RVA = "0x11843FC", Offset = "0x11843FC", VA = "0x11843FC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000118")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x6000A7D")]
			[Address(RVA = "0x1184468", Offset = "0x1184468", VA = "0x1184468")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A7E")]
			[Address(RVA = "0x118449C", Offset = "0x118449C", VA = "0x118449C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000119")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x6000A7F")]
			[Address(RVA = "0x1184508", Offset = "0x1184508", VA = "0x1184508")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A80")]
			[Address(RVA = "0x118453C", Offset = "0x118453C", VA = "0x118453C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700011A")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x6000A81")]
			[Address(RVA = "0x11845A8", Offset = "0x11845A8", VA = "0x11845A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A82")]
			[Address(RVA = "0x11845DC", Offset = "0x11845DC", VA = "0x11845DC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700011B")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x6000A83")]
			[Address(RVA = "0x1184648", Offset = "0x1184648", VA = "0x1184648")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A84")]
			[Address(RVA = "0x118467C", Offset = "0x118467C", VA = "0x118467C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700011C")]
		public static HandsManager Instance
		{
			[Token(Token = "0x6000A85")]
			[Address(RVA = "0x11846E8", Offset = "0x11846E8", VA = "0x11846E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C89BC", Offset = "0x8C89BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000A86")]
			[Address(RVA = "0x1184734", Offset = "0x1184734", VA = "0x1184734")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C89CC", Offset = "0x8C89CC")]
			private set
			{
			}
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x1184788", Offset = "0x1184788", VA = "0x1184788")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0x1184B5C", Offset = "0x1184B5C", VA = "0x1184B5C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x1184AE4", Offset = "0x1184AE4", VA = "0x1184AE4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C89DC", Offset = "0x8C89DC")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0x1184BE4", Offset = "0x1184BE4", VA = "0x1184BE4")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0x1184CC8", Offset = "0x1184CC8", VA = "0x1184CC8")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0x1184EA8", Offset = "0x1184EA8", VA = "0x1184EA8")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x11797FC", Offset = "0x11797FC", VA = "0x11797FC")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0x11850E4", Offset = "0x11850E4", VA = "0x11850E4")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x2000273")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000274")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6000AA6")]
			[Address(RVA = "0x10AAE7C", Offset = "0x10AAE7C", VA = "0x10AAE7C")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x1700011F")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x6000A95")]
			[Address(RVA = "0x10F3B08", Offset = "0x10F3B08", VA = "0x10F3B08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000120")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x6000A96")]
			[Address(RVA = "0x10F3B10", Offset = "0x10F3B10", VA = "0x10F3B10")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000121")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x6000A97")]
			[Address(RVA = "0x10F3B18", Offset = "0x10F3B18", VA = "0x10F3B18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000122")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x6000A98")]
			[Address(RVA = "0x10F3B20", Offset = "0x10F3B20", VA = "0x10F3B20", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000010")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x6000A99")]
			[Address(RVA = "0x10F3B28", Offset = "0x10F3B28", VA = "0x10F3B28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8A8C", Offset = "0x8C8A8C")]
			add
			{
			}
			[Token(Token = "0x6000A9A")]
			[Address(RVA = "0x10F3BC8", Offset = "0x10F3BC8", VA = "0x10F3BC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8A9C", Offset = "0x8C8A9C")]
			remove
			{
			}
		}

		[Token(Token = "0x14000011")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x6000A9C")]
			[Address(RVA = "0x10F3CD8", Offset = "0x10F3CD8", VA = "0x10F3CD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8AAC", Offset = "0x8C8AAC")]
			add
			{
			}
			[Token(Token = "0x6000A9D")]
			[Address(RVA = "0x10F3D78", Offset = "0x10F3D78", VA = "0x10F3D78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8ABC", Offset = "0x8C8ABC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000012")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x6000A9F")]
			[Address(RVA = "0x10F3E88", Offset = "0x10F3E88", VA = "0x10F3E88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8ACC", Offset = "0x8C8ACC")]
			add
			{
			}
			[Token(Token = "0x6000AA0")]
			[Address(RVA = "0x10F3F28", Offset = "0x10F3F28", VA = "0x10F3F28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8ADC", Offset = "0x8C8ADC")]
			remove
			{
			}
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x10F3C68", Offset = "0x10F3C68", VA = "0x10F3C68", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x10F3E18", Offset = "0x10F3E18", VA = "0x10F3E18", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0x10F3FC8", Offset = "0x10F3FC8", VA = "0x10F3FC8", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000AA2")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0x10F4038", Offset = "0x10F4038", VA = "0x10F4038", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0x10F4164", Offset = "0x10F4164", VA = "0x10F4164", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x10F4290", Offset = "0x10F4290", VA = "0x10F4290")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x2000275")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x4000B71")]
		None,
		[Token(Token = "0x4000B72")]
		Proximity,
		[Token(Token = "0x4000B73")]
		Contact,
		[Token(Token = "0x4000B74")]
		Action
	}
	[Token(Token = "0x2000276")]
	public enum InteractableState
	{
		[Token(Token = "0x4000B76")]
		Default,
		[Token(Token = "0x4000B77")]
		ProximityState,
		[Token(Token = "0x4000B78")]
		ContactState,
		[Token(Token = "0x4000B79")]
		ActionState
	}
	[Token(Token = "0x2000277")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x10F43E8", Offset = "0x10F43E8", VA = "0x10F43E8")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x2000278")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x17000123")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x6000AA8")]
			[Address(RVA = "0x10F42F0", Offset = "0x10F42F0", VA = "0x10F42F0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x10F4098", Offset = "0x10F4098", VA = "0x10F4098")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x10F41C4", Offset = "0x10F41C4", VA = "0x10F41C4")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0x10F4354", Offset = "0x10F4354", VA = "0x10F4354")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x2000279")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x200027A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0F54", Offset = "0x8C0F54")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4000B85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4000B86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4000B87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4000B88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4000B89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4000B8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x17000124")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000AB5")]
				[Address(RVA = "0x10AB3E0", Offset = "0x10AB3E0", VA = "0x10AB3E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000125")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000AB7")]
				[Address(RVA = "0x10AB428", Offset = "0x10AB428", VA = "0x10AB428", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000AB1")]
			[Address(RVA = "0x10AAEC8", Offset = "0x10AAEC8", VA = "0x10AAEC8")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6000AB2")]
			[Address(RVA = "0x10AAEF4", Offset = "0x10AAEF4", VA = "0x10AAEF4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000AB3")]
			[Address(RVA = "0x10AAF64", Offset = "0x10AAF64", VA = "0x10AAF64", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000AB4")]
			[Address(RVA = "0x10AAF10", Offset = "0x10AAF10", VA = "0x10AAF10")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000AB6")]
			[Address(RVA = "0x10AB3E8", Offset = "0x10AB3E8", VA = "0x10AB3E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0x10F516C", Offset = "0x10F516C", VA = "0x10F516C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x10F51E8", Offset = "0x10F51E8", VA = "0x10F51E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C8AEC", Offset = "0x8C8AEC")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x10F5288", Offset = "0x10F5288", VA = "0x10F5288")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x10F5370", Offset = "0x10F5370", VA = "0x10F5370")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x200027B")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x17000126")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x6000AB8")]
			[Address(RVA = "0x10F5378", Offset = "0x10F5378", VA = "0x10F5378")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x10F54F8", Offset = "0x10F54F8", VA = "0x10F54F8")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x10F55A0", Offset = "0x10F55A0", VA = "0x10F55A0")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x10F5648", Offset = "0x10F5648", VA = "0x10F5648")]
		private void Update()
		{
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x10F5910", Offset = "0x10F5910", VA = "0x10F5910")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0x10F5958", Offset = "0x10F5958", VA = "0x10F5958")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x10F5C08", Offset = "0x10F5C08", VA = "0x10F5C08")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x10F5D54", Offset = "0x10F5D54", VA = "0x10F5D54")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x200027C")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x200027D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0F64", Offset = "0x8C0F64")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000B9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000B9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x1700012B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000AD1")]
				[Address(RVA = "0x10A72C4", Offset = "0x10A72C4", VA = "0x10A72C4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700012C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000AD3")]
				[Address(RVA = "0x10A730C", Offset = "0x10A730C", VA = "0x10A730C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000ACE")]
			[Address(RVA = "0x10A6E90", Offset = "0x10A6E90", VA = "0x10A6E90")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6000ACF")]
			[Address(RVA = "0x10A6EBC", Offset = "0x10A6EBC", VA = "0x10A6EBC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000AD0")]
			[Address(RVA = "0x10A6EC0", Offset = "0x10A6EC0", VA = "0x10A6EC0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000AD2")]
			[Address(RVA = "0x10A72CC", Offset = "0x10A72CC", VA = "0x10A72CC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B92")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x17000127")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000AC0")]
			[Address(RVA = "0x11793B4", Offset = "0x11793B4", VA = "0x11793B4", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000128")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6000AC1")]
			[Address(RVA = "0x11793BC", Offset = "0x11793BC", VA = "0x11793BC", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000129")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6000AC2")]
			[Address(RVA = "0x11793C4", Offset = "0x11793C4", VA = "0x11793C4", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700012A")]
		public override bool EnableState
		{
			[Token(Token = "0x6000AC3")]
			[Address(RVA = "0x11793CC", Offset = "0x11793CC", VA = "0x11793CC", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AC4")]
			[Address(RVA = "0x11793F8", Offset = "0x11793F8", VA = "0x11793F8", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x1179434", Offset = "0x1179434", VA = "0x1179434", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0x11794EC", Offset = "0x11794EC", VA = "0x11794EC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C8B9C", Offset = "0x8C8B9C")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x1179564", Offset = "0x1179564", VA = "0x1179564")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x11799F4", Offset = "0x11799F4", VA = "0x11799F4")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x1179B80", Offset = "0x1179B80", VA = "0x1179B80")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0x1179C74", Offset = "0x1179C74", VA = "0x1179C74", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0x1179F6C", Offset = "0x1179F6C", VA = "0x1179F6C", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0x1179F70", Offset = "0x1179F70", VA = "0x1179F70", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x1179F74", Offset = "0x1179F74", VA = "0x1179F74")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x200027E")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C39AC", Offset = "0x8C39AC")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C39BC", Offset = "0x8C39BC")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C39CC", Offset = "0x8C39CC")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x1700012D")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6000AD4")]
			[Address(RVA = "0x1179F8C", Offset = "0x1179F8C", VA = "0x1179F8C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8C4C", Offset = "0x8C8C4C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AD5")]
			[Address(RVA = "0x1179F94", Offset = "0x1179F94", VA = "0x1179F94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8C5C", Offset = "0x8C8C5C")]
			set
			{
			}
		}

		[Token(Token = "0x1700012E")]
		public bool EnableState
		{
			[Token(Token = "0x6000AD6")]
			[Address(RVA = "0x1179F9C", Offset = "0x1179F9C", VA = "0x1179F9C", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AD7")]
			[Address(RVA = "0x1179FB8", Offset = "0x1179FB8", VA = "0x1179FB8", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700012F")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6000AD8")]
			[Address(RVA = "0x1179FD8", Offset = "0x1179FD8", VA = "0x1179FD8", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8C6C", Offset = "0x8C8C6C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AD9")]
			[Address(RVA = "0x1179FE0", Offset = "0x1179FE0", VA = "0x1179FE0", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8C7C", Offset = "0x8C8C7C")]
			set
			{
			}
		}

		[Token(Token = "0x17000130")]
		public float SphereRadius
		{
			[Token(Token = "0x6000ADA")]
			[Address(RVA = "0x1179FEC", Offset = "0x1179FEC", VA = "0x1179FEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8C8C", Offset = "0x8C8C8C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000ADB")]
			[Address(RVA = "0x1179FF4", Offset = "0x1179FF4", VA = "0x1179FF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8C9C", Offset = "0x8C8C9C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x1179FFC", Offset = "0x1179FFC", VA = "0x1179FFC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x117A044", Offset = "0x117A044", VA = "0x117A044", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x117A048", Offset = "0x117A048", VA = "0x117A048")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x200027F")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4000BA5")]
		None = 0,
		[Token(Token = "0x4000BA6")]
		Ray = 1,
		[Token(Token = "0x4000BA7")]
		Poke = 4,
		[Token(Token = "0x4000BA8")]
		All = -1
	}
	[Token(Token = "0x2000280")]
	public enum ToolInputState
	{
		[Token(Token = "0x4000BAA")]
		Inactive,
		[Token(Token = "0x4000BAB")]
		PrimaryInputDown,
		[Token(Token = "0x4000BAC")]
		PrimaryInputDownStay,
		[Token(Token = "0x4000BAD")]
		PrimaryInputUp
	}
	[Token(Token = "0x2000281")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0x10F4298", Offset = "0x10F4298", VA = "0x10F4298")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x2000282")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C39DC", Offset = "0x8C39DC")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C39EC", Offset = "0x8C39EC")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C39FC", Offset = "0x8C39FC")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x17000131")]
		public Transform ToolTransform
		{
			[Token(Token = "0x6000AE0")]
			[Address(RVA = "0x10F44AC", Offset = "0x10F44AC", VA = "0x10F44AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000132")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6000AE1")]
			[Address(RVA = "0x10F44B4", Offset = "0x10F44B4", VA = "0x10F44B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8CAC", Offset = "0x8C8CAC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AE2")]
			[Address(RVA = "0x10F44BC", Offset = "0x10F44BC", VA = "0x10F44BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8CBC", Offset = "0x8C8CBC")]
			set
			{
			}
		}

		[Token(Token = "0x17000133")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000AE3")]
			get;
		}

		[Token(Token = "0x17000134")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x6000AE4")]
			get;
		}

		[Token(Token = "0x17000135")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x6000AE5")]
			get;
		}

		[Token(Token = "0x17000136")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6000AE6")]
			[Address(RVA = "0x10F44C8", Offset = "0x10F44C8", VA = "0x10F44C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8CCC", Offset = "0x8C8CCC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000AE7")]
			[Address(RVA = "0x10F44D4", Offset = "0x10F44D4", VA = "0x10F44D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8CDC", Offset = "0x8C8CDC")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000137")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x6000AE8")]
			[Address(RVA = "0x10F44E0", Offset = "0x10F44E0", VA = "0x10F44E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8CEC", Offset = "0x8C8CEC")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000AE9")]
			[Address(RVA = "0x10F44EC", Offset = "0x10F44EC", VA = "0x10F44EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8CFC", Offset = "0x8C8CFC")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000138")]
		public abstract bool EnableState
		{
			[Token(Token = "0x6000AEE")]
			get;
			[Token(Token = "0x6000AEF")]
			set;
		}

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0x10F44F8", Offset = "0x10F44F8", VA = "0x10F44F8")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000AEB")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x6000AEC")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x6000AED")]
		public abstract void DeFocus();

		[Token(Token = "0x6000AF0")]
		public abstract void Initialize();

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x10F4500", Offset = "0x10F4500", VA = "0x10F4500")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x10F454C", Offset = "0x10F454C", VA = "0x10F454C")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x10F45A0", Offset = "0x10F45A0", VA = "0x10F45A0", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0x10F4850", Offset = "0x10F4850", VA = "0x10F4850", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0x10F4FDC", Offset = "0x10F4FDC", VA = "0x10F4FDC")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x2000283")]
	public interface InteractableToolView
	{
		[Token(Token = "0x17000139")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x6000AF6")]
			get;
		}

		[Token(Token = "0x1700013A")]
		bool EnableState
		{
			[Token(Token = "0x6000AF8")]
			get;
			[Token(Token = "0x6000AF9")]
			set;
		}

		[Token(Token = "0x1700013B")]
		bool ToolActivateState
		{
			[Token(Token = "0x6000AFA")]
			get;
			[Token(Token = "0x6000AFB")]
			set;
		}

		[Token(Token = "0x6000AF7")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x2000284")]
	public class PinchStateModule
	{
		[Token(Token = "0x2000285")]
		private enum PinchState
		{
			[Token(Token = "0x4000BBE")]
			None,
			[Token(Token = "0x4000BBF")]
			PinchDown,
			[Token(Token = "0x4000BC0")]
			PinchStay,
			[Token(Token = "0x4000BC1")]
			PinchUp
		}

		[Token(Token = "0x4000BBA")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x1700013C")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x6000AFC")]
			[Address(RVA = "0x97CE04", Offset = "0x97CE04", VA = "0x97CE04")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700013D")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x6000AFD")]
			[Address(RVA = "0x97CE8C", Offset = "0x97CE8C", VA = "0x97CE8C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700013E")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x6000AFE")]
			[Address(RVA = "0x97CF14", Offset = "0x97CF14", VA = "0x97CF14")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x97CF9C", Offset = "0x97CF9C", VA = "0x97CF9C")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x97CFD0", Offset = "0x97CFD0", VA = "0x97CFD0")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x2000286")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x4000BC2")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x4000BC3")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x4000BC4")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x4000BC5")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x4000BC6")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C3A1C", Offset = "0x8C3A1C")]
		private float _coneAngleDegrees;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x1700013F")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000B01")]
			[Address(RVA = "0x97FFA8", Offset = "0x97FFA8", VA = "0x97FFA8", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000140")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6000B02")]
			[Address(RVA = "0x97FFB0", Offset = "0x97FFB0", VA = "0x97FFB0", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000141")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6000B03")]
			[Address(RVA = "0x980018", Offset = "0x980018", VA = "0x980018", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000142")]
		public override bool EnableState
		{
			[Token(Token = "0x6000B04")]
			[Address(RVA = "0x980020", Offset = "0x980020", VA = "0x980020", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B05")]
			[Address(RVA = "0x980064", Offset = "0x980064", VA = "0x980064", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0x9800D8", Offset = "0x9800D8", VA = "0x9800D8", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0x980140", Offset = "0x980140", VA = "0x980140")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x9801E4", Offset = "0x9801E4", VA = "0x9801E4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x98049C", Offset = "0x98049C", VA = "0x98049C")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0x980524", Offset = "0x980524", VA = "0x980524", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0x9808F4", Offset = "0x9808F4", VA = "0x9808F4")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0x980A04", Offset = "0x980A04", VA = "0x980A04")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0x980B28", Offset = "0x980B28", VA = "0x980B28")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0x980E2C", Offset = "0x980E2C", VA = "0x980E2C")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0x9811C0", Offset = "0x9811C0", VA = "0x9811C0", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0x9812A8", Offset = "0x9812A8", VA = "0x9812A8", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0x9812E4", Offset = "0x9812E4", VA = "0x9812E4")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x2000287")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000BD2")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x4000BD3")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3A90", Offset = "0x8C3A90")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x17000143")]
		public bool EnableState
		{
			[Token(Token = "0x6000B12")]
			[Address(RVA = "0x980048", Offset = "0x980048", VA = "0x980048", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B13")]
			[Address(RVA = "0x980080", Offset = "0x980080", VA = "0x980080", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000144")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6000B14")]
			[Address(RVA = "0x9813F0", Offset = "0x9813F0", VA = "0x9813F0", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B15")]
			[Address(RVA = "0x980460", Offset = "0x980460", VA = "0x980460", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000145")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6000B17")]
			[Address(RVA = "0x981650", Offset = "0x981650", VA = "0x981650", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8D0C", Offset = "0x8C8D0C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B18")]
			[Address(RVA = "0x981658", Offset = "0x981658", VA = "0x981658")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8D1C", Offset = "0x8C8D1C")]
			set
			{
			}
		}

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0x9813F8", Offset = "0x9813F8", VA = "0x9813F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x9811FC", Offset = "0x9811FC", VA = "0x9811FC", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x981660", Offset = "0x981660", VA = "0x981660")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x9818D4", Offset = "0x9818D4", VA = "0x9818D4")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x9819C4", Offset = "0x9819C4", VA = "0x9819C4")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x2000288")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x17000146")]
		public bool UseSpherecast
		{
			[Token(Token = "0x6000B1D")]
			[Address(RVA = "0x1174678", Offset = "0x1174678", VA = "0x1174678")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B1E")]
			[Address(RVA = "0x1174680", Offset = "0x1174680", VA = "0x1174680")]
			set
			{
			}
		}

		[Token(Token = "0x17000147")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x6000B1F")]
			[Address(RVA = "0x1174708", Offset = "0x1174708", VA = "0x1174708")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000B20")]
			[Address(RVA = "0x1174710", Offset = "0x1174710", VA = "0x1174710")]
			set
			{
			}
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0x117477C", Offset = "0x117477C", VA = "0x117477C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0x1174A40", Offset = "0x1174A40", VA = "0x1174A40")]
		public void ToggleSphereCasting(UnityEngine.UI.Toggle t)
		{
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x1174A50", Offset = "0x1174A50", VA = "0x1174A50")]
		public void ToggleGrabThroughWalls(UnityEngine.UI.Toggle t)
		{
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x1174A60", Offset = "0x1174A60", VA = "0x1174A60")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x2000289")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0x109A824", Offset = "0x109A824", VA = "0x109A824")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x109A828", Offset = "0x109A828", VA = "0x109A828")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x109A860", Offset = "0x109A860", VA = "0x109A860")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0x109A898", Offset = "0x109A898", VA = "0x109A898")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0x109A8D0", Offset = "0x109A8D0", VA = "0x109A8D0")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0x109A908", Offset = "0x109A908", VA = "0x109A908")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0x109A940", Offset = "0x109A940", VA = "0x109A940")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0x109A978", Offset = "0x109A978", VA = "0x109A978")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0x109A9EC", Offset = "0x109A9EC", VA = "0x109A9EC")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0x109AA5C", Offset = "0x109AA5C", VA = "0x109AA5C")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x200028A")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0x109AA64", Offset = "0x109AA64", VA = "0x109AA64")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0x109AA68", Offset = "0x109AA68", VA = "0x109AA68")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0x109AA20", Offset = "0x109AA20", VA = "0x109AA20")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0x109AAA8", Offset = "0x109AAA8", VA = "0x109AAA8")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x200028B")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x200028C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0F84", Offset = "0x8C0F84")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000BEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000BEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4000BF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4000BF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4000BF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x17000148")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B3B")]
				[Address(RVA = "0x10B20D8", Offset = "0x10B20D8", VA = "0x10B20D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000149")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B3D")]
				[Address(RVA = "0x10B2120", Offset = "0x10B2120", VA = "0x10B2120", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B38")]
			[Address(RVA = "0x10B1EEC", Offset = "0x10B1EEC", VA = "0x10B1EEC")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6000B39")]
			[Address(RVA = "0x10B1F18", Offset = "0x10B1F18", VA = "0x10B1F18", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B3A")]
			[Address(RVA = "0x10B1F1C", Offset = "0x10B1F1C", VA = "0x10B1F1C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B3C")]
			[Address(RVA = "0x10B20E0", Offset = "0x10B20E0", VA = "0x10B20E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000BE3")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x4000BE4")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x979E38", Offset = "0x979E38", VA = "0x979E38")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0x979EE4", Offset = "0x979EE4", VA = "0x979EE4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0x97A134", Offset = "0x97A134", VA = "0x97A134")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0x97A0BC", Offset = "0x97A0BC", VA = "0x97A0BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C8D2C", Offset = "0x8C8D2C")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0x97A180", Offset = "0x97A180", VA = "0x97A180")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x200028D")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x200028E")]
		public enum SelectionState
		{
			[Token(Token = "0x4000BFA")]
			Off,
			[Token(Token = "0x4000BFB")]
			Selected,
			[Token(Token = "0x4000BFC")]
			Highlighted
		}

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x1700014A")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x6000B3E")]
			[Address(RVA = "0x98B178", Offset = "0x98B178", VA = "0x98B178")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x6000B3F")]
			[Address(RVA = "0x98B180", Offset = "0x98B180", VA = "0x98B180")]
			set
			{
			}
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0x98B304", Offset = "0x98B304", VA = "0x98B304")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0x98B508", Offset = "0x98B508", VA = "0x98B508")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x98B208", Offset = "0x98B208", VA = "0x98B208")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0x98B5F4", Offset = "0x98B5F4", VA = "0x98B5F4")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x200028F")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x2000290")]
		public enum SegmentType
		{
			[Token(Token = "0x4000C0B")]
			Straight,
			[Token(Token = "0x4000C0C")]
			LeftTurn,
			[Token(Token = "0x4000C0D")]
			RightTurn,
			[Token(Token = "0x4000C0E")]
			Switch
		}

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x4000C03")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x4000C04")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3B70", Offset = "0x8C3B70")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x1700014B")]
		public float StartDistance
		{
			[Token(Token = "0x6000B45")]
			[Address(RVA = "0x1157560", Offset = "0x1157560", VA = "0x1157560")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8DDC", Offset = "0x8C8DDC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B46")]
			[Address(RVA = "0x1157568", Offset = "0x1157568", VA = "0x1157568")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8DEC", Offset = "0x8C8DEC")]
			set
			{
			}
		}

		[Token(Token = "0x1700014C")]
		public float GridSize
		{
			[Token(Token = "0x6000B47")]
			[Address(RVA = "0x1157570", Offset = "0x1157570", VA = "0x1157570")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B48")]
			[Address(RVA = "0x1157578", Offset = "0x1157578", VA = "0x1157578")]
			private set
			{
			}
		}

		[Token(Token = "0x1700014D")]
		public int SubDivCount
		{
			[Token(Token = "0x6000B49")]
			[Address(RVA = "0x1157580", Offset = "0x1157580", VA = "0x1157580")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B4A")]
			[Address(RVA = "0x1157588", Offset = "0x1157588", VA = "0x1157588")]
			set
			{
			}
		}

		[Token(Token = "0x1700014E")]
		public SegmentType Type
		{
			[Token(Token = "0x6000B4B")]
			[Address(RVA = "0x1157590", Offset = "0x1157590", VA = "0x1157590")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x1700014F")]
		public Pose EndPose
		{
			[Token(Token = "0x6000B4C")]
			[Address(RVA = "0x1157598", Offset = "0x1157598", VA = "0x1157598")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000150")]
		public float Radius
		{
			[Token(Token = "0x6000B4D")]
			[Address(RVA = "0x11578F4", Offset = "0x11578F4", VA = "0x11578F4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000151")]
		public float SegmentLength
		{
			[Token(Token = "0x6000B4F")]
			[Address(RVA = "0x1157600", Offset = "0x1157600", VA = "0x1157600")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0x1157904", Offset = "0x1157904", VA = "0x1157904")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x115791C", Offset = "0x115791C", VA = "0x115791C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x1157640", Offset = "0x1157640", VA = "0x1157640")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x1157920", Offset = "0x1157920", VA = "0x1157920")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0x1157924", Offset = "0x1157924", VA = "0x1157924")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0x115798C", Offset = "0x115798C", VA = "0x115798C")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0x1158254", Offset = "0x1158254", VA = "0x1158254")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x1158500", Offset = "0x1158500", VA = "0x1158500")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x2000291")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x2000292")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0F94", Offset = "0x8C0F94")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4000C23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4000C24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x17000152")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B65")]
				[Address(RVA = "0xEA4190", Offset = "0xEA4190", VA = "0xEA4190", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000153")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B67")]
				[Address(RVA = "0xEA41D8", Offset = "0xEA41D8", VA = "0xEA41D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B62")]
			[Address(RVA = "0xEA3FEC", Offset = "0xEA3FEC", VA = "0xEA3FEC")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6000B63")]
			[Address(RVA = "0xEA4018", Offset = "0xEA4018", VA = "0xEA4018", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B64")]
			[Address(RVA = "0xEA401C", Offset = "0xEA401C", VA = "0xEA401C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B66")]
			[Address(RVA = "0xEA4198", Offset = "0xEA4198", VA = "0xEA4198", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C0F")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x4000C10")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x11585D0", Offset = "0x11585D0", VA = "0x11585D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0x115868C", Offset = "0x115868C", VA = "0x115868C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0x115873C", Offset = "0x115873C", VA = "0x115873C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x11588B4", Offset = "0x11588B4", VA = "0x11588B4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x1158A7C", Offset = "0x1158A7C", VA = "0x1158A7C")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x1158B64", Offset = "0x1158B64", VA = "0x1158B64")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x1158D78", Offset = "0x1158D78", VA = "0x1158D78")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x1158C78", Offset = "0x1158C78", VA = "0x1158C78")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0x1158C8C", Offset = "0x1158C8C", VA = "0x1158C8C")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0x1158DD0", Offset = "0x1158DD0", VA = "0x1158DD0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C8DFC", Offset = "0x8C8DFC")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x1158E48", Offset = "0x1158E48", VA = "0x1158E48")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x2000293")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x17000154")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x6000B68")]
			[Address(RVA = "0x1158EF8", Offset = "0x1158EF8", VA = "0x1158EF8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0x1158F08", Offset = "0x1158F08", VA = "0x1158F08", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0x1158F10", Offset = "0x1158F10", VA = "0x1158F10", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0x1159254", Offset = "0x1159254", VA = "0x1159254")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x2000294")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x4000C28")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x4000C29")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3C70", Offset = "0x8C3C70")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x17000155")]
		public float Distance
		{
			[Token(Token = "0x6000B6C")]
			[Address(RVA = "0x1159364", Offset = "0x1159364", VA = "0x1159364")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8EAC", Offset = "0x8C8EAC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B6D")]
			[Address(RVA = "0x115936C", Offset = "0x115936C", VA = "0x115936C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C8EBC", Offset = "0x8C8EBC")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000156")]
		public float Scale
		{
			[Token(Token = "0x6000B6E")]
			[Address(RVA = "0x1159374", Offset = "0x1159374", VA = "0x1159374")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B6F")]
			[Address(RVA = "0x115937C", Offset = "0x115937C", VA = "0x115937C")]
			set
			{
			}
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0x1158F0C", Offset = "0x1158F0C", VA = "0x1158F0C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0x1159384", Offset = "0x1159384", VA = "0x1159384")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0x1158F58", Offset = "0x1158F58", VA = "0x1158F58")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x6000B73")]
		[Address(RVA = "0x115917C", Offset = "0x115917C", VA = "0x115917C")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x6000B74")]
		public abstract void UpdatePosition();

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0x11592C0", Offset = "0x11592C0", VA = "0x11592C0")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x2000295")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x2000296")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0FA4", Offset = "0x8C0FA4")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x4000C3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x4000C40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x4000C41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x4000C42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x4000C43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x4000C44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x4000C45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x4000C46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x4000C47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x17000157")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B83")]
				[Address(RVA = "0xEA4478", Offset = "0xEA4478", VA = "0xEA4478", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000158")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B85")]
				[Address(RVA = "0xEA44C0", Offset = "0xEA44C0", VA = "0xEA44C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B80")]
			[Address(RVA = "0xEA41E0", Offset = "0xEA41E0", VA = "0xEA41E0")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6000B81")]
			[Address(RVA = "0xEA420C", Offset = "0xEA420C", VA = "0xEA420C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B82")]
			[Address(RVA = "0xEA4210", Offset = "0xEA4210", VA = "0xEA4210", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B84")]
			[Address(RVA = "0xEA4480", Offset = "0xEA4480", VA = "0xEA4480", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x1159524", Offset = "0x1159524", VA = "0x1159524")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0x1159584", Offset = "0x1159584", VA = "0x1159584")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B79")]
		[Address(RVA = "0x115968C", Offset = "0x115968C", VA = "0x115968C")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0x11597FC", Offset = "0x11597FC", VA = "0x11597FC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0x11596EC", Offset = "0x11596EC", VA = "0x11596EC")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0x11598D8", Offset = "0x11598D8", VA = "0x11598D8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C8ECC", Offset = "0x8C8ECC")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0x1159960", Offset = "0x1159960", VA = "0x1159960")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0x1159A0C", Offset = "0x1159A0C", VA = "0x1159A0C")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0x1159A6C", Offset = "0x1159A6C", VA = "0x1159A6C")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x2000297")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x2000298")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4000C66")]
			Start,
			[Token(Token = "0x4000C67")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4000C68")]
			Stop
		}

		[Token(Token = "0x2000299")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0FB4", Offset = "0x8C0FB4")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x4000C6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x4000C6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x4000C6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x4000C6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4000C70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x4000C71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x17000159")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000B98")]
				[Address(RVA = "0xEA473C", Offset = "0xEA473C", VA = "0xEA473C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700015A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000B9A")]
				[Address(RVA = "0xEA4784", Offset = "0xEA4784", VA = "0xEA4784", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000B95")]
			[Address(RVA = "0xEA44C8", Offset = "0xEA44C8", VA = "0xEA44C8")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6000B96")]
			[Address(RVA = "0xEA44F4", Offset = "0xEA44F4", VA = "0xEA44F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000B97")]
			[Address(RVA = "0xEA44F8", Offset = "0xEA44F8", VA = "0xEA44F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000B99")]
			[Address(RVA = "0xEA4744", Offset = "0xEA4744", VA = "0xEA4744", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C48")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4000C49")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x4000C4A")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x4000C4B")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C3CD0", Offset = "0x8C3CD0")]
		[SerializeField]
		protected float _initialSpeed;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0x1159AC8", Offset = "0x1159AC8", VA = "0x1159AC8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0x1159C34", Offset = "0x1159C34", VA = "0x1159C34")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0x1159C40", Offset = "0x1159C40", VA = "0x1159C40", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0x1159D90", Offset = "0x1159D90", VA = "0x1159D90")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0x1159BA8", Offset = "0x1159BA8", VA = "0x1159BA8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C8F7C", Offset = "0x8C8F7C")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0x1159DF0", Offset = "0x1159DF0", VA = "0x1159DF0")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0x1159D2C", Offset = "0x1159D2C", VA = "0x1159D2C")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x115A00C", Offset = "0x115A00C", VA = "0x115A00C")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x115A148", Offset = "0x115A148", VA = "0x115A148")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0x115A078", Offset = "0x115A078", VA = "0x115A078")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0x115A1B4", Offset = "0x115A1B4", VA = "0x115A1B4")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0x115A1D4", Offset = "0x115A1D4", VA = "0x115A1D4")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0x115A260", Offset = "0x115A260", VA = "0x115A260")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0x115A318", Offset = "0x115A318", VA = "0x115A318")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0x115A328", Offset = "0x115A328", VA = "0x115A328")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x200029A")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x1700015B")]
		public float TrackLength
		{
			[Token(Token = "0x6000B9B")]
			[Address(RVA = "0x115A390", Offset = "0x115A390", VA = "0x115A390")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000B9C")]
			[Address(RVA = "0x115A398", Offset = "0x115A398", VA = "0x115A398")]
			private set
			{
			}
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0x115A3A0", Offset = "0x115A3A0", VA = "0x115A3A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0x1159404", Offset = "0x1159404", VA = "0x1159404")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0x115A3A4", Offset = "0x115A3A4", VA = "0x115A3A4")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0x115A5B8", Offset = "0x115A5B8", VA = "0x115A5B8")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0x115A6B4", Offset = "0x115A6B4", VA = "0x115A6B4")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x200029B")]
	public class Pose
	{
		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0x97FCA4", Offset = "0x97FCA4", VA = "0x97FCA4")]
		public Pose()
		{
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0x97FCE8", Offset = "0x97FCE8", VA = "0x97FCE8")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x200029C")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x200029D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0FC4", Offset = "0x8C0FC4")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4000C89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x4000C8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x4000C8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x1700015D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000BB0")]
				[Address(RVA = "0xEA6254", Offset = "0xEA6254", VA = "0xEA6254", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700015E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000BB2")]
				[Address(RVA = "0xEA629C", Offset = "0xEA629C", VA = "0xEA629C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000BAD")]
			[Address(RVA = "0xEA6084", Offset = "0xEA6084", VA = "0xEA6084")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6000BAE")]
			[Address(RVA = "0xEA60B0", Offset = "0xEA60B0", VA = "0xEA60B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000BAF")]
			[Address(RVA = "0xEA60B4", Offset = "0xEA60B4", VA = "0xEA60B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000BB1")]
			[Address(RVA = "0xEA625C", Offset = "0xEA625C", VA = "0xEA625C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200029E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0FD4", Offset = "0x8C0FD4")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000C8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000C8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000C8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4000C8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x4000C90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x4000C91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x1700015F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000BB6")]
				[Address(RVA = "0xEA63AC", Offset = "0xEA63AC", VA = "0xEA63AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000160")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000BB8")]
				[Address(RVA = "0xEA63F4", Offset = "0xEA63F4", VA = "0xEA63F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000BB3")]
			[Address(RVA = "0xEA62A4", Offset = "0xEA62A4", VA = "0xEA62A4")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6000BB4")]
			[Address(RVA = "0xEA62D0", Offset = "0xEA62D0", VA = "0xEA62D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000BB5")]
			[Address(RVA = "0xEA62D4", Offset = "0xEA62D4", VA = "0xEA62D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000BB7")]
			[Address(RVA = "0xEA63B4", Offset = "0xEA63B4", VA = "0xEA63B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C7B")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C3EB8", Offset = "0x8C3EB8")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x1700015C")]
		public bool IsMoving
		{
			[Token(Token = "0x6000BA4")]
			[Address(RVA = "0x1160998", Offset = "0x1160998", VA = "0x1160998")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C902C", Offset = "0x8C902C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BA5")]
			[Address(RVA = "0x11609A0", Offset = "0x11609A0", VA = "0x11609A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C903C", Offset = "0x8C903C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0x11609AC", Offset = "0x11609AC", VA = "0x11609AC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0x11609E8", Offset = "0x11609E8", VA = "0x11609E8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0x1160ACC", Offset = "0x1160ACC", VA = "0x1160ACC")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0x1160B40", Offset = "0x1160B40", VA = "0x1160B40")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C904C", Offset = "0x8C904C")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0x1160BC8", Offset = "0x1160BC8", VA = "0x1160BC8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C90AC", Offset = "0x8C90AC")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0x1160C80", Offset = "0x1160C80", VA = "0x1160C80")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0x1160CEC", Offset = "0x1160CEC", VA = "0x1160CEC")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x200029F")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0x109E654", Offset = "0x109E654", VA = "0x109E654")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0x109E6CC", Offset = "0x109E6CC", VA = "0x109E6CC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0x109E7B0", Offset = "0x109E7B0", VA = "0x109E7B0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0x109E8E8", Offset = "0x109E8E8", VA = "0x109E8E8")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0x109E96C", Offset = "0x109E96C", VA = "0x109E96C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0x109EA48", Offset = "0x109EA48", VA = "0x109EA48")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x20002A0")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4000C98")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4000C99")]
		EUDT_OverlayQuad,
		[Token(Token = "0x4000C9A")]
		EUDT_None,
		[Token(Token = "0x4000C9B")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x20002A1")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x20002A2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C0FE4", Offset = "0x8C0FE4")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000CB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000CB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x17000161")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000BD2")]
				[Address(RVA = "0x10AFD1C", Offset = "0x10AFD1C", VA = "0x10AFD1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000162")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000BD4")]
				[Address(RVA = "0x10AFD64", Offset = "0x10AFD64", VA = "0x10AFD64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000BCF")]
			[Address(RVA = "0x10AFAEC", Offset = "0x10AFAEC", VA = "0x10AFAEC")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6000BD0")]
			[Address(RVA = "0x10AFB18", Offset = "0x10AFB18", VA = "0x10AFB18", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000BD1")]
			[Address(RVA = "0x10AFB1C", Offset = "0x10AFB1C", VA = "0x10AFB1C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000BD3")]
			[Address(RVA = "0x10AFD24", Offset = "0x10AFD24", VA = "0x10AFD24", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x4000C9D")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x4000C9E")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x4000C9F")]
		private const string noneID = "NoneID";

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private UnityEngine.UI.Toggle applicationRadioButton;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityEngine.UI.Toggle noneRadioButton;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C3EF8", Offset = "0x8C3EF8")]
		public GameObject mainCamera;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C3F30", Offset = "0x8C3F30")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0xC74314", Offset = "0xC74314", VA = "0xC74314")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0xC74B70", Offset = "0xC74B70", VA = "0xC74B70")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0xC74CB8", Offset = "0xC74CB8", VA = "0xC74CB8")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0xC74DF4", Offset = "0xC74DF4", VA = "0xC74DF4")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0xC74F30", Offset = "0xC74F30", VA = "0xC74F30")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0xC74C8C", Offset = "0xC74C8C", VA = "0xC74C8C")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0xC75010", Offset = "0xC75010", VA = "0xC75010")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8C91AC", Offset = "0x8C91AC")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0xC75088", Offset = "0xC75088", VA = "0xC75088")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0xC7477C", Offset = "0xC7477C", VA = "0xC7477C")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0xC751DC", Offset = "0xC751DC", VA = "0xC751DC")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0xC750BC", Offset = "0xC750BC", VA = "0xC750BC")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0xC754F4", Offset = "0xC754F4", VA = "0xC754F4")]
		public void RadioPressed(string radioLabel, string group, UnityEngine.UI.Toggle t)
		{
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0xC755E4", Offset = "0xC755E4", VA = "0xC755E4")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0xC75674", Offset = "0xC75674", VA = "0xC75674")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C920C", Offset = "0x8C920C")]
		private void <Start>b__24_0(UnityEngine.UI.Toggle t)
		{
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0xC756CC", Offset = "0xC756CC", VA = "0xC756CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C921C", Offset = "0x8C921C")]
		private void <Start>b__24_1(UnityEngine.UI.Toggle t)
		{
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0xC75724", Offset = "0xC75724", VA = "0xC75724")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C922C", Offset = "0x8C922C")]
		private void <Start>b__24_2(UnityEngine.UI.Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x20002A3")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C0FF4", Offset = "0x8C0FF4")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C1054", Offset = "0x8C1054")]
		private sealed class <>c
		{
			[Token(Token = "0x4000CD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000CD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6000BE2")]
			[Address(RVA = "0x10A8D18", Offset = "0x10A8D18", VA = "0x10A8D18")]
			public <>c()
			{
			}

			[Token(Token = "0x6000BE3")]
			[Address(RVA = "0x10A8D20", Offset = "0x10A8D20", VA = "0x10A8D20")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000CB7")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4000CB8")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4000CB9")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4000CBA")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4000CBB")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4000CBC")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4000CBD")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4000CBE")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x4000CBF")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x4000CC0")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x4000CC1")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0x117EA10", Offset = "0x117EA10", VA = "0x117EA10")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0x117EA6C", Offset = "0x117EA6C", VA = "0x117EA6C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0x117EF00", Offset = "0x117EF00", VA = "0x117EF00")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0x117EFEC", Offset = "0x117EFEC", VA = "0x117EFEC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0x117F150", Offset = "0x117F150", VA = "0x117F150")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0x117F458", Offset = "0x117F458", VA = "0x117F458")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0x117F550", Offset = "0x117F550", VA = "0x117F550")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0x117F6B0", Offset = "0x117F6B0", VA = "0x117F6B0")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0x117F1E8", Offset = "0x117F1E8", VA = "0x117F1E8")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0x117F23C", Offset = "0x117F23C", VA = "0x117F23C")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0x117EDA4", Offset = "0x117EDA4", VA = "0x117EDA4")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0x117F7EC", Offset = "0x117F7EC", VA = "0x117F7EC")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x20002A5")]
	public enum HandPoseId
	{
		[Token(Token = "0x4000CD6")]
		Default,
		[Token(Token = "0x4000CD7")]
		Generic,
		[Token(Token = "0x4000CD8")]
		PingPongBall,
		[Token(Token = "0x4000CD9")]
		Controller
	}
	[Token(Token = "0x20002A6")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x17000163")]
		public bool AllowPointing
		{
			[Token(Token = "0x6000BE4")]
			[Address(RVA = "0x1183C48", Offset = "0x1183C48", VA = "0x1183C48")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000164")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6000BE5")]
			[Address(RVA = "0x1183C50", Offset = "0x1183C50", VA = "0x1183C50")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000165")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6000BE6")]
			[Address(RVA = "0x1183C58", Offset = "0x1183C58", VA = "0x1183C58")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0x1183C60", Offset = "0x1183C60", VA = "0x1183C60")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x20002A7")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x1156EA4", Offset = "0x1156EA4", VA = "0x1156EA4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0x115718C", Offset = "0x115718C", VA = "0x115718C")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0x11571E8", Offset = "0x11571E8", VA = "0x11571E8")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x115722C", Offset = "0x115722C", VA = "0x115722C")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Voice.Demo.UIShapesDemo
{
	[Token(Token = "0x20002A8")]
	public class InteractionHandler : MonoBehaviour
	{
		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C3FE8", Offset = "0x8C3FE8")]
		[SerializeField]
		[Multiline]
		private string freshStateText;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C4044", Offset = "0x8C4044")]
		private Text textArea;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool showJson;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8C40A0", Offset = "0x8C40A0")]
		private AppVoiceExperience appVoiceExperience;

		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string pendingText;

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0x10F5E4C", Offset = "0x10F5E4C", VA = "0x10F5E4C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0x10F5F18", Offset = "0x10F5F18", VA = "0x10F5F18")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0x10F5FE4", Offset = "0x10F5FE4", VA = "0x10F5FE4")]
		private void OnRequestStarted(WitRequest r)
		{
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0x10F60A4", Offset = "0x10F60A4", VA = "0x10F60A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0x10F60FC", Offset = "0x10F60FC", VA = "0x10F60FC")]
		public void OnResponse(WitResponseNode response)
		{
		}

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0x10F61EC", Offset = "0x10F61EC", VA = "0x10F61EC")]
		public void OnError(string error, string message)
		{
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0x10F63F4", Offset = "0x10F63F4", VA = "0x10F63F4")]
		public void ToggleActivation()
		{
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0x10F6454", Offset = "0x10F6454", VA = "0x10F6454")]
		public InteractionHandler()
		{
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0x10F64B0", Offset = "0x10F64B0", VA = "0x10F64B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8C928C", Offset = "0x8C928C")]
		private void <OnRequestStarted>b__7_0(string response)
		{
		}
	}
	[Token(Token = "0x20002A9")]
	public class ColorChanger : MonoBehaviour
	{
		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0x10995D8", Offset = "0x10995D8", VA = "0x10995D8")]
		private void SetColor(Transform trans, Color color)
		{
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0x1099674", Offset = "0x1099674", VA = "0x1099674")]
		public void UpdateColor(WitResponseNode commandResult)
		{
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0x1099898", Offset = "0x1099898", VA = "0x1099898")]
		public void UpdateColor(string[] results)
		{
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x1099708", Offset = "0x1099708", VA = "0x1099708")]
		public void UpdateColor(string colorName, string shape)
		{
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x10998D4", Offset = "0x10998D4", VA = "0x10998D4")]
		public ColorChanger()
		{
		}
	}
	[Token(Token = "0x20002AA")]
	[ExecuteAlways]
	public class Instructions : MonoBehaviour
	{
		[Token(Token = "0x20002AB")]
		internal enum Step
		{
			[Token(Token = "0x4000CE9")]
			SetupWit,
			[Token(Token = "0x4000CEA")]
			MissingServerToken,
			[Token(Token = "0x4000CEB")]
			MissingClientToken,
			[Token(Token = "0x4000CEC")]
			AddConfig,
			[Token(Token = "0x4000CED")]
			AddVoiceExperiences,
			[Token(Token = "0x4000CEE")]
			SetConfig,
			[Token(Token = "0x4000CEF")]
			Ready
		}

		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string[] steps;

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Text instructionText;

		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Step currentStep;

		[Token(Token = "0x17000166")]
		internal Step CurrentStep
		{
			[Token(Token = "0x6000BFA")]
			[Address(RVA = "0x10F36F4", Offset = "0x10F36F4", VA = "0x10F36F4")]
			get
			{
				return default(Step);
			}
		}

		[Token(Token = "0x17000167")]
		internal string CurrentStepText
		{
			[Token(Token = "0x6000BFB")]
			[Address(RVA = "0x10F36FC", Offset = "0x10F36FC", VA = "0x10F36FC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x10F3790", Offset = "0x10F3790", VA = "0x10F3790")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x10F3798", Offset = "0x10F3798", VA = "0x10F3798")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x10F379C", Offset = "0x10F379C", VA = "0x10F379C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x10F3794", Offset = "0x10F3794", VA = "0x10F3794")]
		private void UpdateStep()
		{
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x10F37A0", Offset = "0x10F37A0", VA = "0x10F37A0")]
		public Instructions()
		{
		}
	}
}
namespace Oculus.Voice.Demo.BuiltInDemo
{
	[Token(Token = "0x20002AC")]
	public class TimerController : MonoBehaviour
	{
		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float _time;

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool _timerExist;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		private bool _timerRunning;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C40FC", Offset = "0x8C40FC")]
		public Text logText;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C4134", Offset = "0x8C4134")]
		public AudioClip buzzSound;

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x11564C8", Offset = "0x11564C8", VA = "0x11564C8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x1156598", Offset = "0x1156598", VA = "0x1156598")]
		private void Log(string msg)
		{
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x115652C", Offset = "0x115652C", VA = "0x115652C")]
		private void OnElapsedTime()
		{
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x1156628", Offset = "0x1156628", VA = "0x1156628")]
		public void DeleteTimer()
		{
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x115669C", Offset = "0x115669C", VA = "0x115669C")]
		public void CreateTimer(string[] entityValues)
		{
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x1156A70", Offset = "0x1156A70", VA = "0x1156A70")]
		public void GetTimerIntent()
		{
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x1156B20", Offset = "0x1156B20", VA = "0x1156B20")]
		public void PauseTimer()
		{
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x1156B70", Offset = "0x1156B70", VA = "0x1156B70")]
		public void ResumeTimer()
		{
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x1156BC4", Offset = "0x1156BC4", VA = "0x1156BC4")]
		public void SubtractTimeTimer(string[] entityValues)
		{
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x1156CDC", Offset = "0x1156CDC", VA = "0x1156CDC")]
		public void AddTimeToTimer(string[] entityValues)
		{
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x1156DE8", Offset = "0x1156DE8", VA = "0x1156DE8")]
		public float GetRemainingTime()
		{
			return default(float);
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x1156A98", Offset = "0x1156A98", VA = "0x1156A98")]
		public string GetFormattedTimeFromSeconds()
		{
			return null;
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x11568FC", Offset = "0x11568FC", VA = "0x11568FC")]
		private bool ParseTime(string[] entityValues, out float time)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x1156DF0", Offset = "0x1156DF0", VA = "0x1156DF0")]
		public TimerController()
		{
		}
	}
	[Token(Token = "0x20002AD")]
	public class TimerDisplay : MonoBehaviour
	{
		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TimerController timer;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text _uiText;

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0x1156DF8", Offset = "0x1156DF8", VA = "0x1156DF8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0x1156E54", Offset = "0x1156E54", VA = "0x1156E54")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0x1156E9C", Offset = "0x1156E9C", VA = "0x1156E9C")]
		public TimerDisplay()
		{
		}
	}
	[Token(Token = "0x20002AE")]
	public class WitActivation : MonoBehaviour
	{
		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AppVoiceExperience voiceExperience;

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0x109EA58", Offset = "0x109EA58", VA = "0x109EA58")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0x109EB10", Offset = "0x109EB10", VA = "0x109EB10")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0x109EB6C", Offset = "0x109EB6C", VA = "0x109EB6C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x109EBF0", Offset = "0x109EBF0", VA = "0x109EBF0")]
		public void ActivateWit()
		{
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0x109EC14", Offset = "0x109EC14", VA = "0x109EC14")]
		public WitActivation()
		{
		}
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x20002AF")]
	public static class AvatarLogger
	{
		[Token(Token = "0x4000CF8")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x4000CF9")]
		public const string Tab = "    ";

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0x1089DC4", Offset = "0x1089DC4", VA = "0x1089DC4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8C929C", Offset = "0x8C929C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8C929C", Offset = "0x8C929C")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0x1089E54", Offset = "0x1089E54", VA = "0x1089E54")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8C92FC", Offset = "0x8C92FC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8C92FC", Offset = "0x8C92FC")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0x1089EF4", Offset = "0x1089EF4", VA = "0x1089EF4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8C935C", Offset = "0x8C935C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8C935C", Offset = "0x8C935C")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0x1089F84", Offset = "0x1089F84", VA = "0x1089F84")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8C93BC", Offset = "0x8C93BC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8C93BC", Offset = "0x8C93BC")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0x108A014", Offset = "0x108A014", VA = "0x108A014")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8C941C", Offset = "0x8C941C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8C941C", Offset = "0x8C941C")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x20002B0")]
	public class CAPI
	{
		[Token(Token = "0x20002B1")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x20002B2")]
		public enum Result
		{
			[Token(Token = "0x4000D05")]
			Success = 0,
			[Token(Token = "0x4000D06")]
			Failure = -1000,
			[Token(Token = "0x4000D07")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x4000D08")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x4000D09")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x4000D0A")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x4000D0B")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x4000D0C")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x4000D0D")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x20002B3")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x4000D0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x6000CB1")]
			[Address(RVA = "0x10A3B08", Offset = "0x10A3B08", VA = "0x10A3B08")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x4000CFA")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x4000D02")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0x108EBCC", Offset = "0x108EBCC", VA = "0x108EBCC")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0x108EC5C", Offset = "0x108EC5C", VA = "0x108EC5C")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x108EE80", Offset = "0x108EE80", VA = "0x108EE80")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000C20")]
		[Address(RVA = "0x108EF6C", Offset = "0x108EF6C", VA = "0x108EF6C")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x6000C21")]
		[Address(RVA = "0x108EFDC", Offset = "0x108EFDC", VA = "0x108EFDC")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x6000C22")]
		[Address(RVA = "0x108F050", Offset = "0x108F050", VA = "0x108F050")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0x108F0D0", Offset = "0x108F0D0", VA = "0x108F0D0")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x6000C24")]
		[Address(RVA = "0x108F214", Offset = "0x108F214", VA = "0x108F214")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0x108F294", Offset = "0x108F294", VA = "0x108F294")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x108F3D8", Offset = "0x108F3D8", VA = "0x108F3D8")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6000C27")]
		[Address(RVA = "0x108F458", Offset = "0x108F458", VA = "0x108F458")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6000C28")]
		[Address(RVA = "0x108F4D8", Offset = "0x108F4D8", VA = "0x108F4D8")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000C29")]
		[Address(RVA = "0x108F558", Offset = "0x108F558", VA = "0x108F558")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0x108F5D8", Offset = "0x108F5D8", VA = "0x108F5D8")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0x108F668", Offset = "0x108F668", VA = "0x108F668")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0x108F6F8", Offset = "0x108F6F8", VA = "0x108F6F8")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x108F788", Offset = "0x108F788", VA = "0x108F788")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0x108F808", Offset = "0x108F808", VA = "0x108F808")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0x108F888", Offset = "0x108F888", VA = "0x108F888")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6000C30")]
		[Address(RVA = "0x108F918", Offset = "0x108F918", VA = "0x108F918")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x6000C31")]
		[Address(RVA = "0x108F9A8", Offset = "0x108F9A8", VA = "0x108F9A8")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x6000C32")]
		[Address(RVA = "0x108FA38", Offset = "0x108FA38", VA = "0x108FA38")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000C33")]
		[Address(RVA = "0x108FAB8", Offset = "0x108FAB8", VA = "0x108FAB8")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0x108FB58", Offset = "0x108FB58", VA = "0x108FB58")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000C35")]
		[Address(RVA = "0x108FBD4", Offset = "0x108FBD4", VA = "0x108FBD4")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x6000C36")]
		[Address(RVA = "0x108FC74", Offset = "0x108FC74", VA = "0x108FC74")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x6000C37")]
		[Address(RVA = "0x108FD34", Offset = "0x108FD34", VA = "0x108FD34")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x108FE04", Offset = "0x108FE04", VA = "0x108FE04")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x6000C39")]
		[Address(RVA = "0x108FE94", Offset = "0x108FE94", VA = "0x108FE94")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0x108FF24", Offset = "0x108FF24", VA = "0x108FF24")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0x108FFB4", Offset = "0x108FFB4", VA = "0x108FFB4")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0x1090044", Offset = "0x1090044", VA = "0x1090044")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0x10900D4", Offset = "0x10900D4", VA = "0x10900D4")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0x1090154", Offset = "0x1090154", VA = "0x1090154")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0x1090270", Offset = "0x1090270", VA = "0x1090270")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000C40")]
		[Address(RVA = "0x10901E0", Offset = "0x10901E0", VA = "0x10901E0")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0x1090490", Offset = "0x1090490", VA = "0x1090490")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000C42")]
		[Address(RVA = "0x1090600", Offset = "0x1090600", VA = "0x1090600")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000C43")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0x1090680", Offset = "0x1090680", VA = "0x1090680")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000C45")]
		[Address(RVA = "0x1090928", Offset = "0x1090928", VA = "0x1090928")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0x10909A8", Offset = "0x10909A8", VA = "0x10909A8")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000C47")]
		[Address(RVA = "0x1090B18", Offset = "0x1090B18", VA = "0x1090B18")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0x1090B98", Offset = "0x1090B98", VA = "0x1090B98")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000C49")]
		[Address(RVA = "0x1090D08", Offset = "0x1090D08", VA = "0x1090D08")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0x1090D88", Offset = "0x1090D88", VA = "0x1090D88")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0x1090EF8", Offset = "0x1090EF8", VA = "0x1090EF8")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0x1090F78", Offset = "0x1090F78", VA = "0x1090F78")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x10910E8", Offset = "0x10910E8", VA = "0x10910E8")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x1091168", Offset = "0x1091168", VA = "0x1091168")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x10911E8", Offset = "0x10911E8", VA = "0x10911E8")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6000C50")]
		[Address(RVA = "0x1091280", Offset = "0x1091280", VA = "0x1091280")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x1091300", Offset = "0x1091300", VA = "0x1091300")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0x10914D8", Offset = "0x10914D8", VA = "0x10914D8")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x1091630", Offset = "0x1091630", VA = "0x1091630")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x1091458", Offset = "0x1091458", VA = "0x1091458")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x10916B0", Offset = "0x10916B0", VA = "0x10916B0")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000C56")]
		[Address(RVA = "0x1091730", Offset = "0x1091730", VA = "0x1091730")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x10917C0", Offset = "0x10917C0", VA = "0x10917C0")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x1091840", Offset = "0x1091840", VA = "0x1091840")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x10918D0", Offset = "0x10918D0", VA = "0x10918D0")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x1091950", Offset = "0x1091950", VA = "0x1091950")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x10919D0", Offset = "0x10919D0", VA = "0x10919D0")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0x1091C5C", Offset = "0x1091C5C", VA = "0x1091C5C")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0x1091CEC", Offset = "0x1091CEC", VA = "0x1091CEC")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0x1091F1C", Offset = "0x1091F1C", VA = "0x1091F1C")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x1091FB4", Offset = "0x1091FB4", VA = "0x1091FB4")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x1092104", Offset = "0x1092104", VA = "0x1092104")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x1092184", Offset = "0x1092184", VA = "0x1092184")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0x1092204", Offset = "0x1092204", VA = "0x1092204")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x1092358", Offset = "0x1092358", VA = "0x1092358")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0x10923D8", Offset = "0x10923D8", VA = "0x10923D8")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x6000C65")]
		[Address(RVA = "0x109252C", Offset = "0x109252C", VA = "0x109252C")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x10925AC", Offset = "0x10925AC", VA = "0x10925AC")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x109263C", Offset = "0x109263C", VA = "0x109263C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000C68")]
		[Address(RVA = "0x10926CC", Offset = "0x10926CC", VA = "0x10926CC")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000C69")]
		[Address(RVA = "0x109275C", Offset = "0x109275C", VA = "0x109275C")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0x10927DC", Offset = "0x10927DC", VA = "0x10927DC")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0x1092864", Offset = "0x1092864", VA = "0x1092864")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0x10928EC", Offset = "0x10928EC", VA = "0x10928EC")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0x109296C", Offset = "0x109296C", VA = "0x109296C")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x10929EC", Offset = "0x10929EC", VA = "0x10929EC")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x1092AA0", Offset = "0x1092AA0", VA = "0x1092AA0")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x1092B30", Offset = "0x1092B30", VA = "0x1092B30")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000C71")]
		[Address(RVA = "0x1092BC0", Offset = "0x1092BC0", VA = "0x1092BC0")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000C72")]
		[Address(RVA = "0x1092C40", Offset = "0x1092C40", VA = "0x1092C40")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x1092CC0", Offset = "0x1092CC0", VA = "0x1092CC0")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x1092D40", Offset = "0x1092D40", VA = "0x1092D40")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000C75")]
		[Address(RVA = "0x1092DD8", Offset = "0x1092DD8", VA = "0x1092DD8")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x6000C76")]
		[Address(RVA = "0x1092E68", Offset = "0x1092E68", VA = "0x1092E68")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x6000C77")]
		[Address(RVA = "0x1092EF8", Offset = "0x1092EF8", VA = "0x1092EF8")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x6000C78")]
		[Address(RVA = "0x1092F88", Offset = "0x1092F88", VA = "0x1092F88")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000C79")]
		[Address(RVA = "0x1093020", Offset = "0x1093020", VA = "0x1093020")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0x10930B8", Offset = "0x10930B8", VA = "0x10930B8")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x1093138", Offset = "0x1093138", VA = "0x1093138")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x10931B8", Offset = "0x10931B8", VA = "0x10931B8")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x109330C", Offset = "0x109330C", VA = "0x109330C")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x109338C", Offset = "0x109338C", VA = "0x109338C")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x10934E0", Offset = "0x10934E0", VA = "0x10934E0")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x1093560", Offset = "0x1093560", VA = "0x1093560")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000C81")]
		[Address(RVA = "0x109369C", Offset = "0x109369C", VA = "0x109369C")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0x109371C", Offset = "0x109371C", VA = "0x109371C")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0x10938F0", Offset = "0x10938F0", VA = "0x10938F0")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000C84")]
		[Address(RVA = "0x1093BD0", Offset = "0x1093BD0", VA = "0x1093BD0")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x1093870", Offset = "0x1093870", VA = "0x1093870")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x1093C60", Offset = "0x1093C60", VA = "0x1093C60")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x1093CE0", Offset = "0x1093CE0", VA = "0x1093CE0")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x1093D70", Offset = "0x1093D70", VA = "0x1093D70")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6000C89")]
		[Address(RVA = "0x1093E00", Offset = "0x1093E00", VA = "0x1093E00")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x1093E90", Offset = "0x1093E90", VA = "0x1093E90")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x1093F30", Offset = "0x1093F30", VA = "0x1093F30")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x1093FD0", Offset = "0x1093FD0", VA = "0x1093FD0")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x1094070", Offset = "0x1094070", VA = "0x1094070")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x10940F0", Offset = "0x10940F0", VA = "0x10940F0")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x1094170", Offset = "0x1094170", VA = "0x1094170")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x10941F0", Offset = "0x10941F0", VA = "0x10941F0")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x1094270", Offset = "0x1094270", VA = "0x1094270")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x10942F0", Offset = "0x10942F0", VA = "0x10942F0")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x1094418", Offset = "0x1094418", VA = "0x1094418")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x10944B0", Offset = "0x10944B0", VA = "0x10944B0")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0x1094530", Offset = "0x1094530", VA = "0x1094530")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x1094590", Offset = "0x1094590", VA = "0x1094590")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x10946D8", Offset = "0x10946D8", VA = "0x10946D8")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x1094768", Offset = "0x1094768", VA = "0x1094768")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000C99")]
		[Address(RVA = "0x10948C0", Offset = "0x10948C0", VA = "0x10948C0")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x1094950", Offset = "0x1094950", VA = "0x1094950")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x10949F0", Offset = "0x10949F0", VA = "0x10949F0")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x1094DC0", Offset = "0x1094DC0", VA = "0x1094DC0")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0x1094E40", Offset = "0x1094E40", VA = "0x1094E40")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0x1094ED8", Offset = "0x1094ED8", VA = "0x1094ED8")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x1095738", Offset = "0x1095738", VA = "0x1095738")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x10957B8", Offset = "0x10957B8", VA = "0x10957B8")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x108EB68", Offset = "0x108EB68", VA = "0x108EB68")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8C947C", Offset = "0x8C947C")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x1095850", Offset = "0x1095850", VA = "0x1095850")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x10958D4", Offset = "0x10958D4", VA = "0x10958D4")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x1095954", Offset = "0x1095954", VA = "0x1095954")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x10959D4", Offset = "0x10959D4", VA = "0x10959D4")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x1095A54", Offset = "0x1095A54", VA = "0x1095A54")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x1096418", Offset = "0x1096418", VA = "0x1096418")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x1096498", Offset = "0x1096498", VA = "0x1096498")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x10968D4", Offset = "0x10968D4", VA = "0x10968D4")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x109683C", Offset = "0x109683C", VA = "0x109683C")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x1096948", Offset = "0x1096948", VA = "0x1096948")]
		public CAPI()
		{
		}
	}
}
namespace Obi
{
	[Token(Token = "0x20002B4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C1074", Offset = "0x8C1074")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C1074", Offset = "0x8C1074")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C1074", Offset = "0x8C1074")]
	public class ObiCharacter : MonoBehaviour
	{
		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_MovingTurnSpeed;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_StationaryTurnSpeed;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_JumpPower;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8C41AC", Offset = "0x8C41AC")]
		private float m_GravityMultiplier;

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_RunCycleLegOffset;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float m_MoveSpeedMultiplier;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float m_AnimSpeedMultiplier;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float m_GroundCheckDistance;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody m_Rigidbody;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Animator m_Animator;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_IsGrounded;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float m_OrigGroundCheckDistance;

		[Token(Token = "0x4000D1B")]
		private const float k_Half = 0.5f;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float m_TurnAmount;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float m_ForwardAmount;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 m_GroundNormal;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_CapsuleHeight;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 m_CapsuleCenter;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private CapsuleCollider m_Capsule;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool m_Crouching;

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0xC75B04", Offset = "0xC75B04", VA = "0xC75B04")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0xC75C6C", Offset = "0xC75C6C", VA = "0xC75C6C")]
		public void Move(Vector3 move, bool crouch, bool jump)
		{
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0xC760DC", Offset = "0xC760DC", VA = "0xC760DC")]
		private void ScaleCapsuleForCrouching(bool crouch)
		{
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0xC762C4", Offset = "0xC762C4", VA = "0xC762C4")]
		private void PreventStandingInLowHeadroom()
		{
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0xC7640C", Offset = "0xC7640C", VA = "0xC7640C")]
		private void UpdateAnimator(Vector3 move)
		{
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0xC76038", Offset = "0xC76038", VA = "0xC76038")]
		private void HandleAirborneMovement()
		{
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0xC75F18", Offset = "0xC75F18", VA = "0xC75F18")]
		private void HandleGroundedMovement(bool crouch, bool jump)
		{
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0xC75EA0", Offset = "0xC75EA0", VA = "0xC75EA0")]
		private void ApplyExtraTurnRotation()
		{
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0xC7666C", Offset = "0xC7666C", VA = "0xC7666C")]
		public void OnAnimatorMove()
		{
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0xC75D84", Offset = "0xC75D84", VA = "0xC75D84")]
		private void CheckGroundStatus()
		{
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0xC7670C", Offset = "0xC7670C", VA = "0xC7670C")]
		public ObiCharacter()
		{
		}
	}
	[Token(Token = "0x20002B5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C113C", Offset = "0x8C113C")]
	public class SampleCharacterController : MonoBehaviour
	{
		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ObiCharacter m_Character;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_Cam;

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 m_CamForward;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 m_Move;

		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool m_Jump;

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x98A61C", Offset = "0x98A61C", VA = "0x98A61C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x98A740", Offset = "0x98A740", VA = "0x98A740")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x98A92C", Offset = "0x98A92C", VA = "0x98A92C")]
		public SampleCharacterController()
		{
		}
	}
	[Token(Token = "0x20002B6")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C119C", Offset = "0x8C119C")]
	public class ColorFromPhase : MonoBehaviour
	{
		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ObiActor actor;

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x10998DC", Offset = "0x10998DC", VA = "0x10998DC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0x1099938", Offset = "0x1099938", VA = "0x1099938")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0x1099B00", Offset = "0x1099B00", VA = "0x1099B00")]
		public ColorFromPhase()
		{
		}
	}
	[Token(Token = "0x20002B7")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C11FC", Offset = "0x8C11FC")]
	public class ColorFromVelocity : MonoBehaviour
	{
		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ObiActor actor;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float sensibility;

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0x1099B08", Offset = "0x1099B08", VA = "0x1099B08")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0x1099B64", Offset = "0x1099B64", VA = "0x1099B64")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0x1099B68", Offset = "0x1099B68", VA = "0x1099B68")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0x1099D70", Offset = "0x1099D70", VA = "0x1099D70")]
		public ColorFromVelocity()
		{
		}
	}
	[Token(Token = "0x20002B8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C125C", Offset = "0x8C125C")]
	public class ColorRandomizer : MonoBehaviour
	{
		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ObiActor actor;

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Gradient gradient;

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0x109A36C", Offset = "0x109A36C", VA = "0x109A36C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0x109A48C", Offset = "0x109A48C", VA = "0x109A48C")]
		public ColorRandomizer()
		{
		}
	}
	[Token(Token = "0x20002B9")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C12BC", Offset = "0x8C12BC")]
	public class LookAroundCamera : MonoBehaviour
	{
		[Token(Token = "0x20002BA")]
		public struct CameraShot
		{
			[Token(Token = "0x4000D34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 position;

			[Token(Token = "0x4000D35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Quaternion rotation;

			[Token(Token = "0x4000D36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 up;

			[Token(Token = "0x4000D37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float fieldOfView;

			[Token(Token = "0x6000CCF")]
			[Address(RVA = "0x10AEB54", Offset = "0x10AEB54", VA = "0x10AEB54")]
			public CameraShot(Vector3 position, Quaternion rotation, Vector3 up, float fieldOfView)
			{
			}
		}

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Camera cam;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CameraShot currentShot;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float movementSpeed;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float rotationSpeed;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float translationResponse;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float rotationResponse;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float fovResponse;

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0x11029B0", Offset = "0x11029B0", VA = "0x11029B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0x1102B14", Offset = "0x1102B14", VA = "0x1102B14")]
		private void LookAt(Vector3 position, Vector3 up)
		{
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0x1102B5C", Offset = "0x1102B5C", VA = "0x1102B5C")]
		private void UpdateShot()
		{
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0x1102CF8", Offset = "0x1102CF8", VA = "0x1102CF8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0x1103018", Offset = "0x1103018", VA = "0x1103018")]
		public LookAroundCamera()
		{
		}
	}
	[Token(Token = "0x20002BB")]
	public class MoveAndRotate : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002BC")]
		public class Vector3andSpace
		{
			[Token(Token = "0x4000D3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 value;

			[Token(Token = "0x4000D3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Space space;

			[Token(Token = "0x6000CD3")]
			[Address(RVA = "0x10AEF40", Offset = "0x10AEF40", VA = "0x10AEF40")]
			public Vector3andSpace()
			{
			}
		}

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3andSpace moveUnitsPerSecond;

		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3andSpace rotateDegreesPerSecond;

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool ignoreTimescale;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_LastRealTime;

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0xC6ECF0", Offset = "0xC6ECF0", VA = "0xC6ECF0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0xC6ED18", Offset = "0xC6ED18", VA = "0xC6ED18")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0xC6EDE0", Offset = "0xC6EDE0", VA = "0xC6EDE0")]
		public MoveAndRotate()
		{
		}
	}
}
namespace MTAssets.EasyMeshCombiner
{
	[Token(Token = "0x20002BD")]
	public class CombineInRuntimeDemo : MonoBehaviour
	{
		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject combineButton;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject undoButton;

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RuntimeMeshCombiner runtimeCombiner;

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0x109A4FC", Offset = "0x109A4FC", VA = "0x109A4FC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0x109A594", Offset = "0x109A594", VA = "0x109A594")]
		public void CombineMeshes()
		{
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0x109A5B0", Offset = "0x109A5B0", VA = "0x109A5B0")]
		public void UndoMerge()
		{
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0x109A5CC", Offset = "0x109A5CC", VA = "0x109A5CC")]
		public CombineInRuntimeDemo()
		{
		}
	}
	[Token(Token = "0x20002BE")]
	public class EnviromentMovement : MonoBehaviour
	{
		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 nextPosition;

		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Transform thisTransform;

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 pos1;

		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 pos2;

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0x1175324", Offset = "0x1175324", VA = "0x1175324")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0x11753A4", Offset = "0x11753A4", VA = "0x11753A4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0x11754F0", Offset = "0x11754F0", VA = "0x11754F0")]
		public EnviromentMovement()
		{
		}
	}
	[Token(Token = "0x20002BF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C131C", Offset = "0x8C131C")]
	public class MTAssetsEditorUi : MonoBehaviour
	{
		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0xC6B678", Offset = "0xC6B678", VA = "0xC6B678")]
		public MTAssetsEditorUi()
		{
		}
	}
	[Token(Token = "0x20002C0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C1354", Offset = "0x8C1354")]
	public class MTAssetsMathematics : MonoBehaviour
	{
		[Token(Token = "0x6000CDC")]
		public static List<T> RandomizeThisList<T>(List<T> list)
		{
			return null;
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0xC6B680", Offset = "0xC6B680", VA = "0xC6B680")]
		public static Vector3 GetHalfPositionBetweenTwoPoints(Vector3 pointA, Vector3 pointB)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0xC6B6F0", Offset = "0xC6B6F0", VA = "0xC6B6F0")]
		public MTAssetsMathematics()
		{
		}
	}
	[Token(Token = "0x20002C1")]
	public static class ListMethodsExtensions
	{
		[Token(Token = "0x6000CDF")]
		public static void RemoveAllNullItems<T>(this List<T> list)
		{
		}
	}
	[Token(Token = "0x20002C2")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C139C", Offset = "0x8C139C")]
	public class CombinedMeshesManager : MonoBehaviour
	{
		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0x109A5D4", Offset = "0x109A5D4", VA = "0x109A5D4")]
		public CombinedMeshesManager()
		{
		}
	}
	[Token(Token = "0x20002C3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C13D4", Offset = "0x8C13D4")]
	public class RuntimeMeshCombiner : MonoBehaviour
	{
		[Token(Token = "0x20002C4")]
		private class GameObjectWithMesh
		{
			[Token(Token = "0x4000D58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject gameObject;

			[Token(Token = "0x4000D59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MeshFilter meshFilter;

			[Token(Token = "0x4000D5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MeshRenderer meshRenderer;

			[Token(Token = "0x6000CE8")]
			[Address(RVA = "0xEA1818", Offset = "0xEA1818", VA = "0xEA1818")]
			public GameObjectWithMesh(GameObject gameObject, MeshFilter meshFilter, MeshRenderer meshRenderer)
			{
			}
		}

		[Token(Token = "0x20002C5")]
		private class OriginalGameObjectWithMesh
		{
			[Token(Token = "0x4000D5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject gameObject;

			[Token(Token = "0x4000D5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool originalGoState;

			[Token(Token = "0x4000D5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MeshRenderer meshRenderer;

			[Token(Token = "0x4000D5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool originalMrState;

			[Token(Token = "0x6000CE9")]
			[Address(RVA = "0xEA187C", Offset = "0xEA187C", VA = "0xEA187C")]
			public OriginalGameObjectWithMesh(GameObject gameObject, bool originalGoState, MeshRenderer meshRenderer, bool originalMrState)
			{
			}
		}

		[Token(Token = "0x20002C6")]
		private class SubMeshToCombine
		{
			[Token(Token = "0x4000D5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform transform;

			[Token(Token = "0x4000D60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public MeshFilter meshFilter;

			[Token(Token = "0x4000D61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MeshRenderer meshRenderer;

			[Token(Token = "0x4000D62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int subMeshIndex;

			[Token(Token = "0x6000CEA")]
			[Address(RVA = "0xEA18F0", Offset = "0xEA18F0", VA = "0xEA18F0")]
			public SubMeshToCombine(Transform transform, MeshFilter meshFilter, MeshRenderer meshRenderer, int subMeshIndex)
			{
			}
		}

		[Token(Token = "0x20002C7")]
		public enum CombineOnStart
		{
			[Token(Token = "0x4000D64")]
			Disabled,
			[Token(Token = "0x4000D65")]
			OnStart,
			[Token(Token = "0x4000D66")]
			OnAwake
		}

		[Token(Token = "0x20002C8")]
		public enum AfterMerge
		{
			[Token(Token = "0x4000D68")]
			DisableOriginalMeshes,
			[Token(Token = "0x4000D69")]
			DeactiveOriginalGameObjects,
			[Token(Token = "0x4000D6A")]
			DoNothing
		}

		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int MAX_VERTICES_FOR_16BITS_MESH;

		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 originalPosition;

		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 originalEulerAngles;

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 originalScale;

		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<OriginalGameObjectWithMesh> originalGameObjectsWithMeshToRestore;

		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool targetMeshesMerged;

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[HideInInspector]
		public AfterMerge afterMerge;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public bool addMeshColliderAfter;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		public CombineOnStart combineMeshesAtStartUp;

		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public bool combineInChildren;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		[HideInInspector]
		public bool combineInactives;

		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		[HideInInspector]
		public bool recalculateNormals;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
		[HideInInspector]
		public bool recalculateTangents;

		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		public bool optimizeResultingMesh;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public List<GameObject> targetMeshes;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public bool showDebugLogs;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		[HideInInspector]
		public bool garbageCollectorAfterUndo;

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UnityEvent onDoneMerge;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public UnityEvent onDoneUnmerge;

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0x987260", Offset = "0x987260", VA = "0x987260")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x98874C", Offset = "0x98874C", VA = "0x98874C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x98883C", Offset = "0x98883C", VA = "0x98883C")]
		private GameObjectWithMesh[] GetValidatedTargetGameObjects()
		{
			return null;
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x987350", Offset = "0x987350", VA = "0x987350")]
		public bool CombineMeshes()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x989B04", Offset = "0x989B04", VA = "0x989B04")]
		public bool UndoMerge()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x98A0A4", Offset = "0x98A0A4", VA = "0x98A0A4")]
		public bool isTargetMeshesMerged()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x98A0AC", Offset = "0x98A0AC", VA = "0x98A0AC")]
		public RuntimeMeshCombiner()
		{
		}
	}
}
namespace UnityEngine.UI.Extensions
{
	[Token(Token = "0x20002C9")]
	public class BezierPath
	{
		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int SegmentsPerCurve;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float MINIMUM_SQR_DISTANCE;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float DIVISION_THRESHOLD;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<Vector2> controlPoints;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int curveCount;

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0x108A580", Offset = "0x108A580", VA = "0x108A580")]
		public BezierPath()
		{
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0x108A618", Offset = "0x108A618", VA = "0x108A618")]
		public void SetControlPoints(List<Vector2> newControlPoints)
		{
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x108A6DC", Offset = "0x108A6DC", VA = "0x108A6DC")]
		public void SetControlPoints(Vector2[] newControlPoints)
		{
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0x108A7A0", Offset = "0x108A7A0", VA = "0x108A7A0")]
		public List<Vector2> GetControlPoints()
		{
			return null;
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x108A7A8", Offset = "0x108A7A8", VA = "0x108A7A8")]
		public void Interpolate(List<Vector2> segmentPoints, float scale)
		{
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x108AAC4", Offset = "0x108AAC4", VA = "0x108AAC4")]
		public void SamplePoints(List<Vector2> sourcePoints, float minSqrDistance, float maxSqrDistance, float scale)
		{
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x108AE34", Offset = "0x108AE34", VA = "0x108AE34")]
		public Vector2 CalculateBezierPoint(int curveIndex, float t)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x108B000", Offset = "0x108B000", VA = "0x108B000")]
		public List<Vector2> GetDrawingPoints0()
		{
			return null;
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0x108B124", Offset = "0x108B124", VA = "0x108B124")]
		public List<Vector2> GetDrawingPoints1()
		{
			return null;
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0x108B398", Offset = "0x108B398", VA = "0x108B398")]
		public List<Vector2> GetDrawingPoints2()
		{
			return null;
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x108B4A0", Offset = "0x108B4A0", VA = "0x108B4A0")]
		private List<Vector2> FindDrawingPoints(int curveIndex)
		{
			return null;
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x108B5BC", Offset = "0x108B5BC", VA = "0x108B5BC")]
		private int FindDrawingPoints(int curveIndex, float t0, float t1, List<Vector2> pointList, int insertionIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x108AF94", Offset = "0x108AF94", VA = "0x108AF94")]
		private Vector2 CalculateBezierPoint(float t, Vector2 p0, Vector2 p1, Vector2 p2, Vector2 p3)
		{
			return default(Vector2);
		}
	}
	[Serializable]
	[Token(Token = "0x20002CA")]
	public class CableCurve
	{
		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Vector2 m_start;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Vector2 m_end;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_slack;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int m_steps;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool m_regen;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector2[] emptyCurve;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Vector2[] points;

		[Token(Token = "0x17000168")]
		public bool regenPoints
		{
			[Token(Token = "0x6000CF8")]
			[Address(RVA = "0x1096A20", Offset = "0x1096A20", VA = "0x1096A20")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000CF9")]
			[Address(RVA = "0x1096A28", Offset = "0x1096A28", VA = "0x1096A28")]
			set
			{
			}
		}

		[Token(Token = "0x17000169")]
		public Vector2 start
		{
			[Token(Token = "0x6000CFA")]
			[Address(RVA = "0x1096A34", Offset = "0x1096A34", VA = "0x1096A34")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000CFB")]
			[Address(RVA = "0x1096A3C", Offset = "0x1096A3C", VA = "0x1096A3C")]
			set
			{
			}
		}

		[Token(Token = "0x1700016A")]
		public Vector2 end
		{
			[Token(Token = "0x6000CFC")]
			[Address(RVA = "0x1096A74", Offset = "0x1096A74", VA = "0x1096A74")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6000CFD")]
			[Address(RVA = "0x1096A7C", Offset = "0x1096A7C", VA = "0x1096A7C")]
			set
			{
			}
		}

		[Token(Token = "0x1700016B")]
		public float slack
		{
			[Token(Token = "0x6000CFE")]
			[Address(RVA = "0x1096AB4", Offset = "0x1096AB4", VA = "0x1096AB4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000CFF")]
			[Address(RVA = "0x1096ABC", Offset = "0x1096ABC", VA = "0x1096ABC")]
			set
			{
			}
		}

		[Token(Token = "0x1700016C")]
		public int steps
		{
			[Token(Token = "0x6000D00")]
			[Address(RVA = "0x1096B00", Offset = "0x1096B00", VA = "0x1096B00")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D01")]
			[Address(RVA = "0x1096B08", Offset = "0x1096B08", VA = "0x1096B08")]
			set
			{
			}
		}

		[Token(Token = "0x1700016D")]
		public Vector2 midPoint
		{
			[Token(Token = "0x6000D02")]
			[Address(RVA = "0x1096B48", Offset = "0x1096B48", VA = "0x1096B48")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x1096C04", Offset = "0x1096C04", VA = "0x1096C04")]
		public CableCurve()
		{
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x1096CD0", Offset = "0x1096CD0", VA = "0x1096CD0")]
		public CableCurve(Vector2[] inputPoints)
		{
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x1096D50", Offset = "0x1096D50", VA = "0x1096D50")]
		public CableCurve(CableCurve v)
		{
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x1096DC0", Offset = "0x1096DC0", VA = "0x1096DC0")]
		public Vector2[] Points()
		{
			return null;
		}
	}
	[Token(Token = "0x20002CB")]
	internal static class SetPropertyUtility
	{
		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x98BD48", Offset = "0x98BD48", VA = "0x98BD48")]
		public static bool SetColor(ref Color currentValue, Color newValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D09")]
		public static bool SetStruct<T>(ref T currentValue, T newValue) where T : struct
		{
			return default(bool);
		}

		[Token(Token = "0x6000D0A")]
		public static bool SetClass<T>(ref T currentValue, T newValue) where T : class
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002CC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8C140C", Offset = "0x8C140C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8C140C", Offset = "0x8C140C")]
	public class UILineRenderer : UIPrimitiveBase
	{
		[Token(Token = "0x20002CD")]
		private enum SegmentType
		{
			[Token(Token = "0x4000D8F")]
			Start,
			[Token(Token = "0x4000D90")]
			Middle,
			[Token(Token = "0x4000D91")]
			End,
			[Token(Token = "0x4000D92")]
			Full
		}

		[Token(Token = "0x20002CE")]
		public enum JoinType
		{
			[Token(Token = "0x4000D94")]
			Bevel,
			[Token(Token = "0x4000D95")]
			Miter
		}

		[Token(Token = "0x20002CF")]
		public enum BezierType
		{
			[Token(Token = "0x4000D97")]
			None,
			[Token(Token = "0x4000D98")]
			Quick,
			[Token(Token = "0x4000D99")]
			Basic,
			[Token(Token = "0x4000D9A")]
			Improved,
			[Token(Token = "0x4000D9B")]
			Catenary
		}

		[Token(Token = "0x4000D77")]
		private const float MIN_MITER_JOIN = (float)Math.PI / 12f;

		[Token(Token = "0x4000D78")]
		private const float MIN_BEVEL_NICE_JOIN = (float)Math.PI / 6f;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector2 UV_TOP_LEFT;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Vector2 UV_BOTTOM_LEFT;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Vector2 UV_TOP_CENTER_LEFT;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Vector2 UV_TOP_CENTER_RIGHT;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Vector2 UV_BOTTOM_CENTER_LEFT;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Vector2 UV_BOTTOM_CENTER_RIGHT;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Vector2 UV_TOP_RIGHT;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Vector2 UV_BOTTOM_RIGHT;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static Vector2[] startUvs;

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static Vector2[] middleUvs;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static Vector2[] endUvs;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static Vector2[] fullUvs;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C433C", Offset = "0x8C433C")]
		internal Vector2[] m_points;

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C4388", Offset = "0x8C4388")]
		[SerializeField]
		internal float lineThickness;

		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C43D4", Offset = "0x8C43D4")]
		internal bool relativeSize;

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFD")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C4420", Offset = "0x8C4420")]
		internal bool lineList;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFE")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C446C", Offset = "0x8C446C")]
		internal bool lineCaps;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C44B8", Offset = "0x8C44B8")]
		[SerializeField]
		internal int bezierSegmentsPerCurve;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C4504", Offset = "0x8C4504")]
		public JoinType LineJoins;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8C453C", Offset = "0x8C453C")]
		public BezierType BezierMode;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[HideInInspector]
		public bool drivenExternally;

		[Token(Token = "0x1700016E")]
		public float LineThickness
		{
			[Token(Token = "0x6000D0B")]
			[Address(RVA = "0x115AB1C", Offset = "0x115AB1C", VA = "0x115AB1C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D0C")]
			[Address(RVA = "0x115AB24", Offset = "0x115AB24", VA = "0x115AB24")]
			set
			{
			}
		}

		[Token(Token = "0x1700016F")]
		public bool RelativeSize
		{
			[Token(Token = "0x6000D0D")]
			[Address(RVA = "0x115AB38", Offset = "0x115AB38", VA = "0x115AB38")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D0E")]
			[Address(RVA = "0x115AB40", Offset = "0x115AB40", VA = "0x115AB40")]
			set
			{
			}
		}

		[Token(Token = "0x17000170")]
		public bool LineList
		{
			[Token(Token = "0x6000D0F")]
			[Address(RVA = "0x115AB58", Offset = "0x115AB58", VA = "0x115AB58")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D10")]
			[Address(RVA = "0x115AB60", Offset = "0x115AB60", VA = "0x115AB60")]
			set
			{
			}
		}

		[Token(Token = "0x17000171")]
		public bool LineCaps
		{
			[Token(Token = "0x6000D11")]
			[Address(RVA = "0x115AB78", Offset = "0x115AB78", VA = "0x115AB78")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D12")]
			[Address(RVA = "0x115AB80", Offset = "0x115AB80", VA = "0x115AB80")]
			set
			{
			}
		}

		[Token(Token = "0x17000172")]
		public int BezierSegmentsPerCurve
		{
			[Token(Token = "0x6000D13")]
			[Address(RVA = "0x115AB98", Offset = "0x115AB98", VA = "0x115AB98")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D14")]
			[Address(RVA = "0x115ABA0", Offset = "0x115ABA0", VA = "0x115ABA0")]
			set
			{
			}
		}

		[Token(Token = "0x17000173")]
		public Vector2[] Points
		{
			[Token(Token = "0x6000D15")]
			[Address(RVA = "0x115ABA8", Offset = "0x115ABA8", VA = "0x115ABA8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D16")]
			[Address(RVA = "0x115ABB0", Offset = "0x115ABB0", VA = "0x115ABB0")]
			set
			{
			}
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0x115ABFC", Offset = "0x115ABFC", VA = "0x115ABFC", Slot = "44")]
		protected override void OnPopulateMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0x115BE48", Offset = "0x115BE48", VA = "0x115BE48")]
		private UIVertex[] CreateLineCap(Vector2 start, Vector2 end, SegmentType type)
		{
			return null;
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0x115BFA0", Offset = "0x115BFA0", VA = "0x115BFA0")]
		private UIVertex[] CreateLineSegment(Vector2 start, Vector2 end, SegmentType type)
		{
			return null;
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x115C42C", Offset = "0x115C42C", VA = "0x115C42C", Slot = "75")]
		protected override void GeneratedUVs()
		{
		}

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0x115C890", Offset = "0x115C890", VA = "0x115C890", Slot = "76")]
		protected override void ResolutionToNativeSize(float distance)
		{
		}

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0x115CA5C", Offset = "0x115CA5C", VA = "0x115CA5C")]
		public UILineRenderer()
		{
		}
	}
	[Token(Token = "0x20002D0")]
	public enum ResolutionMode
	{
		[Token(Token = "0x4000D9D")]
		None,
		[Token(Token = "0x4000D9E")]
		PerSegment,
		[Token(Token = "0x4000D9F")]
		PerLine
	}
	[Token(Token = "0x20002D1")]
	public class UIPrimitiveBase : MaskableGraphic, ILayoutElement, ICanvasRaycastFilter
	{
		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static Material s_ETC1DefaultUI;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private Sprite m_Sprite;

		[NonSerialized]
		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Sprite m_OverrideSprite;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal float m_EventAlphaThreshold;

		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private ResolutionMode m_improveResolution;

		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[SerializeField]
		protected float m_Resolution;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[SerializeField]
		private bool m_useNativeSize;

		[Token(Token = "0x17000174")]
		public Sprite sprite
		{
			[Token(Token = "0x6000D1D")]
			[Address(RVA = "0x115D4F0", Offset = "0x115D4F0", VA = "0x115D4F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D1E")]
			[Address(RVA = "0x115D4F8", Offset = "0x115D4F8", VA = "0x115D4F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000175")]
		public Sprite overrideSprite
		{
			[Token(Token = "0x6000D1F")]
			[Address(RVA = "0x115D580", Offset = "0x115D580", VA = "0x115D580")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D20")]
			[Address(RVA = "0x115D584", Offset = "0x115D584", VA = "0x115D584")]
			set
			{
			}
		}

		[Token(Token = "0x17000176")]
		protected Sprite activeSprite
		{
			[Token(Token = "0x6000D21")]
			[Address(RVA = "0x115C80C", Offset = "0x115C80C", VA = "0x115C80C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000177")]
		public float eventAlphaThreshold
		{
			[Token(Token = "0x6000D22")]
			[Address(RVA = "0x115D60C", Offset = "0x115D60C", VA = "0x115D60C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D23")]
			[Address(RVA = "0x115D614", Offset = "0x115D614", VA = "0x115D614")]
			set
			{
			}
		}

		[Token(Token = "0x17000178")]
		public ResolutionMode ImproveResolution
		{
			[Token(Token = "0x6000D24")]
			[Address(RVA = "0x115D61C", Offset = "0x115D61C", VA = "0x115D61C")]
			get
			{
				return default(ResolutionMode);
			}
			[Token(Token = "0x6000D25")]
			[Address(RVA = "0x115D624", Offset = "0x115D624", VA = "0x115D624")]
			set
			{
			}
		}

		[Token(Token = "0x17000179")]
		public float Resoloution
		{
			[Token(Token = "0x6000D26")]
			[Address(RVA = "0x115D638", Offset = "0x115D638", VA = "0x115D638")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D27")]
			[Address(RVA = "0x115D640", Offset = "0x115D640", VA = "0x115D640")]
			set
			{
			}
		}

		[Token(Token = "0x1700017A")]
		public bool UseNativeSize
		{
			[Token(Token = "0x6000D28")]
			[Address(RVA = "0x115D654", Offset = "0x115D654", VA = "0x115D654")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D29")]
			[Address(RVA = "0x115D65C", Offset = "0x115D65C", VA = "0x115D65C")]
			set
			{
			}
		}

		[Token(Token = "0x1700017B")]
		public static Material defaultETC1GraphicMaterial
		{
			[Token(Token = "0x6000D2B")]
			[Address(RVA = "0x115D674", Offset = "0x115D674", VA = "0x115D674")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017C")]
		public override Texture mainTexture
		{
			[Token(Token = "0x6000D2C")]
			[Address(RVA = "0x115D77C", Offset = "0x115D77C", VA = "0x115D77C", Slot = "35")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700017D")]
		public bool hasBorder
		{
			[Token(Token = "0x6000D2D")]
			[Address(RVA = "0x115D920", Offset = "0x115D920", VA = "0x115D920")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700017E")]
		public float pixelsPerUnit
		{
			[Token(Token = "0x6000D2E")]
			[Address(RVA = "0x115C948", Offset = "0x115C948", VA = "0x115C948")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700017F")]
		public override Material material
		{
			[Token(Token = "0x6000D2F")]
			[Address(RVA = "0x115D9E8", Offset = "0x115D9E8", VA = "0x115D9E8", Slot = "32")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D30")]
			[Address(RVA = "0x115DB48", Offset = "0x115DB48", VA = "0x115DB48", Slot = "33")]
			set
			{
			}
		}

		[Token(Token = "0x17000180")]
		public virtual float minWidth
		{
			[Token(Token = "0x6000D37")]
			[Address(RVA = "0x115DB60", Offset = "0x115DB60", VA = "0x115DB60", Slot = "79")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000181")]
		public virtual float preferredWidth
		{
			[Token(Token = "0x6000D38")]
			[Address(RVA = "0x115DB68", Offset = "0x115DB68", VA = "0x115DB68", Slot = "80")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000182")]
		public virtual float flexibleWidth
		{
			[Token(Token = "0x6000D39")]
			[Address(RVA = "0x115DC3C", Offset = "0x115DC3C", VA = "0x115DC3C", Slot = "81")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000183")]
		public virtual float minHeight
		{
			[Token(Token = "0x6000D3A")]
			[Address(RVA = "0x115DC44", Offset = "0x115DC44", VA = "0x115DC44", Slot = "82")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000184")]
		public virtual float preferredHeight
		{
			[Token(Token = "0x6000D3B")]
			[Address(RVA = "0x115DC4C", Offset = "0x115DC4C", VA = "0x115DC4C", Slot = "83")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000185")]
		public virtual float flexibleHeight
		{
			[Token(Token = "0x6000D3C")]
			[Address(RVA = "0x115DD20", Offset = "0x115DD20", VA = "0x115DD20", Slot = "84")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000186")]
		public virtual int layoutPriority
		{
			[Token(Token = "0x6000D3D")]
			[Address(RVA = "0x115DD28", Offset = "0x115DD28", VA = "0x115DD28", Slot = "85")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x115CAE0", Offset = "0x115CAE0", VA = "0x115CAE0")]
		protected UIPrimitiveBase()
		{
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x115C218", Offset = "0x115C218", VA = "0x115C218")]
		protected UIVertex[] SetVbo(Vector2[] vertices, Vector2[] uvs)
		{
			return null;
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x115BAA0", Offset = "0x115BAA0", VA = "0x115BAA0")]
		protected Vector2[] IncreaseResolution(Vector2[] input)
		{
			return null;
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x115DB50", Offset = "0x115DB50", VA = "0x115DB50", Slot = "75")]
		protected virtual void GeneratedUVs()
		{
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x115DB54", Offset = "0x115DB54", VA = "0x115DB54", Slot = "76")]
		protected virtual void ResolutionToNativeSize(float distance)
		{
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x115DB58", Offset = "0x115DB58", VA = "0x115DB58", Slot = "77")]
		public virtual void CalculateLayoutInputHorizontal()
		{
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x115DB5C", Offset = "0x115DB5C", VA = "0x115DB5C", Slot = "78")]
		public virtual void CalculateLayoutInputVertical()
		{
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x115DD30", Offset = "0x115DD30", VA = "0x115DD30", Slot = "86")]
		public virtual bool IsRaycastLocationValid(Vector2 screenPoint, Camera eventCamera)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x115E134", Offset = "0x115E134", VA = "0x115E134")]
		private Vector2 MapCoordinate(Vector2 local, Rect rect)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0x115E1A8", Offset = "0x115E1A8", VA = "0x115E1A8")]
		private Vector4 GetAdjustedBorders(Vector4 border, Rect rect)
		{
			return default(Vector4);
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x115E2C4", Offset = "0x115E2C4", VA = "0x115E2C4", Slot = "5")]
		protected override void OnEnable()
		{
		}
	}
}
namespace BayatGames.Serialization.Formatters.Json
{
	[Token(Token = "0x20002D2")]
	public static class JsonExtensions
	{
		[Token(Token = "0x6000D43")]
		[Address(RVA = "0x10FB980", Offset = "0x10FB980", VA = "0x10FB980")]
		public static string ToJson(this object value)
		{
			return null;
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x10FB9E8", Offset = "0x10FB9E8", VA = "0x10FB9E8")]
		public static void AppendUntilStringEnd(this StringBuilder builder, string json, ref int index)
		{
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x10FBA90", Offset = "0x10FBA90", VA = "0x10FBA90")]
		public static string RemoveWhitespaceJson(this string json)
		{
			return null;
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x10FBC04", Offset = "0x10FBC04", VA = "0x10FBC04")]
		public static string[] SplitJson(this string json)
		{
			return null;
		}
	}
	[Token(Token = "0x20002D3")]
	public class JsonFormatter
	{
		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected ISurrogateSelector m_SurrogateSelector;

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected StreamingContext m_Context;

		[Token(Token = "0x17000187")]
		public virtual ISurrogateSelector surrogateSelector
		{
			[Token(Token = "0x6000D47")]
			[Address(RVA = "0x10FBE84", Offset = "0x10FBE84", VA = "0x10FBE84", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D48")]
			[Address(RVA = "0x10FBE8C", Offset = "0x10FBE8C", VA = "0x10FBE8C", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x17000188")]
		public virtual StreamingContext context
		{
			[Token(Token = "0x6000D49")]
			[Address(RVA = "0x10FBE94", Offset = "0x10FBE94", VA = "0x10FBE94", Slot = "6")]
			get
			{
				return default(StreamingContext);
			}
			[Token(Token = "0x6000D4A")]
			[Address(RVA = "0x10FBEA0", Offset = "0x10FBEA0", VA = "0x10FBEA0", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0x10FBEB0", Offset = "0x10FBEB0", VA = "0x10FBEB0")]
		public JsonFormatter()
		{
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0x10FBEF8", Offset = "0x10FBEF8", VA = "0x10FBEF8")]
		public JsonFormatter(ISurrogateSelector selector, StreamingContext context)
		{
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0x10FBF50", Offset = "0x10FBF50", VA = "0x10FBF50")]
		public string Serialize(object value)
		{
			return null;
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0x10FC168", Offset = "0x10FC168", VA = "0x10FC168")]
		public void Serialize(Stream output, object value)
		{
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x10FBFD8", Offset = "0x10FBFD8", VA = "0x10FBFD8")]
		public void Serialize(TextWriter output, object value)
		{
		}

		[Token(Token = "0x6000D50")]
		public T Deserialize<T>(string input)
		{
			return (T)null;
		}

		[Token(Token = "0x6000D51")]
		public T Deserialize<T>(Stream input)
		{
			return (T)null;
		}

		[Token(Token = "0x6000D52")]
		public T Deserialize<T>(TextReader input)
		{
			return (T)null;
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x10FC21C", Offset = "0x10FC21C", VA = "0x10FC21C")]
		public object Deserialize(string input, Type type)
		{
			return null;
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x10FC434", Offset = "0x10FC434", VA = "0x10FC434")]
		public object Deserialize(Stream input, Type type)
		{
			return null;
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x10FC294", Offset = "0x10FC294", VA = "0x10FC294")]
		public object Deserialize(TextReader input, Type type)
		{
			return null;
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x10FB984", Offset = "0x10FB984", VA = "0x10FB984")]
		public static string SerializeObject(object value)
		{
			return null;
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x10FC4E8", Offset = "0x10FC4E8", VA = "0x10FC4E8")]
		public static object DeserializeObject(string json, Type type)
		{
			return null;
		}
	}
	[Token(Token = "0x20002D4")]
	public abstract class JsonReader : IDisposable
	{
		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected ISurrogateSelector m_SurrogateSelector;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected StreamingContext m_Context;

		[Token(Token = "0x17000189")]
		public virtual ISurrogateSelector surrogateSelector
		{
			[Token(Token = "0x6000D58")]
			[Address(RVA = "0x10FC55C", Offset = "0x10FC55C", VA = "0x10FC55C", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D59")]
			[Address(RVA = "0x10FC564", Offset = "0x10FC564", VA = "0x10FC564", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x1700018A")]
		public virtual StreamingContext context
		{
			[Token(Token = "0x6000D5A")]
			[Address(RVA = "0x10FC56C", Offset = "0x10FC56C", VA = "0x10FC56C", Slot = "7")]
			get
			{
				return default(StreamingContext);
			}
			[Token(Token = "0x6000D5B")]
			[Address(RVA = "0x10FC578", Offset = "0x10FC578", VA = "0x10FC578", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x10FC588", Offset = "0x10FC588", VA = "0x10FC588")]
		public JsonReader(ISurrogateSelector selector, StreamingContext context)
		{
		}

		[Token(Token = "0x6000D5D")]
		public abstract object Read(Type type);

		[Token(Token = "0x6000D5E")]
		public abstract void Dispose();
	}
	[Token(Token = "0x20002D5")]
	public class JsonTextReader : JsonReader
	{
		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected TextReader m_Reader;

		[Token(Token = "0x1700018B")]
		public virtual TextReader reader
		{
			[Token(Token = "0x6000D5F")]
			[Address(RVA = "0x10FC5E0", Offset = "0x10FC5E0", VA = "0x10FC5E0", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x10FC5E8", Offset = "0x10FC5E8", VA = "0x10FC5E8")]
		public JsonTextReader(TextReader reader)
		{
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x10FC4AC", Offset = "0x10FC4AC", VA = "0x10FC4AC")]
		public JsonTextReader(TextReader reader, ISurrogateSelector selector, StreamingContext context)
		{
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x10FC644", Offset = "0x10FC644", VA = "0x10FC644", Slot = "9")]
		public override object Read(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000D63")]
		protected virtual T Read<T>(string json)
		{
			return (T)null;
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x10FC698", Offset = "0x10FC698", VA = "0x10FC698", Slot = "13")]
		protected virtual object Read(Type type, string json)
		{
			return null;
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x10FD5D4", Offset = "0x10FD5D4", VA = "0x10FD5D4", Slot = "14")]
		protected virtual object ReadObject(Type type, string json)
		{
			return null;
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x10FDA08", Offset = "0x10FDA08", VA = "0x10FDA08", Slot = "10")]
		public override void Dispose()
		{
		}
	}
	[Token(Token = "0x20002D6")]
	public class JsonTextWriter : JsonWriter
	{
		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected TextWriter m_Writer;

		[Token(Token = "0x1700018C")]
		public virtual TextWriter writer
		{
			[Token(Token = "0x6000D67")]
			[Address(RVA = "0x10FDA1C", Offset = "0x10FDA1C", VA = "0x10FDA1C", Slot = "11")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x10FDA24", Offset = "0x10FDA24", VA = "0x10FDA24")]
		public JsonTextWriter(TextWriter writer)
		{
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x10FC1E0", Offset = "0x10FC1E0", VA = "0x10FC1E0")]
		public JsonTextWriter(TextWriter writer, ISurrogateSelector selector, StreamingContext context)
		{
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x10FDAD8", Offset = "0x10FDAD8", VA = "0x10FDAD8", Slot = "9")]
		public override void Write(object value)
		{
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x10FEBA0", Offset = "0x10FEBA0", VA = "0x10FEBA0", Slot = "12")]
		protected virtual void WriteObject(object value, Type type)
		{
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x10FEF5C", Offset = "0x10FEF5C", VA = "0x10FEF5C", Slot = "13")]
		protected virtual void WriteSerializationInfo(SerializationInfo info)
		{
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x10FF0D8", Offset = "0x10FF0D8", VA = "0x10FF0D8", Slot = "10")]
		public override void Dispose()
		{
		}
	}
	[Token(Token = "0x20002D7")]
	public abstract class JsonWriter : IDisposable
	{
		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected ISurrogateSelector m_SurrogateSelector;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected StreamingContext m_Context;

		[Token(Token = "0x1700018D")]
		public virtual ISurrogateSelector surrogateSelector
		{
			[Token(Token = "0x6000D6E")]
			[Address(RVA = "0x10FF0EC", Offset = "0x10FF0EC", VA = "0x10FF0EC", Slot = "5")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D6F")]
			[Address(RVA = "0x10FF0F4", Offset = "0x10FF0F4", VA = "0x10FF0F4", Slot = "6")]
			set
			{
			}
		}

		[Token(Token = "0x1700018E")]
		public virtual StreamingContext context
		{
			[Token(Token = "0x6000D70")]
			[Address(RVA = "0x10FF0FC", Offset = "0x10FF0FC", VA = "0x10FF0FC", Slot = "7")]
			get
			{
				return default(StreamingContext);
			}
			[Token(Token = "0x6000D71")]
			[Address(RVA = "0x10FF108", Offset = "0x10FF108", VA = "0x10FF108", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x10FDA80", Offset = "0x10FDA80", VA = "0x10FDA80")]
		public JsonWriter(ISurrogateSelector selector, StreamingContext context)
		{
		}

		[Token(Token = "0x6000D73")]
		public abstract void Write(object value);

		[Token(Token = "0x6000D74")]
		public abstract void Dispose();
	}
}
namespace BayatGames.Serialization.Formatters.Json.Examples
{
	[Token(Token = "0x20002D8")]
	public class Example01 : MonoBehaviour
	{
		[Token(Token = "0x20002D9")]
		public struct Person
		{
			[Token(Token = "0x4000DB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string firstName;

			[Token(Token = "0x4000DB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string lastName;
		}

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected InputField m_FirstNameInput;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected InputField m_LastNameInput;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected InputField m_JsonInput;

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x1178384", Offset = "0x1178384", VA = "0x1178384")]
		public void Serialize()
		{
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x1178440", Offset = "0x1178440", VA = "0x1178440")]
		public void Deserialize()
		{
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x1178548", Offset = "0x1178548", VA = "0x1178548")]
		public Example01()
		{
		}
	}
	[Token(Token = "0x20002DA")]
	public class Example02 : MonoBehaviour
	{
		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected InputField m_TypeInput;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected InputField m_JsonInput;

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x1178550", Offset = "0x1178550", VA = "0x1178550")]
		public void Deserialize()
		{
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x117864C", Offset = "0x117864C", VA = "0x117864C")]
		public Example02()
		{
		}
	}
}
