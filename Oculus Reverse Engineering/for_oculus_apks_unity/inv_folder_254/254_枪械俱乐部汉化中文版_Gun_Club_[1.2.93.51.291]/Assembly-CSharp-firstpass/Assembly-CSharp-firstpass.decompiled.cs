using System;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Diagnostics;
using System.Linq;
using System.Net;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Runtime.Serialization;
using System.Text;
using CodeStage.AntiCheat.ObscuredTypes;
using GunClub;
using Il2CppDummyDll;
using MiniLocale.Serialization;
using Sony.NP;
using Sony.PS4.SaveData;
using UnityEngine;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.UI;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x768A78", Offset = "0x768A78")]
internal sealed class <>f__AnonymousType0<<rangeResultLadder>j__TPar, <result>j__TPar>
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x769818", Offset = "0x769818")]
	private readonly <rangeResultLadder>j__TPar <rangeResultLadder>i__Field;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x76982C", Offset = "0x76982C")]
	private readonly <result>j__TPar <result>i__Field;

	[Token(Token = "0x17000001")]
	public <rangeResultLadder>j__TPar rangeResultLadder
	{
		[Token(Token = "0x6000001")]
		get
		{
			return (<rangeResultLadder>j__TPar)null;
		}
	}

	[Token(Token = "0x17000002")]
	public <result>j__TPar result
	{
		[Token(Token = "0x6000002")]
		get
		{
			return (<result>j__TPar)null;
		}
	}

	[Token(Token = "0x6000003")]
	[DebuggerHidden]
	public <>f__AnonymousType0(<rangeResultLadder>j__TPar rangeResultLadder, <result>j__TPar result)
	{
	}

	[Token(Token = "0x6000004")]
	[DebuggerHidden]
	public override bool Equals(object value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000005")]
	[DebuggerHidden]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000006")]
	[DebuggerHidden]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000003")]
public class AddInputDelegate : MonoBehaviour
{
	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool changeText;

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x1AADDD8", Offset = "0x1AADDD8", VA = "0x1AADDD8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x1AADDDC", Offset = "0x1AADDDC", VA = "0x1AADDDC")]
	private void AssignDelegate()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0x1AADF0C", Offset = "0x1AADF0C", VA = "0x1AADF0C")]
	public AddInputDelegate()
	{
	}
}
[Token(Token = "0x2000004")]
public class AddUIRadioBtnInputDelegate : MonoBehaviour
{
	[Token(Token = "0x600000A")]
	[Address(RVA = "0x1AADF1C", Offset = "0x1AADF1C", VA = "0x1AADF1C")]
	private void Start()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0x1AADF20", Offset = "0x1AADF20", VA = "0x1AADF20")]
	private void AssignDelegate()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0x1AAE020", Offset = "0x1AAE020", VA = "0x1AAE020")]
	public AddUIRadioBtnInputDelegate()
	{
	}
}
[Token(Token = "0x2000005")]
public class Server
{
	[Token(Token = "0x4000004")]
	private const string _SERVER_ADDRESS = "www.google.com";

	[Token(Token = "0x17000003")]
	public static bool IsReachable
	{
		[Token(Token = "0x600000E")]
		[Address(RVA = "0x1A2C10C", Offset = "0x1A2C10C", VA = "0x1A2C10C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0x1A2C108", Offset = "0x1A2C108", VA = "0x1A2C108")]
	static Server()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x1A2C43C", Offset = "0x1A2C43C", VA = "0x1A2C43C")]
	public Server()
	{
	}
}
[Serializable]
[Token(Token = "0x2000006")]
public class EventHighScore : ISerializable
{
	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int highScore;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int scorePercent;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int weaponId;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int prizeMoneyReceived;

	[Token(Token = "0x6000010")]
	[Address(RVA = "0x152B00C", Offset = "0x152B00C", VA = "0x152B00C")]
	public EventHighScore(int data_highScore, int data_scorePercent, int data_weaponId, int data_prizeMoneyReceived)
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x152B058", Offset = "0x152B058", VA = "0x152B058")]
	public EventHighScore()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x152B060", Offset = "0x152B060", VA = "0x152B060", Slot = "4")]
	public void GetObjectData(SerializationInfo info, StreamingContext context)
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x152B140", Offset = "0x152B140", VA = "0x152B140")]
	public EventHighScore(SerializationInfo info, StreamingContext context)
	{
	}
}
[Token(Token = "0x2000007")]
public class ActRotatorExample : MonoBehaviour
{
	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x769840", Offset = "0x769840")]
	public float speed;

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x1AAB95C", Offset = "0x1AAB95C", VA = "0x1AAB95C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x1AAB9B4", Offset = "0x1AAB9B4", VA = "0x1AAB9B4")]
	public ActRotatorExample()
	{
	}
}
[Token(Token = "0x2000008")]
public class ActTesterGUI : MonoBehaviour
{
	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ObscuredVector3Test obscuredVector3Test;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ObscuredFloatTest obscuredFloatTest;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ObscuredIntTest obscuredIntTest;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ObscuredStringTest obscuredStringTest;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ObscuredPrefsTest obscuredPrefsTest;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ObscuredInt dummyObscuredInt;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ObscuredFloat dummyObscuredFloat;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ObscuredString dummyObscuredString;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ObscuredBool dummyObscuredBool;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool savesAlterationDetected;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int savesLock;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool foreignSavesDetected;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private DetectorsUsageExample detectorsUsageExample;

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x1AAB9C4", Offset = "0x1AAB9C4", VA = "0x1AAB9C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0x1AABBB0", Offset = "0x1AABBB0", VA = "0x1AABBB0")]
	private void SavesAlterationDetected()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0x1AABBBC", Offset = "0x1AABBBC", VA = "0x1AABBBC")]
	private void ForeignSavesDetected()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0x1AABBC8", Offset = "0x1AABBC8", VA = "0x1AABBC8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0x1AADAD8", Offset = "0x1AADAD8", VA = "0x1AADAD8")]
	private void CenteredLabel(string caption)
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0x1AADC54", Offset = "0x1AADC54", VA = "0x1AADC54")]
	public ActTesterGUI()
	{
	}
}
[Token(Token = "0x2000009")]
public class DetectorsUsageExample : MonoBehaviour
{
	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public bool injectionDetected;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[HideInInspector]
	public bool speedHackDetected;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[HideInInspector]
	public bool obscuredTypeCheatDetected;

	[Token(Token = "0x600001C")]
	[Address(RVA = "0x152146C", Offset = "0x152146C", VA = "0x152146C")]
	private void Start()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0x15215E4", Offset = "0x15215E4", VA = "0x15215E4")]
	private void OnSpeedHackDetected()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0x1521664", Offset = "0x1521664", VA = "0x1521664")]
	private void OnInjectionDetected()
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0x15216E4", Offset = "0x15216E4", VA = "0x15216E4")]
	private void OnObscuredTypeCheatingDetected()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0x1521764", Offset = "0x1521764", VA = "0x1521764")]
	public DetectorsUsageExample()
	{
	}
}
[Token(Token = "0x200000A")]
public class ObscuredFloatTest : MonoBehaviour
{
	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float healthBar;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	internal ObscuredFloat obscuredHealthBar;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	internal bool useRegular;

	[Token(Token = "0x6000021")]
	[Address(RVA = "0x178E458", Offset = "0x178E458", VA = "0x178E458")]
	private void Start()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0x178E760", Offset = "0x178E760", VA = "0x178E760")]
	public void UseRegular()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0x178E890", Offset = "0x178E890", VA = "0x178E890")]
	public void UseObscured()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0x178EA0C", Offset = "0x178EA0C", VA = "0x178EA0C")]
	public ObscuredFloatTest()
	{
	}
}
[Token(Token = "0x200000B")]
public class ObscuredIntTest : MonoBehaviour
{
	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal int cleanLivesCount;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	internal ObscuredInt obscuredLivesCount;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	internal bool useRegular;

	[Token(Token = "0x6000025")]
	[Address(RVA = "0x178F440", Offset = "0x178F440", VA = "0x178F440")]
	private void Start()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0x178F918", Offset = "0x178F918", VA = "0x178F918")]
	public void UseRegular()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0x178FA24", Offset = "0x178FA24", VA = "0x178FA24")]
	public void UseObscured()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0x178FB5C", Offset = "0x178FB5C", VA = "0x178FB5C")]
	public ObscuredIntTest()
	{
	}
}
[Token(Token = "0x200000C")]
public class ObscuredPrefsTest : MonoBehaviour
{
	[Token(Token = "0x4000020")]
	private const string PREFS_NAME = "name";

	[Token(Token = "0x4000021")]
	private const string PREFS_MONEY = "money";

	[Token(Token = "0x4000022")]
	private const string PREFS_LEVEL = "level";

	[Token(Token = "0x4000023")]
	private const string PREFS_LIFE_BAR = "lifeBar";

	[Token(Token = "0x4000024")]
	private const string PREFS_GAME_COMPLETE = "gameComplete";

	[Token(Token = "0x4000025")]
	private const string PREFS_LONG = "demoLong";

	[Token(Token = "0x4000026")]
	private const string PREFS_DOUBLE = "demoDouble";

	[Token(Token = "0x4000027")]
	private const string PREFS_BYTE_ARRAY = "demoByteArray";

	[Token(Token = "0x4000028")]
	private const string PREFS_VECTOR3 = "demoVector3";

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string encryptionKey;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	internal string gameData;

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x1793E84", Offset = "0x1793E84", VA = "0x1793E84")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x179400C", Offset = "0x179400C", VA = "0x179400C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x17940BC", Offset = "0x17940BC", VA = "0x17940BC")]
	public void SaveGame(bool obscured)
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x17943DC", Offset = "0x17943DC", VA = "0x17943DC")]
	public void ReadSavedGame(bool obscured)
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x1794C80", Offset = "0x1794C80", VA = "0x1794C80")]
	public ObscuredPrefsTest()
	{
	}
}
[Token(Token = "0x200000D")]
public class ObscuredStringTest : MonoBehaviour
{
	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal string cleanString;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	internal ObscuredString obscuredString;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	internal bool useRegular;

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x1797934", Offset = "0x1797934", VA = "0x1797934")]
	private void Start()
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x1797B30", Offset = "0x1797B30", VA = "0x1797B30")]
	public void UseRegular()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x1797C44", Offset = "0x1797C44", VA = "0x1797C44")]
	public void UseObscured()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x1797D60", Offset = "0x1797D60", VA = "0x1797D60")]
	public ObscuredStringTest()
	{
	}
}
[Token(Token = "0x200000E")]
public class ObscuredVector3Test : MonoBehaviour
{
	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal Vector3 playerPosition;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	internal ObscuredVector3 obscuredPlayerPosition;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	internal bool useRegular;

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x14C380C", Offset = "0x14C380C", VA = "0x14C380C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x14C3C04", Offset = "0x14C3C04", VA = "0x14C3C04")]
	public void UseRegular()
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x14C3D90", Offset = "0x14C3D90", VA = "0x14C3D90")]
	public void UseObscured()
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x14C3F1C", Offset = "0x14C3F1C", VA = "0x14C3F1C")]
	public ObscuredVector3Test()
	{
	}
}
[Token(Token = "0x200000F")]
public class PerformanceObscuredTests : MonoBehaviour
{
	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool boolTest;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int boolIterations;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool byteTest;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int byteIterations;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool shortTest;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int shortIterations;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool ushortTest;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int ushortIterations;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool intTest;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int intIterations;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool uintTest;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int uintIterations;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool longTest;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int longIterations;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool floatTest;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int floatIterations;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool doubleTest;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int doubleIterations;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool stringTest;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int stringIterations;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool vector3Test;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int vector3Iterations;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool prefsTest;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int prefsIterations;

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x14C6440", Offset = "0x14C6440", VA = "0x14C6440")]
	private void Start()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x14C6494", Offset = "0x14C6494", VA = "0x14C6494")]
	private void StartTests()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x14C65D8", Offset = "0x14C65D8", VA = "0x14C65D8")]
	private void TestBool()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x14C6948", Offset = "0x14C6948", VA = "0x14C6948")]
	private void TestByte()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x14C6CA8", Offset = "0x14C6CA8", VA = "0x14C6CA8")]
	private void TestShort()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x14C6FF0", Offset = "0x14C6FF0", VA = "0x14C6FF0")]
	private void TestUShort()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x14C8154", Offset = "0x14C8154", VA = "0x14C8154")]
	private void TestDouble()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x14C7D88", Offset = "0x14C7D88", VA = "0x14C7D88")]
	private void TestFloat()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x14C733C", Offset = "0x14C733C", VA = "0x14C733C")]
	private void TestInt()
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x14C79FC", Offset = "0x14C79FC", VA = "0x14C79FC")]
	private void TestLong()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x14C84EC", Offset = "0x14C84EC", VA = "0x14C84EC")]
	private void TestString()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x14C769C", Offset = "0x14C769C", VA = "0x14C769C")]
	private void TestUInt()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x14C88D8", Offset = "0x14C88D8", VA = "0x14C88D8")]
	private void TestVector3()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x14C8D64", Offset = "0x14C8D64", VA = "0x14C8D64")]
	private void TestPrefs()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x14C9204", Offset = "0x14C9204", VA = "0x14C9204")]
	public PerformanceObscuredTests()
	{
	}
}
[Token(Token = "0x2000010")]
public static class CompressCLZF2
{
	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly uint HLOG;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly uint HSIZE;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly uint MAX_LIT;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly uint MAX_OFF;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly uint MAX_REF;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly long[] HashTable;

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x1ABEAF8", Offset = "0x1ABEAF8", VA = "0x1ABEAF8")]
	public static byte[] Compress(byte[] inputBytes)
	{
		return null;
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x1ABF394", Offset = "0x1ABF394", VA = "0x1ABF394")]
	public static byte[] Decompress(byte[] inputBytes)
	{
		return null;
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x1ABEC04", Offset = "0x1ABEC04", VA = "0x1ABEC04")]
	private static int lzf_compress(byte[] input, ref byte[] output)
	{
		return default(int);
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x1ABF4A0", Offset = "0x1ABF4A0", VA = "0x1ABF4A0")]
	private static int lzf_decompress(byte[] input, ref byte[] output)
	{
		return default(int);
	}
}
[Token(Token = "0x2000011")]
public class CountryManager
{
	[Token(Token = "0x2000170")]
	public enum SystemCountry
	{
		[Token(Token = "0x4000940")]
		SouthAfrica,
		[Token(Token = "0x4000941")]
		Egypt,
		[Token(Token = "0x4000942")]
		Basque,
		[Token(Token = "0x4000943")]
		Belarus,
		[Token(Token = "0x4000944")]
		Bulgaria,
		[Token(Token = "0x4000945")]
		Andorra,
		[Token(Token = "0x4000946")]
		China,
		[Token(Token = "0x4000947")]
		CzechRepublic,
		[Token(Token = "0x4000948")]
		Denmark,
		[Token(Token = "0x4000949")]
		Netherlands,
		[Token(Token = "0x400094A")]
		UnitedStates,
		[Token(Token = "0x400094B")]
		Estonia,
		[Token(Token = "0x400094C")]
		FaroeIslands,
		[Token(Token = "0x400094D")]
		Finland,
		[Token(Token = "0x400094E")]
		France,
		[Token(Token = "0x400094F")]
		Germany,
		[Token(Token = "0x4000950")]
		Greece,
		[Token(Token = "0x4000951")]
		Israel,
		[Token(Token = "0x4000952")]
		Hungary,
		[Token(Token = "0x4000953")]
		Iceland,
		[Token(Token = "0x4000954")]
		Indonesia,
		[Token(Token = "0x4000955")]
		Italy,
		[Token(Token = "0x4000956")]
		Japan,
		[Token(Token = "0x4000957")]
		Korea,
		[Token(Token = "0x4000958")]
		Latvia,
		[Token(Token = "0x4000959")]
		Lithuania,
		[Token(Token = "0x400095A")]
		Norway,
		[Token(Token = "0x400095B")]
		Poland,
		[Token(Token = "0x400095C")]
		Portugal,
		[Token(Token = "0x400095D")]
		Romania,
		[Token(Token = "0x400095E")]
		Russia,
		[Token(Token = "0x400095F")]
		Croatia,
		[Token(Token = "0x4000960")]
		Slovakia,
		[Token(Token = "0x4000961")]
		Slovenia,
		[Token(Token = "0x4000962")]
		Spain,
		[Token(Token = "0x4000963")]
		Sweden,
		[Token(Token = "0x4000964")]
		Tailand,
		[Token(Token = "0x4000965")]
		Turky,
		[Token(Token = "0x4000966")]
		Ukraine,
		[Token(Token = "0x4000967")]
		Vietnam,
		[Token(Token = "0x4000968")]
		Unknown
	}

	[Token(Token = "0x17000004")]
	private static SystemLanguage Language
	{
		[Token(Token = "0x600004A")]
		[Address(RVA = "0x151E974", Offset = "0x151E974", VA = "0x151E974")]
		get
		{
			return default(SystemLanguage);
		}
	}

	[Token(Token = "0x17000005")]
	public static SystemCountry Country
	{
		[Token(Token = "0x600004B")]
		[Address(RVA = "0x151E97C", Offset = "0x151E97C", VA = "0x151E97C")]
		get
		{
			return default(SystemCountry);
		}
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0x151E984", Offset = "0x151E984", VA = "0x151E984")]
	public CountryManager()
	{
	}
}
[Token(Token = "0x2000012")]
public static class TransformExtensions
{
	[Serializable]
	[Token(Token = "0x2000171")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769618", Offset = "0x769618")]
	private sealed class <>c
	{
		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Transform, GameObject> <>9__2_0;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<GameObject, string> <>9__2_1;

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0x1BB127C", Offset = "0x1BB127C", VA = "0x1BB127C")]
		public <>c()
		{
		}

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0x1BB1284", Offset = "0x1BB1284", VA = "0x1BB1284")]
		internal GameObject <SortGameObjectsByName>b__2_0(Transform ct)
		{
			return null;
		}

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0x1BB12A0", Offset = "0x1BB12A0", VA = "0x1BB12A0")]
		internal string <SortGameObjectsByName>b__2_1(GameObject go)
		{
			return null;
		}
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0x198E52C", Offset = "0x198E52C", VA = "0x198E52C")]
	public static GameObject[] GetOrderChildren(this Transform transform)
	{
		return null;
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0x198EA78", Offset = "0x198EA78", VA = "0x198EA78")]
	public static GameObject[] GetOrderDescendants(this Transform transform)
	{
		return null;
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0x198E848", Offset = "0x198E848", VA = "0x198E848")]
	private static GameObject[] SortGameObjectsByName(Transform[] transforms)
	{
		return null;
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0x198EAD0", Offset = "0x198EAD0", VA = "0x198EAD0")]
	public static string GetTransformPath(this Transform transform)
	{
		return null;
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0x198EBE4", Offset = "0x198EBE4", VA = "0x198EBE4")]
	public static Vector3 TPUnscaled(this Transform transform, Vector3 position)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0x198ECD0", Offset = "0x198ECD0", VA = "0x198ECD0")]
	public static Vector3 InvTPUnscaled(this Transform transform, Vector3 position)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0x198EDE4", Offset = "0x198EDE4", VA = "0x198EDE4")]
	public static Vector3 GetTransformDir(this Transform transform, VectorComponent comp)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0x198EE40", Offset = "0x198EE40", VA = "0x198EE40")]
	public static float GetLocalScaleForComponent(this Transform transform, VectorComponent comp)
	{
		return default(float);
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0x198EEA0", Offset = "0x198EEA0", VA = "0x198EEA0")]
	public static bool ContainsXZ(this Bounds bounds, Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0x198EEE4", Offset = "0x198EEE4", VA = "0x198EEE4")]
	public static bool ContainsXY(this Bounds bounds, Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0x198EF28", Offset = "0x198EF28", VA = "0x198EF28")]
	public static bool ContainsYZ(this Bounds bounds, Vector3 pos)
	{
		return default(bool);
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0x198EF6C", Offset = "0x198EF6C", VA = "0x198EF6C")]
	public static float GetBoundsExtent(this Bounds bounds, VectorComponent comp)
	{
		return default(float);
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0x198EFBC", Offset = "0x198EFBC", VA = "0x198EFBC")]
	public static void ClearRigidbodyVelocity(this Rigidbody body)
	{
	}
}
[Token(Token = "0x2000013")]
public enum DevelopmentData
{
	[Token(Token = "0x4000050")]
	None,
	[Token(Token = "0x4000051")]
	SWATDLC,
	[Token(Token = "0x4000052")]
	Western
}
[Token(Token = "0x2000014")]
public class DevelopmentSettings : MonoBehaviour
{
	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static DevelopmentData m_currentDevelopmentData;

	[Token(Token = "0x17000006")]
	public static DevelopmentData DevData
	{
		[Token(Token = "0x600005A")]
		[Address(RVA = "0x152176C", Offset = "0x152176C", VA = "0x152176C")]
		get
		{
			return default(DevelopmentData);
		}
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0x15217D0", Offset = "0x15217D0", VA = "0x15217D0")]
	public DevelopmentSettings()
	{
	}
}
[Token(Token = "0x2000015")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x768A98", Offset = "0x768A98")]
public class UIActionBtn : UIButton
{
	[Token(Token = "0x600005D")]
	[Address(RVA = "0x1B37F08", Offset = "0x1B37F08", VA = "0x1B37F08", Slot = "191")]
	public override void OnInput(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0x1B38560", Offset = "0x1B38560", VA = "0x1B38560")]
	public new static UIActionBtn Create(string name, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0x1B386AC", Offset = "0x1B386AC", VA = "0x1B386AC")]
	public new static UIActionBtn Create(string name, Vector3 pos, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0x1B38840", Offset = "0x1B38840", VA = "0x1B38840")]
	public UIActionBtn()
	{
	}
}
[Token(Token = "0x2000016")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x768AD0", Offset = "0x768AD0")]
public class UIBtnChangePanel : UIButton
{
	[Token(Token = "0x2000172")]
	public enum ChangeType
	{
		[Token(Token = "0x400096D")]
		BringIn,
		[Token(Token = "0x400096E")]
		BringInForward,
		[Token(Token = "0x400096F")]
		BringInBack,
		[Token(Token = "0x4000970")]
		Dismiss,
		[Token(Token = "0x4000971")]
		DismissCurrent,
		[Token(Token = "0x4000972")]
		Toggle,
		[Token(Token = "0x4000973")]
		Forward,
		[Token(Token = "0x4000974")]
		Back,
		[Token(Token = "0x4000975")]
		BringInImmediate,
		[Token(Token = "0x4000976")]
		DismissImmediate
	}

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	public UIPanelManager panelManager;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	public ChangeType changeType;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3AC")]
	public bool detargetAllOthers;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	public string panel;

	[Token(Token = "0x6000061")]
	[Address(RVA = "0x1B3A050", Offset = "0x1B3A050", VA = "0x1B3A050", Slot = "191")]
	public override void OnInput(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0x1B3A778", Offset = "0x1B3A778", VA = "0x1B3A778", Slot = "16")]
	public override void Copy(SpriteRoot s)
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0x1B3A78C", Offset = "0x1B3A78C", VA = "0x1B3A78C", Slot = "170")]
	public override void Copy(SpriteRoot s, ControlCopyFlags flags)
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0x1B3A998", Offset = "0x1B3A998", VA = "0x1B3A998")]
	public new static UIBtnChangePanel Create(string name, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0x1B3AAE4", Offset = "0x1B3AAE4", VA = "0x1B3AAE4")]
	public new static UIBtnChangePanel Create(string name, Vector3 pos, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0x1B3AC78", Offset = "0x1B3AC78", VA = "0x1B3AC78")]
	public UIBtnChangePanel()
	{
	}
}
[Token(Token = "0x2000017")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x768B08", Offset = "0x768B08")]
public class UIBtnLoadScene : UIButton
{
	[Token(Token = "0x2000173")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769628", Offset = "0x769628")]
	private sealed class <LoadScene>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIBtnLoadScene <>4__this;

		[Token(Token = "0x1700020B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EAA")]
			[Address(RVA = "0x1BB165C", Offset = "0x1BB165C", VA = "0x1BB165C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EAC")]
			[Address(RVA = "0x1BB16A4", Offset = "0x1BB16A4", VA = "0x1BB16A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0x1BB15B8", Offset = "0x1BB15B8", VA = "0x1BB15B8")]
		[DebuggerHidden]
		public <LoadScene>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0x1BB15E4", Offset = "0x1BB15E4", VA = "0x1BB15E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0x1BB15E8", Offset = "0x1BB15E8", VA = "0x1BB15E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0x1BB1664", Offset = "0x1BB1664", VA = "0x1BB1664", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	public string scene;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	public UIPanelBase loadingPanel;

	[Token(Token = "0x6000067")]
	[Address(RVA = "0x1B3AC84", Offset = "0x1B3AC84", VA = "0x1B3AC84")]
	public void LoadSceneDelegate(UIPanelBase panel, EZTransition trans)
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0x1B3AD28", Offset = "0x1B3AD28", VA = "0x1B3AD28", Slot = "191")]
	public override void OnInput(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0x1B3AF60", Offset = "0x1B3AF60", VA = "0x1B3AF60")]
	protected void DoLoadScene()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0x1B3ACB0", Offset = "0x1B3ACB0", VA = "0x1B3ACB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76A768", Offset = "0x76A768")]
	protected IEnumerator LoadScene()
	{
		return null;
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0x1B3AF8C", Offset = "0x1B3AF8C", VA = "0x1B3AF8C", Slot = "16")]
	public override void Copy(SpriteRoot s)
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x1B3AFA0", Offset = "0x1B3AFA0", VA = "0x1B3AFA0", Slot = "170")]
	public override void Copy(SpriteRoot s, ControlCopyFlags flags)
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x1B3B064", Offset = "0x1B3B064", VA = "0x1B3B064")]
	public new static UIBtnLoadScene Create(string name, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x1B3B1B0", Offset = "0x1B3B1B0", VA = "0x1B3B1B0")]
	public new static UIBtnLoadScene Create(string name, Vector3 pos, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x1B3B344", Offset = "0x1B3B344", VA = "0x1B3B344")]
	public UIBtnLoadScene()
	{
	}
}
[Token(Token = "0x2000018")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x768B40", Offset = "0x768B40")]
public class UIBtnWWW : UIButton
{
	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	public string URL;

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x1B3B348", Offset = "0x1B3B348", VA = "0x1B3B348", Slot = "191")]
	public override void OnInput(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0x1B3B3EC", Offset = "0x1B3B3EC", VA = "0x1B3B3EC")]
	protected void DoURL()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0x1B3B428", Offset = "0x1B3B428", VA = "0x1B3B428", Slot = "16")]
	public override void Copy(SpriteRoot s)
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0x1B3B43C", Offset = "0x1B3B43C", VA = "0x1B3B43C", Slot = "170")]
	public override void Copy(SpriteRoot s, ControlCopyFlags flags)
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0x1B3B4F0", Offset = "0x1B3B4F0", VA = "0x1B3B4F0")]
	public new static UIBtnWWW Create(string name, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0x1B3B63C", Offset = "0x1B3B63C", VA = "0x1B3B63C")]
	public new static UIBtnWWW Create(string name, Vector3 pos, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0x1B3B7D0", Offset = "0x1B3B7D0", VA = "0x1B3B7D0")]
	public UIBtnWWW()
	{
	}
}
[Token(Token = "0x2000019")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x768B78", Offset = "0x768B78")]
public class UIButton : AutoSpriteControlBase
{
	[Token(Token = "0x2000174")]
	public enum CONTROL_STATE
	{
		[Token(Token = "0x400097B")]
		NORMAL,
		[Token(Token = "0x400097C")]
		OVER,
		[Token(Token = "0x400097D")]
		ACTIVE,
		[Token(Token = "0x400097E")]
		DISABLED
	}

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	[HideInInspector]
	public UnityEvent<bool> OnPointer;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	protected CONTROL_STATE m_ctrlState;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	[HideInInspector]
	public TextureAnim[] states;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	[HideInInspector]
	public EZTransitionList[] transitions;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	private EZTransition prevTransition;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	[HideInInspector]
	public string[] stateLabels;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	public SpriteRoot[] layers;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	public MonoBehaviour scriptWithMethodToInvoke;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	public string methodToInvoke;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	public bool allowReplacementOfMethodScript;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35C")]
	public POINTER_INFO.INPUT_EVENT whenToInvoke;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	public float delay;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	public AudioSource soundOnOver;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	public AudioSource soundOnClick;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	public bool repeat;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x379")]
	public bool alwaysFinishActiveTransition;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x37A")]
	protected bool transitionQueued;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	protected EZTransition nextTransition;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	protected CONTROL_STATE nextState;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	protected int[,] stateIndices;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	protected bool wasHovered;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39C")]
	private int counter;

	[Token(Token = "0x17000007")]
	public CONTROL_STATE controlState
	{
		[Token(Token = "0x6000077")]
		[Address(RVA = "0x1B3B7D4", Offset = "0x1B3B7D4", VA = "0x1B3B7D4")]
		get
		{
			return default(CONTROL_STATE);
		}
	}

	[Token(Token = "0x17000008")]
	public override bool controlIsEnabled
	{
		[Token(Token = "0x6000078")]
		[Address(RVA = "0x1B3B7DC", Offset = "0x1B3B7DC", VA = "0x1B3B7DC", Slot = "177")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000079")]
		[Address(RVA = "0x1B3B7E4", Offset = "0x1B3B7E4", VA = "0x1B3B7E4", Slot = "178")]
		set
		{
		}
	}

	[Token(Token = "0x17000009")]
	public override TextureAnim[] States
	{
		[Token(Token = "0x600007A")]
		[Address(RVA = "0x1B3B824", Offset = "0x1B3B824", VA = "0x1B3B824", Slot = "79")]
		get
		{
			return null;
		}
		[Token(Token = "0x600007B")]
		[Address(RVA = "0x1B3B82C", Offset = "0x1B3B82C", VA = "0x1B3B82C", Slot = "80")]
		set
		{
		}
	}

	[Token(Token = "0x1700000A")]
	public override EZTransitionList[] Transitions
	{
		[Token(Token = "0x600007D")]
		[Address(RVA = "0x1B3B884", Offset = "0x1B3B884", VA = "0x1B3B884", Slot = "197")]
		get
		{
			return null;
		}
		[Token(Token = "0x600007E")]
		[Address(RVA = "0x1B3B88C", Offset = "0x1B3B88C", VA = "0x1B3B88C", Slot = "198")]
		set
		{
		}
	}

	[Token(Token = "0x1700000B")]
	public override string Text
	{
		[Token(Token = "0x600008E")]
		[Address(RVA = "0x1B3CDE4", Offset = "0x1B3CDE4", VA = "0x1B3CDE4", Slot = "164")]
		get
		{
			return null;
		}
		[Token(Token = "0x600008F")]
		[Address(RVA = "0x1B3CDEC", Offset = "0x1B3CDEC", VA = "0x1B3CDEC", Slot = "165")]
		set
		{
		}
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0x1B3B83C", Offset = "0x1B3B83C", VA = "0x1B3B83C", Slot = "196")]
	public override EZTransitionList GetTransitions(int index)
	{
		return null;
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x1B3B89C", Offset = "0x1B3B89C", VA = "0x1B3B89C", Slot = "199")]
	public override string GetStateLabel(int index)
	{
		return null;
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x1B3B8D8", Offset = "0x1B3B8D8", VA = "0x1B3B8D8", Slot = "200")]
	public override void SetStateLabel(int index, string label)
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x1B3B984", Offset = "0x1B3B984", VA = "0x1B3B984", Slot = "47")]
	public override void SetState(int num)
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x1B38008", Offset = "0x1B38008", VA = "0x1B38008", Slot = "191")]
	public override void OnInput(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x1B3B9C0", Offset = "0x1B3B9C0", VA = "0x1B3B9C0", Slot = "13")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x1B3C55C", Offset = "0x1B3C55C", VA = "0x1B3C55C", Slot = "19")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x1B3C5E8", Offset = "0x1B3C5E8", VA = "0x1B3C5E8", Slot = "20")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x1B3C714", Offset = "0x1B3C714", VA = "0x1B3C714", Slot = "16")]
	public override void Copy(SpriteRoot s)
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x1B3A858", Offset = "0x1B3A858", VA = "0x1B3A858", Slot = "170")]
	public override void Copy(SpriteRoot s, ControlCopyFlags flags)
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x1B3C728", Offset = "0x1B3C728", VA = "0x1B3C728", Slot = "202")]
	public virtual void SetControlState(CONTROL_STATE s)
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x1B3C73C", Offset = "0x1B3C73C", VA = "0x1B3C73C", Slot = "203")]
	public virtual void SetControlState(CONTROL_STATE s, bool suppressTransitions)
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x1B3CC4C", Offset = "0x1B3CC4C", VA = "0x1B3CC4C")]
	protected int DetermineNextTransition(int newState, int prevState)
	{
		return default(int);
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x1B3C9DC", Offset = "0x1B3C9DC", VA = "0x1B3C9DC")]
	protected void StartTransition(int newState, int prevState, bool suppressTransition)
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x1B3CAC8", Offset = "0x1B3CAC8", VA = "0x1B3CAC8")]
	protected void QueueTransition(int newState, int prevState, bool suppressTransition)
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x1B3CCC0", Offset = "0x1B3CCC0", VA = "0x1B3CCC0")]
	protected void RunFollowupTrans(EZTransition trans)
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0x1B3CF7C", Offset = "0x1B3CF7C", VA = "0x1B3CF7C", Slot = "17")]
	public override void InitUVs()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0x1B3CFEC", Offset = "0x1B3CFEC", VA = "0x1B3CFEC")]
	public static UIButton Create(string name, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0x1B3D138", Offset = "0x1B3D138", VA = "0x1B3D138")]
	public static UIButton Create(string name, Vector3 pos, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0x1B3D2CC", Offset = "0x1B3D2CC", VA = "0x1B3D2CC", Slot = "194")]
	public override void DrawPreTransitionUI(int selState, IGUIScriptSelector gui)
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0x1B38844", Offset = "0x1B38844", VA = "0x1B38844")]
	public UIButton()
	{
	}
}
[Token(Token = "0x200001A")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x768BB0", Offset = "0x768BB0")]
public class UIButton3D : ControlBase
{
	[Token(Token = "0x2000175")]
	public enum CONTROL_STATE
	{
		[Token(Token = "0x4000980")]
		NORMAL,
		[Token(Token = "0x4000981")]
		OVER,
		[Token(Token = "0x4000982")]
		ACTIVE,
		[Token(Token = "0x4000983")]
		DISABLED
	}

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	protected CONTROL_STATE m_ctrlState;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected string[] states;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	public EZTransitionList[] transitions;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private EZTransition prevTransition;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[HideInInspector]
	public string[] stateLabels;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public MonoBehaviour scriptWithMethodToInvoke;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public string methodToInvoke;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public POINTER_INFO.INPUT_EVENT whenToInvoke;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float delay;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public AudioSource soundOnOver;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioSource soundOnClick;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public bool repeat;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
	public bool alwaysFinishActiveTransition;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE2")]
	protected bool transitionQueued;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	protected EZTransition nextTransition;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	protected CONTROL_STATE nextState;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	protected bool m_started;

	[Token(Token = "0x1700000C")]
	public CONTROL_STATE controlState
	{
		[Token(Token = "0x6000095")]
		[Address(RVA = "0x1B3D3A4", Offset = "0x1B3D3A4", VA = "0x1B3D3A4")]
		get
		{
			return default(CONTROL_STATE);
		}
	}

	[Token(Token = "0x1700000D")]
	public override bool controlIsEnabled
	{
		[Token(Token = "0x6000096")]
		[Address(RVA = "0x1B3D3AC", Offset = "0x1B3D3AC", VA = "0x1B3D3AC", Slot = "89")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000097")]
		[Address(RVA = "0x1B3D3B4", Offset = "0x1B3D3B4", VA = "0x1B3D3B4", Slot = "90")]
		set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public override string[] States
	{
		[Token(Token = "0x6000098")]
		[Address(RVA = "0x1B3D3DC", Offset = "0x1B3D3DC", VA = "0x1B3D3DC", Slot = "109")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000F")]
	public override EZTransitionList[] Transitions
	{
		[Token(Token = "0x600009A")]
		[Address(RVA = "0x1B3D42C", Offset = "0x1B3D42C", VA = "0x1B3D42C", Slot = "115")]
		get
		{
			return null;
		}
		[Token(Token = "0x600009B")]
		[Address(RVA = "0x1B3D434", Offset = "0x1B3D434", VA = "0x1B3D434", Slot = "116")]
		set
		{
		}
	}

	[Token(Token = "0x17000010")]
	public override string Text
	{
		[Token(Token = "0x60000AA")]
		[Address(RVA = "0x1B3E1B0", Offset = "0x1B3E1B0", VA = "0x1B3E1B0", Slot = "79")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000AB")]
		[Address(RVA = "0x1B3E1B8", Offset = "0x1B3E1B8", VA = "0x1B3E1B8", Slot = "80")]
		set
		{
		}
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0x1B3D3E4", Offset = "0x1B3D3E4", VA = "0x1B3D3E4", Slot = "114")]
	public override EZTransitionList GetTransitions(int index)
	{
		return null;
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0x1B3D43C", Offset = "0x1B3D43C", VA = "0x1B3D43C", Slot = "117")]
	public override string GetStateLabel(int index)
	{
		return null;
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0x1B3D478", Offset = "0x1B3D478", VA = "0x1B3D478", Slot = "118")]
	public override void SetStateLabel(int index, string label)
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x1B3D524", Offset = "0x1B3D524", VA = "0x1B3D524", Slot = "103")]
	public override void OnInput(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x1B3D808", Offset = "0x1B3D808", VA = "0x1B3D808", Slot = "86")]
	public override void Start()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0x1B3DA38", Offset = "0x1B3DA38", VA = "0x1B3DA38", Slot = "104")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0x1B3DAC4", Offset = "0x1B3DAC4", VA = "0x1B3DAC4", Slot = "105")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x1B3DBF0", Offset = "0x1B3DBF0", VA = "0x1B3DBF0", Slot = "107")]
	public override void Copy(IControl c)
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x1B3DC04", Offset = "0x1B3DC04", VA = "0x1B3DC04", Slot = "108")]
	public override void Copy(IControl c, ControlCopyFlags flags)
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x1B3DD4C", Offset = "0x1B3DD4C", VA = "0x1B3DD4C", Slot = "122")]
	public virtual void SetControlState(CONTROL_STATE s)
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x1B3DD60", Offset = "0x1B3DD60", VA = "0x1B3DD60", Slot = "123")]
	public virtual void SetControlState(CONTROL_STATE s, bool suppressTransitions)
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x1B3E018", Offset = "0x1B3E018", VA = "0x1B3E018")]
	protected int DetermineNextTransition(int newState, int prevState)
	{
		return default(int);
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x1B3DE70", Offset = "0x1B3DE70", VA = "0x1B3DE70")]
	protected void StartTransition(int newState, int prevState)
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x1B3DEF8", Offset = "0x1B3DEF8", VA = "0x1B3DEF8")]
	protected void QueueTransition(int newState, int prevState)
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x1B3E08C", Offset = "0x1B3E08C", VA = "0x1B3E08C")]
	protected void RunFollowupTrans(EZTransition trans)
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x1B3E5F8", Offset = "0x1B3E5F8", VA = "0x1B3E5F8", Slot = "112")]
	public override void DrawPreTransitionUI(int selState, IGUIScriptSelector gui)
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x1B3E6CC", Offset = "0x1B3E6CC", VA = "0x1B3E6CC")]
	public static UIButton3D Create(string name, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x1B3E818", Offset = "0x1B3E818", VA = "0x1B3E818")]
	public static UIButton3D Create(string name, Vector3 pos, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x1B3E9AC", Offset = "0x1B3E9AC", VA = "0x1B3E9AC")]
	public UIButton3D()
	{
	}
}
[Token(Token = "0x200001B")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x768BE8", Offset = "0x768BE8")]
public class UIListButton : UIListItem
{
	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x1B3FE98", Offset = "0x1B3FE98", VA = "0x1B3FE98", Slot = "191")]
	public override void OnInput(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x1B407DC", Offset = "0x1B407DC", VA = "0x1B407DC")]
	public new static UIListButton Create(string name, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x1B40928", Offset = "0x1B40928", VA = "0x1B40928")]
	public new static UIListButton Create(string name, Vector3 pos, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x1B40ABC", Offset = "0x1B40ABC", VA = "0x1B40ABC")]
	public UIListButton()
	{
	}
}
[Token(Token = "0x200001C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x768C20", Offset = "0x768C20")]
public class UIListItem : UIButton, IUIListObject, IUIObject, IEZDragDrop
{
	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	[HideInInspector]
	public bool activeOnlyWhenSelected;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A4")]
	protected int m_index;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	protected bool m_selected;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	protected UIScrollList list;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	protected Vector2 colliderTL;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	protected Vector2 colliderBR;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
	protected Vector3 colliderCenter;

	[Token(Token = "0x17000011")]
	public bool selected
	{
		[Token(Token = "0x60000B4")]
		[Address(RVA = "0x1B40AD4", Offset = "0x1B40AD4", VA = "0x1B40AD4", Slot = "223")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000B5")]
		[Address(RVA = "0x1B40ADC", Offset = "0x1B40ADC", VA = "0x1B40ADC", Slot = "224")]
		set
		{
		}
	}

	[Token(Token = "0x17000012")]
	public override string Text
	{
		[Token(Token = "0x60000BD")]
		[Address(RVA = "0x1B41444", Offset = "0x1B41444", VA = "0x1B41444", Slot = "165")]
		set
		{
		}
	}

	[Token(Token = "0x17000013")]
	public int Index
	{
		[Token(Token = "0x60000C7")]
		[Address(RVA = "0x1B41DAC", Offset = "0x1B41DAC", VA = "0x1B41DAC", Slot = "218")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000C8")]
		[Address(RVA = "0x1B41DB4", Offset = "0x1B41DB4", VA = "0x1B41DB4", Slot = "219")]
		set
		{
		}
	}

	[Token(Token = "0x17000014")]
	public UITextBase TextObj
	{
		[Token(Token = "0x60000CA")]
		[Address(RVA = "0x1B41F98", Offset = "0x1B41F98", VA = "0x1B41F98", Slot = "222")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x1B40B04", Offset = "0x1B40B04", VA = "0x1B40B04", Slot = "12")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x1B404C4", Offset = "0x1B404C4", VA = "0x1B404C4")]
	protected void DoNeccessaryInput(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x1B40C54", Offset = "0x1B40C54", VA = "0x1B40C54", Slot = "191")]
	public override void OnInput(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x1B4125C", Offset = "0x1B4125C", VA = "0x1B4125C", Slot = "19")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x1B41314", Offset = "0x1B41314", VA = "0x1B41314", Slot = "20")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x1B4134C", Offset = "0x1B4134C", VA = "0x1B4134C", Slot = "16")]
	public override void Copy(SpriteRoot s)
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x1B41360", Offset = "0x1B41360", VA = "0x1B41360", Slot = "170")]
	public override void Copy(SpriteRoot s, ControlCopyFlags flags)
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x1B41550", Offset = "0x1B41550", VA = "0x1B41550", Slot = "174")]
	public override void FindOuterEdges()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0x1B41588", Offset = "0x1B41588", VA = "0x1B41588", Slot = "23")]
	public override void TruncateRight(float pct)
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x1B416F4", Offset = "0x1B416F4", VA = "0x1B416F4", Slot = "24")]
	public override void TruncateLeft(float pct)
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x1B41860", Offset = "0x1B41860", VA = "0x1B41860", Slot = "25")]
	public override void TruncateTop(float pct)
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x1B419CC", Offset = "0x1B419CC", VA = "0x1B419CC", Slot = "26")]
	public override void TruncateBottom(float pct)
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x1B41B38", Offset = "0x1B41B38", VA = "0x1B41B38", Slot = "27")]
	public override void Untruncate()
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x1B41C70", Offset = "0x1B41C70", VA = "0x1B41C70", Slot = "37")]
	public override void Hide(bool tf)
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0x1B41D94", Offset = "0x1B41D94", VA = "0x1B41D94", Slot = "216")]
	public void SetList(UIScrollList c)
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0x1B41DA4", Offset = "0x1B41DA4", VA = "0x1B41DA4", Slot = "229")]
	public virtual UIScrollList GetScrollList()
	{
		return null;
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0x1B41DBC", Offset = "0x1B41DBC", VA = "0x1B41DBC")]
	public void FindText()
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0x1B41FA0", Offset = "0x1B41FA0", VA = "0x1B41FA0", Slot = "204")]
	public bool IsContainer()
	{
		return default(bool);
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0x1B41FA8", Offset = "0x1B41FA8", VA = "0x1B41FA8")]
	public new static UIListItem Create(string name, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x1B420F4", Offset = "0x1B420F4", VA = "0x1B420F4")]
	public new static UIListItem Create(string name, Vector3 pos, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x1B40AC8", Offset = "0x1B40AC8", VA = "0x1B40AC8")]
	public UIListItem()
	{
	}

	[SpecialName]
	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x1B42288", Offset = "0x1B42288", VA = "0x1B42288", Slot = "123")]
	private GameObject IUIObject.get_gameObject()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x1B42290", Offset = "0x1B42290", VA = "0x1B42290", Slot = "124")]
	private Transform IUIObject.get_transform()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x1B42298", Offset = "0x1B42298", VA = "0x1B42298", Slot = "126")]
	private string IUIObject.get_name()
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x200001D")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x768C58", Offset = "0x768C58")]
public class UIListItemContainer : ControlBase, IUIListObject, IUIObject, IEZDragDrop, IUIContainer
{
	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected List<SpriteRoot> uiObjs;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected List<UITextBase> textObjs;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected bool m_started;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected Camera renderCamera;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector2 topLeftEdge;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Vector2 bottomRightEdge;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Rect3D clippingRect;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool clipped;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private UIScrollList list;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	protected int index;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private bool m_selected;

	[Token(Token = "0x17000015")]
	public override IUIContainer Container
	{
		[Token(Token = "0x60000D8")]
		[Address(RVA = "0x1B43604", Offset = "0x1B43604", VA = "0x1B43604", Slot = "93")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000D9")]
		[Address(RVA = "0x1B4360C", Offset = "0x1B4360C", VA = "0x1B4360C", Slot = "94")]
		set
		{
		}
	}

	[Token(Token = "0x17000016")]
	public override EZTransitionList[] Transitions
	{
		[Token(Token = "0x60000DF")]
		[Address(RVA = "0x1B44218", Offset = "0x1B44218", VA = "0x1B44218", Slot = "115")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000E0")]
		[Address(RVA = "0x1B44220", Offset = "0x1B44220", VA = "0x1B44220", Slot = "116")]
		set
		{
		}
	}

	[Token(Token = "0x17000017")]
	public override string[] States
	{
		[Token(Token = "0x60000E1")]
		[Address(RVA = "0x1B44224", Offset = "0x1B44224", VA = "0x1B44224", Slot = "109")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000018")]
	public Vector2 TopLeftEdge
	{
		[Token(Token = "0x60000E4")]
		[Address(RVA = "0x1B44A18", Offset = "0x1B44A18", VA = "0x1B44A18", Slot = "124")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x17000019")]
	public Vector2 BottomRightEdge
	{
		[Token(Token = "0x60000E5")]
		[Address(RVA = "0x1B44A20", Offset = "0x1B44A20", VA = "0x1B44A20", Slot = "125")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x1700001A")]
	public bool Managed
	{
		[Token(Token = "0x60000E7")]
		[Address(RVA = "0x1B44BBC", Offset = "0x1B44BBC", VA = "0x1B44BBC", Slot = "127")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700001B")]
	public Rect3D ClippingRect
	{
		[Token(Token = "0x60000E8")]
		[Address(RVA = "0x1B44BC4", Offset = "0x1B44BC4", VA = "0x1B44BC4", Slot = "128")]
		get
		{
			return default(Rect3D);
		}
		[Token(Token = "0x60000E9")]
		[Address(RVA = "0x1B44BE4", Offset = "0x1B44BE4", VA = "0x1B44BE4", Slot = "129")]
		set
		{
		}
	}

	[Token(Token = "0x1700001C")]
	public bool Clipped
	{
		[Token(Token = "0x60000EA")]
		[Address(RVA = "0x1B44E28", Offset = "0x1B44E28", VA = "0x1B44E28", Slot = "130")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000EB")]
		[Address(RVA = "0x1B44E30", Offset = "0x1B44E30", VA = "0x1B44E30", Slot = "131")]
		set
		{
		}
	}

	[Token(Token = "0x1700001D")]
	public int Index
	{
		[Token(Token = "0x60000F0")]
		[Address(RVA = "0x1B451BC", Offset = "0x1B451BC", VA = "0x1B451BC", Slot = "136")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000F1")]
		[Address(RVA = "0x1B451C4", Offset = "0x1B451C4", VA = "0x1B451C4", Slot = "137")]
		set
		{
		}
	}

	[Token(Token = "0x1700001E")]
	public override string Text
	{
		[Token(Token = "0x60000F2")]
		[Address(RVA = "0x1B451CC", Offset = "0x1B451CC", VA = "0x1B451CC", Slot = "80")]
		set
		{
		}
	}

	[Token(Token = "0x1700001F")]
	public UITextBase TextObj
	{
		[Token(Token = "0x60000F3")]
		[Address(RVA = "0x1B452D0", Offset = "0x1B452D0", VA = "0x1B452D0", Slot = "140")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000020")]
	public bool selected
	{
		[Token(Token = "0x60000F4")]
		[Address(RVA = "0x1B452D8", Offset = "0x1B452D8", VA = "0x1B452D8", Slot = "141")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000F5")]
		[Address(RVA = "0x1B452E0", Offset = "0x1B452E0", VA = "0x1B452E0", Slot = "142")]
		set
		{
		}
	}

	[Token(Token = "0x17000021")]
	public Camera RenderCamera
	{
		[Token(Token = "0x60000F7")]
		[Address(RVA = "0x1B454A0", Offset = "0x1B454A0", VA = "0x1B454A0", Slot = "144")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000F8")]
		[Address(RVA = "0x1B454A8", Offset = "0x1B454A8", VA = "0x1B454A8", Slot = "145")]
		set
		{
		}
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x1B422A0", Offset = "0x1B422A0", VA = "0x1B422A0", Slot = "86")]
	public override void Start()
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x1B422DC", Offset = "0x1B422DC", VA = "0x1B422DC")]
	public void ScanChildren()
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x1B42D1C", Offset = "0x1B42D1C", VA = "0x1B42D1C", Slot = "147")]
	public void AddChild(GameObject go)
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x1B43120", Offset = "0x1B43120", VA = "0x1B43120", Slot = "148")]
	public void RemoveChild(GameObject go)
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x1B435FC", Offset = "0x1B435FC", VA = "0x1B435FC", Slot = "149")]
	public void AddSubject(GameObject go)
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x1B43600", Offset = "0x1B43600", VA = "0x1B43600", Slot = "150")]
	public void RemoveSubject(GameObject go)
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x1B439B4", Offset = "0x1B439B4", VA = "0x1B439B4")]
	public void MakeChild(GameObject go)
	{
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x1B43A1C", Offset = "0x1B43A1C", VA = "0x1B43A1C")]
	public SpriteRoot GetElement(string elementName)
	{
		return null;
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0x1B43B24", Offset = "0x1B43B24", VA = "0x1B43B24")]
	public UITextBase GetTextElement(string elementName)
	{
		return null;
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x1B43C2C", Offset = "0x1B43C2C", VA = "0x1B43C2C", Slot = "102")]
	public override void OnInput(POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x1B44210", Offset = "0x1B44210", VA = "0x1B44210", Slot = "114")]
	public override EZTransitionList GetTransitions(int index)
	{
		return null;
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x1B4422C", Offset = "0x1B4422C", VA = "0x1B4422C", Slot = "122")]
	public bool IsContainer()
	{
		return default(bool);
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x1B44234", Offset = "0x1B44234", VA = "0x1B44234", Slot = "123")]
	public void FindOuterEdges()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x1B44A28", Offset = "0x1B44A28", VA = "0x1B44A28", Slot = "126")]
	public void Hide(bool tf)
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x1B44EAC", Offset = "0x1B44EAC", VA = "0x1B44EAC", Slot = "132")]
	public void Unclip()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x1B45034", Offset = "0x1B45034", VA = "0x1B45034", Slot = "88")]
	public override void UpdateCollider()
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x1B451A4", Offset = "0x1B451A4", VA = "0x1B451A4", Slot = "134")]
	public void SetList(UIScrollList c)
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x1B451B4", Offset = "0x1B451B4", VA = "0x1B451B4", Slot = "151")]
	public virtual UIScrollList GetScrollList()
	{
		return null;
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x1B452EC", Offset = "0x1B452EC", VA = "0x1B452EC", Slot = "143")]
	public void Delete()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x1B45650", Offset = "0x1B45650", VA = "0x1B45650", Slot = "146")]
	public void UpdateCamera()
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x1B457CC", Offset = "0x1B457CC", VA = "0x1B457CC")]
	public UIListItemContainer()
	{
	}

	[SpecialName]
	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x1B4589C", Offset = "0x1B4589C", VA = "0x1B4589C", Slot = "38")]
	private GameObject IUIObject.get_gameObject()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x1B458A4", Offset = "0x1B458A4", VA = "0x1B458A4", Slot = "39")]
	private Transform IUIObject.get_transform()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x1B458AC", Offset = "0x1B458AC", VA = "0x1B458AC", Slot = "41")]
	private string IUIObject.get_name()
	{
		return null;
	}
}
[Token(Token = "0x200001E")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x768C90", Offset = "0x768C90")]
public class UIPanelTab : UIRadioBtn
{
	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	public bool toggle;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	public UIPanelManager panelManager;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	public UIPanelBase panel;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
	public bool panelShowingAtStart;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C9")]
	protected bool panelIsShowing;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3CA")]
	protected bool internalCall;

	[Token(Token = "0x17000022")]
	public override bool Value
	{
		[Token(Token = "0x60000FE")]
		[Address(RVA = "0x19659E4", Offset = "0x19659E4", VA = "0x19659E4", Slot = "206")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000FF")]
		[Address(RVA = "0x19659EC", Offset = "0x19659EC", VA = "0x19659EC", Slot = "207")]
		set
		{
		}
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x1965B60", Offset = "0x1965B60", VA = "0x1965B60", Slot = "13")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x1966828", Offset = "0x1966828", VA = "0x1966828", Slot = "191")]
	public override void OnInput(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x1966B14", Offset = "0x1966B14", VA = "0x1966B14")]
	protected void DoPanelStuff()
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x1966CD0", Offset = "0x1966CD0", VA = "0x1966CD0", Slot = "16")]
	public override void Copy(SpriteRoot s)
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x1966CE4", Offset = "0x1966CE4", VA = "0x1966CE4", Slot = "170")]
	public override void Copy(SpriteRoot s, ControlCopyFlags flags)
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x1966F4C", Offset = "0x1966F4C", VA = "0x1966F4C")]
	public new static UIPanelTab Create(string name, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x1967098", Offset = "0x1967098", VA = "0x1967098")]
	public new static UIPanelTab Create(string name, Vector3 pos, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x196722C", Offset = "0x196722C", VA = "0x196722C")]
	public UIPanelTab()
	{
	}
}
[Token(Token = "0x200001F")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x768CC8", Offset = "0x768CC8")]
public class UIProgressBar : AutoSpriteControlBase
{
	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
	protected float m_value;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	public bool disableEmptyBar;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	protected AutoSprite emptySprite;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	[HideInInspector]
	public TextureAnim[] states;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	public SpriteRoot[] filledLayers;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	public SpriteRoot[] emptyLayers;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	protected int[] filledIndices;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	protected int[] emptyIndices;

	[Token(Token = "0x17000023")]
	public float Value
	{
		[Token(Token = "0x6000108")]
		[Address(RVA = "0x1967918", Offset = "0x1967918", VA = "0x1967918")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000109")]
		[Address(RVA = "0x1967920", Offset = "0x1967920", VA = "0x1967920")]
		set
		{
		}
	}

	[Token(Token = "0x17000024")]
	public override TextureAnim[] States
	{
		[Token(Token = "0x600010A")]
		[Address(RVA = "0x1967AB8", Offset = "0x1967AB8", VA = "0x1967AB8", Slot = "79")]
		get
		{
			return null;
		}
		[Token(Token = "0x600010B")]
		[Address(RVA = "0x1967AC0", Offset = "0x1967AC0", VA = "0x1967AC0", Slot = "80")]
		set
		{
		}
	}

	[Token(Token = "0x17000025")]
	public override EZTransitionList[] Transitions
	{
		[Token(Token = "0x600010D")]
		[Address(RVA = "0x1967AD8", Offset = "0x1967AD8", VA = "0x1967AD8", Slot = "197")]
		get
		{
			return null;
		}
		[Token(Token = "0x600010E")]
		[Address(RVA = "0x1967AE0", Offset = "0x1967AE0", VA = "0x1967AE0", Slot = "198")]
		set
		{
		}
	}

	[Token(Token = "0x17000026")]
	public override IUIContainer Container
	{
		[Token(Token = "0x6000116")]
		[Address(RVA = "0x1968974", Offset = "0x1968974", VA = "0x1968974", Slot = "181")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000117")]
		[Address(RVA = "0x196897C", Offset = "0x196897C", VA = "0x196897C", Slot = "182")]
		set
		{
		}
	}

	[Token(Token = "0x17000027")]
	public override bool Clipped
	{
		[Token(Token = "0x6000119")]
		[Address(RVA = "0x1968C1C", Offset = "0x1968C1C", VA = "0x1968C1C", Slot = "42")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600011A")]
		[Address(RVA = "0x1968C24", Offset = "0x1968C24", VA = "0x1968C24", Slot = "43")]
		set
		{
		}
	}

	[Token(Token = "0x17000028")]
	public override Rect3D ClippingRect
	{
		[Token(Token = "0x600011B")]
		[Address(RVA = "0x1968CE8", Offset = "0x1968CE8", VA = "0x1968CE8", Slot = "40")]
		get
		{
			return default(Rect3D);
		}
		[Token(Token = "0x600011C")]
		[Address(RVA = "0x1968D34", Offset = "0x1968D34", VA = "0x1968D34", Slot = "41")]
		set
		{
		}
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x1967AD0", Offset = "0x1967AD0", VA = "0x1967AD0", Slot = "196")]
	public override EZTransitionList GetTransitions(int index)
	{
		return null;
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x1967AE4", Offset = "0x1967AE4", VA = "0x1967AE4", Slot = "191")]
	public override void OnInput(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x1967AE8", Offset = "0x1967AE8", VA = "0x1967AE8", Slot = "13")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x19686DC", Offset = "0x19686DC", VA = "0x19686DC", Slot = "22")]
	public override void SetSize(float width, float height)
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x19687A4", Offset = "0x19687A4", VA = "0x19687A4", Slot = "16")]
	public override void Copy(SpriteRoot s)
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x19687B8", Offset = "0x19687B8", VA = "0x19687B8", Slot = "170")]
	public override void Copy(SpriteRoot s, ControlCopyFlags flags)
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x1968904", Offset = "0x1968904", VA = "0x1968904", Slot = "17")]
	public override void InitUVs()
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0x196794C", Offset = "0x196794C", VA = "0x196794C")]
	protected void UpdateProgress()
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x1968B70", Offset = "0x1968B70", VA = "0x1968B70", Slot = "28")]
	public override void Unclip()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x1968E3C", Offset = "0x1968E3C", VA = "0x1968E3C")]
	public static UIProgressBar Create(string name, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x1968F88", Offset = "0x1968F88", VA = "0x1968F88")]
	public static UIProgressBar Create(string name, Vector3 pos, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x196911C", Offset = "0x196911C", VA = "0x196911C", Slot = "37")]
	public override void Hide(bool tf)
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x19691D8", Offset = "0x19691D8", VA = "0x19691D8", Slot = "30")]
	public override void SetColor(Color c)
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x19692C4", Offset = "0x19692C4", VA = "0x19692C4")]
	public UIProgressBar()
	{
	}
}
[Token(Token = "0x2000020")]
public interface IRadioButton
{
	[Token(Token = "0x17000029")]
	bool Value
	{
		[Token(Token = "0x6000122")]
		get;
		[Token(Token = "0x6000123")]
		set;
	}

	[Token(Token = "0x1700002A")]
	string name
	{
		[Token(Token = "0x6000124")]
		get;
		[Token(Token = "0x6000125")]
		set;
	}
}
[Token(Token = "0x2000021")]
public class RadioBtnGroup
{
	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<RadioBtnGroup> groups;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int groupID;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<IRadioButton> buttons;

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x1A29118", Offset = "0x1A29118", VA = "0x1A29118")]
	public RadioBtnGroup(int id)
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x1A2920C", Offset = "0x1A2920C", VA = "0x1A2920C", Slot = "1")]
	~RadioBtnGroup()
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x1A292EC", Offset = "0x1A292EC", VA = "0x1A292EC")]
	public static IRadioButton GetSelected(GameObject go)
	{
		return null;
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x1A29378", Offset = "0x1A29378", VA = "0x1A29378")]
	public static IRadioButton GetSelected(int id)
	{
		return null;
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x1A295D4", Offset = "0x1A295D4", VA = "0x1A295D4")]
	public static RadioBtnGroup GetGroup(int id)
	{
		return null;
	}
}
[Token(Token = "0x2000022")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x768D00", Offset = "0x768D00")]
public class UIRadioBtn : AutoSpriteControlBase, IRadioButton
{
	[Token(Token = "0x2000176")]
	protected enum CONTROL_STATE
	{
		[Token(Token = "0x4000985")]
		True,
		[Token(Token = "0x4000986")]
		False,
		[Token(Token = "0x4000987")]
		Disabled,
		[Token(Token = "0x4000988")]
		Over,
		[Token(Token = "0x4000989")]
		Active
	}

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
	private CONTROL_STATE state;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	private CONTROL_STATE layerState;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
	protected bool btnValue;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x315")]
	public bool useParentForGrouping;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x316")]
	public bool useStateDrivenTextColor;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public Color selectedColor;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	public Color unselectedColor;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	public int radioGroup;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	protected RadioBtnGroup group;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	public bool defaultValue;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x349")]
	protected bool stateChangeWhileDeactivated;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	[HideInInspector]
	public TextureAnim[] states;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	[HideInInspector]
	public string[] stateLabels;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	[HideInInspector]
	public EZTransitionList[] transitions;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	private EZTransition prevTransition;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	public SpriteRoot[] layers;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	public bool allowReplacementOfMethodScript;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	public MonoBehaviour scriptWithMethodToInvoke;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	public string methodToInvoke;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	public POINTER_INFO.INPUT_EVENT whenToInvoke;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x394")]
	public float delay;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	public AudioSource soundToPlay;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	public bool disableHoverEffect;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	protected int[,] stateIndices;

	[Token(Token = "0x1700002B")]
	public override bool controlIsEnabled
	{
		[Token(Token = "0x600012C")]
		[Address(RVA = "0x1969478", Offset = "0x1969478", VA = "0x1969478", Slot = "177")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600012D")]
		[Address(RVA = "0x1969480", Offset = "0x1969480", VA = "0x1969480", Slot = "178")]
		set
		{
		}
	}

	[Token(Token = "0x1700002C")]
	public virtual bool Value
	{
		[Token(Token = "0x600012E")]
		[Address(RVA = "0x19695C4", Offset = "0x19695C4", VA = "0x19695C4", Slot = "206")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600012F")]
		[Address(RVA = "0x1965B4C", Offset = "0x1965B4C", VA = "0x1965B4C", Slot = "207")]
		set
		{
		}
	}

	[Token(Token = "0x1700002D")]
	public override TextureAnim[] States
	{
		[Token(Token = "0x6000131")]
		[Address(RVA = "0x1969714", Offset = "0x1969714", VA = "0x1969714", Slot = "79")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000132")]
		[Address(RVA = "0x196971C", Offset = "0x196971C", VA = "0x196971C", Slot = "80")]
		set
		{
		}
	}

	[Token(Token = "0x1700002E")]
	public override EZTransitionList[] Transitions
	{
		[Token(Token = "0x6000136")]
		[Address(RVA = "0x196985C", Offset = "0x196985C", VA = "0x196985C", Slot = "197")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000137")]
		[Address(RVA = "0x1969864", Offset = "0x1969864", VA = "0x1969864", Slot = "198")]
		set
		{
		}
	}

	[Token(Token = "0x1700002F")]
	public override CSpriteFrame DefaultFrame
	{
		[Token(Token = "0x6000138")]
		[Address(RVA = "0x1969874", Offset = "0x1969874", VA = "0x1969874", Slot = "81")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000030")]
	public override TextureAnim DefaultState
	{
		[Token(Token = "0x6000139")]
		[Address(RVA = "0x1969930", Offset = "0x1969930", VA = "0x1969930", Slot = "82")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000031")]
	public override string Text
	{
		[Token(Token = "0x600014C")]
		[Address(RVA = "0x196A280", Offset = "0x196A280", VA = "0x196A280", Slot = "164")]
		get
		{
			return null;
		}
		[Token(Token = "0x600014D")]
		[Address(RVA = "0x196A288", Offset = "0x196A288", VA = "0x196A288", Slot = "165")]
		set
		{
		}
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x19695CC", Offset = "0x19695CC", VA = "0x19695CC", Slot = "47")]
	public override void SetState(int index)
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0x196972C", Offset = "0x196972C", VA = "0x196972C", Slot = "199")]
	public override string GetStateLabel(int index)
	{
		return null;
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x1969768", Offset = "0x1969768", VA = "0x1969768", Slot = "200")]
	public override void SetStateLabel(int index, string label)
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x1969814", Offset = "0x1969814", VA = "0x1969814", Slot = "196")]
	public override EZTransitionList GetTransitions(int index)
	{
		return null;
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x19668F4", Offset = "0x19668F4", VA = "0x19668F4", Slot = "191")]
	public override void OnInput(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0x1969AD8", Offset = "0x1969AD8", VA = "0x1969AD8", Slot = "16")]
	public override void Copy(SpriteRoot s)
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x1966DE8", Offset = "0x1966DE8", VA = "0x1966DE8", Slot = "170")]
	public override void Copy(SpriteRoot s, ControlCopyFlags flags)
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x1969AEC", Offset = "0x1969AEC", VA = "0x1969AEC", Slot = "21")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x1969B78", Offset = "0x1969B78", VA = "0x1969B78")]
	public void SetGroup(GameObject parent)
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x1969CDC", Offset = "0x1969CDC", VA = "0x1969CDC")]
	public void SetGroup(Transform parent)
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x1969BC0", Offset = "0x1969BC0", VA = "0x1969BC0")]
	public void SetGroup(int groupID)
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x1969EF4", Offset = "0x1969EF4", VA = "0x1969EF4", Slot = "12")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x1965D10", Offset = "0x1965D10", VA = "0x1965D10", Slot = "13")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x1969D1C", Offset = "0x1969D1C", VA = "0x1969D1C")]
	protected void PopOtherButtonsInGroup()
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x1969F20", Offset = "0x1969F20", VA = "0x1969F20", Slot = "208")]
	protected virtual void SetValue(bool val)
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x1969F38", Offset = "0x1969F38", VA = "0x1969F38", Slot = "209")]
	protected virtual void SetValue(bool val, bool suppressTransition)
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x1969FCC", Offset = "0x1969FCC", VA = "0x1969FCC", Slot = "210")]
	public virtual void SetButtonState()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x1969FE0", Offset = "0x1969FE0", VA = "0x1969FE0", Slot = "211")]
	protected virtual void SetButtonState(bool suppressTransition)
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x1969988", Offset = "0x1969988", VA = "0x1969988")]
	protected void SetLayerState(CONTROL_STATE s)
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x196A118", Offset = "0x196A118", VA = "0x196A118")]
	protected void StartTransition(int newState, int prevState)
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x196A23C", Offset = "0x196A23C", VA = "0x196A23C", Slot = "19")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x19694A0", Offset = "0x19694A0", VA = "0x19694A0")]
	protected void DisableMe()
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x196A418", Offset = "0x196A418", VA = "0x196A418", Slot = "17")]
	public override void InitUVs()
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0x196A4B4", Offset = "0x196A4B4", VA = "0x196A4B4", Slot = "194")]
	public override void DrawPreTransitionUI(int selState, IGUIScriptSelector gui)
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x196A58C", Offset = "0x196A58C", VA = "0x196A58C")]
	public static UIRadioBtn Create(string name, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x196A6D8", Offset = "0x196A6D8", VA = "0x196A6D8")]
	public static UIRadioBtn Create(string name, Vector3 pos, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x1967238", Offset = "0x1967238", VA = "0x1967238")]
	public UIRadioBtn()
	{
	}

	[SpecialName]
	[Token(Token = "0x6000153")]
	[Address(RVA = "0x196A86C", Offset = "0x196A86C", VA = "0x196A86C", Slot = "204")]
	private string IRadioButton.get_name()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x6000154")]
	[Address(RVA = "0x196A874", Offset = "0x196A874", VA = "0x196A874", Slot = "205")]
	private void IRadioButton.set_name(string value)
	{
	}
}
[Token(Token = "0x2000023")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x768D38", Offset = "0x768D38")]
public class UIRadioBtn3D : ControlBase, IRadioButton
{
	[Token(Token = "0x2000177")]
	protected enum CONTROL_STATE
	{
		[Token(Token = "0x400098B")]
		True,
		[Token(Token = "0x400098C")]
		False,
		[Token(Token = "0x400098D")]
		Disabled
	}

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private CONTROL_STATE state;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected bool btnValue;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	public bool useParentForGrouping;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public int radioGroup;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected RadioBtnGroup group;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool defaultValue;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	protected bool stateChangeWhileDeactivated;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected string[] states;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[HideInInspector]
	public EZTransitionList[] transitions;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private EZTransition prevTransition;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[HideInInspector]
	public string[] stateLabels;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public MonoBehaviour scriptWithMethodToInvoke;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public string methodToInvoke;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public POINTER_INFO.INPUT_EVENT whenToInvoke;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float delay;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AudioSource soundToPlay;

	[Token(Token = "0x17000032")]
	public override bool controlIsEnabled
	{
		[Token(Token = "0x6000155")]
		[Address(RVA = "0x196A87C", Offset = "0x196A87C", VA = "0x196A87C", Slot = "89")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000156")]
		[Address(RVA = "0x196A884", Offset = "0x196A884", VA = "0x196A884", Slot = "90")]
		set
		{
		}
	}

	[Token(Token = "0x17000033")]
	public bool Value
	{
		[Token(Token = "0x6000157")]
		[Address(RVA = "0x196A904", Offset = "0x196A904", VA = "0x196A904", Slot = "122")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000158")]
		[Address(RVA = "0x196A90C", Offset = "0x196A90C", VA = "0x196A90C", Slot = "123")]
		set
		{
		}
	}

	[Token(Token = "0x17000034")]
	public override string[] States
	{
		[Token(Token = "0x6000159")]
		[Address(RVA = "0x196AB34", Offset = "0x196AB34", VA = "0x196AB34", Slot = "109")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000035")]
	public override EZTransitionList[] Transitions
	{
		[Token(Token = "0x600015B")]
		[Address(RVA = "0x196AB84", Offset = "0x196AB84", VA = "0x196AB84", Slot = "115")]
		get
		{
			return null;
		}
		[Token(Token = "0x600015C")]
		[Address(RVA = "0x196AB8C", Offset = "0x196AB8C", VA = "0x196AB8C", Slot = "116")]
		set
		{
		}
	}

	[Token(Token = "0x17000036")]
	public override string Text
	{
		[Token(Token = "0x600016C")]
		[Address(RVA = "0x196B630", Offset = "0x196B630", VA = "0x196B630", Slot = "79")]
		get
		{
			return null;
		}
		[Token(Token = "0x600016D")]
		[Address(RVA = "0x196B638", Offset = "0x196B638", VA = "0x196B638", Slot = "80")]
		set
		{
		}
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x196AB3C", Offset = "0x196AB3C", VA = "0x196AB3C", Slot = "114")]
	public override EZTransitionList GetTransitions(int index)
	{
		return null;
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x196AB94", Offset = "0x196AB94", VA = "0x196AB94", Slot = "117")]
	public override string GetStateLabel(int index)
	{
		return null;
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x196ABD0", Offset = "0x196ABD0", VA = "0x196ABD0", Slot = "118")]
	public override void SetStateLabel(int index, string label)
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x196AC7C", Offset = "0x196AC7C", VA = "0x196AC7C", Slot = "103")]
	public override void OnInput(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x196ADD0", Offset = "0x196ADD0", VA = "0x196ADD0", Slot = "104")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x196AE14", Offset = "0x196AE14", VA = "0x196AE14", Slot = "106")]
	public override void OnDestroy()
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x196AEA0", Offset = "0x196AEA0", VA = "0x196AEA0")]
	public void SetGroup(GameObject parent)
	{
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x196AEE8", Offset = "0x196AEE8", VA = "0x196AEE8")]
	public void SetGroup(int groupID)
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x196B004", Offset = "0x196B004", VA = "0x196B004", Slot = "85")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x196B030", Offset = "0x196B030", VA = "0x196B030", Slot = "86")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x196B308", Offset = "0x196B308", VA = "0x196B308", Slot = "107")]
	public override void Copy(IControl c)
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x196B31C", Offset = "0x196B31C", VA = "0x196B31C", Slot = "108")]
	public override void Copy(IControl c, ControlCopyFlags flags)
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x196A98C", Offset = "0x196A98C", VA = "0x196A98C")]
	protected void PopOtherButtonsInGroup()
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x196B488", Offset = "0x196B488", VA = "0x196B488", Slot = "126")]
	protected virtual void SetButtonState()
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x196B53C", Offset = "0x196B53C", VA = "0x196B53C")]
	protected void StartTransition(int newState, int prevState)
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x196A8A4", Offset = "0x196A8A4", VA = "0x196A8A4")]
	protected void DisableMe()
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x196B7C8", Offset = "0x196B7C8", VA = "0x196B7C8", Slot = "112")]
	public override void DrawPreTransitionUI(int selState, IGUIScriptSelector gui)
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x196B89C", Offset = "0x196B89C", VA = "0x196B89C")]
	public static UIRadioBtn3D Create(string name, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x196B9E8", Offset = "0x196B9E8", VA = "0x196B9E8")]
	public static UIRadioBtn3D Create(string name, Vector3 pos, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x196BB7C", Offset = "0x196BB7C", VA = "0x196BB7C")]
	public UIRadioBtn3D()
	{
	}

	[SpecialName]
	[Token(Token = "0x6000172")]
	[Address(RVA = "0x196C1D0", Offset = "0x196C1D0", VA = "0x196C1D0", Slot = "124")]
	private string IRadioButton.get_name()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x6000173")]
	[Address(RVA = "0x196C1D8", Offset = "0x196C1D8", VA = "0x196C1D8", Slot = "125")]
	private void IRadioButton.set_name(string value)
	{
	}
}
[Token(Token = "0x2000024")]
public interface IUIListObject : IUIObject, IEZDragDrop
{
	[Token(Token = "0x17000037")]
	Vector2 TopLeftEdge
	{
		[Token(Token = "0x6000176")]
		get;
	}

	[Token(Token = "0x17000038")]
	Vector2 BottomRightEdge
	{
		[Token(Token = "0x6000177")]
		get;
	}

	[Token(Token = "0x17000039")]
	bool Managed
	{
		[Token(Token = "0x6000179")]
		get;
	}

	[Token(Token = "0x1700003A")]
	Rect3D ClippingRect
	{
		[Token(Token = "0x600017A")]
		get;
		[Token(Token = "0x600017B")]
		set;
	}

	[Token(Token = "0x1700003B")]
	bool Clipped
	{
		[Token(Token = "0x600017C")]
		get;
		[Token(Token = "0x600017D")]
		set;
	}

	[Token(Token = "0x1700003C")]
	int Index
	{
		[Token(Token = "0x6000182")]
		get;
		[Token(Token = "0x6000183")]
		set;
	}

	[Token(Token = "0x1700003D")]
	string Text
	{
		[Token(Token = "0x6000184")]
		get;
		[Token(Token = "0x6000185")]
		set;
	}

	[Token(Token = "0x1700003E")]
	UITextBase TextObj
	{
		[Token(Token = "0x6000186")]
		get;
	}

	[Token(Token = "0x1700003F")]
	bool selected
	{
		[Token(Token = "0x6000187")]
		get;
		[Token(Token = "0x6000188")]
		set;
	}

	[Token(Token = "0x17000040")]
	Camera RenderCamera
	{
		[Token(Token = "0x600018A")]
		get;
		[Token(Token = "0x600018B")]
		set;
	}

	[Token(Token = "0x6000174")]
	bool IsContainer();

	[Token(Token = "0x6000175")]
	void FindOuterEdges();

	[Token(Token = "0x6000178")]
	void Hide(bool tf);

	[Token(Token = "0x600017E")]
	void Unclip();

	[Token(Token = "0x600017F")]
	void UpdateCollider();

	[Token(Token = "0x6000180")]
	void SetList(UIScrollList c);

	[Token(Token = "0x6000181")]
	UIScrollList GetScrollList();

	[Token(Token = "0x6000189")]
	void Delete();

	[Token(Token = "0x600018C")]
	void UpdateCamera();
}
[Serializable]
[Token(Token = "0x2000025")]
public class PrefabListItem
{
	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject item;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string itemText;

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x14D0668", Offset = "0x14D0668", VA = "0x14D0668")]
	public PrefabListItem()
	{
	}
}
[Token(Token = "0x2000026")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x768D70", Offset = "0x768D70")]
public class UIScrollList : MonoBehaviour, IUIObject, IEZDragDrop
{
	[Token(Token = "0x2000178")]
	public enum ORIENTATION
	{
		[Token(Token = "0x400098F")]
		HORIZONTAL,
		[Token(Token = "0x4000990")]
		VERTICAL
	}

	[Token(Token = "0x2000179")]
	public enum DIRECTION
	{
		[Token(Token = "0x4000992")]
		TtoB_LtoR,
		[Token(Token = "0x4000993")]
		BtoT_RtoL
	}

	[Token(Token = "0x200017A")]
	public enum ALIGNMENT
	{
		[Token(Token = "0x4000995")]
		LEFT_TOP,
		[Token(Token = "0x4000996")]
		CENTER,
		[Token(Token = "0x4000997")]
		RIGHT_BOTTOM
	}

	[Token(Token = "0x200017B")]
	protected delegate float ItemAlignmentDel(IUIListObject item);

	[Token(Token = "0x200017C")]
	protected delegate bool SnapCoordProc(float val);

	[Token(Token = "0x200017D")]
	public delegate void ItemSnappedDelegate(IUIListObject item);

	[Token(Token = "0x200017E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769638", Offset = "0x769638")]
	private sealed class <ProcessClearQueue>d__171 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIScrollList <>4__this;

		[Token(Token = "0x1700020D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EBC")]
			[Address(RVA = "0x1BB2574", Offset = "0x1BB2574", VA = "0x1BB2574", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EBE")]
			[Address(RVA = "0x1BB25BC", Offset = "0x1BB25BC", VA = "0x1BB25BC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0x1BB238C", Offset = "0x1BB238C", VA = "0x1BB238C")]
		[DebuggerHidden]
		public <ProcessClearQueue>d__171(int <>1__state)
		{
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0x1BB23B8", Offset = "0x1BB23B8", VA = "0x1BB23B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0x1BB23BC", Offset = "0x1BB23BC", VA = "0x1BB23BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0x1BB257C", Offset = "0x1BB257C", VA = "0x1BB257C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool touchScroll;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float scrollWheelFactor;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float scrollDecelCoef;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool snap;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minSnapDuration;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public EZAnimation.EASING_TYPE snapEasing;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UISlider slider;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ORIENTATION orientation;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public DIRECTION direction;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ALIGNMENT alignment;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector2 viewableArea;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected Vector2 viewableAreaActual;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool unitsInPixels;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Camera renderCamera;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected Rect3D clientClippingRect;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float itemSpacing;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	protected float itemSpacingActual;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool spacingAtEnds;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float extraEndSpacing;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected float extraEndSpacingActual;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public bool activateWhenAdding;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
	public bool clipContents;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAE")]
	public bool clipWhenMoving;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAF")]
	public bool positionItemsImmediately;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float dragThreshold;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject[] sceneItems;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public PrefabListItem[] prefabItems;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public MonoBehaviour scriptWithMethodToInvoke;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public string methodToInvokeOnSelect;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public SpriteManager manager;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public bool detargetOnDisable;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public EZAnimation.EASING_TYPE positionEasing;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float positionEaseDuration;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float positionEaseDelay;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool blockInputWhileEasing;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public int clearChunkSize;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	protected bool doItemEasing;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
	protected bool doPosEasing;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	protected List<EZAnimation> itemEasers;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	protected EZAnimation scrollPosAnim;

	[NonSerialized]
	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[HideInInspector]
	public bool repositionOnEnable;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	protected float contentExtents;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	protected IUIListObject selectedItem;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	protected IUIObject lastClickedControl;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	protected float scrollPos;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	protected GameObject mover;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	protected List<IUIListObject> items;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	protected List<IUIListObject> visibleItems;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	protected List<IUIListObject> tempVisItems;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	protected bool m_controlIsEnabled;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	protected IUIContainer container;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	protected EZInputDelegate inputDelegate;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	protected EZValueChangedDelegate changeDelegate;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	protected ItemSnappedDelegate itemSnappedDel;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	protected Vector3 cachedPos;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	protected Quaternion cachedRot;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
	protected Vector3 cachedScale;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	protected bool m_started;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A1")]
	protected bool m_awake;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	protected List<IUIListObject> newItems;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	protected bool itemsInserted;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	protected Queue<IUIListObject> clearQueue;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	protected bool isScrolling;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C1")]
	protected bool noTouch;

	[Token(Token = "0x400010F")]
	protected const float reboundSpeed = 1f;

	[Token(Token = "0x4000110")]
	protected const float overscrollAllowance = 0.5f;

	[Token(Token = "0x4000111")]
	protected const float lowPassKernelWidthInSeconds = 0.045f;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	protected float lowPassFilterFactor;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private float scrollInertia;

	[Token(Token = "0x4000114")]
	protected const float backgroundColliderOffset = 0.01f;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	protected float scrollMax;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private float scrollDelta;

	[Token(Token = "0x4000117")]
	private const float scrollStopThreshold = 0.0001f;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private float scrollStopThresholdLog;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private float lastTime;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	private float timeDelta;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private float inertiaLerpInterval;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	private float inertiaLerpTime;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private float amtOfPlay;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	private float autoScrollDuration;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private float autoScrollStart;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	private float autoScrollPos;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private float autoScrollDelta;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	private float autoScrollTime;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private bool autoScrolling;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x201")]
	private bool listMoved;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private EZAnimation.Interpolator autoScrollInterpolator;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private IUIListObject snappedItem;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	private float localUnitsPerPixel;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	protected Collider _collider;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	protected EZDragDropDelegate dragDropDelegate;

	[Token(Token = "0x17000041")]
	public float ScrollPosition
	{
		[Token(Token = "0x6000198")]
		[Address(RVA = "0x1972C90", Offset = "0x1972C90", VA = "0x1972C90")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000199")]
		[Address(RVA = "0x1972C98", Offset = "0x1972C98", VA = "0x1972C98")]
		set
		{
		}
	}

	[Token(Token = "0x17000042")]
	public IUIListObject SnappedItem
	{
		[Token(Token = "0x600019A")]
		[Address(RVA = "0x1972CAC", Offset = "0x1972CAC", VA = "0x1972CAC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000043")]
	public int SnappedItemIndex
	{
		[Token(Token = "0x600019B")]
		[Address(RVA = "0x1972D54", Offset = "0x1972D54", VA = "0x1972D54")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000044")]
	public float ContentExtents
	{
		[Token(Token = "0x60001C4")]
		[Address(RVA = "0x1978264", Offset = "0x1978264", VA = "0x1978264")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000045")]
	public float UnviewableArea
	{
		[Token(Token = "0x60001C5")]
		[Address(RVA = "0x197826C", Offset = "0x197826C", VA = "0x197826C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000046")]
	public IUIListObject SelectedItem
	{
		[Token(Token = "0x60001C6")]
		[Address(RVA = "0x1978274", Offset = "0x1978274", VA = "0x1978274")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001C7")]
		[Address(RVA = "0x197827C", Offset = "0x197827C", VA = "0x197827C")]
		set
		{
		}
	}

	[Token(Token = "0x17000047")]
	public IUIObject LastClickedControl
	{
		[Token(Token = "0x60001C8")]
		[Address(RVA = "0x1978418", Offset = "0x1978418", VA = "0x1978418")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000048")]
	public int Count
	{
		[Token(Token = "0x60001CA")]
		[Address(RVA = "0x197867C", Offset = "0x197867C", VA = "0x197867C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000049")]
	public bool controlIsEnabled
	{
		[Token(Token = "0x60001D8")]
		[Address(RVA = "0x1979D1C", Offset = "0x1979D1C", VA = "0x1979D1C", Slot = "4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001D9")]
		[Address(RVA = "0x1979D24", Offset = "0x1979D24", VA = "0x1979D24", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x1700004A")]
	public virtual bool DetargetOnDisable
	{
		[Token(Token = "0x60001DA")]
		[Address(RVA = "0x1979E4C", Offset = "0x1979E4C", VA = "0x1979E4C", Slot = "53")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001DB")]
		[Address(RVA = "0x1979E5C", Offset = "0x1979E5C", VA = "0x1979E5C", Slot = "54")]
		set
		{
		}
	}

	[Token(Token = "0x1700004B")]
	public virtual IUIContainer Container
	{
		[Token(Token = "0x60001DD")]
		[Address(RVA = "0x1979E74", Offset = "0x1979E74", VA = "0x1979E74", Slot = "55")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001DE")]
		[Address(RVA = "0x1979E7C", Offset = "0x1979E7C", VA = "0x1979E7C", Slot = "56")]
		set
		{
		}
	}

	[Token(Token = "0x1700004C")]
	public object Data
	{
		[Token(Token = "0x60001E9")]
		[Address(RVA = "0x197A4A4", Offset = "0x197A4A4", VA = "0x197A4A4", Slot = "24")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001EA")]
		[Address(RVA = "0x197A4AC", Offset = "0x197A4AC", VA = "0x197A4AC", Slot = "25")]
		set
		{
		}
	}

	[Token(Token = "0x1700004D")]
	public bool IsDraggable
	{
		[Token(Token = "0x60001EC")]
		[Address(RVA = "0x197A4B8", Offset = "0x197A4B8", VA = "0x197A4B8", Slot = "26")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001ED")]
		[Address(RVA = "0x197A4C0", Offset = "0x197A4C0", VA = "0x197A4C0", Slot = "27")]
		set
		{
		}
	}

	[Token(Token = "0x1700004E")]
	public LayerMask DropMask
	{
		[Token(Token = "0x60001EE")]
		[Address(RVA = "0x197A4C4", Offset = "0x197A4C4", VA = "0x197A4C4", Slot = "28")]
		get
		{
			return default(LayerMask);
		}
		[Token(Token = "0x60001EF")]
		[Address(RVA = "0x197A4E4", Offset = "0x197A4E4", VA = "0x197A4E4", Slot = "29")]
		set
		{
		}
	}

	[Token(Token = "0x1700004F")]
	public float DragOffset
	{
		[Token(Token = "0x60001F0")]
		[Address(RVA = "0x197A4E8", Offset = "0x197A4E8", VA = "0x197A4E8", Slot = "36")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001F1")]
		[Address(RVA = "0x197A4F0", Offset = "0x197A4F0", VA = "0x197A4F0", Slot = "37")]
		set
		{
		}
	}

	[Token(Token = "0x17000050")]
	public EZAnimation.EASING_TYPE CancelDragEasing
	{
		[Token(Token = "0x60001F2")]
		[Address(RVA = "0x197A4F4", Offset = "0x197A4F4", VA = "0x197A4F4", Slot = "38")]
		get
		{
			return default(EZAnimation.EASING_TYPE);
		}
		[Token(Token = "0x60001F3")]
		[Address(RVA = "0x197A4FC", Offset = "0x197A4FC", VA = "0x197A4FC", Slot = "39")]
		set
		{
		}
	}

	[Token(Token = "0x17000051")]
	public float CancelDragDuration
	{
		[Token(Token = "0x60001F4")]
		[Address(RVA = "0x197A500", Offset = "0x197A500", VA = "0x197A500", Slot = "40")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60001F5")]
		[Address(RVA = "0x197A508", Offset = "0x197A508", VA = "0x197A508", Slot = "41")]
		set
		{
		}
	}

	[Token(Token = "0x17000052")]
	public bool IsDragging
	{
		[Token(Token = "0x60001F6")]
		[Address(RVA = "0x197A50C", Offset = "0x197A50C", VA = "0x197A50C", Slot = "30")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001F7")]
		[Address(RVA = "0x197A514", Offset = "0x197A514", VA = "0x197A514", Slot = "31")]
		set
		{
		}
	}

	[Token(Token = "0x17000053")]
	public GameObject DropTarget
	{
		[Token(Token = "0x60001F8")]
		[Address(RVA = "0x197A518", Offset = "0x197A518", VA = "0x197A518", Slot = "32")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001F9")]
		[Address(RVA = "0x197A520", Offset = "0x197A520", VA = "0x197A520", Slot = "33")]
		set
		{
		}
	}

	[Token(Token = "0x17000054")]
	public bool DropHandled
	{
		[Token(Token = "0x60001FA")]
		[Address(RVA = "0x197A524", Offset = "0x197A524", VA = "0x197A524", Slot = "34")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001FB")]
		[Address(RVA = "0x197A52C", Offset = "0x197A52C", VA = "0x197A52C", Slot = "35")]
		set
		{
		}
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x196CA24", Offset = "0x196CA24", VA = "0x196CA24")]
	protected void Awake()
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x196CA98", Offset = "0x196CA98", VA = "0x196CA98")]
	protected void Start()
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x196DCB0", Offset = "0x196DCB0", VA = "0x196DCB0")]
	public void UpdateCamera()
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x196D1BC", Offset = "0x196D1BC", VA = "0x196D1BC")]
	public void SetupCameraAndSizes()
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x196DEB8", Offset = "0x196DEB8", VA = "0x196DEB8")]
	protected void CalcScreenToWorldUnits()
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x196D668", Offset = "0x196D668", VA = "0x196D668")]
	protected void CalcClippingRect()
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x196DFEC", Offset = "0x196DFEC", VA = "0x196DFEC")]
	public void SliderMoved(IUIObject slider)
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x196E308", Offset = "0x196E308", VA = "0x196E308")]
	public void SliderInputDel(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x196E12C", Offset = "0x196E12C", VA = "0x196E12C")]
	protected void ScrollListTo_Internal(float pos)
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x1972C7C", Offset = "0x1972C7C", VA = "0x1972C7C")]
	public void ScrollListTo(float pos)
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x1972E10", Offset = "0x1972E10", VA = "0x1972E10")]
	public void ScrollToItem(IUIListObject item, float scrollTime, EZAnimation.EASING_TYPE easing)
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x1973E14", Offset = "0x1973E14", VA = "0x1973E14")]
	public void ScrollToItem(int index, float scrollTime, EZAnimation.EASING_TYPE easing)
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x1973ECC", Offset = "0x1973ECC", VA = "0x1973ECC")]
	public void ScrollToItem(IUIListObject item, float scrollTime)
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x1973ED4", Offset = "0x1973ED4", VA = "0x1973ED4")]
	public void ScrollToItem(int index, float scrollTime)
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x1973EDC", Offset = "0x1973EDC", VA = "0x1973EDC")]
	public void SetViewableAreaPixelDimensions(Camera cam, int width, int height)
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x1974038", Offset = "0x1974038", VA = "0x1974038")]
	public void InsertItem(IUIListObject item, int position)
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x1974C20", Offset = "0x1974C20", VA = "0x1974C20")]
	public void InsertItem(IUIListObject item, int position, bool doEasing)
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x1974C2C", Offset = "0x1974C2C", VA = "0x1974C2C")]
	public void InsertItem(IUIListObject item, int position, string text)
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x1974044", Offset = "0x1974044", VA = "0x1974044")]
	public void InsertItem(IUIListObject item, int position, string text, bool doEasing)
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x197300C", Offset = "0x197300C", VA = "0x197300C")]
	protected void PositionNewItems()
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x196D930", Offset = "0x196D930", VA = "0x196D930")]
	public void AddItem(GameObject itemGO)
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x1974F1C", Offset = "0x1974F1C", VA = "0x1974F1C")]
	public void AddItem(IUIListObject item)
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x1974E90", Offset = "0x1974E90", VA = "0x1974E90")]
	public void AddItem(IUIListObject item, string text)
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x1974F24", Offset = "0x1974F24", VA = "0x1974F24")]
	public IUIListObject CreateItem(GameObject prefab)
	{
		return null;
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x196DC24", Offset = "0x196DC24", VA = "0x196DC24")]
	public IUIListObject CreateItem(GameObject prefab, string text)
	{
		return null;
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x1974FB4", Offset = "0x1974FB4", VA = "0x1974FB4")]
	public IUIListObject CreateItem(GameObject prefab, int position, bool doEasing)
	{
		return null;
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x1975448", Offset = "0x1975448", VA = "0x1975448")]
	public IUIListObject CreateItem(GameObject prefab, int position)
	{
		return null;
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x1974FAC", Offset = "0x1974FAC", VA = "0x1974FAC")]
	public IUIListObject CreateItem(GameObject prefab, int position, string text)
	{
		return null;
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x1974FC0", Offset = "0x1974FC0", VA = "0x1974FC0")]
	public IUIListObject CreateItem(GameObject prefab, int position, string text, bool doEasing)
	{
		return null;
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x1974C34", Offset = "0x1974C34", VA = "0x1974C34")]
	protected void UpdateContentExtents(float change)
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x1975454", Offset = "0x1975454", VA = "0x1975454")]
	protected float ScrollPosInterpolator(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x1975540", Offset = "0x1975540", VA = "0x1975540")]
	protected float GetYCentered(IUIListObject item)
	{
		return default(float);
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x1975548", Offset = "0x1975548", VA = "0x1975548")]
	protected float GetYAlignTop(IUIListObject item)
	{
		return default(float);
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x197561C", Offset = "0x197561C", VA = "0x197561C")]
	protected float GetYAlignBottom(IUIListObject item)
	{
		return default(float);
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x19756F0", Offset = "0x19756F0", VA = "0x19756F0")]
	protected float GetXCentered(IUIListObject item)
	{
		return default(float);
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x19756F8", Offset = "0x19756F8", VA = "0x19756F8")]
	protected float GetXAlignLeft(IUIListObject item)
	{
		return default(float);
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x19757CC", Offset = "0x19757CC", VA = "0x19757CC")]
	protected float GetXAlignRight(IUIListObject item)
	{
		return default(float);
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x19758A0", Offset = "0x19758A0", VA = "0x19758A0")]
	public void PositionItems()
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x196DCDC", Offset = "0x196DCDC", VA = "0x196DCDC")]
	public void RepositionItems()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x1975A7C", Offset = "0x1975A7C", VA = "0x1975A7C")]
	protected void PositionHorizontally(bool updateExtents)
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x197699C", Offset = "0x197699C", VA = "0x197699C")]
	protected void PositionVertically(bool updateExtents)
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x19778B4", Offset = "0x19778B4", VA = "0x19778B4")]
	protected void OnPosEasingDone(EZAnimation anim)
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x196EA6C", Offset = "0x196EA6C", VA = "0x196EA6C")]
	protected void ClipItems()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x197798C", Offset = "0x197798C", VA = "0x197798C")]
	public void DidSelect(IUIListObject item)
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x1977AE0", Offset = "0x1977AE0", VA = "0x1977AE0")]
	public void DidClick(IUIObject item)
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x1977BAC", Offset = "0x1977BAC", VA = "0x1977BAC")]
	public void ListDragged(POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x1977EBC", Offset = "0x1977EBC", VA = "0x1977EBC")]
	public void ScrollWheel(float amt)
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x1977F1C", Offset = "0x1977F1C", VA = "0x1977F1C")]
	public void PointerReleased()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x1977F70", Offset = "0x1977F70", VA = "0x1977F70")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x1977FBC", Offset = "0x1977FBC", VA = "0x1977FBC", Slot = "52")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x1978420", Offset = "0x1978420", VA = "0x1978420")]
	public void SetSelectedItem(int index)
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x1972CC4", Offset = "0x1972CC4", VA = "0x1972CC4")]
	public IUIListObject GetItem(int index)
	{
		return null;
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x19786C8", Offset = "0x19786C8", VA = "0x19786C8")]
	public void RemoveItem(int index, bool destroy)
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x19786D4", Offset = "0x19786D4", VA = "0x19786D4")]
	public void RemoveItem(int index, bool destroy, bool doEasing)
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x1978E28", Offset = "0x1978E28", VA = "0x1978E28")]
	public void RemoveItem(IUIListObject item, bool destroy)
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x1978E34", Offset = "0x1978E34", VA = "0x1978E34")]
	public void RemoveItem(IUIListObject item, bool destroy, bool doEasing)
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x1978F08", Offset = "0x1978F08", VA = "0x1978F08")]
	public void ClearList(bool destroy)
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x1979368", Offset = "0x1979368", VA = "0x1979368")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76A7C8", Offset = "0x76A7C8")]
	protected IEnumerator ProcessClearQueue()
	{
		return null;
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x197811C", Offset = "0x197811C", VA = "0x197811C")]
	protected void ProcessClearQueueImmediate()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x19793E0", Offset = "0x19793E0", VA = "0x19793E0", Slot = "17")]
	public void OnInput(POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x1979714", Offset = "0x1979714", VA = "0x1979714")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x196E338", Offset = "0x196E338", VA = "0x196E338")]
	protected void CalcSnapItem()
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x1979B78", Offset = "0x1979B78", VA = "0x1979B78")]
	protected void AddItemsToContainer()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x19791C0", Offset = "0x19791C0", VA = "0x19791C0")]
	protected void RemoveItemsFromContainer()
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x1979E70", Offset = "0x1979E70", VA = "0x1979E70", Slot = "8")]
	public IUIObject GetControl(ref POINTER_INFO ptr)
	{
		return null;
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x1979EF0", Offset = "0x1979EF0", VA = "0x1979EF0", Slot = "15")]
	public bool RequestContainership(IUIContainer cont)
	{
		return default(bool);
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x197A134", Offset = "0x197A134", VA = "0x197A134", Slot = "16")]
	public bool GotFocus()
	{
		return default(bool);
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x197A13C", Offset = "0x197A13C", VA = "0x197A13C", Slot = "18")]
	public void SetInputDelegate(EZInputDelegate del)
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x197A14C", Offset = "0x197A14C", VA = "0x197A14C", Slot = "19")]
	public void AddInputDelegate(EZInputDelegate del)
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x197A1D8", Offset = "0x197A1D8", VA = "0x197A1D8", Slot = "20")]
	public void RemoveInputDelegate(EZInputDelegate del)
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x197A264", Offset = "0x197A264", VA = "0x197A264", Slot = "21")]
	public void SetValueChangedDelegate(EZValueChangedDelegate del)
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x197A274", Offset = "0x197A274", VA = "0x197A274", Slot = "22")]
	public void AddValueChangedDelegate(EZValueChangedDelegate del)
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x197A300", Offset = "0x197A300", VA = "0x197A300", Slot = "23")]
	public void RemoveValueChangedDelegate(EZValueChangedDelegate del)
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x197A38C", Offset = "0x197A38C", VA = "0x197A38C")]
	public void AddItemSnappedDelegate(ItemSnappedDelegate del)
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x197A418", Offset = "0x197A418", VA = "0x197A418")]
	public void RemoveItemSnappedDelegate(ItemSnappedDelegate del)
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x197A4B0", Offset = "0x197A4B0", VA = "0x197A4B0")]
	public object GetData()
	{
		return null;
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x197A530", Offset = "0x197A530", VA = "0x197A530", Slot = "42")]
	public void DragUpdatePosition(POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x197A534", Offset = "0x197A534", VA = "0x197A534", Slot = "43")]
	public void CancelDrag()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x197A538", Offset = "0x197A538", VA = "0x197A538", Slot = "44")]
	public void OnEZDragDrop_Internal(EZDragDropParams parms)
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x197A57C", Offset = "0x197A57C", VA = "0x197A57C", Slot = "45")]
	public void AddDragDropDelegate(EZDragDropDelegate del)
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x197A608", Offset = "0x197A608", VA = "0x197A608", Slot = "46")]
	public void RemoveDragDropDelegate(EZDragDropDelegate del)
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x197A694", Offset = "0x197A694", VA = "0x197A694", Slot = "47")]
	public void SetDragDropDelegate(EZDragDropDelegate del)
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x197A6A4", Offset = "0x197A6A4", VA = "0x197A6A4", Slot = "48")]
	public void SetDragDropInternalDelegate(EZDragDropHelper.DragDrop_InternalDelegate del)
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x197A6A8", Offset = "0x197A6A8", VA = "0x197A6A8", Slot = "49")]
	public void AddDragDropInternalDelegate(EZDragDropHelper.DragDrop_InternalDelegate del)
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x197A6AC", Offset = "0x197A6AC", VA = "0x197A6AC", Slot = "50")]
	public void RemoveDragDropInternalDelegate(EZDragDropHelper.DragDrop_InternalDelegate del)
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x197A6B0", Offset = "0x197A6B0", VA = "0x197A6B0", Slot = "51")]
	public EZDragDropHelper.DragDrop_InternalDelegate GetDragDropInternalDelegate()
	{
		return null;
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x197A6B8", Offset = "0x197A6B8", VA = "0x197A6B8")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x197AD38", Offset = "0x197AD38", VA = "0x197AD38")]
	public static UIScrollList Create(string name, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x197AE84", Offset = "0x197AE84", VA = "0x197AE84")]
	public static UIScrollList Create(string name, Vector3 pos, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x197B018", Offset = "0x197B018", VA = "0x197B018")]
	public void DrawPreTransitionUI(int selState, IGUIScriptSelector gui)
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x197B0EC", Offset = "0x197B0EC", VA = "0x197B0EC")]
	public UIScrollList()
	{
	}

	[SpecialName]
	[Token(Token = "0x600020B")]
	[Address(RVA = "0x197B358", Offset = "0x197B358", VA = "0x197B358", Slot = "11")]
	private GameObject IUIObject.get_gameObject()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x600020C")]
	[Address(RVA = "0x197B360", Offset = "0x197B360", VA = "0x197B360", Slot = "12")]
	private Transform IUIObject.get_transform()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x600020D")]
	[Address(RVA = "0x197B368", Offset = "0x197B368", VA = "0x197B368", Slot = "14")]
	private string IUIObject.get_name()
	{
		return null;
	}
}
[Token(Token = "0x2000027")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x768DA8", Offset = "0x768DA8")]
public class UISlider : AutoSpriteControlBase
{
	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
	protected float m_value;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	public MonoBehaviour scriptWithMethodToInvoke;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public string methodToInvoke;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public float defaultValue;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
	public float stopKnobFromEdge;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	public Vector3 knobOffset;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x334")]
	public Vector2 knobSize;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33C")]
	public Vector2 knobColliderSizeFactor;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
	public bool disableEmptyBar;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	protected AutoSprite emptySprite;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	protected UIScrollKnob knob;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	[HideInInspector]
	public TextureAnim[] states;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	[HideInInspector]
	public EZTransitionList[] transitions;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	public SpriteRoot[] filledLayers;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	public SpriteRoot[] emptyLayers;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	public SpriteRoot[] knobLayers;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	protected float truncFloor;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x384")]
	protected float truncRange;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	protected int[] filledIndices;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
	protected int[] emptyIndices;

	[Token(Token = "0x17000055")]
	public override bool controlIsEnabled
	{
		[Token(Token = "0x600020E")]
		[Address(RVA = "0x1727CC8", Offset = "0x1727CC8", VA = "0x1727CC8", Slot = "177")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600020F")]
		[Address(RVA = "0x1727CD0", Offset = "0x1727CD0", VA = "0x1727CD0", Slot = "178")]
		set
		{
		}
	}

	[Token(Token = "0x17000056")]
	public float Value
	{
		[Token(Token = "0x6000210")]
		[Address(RVA = "0x1727D98", Offset = "0x1727D98", VA = "0x1727D98")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000211")]
		[Address(RVA = "0x1727DA0", Offset = "0x1727DA0", VA = "0x1727DA0")]
		set
		{
		}
	}

	[Token(Token = "0x17000057")]
	public override TextureAnim[] States
	{
		[Token(Token = "0x6000212")]
		[Address(RVA = "0x1727F14", Offset = "0x1727F14", VA = "0x1727F14", Slot = "79")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000213")]
		[Address(RVA = "0x1727F1C", Offset = "0x1727F1C", VA = "0x1727F1C", Slot = "80")]
		set
		{
		}
	}

	[Token(Token = "0x17000058")]
	public override EZTransitionList[] Transitions
	{
		[Token(Token = "0x6000215")]
		[Address(RVA = "0x1727F74", Offset = "0x1727F74", VA = "0x1727F74", Slot = "197")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000216")]
		[Address(RVA = "0x1727F7C", Offset = "0x1727F7C", VA = "0x1727F7C", Slot = "198")]
		set
		{
		}
	}

	[Token(Token = "0x17000059")]
	public override IUIContainer Container
	{
		[Token(Token = "0x6000226")]
		[Address(RVA = "0x172A300", Offset = "0x172A300", VA = "0x172A300", Slot = "181")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000227")]
		[Address(RVA = "0x172A308", Offset = "0x172A308", VA = "0x172A308", Slot = "182")]
		set
		{
		}
	}

	[Token(Token = "0x1700005A")]
	public override bool Clipped
	{
		[Token(Token = "0x6000229")]
		[Address(RVA = "0x172A770", Offset = "0x172A770", VA = "0x172A770", Slot = "42")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600022A")]
		[Address(RVA = "0x172A778", Offset = "0x172A778", VA = "0x172A778", Slot = "43")]
		set
		{
		}
	}

	[Token(Token = "0x1700005B")]
	public override Rect3D ClippingRect
	{
		[Token(Token = "0x600022B")]
		[Address(RVA = "0x172A888", Offset = "0x172A888", VA = "0x172A888", Slot = "40")]
		get
		{
			return default(Rect3D);
		}
		[Token(Token = "0x600022C")]
		[Address(RVA = "0x172A8D4", Offset = "0x172A8D4", VA = "0x172A8D4", Slot = "41")]
		set
		{
		}
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x1727F2C", Offset = "0x1727F2C", VA = "0x1727F2C", Slot = "196")]
	public override EZTransitionList GetTransitions(int index)
	{
		return null;
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x1727F8C", Offset = "0x1727F8C", VA = "0x1727F8C", Slot = "12")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x1727FB8", Offset = "0x1727FB8", VA = "0x1727FB8", Slot = "13")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x172997C", Offset = "0x172997C", VA = "0x172997C", Slot = "191")]
	public override void OnInput(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x1729ADC", Offset = "0x1729ADC", VA = "0x1729ADC", Slot = "22")]
	public override void SetSize(float width, float height)
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x1729C28", Offset = "0x1729C28", VA = "0x1729C28", Slot = "16")]
	public override void Copy(SpriteRoot s)
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x1729C3C", Offset = "0x1729C3C", VA = "0x1729C3C", Slot = "170")]
	public override void Copy(SpriteRoot s, ControlCopyFlags flags)
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x1729578", Offset = "0x1729578", VA = "0x1729578")]
	protected Vector3 CalcKnobStartPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x1729E40", Offset = "0x1729E40", VA = "0x1729E40", Slot = "17")]
	public override void InitUVs()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x1727DFC", Offset = "0x1727DFC", VA = "0x1727DFC")]
	protected void UpdateValue()
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x172A01C", Offset = "0x172A01C", VA = "0x172A01C")]
	public void ScrollKnobMoved(UIScrollKnob knob, float val)
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x172A0F4", Offset = "0x172A0F4", VA = "0x172A0F4", Slot = "184")]
	public override void SetInputDelegate(EZInputDelegate del)
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x172A1A0", Offset = "0x172A1A0", VA = "0x172A1A0", Slot = "185")]
	public override void AddInputDelegate(EZInputDelegate del)
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x172A24C", Offset = "0x172A24C", VA = "0x172A24C", Slot = "186")]
	public override void RemoveInputDelegate(EZInputDelegate del)
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x1729EB0", Offset = "0x1729EB0", VA = "0x1729EB0")]
	protected void UpdateAppearance(float truncVal)
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x172A2F8", Offset = "0x172A2F8", VA = "0x172A2F8")]
	public UIScrollKnob GetKnob()
	{
		return null;
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x172A670", Offset = "0x172A670", VA = "0x172A670", Slot = "28")]
	public override void Unclip()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x172AA58", Offset = "0x172AA58", VA = "0x172AA58")]
	public static UISlider Create(string name, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x172ABA4", Offset = "0x172ABA4", VA = "0x172ABA4")]
	public static UISlider Create(string name, Vector3 pos, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x172AD38", Offset = "0x172AD38", VA = "0x172AD38", Slot = "37")]
	public override void Hide(bool tf)
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x172AE40", Offset = "0x172AE40", VA = "0x172AE40", Slot = "30")]
	public override void SetColor(Color c)
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x172AF90", Offset = "0x172AF90", VA = "0x172AF90", Slot = "194")]
	public override void DrawPreTransitionUI(int selState, IGUIScriptSelector gui)
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x172B068", Offset = "0x172B068", VA = "0x172B068")]
	public UISlider()
	{
	}
}
[Token(Token = "0x2000028")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x768DE0", Offset = "0x768DE0")]
public class UIStateToggleBtn : AutoSpriteControlBase
{
	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
	protected int curStateIndex;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	protected bool stateChangeWhileDeactivated;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
	public int defaultState;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	[HideInInspector]
	public TextureAnim[] states;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	[HideInInspector]
	public string[] stateLabels;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	[HideInInspector]
	public EZTransitionList[] transitions;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	private EZTransition prevTransition;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	public SpriteRoot[] layers;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	public MonoBehaviour scriptWithMethodToInvoke;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	public string methodToInvoke;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	public POINTER_INFO.INPUT_EVENT whenToInvoke;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x354")]
	public float delay;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	public AudioSource soundToPlay;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	public bool disableHoverEffect;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	protected int[,] stateIndices;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	protected int overLayerState;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x374")]
	protected int activeLayerState;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	protected int layerState;

	[Token(Token = "0x1700005C")]
	public override bool controlIsEnabled
	{
		[Token(Token = "0x6000233")]
		[Address(RVA = "0x172B810", Offset = "0x172B810", VA = "0x172B810", Slot = "177")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000234")]
		[Address(RVA = "0x172B818", Offset = "0x172B818", VA = "0x172B818", Slot = "178")]
		set
		{
		}
	}

	[Token(Token = "0x1700005D")]
	public int StateNum
	{
		[Token(Token = "0x6000235")]
		[Address(RVA = "0x172B9E8", Offset = "0x172B9E8", VA = "0x172B9E8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700005E")]
	public string StateName
	{
		[Token(Token = "0x6000236")]
		[Address(RVA = "0x172B9F0", Offset = "0x172B9F0", VA = "0x172B9F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700005F")]
	public override TextureAnim[] States
	{
		[Token(Token = "0x6000237")]
		[Address(RVA = "0x172BA38", Offset = "0x172BA38", VA = "0x172BA38", Slot = "79")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000238")]
		[Address(RVA = "0x172BA40", Offset = "0x172BA40", VA = "0x172BA40", Slot = "80")]
		set
		{
		}
	}

	[Token(Token = "0x17000060")]
	public override EZTransitionList[] Transitions
	{
		[Token(Token = "0x600023C")]
		[Address(RVA = "0x172BB80", Offset = "0x172BB80", VA = "0x172BB80", Slot = "197")]
		get
		{
			return null;
		}
		[Token(Token = "0x600023D")]
		[Address(RVA = "0x172BB88", Offset = "0x172BB88", VA = "0x172BB88", Slot = "198")]
		set
		{
		}
	}

	[Token(Token = "0x17000061")]
	public override CSpriteFrame DefaultFrame
	{
		[Token(Token = "0x600023E")]
		[Address(RVA = "0x172BB98", Offset = "0x172BB98", VA = "0x172BB98", Slot = "81")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000062")]
	public override TextureAnim DefaultState
	{
		[Token(Token = "0x600023F")]
		[Address(RVA = "0x172BC54", Offset = "0x172BC54", VA = "0x172BC54", Slot = "82")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000063")]
	public override string Text
	{
		[Token(Token = "0x600024D")]
		[Address(RVA = "0x172CC30", Offset = "0x172CC30", VA = "0x172CC30", Slot = "164")]
		get
		{
			return null;
		}
		[Token(Token = "0x600024E")]
		[Address(RVA = "0x172CC38", Offset = "0x172CC38", VA = "0x172CC38", Slot = "165")]
		set
		{
		}
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x172BA50", Offset = "0x172BA50", VA = "0x172BA50", Slot = "199")]
	public override string GetStateLabel(int index)
	{
		return null;
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x172BA8C", Offset = "0x172BA8C", VA = "0x172BA8C", Slot = "200")]
	public override void SetStateLabel(int index, string label)
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x172BB38", Offset = "0x172BB38", VA = "0x172BB38", Slot = "196")]
	public override EZTransitionList GetTransitions(int index)
	{
		return null;
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x172BCAC", Offset = "0x172BCAC", VA = "0x172BCAC", Slot = "191")]
	public override void OnInput(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x172C044", Offset = "0x172C044", VA = "0x172C044", Slot = "12")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x172C070", Offset = "0x172C070", VA = "0x172C070", Slot = "13")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x172C738", Offset = "0x172C738", VA = "0x172C738", Slot = "16")]
	public override void Copy(SpriteRoot s)
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x172C74C", Offset = "0x172C74C", VA = "0x172C74C", Slot = "170")]
	public override void Copy(SpriteRoot s, ControlCopyFlags flags)
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x172BED0", Offset = "0x172BED0", VA = "0x172BED0")]
	public int ToggleState()
	{
		return default(int);
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x172C87C", Offset = "0x172C87C", VA = "0x172C87C", Slot = "202")]
	public virtual void SetToggleState(int s, bool suppressTransition)
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x172CB10", Offset = "0x172CB10", VA = "0x172CB10", Slot = "203")]
	public virtual void SetToggleState(int s)
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x172CB24", Offset = "0x172CB24", VA = "0x172CB24", Slot = "204")]
	public virtual void SetToggleState(string stateName, bool suppressTransition)
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x172CBD4", Offset = "0x172CBD4", VA = "0x172CBD4", Slot = "205")]
	public virtual void SetToggleState(string stateName)
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x172BF08", Offset = "0x172BF08", VA = "0x172BF08")]
	protected void SetLayerState(int s)
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x172B83C", Offset = "0x172B83C", VA = "0x172B83C")]
	protected void DisableMe()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x172CBE8", Offset = "0x172CBE8", VA = "0x172CBE8", Slot = "19")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x172CDC8", Offset = "0x172CDC8", VA = "0x172CDC8", Slot = "17")]
	public override void InitUVs()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x172CE50", Offset = "0x172CE50", VA = "0x172CE50", Slot = "192")]
	public override int DrawPreStateSelectGUI(int selState, bool inspector)
	{
		return default(int);
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x172D754", Offset = "0x172D754", VA = "0x172D754", Slot = "193")]
	public override int DrawPostStateSelectGUI(int selState)
	{
		return default(int);
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x172DA68", Offset = "0x172DA68", VA = "0x172DA68", Slot = "194")]
	public override void DrawPreTransitionUI(int selState, IGUIScriptSelector gui)
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x172DB40", Offset = "0x172DB40", VA = "0x172DB40")]
	public static UIStateToggleBtn Create(string name, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x172DC8C", Offset = "0x172DC8C", VA = "0x172DC8C")]
	public static UIStateToggleBtn Create(string name, Vector3 pos, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x172DE20", Offset = "0x172DE20", VA = "0x172DE20")]
	public UIStateToggleBtn()
	{
	}
}
[Token(Token = "0x2000029")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x768E18", Offset = "0x768E18")]
public class UIStateToggleBtn3D : ControlBase
{
	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	protected int curStateIndex;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int defaultState;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	public string[] states;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[HideInInspector]
	public EZTransitionList[] transitions;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private EZTransition prevTransition;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[HideInInspector]
	public string[] stateLabels;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public MonoBehaviour scriptWithMethodToInvoke;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public string methodToInvoke;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public POINTER_INFO.INPUT_EVENT whenToInvoke;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float delay;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public AudioSource soundToPlay;

	[Token(Token = "0x17000064")]
	public override bool controlIsEnabled
	{
		[Token(Token = "0x6000256")]
		[Address(RVA = "0x172E320", Offset = "0x172E320", VA = "0x172E320", Slot = "89")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000257")]
		[Address(RVA = "0x172E328", Offset = "0x172E328", VA = "0x172E328", Slot = "90")]
		set
		{
		}
	}

	[Token(Token = "0x17000065")]
	public int StateNum
	{
		[Token(Token = "0x6000258")]
		[Address(RVA = "0x172E440", Offset = "0x172E440", VA = "0x172E440")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000066")]
	public string StateName
	{
		[Token(Token = "0x6000259")]
		[Address(RVA = "0x172E448", Offset = "0x172E448", VA = "0x172E448")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000067")]
	public override string[] States
	{
		[Token(Token = "0x600025A")]
		[Address(RVA = "0x172E488", Offset = "0x172E488", VA = "0x172E488", Slot = "109")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000068")]
	public override EZTransitionList[] Transitions
	{
		[Token(Token = "0x600025C")]
		[Address(RVA = "0x172E4D8", Offset = "0x172E4D8", VA = "0x172E4D8", Slot = "115")]
		get
		{
			return null;
		}
		[Token(Token = "0x600025D")]
		[Address(RVA = "0x172E4E0", Offset = "0x172E4E0", VA = "0x172E4E0", Slot = "116")]
		set
		{
		}
	}

	[Token(Token = "0x17000069")]
	public override string Text
	{
		[Token(Token = "0x6000269")]
		[Address(RVA = "0x172EC44", Offset = "0x172EC44", VA = "0x172EC44", Slot = "79")]
		get
		{
			return null;
		}
		[Token(Token = "0x600026A")]
		[Address(RVA = "0x172EC4C", Offset = "0x172EC4C", VA = "0x172EC4C", Slot = "80")]
		set
		{
		}
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x172E490", Offset = "0x172E490", VA = "0x172E490", Slot = "114")]
	public override EZTransitionList GetTransitions(int index)
	{
		return null;
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x172E4E8", Offset = "0x172E4E8", VA = "0x172E4E8", Slot = "117")]
	public override string GetStateLabel(int index)
	{
		return null;
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x172E524", Offset = "0x172E524", VA = "0x172E524", Slot = "118")]
	public override void SetStateLabel(int index, string label)
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x172E5D0", Offset = "0x172E5D0", VA = "0x172E5D0", Slot = "103")]
	public override void OnInput(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x172E780", Offset = "0x172E780", VA = "0x172E780", Slot = "85")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x172E7AC", Offset = "0x172E7AC", VA = "0x172E7AC", Slot = "86")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x172E978", Offset = "0x172E978", VA = "0x172E978", Slot = "107")]
	public override void Copy(IControl c)
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x172E98C", Offset = "0x172E98C", VA = "0x172E98C", Slot = "108")]
	public override void Copy(IControl c, ControlCopyFlags flags)
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x172E734", Offset = "0x172E734", VA = "0x172E734")]
	public int ToggleState()
	{
		return default(int);
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x172EABC", Offset = "0x172EABC", VA = "0x172EABC", Slot = "122")]
	public virtual void SetToggleState(int s)
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x172EBA4", Offset = "0x172EBA4", VA = "0x172EBA4", Slot = "123")]
	public virtual void SetToggleState(string stateName)
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x172E34C", Offset = "0x172E34C", VA = "0x172E34C")]
	protected void DisableMe()
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x172EDDC", Offset = "0x172EDDC", VA = "0x172EDDC", Slot = "110")]
	public override int DrawPreStateSelectGUI(int selState, bool inspector)
	{
		return default(int);
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x172F634", Offset = "0x172F634", VA = "0x172F634", Slot = "111")]
	public override int DrawPostStateSelectGUI(int selState)
	{
		return default(int);
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x172F974", Offset = "0x172F974", VA = "0x172F974", Slot = "112")]
	public override void DrawPreTransitionUI(int selState, IGUIScriptSelector gui)
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x172FA48", Offset = "0x172FA48", VA = "0x172FA48")]
	public static UIStateToggleBtn3D Create(string name, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x172FB94", Offset = "0x172FB94", VA = "0x172FB94")]
	public static UIStateToggleBtn3D Create(string name, Vector3 pos, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x172FD28", Offset = "0x172FD28", VA = "0x172FD28")]
	public UIStateToggleBtn3D()
	{
	}
}
[Token(Token = "0x200002A")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x768E50", Offset = "0x768E50")]
public class UITextField : AutoSpriteControlBase, IKeyFocusable
{
	[Token(Token = "0x200017F")]
	public delegate void FocusDelegate(UITextField field);

	[Token(Token = "0x2000180")]
	public delegate string ValidationDelegate(UITextField field, string text, ref int insertionPoint);

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	[HideInInspector]
	public TextureAnim[] states;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	[HideInInspector]
	public EZTransitionList[] transitions;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public Vector2 margins;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	protected Rect3D clientClippingRect;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	protected Vector2 marginTopLeft;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	protected Vector2 marginBottomRight;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	public int maxLength;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x374")]
	public bool multiline;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x375")]
	public bool password;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	public string maskingCharacter;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
	public Vector2 caretSize;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
	public ANCHOR_METHOD caretAnchor;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38C")]
	public Vector3 caretOffset;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
	public bool showCaretOnMobile;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x399")]
	public bool allowClickCaretPlacement;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39A")]
	protected bool maxLengthExceeded;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39C")]
	public TouchScreenKeyboardType type;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	public bool autoCorrect;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A1")]
	public bool alert;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A2")]
	public bool hideInput;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
	public MonoBehaviour scriptWithMethodToInvoke;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	public string methodToInvoke;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	protected EZKeyboardCommitDelegate commitDelegate;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
	protected ValidationDelegate validationDelegate;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
	public AudioSource typingSoundEffect;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
	public AudioSource fieldFullSound;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
	public bool customKeyboard;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D9")]
	public bool commitOnLostFocus;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3DC")]
	public POINTER_INFO.INPUT_EVENT customFocusEvent;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
	protected AutoSprite caret;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
	protected FocusDelegate focusDelegate;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
	protected int insert;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F4")]
	protected Vector3 cachedPos;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
	protected Quaternion cachedRot;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
	protected Vector3 cachedScale;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41C")]
	protected bool hasFocus;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x420")]
	protected Vector3 origTextPos;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x430")]
	protected int[,] stateIndices;

	[Token(Token = "0x1700006A")]
	public override bool controlIsEnabled
	{
		[Token(Token = "0x6000271")]
		[Address(RVA = "0x1730438", Offset = "0x1730438", VA = "0x1730438", Slot = "177")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000272")]
		[Address(RVA = "0x1730440", Offset = "0x1730440", VA = "0x1730440", Slot = "178")]
		set
		{
		}
	}

	[Token(Token = "0x1700006B")]
	public override TextureAnim[] States
	{
		[Token(Token = "0x6000273")]
		[Address(RVA = "0x173044C", Offset = "0x173044C", VA = "0x173044C", Slot = "79")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000274")]
		[Address(RVA = "0x1730454", Offset = "0x1730454", VA = "0x1730454", Slot = "80")]
		set
		{
		}
	}

	[Token(Token = "0x1700006C")]
	public override EZTransitionList[] Transitions
	{
		[Token(Token = "0x6000276")]
		[Address(RVA = "0x17304AC", Offset = "0x17304AC", VA = "0x17304AC", Slot = "197")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000277")]
		[Address(RVA = "0x17304B4", Offset = "0x17304B4", VA = "0x17304B4", Slot = "198")]
		set
		{
		}
	}

	[Token(Token = "0x1700006D")]
	public string Content
	{
		[Token(Token = "0x6000280")]
		[Address(RVA = "0x17310A0", Offset = "0x17310A0", VA = "0x17310A0", Slot = "207")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700006E")]
	public override SpriteText.Alignment_Type DefaultTextAlignment
	{
		[Token(Token = "0x6000293")]
		[Address(RVA = "0x17325A4", Offset = "0x17325A4", VA = "0x17325A4", Slot = "166")]
		get
		{
			return default(SpriteText.Alignment_Type);
		}
	}

	[Token(Token = "0x1700006F")]
	public override SpriteText.Anchor_Pos DefaultTextAnchor
	{
		[Token(Token = "0x6000294")]
		[Address(RVA = "0x17325AC", Offset = "0x17325AC", VA = "0x17325AC", Slot = "167")]
		get
		{
			return default(SpriteText.Anchor_Pos);
		}
	}

	[Token(Token = "0x17000070")]
	public bool MaxLengthExceeded
	{
		[Token(Token = "0x600029E")]
		[Address(RVA = "0x1733070", Offset = "0x1733070", VA = "0x1733070")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000071")]
	public override IUIContainer Container
	{
		[Token(Token = "0x600029F")]
		[Address(RVA = "0x1733078", Offset = "0x1733078", VA = "0x1733078", Slot = "181")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002A0")]
		[Address(RVA = "0x1733080", Offset = "0x1733080", VA = "0x1733080", Slot = "182")]
		set
		{
		}
	}

	[Token(Token = "0x17000072")]
	public override string Text
	{
		[Token(Token = "0x60002A1")]
		[Address(RVA = "0x1733274", Offset = "0x1733274", VA = "0x1733274", Slot = "164")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002A2")]
		[Address(RVA = "0x173327C", Offset = "0x173327C", VA = "0x173327C", Slot = "165")]
		set
		{
		}
	}

	[Token(Token = "0x17000073")]
	public override Rect3D ClippingRect
	{
		[Token(Token = "0x60002A6")]
		[Address(RVA = "0x1733948", Offset = "0x1733948", VA = "0x1733948", Slot = "40")]
		get
		{
			return default(Rect3D);
		}
		[Token(Token = "0x60002A7")]
		[Address(RVA = "0x1733994", Offset = "0x1733994", VA = "0x1733994", Slot = "41")]
		set
		{
		}
	}

	[Token(Token = "0x17000074")]
	public override bool Clipped
	{
		[Token(Token = "0x60002A8")]
		[Address(RVA = "0x17339F0", Offset = "0x17339F0", VA = "0x17339F0", Slot = "42")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002A9")]
		[Address(RVA = "0x17339F8", Offset = "0x17339F8", VA = "0x17339F8", Slot = "43")]
		set
		{
		}
	}

	[Token(Token = "0x17000075")]
	public bool Password
	{
		[Token(Token = "0x60002AA")]
		[Address(RVA = "0x1733A30", Offset = "0x1733A30", VA = "0x1733A30", Slot = "208")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002AB")]
		[Address(RVA = "0x1733A38", Offset = "0x1733A38", VA = "0x1733A38")]
		set
		{
		}
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x1730464", Offset = "0x1730464", VA = "0x1730464", Slot = "196")]
	public override EZTransitionList GetTransitions(int index)
	{
		return null;
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x17304C4", Offset = "0x17304C4", VA = "0x17304C4", Slot = "191")]
	public override void OnInput(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x173055C", Offset = "0x173055C", VA = "0x173055C", Slot = "16")]
	public override void Copy(SpriteRoot s)
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x1730570", Offset = "0x1730570", VA = "0x1730570", Slot = "170")]
	public override void Copy(SpriteRoot s, ControlCopyFlags flags)
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x1730950", Offset = "0x1730950", VA = "0x1730950", Slot = "183")]
	public override bool GotFocus()
	{
		return default(bool);
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x1730978", Offset = "0x1730978", VA = "0x1730978", Slot = "204")]
	public string GetInputText(ref KEYBOARD_INFO info)
	{
		return null;
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x1730B00", Offset = "0x1730B00", VA = "0x1730B00", Slot = "203")]
	public string SetInputText(string inputText, ref int insertPt)
	{
		return null;
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x1730F88", Offset = "0x1730F88", VA = "0x1730F88", Slot = "202")]
	public void LostFocus()
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x1730ECC", Offset = "0x1730ECC", VA = "0x1730ECC", Slot = "205")]
	public void Commit()
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x17309D4", Offset = "0x17309D4", VA = "0x17309D4")]
	protected void ShowCaret()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x1731320", Offset = "0x1731320", VA = "0x1731320", Slot = "37")]
	public override void Hide(bool tf)
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x1730FBC", Offset = "0x1730FBC", VA = "0x1730FBC")]
	protected void HideCaret()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x1731414", Offset = "0x1731414", VA = "0x1731414")]
	protected void PositionText(bool recur)
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x1730EC4", Offset = "0x1730EC4", VA = "0x1730EC4")]
	protected void PositionCaret()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x17317B8", Offset = "0x17317B8", VA = "0x17317B8")]
	protected void PositionCaret(bool recur)
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x1731D7C", Offset = "0x1731D7C", VA = "0x1731D7C")]
	protected void PositionInsertionPoint(Vector3 pt)
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x1731EEC", Offset = "0x1731EEC", VA = "0x1731EEC", Slot = "209")]
	public void GoUp()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x173208C", Offset = "0x173208C", VA = "0x173208C", Slot = "210")]
	public void GoDown()
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x173222C", Offset = "0x173222C", VA = "0x173222C", Slot = "206")]
	public void SetCommitDelegate(EZKeyboardCommitDelegate del)
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x173223C", Offset = "0x173223C", VA = "0x173223C")]
	public void AddCommitDelegate(EZKeyboardCommitDelegate del)
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0x17322C8", Offset = "0x17322C8", VA = "0x17322C8")]
	public void RemoveCommitDelegate(EZKeyboardCommitDelegate del)
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x1732354", Offset = "0x1732354", VA = "0x1732354")]
	public void SetFocusDelegate(FocusDelegate del)
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x1732364", Offset = "0x1732364", VA = "0x1732364")]
	public void AddFocusDelegate(FocusDelegate del)
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x17323F0", Offset = "0x17323F0", VA = "0x17323F0")]
	public void RemoveFocusDelegate(FocusDelegate del)
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x173247C", Offset = "0x173247C", VA = "0x173247C")]
	public void SetValidationDelegate(ValidationDelegate del)
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x173248C", Offset = "0x173248C", VA = "0x173248C")]
	public void AddValidationDelegate(ValidationDelegate del)
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x1732518", Offset = "0x1732518", VA = "0x1732518")]
	public void RemoveValidationDelegate(ValidationDelegate del)
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x17325B4", Offset = "0x17325B4", VA = "0x17325B4", Slot = "12")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x17325BC", Offset = "0x17325BC", VA = "0x17325BC", Slot = "13")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x17328B8", Offset = "0x17328B8", VA = "0x17328B8")]
	protected void CreateCaret()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x17310B0", Offset = "0x17310B0", VA = "0x17310B0")]
	public void CalcClippingRect()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x1732FF4", Offset = "0x1732FF4", VA = "0x1732FF4")]
	public void OnEZTranslated()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x1732FF8", Offset = "0x1732FF8", VA = "0x1732FF8")]
	public void OnEZRotated()
	{
	}

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x1732FFC", Offset = "0x1732FFC", VA = "0x1732FFC")]
	public void OnEZScaled()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x1730768", Offset = "0x1730768", VA = "0x1730768")]
	public void SetMargins(Vector2 marg)
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x1733000", Offset = "0x1733000", VA = "0x1733000", Slot = "17")]
	public override void InitUVs()
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x1733634", Offset = "0x1733634", VA = "0x1733634")]
	public static UITextField Create(string name, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x1733780", Offset = "0x1733780", VA = "0x1733780")]
	public static UITextField Create(string name, Vector3 pos, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x1733914", Offset = "0x1733914", VA = "0x1733914", Slot = "28")]
	public override void Unclip()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x1733A68", Offset = "0x1733A68", VA = "0x1733A68", Slot = "194")]
	public override void DrawPreTransitionUI(int selState, IGUIScriptSelector gui)
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x1733B40", Offset = "0x1733B40", VA = "0x1733B40", Slot = "49")]
	public override void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x1733C24", Offset = "0x1733C24", VA = "0x1733C24", Slot = "48")]
	public override void DoMirror()
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x1733D68", Offset = "0x1733D68", VA = "0x1733D68")]
	public UITextField()
	{
	}
}
[Token(Token = "0x200002B")]
public class UITextFieldMirror : AutoSpriteControlBaseMirror
{
	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public Vector2 margins;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool multiline;

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x173407C", Offset = "0x173407C", VA = "0x173407C", Slot = "4")]
	public override void Mirror(SpriteRoot s)
	{
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x1734128", Offset = "0x1734128", VA = "0x1734128", Slot = "5")]
	public override bool Validate(SpriteRoot s)
	{
		return default(bool);
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x1734130", Offset = "0x1734130", VA = "0x1734130", Slot = "6")]
	public override bool DidChange(SpriteRoot s)
	{
		return default(bool);
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x1733D60", Offset = "0x1733D60", VA = "0x1733D60")]
	public UITextFieldMirror()
	{
	}
}
[Serializable]
[Token(Token = "0x200002C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x768E88", Offset = "0x768E88")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x768E88", Offset = "0x768E88")]
public class UIVirtualScreen : MonoBehaviour, IUIObject, IEZDragDrop
{
	[Token(Token = "0x2000181")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769648", Offset = "0x769648")]
	private sealed class <Start>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIVirtualScreen <>4__this;

		[Token(Token = "0x1700020F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ECA")]
			[Address(RVA = "0x1BB3C2C", Offset = "0x1BB3C2C", VA = "0x1BB3C2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000210")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ECC")]
			[Address(RVA = "0x1BB3C74", Offset = "0x1BB3C74", VA = "0x1BB3C74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0x1BB3AEC", Offset = "0x1BB3AEC", VA = "0x1BB3AEC")]
		[DebuggerHidden]
		public <Start>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0x1BB3B18", Offset = "0x1BB3B18", VA = "0x1BB3B18", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0x1BB3B1C", Offset = "0x1BB3B1C", VA = "0x1BB3B1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0x1BB3C34", Offset = "0x1BB3C34", VA = "0x1BB3C34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000182")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769658", Offset = "0x769658")]
	private sealed class <DeactivateScreenCam>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIVirtualScreen <>4__this;

		[Token(Token = "0x17000211")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000ED0")]
			[Address(RVA = "0x1BB3A9C", Offset = "0x1BB3A9C", VA = "0x1BB3A9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000212")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000ED2")]
			[Address(RVA = "0x1BB3AE4", Offset = "0x1BB3AE4", VA = "0x1BB3AE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0x1BB38B8", Offset = "0x1BB38B8", VA = "0x1BB38B8")]
		[DebuggerHidden]
		public <DeactivateScreenCam>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0x1BB38E4", Offset = "0x1BB38E4", VA = "0x1BB38E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0x1BB38E8", Offset = "0x1BB38E8", VA = "0x1BB38E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0x1BB3AA4", Offset = "0x1BB3AA4", VA = "0x1BB3AA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera screenCamera;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask layerMask;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float rayDepth;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool processPointerInfo;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject controlParent;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool onlyRenderWhenNeeded;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float renderTimeout;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected List<IUIObject> controls;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected bool shuttingDown;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public Collider _collider;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected IUIContainer container;

	[Token(Token = "0x17000076")]
	public bool controlIsEnabled
	{
		[Token(Token = "0x60002BF")]
		[Address(RVA = "0x1735220", Offset = "0x1735220", VA = "0x1735220", Slot = "4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002C0")]
		[Address(RVA = "0x1735228", Offset = "0x1735228", VA = "0x1735228", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x17000077")]
	public bool DetargetOnDisable
	{
		[Token(Token = "0x60002C1")]
		[Address(RVA = "0x173522C", Offset = "0x173522C", VA = "0x173522C", Slot = "6")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002C2")]
		[Address(RVA = "0x1735234", Offset = "0x1735234", VA = "0x1735234", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x17000078")]
	public virtual IUIContainer Container
	{
		[Token(Token = "0x60002C4")]
		[Address(RVA = "0x1735514", Offset = "0x1735514", VA = "0x1735514", Slot = "54")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002C5")]
		[Address(RVA = "0x173551C", Offset = "0x173551C", VA = "0x173551C", Slot = "55")]
		set
		{
		}
	}

	[Token(Token = "0x17000079")]
	public object Data
	{
		[Token(Token = "0x60002CF")]
		[Address(RVA = "0x173576C", Offset = "0x173576C", VA = "0x173576C", Slot = "24")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002D0")]
		[Address(RVA = "0x1735774", Offset = "0x1735774", VA = "0x1735774", Slot = "25")]
		set
		{
		}
	}

	[Token(Token = "0x1700007A")]
	public bool IsDraggable
	{
		[Token(Token = "0x60002D1")]
		[Address(RVA = "0x1735778", Offset = "0x1735778", VA = "0x1735778", Slot = "26")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002D2")]
		[Address(RVA = "0x1735780", Offset = "0x1735780", VA = "0x1735780", Slot = "27")]
		set
		{
		}
	}

	[Token(Token = "0x1700007B")]
	public LayerMask DropMask
	{
		[Token(Token = "0x60002D3")]
		[Address(RVA = "0x1735784", Offset = "0x1735784", VA = "0x1735784", Slot = "28")]
		get
		{
			return default(LayerMask);
		}
		[Token(Token = "0x60002D4")]
		[Address(RVA = "0x17357A4", Offset = "0x17357A4", VA = "0x17357A4", Slot = "29")]
		set
		{
		}
	}

	[Token(Token = "0x1700007C")]
	public bool IsDragging
	{
		[Token(Token = "0x60002D5")]
		[Address(RVA = "0x17357A8", Offset = "0x17357A8", VA = "0x17357A8", Slot = "30")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002D6")]
		[Address(RVA = "0x17357B0", Offset = "0x17357B0", VA = "0x17357B0", Slot = "31")]
		set
		{
		}
	}

	[Token(Token = "0x1700007D")]
	public GameObject DropTarget
	{
		[Token(Token = "0x60002D7")]
		[Address(RVA = "0x17357B4", Offset = "0x17357B4", VA = "0x17357B4", Slot = "32")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002D8")]
		[Address(RVA = "0x17357BC", Offset = "0x17357BC", VA = "0x17357BC", Slot = "33")]
		set
		{
		}
	}

	[Token(Token = "0x1700007E")]
	public bool DropHandled
	{
		[Token(Token = "0x60002D9")]
		[Address(RVA = "0x17357C0", Offset = "0x17357C0", VA = "0x17357C0", Slot = "34")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002DA")]
		[Address(RVA = "0x17357C8", Offset = "0x17357C8", VA = "0x17357C8", Slot = "35")]
		set
		{
		}
	}

	[Token(Token = "0x1700007F")]
	public float DragOffset
	{
		[Token(Token = "0x60002DB")]
		[Address(RVA = "0x17357CC", Offset = "0x17357CC", VA = "0x17357CC", Slot = "36")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002DC")]
		[Address(RVA = "0x17357D4", Offset = "0x17357D4", VA = "0x17357D4", Slot = "37")]
		set
		{
		}
	}

	[Token(Token = "0x17000080")]
	public EZAnimation.EASING_TYPE CancelDragEasing
	{
		[Token(Token = "0x60002DD")]
		[Address(RVA = "0x17357D8", Offset = "0x17357D8", VA = "0x17357D8", Slot = "38")]
		get
		{
			return default(EZAnimation.EASING_TYPE);
		}
		[Token(Token = "0x60002DE")]
		[Address(RVA = "0x17357E0", Offset = "0x17357E0", VA = "0x17357E0", Slot = "39")]
		set
		{
		}
	}

	[Token(Token = "0x17000081")]
	public float CancelDragDuration
	{
		[Token(Token = "0x60002DF")]
		[Address(RVA = "0x17357E4", Offset = "0x17357E4", VA = "0x17357E4", Slot = "40")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60002E0")]
		[Address(RVA = "0x17357EC", Offset = "0x17357EC", VA = "0x17357EC", Slot = "41")]
		set
		{
		}
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x17342CC", Offset = "0x17342CC", VA = "0x17342CC", Slot = "52")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x1734938", Offset = "0x1734938", VA = "0x1734938", Slot = "53")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76A828", Offset = "0x76A828")]
	public virtual IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x1734440", Offset = "0x1734440", VA = "0x1734440")]
	protected void SetupControls()
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x17349C4", Offset = "0x17349C4", VA = "0x17349C4")]
	public void AddControl(IUIObject obj)
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x1734AFC", Offset = "0x1734AFC", VA = "0x1734AFC")]
	public void RemoveControl(IUIObject obj)
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x1734C24", Offset = "0x1734C24", VA = "0x1734C24")]
	public void SetScreenCamera(Camera cam)
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x1734C2C", Offset = "0x1734C2C", VA = "0x1734C2C")]
	public void SetControlParent(GameObject go)
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x1734C70", Offset = "0x1734C70", VA = "0x1734C70")]
	protected void InputProcessor(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x1735018", Offset = "0x1735018", VA = "0x1735018")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76A888", Offset = "0x76A888")]
	protected IEnumerator DeactivateScreenCam(float timeout)
	{
		return null;
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x1735090", Offset = "0x1735090", VA = "0x1735090")]
	public void RenderFrame()
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x1735158", Offset = "0x1735158", VA = "0x1735158")]
	public void ForceOn()
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x1735238", Offset = "0x1735238", VA = "0x1735238", Slot = "8")]
	public IUIObject GetControl(ref POINTER_INFO ptr)
	{
		return null;
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x1735524", Offset = "0x1735524", VA = "0x1735524", Slot = "15")]
	public bool RequestContainership(IUIContainer cont)
	{
		return default(bool);
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x1735748", Offset = "0x1735748", VA = "0x1735748", Slot = "16")]
	public bool GotFocus()
	{
		return default(bool);
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x1735750", Offset = "0x1735750", VA = "0x1735750", Slot = "17")]
	public void OnInput(POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x1735754", Offset = "0x1735754", VA = "0x1735754", Slot = "18")]
	public void SetInputDelegate(EZInputDelegate del)
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x1735758", Offset = "0x1735758", VA = "0x1735758", Slot = "19")]
	public void AddInputDelegate(EZInputDelegate del)
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x173575C", Offset = "0x173575C", VA = "0x173575C", Slot = "20")]
	public void RemoveInputDelegate(EZInputDelegate del)
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x1735760", Offset = "0x1735760", VA = "0x1735760", Slot = "21")]
	public void SetValueChangedDelegate(EZValueChangedDelegate del)
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x1735764", Offset = "0x1735764", VA = "0x1735764", Slot = "22")]
	public void AddValueChangedDelegate(EZValueChangedDelegate del)
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x1735768", Offset = "0x1735768", VA = "0x1735768", Slot = "23")]
	public void RemoveValueChangedDelegate(EZValueChangedDelegate del)
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x17357F0", Offset = "0x17357F0", VA = "0x17357F0", Slot = "42")]
	public void DragUpdatePosition(POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x17357F4", Offset = "0x17357F4", VA = "0x17357F4", Slot = "43")]
	public void CancelDrag()
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x17357F8", Offset = "0x17357F8", VA = "0x17357F8", Slot = "44")]
	public void OnEZDragDrop_Internal(EZDragDropParams parms)
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x17357FC", Offset = "0x17357FC", VA = "0x17357FC", Slot = "45")]
	public void AddDragDropDelegate(EZDragDropDelegate del)
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x1735800", Offset = "0x1735800", VA = "0x1735800", Slot = "46")]
	public void RemoveDragDropDelegate(EZDragDropDelegate del)
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x1735804", Offset = "0x1735804", VA = "0x1735804", Slot = "47")]
	public void SetDragDropDelegate(EZDragDropDelegate del)
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x1735808", Offset = "0x1735808", VA = "0x1735808", Slot = "48")]
	public void SetDragDropInternalDelegate(EZDragDropHelper.DragDrop_InternalDelegate del)
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x173580C", Offset = "0x173580C", VA = "0x173580C", Slot = "49")]
	public void AddDragDropInternalDelegate(EZDragDropHelper.DragDrop_InternalDelegate del)
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x1735810", Offset = "0x1735810", VA = "0x1735810", Slot = "50")]
	public void RemoveDragDropInternalDelegate(EZDragDropHelper.DragDrop_InternalDelegate del)
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x1735814", Offset = "0x1735814", VA = "0x1735814", Slot = "51")]
	public EZDragDropHelper.DragDrop_InternalDelegate GetDragDropInternalDelegate()
	{
		return null;
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x173581C", Offset = "0x173581C", VA = "0x173581C")]
	public UIVirtualScreen()
	{
	}

	[SpecialName]
	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x17358BC", Offset = "0x17358BC", VA = "0x17358BC", Slot = "11")]
	private GameObject IUIObject.get_gameObject()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x17358C4", Offset = "0x17358C4", VA = "0x17358C4", Slot = "12")]
	private Transform IUIObject.get_transform()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x17358CC", Offset = "0x17358CC", VA = "0x17358CC", Slot = "14")]
	private string IUIObject.get_name()
	{
		return null;
	}
}
[Token(Token = "0x200002D")]
public class CopySpriteText : MonoBehaviour
{
	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpriteText textToCopy;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpriteText localText;

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x151E874", Offset = "0x151E874", VA = "0x151E874")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x151E878", Offset = "0x151E878", VA = "0x151E878")]
	private void CopyText()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x151E96C", Offset = "0x151E96C", VA = "0x151E96C")]
	public CopySpriteText()
	{
	}
}
[Serializable]
[Token(Token = "0x200002E")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x768F0C", Offset = "0x768F0C")]
public class UIBistateInteractivePanel : UIPanelBase
{
	[Token(Token = "0x2000183")]
	public enum STATE
	{
		[Token(Token = "0x40009A2")]
		SHOWING,
		[Token(Token = "0x40009A3")]
		HIDDEN
	}

	[Token(Token = "0x2000184")]
	public delegate void PanelStateChangeDelegate(STATE state);

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected STATE m_panelState;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected PanelStateChangeDelegate stateChangeDel;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	public EZTransitionList transitions;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool requireTap;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	public bool alwaysShowOnClick;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
	public bool dismissOnOutsideClick;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
	public bool dismissOnPeerClick;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public bool dismissOnChildClick;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
	public bool dismissOnMoveOff;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA6")]
	public bool showOnChildClick;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public STATE initialState;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	protected int lastActionID;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected POINTER_INFO.POINTER_TYPE lastPtrType;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	protected POINTER_INFO.POINTER_TYPE lastListenerType;

	[Token(Token = "0x17000082")]
	public STATE State
	{
		[Token(Token = "0x60002F2")]
		[Address(RVA = "0x1B3915C", Offset = "0x1B3915C", VA = "0x1B3915C")]
		get
		{
			return default(STATE);
		}
		[Token(Token = "0x60002F3")]
		[Address(RVA = "0x1B39164", Offset = "0x1B39164", VA = "0x1B39164")]
		set
		{
		}
	}

	[Token(Token = "0x17000083")]
	public bool IsShowing
	{
		[Token(Token = "0x60002F4")]
		[Address(RVA = "0x1B393D8", Offset = "0x1B393D8", VA = "0x1B393D8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000084")]
	public override EZTransitionList Transitions
	{
		[Token(Token = "0x60002F5")]
		[Address(RVA = "0x1B393E8", Offset = "0x1B393E8", VA = "0x1B393E8", Slot = "56")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0x1B393F0", Offset = "0x1B393F0", VA = "0x1B393F0", Slot = "77")]
	public override void OnInput(POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0x1B395CC", Offset = "0x1B395CC", VA = "0x1B395CC")]
	protected void PanelClicked(POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0x1B39648", Offset = "0x1B39648", VA = "0x1B39648", Slot = "58")]
	public override void Awake()
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x1B3962C", Offset = "0x1B3962C", VA = "0x1B3962C")]
	public void ToggleState()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x1B39168", Offset = "0x1B39168", VA = "0x1B39168")]
	protected void SetPanelState(STATE s)
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x1B398A4", Offset = "0x1B398A4", VA = "0x1B398A4", Slot = "61")]
	public override void StartTransition(UIPanelManager.SHOW_MODE mode)
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x1B398BC", Offset = "0x1B398BC", VA = "0x1B398BC")]
	protected void ClickListener(POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x1B399B4", Offset = "0x1B399B4", VA = "0x1B399B4")]
	public void Hide()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x1B399C8", Offset = "0x1B399C8", VA = "0x1B399C8")]
	public void Reveal()
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x1B399DC", Offset = "0x1B399DC", VA = "0x1B399DC")]
	public void AddStateChangeDelegate(PanelStateChangeDelegate del)
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x1B39A68", Offset = "0x1B39A68", VA = "0x1B39A68")]
	public void RemoveStateChangeDelegate(PanelStateChangeDelegate del)
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x1B39AF4", Offset = "0x1B39AF4", VA = "0x1B39AF4")]
	public void SetStateChangeDelegate(PanelStateChangeDelegate del)
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x1B39AFC", Offset = "0x1B39AFC", VA = "0x1B39AFC")]
	public static UIBistateInteractivePanel Create(string name, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0x1B39C48", Offset = "0x1B39C48", VA = "0x1B39C48")]
	public static UIBistateInteractivePanel Create(string name, Vector3 pos, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x1B39DDC", Offset = "0x1B39DDC", VA = "0x1B39DDC")]
	public UIBistateInteractivePanel()
	{
	}
}
[Serializable]
[Token(Token = "0x200002F")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x768F44", Offset = "0x768F44")]
public class UIInteractivePanel : UIPanelBase
{
	[Token(Token = "0x2000185")]
	public enum STATE
	{
		[Token(Token = "0x40009A5")]
		NORMAL,
		[Token(Token = "0x40009A6")]
		OVER,
		[Token(Token = "0x40009A7")]
		DRAGGING
	}

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected STATE m_panelState;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[HideInInspector]
	public EZTransitionList transitions;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool draggable;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
	public bool constrainDragArea;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public Vector3 dragBoundaryMin;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Vector3 dragBoundaryMax;

	[Token(Token = "0x17000085")]
	public STATE State
	{
		[Token(Token = "0x6000305")]
		[Address(RVA = "0x1B3F228", Offset = "0x1B3F228", VA = "0x1B3F228")]
		get
		{
			return default(STATE);
		}
	}

	[Token(Token = "0x17000086")]
	public override EZTransitionList Transitions
	{
		[Token(Token = "0x6000306")]
		[Address(RVA = "0x1B3F230", Offset = "0x1B3F230", VA = "0x1B3F230", Slot = "56")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x1B3F238", Offset = "0x1B3F238", VA = "0x1B3F238", Slot = "77")]
	public override void OnInput(POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x1B3F654", Offset = "0x1B3F654", VA = "0x1B3F654")]
	protected void SetPanelState(STATE s)
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x1B3F6B8", Offset = "0x1B3F6B8", VA = "0x1B3F6B8")]
	protected void StartTransition(STATE s, STATE prevState)
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x1B3F75C", Offset = "0x1B3F75C", VA = "0x1B3F75C")]
	public void Hide()
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x1B3F770", Offset = "0x1B3F770", VA = "0x1B3F770")]
	public void Reveal()
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0x1B3F784", Offset = "0x1B3F784", VA = "0x1B3F784")]
	public static UIInteractivePanel Create(string name, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0x1B3F8D0", Offset = "0x1B3F8D0", VA = "0x1B3F8D0")]
	public static UIInteractivePanel Create(string name, Vector3 pos, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0x1B3FA64", Offset = "0x1B3FA64", VA = "0x1B3FA64")]
	public UIInteractivePanel()
	{
	}
}
[Token(Token = "0x2000030")]
public struct POINTER_INFO
{
	[Token(Token = "0x2000186")]
	public enum INPUT_EVENT
	{
		[Token(Token = "0x40009A9")]
		NO_CHANGE,
		[Token(Token = "0x40009AA")]
		PRESS,
		[Token(Token = "0x40009AB")]
		RELEASE,
		[Token(Token = "0x40009AC")]
		TAP,
		[Token(Token = "0x40009AD")]
		MOVE,
		[Token(Token = "0x40009AE")]
		MOVE_OFF,
		[Token(Token = "0x40009AF")]
		RELEASE_OFF,
		[Token(Token = "0x40009B0")]
		DRAG
	}

	[Token(Token = "0x2000187")]
	public enum POINTER_TYPE
	{
		[Token(Token = "0x40009B2")]
		MOUSE = 1,
		[Token(Token = "0x40009B3")]
		TOUCHPAD,
		[Token(Token = "0x40009B4")]
		MOUSE_TOUCHPAD,
		[Token(Token = "0x40009B5")]
		RAY
	}

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public POINTER_TYPE type;

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Camera camera;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int actionID;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public INPUT_EVENT evt;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public RaycastHit hitInfo;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool active;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 devicePos;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 origPos;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Vector3 inputDelta;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isTap;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Ray ray;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Ray prevRay;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float rayDepth;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public IUIObject targetObj;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public int layerMask;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public bool callerIsControl;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float activeTime;

	[Token(Token = "0x600030F")]
	[Address(RVA = "0x14C4364", Offset = "0x14C4364", VA = "0x14C4364")]
	public void Copy(POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0x14C44B4", Offset = "0x14C44B4", VA = "0x14C44B4")]
	public void Reuse(POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0x14C4538", Offset = "0x14C4538", VA = "0x14C4538")]
	public void Reset(int actID)
	{
	}
}
[Token(Token = "0x2000031")]
public struct KEYBOARD_INFO
{
	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public TouchScreenKeyboardType type;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public bool autoCorrect;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
	public bool multiline;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
	public bool secure;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
	public bool alert;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public bool hideInput;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int insert;
}
[Serializable]
[Token(Token = "0x2000032")]
public class EZCameraSettings
{
	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Camera camera;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask mask;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float rayDepth;

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x15251F0", Offset = "0x15251F0", VA = "0x15251F0")]
	public EZCameraSettings()
	{
	}
}
[Token(Token = "0x2000033")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x768F7C", Offset = "0x768F7C")]
public class UIManager : MonoBehaviour
{
	[Token(Token = "0x2000188")]
	public enum POINTER_TYPE
	{
		[Token(Token = "0x40009B7")]
		MOUSE,
		[Token(Token = "0x40009B8")]
		TOUCHPAD,
		[Token(Token = "0x40009B9")]
		AUTO_TOUCHPAD,
		[Token(Token = "0x40009BA")]
		RAY,
		[Token(Token = "0x40009BB")]
		MOUSE_AND_RAY,
		[Token(Token = "0x40009BC")]
		TOUCHPAD_AND_RAY
	}

	[Token(Token = "0x2000189")]
	public enum RAY_ACTIVE_STATE
	{
		[Token(Token = "0x40009BE")]
		Inactive,
		[Token(Token = "0x40009BF")]
		Momentary,
		[Token(Token = "0x40009C0")]
		Constant
	}

	[Token(Token = "0x200018A")]
	public enum OUTSIDE_VIEWPORT
	{
		[Token(Token = "0x40009C2")]
		Process_All,
		[Token(Token = "0x40009C3")]
		Ignore,
		[Token(Token = "0x40009C4")]
		Move_Off
	}

	[Token(Token = "0x200018B")]
	public struct NonUIHitInfo
	{
		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int ptrIndex;

		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int camIndex;

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0x1BB16AC", Offset = "0x1BB16AC", VA = "0x1BB16AC")]
		public NonUIHitInfo(int pIndex, int cIndex)
		{
		}
	}

	[Token(Token = "0x200018C")]
	public delegate void PointerPollerDelegate();

	[Token(Token = "0x200018D")]
	public delegate void PointerInfoDelegate(POINTER_INFO ptr);

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static UIManager s_Instance;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public POINTER_TYPE pointerType;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float dragThreshold;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float rayDragThreshold;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float rayDepth;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LayerMask rayMask;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool focusWithRay;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string actionAxis;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OUTSIDE_VIEWPORT inputOutsideViewport;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool warnOnNonUiHits;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Transform raycastingTransform;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public EZCameraSettings[] uiCameras;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Camera rayCamera;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool blockInput;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float defaultDragOffset;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public EZAnimation.EASING_TYPE cancelDragEasing;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float cancelDragDuration;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public TextAsset defaultFont;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material defaultFontMaterial;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected bool rayActive;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected RAY_ACTIVE_STATE rayState;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected POINTER_INFO[,] pointers;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected NonUIHitInfo[] nonUIHits;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected bool[] usedPointers;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected bool[] usedNonUIHits;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected bool rayIsNonUIHit;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	protected int numPointers;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected int numTouchPointers;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected int[] activePointers;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected int numActivePointers;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	protected int numNonUIHits;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	protected POINTER_INFO rayPtr;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	protected PointerPollerDelegate pointerPoller;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	protected PointerInfoDelegate informNonUIHit;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	protected PointerInfoDelegate mouseTouchListeners;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	protected PointerInfoDelegate rayListeners;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	protected IUIObject focusObj;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	protected string controlText;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	protected int insert;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
	private KEYBOARD_INFO kbInfo;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	protected int inputLockCount;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	protected bool m_started;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C9")]
	protected bool m_awake;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private float time;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private float startTime;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private float realtimeDelta;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private int lastUpdateFrame;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
	private int curActionID;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public int numTouches;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	protected RaycastHit hit;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	protected Vector3 tempVec;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	private bool down;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private IUIObject tempObj;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private POINTER_INFO tempPtr;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	private StringBuilder sb;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	public TouchScreenKeyboard iKeyboard;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	private bool allowLeftInteract;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F9")]
	private bool allowRightInteract;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
	private Vector3 hmdDirection;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	private bool blockLeftTriggerInteract;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x309")]
	private bool blockRightTriggerInteract;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30A")]
	private bool blockLeftButtonInteract;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30B")]
	private bool blockRightButtonInteract;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
	private bool globalUIBlockOverride;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	private Side m_currentInteractionSide;

	[Token(Token = "0x17000087")]
	public static UIManager instance
	{
		[Token(Token = "0x6000313")]
		[Address(RVA = "0x1B38388", Offset = "0x1B38388", VA = "0x1B38388")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000088")]
	public RAY_ACTIVE_STATE RayActive
	{
		[Token(Token = "0x600033A")]
		[Address(RVA = "0x1B4C038", Offset = "0x1B4C038", VA = "0x1B4C038")]
		get
		{
			return default(RAY_ACTIVE_STATE);
		}
		[Token(Token = "0x600033B")]
		[Address(RVA = "0x1B4C040", Offset = "0x1B4C040", VA = "0x1B4C040")]
		set
		{
		}
	}

	[Token(Token = "0x17000089")]
	public IUIObject FocusObject
	{
		[Token(Token = "0x6000344")]
		[Address(RVA = "0x1B4C85C", Offset = "0x1B4C85C", VA = "0x1B4C85C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000345")]
		[Address(RVA = "0x1B47C84", Offset = "0x1B47C84", VA = "0x1B47C84")]
		set
		{
		}
	}

	[Token(Token = "0x1700008A")]
	public int InsertionPoint
	{
		[Token(Token = "0x6000346")]
		[Address(RVA = "0x1B4C864", Offset = "0x1B4C864", VA = "0x1B4C864")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000347")]
		[Address(RVA = "0x1B4C86C", Offset = "0x1B4C86C", VA = "0x1B4C86C")]
		set
		{
		}
	}

	[Token(Token = "0x1700008B")]
	public int PointerCount
	{
		[Token(Token = "0x6000348")]
		[Address(RVA = "0x1B4C874", Offset = "0x1B4C874", VA = "0x1B4C874")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700008C")]
	public Side currentInteractionSide
	{
		[Token(Token = "0x6000349")]
		[Address(RVA = "0x1B4C87C", Offset = "0x1B4C87C", VA = "0x1B4C87C")]
		get
		{
			return default(Side);
		}
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x1B45DB0", Offset = "0x1B45DB0", VA = "0x1B45DB0")]
	public static bool Exists()
	{
		return default(bool);
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x1B45FB0", Offset = "0x1B45FB0", VA = "0x1B45FB0")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x1B46018", Offset = "0x1B46018", VA = "0x1B46018")]
	public static void SetInteractBlock(Side side, bool allowInteract, bool blockTriggerInteract, bool blockButtonInteract, Vector3 newHmdDirection)
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x1B461EC", Offset = "0x1B461EC", VA = "0x1B461EC")]
	public static void SetCurrentInteractionSide(Side currentSide)
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x1B462D0", Offset = "0x1B462D0", VA = "0x1B462D0")]
	public static void SetUIBlockOverride(bool shouldBlockUI)
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x1B458B4", Offset = "0x1B458B4", VA = "0x1B458B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x1B463B8", Offset = "0x1B463B8", VA = "0x1B463B8")]
	private void Start()
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x1B4721C", Offset = "0x1B4721C", VA = "0x1B4721C")]
	public void SetRayCamera(Camera cam)
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x1B464BC", Offset = "0x1B464BC", VA = "0x1B464BC")]
	protected void SetupPointers()
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x1B47244", Offset = "0x1B47244", VA = "0x1B47244")]
	public void SetNonUIHitDelegate(PointerInfoDelegate del)
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x1B47254", Offset = "0x1B47254", VA = "0x1B47254")]
	public void AddNonUIHitDelegate(PointerInfoDelegate del)
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x1B472E0", Offset = "0x1B472E0", VA = "0x1B472E0")]
	public void RemoveNonUIHitDelegate(PointerInfoDelegate del)
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x1B39674", Offset = "0x1B39674", VA = "0x1B39674")]
	public void AddMouseTouchPtrListener(PointerInfoDelegate del)
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x1B39700", Offset = "0x1B39700", VA = "0x1B39700")]
	public void AddRayPtrListener(PointerInfoDelegate del)
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x1B3978C", Offset = "0x1B3978C", VA = "0x1B3978C")]
	public void RemoveMouseTouchPtrListener(PointerInfoDelegate del)
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x1B39818", Offset = "0x1B39818", VA = "0x1B39818")]
	public void RemoveRayPtrListener(PointerInfoDelegate del)
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x1B4736C", Offset = "0x1B4736C", VA = "0x1B4736C")]
	protected void AddNonUIHit(int ptrIndex, int camIndex)
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x1B47448", Offset = "0x1B47448", VA = "0x1B47448")]
	protected void CallNonUIHitDelegate()
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x1B475C4", Offset = "0x1B475C4", VA = "0x1B475C4")]
	public bool DidPointerHitUI(int id)
	{
		return default(bool);
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x1B47678", Offset = "0x1B47678", VA = "0x1B47678")]
	public bool DidAnyPointerHitUI()
	{
		return default(bool);
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x1B47714", Offset = "0x1B47714", VA = "0x1B47714")]
	public void AddCamera(Camera cam, LayerMask mask, float depth, int index)
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x1B47954", Offset = "0x1B47954", VA = "0x1B47954")]
	public void RemoveCamera(int index)
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x1B47AA0", Offset = "0x1B47AA0", VA = "0x1B47AA0")]
	public void ReplaceCamera(int index, Camera cam)
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x1B47B1C", Offset = "0x1B47B1C", VA = "0x1B47B1C")]
	public void OnLevelWasLoaded(int level)
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x1B48130", Offset = "0x1B48130", VA = "0x1B48130")]
	protected void BeginDrag(ref POINTER_INFO curPtr)
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x1B48310", Offset = "0x1B48310", VA = "0x1B48310")]
	protected void DoDragUpdate(POINTER_INFO curPtr)
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x1B48C50", Offset = "0x1B48C50", VA = "0x1B48C50", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x1B490D4", Offset = "0x1B490D4", VA = "0x1B490D4")]
	protected void DispatchInput()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x1B49448", Offset = "0x1B49448", VA = "0x1B49448")]
	protected void DispatchHelper(ref POINTER_INFO curPtr, int camIndex)
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x1B4A834", Offset = "0x1B4A834", VA = "0x1B4A834")]
	protected void PollMouse()
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x1B4AD94", Offset = "0x1B4AD94", VA = "0x1B4AD94")]
	protected void PollMouseAndTouchpad()
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x1B4AA84", Offset = "0x1B4AA84", VA = "0x1B4AA84")]
	protected void PollMouse(ref POINTER_INFO curPtr)
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x1B4AD98", Offset = "0x1B4AD98", VA = "0x1B4AD98")]
	protected void PollTouchpad()
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x1B4B508", Offset = "0x1B4B508", VA = "0x1B4B508")]
	protected void PollRay()
	{
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x1B4BBC4", Offset = "0x1B4BBC4", VA = "0x1B4BBC4")]
	protected void PollMouseRay()
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x1B4BBE8", Offset = "0x1B4BBE8", VA = "0x1B4BBE8")]
	protected void PollTouchpadRay()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x1B48CE0", Offset = "0x1B48CE0", VA = "0x1B48CE0")]
	protected void PollKeyboard()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x1B4BC90", Offset = "0x1B4BC90", VA = "0x1B4BC90")]
	protected void ProcessKeyboard()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x1B4C048", Offset = "0x1B4C048", VA = "0x1B4C048")]
	public void Detarget(IUIObject obj)
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x1B4C228", Offset = "0x1B4C228", VA = "0x1B4C228")]
	public void Detarget(int pointerID)
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x1B3A408", Offset = "0x1B3A408", VA = "0x1B3A408")]
	public void DetargetAllExcept(int pointerID)
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x1B4C050", Offset = "0x1B4C050", VA = "0x1B4C050")]
	public void Retarget(IUIObject oldObj, IUIObject newObj)
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x1B4C524", Offset = "0x1B4C524", VA = "0x1B4C524")]
	public bool GetPointer(IUIObject obj, out POINTER_INFO ptr)
	{
		return default(bool);
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x1B4C71C", Offset = "0x1B4C71C", VA = "0x1B4C71C")]
	public bool GetPointer(int pointerID, int camera, out POINTER_INFO ptr)
	{
		return default(bool);
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x1B4C820", Offset = "0x1B4C820", VA = "0x1B4C820")]
	public void LockInput()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x1B4C838", Offset = "0x1B4C838", VA = "0x1B4C838")]
	public void UnlockInput()
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x1B4BC0C", Offset = "0x1B4BC0C", VA = "0x1B4BC0C")]
	protected static int FindInsertionPoint(string before, string after)
	{
		return default(int);
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0x1B4A774", Offset = "0x1B4A774", VA = "0x1B4A774")]
	protected void LogNonUIObjErr(GameObject obj)
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0x1B4C884", Offset = "0x1B4C884", VA = "0x1B4C884")]
	public UIManager()
	{
	}
}
[Serializable]
[Token(Token = "0x2000034")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x768FB4", Offset = "0x768FB4")]
public class UIPanel : UIPanelBase
{
	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public EZTransitionList transitions;

	[Token(Token = "0x1700008D")]
	public override EZTransitionList Transitions
	{
		[Token(Token = "0x600034E")]
		[Address(RVA = "0x195EFE8", Offset = "0x195EFE8", VA = "0x195EFE8", Slot = "56")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0x195EFF0", Offset = "0x195EFF0", VA = "0x195EFF0")]
	public static UIPanel Create(string name, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0x195F13C", Offset = "0x195F13C", VA = "0x195F13C")]
	public static UIPanel Create(string name, Vector3 pos, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x195F2D0", Offset = "0x195F2D0", VA = "0x195F2D0")]
	public UIPanel()
	{
	}
}
[Serializable]
[Token(Token = "0x2000035")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x768FEC", Offset = "0x768FEC")]
public class UIPanelManager : MonoBehaviour, IUIContainer, IUIObject, IEZDragDrop
{
	[Token(Token = "0x200018E")]
	public enum SHOW_MODE
	{
		[Token(Token = "0x40009C8")]
		BringInForward,
		[Token(Token = "0x40009C9")]
		BringInBack,
		[Token(Token = "0x40009CA")]
		DismissForward,
		[Token(Token = "0x40009CB")]
		DismissBack
	}

	[Token(Token = "0x200018F")]
	public enum MENU_DIRECTION
	{
		[Token(Token = "0x40009CD")]
		Forwards,
		[Token(Token = "0x40009CE")]
		Backwards,
		[Token(Token = "0x40009CF")]
		Auto
	}

	[Token(Token = "0x2000190")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769668", Offset = "0x769668")]
	private sealed class <Start>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UIPanelManager <>4__this;

		[Token(Token = "0x17000213")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EE3")]
			[Address(RVA = "0x1BB233C", Offset = "0x1BB233C", VA = "0x1BB233C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000214")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EE5")]
			[Address(RVA = "0x1BB2384", Offset = "0x1BB2384", VA = "0x1BB2384", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0x1BB20A0", Offset = "0x1BB20A0", VA = "0x1BB20A0")]
		[DebuggerHidden]
		public <Start>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0x1BB20CC", Offset = "0x1BB20CC", VA = "0x1BB20CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EE2")]
		[Address(RVA = "0x1BB20D0", Offset = "0x1BB20D0", VA = "0x1BB20D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0x1BB2344", Offset = "0x1BB2344", VA = "0x1BB2344", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static UIPanelManager m_instance;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected List<UIPanelBase> panels;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIPanelBase initialPanel;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool deactivateAllButInitialAtStart;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool linearNavigation;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool circular;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool advancePastEnd;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected UIPanelBase curPanel;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected int transitioningPanelCount;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected bool m_started;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected List<UIPanelBase> breadcrumbs;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected bool m_controlIsEnabled;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected IUIContainer container;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected EZInputDelegate inputDelegate;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected EZValueChangedDelegate changeDelegate;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected EZDragDropDelegate dragDropDelegate;

	[Token(Token = "0x1700008E")]
	public static UIPanelManager instance
	{
		[Token(Token = "0x6000352")]
		[Address(RVA = "0x1962D10", Offset = "0x1962D10", VA = "0x1962D10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700008F")]
	public UIPanelBase CurrentPanel
	{
		[Token(Token = "0x6000354")]
		[Address(RVA = "0x1962DAC", Offset = "0x1962DAC", VA = "0x1962DAC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000090")]
	public int TransitioningPanelCount
	{
		[Token(Token = "0x6000360")]
		[Address(RVA = "0x196376C", Offset = "0x196376C", VA = "0x196376C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000091")]
	public virtual bool controlIsEnabled
	{
		[Token(Token = "0x6000377")]
		[Address(RVA = "0x1965100", Offset = "0x1965100", VA = "0x1965100", Slot = "57")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000378")]
		[Address(RVA = "0x1965108", Offset = "0x1965108", VA = "0x1965108", Slot = "58")]
		set
		{
		}
	}

	[Token(Token = "0x17000092")]
	public virtual bool DetargetOnDisable
	{
		[Token(Token = "0x6000379")]
		[Address(RVA = "0x1965114", Offset = "0x1965114", VA = "0x1965114", Slot = "59")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600037A")]
		[Address(RVA = "0x196511C", Offset = "0x196511C", VA = "0x196511C", Slot = "60")]
		set
		{
		}
	}

	[Token(Token = "0x17000093")]
	public virtual IUIContainer Container
	{
		[Token(Token = "0x600037C")]
		[Address(RVA = "0x1965124", Offset = "0x1965124", VA = "0x1965124", Slot = "61")]
		get
		{
			return null;
		}
		[Token(Token = "0x600037D")]
		[Address(RVA = "0x196512C", Offset = "0x196512C", VA = "0x196512C", Slot = "62")]
		set
		{
		}
	}

	[Token(Token = "0x17000094")]
	public object Data
	{
		[Token(Token = "0x6000387")]
		[Address(RVA = "0x19655C4", Offset = "0x19655C4", VA = "0x19655C4", Slot = "28")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000388")]
		[Address(RVA = "0x19655CC", Offset = "0x19655CC", VA = "0x19655CC", Slot = "29")]
		set
		{
		}
	}

	[Token(Token = "0x17000095")]
	public bool IsDraggable
	{
		[Token(Token = "0x6000389")]
		[Address(RVA = "0x19655D0", Offset = "0x19655D0", VA = "0x19655D0", Slot = "30")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600038A")]
		[Address(RVA = "0x19655D8", Offset = "0x19655D8", VA = "0x19655D8", Slot = "31")]
		set
		{
		}
	}

	[Token(Token = "0x17000096")]
	public LayerMask DropMask
	{
		[Token(Token = "0x600038B")]
		[Address(RVA = "0x19655DC", Offset = "0x19655DC", VA = "0x19655DC", Slot = "32")]
		get
		{
			return default(LayerMask);
		}
		[Token(Token = "0x600038C")]
		[Address(RVA = "0x19655FC", Offset = "0x19655FC", VA = "0x19655FC", Slot = "33")]
		set
		{
		}
	}

	[Token(Token = "0x17000097")]
	public float DragOffset
	{
		[Token(Token = "0x600038D")]
		[Address(RVA = "0x1965600", Offset = "0x1965600", VA = "0x1965600", Slot = "40")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600038E")]
		[Address(RVA = "0x1965608", Offset = "0x1965608", VA = "0x1965608", Slot = "41")]
		set
		{
		}
	}

	[Token(Token = "0x17000098")]
	public EZAnimation.EASING_TYPE CancelDragEasing
	{
		[Token(Token = "0x600038F")]
		[Address(RVA = "0x196560C", Offset = "0x196560C", VA = "0x196560C", Slot = "42")]
		get
		{
			return default(EZAnimation.EASING_TYPE);
		}
		[Token(Token = "0x6000390")]
		[Address(RVA = "0x1965614", Offset = "0x1965614", VA = "0x1965614", Slot = "43")]
		set
		{
		}
	}

	[Token(Token = "0x17000099")]
	public float CancelDragDuration
	{
		[Token(Token = "0x6000391")]
		[Address(RVA = "0x1965618", Offset = "0x1965618", VA = "0x1965618", Slot = "44")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000392")]
		[Address(RVA = "0x1965620", Offset = "0x1965620", VA = "0x1965620", Slot = "45")]
		set
		{
		}
	}

	[Token(Token = "0x1700009A")]
	public bool IsDragging
	{
		[Token(Token = "0x6000393")]
		[Address(RVA = "0x1965624", Offset = "0x1965624", VA = "0x1965624", Slot = "34")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000394")]
		[Address(RVA = "0x196562C", Offset = "0x196562C", VA = "0x196562C", Slot = "35")]
		set
		{
		}
	}

	[Token(Token = "0x1700009B")]
	public GameObject DropTarget
	{
		[Token(Token = "0x6000395")]
		[Address(RVA = "0x1965630", Offset = "0x1965630", VA = "0x1965630", Slot = "36")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000396")]
		[Address(RVA = "0x1965638", Offset = "0x1965638", VA = "0x1965638", Slot = "37")]
		set
		{
		}
	}

	[Token(Token = "0x1700009C")]
	public bool DropHandled
	{
		[Token(Token = "0x6000397")]
		[Address(RVA = "0x196563C", Offset = "0x196563C", VA = "0x196563C", Slot = "38")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000398")]
		[Address(RVA = "0x1965644", Offset = "0x1965644", VA = "0x1965644", Slot = "39")]
		set
		{
		}
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x1962D5C", Offset = "0x1962D5C", VA = "0x1962D5C")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x1962DB4", Offset = "0x1962DB4", VA = "0x1962DB4", Slot = "4")]
	public void AddChild(GameObject go)
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x1962FE8", Offset = "0x1962FE8", VA = "0x1962FE8", Slot = "5")]
	public void RemoveChild(GameObject go)
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x196316C", Offset = "0x196316C", VA = "0x196316C", Slot = "6")]
	public void AddSubject(GameObject go)
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x1963170", Offset = "0x1963170", VA = "0x1963170", Slot = "7")]
	public void RemoveSubject(GameObject go)
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x1963174", Offset = "0x1963174", VA = "0x1963174")]
	public void MakeChild(GameObject go)
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x19631F0", Offset = "0x19631F0", VA = "0x19631F0")]
	public UIPanelBase[] GetPanels()
	{
		return null;
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x1963244", Offset = "0x1963244", VA = "0x1963244")]
	public int GetPanelCount()
	{
		return default(int);
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x1963290", Offset = "0x1963290", VA = "0x1963290")]
	private void Awake()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x1963348", Offset = "0x1963348", VA = "0x1963348")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76A8E8", Offset = "0x76A8E8")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x19633C0", Offset = "0x19633C0", VA = "0x19633C0", Slot = "56")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x19634F4", Offset = "0x19634F4", VA = "0x19634F4")]
	public void ScanChildren()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x1963774", Offset = "0x1963774", VA = "0x1963774")]
	protected void DecrementTransitioningPanels(UIPanelBase p, EZTransition t)
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x1963784", Offset = "0x1963784", VA = "0x1963784")]
	protected void StartAndTrack(UIPanelBase p, SHOW_MODE mode)
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x1963848", Offset = "0x1963848", VA = "0x1963848")]
	public bool MoveForward()
	{
		return default(bool);
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x1963B2C", Offset = "0x1963B2C", VA = "0x1963B2C")]
	public bool MoveBack()
	{
		return default(bool);
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x1963F88", Offset = "0x1963F88", VA = "0x1963F88")]
	public void BringIn(UIPanelBase panel, MENU_DIRECTION dir)
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x19641EC", Offset = "0x19641EC", VA = "0x19641EC")]
	public void BringInImmediate(UIPanelBase panel, MENU_DIRECTION dir)
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x1964398", Offset = "0x1964398", VA = "0x1964398")]
	public void BringIn(string panelName, MENU_DIRECTION dir)
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x1964570", Offset = "0x1964570", VA = "0x1964570")]
	public void BringIn(UIPanelBase panel)
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x1964578", Offset = "0x1964578", VA = "0x1964578")]
	public void BringIn(string panelName)
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x1964580", Offset = "0x1964580", VA = "0x1964580")]
	public void BringIn(int panelIndex)
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x1964710", Offset = "0x1964710", VA = "0x1964710")]
	public void BringIn(int panelIndex, MENU_DIRECTION dir)
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x19648B0", Offset = "0x19648B0", VA = "0x19648B0")]
	public void BringInImmediate(string panelName, MENU_DIRECTION dir)
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x1964A28", Offset = "0x1964A28", VA = "0x1964A28")]
	public void BringInImmediate(UIPanelBase panel)
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x1964A30", Offset = "0x1964A30", VA = "0x1964A30")]
	public void BringInImmediate(string panelName)
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x1964A38", Offset = "0x1964A38", VA = "0x1964A38")]
	public void BringInImmediate(int panelIndex)
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x1964BC8", Offset = "0x1964BC8", VA = "0x1964BC8")]
	public void BringInImmediate(int panelIndex, MENU_DIRECTION dir)
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x1964D68", Offset = "0x1964D68", VA = "0x1964D68")]
	public void Dismiss(MENU_DIRECTION dir)
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x1964FB0", Offset = "0x1964FB0", VA = "0x1964FB0")]
	public void Dismiss()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x1964FB8", Offset = "0x1964FB8", VA = "0x1964FB8")]
	public void DismissImmediate(MENU_DIRECTION dir)
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x19650A4", Offset = "0x19650A4", VA = "0x19650A4")]
	public void DismissImmediate()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x19650AC", Offset = "0x19650AC", VA = "0x19650AC")]
	public void ClearHistory()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x1960058", Offset = "0x1960058", VA = "0x1960058")]
	public static void SetLayerRecursively(GameObject go, int layer)
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x1965120", Offset = "0x1965120", VA = "0x1965120", Slot = "12")]
	public IUIObject GetControl(ref POINTER_INFO ptr)
	{
		return null;
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x1965134", Offset = "0x1965134", VA = "0x1965134", Slot = "19")]
	public bool RequestContainership(IUIContainer cont)
	{
		return default(bool);
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x1965378", Offset = "0x1965378", VA = "0x1965378", Slot = "20")]
	public bool GotFocus()
	{
		return default(bool);
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x1965380", Offset = "0x1965380", VA = "0x1965380", Slot = "63")]
	public virtual void SetInputDelegate(EZInputDelegate del)
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x1965388", Offset = "0x1965388", VA = "0x1965388", Slot = "64")]
	public virtual void AddInputDelegate(EZInputDelegate del)
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x1965414", Offset = "0x1965414", VA = "0x1965414", Slot = "65")]
	public virtual void RemoveInputDelegate(EZInputDelegate del)
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x19654A0", Offset = "0x19654A0", VA = "0x19654A0", Slot = "66")]
	public virtual void SetValueChangedDelegate(EZValueChangedDelegate del)
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x19654A8", Offset = "0x19654A8", VA = "0x19654A8", Slot = "67")]
	public virtual void AddValueChangedDelegate(EZValueChangedDelegate del)
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x1965534", Offset = "0x1965534", VA = "0x1965534", Slot = "68")]
	public virtual void RemoveValueChangedDelegate(EZValueChangedDelegate del)
	{
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x19655C0", Offset = "0x19655C0", VA = "0x19655C0", Slot = "69")]
	public virtual void OnInput(POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x1965648", Offset = "0x1965648", VA = "0x1965648", Slot = "46")]
	public void DragUpdatePosition(POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x196564C", Offset = "0x196564C", VA = "0x196564C", Slot = "47")]
	public void CancelDrag()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x1965650", Offset = "0x1965650", VA = "0x1965650", Slot = "48")]
	public void OnEZDragDrop_Internal(EZDragDropParams parms)
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x1965694", Offset = "0x1965694", VA = "0x1965694", Slot = "49")]
	public void AddDragDropDelegate(EZDragDropDelegate del)
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x1965720", Offset = "0x1965720", VA = "0x1965720", Slot = "50")]
	public void RemoveDragDropDelegate(EZDragDropDelegate del)
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x19657AC", Offset = "0x19657AC", VA = "0x19657AC", Slot = "51")]
	public void SetDragDropDelegate(EZDragDropDelegate del)
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x19657B4", Offset = "0x19657B4", VA = "0x19657B4", Slot = "52")]
	public void SetDragDropInternalDelegate(EZDragDropHelper.DragDrop_InternalDelegate del)
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x19657B8", Offset = "0x19657B8", VA = "0x19657B8", Slot = "53")]
	public void AddDragDropInternalDelegate(EZDragDropHelper.DragDrop_InternalDelegate del)
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x19657BC", Offset = "0x19657BC", VA = "0x19657BC", Slot = "54")]
	public void RemoveDragDropInternalDelegate(EZDragDropHelper.DragDrop_InternalDelegate del)
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x19657C0", Offset = "0x19657C0", VA = "0x19657C0", Slot = "55")]
	public EZDragDropHelper.DragDrop_InternalDelegate GetDragDropInternalDelegate()
	{
		return null;
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x19657C8", Offset = "0x19657C8", VA = "0x19657C8")]
	public static UIPanelManager Create(string name, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x1965914", Offset = "0x1965914", VA = "0x1965914")]
	public UIPanelManager()
	{
	}

	[SpecialName]
	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x19659CC", Offset = "0x19659CC", VA = "0x19659CC", Slot = "15")]
	private GameObject IUIObject.get_gameObject()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x19659D4", Offset = "0x19659D4", VA = "0x19659D4", Slot = "16")]
	private Transform IUIObject.get_transform()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x19659DC", Offset = "0x19659DC", VA = "0x19659DC", Slot = "18")]
	private string IUIObject.get_name()
	{
		return null;
	}
}
[Token(Token = "0x2000036")]
public class ASCSEInfo
{
	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Texture2D tex;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextureAnim stateObj;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EZTransitionList transitions;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string stateLabel;

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x1AAB68C", Offset = "0x1AAB68C", VA = "0x1AAB68C")]
	public ASCSEInfo()
	{
	}
}
[Token(Token = "0x2000037")]
public abstract class AutoSpriteControlBase : AutoSpriteBase, IControl, IUIObject, IEZDragDrop, IPackableControl, ISpritePackable
{
	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	protected bool nullCamera;

	[Token(Token = "0x4000217")]
	public const string DittoString = "[\"]";

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public string text;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public UITextBase spriteText;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public float textOffsetZ;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
	public bool includeTextInAutoCollider;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	[HideInInspector]
	public Collider _collider;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public bool detargetOnDisable;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A1")]
	protected bool customCollider;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
	protected Vector3 savedColliderSize;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	protected Vector2 topLeftEdge;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	protected Vector2 bottomRightEdge;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	[HideInInspector]
	public object data;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	protected SpriteRoot[][] aggregateLayers;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	protected bool m_controlIsEnabled;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	protected IUIContainer container;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	protected EZInputDelegate inputDelegate;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	protected EZValueChangedDelegate changeDelegate;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	protected EZDragDropHelper dragDropHelper;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	public bool isDraggable;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
	public LayerMask dropMask;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	public float dragOffset;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
	public EZAnimation.EASING_TYPE cancelDragEasing;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	public float cancelDragDuration;

	[Token(Token = "0x1700009D")]
	public virtual string Text
	{
		[Token(Token = "0x60003AB")]
		[Address(RVA = "0x1AB9A98", Offset = "0x1AB9A98", VA = "0x1AB9A98", Slot = "164")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003AC")]
		[Address(RVA = "0x1AB9AA0", Offset = "0x1AB9AA0", VA = "0x1AB9AA0", Slot = "165")]
		set
		{
		}
	}

	[Token(Token = "0x1700009E")]
	public virtual SpriteText.Alignment_Type DefaultTextAlignment
	{
		[Token(Token = "0x60003AD")]
		[Address(RVA = "0x1AB9BEC", Offset = "0x1AB9BEC", VA = "0x1AB9BEC", Slot = "166")]
		get
		{
			return default(SpriteText.Alignment_Type);
		}
	}

	[Token(Token = "0x1700009F")]
	public virtual SpriteText.Anchor_Pos DefaultTextAnchor
	{
		[Token(Token = "0x60003AE")]
		[Address(RVA = "0x1AB9BF4", Offset = "0x1AB9BF4", VA = "0x1AB9BF4", Slot = "167")]
		get
		{
			return default(SpriteText.Anchor_Pos);
		}
	}

	[Token(Token = "0x170000A0")]
	public float TextOffsetZ
	{
		[Token(Token = "0x60003AF")]
		[Address(RVA = "0x1AB9BFC", Offset = "0x1AB9BFC", VA = "0x1AB9BFC", Slot = "106")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003B0")]
		[Address(RVA = "0x1AB9C04", Offset = "0x1AB9C04", VA = "0x1AB9C04", Slot = "107")]
		set
		{
		}
	}

	[Token(Token = "0x170000A1")]
	public bool Persistent
	{
		[Token(Token = "0x60003B1")]
		[Address(RVA = "0x1AB9CB4", Offset = "0x1AB9CB4", VA = "0x1AB9CB4", Slot = "110")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003B2")]
		[Address(RVA = "0x1AB9CBC", Offset = "0x1AB9CBC", VA = "0x1AB9CBC", Slot = "111")]
		set
		{
		}
	}

	[Token(Token = "0x170000A2")]
	public object Data
	{
		[Token(Token = "0x60003B3")]
		[Address(RVA = "0x1AB9D3C", Offset = "0x1AB9D3C", VA = "0x1AB9D3C", Slot = "136")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003B4")]
		[Address(RVA = "0x1AB9D44", Offset = "0x1AB9D44", VA = "0x1AB9D44", Slot = "137")]
		set
		{
		}
	}

	[Token(Token = "0x170000A3")]
	public virtual bool IncludeTextInAutoCollider
	{
		[Token(Token = "0x60003B6")]
		[Address(RVA = "0x1AB9DD4", Offset = "0x1AB9DD4", VA = "0x1AB9DD4", Slot = "168")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003B7")]
		[Address(RVA = "0x1AB9DDC", Offset = "0x1AB9DDC", VA = "0x1AB9DDC", Slot = "169")]
		set
		{
		}
	}

	[Token(Token = "0x170000A4")]
	public override bool Clipped
	{
		[Token(Token = "0x60003BF")]
		[Address(RVA = "0x1ABA64C", Offset = "0x1ABA64C", VA = "0x1ABA64C", Slot = "42")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003C0")]
		[Address(RVA = "0x1ABA654", Offset = "0x1ABA654", VA = "0x1ABA654", Slot = "43")]
		set
		{
		}
	}

	[Token(Token = "0x170000A5")]
	public override Rect3D ClippingRect
	{
		[Token(Token = "0x60003C1")]
		[Address(RVA = "0x1ABA7DC", Offset = "0x1ABA7DC", VA = "0x1ABA7DC", Slot = "40")]
		get
		{
			return default(Rect3D);
		}
		[Token(Token = "0x60003C2")]
		[Address(RVA = "0x1ABA804", Offset = "0x1ABA804", VA = "0x1ABA804", Slot = "41")]
		set
		{
		}
	}

	[Token(Token = "0x170000A6")]
	public override Camera RenderCamera
	{
		[Token(Token = "0x60003C3")]
		[Address(RVA = "0x1ABAA00", Offset = "0x1ABAA00", VA = "0x1ABAA00", Slot = "33")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003C4")]
		[Address(RVA = "0x1ABAA08", Offset = "0x1ABAA08", VA = "0x1ABAA08", Slot = "34")]
		set
		{
		}
	}

	[Token(Token = "0x170000A7")]
	public Vector2 TopLeftEdge
	{
		[Token(Token = "0x60003D3")]
		[Address(RVA = "0x1ABD06C", Offset = "0x1ABD06C", VA = "0x1ABD06C", Slot = "175")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x170000A8")]
	public Vector2 BottomRightEdge
	{
		[Token(Token = "0x60003D4")]
		[Address(RVA = "0x1ABD078", Offset = "0x1ABD078", VA = "0x1ABD078", Slot = "176")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x170000A9")]
	public virtual bool controlIsEnabled
	{
		[Token(Token = "0x60003D5")]
		[Address(RVA = "0x1ABD084", Offset = "0x1ABD084", VA = "0x1ABD084", Slot = "177")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003D6")]
		[Address(RVA = "0x1ABD08C", Offset = "0x1ABD08C", VA = "0x1ABD08C", Slot = "178")]
		set
		{
		}
	}

	[Token(Token = "0x170000AA")]
	public virtual bool DetargetOnDisable
	{
		[Token(Token = "0x60003D7")]
		[Address(RVA = "0x1ABD098", Offset = "0x1ABD098", VA = "0x1ABD098", Slot = "179")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003D8")]
		[Address(RVA = "0x1ABD0A8", Offset = "0x1ABD0A8", VA = "0x1ABD0A8", Slot = "180")]
		set
		{
		}
	}

	[Token(Token = "0x170000AB")]
	public virtual IUIContainer Container
	{
		[Token(Token = "0x60003DA")]
		[Address(RVA = "0x1ABD0C0", Offset = "0x1ABD0C0", VA = "0x1ABD0C0", Slot = "181")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003DB")]
		[Address(RVA = "0x1ABD0C8", Offset = "0x1ABD0C8", VA = "0x1ABD0C8", Slot = "182")]
		set
		{
		}
	}

	[Token(Token = "0x170000AC")]
	public LayerMask DropMask
	{
		[Token(Token = "0x60003E6")]
		[Address(RVA = "0x1ABDAB8", Offset = "0x1ABDAB8", VA = "0x1ABDAB8", Slot = "140")]
		get
		{
			return default(LayerMask);
		}
		[Token(Token = "0x60003E7")]
		[Address(RVA = "0x1ABDAC0", Offset = "0x1ABDAC0", VA = "0x1ABDAC0", Slot = "141")]
		set
		{
		}
	}

	[Token(Token = "0x170000AD")]
	public bool IsDraggable
	{
		[Token(Token = "0x60003E8")]
		[Address(RVA = "0x1ABDAC8", Offset = "0x1ABDAC8", VA = "0x1ABDAC8", Slot = "138")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003E9")]
		[Address(RVA = "0x1ABDAD0", Offset = "0x1ABDAD0", VA = "0x1ABDAD0", Slot = "139")]
		set
		{
		}
	}

	[Token(Token = "0x170000AE")]
	public float DragOffset
	{
		[Token(Token = "0x60003EA")]
		[Address(RVA = "0x1ABDADC", Offset = "0x1ABDADC", VA = "0x1ABDADC", Slot = "148")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003EB")]
		[Address(RVA = "0x1ABDAE4", Offset = "0x1ABDAE4", VA = "0x1ABDAE4", Slot = "149")]
		set
		{
		}
	}

	[Token(Token = "0x170000AF")]
	public EZAnimation.EASING_TYPE CancelDragEasing
	{
		[Token(Token = "0x60003EC")]
		[Address(RVA = "0x1ABDC1C", Offset = "0x1ABDC1C", VA = "0x1ABDC1C", Slot = "150")]
		get
		{
			return default(EZAnimation.EASING_TYPE);
		}
		[Token(Token = "0x60003ED")]
		[Address(RVA = "0x1ABDC24", Offset = "0x1ABDC24", VA = "0x1ABDC24", Slot = "151")]
		set
		{
		}
	}

	[Token(Token = "0x170000B0")]
	public float CancelDragDuration
	{
		[Token(Token = "0x60003EE")]
		[Address(RVA = "0x1ABDC2C", Offset = "0x1ABDC2C", VA = "0x1ABDC2C", Slot = "152")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003EF")]
		[Address(RVA = "0x1ABDC34", Offset = "0x1ABDC34", VA = "0x1ABDC34", Slot = "153")]
		set
		{
		}
	}

	[Token(Token = "0x170000B1")]
	public bool IsDragging
	{
		[Token(Token = "0x60003F0")]
		[Address(RVA = "0x1ABDC00", Offset = "0x1ABDC00", VA = "0x1ABDC00", Slot = "142")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003F1")]
		[Address(RVA = "0x1ABDC3C", Offset = "0x1ABDC3C", VA = "0x1ABDC3C", Slot = "143")]
		set
		{
		}
	}

	[Token(Token = "0x170000B2")]
	public GameObject DropTarget
	{
		[Token(Token = "0x60003F2")]
		[Address(RVA = "0x1ABDC5C", Offset = "0x1ABDC5C", VA = "0x1ABDC5C", Slot = "144")]
		get
		{
			return null;
		}
		[Token(Token = "0x60003F3")]
		[Address(RVA = "0x1ABDC78", Offset = "0x1ABDC78", VA = "0x1ABDC78", Slot = "145")]
		set
		{
		}
	}

	[Token(Token = "0x170000B3")]
	public bool DropHandled
	{
		[Token(Token = "0x60003F4")]
		[Address(RVA = "0x1ABDC94", Offset = "0x1ABDC94", VA = "0x1ABDC94", Slot = "146")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003F5")]
		[Address(RVA = "0x1ABDCB0", Offset = "0x1ABDCB0", VA = "0x1ABDCB0", Slot = "147")]
		set
		{
		}
	}

	[Token(Token = "0x170000B4")]
	public bool UseDefaultCancelDragAnim
	{
		[Token(Token = "0x60003FA")]
		[Address(RVA = "0x1ABDDB8", Offset = "0x1ABDDB8", VA = "0x1ABDDB8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60003FB")]
		[Address(RVA = "0x1ABDDD4", Offset = "0x1ABDDD4", VA = "0x1ABDDD4")]
		set
		{
		}
	}

	[Token(Token = "0x170000B5")]
	public abstract EZTransitionList[] Transitions
	{
		[Token(Token = "0x600040B")]
		get;
		[Token(Token = "0x600040C")]
		set;
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x1AB9A80", Offset = "0x1AB9A80", VA = "0x1AB9A80")]
	public object GetData()
	{
		return null;
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x1AB9A88", Offset = "0x1AB9A88", VA = "0x1AB9A88")]
	public void SetData(object val)
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x1AB9D54", Offset = "0x1AB9D54", VA = "0x1AB9D54", Slot = "14")]
	protected override void Init()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x1AB9DF4", Offset = "0x1AB9DF4", VA = "0x1AB9DF4", Slot = "13")]
	public override void Start()
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x1ABA048", Offset = "0x1ABA048", VA = "0x1ABA048", Slot = "25")]
	public override void TruncateTop(float pct)
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x1ABA134", Offset = "0x1ABA134", VA = "0x1ABA134", Slot = "26")]
	public override void TruncateBottom(float pct)
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x1ABA220", Offset = "0x1ABA220", VA = "0x1ABA220", Slot = "24")]
	public override void TruncateLeft(float pct)
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x1ABA30C", Offset = "0x1ABA30C", VA = "0x1ABA30C", Slot = "23")]
	public override void TruncateRight(float pct)
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x1ABA3F8", Offset = "0x1ABA3F8", VA = "0x1ABA3F8", Slot = "27")]
	public override void Untruncate()
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x1ABA4D4", Offset = "0x1ABA4D4", VA = "0x1ABA4D4", Slot = "28")]
	public override void Unclip()
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x1ABAAC4", Offset = "0x1ABAAC4", VA = "0x1ABAAC4", Slot = "36")]
	public override void SetCamera(Camera c)
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x1ABAB9C", Offset = "0x1ABAB9C", VA = "0x1ABAB9C", Slot = "37")]
	public override void Hide(bool tf)
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x1ABAE8C", Offset = "0x1ABAE8C", VA = "0x1ABAE8C", Slot = "94")]
	public void Copy(IControl c)
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x1ABAF6C", Offset = "0x1ABAF6C", VA = "0x1ABAF6C", Slot = "95")]
	public void Copy(IControl c, ControlCopyFlags flags)
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x1ABB054", Offset = "0x1ABB054", VA = "0x1ABB054", Slot = "16")]
	public override void Copy(SpriteRoot s)
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x1ABB068", Offset = "0x1ABB068", VA = "0x1ABB068", Slot = "170")]
	public virtual void Copy(SpriteRoot s, ControlCopyFlags flags)
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x1ABC290", Offset = "0x1ABC290", VA = "0x1ABC290", Slot = "12")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x1ABC404", Offset = "0x1ABC404", VA = "0x1ABC404", Slot = "19")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x1ABC4DC", Offset = "0x1ABC4DC", VA = "0x1ABC4DC", Slot = "20")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x1ABC634", Offset = "0x1ABC634", VA = "0x1ABC634")]
	protected void OnResize(float newWidth, float newHeight, SpriteRoot sprite)
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x1ABC644", Offset = "0x1ABC644", VA = "0x1ABC644", Slot = "171")]
	protected virtual void AddCollider()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0x1ABC7CC", Offset = "0x1ABC7CC", VA = "0x1ABC7CC", Slot = "172")]
	public virtual void UpdateCollider()
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x1ABCB84", Offset = "0x1ABCB84", VA = "0x1ABCB84", Slot = "173")]
	public virtual void SetColliderEnabled(bool colliderEnabled)
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x1ABCC28", Offset = "0x1ABCC28", VA = "0x1ABCC28", Slot = "174")]
	public virtual void FindOuterEdges()
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x1ABD0BC", Offset = "0x1ABD0BC", VA = "0x1ABD0BC", Slot = "120")]
	public IUIObject GetControl(ref POINTER_INFO ptr)
	{
		return null;
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x1ABD4F0", Offset = "0x1ABD4F0", VA = "0x1ABD4F0", Slot = "127")]
	public bool RequestContainership(IUIContainer cont)
	{
		return default(bool);
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x1ABD714", Offset = "0x1ABD714", VA = "0x1ABD714", Slot = "183")]
	public virtual bool GotFocus()
	{
		return default(bool);
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x1ABD71C", Offset = "0x1ABD71C", VA = "0x1ABD71C", Slot = "184")]
	public virtual void SetInputDelegate(EZInputDelegate del)
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x1ABD72C", Offset = "0x1ABD72C", VA = "0x1ABD72C", Slot = "185")]
	public virtual void AddInputDelegate(EZInputDelegate del)
	{
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x1ABD7B8", Offset = "0x1ABD7B8", VA = "0x1ABD7B8", Slot = "186")]
	public virtual void RemoveInputDelegate(EZInputDelegate del)
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x1ABD844", Offset = "0x1ABD844", VA = "0x1ABD844", Slot = "187")]
	public virtual void SetValueChangedDelegate(EZValueChangedDelegate del)
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x1ABD854", Offset = "0x1ABD854", VA = "0x1ABD854", Slot = "188")]
	public virtual void AddValueChangedDelegate(EZValueChangedDelegate del)
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x1ABD8E0", Offset = "0x1ABD8E0", VA = "0x1ABD8E0", Slot = "189")]
	public virtual void RemoveValueChangedDelegate(EZValueChangedDelegate del)
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x1ABD96C", Offset = "0x1ABD96C", VA = "0x1ABD96C", Slot = "190")]
	public virtual void OnInput(POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x1ABD97C", Offset = "0x1ABD97C", VA = "0x1ABD97C", Slot = "191")]
	public virtual void OnInput(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0x1ABDCD0", Offset = "0x1ABDCD0", VA = "0x1ABDCD0", Slot = "154")]
	public void DragUpdatePosition(POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0x1ABDD28", Offset = "0x1ABDD28", VA = "0x1ABDD28")]
	public void DefaultDragUpdatePosition(POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0x1ABDD80", Offset = "0x1ABDD80", VA = "0x1ABDD80")]
	public void SetDragPosUpdater(EZDragDropHelper.UpdateDragPositionDelegate del)
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0x1ABDD9C", Offset = "0x1ABDD9C", VA = "0x1ABDD9C", Slot = "155")]
	public void CancelDrag()
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0x1ABDDF4", Offset = "0x1ABDDF4", VA = "0x1ABDDF4")]
	public void CancelFinished()
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0x1ABDE10", Offset = "0x1ABDE10", VA = "0x1ABDE10")]
	public void DoDefaultCancelDrag()
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0x1ABDE2C", Offset = "0x1ABDE2C", VA = "0x1ABDE2C", Slot = "156")]
	public void OnEZDragDrop_Internal(EZDragDropParams parms)
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x1ABDE84", Offset = "0x1ABDE84", VA = "0x1ABDE84", Slot = "157")]
	public void AddDragDropDelegate(EZDragDropDelegate del)
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x1ABDEA0", Offset = "0x1ABDEA0", VA = "0x1ABDEA0", Slot = "158")]
	public void RemoveDragDropDelegate(EZDragDropDelegate del)
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x1ABDEBC", Offset = "0x1ABDEBC", VA = "0x1ABDEBC", Slot = "159")]
	public void SetDragDropDelegate(EZDragDropDelegate del)
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x1ABDED8", Offset = "0x1ABDED8", VA = "0x1ABDED8", Slot = "160")]
	public void SetDragDropInternalDelegate(EZDragDropHelper.DragDrop_InternalDelegate del)
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x1ABDEF4", Offset = "0x1ABDEF4", VA = "0x1ABDEF4", Slot = "161")]
	public void AddDragDropInternalDelegate(EZDragDropHelper.DragDrop_InternalDelegate del)
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x1ABDF10", Offset = "0x1ABDF10", VA = "0x1ABDF10", Slot = "162")]
	public void RemoveDragDropInternalDelegate(EZDragDropHelper.DragDrop_InternalDelegate del)
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x1ABDF2C", Offset = "0x1ABDF2C", VA = "0x1ABDF2C", Slot = "163")]
	public EZDragDropHelper.DragDrop_InternalDelegate GetDragDropInternalDelegate()
	{
		return null;
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x1ABDF48", Offset = "0x1ABDF48", VA = "0x1ABDF48", Slot = "192")]
	public virtual int DrawPreStateSelectGUI(int selState, bool inspector)
	{
		return default(int);
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x1ABDF50", Offset = "0x1ABDF50", VA = "0x1ABDF50", Slot = "193")]
	public virtual int DrawPostStateSelectGUI(int selState)
	{
		return default(int);
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x1ABDF58", Offset = "0x1ABDF58", VA = "0x1ABDF58", Slot = "194")]
	public virtual void DrawPreTransitionUI(int selState, IGUIScriptSelector gui)
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x1ABDF5C", Offset = "0x1ABDF5C", VA = "0x1ABDF5C", Slot = "195")]
	public virtual string[] EnumStateElements()
	{
		return null;
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x1ABE0B8", Offset = "0x1ABE0B8", VA = "0x1ABE0B8", Slot = "196")]
	public virtual EZTransitionList GetTransitions(int index)
	{
		return null;
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x1ABE0C0", Offset = "0x1ABE0C0", VA = "0x1ABE0C0", Slot = "199")]
	public virtual string GetStateLabel(int index)
	{
		return null;
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x1ABE0C8", Offset = "0x1ABE0C8", VA = "0x1ABE0C8", Slot = "200")]
	public virtual void SetStateLabel(int index, string label)
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x1ABE0CC", Offset = "0x1ABE0CC", VA = "0x1ABE0CC", Slot = "201")]
	public virtual ASCSEInfo GetStateElementInfo(int stateNum)
	{
		return null;
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x1ABE1D0", Offset = "0x1ABE1D0", VA = "0x1ABE1D0")]
	protected void UseStateLabel(int index)
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x1ABE2DC", Offset = "0x1ABE2DC", VA = "0x1ABE2DC", Slot = "48")]
	public override void DoMirror()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x1ABE420", Offset = "0x1ABE420", VA = "0x1ABE420")]
	protected AutoSpriteControlBase()
	{
	}

	[SpecialName]
	[Token(Token = "0x6000413")]
	[Address(RVA = "0x1ABE4CC", Offset = "0x1ABE4CC", VA = "0x1ABE4CC", Slot = "123")]
	private GameObject IUIObject.get_gameObject()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x6000414")]
	[Address(RVA = "0x1ABE4D4", Offset = "0x1ABE4D4", VA = "0x1ABE4D4", Slot = "124")]
	private Transform IUIObject.get_transform()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x6000415")]
	[Address(RVA = "0x1ABE4DC", Offset = "0x1ABE4DC", VA = "0x1ABE4DC", Slot = "126")]
	private string IUIObject.get_name()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x6000416")]
	[Address(RVA = "0x1ABE4E4", Offset = "0x1ABE4E4", VA = "0x1ABE4E4", Slot = "72")]
	private GameObject ISpritePackable.get_gameObject()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x6000417")]
	[Address(RVA = "0x1ABE4EC", Offset = "0x1ABE4EC", VA = "0x1ABE4EC", Slot = "114")]
	private Transform IControl.get_transform()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x6000418")]
	[Address(RVA = "0x1ABE4F4", Offset = "0x1ABE4F4", VA = "0x1ABE4F4", Slot = "115")]
	private GameObject IControl.get_gameObject()
	{
		return null;
	}
}
[Token(Token = "0x2000038")]
public class AutoSpriteControlBaseMirror : SpriteRootMirror
{
	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string text;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float textOffsetZ;

	[Token(Token = "0x6000419")]
	[Address(RVA = "0x1ABE4FC", Offset = "0x1ABE4FC", VA = "0x1ABE4FC", Slot = "4")]
	public override void Mirror(SpriteRoot s)
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0x1ABE5C0", Offset = "0x1ABE5C0", VA = "0x1ABE5C0", Slot = "6")]
	public override bool DidChange(SpriteRoot s)
	{
		return default(bool);
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0x1ABE418", Offset = "0x1ABE418", VA = "0x1ABE418")]
	public AutoSpriteControlBaseMirror()
	{
	}
}
[Token(Token = "0x2000039")]
[ExecuteInEditMode]
public abstract class ControlBase : MonoBehaviour, IControl, IUIObject, IEZDragDrop
{
	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected ControlBaseMirror mirror;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool persistent;

	[Token(Token = "0x4000232")]
	public const string DittoString = "[\"]";

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string text;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UITextBase spriteText;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float textOffsetZ;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool includeTextInAutoCollider;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public Collider _collider;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected bool deleted;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool detargetOnDisable;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	protected bool customCollider;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public object data;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected bool m_controlIsEnabled;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected IUIContainer container;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected EZInputDelegate inputDelegate;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected EZValueChangedDelegate changeDelegate;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected EZDragDropHelper dragDropHelper;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool isDraggable;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public LayerMask dropMask;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float dragOffset;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public EZAnimation.EASING_TYPE cancelDragEasing;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float cancelDragDuration;

	[Token(Token = "0x170000B6")]
	public virtual string Text
	{
		[Token(Token = "0x600041C")]
		[Address(RVA = "0x1ABF75C", Offset = "0x1ABF75C", VA = "0x1ABF75C", Slot = "79")]
		get
		{
			return null;
		}
		[Token(Token = "0x600041D")]
		[Address(RVA = "0x1ABF764", Offset = "0x1ABF764", VA = "0x1ABF764", Slot = "80")]
		set
		{
		}
	}

	[Token(Token = "0x170000B7")]
	public virtual SpriteText.Alignment_Type DefaultTextAlignment
	{
		[Token(Token = "0x600041E")]
		[Address(RVA = "0x1ABF8B0", Offset = "0x1ABF8B0", VA = "0x1ABF8B0", Slot = "81")]
		get
		{
			return default(SpriteText.Alignment_Type);
		}
	}

	[Token(Token = "0x170000B8")]
	public virtual SpriteText.Anchor_Pos DefaultTextAnchor
	{
		[Token(Token = "0x600041F")]
		[Address(RVA = "0x1ABF8B8", Offset = "0x1ABF8B8", VA = "0x1ABF8B8", Slot = "82")]
		get
		{
			return default(SpriteText.Anchor_Pos);
		}
	}

	[Token(Token = "0x170000B9")]
	public float TextOffsetZ
	{
		[Token(Token = "0x6000420")]
		[Address(RVA = "0x1ABF8C0", Offset = "0x1ABF8C0", VA = "0x1ABF8C0", Slot = "21")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000421")]
		[Address(RVA = "0x1ABF8C8", Offset = "0x1ABF8C8", VA = "0x1ABF8C8", Slot = "22")]
		set
		{
		}
	}

	[Token(Token = "0x170000BA")]
	public bool Persistent
	{
		[Token(Token = "0x6000422")]
		[Address(RVA = "0x1ABF978", Offset = "0x1ABF978", VA = "0x1ABF978", Slot = "25")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000423")]
		[Address(RVA = "0x1ABF980", Offset = "0x1ABF980", VA = "0x1ABF980", Slot = "26")]
		set
		{
		}
	}

	[Token(Token = "0x170000BB")]
	public object Data
	{
		[Token(Token = "0x6000424")]
		[Address(RVA = "0x1ABFA00", Offset = "0x1ABFA00", VA = "0x1ABFA00", Slot = "51")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000425")]
		[Address(RVA = "0x1ABFA08", Offset = "0x1ABFA08", VA = "0x1ABFA08", Slot = "52")]
		set
		{
		}
	}

	[Token(Token = "0x170000BC")]
	public virtual bool IncludeTextInAutoCollider
	{
		[Token(Token = "0x6000426")]
		[Address(RVA = "0x1ABFA10", Offset = "0x1ABFA10", VA = "0x1ABFA10", Slot = "83")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000427")]
		[Address(RVA = "0x1ABFA18", Offset = "0x1ABFA18", VA = "0x1ABFA18", Slot = "84")]
		set
		{
		}
	}

	[Token(Token = "0x170000BD")]
	public virtual bool controlIsEnabled
	{
		[Token(Token = "0x600042C")]
		[Address(RVA = "0x1AC004C", Offset = "0x1AC004C", VA = "0x1AC004C", Slot = "89")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600042D")]
		[Address(RVA = "0x1AC0054", Offset = "0x1AC0054", VA = "0x1AC0054", Slot = "90")]
		set
		{
		}
	}

	[Token(Token = "0x170000BE")]
	public virtual bool DetargetOnDisable
	{
		[Token(Token = "0x600042E")]
		[Address(RVA = "0x1AC0060", Offset = "0x1AC0060", VA = "0x1AC0060", Slot = "91")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600042F")]
		[Address(RVA = "0x1AC0070", Offset = "0x1AC0070", VA = "0x1AC0070", Slot = "92")]
		set
		{
		}
	}

	[Token(Token = "0x170000BF")]
	public virtual IUIContainer Container
	{
		[Token(Token = "0x6000431")]
		[Address(RVA = "0x1AC0088", Offset = "0x1AC0088", VA = "0x1AC0088", Slot = "93")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000432")]
		[Address(RVA = "0x1AC0090", Offset = "0x1AC0090", VA = "0x1AC0090", Slot = "94")]
		set
		{
		}
	}

	[Token(Token = "0x170000C0")]
	public bool IsDraggable
	{
		[Token(Token = "0x6000442")]
		[Address(RVA = "0x1AC12C0", Offset = "0x1AC12C0", VA = "0x1AC12C0", Slot = "53")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000443")]
		[Address(RVA = "0x1AC12C8", Offset = "0x1AC12C8", VA = "0x1AC12C8", Slot = "54")]
		set
		{
		}
	}

	[Token(Token = "0x170000C1")]
	public LayerMask DropMask
	{
		[Token(Token = "0x6000444")]
		[Address(RVA = "0x1AC12D4", Offset = "0x1AC12D4", VA = "0x1AC12D4", Slot = "55")]
		get
		{
			return default(LayerMask);
		}
		[Token(Token = "0x6000445")]
		[Address(RVA = "0x1AC12DC", Offset = "0x1AC12DC", VA = "0x1AC12DC", Slot = "56")]
		set
		{
		}
	}

	[Token(Token = "0x170000C2")]
	public float DragOffset
	{
		[Token(Token = "0x6000446")]
		[Address(RVA = "0x1AC12E4", Offset = "0x1AC12E4", VA = "0x1AC12E4", Slot = "63")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000447")]
		[Address(RVA = "0x1AC12EC", Offset = "0x1AC12EC", VA = "0x1AC12EC", Slot = "64")]
		set
		{
		}
	}

	[Token(Token = "0x170000C3")]
	public EZAnimation.EASING_TYPE CancelDragEasing
	{
		[Token(Token = "0x6000448")]
		[Address(RVA = "0x1AC1424", Offset = "0x1AC1424", VA = "0x1AC1424", Slot = "65")]
		get
		{
			return default(EZAnimation.EASING_TYPE);
		}
		[Token(Token = "0x6000449")]
		[Address(RVA = "0x1AC142C", Offset = "0x1AC142C", VA = "0x1AC142C", Slot = "66")]
		set
		{
		}
	}

	[Token(Token = "0x170000C4")]
	public float CancelDragDuration
	{
		[Token(Token = "0x600044A")]
		[Address(RVA = "0x1AC1434", Offset = "0x1AC1434", VA = "0x1AC1434", Slot = "67")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600044B")]
		[Address(RVA = "0x1AC143C", Offset = "0x1AC143C", VA = "0x1AC143C", Slot = "68")]
		set
		{
		}
	}

	[Token(Token = "0x170000C5")]
	public bool IsDragging
	{
		[Token(Token = "0x600044C")]
		[Address(RVA = "0x1AC1408", Offset = "0x1AC1408", VA = "0x1AC1408", Slot = "57")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600044D")]
		[Address(RVA = "0x1AC1444", Offset = "0x1AC1444", VA = "0x1AC1444", Slot = "58")]
		set
		{
		}
	}

	[Token(Token = "0x170000C6")]
	public GameObject DropTarget
	{
		[Token(Token = "0x600044E")]
		[Address(RVA = "0x1AC1464", Offset = "0x1AC1464", VA = "0x1AC1464", Slot = "59")]
		get
		{
			return null;
		}
		[Token(Token = "0x600044F")]
		[Address(RVA = "0x1AC1480", Offset = "0x1AC1480", VA = "0x1AC1480", Slot = "60")]
		set
		{
		}
	}

	[Token(Token = "0x170000C7")]
	public bool DropHandled
	{
		[Token(Token = "0x6000450")]
		[Address(RVA = "0x1AC149C", Offset = "0x1AC149C", VA = "0x1AC149C", Slot = "61")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000451")]
		[Address(RVA = "0x1AC14B8", Offset = "0x1AC14B8", VA = "0x1AC14B8", Slot = "62")]
		set
		{
		}
	}

	[Token(Token = "0x170000C8")]
	public bool UseDefaultCancelDragAnim
	{
		[Token(Token = "0x6000456")]
		[Address(RVA = "0x1AC15C0", Offset = "0x1AC15C0", VA = "0x1AC15C0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000457")]
		[Address(RVA = "0x1AC15DC", Offset = "0x1AC15DC", VA = "0x1AC15DC")]
		set
		{
		}
	}

	[Token(Token = "0x170000C9")]
	public abstract string[] States
	{
		[Token(Token = "0x6000462")]
		get;
	}

	[Token(Token = "0x170000CA")]
	public abstract EZTransitionList[] Transitions
	{
		[Token(Token = "0x6000468")]
		get;
		[Token(Token = "0x6000469")]
		set;
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x1ABFA30", Offset = "0x1ABFA30", VA = "0x1ABFA30", Slot = "85")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0x1ABFB34", Offset = "0x1ABFB34", VA = "0x1ABFB34", Slot = "86")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0x1ABFCBC", Offset = "0x1ABFCBC", VA = "0x1ABFCBC", Slot = "87")]
	protected virtual void AddCollider()
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0x1ABFD98", Offset = "0x1ABFD98", VA = "0x1ABFD98", Slot = "88")]
	public virtual void UpdateCollider()
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0x1AC0084", Offset = "0x1AC0084", VA = "0x1AC0084", Slot = "35")]
	public IUIObject GetControl(ref POINTER_INFO ptr)
	{
		return null;
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x1AC0288", Offset = "0x1AC0288", VA = "0x1AC0288", Slot = "42")]
	public bool RequestContainership(IUIContainer cont)
	{
		return default(bool);
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0x1AC04AC", Offset = "0x1AC04AC", VA = "0x1AC04AC", Slot = "95")]
	public virtual bool GotFocus()
	{
		return default(bool);
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0x1AC04B4", Offset = "0x1AC04B4", VA = "0x1AC04B4", Slot = "96")]
	public virtual void SetInputDelegate(EZInputDelegate del)
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0x1AC04BC", Offset = "0x1AC04BC", VA = "0x1AC04BC", Slot = "97")]
	public virtual void AddInputDelegate(EZInputDelegate del)
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0x1AC0548", Offset = "0x1AC0548", VA = "0x1AC0548", Slot = "98")]
	public virtual void RemoveInputDelegate(EZInputDelegate del)
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x1AC05D4", Offset = "0x1AC05D4", VA = "0x1AC05D4", Slot = "99")]
	public virtual void SetValueChangedDelegate(EZValueChangedDelegate del)
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x1AC05DC", Offset = "0x1AC05DC", VA = "0x1AC05DC", Slot = "100")]
	public virtual void AddValueChangedDelegate(EZValueChangedDelegate del)
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x1AC0668", Offset = "0x1AC0668", VA = "0x1AC0668", Slot = "101")]
	public virtual void RemoveValueChangedDelegate(EZValueChangedDelegate del)
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x1AC06F4", Offset = "0x1AC06F4", VA = "0x1AC06F4", Slot = "102")]
	public virtual void OnInput(POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0x1AC0704", Offset = "0x1AC0704", VA = "0x1AC0704", Slot = "103")]
	public virtual void OnInput(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0x1AC0840", Offset = "0x1AC0840", VA = "0x1AC0840", Slot = "104")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0x1AC0844", Offset = "0x1AC0844", VA = "0x1AC0844", Slot = "105")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0x1AC0990", Offset = "0x1AC0990", VA = "0x1AC0990", Slot = "106")]
	public virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0x1AC099C", Offset = "0x1AC099C", VA = "0x1AC099C", Slot = "107")]
	public virtual void Copy(IControl ctl)
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0x1AC09B0", Offset = "0x1AC09B0", VA = "0x1AC09B0", Slot = "108")]
	public virtual void Copy(IControl ctl, ControlCopyFlags flags)
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0x1AC14D8", Offset = "0x1AC14D8", VA = "0x1AC14D8", Slot = "69")]
	public void DragUpdatePosition(POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0x1AC1530", Offset = "0x1AC1530", VA = "0x1AC1530")]
	public void DefaultDragUpdatePosition(POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0x1AC1588", Offset = "0x1AC1588", VA = "0x1AC1588")]
	public void SetDragPosUpdater(EZDragDropHelper.UpdateDragPositionDelegate del)
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0x1AC15A4", Offset = "0x1AC15A4", VA = "0x1AC15A4", Slot = "70")]
	public void CancelDrag()
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0x1AC15FC", Offset = "0x1AC15FC", VA = "0x1AC15FC")]
	public void CancelFinished()
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0x1AC1618", Offset = "0x1AC1618", VA = "0x1AC1618")]
	public void DoDefaultCancelDrag()
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x1AC1634", Offset = "0x1AC1634", VA = "0x1AC1634", Slot = "71")]
	public void OnEZDragDrop_Internal(EZDragDropParams parms)
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x1AC168C", Offset = "0x1AC168C", VA = "0x1AC168C", Slot = "72")]
	public void AddDragDropDelegate(EZDragDropDelegate del)
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x1AC16A8", Offset = "0x1AC16A8", VA = "0x1AC16A8", Slot = "73")]
	public void RemoveDragDropDelegate(EZDragDropDelegate del)
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x1AC16C4", Offset = "0x1AC16C4", VA = "0x1AC16C4", Slot = "74")]
	public void SetDragDropDelegate(EZDragDropDelegate del)
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x1AC16E0", Offset = "0x1AC16E0", VA = "0x1AC16E0", Slot = "75")]
	public void SetDragDropInternalDelegate(EZDragDropHelper.DragDrop_InternalDelegate del)
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x1AC16FC", Offset = "0x1AC16FC", VA = "0x1AC16FC", Slot = "76")]
	public void AddDragDropInternalDelegate(EZDragDropHelper.DragDrop_InternalDelegate del)
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x1AC1718", Offset = "0x1AC1718", VA = "0x1AC1718", Slot = "77")]
	public void RemoveDragDropInternalDelegate(EZDragDropHelper.DragDrop_InternalDelegate del)
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x1AC1734", Offset = "0x1AC1734", VA = "0x1AC1734", Slot = "78")]
	public EZDragDropHelper.DragDrop_InternalDelegate GetDragDropInternalDelegate()
	{
		return null;
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x1AC1750", Offset = "0x1AC1750", VA = "0x1AC1750", Slot = "110")]
	public virtual int DrawPreStateSelectGUI(int selState, bool inspector)
	{
		return default(int);
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x1AC1758", Offset = "0x1AC1758", VA = "0x1AC1758", Slot = "111")]
	public virtual int DrawPostStateSelectGUI(int selState)
	{
		return default(int);
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x1AC1760", Offset = "0x1AC1760", VA = "0x1AC1760", Slot = "112")]
	public virtual void DrawPreTransitionUI(int selState, IGUIScriptSelector gui)
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x1AC1764", Offset = "0x1AC1764", VA = "0x1AC1764", Slot = "113")]
	public virtual string[] EnumStateElements()
	{
		return null;
	}

	[Token(Token = "0x6000467")]
	public abstract EZTransitionList GetTransitions(int index);

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x1AC1774", Offset = "0x1AC1774", VA = "0x1AC1774", Slot = "117")]
	public virtual string GetStateLabel(int index)
	{
		return null;
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x1AC177C", Offset = "0x1AC177C", VA = "0x1AC177C", Slot = "118")]
	public virtual void SetStateLabel(int index, string label)
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x1AC1780", Offset = "0x1AC1780", VA = "0x1AC1780", Slot = "119")]
	public virtual ASCSEInfo GetStateElementInfo(int stateNum)
	{
		return null;
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x1AC1840", Offset = "0x1AC1840", VA = "0x1AC1840")]
	protected void UseStateLabel(int index)
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0x1AC194C", Offset = "0x1AC194C", VA = "0x1AC194C", Slot = "120")]
	public virtual void DoMirror()
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0x1AC1A48", Offset = "0x1AC1A48", VA = "0x1AC1A48", Slot = "121")]
	public virtual void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0x1AC1A58", Offset = "0x1AC1A58", VA = "0x1AC1A58")]
	protected ControlBase()
	{
	}

	[SpecialName]
	[Token(Token = "0x6000471")]
	[Address(RVA = "0x1AC1B00", Offset = "0x1AC1B00", VA = "0x1AC1B00", Slot = "29")]
	private Transform IControl.get_transform()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x6000472")]
	[Address(RVA = "0x1AC1B08", Offset = "0x1AC1B08", VA = "0x1AC1B08", Slot = "30")]
	private GameObject IControl.get_gameObject()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x6000473")]
	[Address(RVA = "0x1AC1B10", Offset = "0x1AC1B10", VA = "0x1AC1B10", Slot = "38")]
	private GameObject IUIObject.get_gameObject()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x6000474")]
	[Address(RVA = "0x1AC1B18", Offset = "0x1AC1B18", VA = "0x1AC1B18", Slot = "39")]
	private Transform IUIObject.get_transform()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x6000475")]
	[Address(RVA = "0x1AC1B20", Offset = "0x1AC1B20", VA = "0x1AC1B20", Slot = "41")]
	private string IUIObject.get_name()
	{
		return null;
	}
}
[Token(Token = "0x200003A")]
public class ControlBaseMirror
{
	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string text;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float textOffsetZ;

	[Token(Token = "0x6000476")]
	[Address(RVA = "0x151E738", Offset = "0x151E738", VA = "0x151E738", Slot = "4")]
	public virtual void Mirror(ControlBase c)
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0x151E778", Offset = "0x151E778", VA = "0x151E778", Slot = "5")]
	public virtual bool DidChange(ControlBase c)
	{
		return default(bool);
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0x151E868", Offset = "0x151E868", VA = "0x151E868", Slot = "6")]
	public virtual void Validate(ControlBase c)
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0x151E86C", Offset = "0x151E86C", VA = "0x151E86C")]
	public ControlBaseMirror()
	{
	}
}
[Token(Token = "0x200003B")]
public enum EZDragDropEvent
{
	[Token(Token = "0x4000249")]
	Begin,
	[Token(Token = "0x400024A")]
	Update,
	[Token(Token = "0x400024B")]
	DragEnter,
	[Token(Token = "0x400024C")]
	DragExit,
	[Token(Token = "0x400024D")]
	Cancelled,
	[Token(Token = "0x400024E")]
	CancelDone,
	[Token(Token = "0x400024F")]
	Dropped
}
[Token(Token = "0x200003C")]
public struct EZDragDropParams
{
	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public EZDragDropEvent evt;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IUIObject dragObj;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public POINTER_INFO ptr;

	[Token(Token = "0x600047A")]
	[Address(RVA = "0x1525DBC", Offset = "0x1525DBC", VA = "0x1525DBC")]
	public EZDragDropParams(EZDragDropEvent e, IUIObject obj, POINTER_INFO p)
	{
	}
}
[Token(Token = "0x200003D")]
public delegate void EZDragDropDelegate(EZDragDropParams parms);
[Token(Token = "0x200003E")]
public interface IEZDragDrop
{
	[Token(Token = "0x170000CB")]
	object Data
	{
		[Token(Token = "0x600047F")]
		get;
		[Token(Token = "0x6000480")]
		set;
	}

	[Token(Token = "0x170000CC")]
	bool IsDraggable
	{
		[Token(Token = "0x6000481")]
		get;
		[Token(Token = "0x6000482")]
		set;
	}

	[Token(Token = "0x170000CD")]
	LayerMask DropMask
	{
		[Token(Token = "0x6000483")]
		get;
		[Token(Token = "0x6000484")]
		set;
	}

	[Token(Token = "0x170000CE")]
	bool IsDragging
	{
		[Token(Token = "0x6000485")]
		get;
		[Token(Token = "0x6000486")]
		set;
	}

	[Token(Token = "0x170000CF")]
	GameObject DropTarget
	{
		[Token(Token = "0x6000487")]
		get;
		[Token(Token = "0x6000488")]
		set;
	}

	[Token(Token = "0x170000D0")]
	bool DropHandled
	{
		[Token(Token = "0x6000489")]
		get;
		[Token(Token = "0x600048A")]
		set;
	}

	[Token(Token = "0x170000D1")]
	float DragOffset
	{
		[Token(Token = "0x600048B")]
		get;
		[Token(Token = "0x600048C")]
		set;
	}

	[Token(Token = "0x170000D2")]
	EZAnimation.EASING_TYPE CancelDragEasing
	{
		[Token(Token = "0x600048D")]
		get;
		[Token(Token = "0x600048E")]
		set;
	}

	[Token(Token = "0x170000D3")]
	float CancelDragDuration
	{
		[Token(Token = "0x600048F")]
		get;
		[Token(Token = "0x6000490")]
		set;
	}

	[Token(Token = "0x6000491")]
	void DragUpdatePosition(POINTER_INFO ptr);

	[Token(Token = "0x6000492")]
	void CancelDrag();

	[Token(Token = "0x6000493")]
	void OnEZDragDrop_Internal(EZDragDropParams parms);

	[Token(Token = "0x6000494")]
	void AddDragDropDelegate(EZDragDropDelegate del);

	[Token(Token = "0x6000495")]
	void RemoveDragDropDelegate(EZDragDropDelegate del);

	[Token(Token = "0x6000496")]
	void SetDragDropDelegate(EZDragDropDelegate del);

	[Token(Token = "0x6000497")]
	void SetDragDropInternalDelegate(EZDragDropHelper.DragDrop_InternalDelegate del);

	[Token(Token = "0x6000498")]
	void AddDragDropInternalDelegate(EZDragDropHelper.DragDrop_InternalDelegate del);

	[Token(Token = "0x6000499")]
	void RemoveDragDropInternalDelegate(EZDragDropHelper.DragDrop_InternalDelegate del);

	[Token(Token = "0x600049A")]
	EZDragDropHelper.DragDrop_InternalDelegate GetDragDropInternalDelegate();
}
[Token(Token = "0x200003F")]
public class EZDragDropHelper
{
	[Token(Token = "0x2000191")]
	public delegate void UpdateDragPositionDelegate(POINTER_INFO ptr);

	[Token(Token = "0x2000192")]
	public delegate void DragDrop_InternalDelegate(ref POINTER_INFO ptr);

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IUIObject host;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected UpdateDragPositionDelegate dragPosUpdateDel;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected DragDrop_InternalDelegate dragDrop_InternalDel;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 touchCompensationOffset;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected Vector3 dragOrigin;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Vector3 dragOriginOffset;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected Plane dragPlane;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	protected bool isDragging;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	protected bool isCanceling;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
	protected bool useDefaultCancelDragAnim;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject dropTarget;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected bool dropHandled;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected EZDragDropDelegate dragDropDelegate;

	[Token(Token = "0x170000D4")]
	private Plane DragPlane
	{
		[Token(Token = "0x600049D")]
		[Address(RVA = "0x1525740", Offset = "0x1525740", VA = "0x1525740")]
		get
		{
			return default(Plane);
		}
	}

	[Token(Token = "0x170000D5")]
	public bool UseDefaultCancelDragAnim
	{
		[Token(Token = "0x600049E")]
		[Address(RVA = "0x152574C", Offset = "0x152574C", VA = "0x152574C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600049F")]
		[Address(RVA = "0x1525754", Offset = "0x1525754", VA = "0x1525754")]
		set
		{
		}
	}

	[Token(Token = "0x170000D6")]
	public bool IsDragging
	{
		[Token(Token = "0x60004A4")]
		[Address(RVA = "0x1525888", Offset = "0x1525888", VA = "0x1525888")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004A5")]
		[Address(RVA = "0x1525890", Offset = "0x1525890", VA = "0x1525890")]
		set
		{
		}
	}

	[Token(Token = "0x170000D7")]
	public bool IsCanceling
	{
		[Token(Token = "0x60004A6")]
		[Address(RVA = "0x1525B14", Offset = "0x1525B14", VA = "0x1525B14")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000D8")]
	public GameObject DropTarget
	{
		[Token(Token = "0x60004A8")]
		[Address(RVA = "0x1525B24", Offset = "0x1525B24", VA = "0x1525B24")]
		get
		{
			return null;
		}
		[Token(Token = "0x60004A9")]
		[Address(RVA = "0x1525B2C", Offset = "0x1525B2C", VA = "0x1525B2C")]
		set
		{
		}
	}

	[Token(Token = "0x170000D9")]
	public bool DropHandled
	{
		[Token(Token = "0x60004AA")]
		[Address(RVA = "0x15263EC", Offset = "0x15263EC", VA = "0x15263EC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60004AB")]
		[Address(RVA = "0x15263F4", Offset = "0x15263F4", VA = "0x15263F4")]
		set
		{
		}
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x15255DC", Offset = "0x15255DC", VA = "0x15255DC")]
	public EZDragDropHelper(IUIObject h)
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x152569C", Offset = "0x152569C", VA = "0x152569C")]
	public EZDragDropHelper()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x1525760", Offset = "0x1525760", VA = "0x1525760")]
	public void SetDragDropInternalDelegate(DragDrop_InternalDelegate del)
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x1525768", Offset = "0x1525768", VA = "0x1525768")]
	public void AddDragDropInternalDelegate(DragDrop_InternalDelegate del)
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x15257F4", Offset = "0x15257F4", VA = "0x15257F4")]
	public void RemoveDragDropInternalDelegate(DragDrop_InternalDelegate del)
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x1525880", Offset = "0x1525880", VA = "0x1525880")]
	public DragDrop_InternalDelegate GetDragDropInternalDelegate()
	{
		return null;
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x1525B1C", Offset = "0x1525B1C", VA = "0x1525B1C")]
	public void CancelFinished()
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x1526400", Offset = "0x1526400", VA = "0x1526400")]
	public void SetDragPosUpdater(UpdateDragPositionDelegate del)
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x1526408", Offset = "0x1526408", VA = "0x1526408")]
	public void DragUpdatePosition(POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x152644C", Offset = "0x152644C", VA = "0x152644C")]
	public void DefaultDragUpdatePosition(POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x15258CC", Offset = "0x15258CC", VA = "0x15258CC")]
	public void CancelDrag()
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x1526684", Offset = "0x1526684", VA = "0x1526684")]
	public void DoDefaultCancelDrag()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x15268CC", Offset = "0x15268CC", VA = "0x15268CC")]
	protected void FinishCancelDrag(EZAnimation anim)
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x1525E10", Offset = "0x1525E10", VA = "0x1525E10")]
	public void OnEZDragDrop_Internal(EZDragDropParams parms)
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x1526A10", Offset = "0x1526A10", VA = "0x1526A10")]
	public void AddDragDropDelegate(EZDragDropDelegate del)
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x1526A9C", Offset = "0x1526A9C", VA = "0x1526A9C")]
	public void RemoveDragDropDelegate(EZDragDropDelegate del)
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x1526B28", Offset = "0x1526B28", VA = "0x1526B28")]
	public void SetDragDropDelegate(EZDragDropDelegate del)
	{
	}
}
[Token(Token = "0x2000040")]
public interface IGUIScriptSelector
{
	[Token(Token = "0x60004B6")]
	MonoBehaviour DrawScriptSelection(MonoBehaviour script, ref string method);
}
[Token(Token = "0x2000041")]
public enum ControlCopyFlags
{
	[Token(Token = "0x4000261")]
	Appearance = 1,
	[Token(Token = "0x4000262")]
	Sound = 2,
	[Token(Token = "0x4000263")]
	Text = 4,
	[Token(Token = "0x4000264")]
	Data = 8,
	[Token(Token = "0x4000265")]
	State = 16,
	[Token(Token = "0x4000266")]
	Transitions = 32,
	[Token(Token = "0x4000267")]
	Invocation = 64,
	[Token(Token = "0x4000268")]
	Settings = 128,
	[Token(Token = "0x4000269")]
	DragDrop = 256,
	[Token(Token = "0x400026A")]
	All = 65535
}
[Token(Token = "0x2000042")]
public interface IControl
{
	[Token(Token = "0x170000DA")]
	string Text
	{
		[Token(Token = "0x60004B7")]
		get;
		[Token(Token = "0x60004B8")]
		set;
	}

	[Token(Token = "0x170000DB")]
	bool IncludeTextInAutoCollider
	{
		[Token(Token = "0x60004B9")]
		get;
		[Token(Token = "0x60004BA")]
		set;
	}

	[Token(Token = "0x170000DC")]
	EZTransitionList[] Transitions
	{
		[Token(Token = "0x60004C3")]
		get;
		[Token(Token = "0x60004C4")]
		set;
	}

	[Token(Token = "0x170000DD")]
	float TextOffsetZ
	{
		[Token(Token = "0x60004C8")]
		get;
		[Token(Token = "0x60004C9")]
		set;
	}

	[Token(Token = "0x170000DE")]
	SpriteText.Alignment_Type DefaultTextAlignment
	{
		[Token(Token = "0x60004CA")]
		get;
	}

	[Token(Token = "0x170000DF")]
	SpriteText.Anchor_Pos DefaultTextAnchor
	{
		[Token(Token = "0x60004CB")]
		get;
	}

	[Token(Token = "0x170000E0")]
	bool Persistent
	{
		[Token(Token = "0x60004CC")]
		get;
		[Token(Token = "0x60004CD")]
		set;
	}

	[Token(Token = "0x170000E1")]
	object Data
	{
		[Token(Token = "0x60004CE")]
		get;
		[Token(Token = "0x60004CF")]
		set;
	}

	[Token(Token = "0x170000E2")]
	Transform transform
	{
		[Token(Token = "0x60004D0")]
		get;
	}

	[Token(Token = "0x170000E3")]
	GameObject gameObject
	{
		[Token(Token = "0x60004D1")]
		get;
	}

	[Token(Token = "0x60004BB")]
	void UpdateCollider();

	[Token(Token = "0x60004BC")]
	void Copy(IControl c);

	[Token(Token = "0x60004BD")]
	void Copy(IControl c, ControlCopyFlags flags);

	[Token(Token = "0x60004BE")]
	int DrawPreStateSelectGUI(int selState, bool inspector);

	[Token(Token = "0x60004BF")]
	int DrawPostStateSelectGUI(int selState);

	[Token(Token = "0x60004C0")]
	void DrawPreTransitionUI(int selState, IGUIScriptSelector gui);

	[Token(Token = "0x60004C1")]
	string[] EnumStateElements();

	[Token(Token = "0x60004C2")]
	EZTransitionList GetTransitions(int index);

	[Token(Token = "0x60004C5")]
	string GetStateLabel(int index);

	[Token(Token = "0x60004C6")]
	void SetStateLabel(int index, string label);

	[Token(Token = "0x60004C7")]
	ASCSEInfo GetStateElementInfo(int stateNum);
}
[Token(Token = "0x2000043")]
public delegate void EZKeyboardCommitDelegate(IKeyFocusable control);
[Token(Token = "0x2000044")]
public interface IKeyFocusable
{
	[Token(Token = "0x170000E4")]
	string Content
	{
		[Token(Token = "0x60004DB")]
		get;
	}

	[Token(Token = "0x170000E5")]
	bool Password
	{
		[Token(Token = "0x60004DC")]
		get;
	}

	[Token(Token = "0x60004D6")]
	void LostFocus();

	[Token(Token = "0x60004D7")]
	string SetInputText(string inputText, ref int insertPt);

	[Token(Token = "0x60004D8")]
	string GetInputText(ref KEYBOARD_INFO info);

	[Token(Token = "0x60004D9")]
	void Commit();

	[Token(Token = "0x60004DA")]
	void SetCommitDelegate(EZKeyboardCommitDelegate del);

	[Token(Token = "0x60004DD")]
	void GoUp();

	[Token(Token = "0x60004DE")]
	void GoDown();
}
[Token(Token = "0x2000045")]
public interface IPackableControl : ISpritePackable, IControl
{
}
[Token(Token = "0x2000046")]
public interface IUIContainer : IUIObject, IEZDragDrop
{
	[Token(Token = "0x60004DF")]
	void AddChild(GameObject go);

	[Token(Token = "0x60004E0")]
	void RemoveChild(GameObject go);

	[Token(Token = "0x60004E1")]
	void AddSubject(GameObject go);

	[Token(Token = "0x60004E2")]
	void RemoveSubject(GameObject go);
}
[Token(Token = "0x2000047")]
public delegate void EZInputDelegate(ref POINTER_INFO ptr);
[Token(Token = "0x2000048")]
public delegate void EZValueChangedDelegate(IUIObject obj);
[Token(Token = "0x2000049")]
public interface IUIObject : IEZDragDrop
{
	[Token(Token = "0x170000E6")]
	bool controlIsEnabled
	{
		[Token(Token = "0x60004EB")]
		get;
		[Token(Token = "0x60004EC")]
		set;
	}

	[Token(Token = "0x170000E7")]
	bool DetargetOnDisable
	{
		[Token(Token = "0x60004ED")]
		get;
		[Token(Token = "0x60004EE")]
		set;
	}

	[Token(Token = "0x170000E8")]
	IUIContainer Container
	{
		[Token(Token = "0x60004F0")]
		get;
		[Token(Token = "0x60004F1")]
		set;
	}

	[Token(Token = "0x170000E9")]
	GameObject gameObject
	{
		[Token(Token = "0x60004F2")]
		get;
	}

	[Token(Token = "0x170000EA")]
	Transform transform
	{
		[Token(Token = "0x60004F3")]
		get;
	}

	[Token(Token = "0x170000EB")]
	string name
	{
		[Token(Token = "0x60004F5")]
		get;
	}

	[Token(Token = "0x60004EF")]
	IUIObject GetControl(ref POINTER_INFO ptr);

	[Token(Token = "0x60004F4")]
	new string ToString();

	[Token(Token = "0x60004F6")]
	bool RequestContainership(IUIContainer cont);

	[Token(Token = "0x60004F7")]
	bool GotFocus();

	[Token(Token = "0x60004F8")]
	void OnInput(POINTER_INFO ptr);

	[Token(Token = "0x60004F9")]
	void SetInputDelegate(EZInputDelegate del);

	[Token(Token = "0x60004FA")]
	void AddInputDelegate(EZInputDelegate del);

	[Token(Token = "0x60004FB")]
	void RemoveInputDelegate(EZInputDelegate del);

	[Token(Token = "0x60004FC")]
	void SetValueChangedDelegate(EZValueChangedDelegate del);

	[Token(Token = "0x60004FD")]
	void AddValueChangedDelegate(EZValueChangedDelegate del);

	[Token(Token = "0x60004FE")]
	void RemoveValueChangedDelegate(EZValueChangedDelegate del);
}
[Token(Token = "0x200004A")]
public interface IUIText : IUseCamera
{
	[Token(Token = "0x170000EC")]
	string Text
	{
		[Token(Token = "0x60004FF")]
		get;
		[Token(Token = "0x6000500")]
		set;
	}

	[Token(Token = "0x170000ED")]
	bool Persistent
	{
		[Token(Token = "0x6000501")]
		get;
		[Token(Token = "0x6000502")]
		set;
	}

	[Token(Token = "0x170000EE")]
	IControl Parent
	{
		[Token(Token = "0x6000503")]
		get;
		[Token(Token = "0x6000504")]
		set;
	}

	[Token(Token = "0x170000EF")]
	Color Color
	{
		[Token(Token = "0x6000505")]
		get;
		[Token(Token = "0x6000506")]
		set;
	}

	[Token(Token = "0x170000F0")]
	bool Clipped
	{
		[Token(Token = "0x6000509")]
		get;
		[Token(Token = "0x600050A")]
		set;
	}

	[Token(Token = "0x170000F1")]
	Rect3D ClippingRect
	{
		[Token(Token = "0x600050B")]
		get;
		[Token(Token = "0x600050C")]
		set;
	}

	[Token(Token = "0x170000F2")]
	Vector3 TopLeft
	{
		[Token(Token = "0x600050F")]
		get;
	}

	[Token(Token = "0x170000F3")]
	Vector3 BottomRight
	{
		[Token(Token = "0x6000510")]
		get;
	}

	[Token(Token = "0x170000F4")]
	Vector3 UnclippedTopLeft
	{
		[Token(Token = "0x6000511")]
		get;
	}

	[Token(Token = "0x170000F5")]
	Vector3 UnclippedBottomRight
	{
		[Token(Token = "0x6000512")]
		get;
	}

	[Token(Token = "0x170000F6")]
	bool IsWidthLimited
	{
		[Token(Token = "0x6000513")]
		get;
	}

	[Token(Token = "0x170000F7")]
	float ZOffset
	{
		[Token(Token = "0x6000515")]
		get;
		[Token(Token = "0x6000516")]
		set;
	}

	[Token(Token = "0x170000F8")]
	float BaseHeight
	{
		[Token(Token = "0x6000519")]
		get;
	}

	[Token(Token = "0x170000F9")]
	float LineSpan
	{
		[Token(Token = "0x600051A")]
		get;
	}

	[Token(Token = "0x170000FA")]
	bool Password
	{
		[Token(Token = "0x600051D")]
		get;
		[Token(Token = "0x600051E")]
		set;
	}

	[Token(Token = "0x170000FB")]
	string MaskingCharacter
	{
		[Token(Token = "0x600051F")]
		get;
		[Token(Token = "0x6000520")]
		set;
	}

	[Token(Token = "0x170000FC")]
	bool Multiline
	{
		[Token(Token = "0x6000521")]
		get;
		[Token(Token = "0x6000522")]
		set;
	}

	[Token(Token = "0x170000FD")]
	SpriteText.Anchor_Pos Anchor
	{
		[Token(Token = "0x6000523")]
		get;
		[Token(Token = "0x6000524")]
		set;
	}

	[Token(Token = "0x170000FE")]
	float MaxWidth
	{
		[Token(Token = "0x6000525")]
		get;
		[Token(Token = "0x6000526")]
		set;
	}

	[Token(Token = "0x170000FF")]
	bool RemoveUnsupportedCharacters
	{
		[Token(Token = "0x6000527")]
		get;
		[Token(Token = "0x6000528")]
		set;
	}

	[Token(Token = "0x17000100")]
	bool ParseTags
	{
		[Token(Token = "0x6000529")]
		get;
		[Token(Token = "0x600052A")]
		set;
	}

	[Token(Token = "0x17000101")]
	Transform transform
	{
		[Token(Token = "0x600052B")]
		get;
	}

	[Token(Token = "0x17000102")]
	GameObject gameObject
	{
		[Token(Token = "0x600052C")]
		get;
	}

	[Token(Token = "0x6000507")]
	void SetColor(Color c);

	[Token(Token = "0x6000508")]
	void Unclip();

	[Token(Token = "0x600050D")]
	void Hide(bool tf);

	[Token(Token = "0x600050E")]
	bool IsHidden();

	[Token(Token = "0x6000514")]
	void Copy(IUIText text);

	[Token(Token = "0x6000517")]
	Vector3 GetInsertionPointPos(int charIndex);

	[Token(Token = "0x6000518")]
	int GetNearestInsertionPoint(Vector3 point);

	[Token(Token = "0x600051B")]
	int PlainIndexToDisplayIndex(int plainCharIndex);

	[Token(Token = "0x600051C")]
	int DisplayIndexToPlainIndex(int dispCharIndex);
}
[Serializable]
[Token(Token = "0x200004B")]
public abstract class UIPanelBase : MonoBehaviour, IUIContainer, IUIObject, IEZDragDrop
{
	[Token(Token = "0x2000193")]
	public delegate void TransitionCompleteDelegate(UIPanelBase panel, EZTransition transition);

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected EZLinkedList<EZLinkedListNode<IUIObject>> uiObjs;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected EZLinkedList<EZLinkedListNode<UIPanelBase>> childPanels;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public bool[] blockInput;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected EZTransition prevTransition;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected int prevTransIndex;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected bool m_started;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int index;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool deactivateAllOnDismiss;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public bool detargetOnDisable;

	[NonSerialized]
	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Dictionary<int, GameObject> subjects;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public Collider _collider;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected TransitionCompleteDelegate tempTransCompleteDel;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected bool m_controlIsEnabled;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected IUIContainer container;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected EZInputDelegate inputDelegate;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected EZValueChangedDelegate changeDelegate;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected EZDragDropDelegate dragDropDelegate;

	[Token(Token = "0x17000103")]
	public abstract EZTransitionList Transitions
	{
		[Token(Token = "0x600052D")]
		get;
	}

	[Token(Token = "0x17000104")]
	public bool IsTransitioning
	{
		[Token(Token = "0x6000543")]
		[Address(RVA = "0x19623D4", Offset = "0x19623D4", VA = "0x19623D4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000105")]
	public virtual bool controlIsEnabled
	{
		[Token(Token = "0x6000544")]
		[Address(RVA = "0x19623E4", Offset = "0x19623E4", VA = "0x19623E4", Slot = "65")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000545")]
		[Address(RVA = "0x19623EC", Offset = "0x19623EC", VA = "0x19623EC", Slot = "66")]
		set
		{
		}
	}

	[Token(Token = "0x17000106")]
	public virtual bool DetargetOnDisable
	{
		[Token(Token = "0x6000546")]
		[Address(RVA = "0x19623F8", Offset = "0x19623F8", VA = "0x19623F8", Slot = "67")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000547")]
		[Address(RVA = "0x1962400", Offset = "0x1962400", VA = "0x1962400", Slot = "68")]
		set
		{
		}
	}

	[Token(Token = "0x17000107")]
	public virtual IUIContainer Container
	{
		[Token(Token = "0x6000549")]
		[Address(RVA = "0x1962410", Offset = "0x1962410", VA = "0x1962410", Slot = "69")]
		get
		{
			return null;
		}
		[Token(Token = "0x600054A")]
		[Address(RVA = "0x1962418", Offset = "0x1962418", VA = "0x1962418", Slot = "70")]
		set
		{
		}
	}

	[Token(Token = "0x17000108")]
	public object Data
	{
		[Token(Token = "0x6000554")]
		[Address(RVA = "0x1962AF4", Offset = "0x1962AF4", VA = "0x1962AF4", Slot = "28")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000555")]
		[Address(RVA = "0x1962AFC", Offset = "0x1962AFC", VA = "0x1962AFC", Slot = "29")]
		set
		{
		}
	}

	[Token(Token = "0x17000109")]
	public bool IsDraggable
	{
		[Token(Token = "0x6000556")]
		[Address(RVA = "0x1962B00", Offset = "0x1962B00", VA = "0x1962B00", Slot = "30")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000557")]
		[Address(RVA = "0x1962B08", Offset = "0x1962B08", VA = "0x1962B08", Slot = "31")]
		set
		{
		}
	}

	[Token(Token = "0x1700010A")]
	public LayerMask DropMask
	{
		[Token(Token = "0x6000558")]
		[Address(RVA = "0x1962B0C", Offset = "0x1962B0C", VA = "0x1962B0C", Slot = "32")]
		get
		{
			return default(LayerMask);
		}
		[Token(Token = "0x6000559")]
		[Address(RVA = "0x1962B2C", Offset = "0x1962B2C", VA = "0x1962B2C", Slot = "33")]
		set
		{
		}
	}

	[Token(Token = "0x1700010B")]
	public float DragOffset
	{
		[Token(Token = "0x600055A")]
		[Address(RVA = "0x1962B30", Offset = "0x1962B30", VA = "0x1962B30", Slot = "40")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600055B")]
		[Address(RVA = "0x1962B38", Offset = "0x1962B38", VA = "0x1962B38", Slot = "41")]
		set
		{
		}
	}

	[Token(Token = "0x1700010C")]
	public EZAnimation.EASING_TYPE CancelDragEasing
	{
		[Token(Token = "0x600055C")]
		[Address(RVA = "0x1962B3C", Offset = "0x1962B3C", VA = "0x1962B3C", Slot = "42")]
		get
		{
			return default(EZAnimation.EASING_TYPE);
		}
		[Token(Token = "0x600055D")]
		[Address(RVA = "0x1962B44", Offset = "0x1962B44", VA = "0x1962B44", Slot = "43")]
		set
		{
		}
	}

	[Token(Token = "0x1700010D")]
	public float CancelDragDuration
	{
		[Token(Token = "0x600055E")]
		[Address(RVA = "0x1962B48", Offset = "0x1962B48", VA = "0x1962B48", Slot = "44")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600055F")]
		[Address(RVA = "0x1962B50", Offset = "0x1962B50", VA = "0x1962B50", Slot = "45")]
		set
		{
		}
	}

	[Token(Token = "0x1700010E")]
	public bool IsDragging
	{
		[Token(Token = "0x6000560")]
		[Address(RVA = "0x1962B54", Offset = "0x1962B54", VA = "0x1962B54", Slot = "34")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000561")]
		[Address(RVA = "0x1962B5C", Offset = "0x1962B5C", VA = "0x1962B5C", Slot = "35")]
		set
		{
		}
	}

	[Token(Token = "0x1700010F")]
	public GameObject DropTarget
	{
		[Token(Token = "0x6000562")]
		[Address(RVA = "0x1962B60", Offset = "0x1962B60", VA = "0x1962B60", Slot = "36")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000563")]
		[Address(RVA = "0x1962B68", Offset = "0x1962B68", VA = "0x1962B68", Slot = "37")]
		set
		{
		}
	}

	[Token(Token = "0x17000110")]
	public bool DropHandled
	{
		[Token(Token = "0x6000564")]
		[Address(RVA = "0x1962B6C", Offset = "0x1962B6C", VA = "0x1962B6C", Slot = "38")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000565")]
		[Address(RVA = "0x1962B74", Offset = "0x1962B74", VA = "0x1962B74", Slot = "39")]
		set
		{
		}
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0x195F698", Offset = "0x195F698", VA = "0x195F698", Slot = "57")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0x195F7CC", Offset = "0x195F7CC", VA = "0x195F7CC", Slot = "58")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0x195F828", Offset = "0x195F828", VA = "0x195F828", Slot = "59")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0x195F92C", Offset = "0x195F92C", VA = "0x195F92C")]
	public void ScanChildren()
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0x1960558", Offset = "0x1960558", VA = "0x1960558", Slot = "60")]
	protected virtual void SetupTransitionSubjects()
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0x1960E48", Offset = "0x1960E48", VA = "0x1960E48", Slot = "4")]
	public void AddChild(GameObject go)
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0x19613DC", Offset = "0x19613DC", VA = "0x19613DC", Slot = "5")]
	public void RemoveChild(GameObject go)
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0x19619F0", Offset = "0x19619F0", VA = "0x19619F0")]
	public void MakeChild(GameObject go)
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0x19611FC", Offset = "0x19611FC", VA = "0x19611FC", Slot = "6")]
	public void AddSubject(GameObject go)
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0x1961814", Offset = "0x1961814", VA = "0x1961814", Slot = "7")]
	public void RemoveSubject(GameObject go)
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0x1961A6C", Offset = "0x1961A6C", VA = "0x1961A6C")]
	public string[] GetTransitionNames()
	{
		return null;
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0x1961BF8", Offset = "0x1961BF8", VA = "0x1961BF8")]
	public EZTransition GetTransition(int index)
	{
		return null;
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x1961CD0", Offset = "0x1961CD0", VA = "0x1961CD0")]
	public EZTransition GetTransition(UIPanelManager.SHOW_MODE transition)
	{
		return null;
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x1961CD4", Offset = "0x1961CD4", VA = "0x1961CD4")]
	public EZTransition GetTransition(string transName)
	{
		return null;
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x1961DC8", Offset = "0x1961DC8", VA = "0x1961DC8", Slot = "61")]
	public virtual void StartTransition(UIPanelManager.SHOW_MODE mode)
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x1961F38", Offset = "0x1961F38", VA = "0x1961F38", Slot = "62")]
	public virtual void StartTransition(string transName)
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x1962130", Offset = "0x1962130", VA = "0x1962130")]
	public void TransitionCompleted(EZTransition transition)
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x19622F8", Offset = "0x19622F8", VA = "0x19622F8", Slot = "63")]
	public virtual void BringIn()
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x196230C", Offset = "0x196230C", VA = "0x196230C", Slot = "64")]
	public virtual void Dismiss()
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x1962320", Offset = "0x1962320", VA = "0x1962320")]
	public static int CompareIndices(UIPanelBase a, UIPanelBase b)
	{
		return default(int);
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x1962348", Offset = "0x1962348", VA = "0x1962348")]
	public void AddTempTransitionDelegate(TransitionCompleteDelegate del)
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0x196240C", Offset = "0x196240C", VA = "0x196240C", Slot = "12")]
	public IUIObject GetControl(ref POINTER_INFO ptr)
	{
		return null;
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0x1960314", Offset = "0x1960314", VA = "0x1960314", Slot = "19")]
	public bool RequestContainership(IUIContainer cont)
	{
		return default(bool);
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0x1962770", Offset = "0x1962770", VA = "0x1962770", Slot = "20")]
	public bool GotFocus()
	{
		return default(bool);
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0x1962778", Offset = "0x1962778", VA = "0x1962778", Slot = "71")]
	public virtual void SetInputDelegate(EZInputDelegate del)
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0x1962780", Offset = "0x1962780", VA = "0x1962780", Slot = "72")]
	public virtual void AddInputDelegate(EZInputDelegate del)
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0x196280C", Offset = "0x196280C", VA = "0x196280C", Slot = "73")]
	public virtual void RemoveInputDelegate(EZInputDelegate del)
	{
	}

	[Token(Token = "0x6000550")]
	[Address(RVA = "0x1962898", Offset = "0x1962898", VA = "0x1962898", Slot = "74")]
	public virtual void SetValueChangedDelegate(EZValueChangedDelegate del)
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0x19628A0", Offset = "0x19628A0", VA = "0x19628A0", Slot = "75")]
	public virtual void AddValueChangedDelegate(EZValueChangedDelegate del)
	{
	}

	[Token(Token = "0x6000552")]
	[Address(RVA = "0x196292C", Offset = "0x196292C", VA = "0x196292C", Slot = "76")]
	public virtual void RemoveValueChangedDelegate(EZValueChangedDelegate del)
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0x19629B8", Offset = "0x19629B8", VA = "0x19629B8", Slot = "77")]
	public virtual void OnInput(POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0x1962B78", Offset = "0x1962B78", VA = "0x1962B78", Slot = "46")]
	public void DragUpdatePosition(POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0x1962B7C", Offset = "0x1962B7C", VA = "0x1962B7C", Slot = "47")]
	public void CancelDrag()
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0x1962B80", Offset = "0x1962B80", VA = "0x1962B80", Slot = "48")]
	public void OnEZDragDrop_Internal(EZDragDropParams parms)
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0x1962BC4", Offset = "0x1962BC4", VA = "0x1962BC4", Slot = "49")]
	public void AddDragDropDelegate(EZDragDropDelegate del)
	{
	}

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x1962C50", Offset = "0x1962C50", VA = "0x1962C50", Slot = "50")]
	public void RemoveDragDropDelegate(EZDragDropDelegate del)
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x1962CDC", Offset = "0x1962CDC", VA = "0x1962CDC", Slot = "51")]
	public void SetDragDropDelegate(EZDragDropDelegate del)
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x1962CE4", Offset = "0x1962CE4", VA = "0x1962CE4", Slot = "52")]
	public void SetDragDropInternalDelegate(EZDragDropHelper.DragDrop_InternalDelegate del)
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x1962CE8", Offset = "0x1962CE8", VA = "0x1962CE8", Slot = "53")]
	public void AddDragDropInternalDelegate(EZDragDropHelper.DragDrop_InternalDelegate del)
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x1962CEC", Offset = "0x1962CEC", VA = "0x1962CEC", Slot = "54")]
	public void RemoveDragDropInternalDelegate(EZDragDropHelper.DragDrop_InternalDelegate del)
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x1962CF0", Offset = "0x1962CF0", VA = "0x1962CF0", Slot = "55")]
	public EZDragDropHelper.DragDrop_InternalDelegate GetDragDropInternalDelegate()
	{
		return null;
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x195F520", Offset = "0x195F520", VA = "0x195F520")]
	protected UIPanelBase()
	{
	}

	[SpecialName]
	[Token(Token = "0x6000571")]
	[Address(RVA = "0x1962CF8", Offset = "0x1962CF8", VA = "0x1962CF8", Slot = "15")]
	private GameObject IUIObject.get_gameObject()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x6000572")]
	[Address(RVA = "0x1962D00", Offset = "0x1962D00", VA = "0x1962D00", Slot = "16")]
	private Transform IUIObject.get_transform()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x6000573")]
	[Address(RVA = "0x1962D08", Offset = "0x1962D08", VA = "0x1962D08", Slot = "18")]
	private string IUIObject.get_name()
	{
		return null;
	}
}
[Token(Token = "0x200004C")]
public class UIScrollKnob : UIButton
{
	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
	protected Vector3 origPos;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
	protected UISlider slider;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
	protected float maxScrollPos;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3BC")]
	protected Plane ctrlPlane;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3CC")]
	protected Vector2 colliderSizeFactor;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D4")]
	protected float colliderExtent;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
	private float dist;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3DC")]
	private Vector3 inputPoint;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
	private Vector3 newPos;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F4")]
	private Vector3 prevPoint;

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x196C1E0", Offset = "0x196C1E0", VA = "0x196C1E0", Slot = "12")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x196C22C", Offset = "0x196C22C", VA = "0x196C22C", Slot = "191")]
	public override void OnInput(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x196C524", Offset = "0x196C524", VA = "0x196C524")]
	public void SetStartPos(Vector3 startPos)
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x196C534", Offset = "0x196C534", VA = "0x196C534")]
	public Vector3 GetstartPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x196C39C", Offset = "0x196C39C", VA = "0x196C39C")]
	public Vector3 GetLocalInputPoint(Ray ray)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x196C544", Offset = "0x196C544", VA = "0x196C544", Slot = "170")]
	public override void Copy(SpriteRoot s, ControlCopyFlags flags)
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x196C62C", Offset = "0x196C62C", VA = "0x196C62C")]
	public void SetColliderSizeFactor(Vector2 csf)
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0x196C638", Offset = "0x196C638", VA = "0x196C638", Slot = "172")]
	public override void UpdateCollider()
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0x196C4E0", Offset = "0x196C4E0", VA = "0x196C4E0")]
	public float GetScrollPos()
	{
		return default(float);
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0x196C63C", Offset = "0x196C63C", VA = "0x196C63C")]
	public void SetPosition(float pos)
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0x196C6C4", Offset = "0x196C6C4", VA = "0x196C6C4")]
	public void SetSlider(UISlider s)
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0x196C6D4", Offset = "0x196C6D4", VA = "0x196C6D4")]
	public UISlider GetSlider()
	{
		return null;
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0x196C6DC", Offset = "0x196C6DC", VA = "0x196C6DC")]
	public void SetMaxScroll(float max)
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x196C6E4", Offset = "0x196C6E4", VA = "0x196C6E4")]
	public float GetMaxScroll()
	{
		return default(float);
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x196C6EC", Offset = "0x196C6EC", VA = "0x196C6EC")]
	public void SetupAppearance()
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x196C73C", Offset = "0x196C73C", VA = "0x196C73C")]
	public new static UIScrollKnob Create(string name, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x196C888", Offset = "0x196C888", VA = "0x196C888")]
	public new static UIScrollKnob Create(string name, Vector3 pos, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x196CA1C", Offset = "0x196CA1C", VA = "0x196CA1C")]
	public UIScrollKnob()
	{
	}
}
[Token(Token = "0x200004D")]
public abstract class UITextBase : MonoBehaviour, IUIText, IUseCamera
{
	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected IControl parentControl;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool persistent;

	[Token(Token = "0x17000111")]
	public abstract string Text
	{
		[Token(Token = "0x6000587")]
		get;
		[Token(Token = "0x6000588")]
		set;
	}

	[Token(Token = "0x17000112")]
	public virtual bool Persistent
	{
		[Token(Token = "0x6000589")]
		[Address(RVA = "0x1730238", Offset = "0x1730238", VA = "0x1730238", Slot = "56")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600058A")]
		[Address(RVA = "0x1730240", Offset = "0x1730240", VA = "0x1730240", Slot = "57")]
		set
		{
		}
	}

	[Token(Token = "0x17000113")]
	public virtual IControl Parent
	{
		[Token(Token = "0x600058B")]
		[Address(RVA = "0x17302C0", Offset = "0x17302C0", VA = "0x17302C0", Slot = "58")]
		get
		{
			return null;
		}
		[Token(Token = "0x600058C")]
		[Address(RVA = "0x17302C8", Offset = "0x17302C8", VA = "0x17302C8", Slot = "59")]
		set
		{
		}
	}

	[Token(Token = "0x17000114")]
	public abstract Color Color
	{
		[Token(Token = "0x600058D")]
		get;
		[Token(Token = "0x600058E")]
		set;
	}

	[Token(Token = "0x17000115")]
	public abstract Color OriginalColor
	{
		[Token(Token = "0x600058F")]
		get;
		[Token(Token = "0x6000590")]
		set;
	}

	[Token(Token = "0x17000116")]
	public abstract bool Clipped
	{
		[Token(Token = "0x6000593")]
		get;
		[Token(Token = "0x6000594")]
		set;
	}

	[Token(Token = "0x17000117")]
	public abstract Rect3D ClippingRect
	{
		[Token(Token = "0x6000595")]
		get;
		[Token(Token = "0x6000596")]
		set;
	}

	[Token(Token = "0x17000118")]
	public abstract Vector3 TopLeft
	{
		[Token(Token = "0x6000599")]
		get;
	}

	[Token(Token = "0x17000119")]
	public abstract Vector3 BottomRight
	{
		[Token(Token = "0x600059A")]
		get;
	}

	[Token(Token = "0x1700011A")]
	public abstract Vector3 UnclippedTopLeft
	{
		[Token(Token = "0x600059B")]
		get;
	}

	[Token(Token = "0x1700011B")]
	public abstract Vector3 UnclippedBottomRight
	{
		[Token(Token = "0x600059C")]
		get;
	}

	[Token(Token = "0x1700011C")]
	public abstract bool IsWidthLimited
	{
		[Token(Token = "0x600059D")]
		get;
	}

	[Token(Token = "0x1700011D")]
	public abstract float ZOffset
	{
		[Token(Token = "0x600059F")]
		get;
		[Token(Token = "0x60005A0")]
		set;
	}

	[Token(Token = "0x1700011E")]
	public abstract float BaseHeight
	{
		[Token(Token = "0x60005A3")]
		get;
	}

	[Token(Token = "0x1700011F")]
	public abstract float LineSpan
	{
		[Token(Token = "0x60005A4")]
		get;
	}

	[Token(Token = "0x17000120")]
	public abstract bool Password
	{
		[Token(Token = "0x60005A7")]
		get;
		[Token(Token = "0x60005A8")]
		set;
	}

	[Token(Token = "0x17000121")]
	public abstract string MaskingCharacter
	{
		[Token(Token = "0x60005A9")]
		get;
		[Token(Token = "0x60005AA")]
		set;
	}

	[Token(Token = "0x17000122")]
	public abstract bool Multiline
	{
		[Token(Token = "0x60005AB")]
		get;
		[Token(Token = "0x60005AC")]
		set;
	}

	[Token(Token = "0x17000123")]
	public abstract SpriteText.Anchor_Pos Anchor
	{
		[Token(Token = "0x60005AD")]
		get;
		[Token(Token = "0x60005AE")]
		set;
	}

	[Token(Token = "0x17000124")]
	public abstract float MaxWidth
	{
		[Token(Token = "0x60005AF")]
		get;
		[Token(Token = "0x60005B0")]
		set;
	}

	[Token(Token = "0x17000125")]
	public abstract bool RemoveUnsupportedCharacters
	{
		[Token(Token = "0x60005B1")]
		get;
		[Token(Token = "0x60005B2")]
		set;
	}

	[Token(Token = "0x17000126")]
	public abstract bool ParseTags
	{
		[Token(Token = "0x60005B3")]
		get;
		[Token(Token = "0x60005B4")]
		set;
	}

	[Token(Token = "0x17000127")]
	public abstract Camera RenderCamera
	{
		[Token(Token = "0x60005B9")]
		get;
		[Token(Token = "0x60005BA")]
		set;
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x17301AC", Offset = "0x17301AC", VA = "0x17301AC")]
	public static UITextBase Create(IControl control)
	{
		return null;
	}

	[Token(Token = "0x6000591")]
	public abstract void SetColor(Color c);

	[Token(Token = "0x6000592")]
	public abstract void Unclip();

	[Token(Token = "0x6000597")]
	public abstract void Hide(bool tf);

	[Token(Token = "0x6000598")]
	public abstract bool IsHidden();

	[Token(Token = "0x600059E")]
	public abstract void Copy(IUIText text);

	[Token(Token = "0x60005A1")]
	public abstract Vector3 GetInsertionPointPos(int charIndex);

	[Token(Token = "0x60005A2")]
	public abstract int GetNearestInsertionPoint(Vector3 point);

	[Token(Token = "0x60005A5")]
	public abstract int PlainIndexToDisplayIndex(int plainCharIndex);

	[Token(Token = "0x60005A6")]
	public abstract int DisplayIndexToPlainIndex(int dispCharIndex);

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x17302D0", Offset = "0x17302D0", VA = "0x17302D0", Slot = "100")]
	protected virtual void OnChange()
	{
	}

	[Token(Token = "0x60005B6")]
	public abstract void UpdateCamera();

	[Token(Token = "0x60005B7")]
	public abstract void SetCamera();

	[Token(Token = "0x60005B8")]
	public abstract void SetCamera(Camera cam);

	[Token(Token = "0x60005BB")]
	public abstract void Start();

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x1730420", Offset = "0x1730420", VA = "0x1730420")]
	protected UITextBase()
	{
	}

	[SpecialName]
	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x1730428", Offset = "0x1730428", VA = "0x1730428", Slot = "48")]
	private Transform IUIText.get_transform()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x1730430", Offset = "0x1730430", VA = "0x1730430", Slot = "49")]
	private GameObject IUIText.get_gameObject()
	{
		return null;
	}
}
[Token(Token = "0x200004E")]
public class EditorClearPlayer : MonoBehaviour
{
	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x152AF60", Offset = "0x152AF60", VA = "0x152AF60")]
	public EditorClearPlayer()
	{
	}
}
[Token(Token = "0x200004F")]
public enum VRCursorType
{
	[Token(Token = "0x4000289")]
	GazeCursor,
	[Token(Token = "0x400028A")]
	GearVRController,
	[Token(Token = "0x400028B")]
	DeviceDriven
}
[Token(Token = "0x2000050")]
public enum ModMode
{
	[Token(Token = "0x400028D")]
	Attach,
	[Token(Token = "0x400028E")]
	Skin,
	[Token(Token = "0x400028F")]
	Ammo,
	[Token(Token = "0x4000290")]
	Special,
	[Token(Token = "0x4000291")]
	Custom,
	[Token(Token = "0x4000292")]
	None,
	[Token(Token = "0x4000293")]
	Settings,
	[Token(Token = "0x4000294")]
	Gun
}
[Token(Token = "0x2000051")]
public enum TouchHit
{
	[Token(Token = "0x4000296")]
	Weapon,
	[Token(Token = "0x4000297")]
	GUI,
	[Token(Token = "0x4000298")]
	Attachment,
	[Token(Token = "0x4000299")]
	Nothing
}
[Token(Token = "0x2000052")]
public enum EmitterType
{
	[Token(Token = "0x400029B")]
	Muzzle,
	[Token(Token = "0x400029C")]
	Ejection
}
[Token(Token = "0x2000053")]
public enum ReceiverType
{
	[Token(Token = "0x400029E")]
	None,
	[Token(Token = "0x400029F")]
	OpenBolt,
	[Token(Token = "0x40002A0")]
	ClosedBolt,
	[Token(Token = "0x40002A1")]
	Pistol,
	[Token(Token = "0x40002A2")]
	FG42,
	[Token(Token = "0x40002A3")]
	BoltActionRifle,
	[Token(Token = "0x40002A4")]
	SingleShot,
	[Token(Token = "0x40002A5")]
	Revolver,
	[Token(Token = "0x40002A6")]
	PumpAction,
	[Token(Token = "0x40002A7")]
	BreakAction
}
[Token(Token = "0x2000054")]
public enum ChamberState
{
	[Token(Token = "0x40002A9")]
	Loaded,
	[Token(Token = "0x40002AA")]
	Fired,
	[Token(Token = "0x40002AB")]
	Empty,
	[Token(Token = "0x40002AC")]
	Feeding
}
[Token(Token = "0x2000055")]
public enum AttachmentConnectionType
{
	[Token(Token = "0x40002AE")]
	Picatinny,
	[Token(Token = "0x40002AF")]
	Barrel,
	[Token(Token = "0x40002B0")]
	Native,
	[Token(Token = "0x40002B1")]
	Stock,
	[Token(Token = "0x40002B2")]
	Magazine,
	[Token(Token = "0x40002B3")]
	Camouflage,
	[Token(Token = "0x40002B4")]
	Upgrade,
	[Token(Token = "0x40002B5")]
	None
}
[Token(Token = "0x2000056")]
public enum SlidePosition
{
	[Token(Token = "0x40002B7")]
	Returned,
	[Token(Token = "0x40002B8")]
	Extended,
	[Token(Token = "0x40002B9")]
	Void,
	[Token(Token = "0x40002BA")]
	Moving,
	[Token(Token = "0x40002BB")]
	Locked
}
[Token(Token = "0x2000057")]
public enum MagazineType
{
	[Token(Token = "0x40002BD")]
	Generic,
	[Token(Token = "0x40002BE")]
	Side,
	[Token(Token = "0x40002BF")]
	Stripper,
	[Token(Token = "0x40002C0")]
	Top,
	[Token(Token = "0x40002C1")]
	Shotgun,
	[Token(Token = "0x40002C2")]
	Hinged
}
[Token(Token = "0x2000058")]
public enum StockType
{
	[Token(Token = "0x40002C4")]
	Sliding,
	[Token(Token = "0x40002C5")]
	Animated,
	[Token(Token = "0x40002C6")]
	Rotating
}
[Token(Token = "0x2000059")]
public enum Direction
{
	[Token(Token = "0x40002C8")]
	Up,
	[Token(Token = "0x40002C9")]
	Down,
	[Token(Token = "0x40002CA")]
	Left,
	[Token(Token = "0x40002CB")]
	Right,
	[Token(Token = "0x40002CC")]
	None,
	[Token(Token = "0x40002CD")]
	Magazine,
	[Token(Token = "0x40002CE")]
	Stock,
	[Token(Token = "0x40002CF")]
	Barrel
}
[Token(Token = "0x200005A")]
public enum Orientation
{
	[Token(Token = "0x40002D1")]
	Left_Right,
	[Token(Token = "0x40002D2")]
	Up_Down,
	[Token(Token = "0x40002D3")]
	Forwards_Backwards
}
[Token(Token = "0x200005B")]
public enum HingeState
{
	[Token(Token = "0x40002D5")]
	Up,
	[Token(Token = "0x40002D6")]
	Down,
	[Token(Token = "0x40002D7")]
	Moving
}
[Token(Token = "0x200005C")]
public enum WeaponComponent
{
	[Token(Token = "0x40002D9")]
	Barrel,
	[Token(Token = "0x40002DA")]
	Trigger,
	[Token(Token = "0x40002DB")]
	Safety
}
[Token(Token = "0x200005D")]
public enum FireModes
{
	[Token(Token = "0x40002DD")]
	Safe,
	[Token(Token = "0x40002DE")]
	Semi,
	[Token(Token = "0x40002DF")]
	Full,
	[Token(Token = "0x40002E0")]
	Burst,
	[Token(Token = "0x40002E1")]
	None,
	[Token(Token = "0x40002E2")]
	Grenade
}
[Token(Token = "0x200005E")]
public enum FireReturn
{
	[Token(Token = "0x40002E4")]
	Fired,
	[Token(Token = "0x40002E5")]
	DidNotFire
}
[Token(Token = "0x200005F")]
public enum FireAnimation
{
	[Token(Token = "0x40002E7")]
	Fire,
	[Token(Token = "0x40002E8")]
	DryFire,
	[Token(Token = "0x40002E9")]
	EmptyFire,
	[Token(Token = "0x40002EA")]
	EndFire
}
[Token(Token = "0x2000060")]
public enum AmmoTypes
{
	[Token(Token = "0x40002EC")]
	Ammo_9x19,
	[Token(Token = "0x40002ED")]
	Ammo_22LR,
	[Token(Token = "0x40002EE")]
	Ammo_30_06,
	[Token(Token = "0x40002EF")]
	Ammo_38SW,
	[Token(Token = "0x40002F0")]
	Ammo_38SW_Magnum,
	[Token(Token = "0x40002F1")]
	Ammo_45ACP,
	[Token(Token = "0x40002F2")]
	Ammo_45ACP_Super,
	[Token(Token = "0x40002F3")]
	Ammo_50Cal,
	[Token(Token = "0x40002F4")]
	Ammo_57x28,
	[Token(Token = "0x40002F5")]
	Ammo_556x45,
	[Token(Token = "0x40002F6")]
	Ammo_762x25,
	[Token(Token = "0x40002F7")]
	Ammo_762x33,
	[Token(Token = "0x40002F8")]
	Ammo_762x51,
	[Token(Token = "0x40002F9")]
	Ammo_765x17,
	[Token(Token = "0x40002FA")]
	Ammo_12G_Red,
	[Token(Token = "0x40002FB")]
	Ammo_338LM,
	[Token(Token = "0x40002FC")]
	Ammo_762x54,
	[Token(Token = "0x40002FD")]
	Ammo_9x39,
	[Token(Token = "0x40002FE")]
	Ammo_762x39,
	[Token(Token = "0x40002FF")]
	Ammo_303British,
	[Token(Token = "0x4000300")]
	Ammo_357,
	[Token(Token = "0x4000301")]
	Ammo_700Nitro,
	[Token(Token = "0x4000302")]
	Ammo_46x30,
	[Token(Token = "0x4000303")]
	Ammo_Grenade40mm,
	[Token(Token = "0x4000304")]
	Ammo_RPG7,
	[Token(Token = "0x4000305")]
	Ammo45Colt,
	[Token(Token = "0x4000306")]
	Ammo_Nagant38,
	[Token(Token = "0x4000307")]
	Ammo_Volcanic,
	[Token(Token = "0x4000308")]
	Ammo_44_40,
	[Token(Token = "0x4000309")]
	Ammo_Remington58,
	[Token(Token = "0x400030A")]
	Ammo_1851Navy
}
[Token(Token = "0x2000061")]
public enum ListType
{
	[Token(Token = "0x400030C")]
	Packs,
	[Token(Token = "0x400030D")]
	Ranges,
	[Token(Token = "0x400030E")]
	Guns,
	[Token(Token = "0x400030F")]
	Attachments,
	[Token(Token = "0x4000310")]
	Achievements,
	[Token(Token = "0x4000311")]
	Friends,
	[Token(Token = "0x4000312")]
	CoinTransactions,
	[Token(Token = "0x4000313")]
	PrizeMoneyTransactions,
	[Token(Token = "0x4000314")]
	Statistics,
	[Token(Token = "0x4000315")]
	Upgrades,
	[Token(Token = "0x4000316")]
	Camouflage,
	[Token(Token = "0x4000317")]
	AttributeUpgrades,
	[Token(Token = "0x4000318")]
	Events,
	[Token(Token = "0x4000319")]
	Challenges,
	[Token(Token = "0x400031A")]
	Dealer,
	[Token(Token = "0x400031B")]
	SearchUsername,
	[Token(Token = "0x400031C")]
	SearchEmail,
	[Token(Token = "0x400031D")]
	LeaderboardsPack,
	[Token(Token = "0x400031E")]
	LeaderboardsEvent,
	[Token(Token = "0x400031F")]
	LeaderboardsResult,
	[Token(Token = "0x4000320")]
	FriendsList
}
[Token(Token = "0x2000062")]
public enum SliderType
{
	[Token(Token = "0x4000322")]
	Camouflage
}
[Token(Token = "0x2000063")]
public enum LoadedScene
{
	[Token(Token = "0x4000324")]
	Base = 0,
	[Token(Token = "0x4000325")]
	Allied = 1,
	[Token(Token = "0x4000326")]
	Lobby = 100,
	[Token(Token = "0x4000327")]
	Simulator = 101
}
[Token(Token = "0x2000064")]
public enum RangeType
{
	[Token(Token = "0x4000329")]
	Simple,
	[Token(Token = "0x400032A")]
	Action,
	[Token(Token = "0x400032B")]
	Heavy,
	[Token(Token = "0x400032C")]
	Sniper,
	[Token(Token = "0x400032D")]
	Any
}
[Token(Token = "0x2000065")]
public enum WeaponType
{
	[Token(Token = "0x400032F")]
	Assault,
	[Token(Token = "0x4000330")]
	Heavy,
	[Token(Token = "0x4000331")]
	Rifle,
	[Token(Token = "0x4000332")]
	SMG,
	[Token(Token = "0x4000333")]
	PDW,
	[Token(Token = "0x4000334")]
	Shotgun,
	[Token(Token = "0x4000335")]
	Battle,
	[Token(Token = "0x4000336")]
	Melee,
	[Token(Token = "0x4000337")]
	Pistol,
	[Token(Token = "0x4000338")]
	Throwable,
	[Token(Token = "0x4000339")]
	Any,
	[Token(Token = "0x400033A")]
	Allied,
	[Token(Token = "0x400033B")]
	Standard,
	[Token(Token = "0x400033C")]
	SWAT,
	[Token(Token = "0x400033D")]
	Custom,
	[Token(Token = "0x400033E")]
	Western
}
[Token(Token = "0x2000066")]
public enum WeaponPack
{
	[Token(Token = "0x4000340")]
	None,
	[Token(Token = "0x4000341")]
	Standard,
	[Token(Token = "0x4000342")]
	Allied,
	[Token(Token = "0x4000343")]
	SWAT,
	[Token(Token = "0x4000344")]
	Seasons,
	[Token(Token = "0x4000345")]
	Western,
	[Token(Token = "0x4000346")]
	Length
}
[Token(Token = "0x2000067")]
public enum LadderPack
{
	[Token(Token = "0x4000348")]
	ShootingAlley,
	[Token(Token = "0x4000349")]
	Default,
	[Token(Token = "0x400034A")]
	Allied,
	[Token(Token = "0x400034B")]
	SWAT,
	[Token(Token = "0x400034C")]
	Seasons,
	[Token(Token = "0x400034D")]
	Western
}
[Token(Token = "0x2000068")]
public enum TargetType
{
	[Token(Token = "0x400034F")]
	Default,
	[Token(Token = "0x4000350")]
	Precision,
	[Token(Token = "0x4000351")]
	Terrorist,
	[Token(Token = "0x4000352")]
	ArmouredTerrorist,
	[Token(Token = "0x4000353")]
	Nominated,
	[Token(Token = "0x4000354")]
	Zombie,
	[Token(Token = "0x4000355")]
	Zombie1,
	[Token(Token = "0x4000356")]
	Zombie2,
	[Token(Token = "0x4000357")]
	Zombie3,
	[Token(Token = "0x4000358")]
	Random,
	[Token(Token = "0x4000359")]
	Civilian,
	[Token(Token = "0x400035A")]
	Clamp,
	[Token(Token = "0x400035B")]
	Clamp2,
	[Token(Token = "0x400035C")]
	Circle
}
[Token(Token = "0x2000069")]
public enum TargetGroup
{
	[Token(Token = "0x400035E")]
	Live,
	[Token(Token = "0x400035F")]
	Multi,
	[Token(Token = "0x4000360")]
	SetPiece
}
[Token(Token = "0x200006A")]
public enum ListCategory
{
	[Token(Token = "0x4000362")]
	WeaponType,
	[Token(Token = "0x4000363")]
	RangeType
}
[Token(Token = "0x200006B")]
public enum PanelMode
{
	[Token(Token = "0x4000365")]
	GunStats,
	[Token(Token = "0x4000366")]
	RangeStats,
	[Token(Token = "0x4000367")]
	GlobalLeaderBoards,
	[Token(Token = "0x4000368")]
	LocalLeaderBoards
}
[Token(Token = "0x200006C")]
public enum TypeOfItem
{
	[Token(Token = "0x400036A")]
	Weapon,
	[Token(Token = "0x400036B")]
	Attachment,
	[Token(Token = "0x400036C")]
	ShootingRange,
	[Token(Token = "0x400036D")]
	Skin,
	[Token(Token = "0x400036E")]
	Pack,
	[Token(Token = "0x400036F")]
	Destructable,
	[Token(Token = "0x4000370")]
	Icon,
	[Token(Token = "0x4000371")]
	Bundle,
	[Token(Token = "0x4000372")]
	Camouflage,
	[Token(Token = "0x4000373")]
	StoreItem,
	[Token(Token = "0x4000374")]
	UpgradeAttachment,
	[Token(Token = "0x4000375")]
	AttributeUpgrade,
	[Token(Token = "0x4000376")]
	NoType,
	[Token(Token = "0x4000377")]
	Consumable,
	[Token(Token = "0x4000378")]
	Licence
}
[Token(Token = "0x200006D")]
public enum AttachmentType
{
	[Token(Token = "0x400037A")]
	notApplicable,
	[Token(Token = "0x400037B")]
	Scope,
	[Token(Token = "0x400037C")]
	Laser,
	[Token(Token = "0x400037D")]
	Flashlight,
	[Token(Token = "0x400037E")]
	Launcher,
	[Token(Token = "0x400037F")]
	Grip,
	[Token(Token = "0x4000380")]
	Bipod,
	[Token(Token = "0x4000381")]
	Handle,
	[Token(Token = "0x4000382")]
	Bayonet,
	[Token(Token = "0x4000383")]
	Suppressor,
	[Token(Token = "0x4000384")]
	IRSpotter,
	[Token(Token = "0x4000385")]
	ThermalScope,
	[Token(Token = "0x4000386")]
	NightVisionScope,
	[Token(Token = "0x4000387")]
	Stock,
	[Token(Token = "0x4000388")]
	Magazine,
	[Token(Token = "0x4000389")]
	Native,
	[Token(Token = "0x400038A")]
	ReflexScope,
	[Token(Token = "0x400038B")]
	SniperScope,
	[Token(Token = "0x400038C")]
	IronSights,
	[Token(Token = "0x400038D")]
	Barrel,
	[Token(Token = "0x400038E")]
	Rail,
	[Token(Token = "0x400038F")]
	SpeedLoader
}
[Token(Token = "0x200006E")]
public enum MagazineSound
{
	[Token(Token = "0x4000391")]
	MagIn,
	[Token(Token = "0x4000392")]
	MagOut,
	[Token(Token = "0x4000393")]
	MagBump,
	[Token(Token = "0x4000394")]
	LidOpen,
	[Token(Token = "0x4000395")]
	LidClose
}
[Token(Token = "0x200006F")]
public enum GameMode
{
	[Token(Token = "0x4000397")]
	Init,
	[Token(Token = "0x4000398")]
	Menu,
	[Token(Token = "0x4000399")]
	GunSelection,
	[Token(Token = "0x400039A")]
	MultiTargetRange,
	[Token(Token = "0x400039B")]
	SimpleRange,
	[Token(Token = "0x400039C")]
	ActionRange,
	[Token(Token = "0x400039D")]
	MarksmanRange,
	[Token(Token = "0x400039E")]
	NominatedTarget,
	[Token(Token = "0x400039F")]
	WaveMode,
	[Token(Token = "0x40003A0")]
	Destruction,
	[Token(Token = "0x40003A1")]
	Zombie,
	[Token(Token = "0x40003A2")]
	HeavyRange,
	[Token(Token = "0x40003A3")]
	OtherRange,
	[Token(Token = "0x40003A4")]
	AllRanges,
	[Token(Token = "0x40003A5")]
	Simulator,
	[Token(Token = "0x40003A6")]
	MapView,
	[Token(Token = "0x40003A7")]
	Upgrades,
	[Token(Token = "0x40003A8")]
	Dealer,
	[Token(Token = "0x40003A9")]
	CurrencyStore,
	[Token(Token = "0x40003AA")]
	Options,
	[Token(Token = "0x40003AB")]
	LeaderBoards,
	[Token(Token = "0x40003AC")]
	Profile,
	[Token(Token = "0x40003AD")]
	Statistics,
	[Token(Token = "0x40003AE")]
	ShootingAlley,
	[Token(Token = "0x40003AF")]
	SideshowRange,
	[Token(Token = "0x40003B0")]
	ChallengeRange,
	[Token(Token = "0x40003B1")]
	MapviewFreinds,
	[Token(Token = "0x40003B2")]
	FlyingFruitRange,
	[Token(Token = "0x40003B3")]
	SideshowBalloon,
	[Token(Token = "0x40003B4")]
	VRLobby,
	[Token(Token = "0x40003B5")]
	VRMapView,
	[Token(Token = "0x40003B6")]
	VRSimulator,
	[Token(Token = "0x40003B7")]
	VRUpgrades,
	[Token(Token = "0x40003B8")]
	VRDealer,
	[Token(Token = "0x40003B9")]
	VROptions,
	[Token(Token = "0x40003BA")]
	VRWelcome,
	[Token(Token = "0x40003BB")]
	DLCStore,
	[Token(Token = "0x40003BC")]
	ControllerHelp,
	[Token(Token = "0x40003BD")]
	Scenario,
	[Token(Token = "0x40003BE")]
	Calibration,
	[Token(Token = "0x40003BF")]
	WeaponConstruction,
	[Token(Token = "0x40003C0")]
	EventPanelInput,
	[Token(Token = "0x40003C1")]
	CubemapPreview
}
[Token(Token = "0x2000070")]
public enum ControlType
{
	[Token(Token = "0x40003C3")]
	GunSelection,
	[Token(Token = "0x40003C4")]
	Thumbstick,
	[Token(Token = "0x40003C5")]
	Tilt,
	[Token(Token = "0x40003C6")]
	ThumbstickSlide,
	[Token(Token = "0x40003C7")]
	Screen
}
[Token(Token = "0x2000071")]
public enum TutorialStepType
{
	[Token(Token = "0x40003C9")]
	Slide,
	[Token(Token = "0x40003CA")]
	SlideBack,
	[Token(Token = "0x40003CB")]
	SlideForward,
	[Token(Token = "0x40003CC")]
	HandleUp,
	[Token(Token = "0x40003CD")]
	HandleDown,
	[Token(Token = "0x40003CE")]
	Fire,
	[Token(Token = "0x40003CF")]
	Reload,
	[Token(Token = "0x40003D0")]
	ShotgunReload,
	[Token(Token = "0x40003D1")]
	SlideRelease
}
[Token(Token = "0x2000072")]
public enum SpawnType
{
	[Token(Token = "0x40003D3")]
	Tagged,
	[Token(Token = "0x40003D4")]
	NamedSpawns,
	[Token(Token = "0x40003D5")]
	Zombie
}
[Token(Token = "0x2000073")]
public enum StoreMode
{
	[Token(Token = "0x40003D7")]
	CategoryView,
	[Token(Token = "0x40003D8")]
	CurrencyDecision,
	[Token(Token = "0x40003D9")]
	GlobalStore,
	[Token(Token = "0x40003DA")]
	PrizeMoneyPurchase,
	[Token(Token = "0x40003DB")]
	CoinPurchase,
	[Token(Token = "0x40003DC")]
	NoStore,
	[Token(Token = "0x40003DD")]
	PurchaseConfirmation
}
[Token(Token = "0x2000074")]
public enum HudStatus
{
	[Token(Token = "0x40003DF")]
	DelayedFollow,
	[Token(Token = "0x40003E0")]
	LockedToPlayspace,
	[Token(Token = "0x40003E1")]
	LockedToHeadset,
	[Token(Token = "0x40003E2")]
	Unspecified
}
[Token(Token = "0x2000075")]
public enum BulletSide
{
	[Token(Token = "0x40003E4")]
	None,
	[Token(Token = "0x40003E5")]
	Right,
	[Token(Token = "0x40003E6")]
	Left
}
[Token(Token = "0x2000076")]
public enum UpgradeMenuButtons
{
	[Token(Token = "0x40003E8")]
	defaultButtons,
	[Token(Token = "0x40003E9")]
	spawnAttachButtons,
	[Token(Token = "0x40003EA")]
	equipDetachButtons
}
[Token(Token = "0x2000077")]
public enum ArrayType
{
	[Token(Token = "0x40003EC")]
	Float,
	[Token(Token = "0x40003ED")]
	Int32,
	[Token(Token = "0x40003EE")]
	Bool,
	[Token(Token = "0x40003EF")]
	String,
	[Token(Token = "0x40003F0")]
	Vector2,
	[Token(Token = "0x40003F1")]
	Vector3,
	[Token(Token = "0x40003F2")]
	Quaternion,
	[Token(Token = "0x40003F3")]
	Color
}
[Token(Token = "0x2000078")]
public enum CurrencyType
{
	[Token(Token = "0x40003F5")]
	Coins,
	[Token(Token = "0x40003F6")]
	PrizeMoney,
	[Token(Token = "0x40003F7")]
	Ammunition,
	[Token(Token = "0x40003F8")]
	SALE_Coins,
	[Token(Token = "0x40003F9")]
	SALE_PrizeMoney,
	[Token(Token = "0x40003FA")]
	Gift,
	[Token(Token = "0x40003FB")]
	Multi,
	[Token(Token = "0x40003FC")]
	Unlock
}
[Token(Token = "0x2000079")]
public enum operation
{
	[Token(Token = "0x40003FE")]
	Get,
	[Token(Token = "0x40003FF")]
	Set
}
[Token(Token = "0x200007A")]
public enum ShowcaseMode
{
	[Token(Token = "0x4000401")]
	Lobby,
	[Token(Token = "0x4000402")]
	Simulator,
	[Token(Token = "0x4000403")]
	Photo,
	[Token(Token = "0x4000404")]
	Animated,
	[Token(Token = "0x4000405")]
	NoShowcase
}
[Token(Token = "0x200007B")]
public enum TargetFallingState
{
	[Token(Token = "0x4000407")]
	Falling_Destroyed,
	[Token(Token = "0x4000408")]
	Falling_Active,
	[Token(Token = "0x4000409")]
	NotFalling
}
[Token(Token = "0x200007C")]
public enum TypeOfTargetHit
{
	[Token(Token = "0x400040B")]
	Normal,
	[Token(Token = "0x400040C")]
	Headshot,
	[Token(Token = "0x400040D")]
	Bullseye,
	[Token(Token = "0x400040E")]
	Destructable,
	[Token(Token = "0x400040F")]
	SideShow,
	[Token(Token = "0x4000410")]
	Civilian
}
[Token(Token = "0x200007D")]
public enum SpawnTargetType
{
	[Token(Token = "0x4000412")]
	Default,
	[Token(Token = "0x4000413")]
	Hostage,
	[Token(Token = "0x4000414")]
	Multi,
	[Token(Token = "0x4000415")]
	Civilian
}
[Token(Token = "0x200007E")]
public enum UpgradeType
{
	[Token(Token = "0x4000417")]
	notApplicable,
	[Token(Token = "0x4000418")]
	RailMount,
	[Token(Token = "0x4000419")]
	RailMountPoint,
	[Token(Token = "0x400041A")]
	BarrelMountPoint,
	[Token(Token = "0x400041B")]
	StockMountPoint,
	[Token(Token = "0x400041C")]
	SideMountPoint,
	[Token(Token = "0x400041D")]
	ScopeMountPoint,
	[Token(Token = "0x400041E")]
	ForegripMountPoint,
	[Token(Token = "0x400041F")]
	RateOfFire,
	[Token(Token = "0x4000420")]
	AmmoCapacity,
	[Token(Token = "0x4000421")]
	ReloadSpeed,
	[Token(Token = "0x4000422")]
	SightingSpeed,
	[Token(Token = "0x4000423")]
	ActionSpeed,
	[Token(Token = "0x4000424")]
	HoldBreath,
	[Token(Token = "0x4000425")]
	Accuracy,
	[Token(Token = "0x4000426")]
	AmmunitionType,
	[Token(Token = "0x4000427")]
	HeavyBarrel,
	[Token(Token = "0x4000428")]
	Licence,
	[Token(Token = "0x4000429")]
	Mastery,
	[Token(Token = "0x400042A")]
	WarsawAttachment
}
[Token(Token = "0x200007F")]
public enum PushTypes
{
	[Token(Token = "0x400042C")]
	UnlockItems,
	[Token(Token = "0x400042D")]
	AwardItems,
	[Token(Token = "0x400042E")]
	Message,
	[Token(Token = "0x400042F")]
	LockItems
}
[Token(Token = "0x2000080")]
public enum StorageType
{
	[Token(Token = "0x4000431")]
	local,
	[Token(Token = "0x4000432")]
	network,
	[Token(Token = "0x4000433")]
	encryptedLocal,
	[Token(Token = "0x4000434")]
	encryptedNetwork
}
[Token(Token = "0x2000081")]
public enum ArrowDirection
{
	[Token(Token = "0x4000436")]
	Left,
	[Token(Token = "0x4000437")]
	Right,
	[Token(Token = "0x4000438")]
	Both,
	[Token(Token = "0x4000439")]
	None
}
[Token(Token = "0x2000082")]
public enum AllowOperationFromSide
{
	[Token(Token = "0x400043B")]
	Both,
	[Token(Token = "0x400043C")]
	Left,
	[Token(Token = "0x400043D")]
	Right
}
[Token(Token = "0x2000083")]
public enum RangeAction
{
	[Token(Token = "0x400043F")]
	None,
	[Token(Token = "0x4000440")]
	SetPiece,
	[Token(Token = "0x4000441")]
	NextWayPoint,
	[Token(Token = "0x4000442")]
	NextCameraLocation
}
[Token(Token = "0x2000084")]
public enum EmbeddedFeature
{
	[Token(Token = "0x4000444")]
	None,
	[Token(Token = "0x4000445")]
	Flashlight
}
[Token(Token = "0x2000085")]
public enum SubwayRailLine
{
	[Token(Token = "0x4000447")]
	Western,
	[Token(Token = "0x4000448")]
	Center,
	[Token(Token = "0x4000449")]
	Eastern,
	[Token(Token = "0x400044A")]
	None
}
[Token(Token = "0x2000086")]
public enum AvatarSkin
{
	[Token(Token = "0x400044C")]
	TransparentBlue,
	[Token(Token = "0x400044D")]
	Black,
	[Token(Token = "0x400044E")]
	Camouflage,
	[Token(Token = "0x400044F")]
	HalloweenTransparent,
	[Token(Token = "0x4000450")]
	HalloweenOpaque
}
[Token(Token = "0x2000087")]
public enum SurfaceType
{
	[Token(Token = "0x4000452")]
	Concrete,
	[Token(Token = "0x4000453")]
	Dust,
	[Token(Token = "0x4000454")]
	Metal,
	[Token(Token = "0x4000455")]
	Wood
}
[Token(Token = "0x2000088")]
public enum Side
{
	[Token(Token = "0x4000457")]
	Left,
	[Token(Token = "0x4000458")]
	Right
}
[Token(Token = "0x2000089")]
public enum VibrationForce
{
	[Token(Token = "0x400045A")]
	None,
	[Token(Token = "0x400045B")]
	Light,
	[Token(Token = "0x400045C")]
	Medium,
	[Token(Token = "0x400045D")]
	Heavy
}
[Token(Token = "0x200008A")]
public enum Digit
{
	[Token(Token = "0x400045F")]
	Thumb,
	[Token(Token = "0x4000460")]
	Index,
	[Token(Token = "0x4000461")]
	Middle,
	[Token(Token = "0x4000462")]
	Ring,
	[Token(Token = "0x4000463")]
	Pinky
}
[Token(Token = "0x200008B")]
public enum RawInputs
{
	[Token(Token = "0x4000465")]
	Trigger,
	[Token(Token = "0x4000466")]
	Grip
}
[Token(Token = "0x200008C")]
public enum HapticsState
{
	[Token(Token = "0x4000468")]
	Full,
	[Token(Token = "0x4000469")]
	Off
}
[Token(Token = "0x200008D")]
public enum TBMControllerType
{
	[Token(Token = "0x400046B")]
	Undefined,
	[Token(Token = "0x400046C")]
	ViveWand,
	[Token(Token = "0x400046D")]
	OculusTouch,
	[Token(Token = "0x400046E")]
	ValveIndex,
	[Token(Token = "0x400046F")]
	PSMoveController,
	[Token(Token = "0x4000470")]
	InsideOutTouch,
	[Token(Token = "0x4000471")]
	ViveCosmos,
	[Token(Token = "0x4000472")]
	OpenVRController
}
[Token(Token = "0x200008E")]
public enum TouchQuadrant
{
	[Token(Token = "0x4000474")]
	None,
	[Token(Token = "0x4000475")]
	Center,
	[Token(Token = "0x4000476")]
	West,
	[Token(Token = "0x4000477")]
	East,
	[Token(Token = "0x4000478")]
	South,
	[Token(Token = "0x4000479")]
	North
}
[Token(Token = "0x200008F")]
public enum QuadrantInputType
{
	[Token(Token = "0x400047B")]
	None,
	[Token(Token = "0x400047C")]
	ThumbStick,
	[Token(Token = "0x400047D")]
	Touchpad
}
[Token(Token = "0x2000090")]
public enum IndicatorSizing
{
	[Token(Token = "0x400047F")]
	None,
	[Token(Token = "0x4000480")]
	Small,
	[Token(Token = "0x4000481")]
	Large
}
[Token(Token = "0x2000091")]
public enum NightSightColors
{
	[Token(Token = "0x4000483")]
	Off,
	[Token(Token = "0x4000484")]
	Red,
	[Token(Token = "0x4000485")]
	Green,
	[Token(Token = "0x4000486")]
	White
}
[Token(Token = "0x2000092")]
public enum PerformanceAdjustmentMode
{
	[Token(Token = "0x4000488")]
	None,
	[Token(Token = "0x4000489")]
	Low,
	[Token(Token = "0x400048A")]
	Medium,
	[Token(Token = "0x400048B")]
	High
}
[Token(Token = "0x2000093")]
public enum Holiday
{
	[Token(Token = "0x400048D")]
	None,
	[Token(Token = "0x400048E")]
	LunarNewYears,
	[Token(Token = "0x400048F")]
	Easter,
	[Token(Token = "0x4000490")]
	Halloween,
	[Token(Token = "0x4000491")]
	Xmas,
	[Token(Token = "0x4000492")]
	NewYears,
	[Token(Token = "0x4000493")]
	AprilFools
}
[Token(Token = "0x2000094")]
public enum SubGameMode
{
	[Token(Token = "0x4000495")]
	None,
	[Token(Token = "0x4000496")]
	Simple,
	[Token(Token = "0x4000497")]
	Marksman,
	[Token(Token = "0x4000498")]
	Defend,
	[Token(Token = "0x4000499")]
	WaveDefence,
	[Token(Token = "0x400049A")]
	Survival,
	[Token(Token = "0x400049B")]
	Zombie
}
[Token(Token = "0x2000095")]
public enum ColliderEventType
{
	[Token(Token = "0x400049D")]
	OnEnter,
	[Token(Token = "0x400049E")]
	OnExit,
	[Token(Token = "0x400049F")]
	Both
}
[Token(Token = "0x2000096")]
public enum TypeOfAttach
{
	[Token(Token = "0x40004A1")]
	Regular,
	[Token(Token = "0x40004A2")]
	Fixed,
	[Token(Token = "0x40004A3")]
	Both
}
[Token(Token = "0x2000097")]
public enum MinOrMax
{
	[Token(Token = "0x40004A5")]
	Min,
	[Token(Token = "0x40004A6")]
	Max
}
[Token(Token = "0x2000098")]
public enum VectorComponent
{
	[Token(Token = "0x40004A8")]
	X,
	[Token(Token = "0x40004A9")]
	Y,
	[Token(Token = "0x40004AA")]
	Z,
	[Token(Token = "0x40004AB")]
	W
}
[Token(Token = "0x2000099")]
public enum TwoHandedGrabType
{
	[Token(Token = "0x40004AD")]
	Off,
	[Token(Token = "0x40004AE")]
	Manual,
	[Token(Token = "0x40004AF")]
	Auto
}
[Token(Token = "0x200009A")]
public enum OffMeshLinkMoveMethod
{
	[Token(Token = "0x40004B1")]
	Teleport,
	[Token(Token = "0x40004B2")]
	Linear,
	[Token(Token = "0x40004B3")]
	Parabola,
	[Token(Token = "0x40004B4")]
	Curve,
	[Token(Token = "0x40004B5")]
	Bezier
}
[Token(Token = "0x200009B")]
public enum LobbyNavVolume
{
	[Token(Token = "0x40004B7")]
	Unspecified,
	[Token(Token = "0x40004B8")]
	MapView,
	[Token(Token = "0x40004B9")]
	Dealer
}
[Token(Token = "0x200009C")]
public enum AxisOffsetType
{
	[Token(Token = "0x40004BB")]
	Position,
	[Token(Token = "0x40004BC")]
	Rotation,
	[Token(Token = "0x40004BD")]
	Both
}
[Token(Token = "0x200009D")]
public enum ValueOperation
{
	[Token(Token = "0x40004BF")]
	Add,
	[Token(Token = "0x40004C0")]
	Subtract,
	[Token(Token = "0x40004C1")]
	Multiply,
	[Token(Token = "0x40004C2")]
	Divide
}
[Token(Token = "0x200009E")]
public enum IconLayout
{
	[Token(Token = "0x40004C4")]
	Radial,
	[Token(Token = "0x40004C5")]
	List
}
[Token(Token = "0x200009F")]
public enum DealerSelectionType
{
	[Token(Token = "0x40004C7")]
	Class,
	[Token(Token = "0x40004C8")]
	Pack
}
[Token(Token = "0x20000A0")]
public enum LobbyLoadOverride
{
	[Token(Token = "0x40004CA")]
	None,
	[Token(Token = "0x40004CB")]
	DlcDealerSwat,
	[Token(Token = "0x40004CC")]
	DlcDealerWestern
}
[Token(Token = "0x20000A1")]
public enum FadeMode
{
	[Token(Token = "0x40004CE")]
	PingPong,
	[Token(Token = "0x40004CF")]
	FadeOut
}
[Serializable]
[Token(Token = "0x20000A2")]
public class EmergeFromCoverInfo
{
	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x152AF68", Offset = "0x152AF68", VA = "0x152AF68")]
	public EmergeFromCoverInfo()
	{
	}
}
[Token(Token = "0x20000A3")]
public class Enums : MonoBehaviour
{
	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x152AF70", Offset = "0x152AF70", VA = "0x152AF70")]
	public static WeaponType[] GetCurrentlyUsedWeaponTypes()
	{
		return null;
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x152AFE4", Offset = "0x152AFE4", VA = "0x152AFE4")]
	public static bool IsWeaponCategory(WeaponType weaponType)
	{
		return default(bool);
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x152B004", Offset = "0x152B004", VA = "0x152B004")]
	public Enums()
	{
	}
}
[Token(Token = "0x20000A4")]
public class ExampleScript : MonoBehaviour
{
	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text batteryText;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool auto;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool activeResearch;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float autoTimer;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float autoDelay;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private ForceTubeVRChannel target;

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x152B35C", Offset = "0x152B35C", VA = "0x152B35C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x152B5C0", Offset = "0x152B5C0", VA = "0x152B5C0")]
	private void Update()
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x152BB48", Offset = "0x152BB48", VA = "0x152BB48")]
	public void Shoot()
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x152BC04", Offset = "0x152BC04", VA = "0x152BC04")]
	public void AutoShoot()
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x152BC14", Offset = "0x152BC14", VA = "0x152BC14")]
	public void Kick()
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x152BE8C", Offset = "0x152BE8C", VA = "0x152BE8C")]
	public void Rumble()
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x152C174", Offset = "0x152C174", VA = "0x152C174")]
	public void SetTargetChannel(int target)
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x152C17C", Offset = "0x152C17C", VA = "0x152C17C")]
	public void SetActiveResearch()
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x152C3CC", Offset = "0x152C3CC", VA = "0x152C3CC")]
	public void OpenBluetoothSettings()
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x152C5D0", Offset = "0x152C5D0", VA = "0x152C5D0")]
	public ExampleScript()
	{
	}
}
[Token(Token = "0x20000A5")]
public enum AvailableBonusType
{
	[Token(Token = "0x40004D7")]
	HardcoreMode,
	[Token(Token = "0x40004D8")]
	BoltActionRifle,
	[Token(Token = "0x40004D9")]
	Shotgun,
	[Token(Token = "0x40004DA")]
	KnifeKills,
	[Token(Token = "0x40004DB")]
	GrenadeKills,
	[Token(Token = "0x40004DC")]
	PhysicsObjectKills,
	[Token(Token = "0x40004DD")]
	PunchKills,
	[Token(Token = "0x40004DE")]
	EnvironmentExplosives,
	[Token(Token = "0x40004DF")]
	HostagesSaved,
	[Token(Token = "0x40004E0")]
	FruitShot,
	[Token(Token = "0x40004E1")]
	ExtraSurvivalTime
}
[Token(Token = "0x20000A6")]
internal static class BonusRewards
{
	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly RewardMinMax[] BONUS_REWARDS;
}
[Token(Token = "0x20000A7")]
public struct RewardMinMax
{
	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int minReward;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int maxReward;

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x1A2B328", Offset = "0x1A2B328", VA = "0x1A2B328")]
	public RewardMinMax(int min, int max)
	{
	}
}
[Token(Token = "0x20000A8")]
public class ExtraBonus : IComparable<ExtraBonus>
{
	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private AvailableBonusType m_bonusType;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string m_bonusName;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_count;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int m_cashValue;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RewardMinMax m_minMaxReward;

	[Token(Token = "0x17000128")]
	public AvailableBonusType bonusType
	{
		[Token(Token = "0x60005D1")]
		[Address(RVA = "0x152C8DC", Offset = "0x152C8DC", VA = "0x152C8DC")]
		get
		{
			return default(AvailableBonusType);
		}
	}

	[Token(Token = "0x17000129")]
	public string bonusName
	{
		[Token(Token = "0x60005D2")]
		[Address(RVA = "0x152C8E4", Offset = "0x152C8E4", VA = "0x152C8E4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700012A")]
	public int count
	{
		[Token(Token = "0x60005D3")]
		[Address(RVA = "0x152C8EC", Offset = "0x152C8EC", VA = "0x152C8EC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700012B")]
	public int totalCashValue
	{
		[Token(Token = "0x60005D4")]
		[Address(RVA = "0x152CBA0", Offset = "0x152CBA0", VA = "0x152CBA0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700012C")]
	public int individualCashValue
	{
		[Token(Token = "0x60005D5")]
		[Address(RVA = "0x152CBAC", Offset = "0x152CBAC", VA = "0x152CBAC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x152C5EC", Offset = "0x152C5EC", VA = "0x152C5EC")]
	public ExtraBonus(AvailableBonusType type, RewardMinMax minMaxReward)
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x152CBB4", Offset = "0x152CBB4", VA = "0x152CBB4")]
	public void SetCount(int newCount)
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x152CF10", Offset = "0x152CF10", VA = "0x152CF10")]
	public void AddCount()
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x152CF1C", Offset = "0x152CF1C", VA = "0x152CF1C")]
	public void UpdateCashValue(float progress)
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x152CF5C", Offset = "0x152CF5C", VA = "0x152CF5C")]
	public string GetCountString()
	{
		return null;
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x152C640", Offset = "0x152C640", VA = "0x152C640")]
	private string GetDisplayNameFromType(AvailableBonusType type)
	{
		return null;
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x152D000", Offset = "0x152D000", VA = "0x152D000", Slot = "4")]
	public int CompareTo(ExtraBonus compare)
	{
		return default(int);
	}
}
[Token(Token = "0x20000A9")]
public class ExtraBonuses
{
	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<AvailableBonusType, ExtraBonus> m_bonuses;

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x152D0F4", Offset = "0x152D0F4", VA = "0x152D0F4")]
	public ExtraBonuses(float rangeProgress)
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x152D5B4", Offset = "0x152D5B4", VA = "0x152D5B4")]
	public void SoftResetValues()
	{
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x152D74C", Offset = "0x152D74C", VA = "0x152D74C")]
	public List<ExtraBonus> GetValuedBonuses()
	{
		return null;
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x152D91C", Offset = "0x152D91C", VA = "0x152D91C")]
	public List<ExtraBonus> GetZeroValuedBonuses(int maxEntries)
	{
		return null;
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x152DBCC", Offset = "0x152DBCC", VA = "0x152DBCC")]
	public void IncrementBonusCount(AvailableBonusType bonusTypeToSet)
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0x152D6D8", Offset = "0x152D6D8", VA = "0x152D6D8")]
	public void SetBonusCount(AvailableBonusType bonusTypeToSet, int count)
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0x152DC40", Offset = "0x152DC40", VA = "0x152DC40")]
	public int GetIndividualBonusValue(AvailableBonusType bonusType)
	{
		return default(int);
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0x152DCB0", Offset = "0x152DCB0", VA = "0x152DCB0")]
	public int GetTotalBonus()
	{
		return default(int);
	}
}
[Token(Token = "0x20000AA")]
public enum ForceTubeVRChannel
{
	[Token(Token = "0x40004EC")]
	all,
	[Token(Token = "0x40004ED")]
	rifle,
	[Token(Token = "0x40004EE")]
	rifleButt,
	[Token(Token = "0x40004EF")]
	rifleBolt,
	[Token(Token = "0x40004F0")]
	pistol1,
	[Token(Token = "0x40004F1")]
	pistol2,
	[Token(Token = "0x40004F2")]
	other,
	[Token(Token = "0x40004F3")]
	vest
}
[Token(Token = "0x20000AB")]
public class ForceTubeVRInterface : MonoBehaviour
{
	[Token(Token = "0x2000194")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769678", Offset = "0x769678")]
	private sealed class <InitAndroid>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool pistolsFirst;

		[Token(Token = "0x17000215")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EF5")]
			[Address(RVA = "0x173B13C", Offset = "0x173B13C", VA = "0x173B13C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000216")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EF7")]
			[Address(RVA = "0x173B184", Offset = "0x173B184", VA = "0x173B184", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EF2")]
		[Address(RVA = "0x173AD10", Offset = "0x173AD10", VA = "0x173AD10")]
		[DebuggerHidden]
		public <InitAndroid>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000EF3")]
		[Address(RVA = "0x173AD3C", Offset = "0x173AD3C", VA = "0x173AD3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EF4")]
		[Address(RVA = "0x173AD40", Offset = "0x173AD40", VA = "0x173AD40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EF6")]
		[Address(RVA = "0x173B144", Offset = "0x173B144", VA = "0x173B144", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AndroidJavaObject ForceTubeVRPlugin;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ForceTubeVRInterface instance;

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0x1532980", Offset = "0x1532980", VA = "0x1532980")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76A948", Offset = "0x76A948")]
	private static IEnumerator InitAndroid(bool pistolsFirst)
	{
		return null;
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0x152B404", Offset = "0x152B404", VA = "0x152B404")]
	public static void InitAsync(bool pistolsFirst = false)
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0x152BCC8", Offset = "0x152BCC8", VA = "0x152BCC8")]
	public static void Kick(byte power, ForceTubeVRChannel target = ForceTubeVRChannel.rifle)
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0x152BF44", Offset = "0x152BF44", VA = "0x152BF44")]
	public static void Rumble(byte power, float duration, ForceTubeVRChannel target = ForceTubeVRChannel.rifle)
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0x152B754", Offset = "0x152B754", VA = "0x152B754")]
	public static void Shoot(byte kickPower, byte rumblePower, float rumbleDuration, ForceTubeVRChannel target = ForceTubeVRChannel.rifle)
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0x152C264", Offset = "0x152C264", VA = "0x152C264")]
	public static void SetActiveResearch(bool active)
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0x15329F0", Offset = "0x15329F0", VA = "0x15329F0")]
	public static byte TempoToKickPower(float tempo)
	{
		return default(byte);
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0x152B9D0", Offset = "0x152B9D0", VA = "0x152B9D0")]
	public static byte GetBatteryLevel()
	{
		return default(byte);
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0x152C470", Offset = "0x152C470", VA = "0x152C470")]
	public static void OpenBluetoothSettings()
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0x1532B78", Offset = "0x1532B78", VA = "0x1532B78")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0x1532CD8", Offset = "0x1532CD8", VA = "0x1532CD8")]
	public ForceTubeVRInterface()
	{
	}
}
[Token(Token = "0x20000AC")]
public class GC3WebClient : WebClient
{
	[Token(Token = "0x60005F0")]
	[Address(RVA = "0x1532CE4", Offset = "0x1532CE4", VA = "0x1532CE4")]
	public GC3WebClient()
	{
	}
}
[Token(Token = "0x20000AD")]
public class GC3WebClientAsync : GC3WebClient
{
	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool Processing;

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0x1532CEC", Offset = "0x1532CEC", VA = "0x1532CEC")]
	public GC3WebClientAsync()
	{
	}
}
[Token(Token = "0x20000AE")]
public class Hash : MonoBehaviour
{
	[Token(Token = "0x60005F3")]
	[Address(RVA = "0x1533904", Offset = "0x1533904", VA = "0x1533904")]
	public static string Md5Sum(string strToEncrypt)
	{
		return null;
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0x1533AA8", Offset = "0x1533AA8", VA = "0x1533AA8")]
	public Hash()
	{
	}
}
[Token(Token = "0x20000AF")]
public class HeadTrackingDebug : MonoBehaviour
{
	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject player;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject head;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float initialOrientationX;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float initialOrientationY;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float initialOrientationZ;

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0x1533AB0", Offset = "0x1533AB0", VA = "0x1533AB0")]
	private void Start()
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0x1533BB0", Offset = "0x1533BB0", VA = "0x1533BB0")]
	private void Update()
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0x1533C88", Offset = "0x1533C88", VA = "0x1533C88")]
	public HeadTrackingDebug()
	{
	}
}
[Token(Token = "0x20000B0")]
public interface IInteractHandler : IEventSystemHandler
{
	[Token(Token = "0x60005F8")]
	void OnInteract(BaseEventData eventData);
}
[Token(Token = "0x20000B1")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x769034", Offset = "0x769034")]
public class EzguiLanguageFallback : ScriptableObject
{
	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private FontReplacement[] replacements;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool defaultOverride;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private FontData defaultFont;

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0x152DDE0", Offset = "0x152DDE0", VA = "0x152DDE0")]
	public FontData GetReplacement(TextAsset original)
	{
		return null;
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0x152DEEC", Offset = "0x152DEEC", VA = "0x152DEEC")]
	public EzguiLanguageFallback()
	{
	}
}
[Serializable]
[Token(Token = "0x20000B2")]
public class FontReplacement
{
	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private TextAsset originalFont;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private FontData replacementFont;

	[Token(Token = "0x1700012D")]
	public TextAsset OriginalFont
	{
		[Token(Token = "0x60005FB")]
		[Address(RVA = "0x1532540", Offset = "0x1532540", VA = "0x1532540")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700012E")]
	public FontData ReplacementFont
	{
		[Token(Token = "0x60005FC")]
		[Address(RVA = "0x1532548", Offset = "0x1532548", VA = "0x1532548")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0x1532550", Offset = "0x1532550", VA = "0x1532550")]
	public FontReplacement()
	{
	}
}
[Serializable]
[Token(Token = "0x20000B3")]
public class FontData
{
	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private TextAsset font;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Material material;

	[Token(Token = "0x1700012F")]
	public TextAsset Font
	{
		[Token(Token = "0x60005FE")]
		[Address(RVA = "0x1532528", Offset = "0x1532528", VA = "0x1532528")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000130")]
	public Material Material
	{
		[Token(Token = "0x60005FF")]
		[Address(RVA = "0x1532530", Offset = "0x1532530", VA = "0x1532530")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0x1532538", Offset = "0x1532538", VA = "0x1532538")]
	public FontData()
	{
	}
}
[Token(Token = "0x20000B4")]
public class EzguiTextLog : ScriptableObject
{
	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] staticTags;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] overwrittenTags;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string[] dynamicTags;

	[Token(Token = "0x6000601")]
	[Address(RVA = "0x152DEF4", Offset = "0x152DEF4", VA = "0x152DEF4")]
	public EzguiTextLog()
	{
	}
}
[Token(Token = "0x20000B5")]
public enum Language
{
	[Token(Token = "0x4000507")]
	English,
	[Token(Token = "0x4000508")]
	French,
	[Token(Token = "0x4000509")]
	Spanish,
	[Token(Token = "0x400050A")]
	German,
	[Token(Token = "0x400050B")]
	Korean,
	[Token(Token = "0x400050C")]
	Japanese
}
[Token(Token = "0x20000B6")]
public class LanguageManager : MonoBehaviour
{
	[Token(Token = "0x2000195")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769688", Offset = "0x769688")]
	private sealed class <ChangeLanguageRoutine>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Language lang;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callback;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string <fontResource>5__2;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ResourceRequest <sourceOp>5__3;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ResourceRequest <fontOp>5__4;

		[Token(Token = "0x17000217")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EFB")]
			[Address(RVA = "0x173B4B4", Offset = "0x173B4B4", VA = "0x173B4B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000218")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EFD")]
			[Address(RVA = "0x173B4FC", Offset = "0x173B4FC", VA = "0x173B4FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EF8")]
		[Address(RVA = "0x173B1DC", Offset = "0x173B1DC", VA = "0x173B1DC")]
		[DebuggerHidden]
		public <ChangeLanguageRoutine>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0x173B208", Offset = "0x173B208", VA = "0x173B208", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x173B20C", Offset = "0x173B20C", VA = "0x173B20C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EFC")]
		[Address(RVA = "0x173B4BC", Offset = "0x173B4BC", VA = "0x173B4BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LanguageManager instance;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static bool spawned;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static Language current;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static bool init;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Coroutine routine;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769B1C", Offset = "0x769B1C")]
	private static EzguiLanguageFallback <FontFallback>k__BackingField;

	[Token(Token = "0x4000514")]
	private const string PPREF = "GCL_OverrideLang";

	[Token(Token = "0x17000131")]
	public static bool EnableLocalization
	{
		[Token(Token = "0x6000602")]
		[Address(RVA = "0x1535138", Offset = "0x1535138", VA = "0x1535138")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000132")]
	public static Language Current
	{
		[Token(Token = "0x6000603")]
		[Address(RVA = "0x1535140", Offset = "0x1535140", VA = "0x1535140")]
		get
		{
			return default(Language);
		}
		[Token(Token = "0x6000604")]
		[Address(RVA = "0x15351A4", Offset = "0x15351A4", VA = "0x15351A4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000133")]
	public static bool Init
	{
		[Token(Token = "0x6000605")]
		[Address(RVA = "0x153520C", Offset = "0x153520C", VA = "0x153520C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000134")]
	public static EzguiLanguageFallback FontFallback
	{
		[Token(Token = "0x6000606")]
		[Address(RVA = "0x1535270", Offset = "0x1535270", VA = "0x1535270")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A9A8", Offset = "0x76A9A8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000607")]
		[Address(RVA = "0x15352D4", Offset = "0x15352D4", VA = "0x15352D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A9B8", Offset = "0x76A9B8")]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public static event Action RefreshLanguage
	{
		[Token(Token = "0x6000608")]
		[Address(RVA = "0x1535340", Offset = "0x1535340", VA = "0x1535340")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A9C8", Offset = "0x76A9C8")]
		add
		{
		}
		[Token(Token = "0x6000609")]
		[Address(RVA = "0x1535438", Offset = "0x1535438", VA = "0x1535438")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A9D8", Offset = "0x76A9D8")]
		remove
		{
		}
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0x1535530", Offset = "0x1535530", VA = "0x1535530")]
	public static void ChangeLanguageSync(Language lang)
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0x1535948", Offset = "0x1535948", VA = "0x1535948")]
	public static void ChangeLanguageAsync(Language lang, Action callback)
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0x1535C20", Offset = "0x1535C20", VA = "0x1535C20")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76A9E8", Offset = "0x76A9E8")]
	private IEnumerator ChangeLanguageRoutine(Language lang, Action callback)
	{
		return null;
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0x15357BC", Offset = "0x15357BC", VA = "0x15357BC")]
	private static void ChangeLanguage(Language lang, LanguageData source, EzguiLanguageFallback font)
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0x15356AC", Offset = "0x15356AC", VA = "0x15356AC")]
	private static string GetSourceResource(Language lang)
	{
		return null;
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0x1535734", Offset = "0x1535734", VA = "0x1535734")]
	private static string GetFontResource(Language lang)
	{
		return null;
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0x1535CA8", Offset = "0x1535CA8", VA = "0x1535CA8")]
	private static string TagFromLanguage(Language lang)
	{
		return null;
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0x1535D48", Offset = "0x1535D48", VA = "0x1535D48")]
	public static string DisplayNameFromLanguage(Language lang)
	{
		return null;
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0x1535DE8", Offset = "0x1535DE8", VA = "0x1535DE8")]
	public static bool HasPref()
	{
		return default(bool);
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0x1535E5C", Offset = "0x1535E5C", VA = "0x1535E5C")]
	public static int GetPrefInt()
	{
		return default(int);
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0x1535ED0", Offset = "0x1535ED0", VA = "0x1535ED0")]
	public static Language GetPref()
	{
		return default(Language);
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0x1535F28", Offset = "0x1535F28", VA = "0x1535F28")]
	public static void SetPref(Language lang)
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0x1535F88", Offset = "0x1535F88", VA = "0x1535F88")]
	public static void SetPref(int lang)
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0x1536004", Offset = "0x1536004", VA = "0x1536004")]
	public LanguageManager()
	{
	}
}
[Token(Token = "0x20000B7")]
public static class NumFormat
{
	[Token(Token = "0x6000619")]
	[Address(RVA = "0x17896FC", Offset = "0x17896FC", VA = "0x17896FC")]
	public static string Get(int num)
	{
		return null;
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0x1789724", Offset = "0x1789724", VA = "0x1789724")]
	public static string GetCash(int num)
	{
		return null;
	}
}
[Token(Token = "0x20000B8")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x769068", Offset = "0x769068")]
public class LocalizableText : Text
{
	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x769B3C", Offset = "0x769B3C")]
	[SerializeField]
	protected string m_OriginalText;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool m_Localized;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
	private bool m_LocalizationSubscribed;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private Language m_LastLanguage;

	[Token(Token = "0x17000135")]
	public override string text
	{
		[Token(Token = "0x600061B")]
		[Address(RVA = "0x177FB94", Offset = "0x177FB94", VA = "0x177FB94", Slot = "74")]
		get
		{
			return null;
		}
		[Token(Token = "0x600061C")]
		[Address(RVA = "0x177FB9C", Offset = "0x177FB9C", VA = "0x177FB9C", Slot = "75")]
		set
		{
		}
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0x177FD94", Offset = "0x177FD94", VA = "0x177FD94", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0x177FE6C", Offset = "0x177FE6C", VA = "0x177FE6C", Slot = "8")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0x177FF30", Offset = "0x177FF30", VA = "0x177FF30")]
	private void RefreshLanguage()
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0x1780010", Offset = "0x1780010", VA = "0x1780010")]
	public LocalizableText()
	{
	}
}
[Token(Token = "0x20000B9")]
public class LocalizedObjectMover : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000196")]
	public struct LocalPositionOverride
	{
		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Language language;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 localPosition;
	}

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform target;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private LocalPositionOverride[] overrides;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 defaultPosition;

	[Token(Token = "0x6000621")]
	[Address(RVA = "0x17805D0", Offset = "0x17805D0", VA = "0x17805D0")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0x1780678", Offset = "0x1780678", VA = "0x1780678")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0x1780894", Offset = "0x1780894", VA = "0x1780894")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0x1780744", Offset = "0x1780744", VA = "0x1780744")]
	public void RefreshPosition()
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0x1780958", Offset = "0x1780958", VA = "0x1780958")]
	public LocalizedObjectMover()
	{
	}
}
[Token(Token = "0x20000BA")]
public class LocalizedSpriteTextMaxWidth : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000197")]
	public struct MaxWidthOverride
	{
		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Language language;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float maxWidth;
	}

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SpriteText target;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private MaxWidthOverride[] overrides;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float defaultMaxWidth;

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x1780960", Offset = "0x1780960", VA = "0x1780960")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x1780A1C", Offset = "0x1780A1C", VA = "0x1780A1C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x1780C48", Offset = "0x1780C48", VA = "0x1780C48")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x1780AE0", Offset = "0x1780AE0", VA = "0x1780AE0")]
	public void RefreshSize()
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x1780D40", Offset = "0x1780D40", VA = "0x1780D40")]
	public LocalizedSpriteTextMaxWidth()
	{
	}
}
[Token(Token = "0x20000BB")]
public class LocalizedSpriteTextSizer : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000198")]
	public struct SizeOverride
	{
		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Language language;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float size;
	}

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SpriteText target;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SizeOverride[] overrides;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float defaultSize;

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x1780D50", Offset = "0x1780D50", VA = "0x1780D50")]
	private void Reset()
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x1780E0C", Offset = "0x1780E0C", VA = "0x1780E0C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x1781038", Offset = "0x1781038", VA = "0x1781038")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x1780ED0", Offset = "0x1780ED0", VA = "0x1780ED0")]
	public void RefreshSize()
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x1781130", Offset = "0x1781130", VA = "0x1781130")]
	public LocalizedSpriteTextSizer()
	{
	}
}
[Token(Token = "0x20000BC")]
public class LocalizedTextSizer : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000199")]
	public struct SizeOverride
	{
		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Language language;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int size;
	}

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Text target;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SizeOverride[] overrides;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int defaultSize;

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x1781140", Offset = "0x1781140", VA = "0x1781140")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x17811FC", Offset = "0x17811FC", VA = "0x17811FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x1781400", Offset = "0x1781400", VA = "0x1781400")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x17812C4", Offset = "0x17812C4", VA = "0x17812C4")]
	public void RefreshSize()
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x17814D4", Offset = "0x17814D4", VA = "0x17814D4")]
	public LocalizedTextSizer()
	{
	}
}
[Token(Token = "0x20000BD")]
public class OnlyEnableIfLocalized : MonoBehaviour
{
	[Token(Token = "0x6000635")]
	[Address(RVA = "0x14C3FCC", Offset = "0x14C3FCC", VA = "0x14C3FCC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x14C405C", Offset = "0x14C405C", VA = "0x14C405C")]
	public OnlyEnableIfLocalized()
	{
	}
}
[Token(Token = "0x20000BE")]
public class SpriteTextWidthFit : MonoBehaviour
{
	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private SpriteText text;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float targetWidth;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float original;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float lastWidth;

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x1984600", Offset = "0x1984600", VA = "0x1984600")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x19846BC", Offset = "0x19846BC", VA = "0x19846BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x19847A4", Offset = "0x19847A4", VA = "0x19847A4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x19847DC", Offset = "0x19847DC", VA = "0x19847DC")]
	private void Update()
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x19846DC", Offset = "0x19846DC", VA = "0x19846DC")]
	private void RefreshSize()
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x198483C", Offset = "0x198483C", VA = "0x198483C")]
	public SpriteTextWidthFit()
	{
	}
}
[Token(Token = "0x20000BF")]
public class MiniJSON
{
	[Token(Token = "0x4000529")]
	private const int TOKEN_NONE = 0;

	[Token(Token = "0x400052A")]
	private const int TOKEN_CURLY_OPEN = 1;

	[Token(Token = "0x400052B")]
	private const int TOKEN_CURLY_CLOSE = 2;

	[Token(Token = "0x400052C")]
	private const int TOKEN_SQUARED_OPEN = 3;

	[Token(Token = "0x400052D")]
	private const int TOKEN_SQUARED_CLOSE = 4;

	[Token(Token = "0x400052E")]
	private const int TOKEN_COLON = 5;

	[Token(Token = "0x400052F")]
	private const int TOKEN_COMMA = 6;

	[Token(Token = "0x4000530")]
	private const int TOKEN_STRING = 7;

	[Token(Token = "0x4000531")]
	private const int TOKEN_NUMBER = 8;

	[Token(Token = "0x4000532")]
	private const int TOKEN_TRUE = 9;

	[Token(Token = "0x4000533")]
	private const int TOKEN_FALSE = 10;

	[Token(Token = "0x4000534")]
	private const int TOKEN_NULL = 11;

	[Token(Token = "0x4000535")]
	private const int BUILDER_CAPACITY = 2000;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static int lastErrorIndex;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	protected static string lastDecode;

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x1786F94", Offset = "0x1786F94", VA = "0x1786F94")]
	public static object jsonDecode(string json)
	{
		return null;
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x1787360", Offset = "0x1787360", VA = "0x1787360")]
	public static string jsonEncode(object json)
	{
		return null;
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x17879A8", Offset = "0x17879A8", VA = "0x17879A8")]
	public static bool lastDecodeSuccessful()
	{
		return default(bool);
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0x1787A14", Offset = "0x1787A14", VA = "0x1787A14")]
	public static int getLastErrorIndex()
	{
		return default(int);
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0x1787A78", Offset = "0x1787A78", VA = "0x1787A78")]
	public static string getLastErrorSnippet()
	{
		return null;
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x1787BF8", Offset = "0x1787BF8", VA = "0x1787BF8")]
	protected static Hashtable parseObject(char[] json, ref int index)
	{
		return null;
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x17884E4", Offset = "0x17884E4", VA = "0x17884E4")]
	protected static ArrayList parseArray(char[] json, ref int index)
	{
		return null;
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x17870BC", Offset = "0x17870BC", VA = "0x17870BC")]
	protected static object parseValue(char[] json, ref int index, ref bool success)
	{
		return null;
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x1788130", Offset = "0x1788130", VA = "0x1788130")]
	protected static string parseString(char[] json, ref int index)
	{
		return null;
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x1788684", Offset = "0x1788684", VA = "0x1788684")]
	protected static double parseNumber(char[] json, ref int index)
	{
		return default(double);
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x1788868", Offset = "0x1788868", VA = "0x1788868")]
	protected static int getLastIndexOfNumber(char[] json, int index)
	{
		return default(int);
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x17887B4", Offset = "0x17887B4", VA = "0x17887B4")]
	protected static void eatWhitespace(char[] json, ref int index)
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x17880B8", Offset = "0x17880B8", VA = "0x17880B8")]
	protected static int lookAhead(char[] json, int index)
	{
		return default(int);
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x1787DF4", Offset = "0x1787DF4", VA = "0x1787DF4")]
	protected static int nextToken(char[] json, ref int index)
	{
		return default(int);
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x178891C", Offset = "0x178891C", VA = "0x178891C")]
	protected static bool serializeObjectOrArray(object objectOrArray, StringBuilder builder)
	{
		return default(bool);
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0x1788AB4", Offset = "0x1788AB4", VA = "0x1788AB4")]
	protected static bool serializeObject(Hashtable anObject, StringBuilder builder)
	{
		return default(bool);
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0x17891A4", Offset = "0x17891A4", VA = "0x17891A4")]
	protected static bool serializeDictionary(Dictionary<string, string> dict, StringBuilder builder)
	{
		return default(bool);
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0x1788D8C", Offset = "0x1788D8C", VA = "0x1788D8C")]
	protected static bool serializeArray(ArrayList anArray, StringBuilder builder)
	{
		return default(bool);
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0x178741C", Offset = "0x178741C", VA = "0x178741C")]
	protected static bool serializeValue(object value, StringBuilder builder)
	{
		return default(bool);
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0x1788F00", Offset = "0x1788F00", VA = "0x1788F00")]
	protected static void serializeString(string aString, StringBuilder builder)
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0x17893D8", Offset = "0x17893D8", VA = "0x17893D8")]
	protected static void serializeNumber(double number, StringBuilder builder)
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0x1789460", Offset = "0x1789460", VA = "0x1789460")]
	public MiniJSON()
	{
	}
}
[Token(Token = "0x20000C0")]
public static class MiniJsonExtensions
{
	[Token(Token = "0x6000654")]
	[Address(RVA = "0x17894DC", Offset = "0x17894DC", VA = "0x17894DC")]
	public static string toJson(this Hashtable obj)
	{
		return null;
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0x178953C", Offset = "0x178953C", VA = "0x178953C")]
	public static string toJson(this Dictionary<string, string> obj)
	{
		return null;
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0x178959C", Offset = "0x178959C", VA = "0x178959C")]
	public static ArrayList arrayListFromJson(this string json)
	{
		return null;
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0x178964C", Offset = "0x178964C", VA = "0x178964C")]
	public static Hashtable hashtableFromJson(this string json)
	{
		return null;
	}
}
[Token(Token = "0x20000C1")]
public class OfflineMessageBuffer : MonoBehaviour
{
	[Token(Token = "0x6000658")]
	[Address(RVA = "0x14C3FC4", Offset = "0x14C3FC4", VA = "0x14C3FC4")]
	public OfflineMessageBuffer()
	{
	}
}
[Token(Token = "0x20000C2")]
public class PS4NPToolkit : MonoBehaviour
{
	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PS4NPToolkit instance;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static InitResult initResult;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static UserProfiles.LocalUsers users;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static int primaryUserId;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static Dictionary<Sony.NP.ResponseBase, NpCallbackEvent> callbackEvents;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static object syncObj;

	[Token(Token = "0x6000659")]
	[Address(RVA = "0x14C45C8", Offset = "0x14C45C8", VA = "0x14C45C8")]
	public void Awake()
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0x14C4788", Offset = "0x14C4788", VA = "0x14C4788")]
	public static bool IsInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0x14C4774", Offset = "0x14C4774", VA = "0x14C4774")]
	private void Initialize()
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0x14C4FE4", Offset = "0x14C4FE4", VA = "0x14C4FE4")]
	public static Core.UserServiceUserId GetPrimaryUserId()
	{
		return default(Core.UserServiceUserId);
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0x14C50CC", Offset = "0x14C50CC", VA = "0x14C50CC")]
	public static Core.NpAccountId GetLocalAccountId(int localUserId)
	{
		return default(Core.NpAccountId);
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0x14C4884", Offset = "0x14C4884", VA = "0x14C4884")]
	private void InitialisePlugin()
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0x14C5248", Offset = "0x14C5248", VA = "0x14C5248")]
	private static void OnAsyncEvent(NpCallbackEvent callbackEvent)
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0x14C4D00", Offset = "0x14C4D00", VA = "0x14C4D00")]
	private void FindUsers()
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0x14C53C4", Offset = "0x14C53C4", VA = "0x14C53C4")]
	public void OutputAsyncResponseEvent(Sony.NP.ResponseBase response)
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0x14C5BB4", Offset = "0x14C5BB4", VA = "0x14C5BB4")]
	public void LogException(Exception e)
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0x14C5CC0", Offset = "0x14C5CC0", VA = "0x14C5CC0")]
	public PS4NPToolkit()
	{
	}
}
[Token(Token = "0x20000C3")]
public class PS4TrophyManager : MonoBehaviour
{
	[Token(Token = "0x200019A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769698", Offset = "0x769698")]
	private sealed class <>c__DisplayClass0_0
	{
		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Core.EmptyResponse response;

		[Token(Token = "0x6000EFE")]
		[Address(RVA = "0x173B84C", Offset = "0x173B84C", VA = "0x173B84C")]
		public <>c__DisplayClass0_0()
		{
		}

		[Token(Token = "0x6000EFF")]
		[Address(RVA = "0x173B854", Offset = "0x173B854", VA = "0x173B854")]
		internal bool <RegisterTrophyPack>b__0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200019B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7696A8", Offset = "0x7696A8")]
	private sealed class <RegisterTrophyPack>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private <>c__DisplayClass0_0 <>8__1;

		[Token(Token = "0x17000219")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F03")]
			[Address(RVA = "0x1BA4DB0", Offset = "0x1BA4DB0", VA = "0x1BA4DB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F05")]
			[Address(RVA = "0x1BA4DF8", Offset = "0x1BA4DF8", VA = "0x1BA4DF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F00")]
		[Address(RVA = "0x1BA497C", Offset = "0x1BA497C", VA = "0x1BA497C")]
		[DebuggerHidden]
		public <RegisterTrophyPack>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6000F01")]
		[Address(RVA = "0x1BA49A8", Offset = "0x1BA49A8", VA = "0x1BA49A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F02")]
		[Address(RVA = "0x1BA49AC", Offset = "0x1BA49AC", VA = "0x1BA49AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F04")]
		[Address(RVA = "0x1BA4DB8", Offset = "0x1BA4DB8", VA = "0x1BA4DB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200019C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7696B8", Offset = "0x7696B8")]
	private sealed class <>c__DisplayClass1_0
	{
		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Trophies.UnlockedTrophiesResponse response;

		[Token(Token = "0x6000F06")]
		[Address(RVA = "0x173B880", Offset = "0x173B880", VA = "0x173B880")]
		public <>c__DisplayClass1_0()
		{
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0x173B888", Offset = "0x173B888", VA = "0x173B888")]
		internal bool <GetUnlockedTrophies>b__0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200019D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7696C8", Offset = "0x7696C8")]
	private sealed class <GetUnlockedTrophies>d__1 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private <>c__DisplayClass1_0 <>8__1;

		[Token(Token = "0x1700021B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F0B")]
			[Address(RVA = "0x173C6B4", Offset = "0x173C6B4", VA = "0x173C6B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F0D")]
			[Address(RVA = "0x173C6FC", Offset = "0x173C6FC", VA = "0x173C6FC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x173C280", Offset = "0x173C280", VA = "0x173C280")]
		[DebuggerHidden]
		public <GetUnlockedTrophies>d__1(int <>1__state)
		{
		}

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0x173C2AC", Offset = "0x173C2AC", VA = "0x173C2AC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0x173C2B0", Offset = "0x173C2B0", VA = "0x173C2B0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0x173C6BC", Offset = "0x173C6BC", VA = "0x173C6BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200019E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7696D8", Offset = "0x7696D8")]
	private sealed class <>c__DisplayClass2_0
	{
		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Trophies.TrophyPackSummaryResponse response;

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0x173B8B4", Offset = "0x173B8B4", VA = "0x173B8B4")]
		public <>c__DisplayClass2_0()
		{
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0x173B8BC", Offset = "0x173B8BC", VA = "0x173B8BC")]
		internal bool <GetTrophyPackSummary>b__0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200019F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7696E8", Offset = "0x7696E8")]
	private sealed class <GetTrophyPackSummary>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private <>c__DisplayClass2_0 <>8__1;

		[Token(Token = "0x1700021D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F13")]
			[Address(RVA = "0x173C230", Offset = "0x173C230", VA = "0x173C230", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F15")]
			[Address(RVA = "0x173C278", Offset = "0x173C278", VA = "0x173C278", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0x173BDE8", Offset = "0x173BDE8", VA = "0x173BDE8")]
		[DebuggerHidden]
		public <GetTrophyPackSummary>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0x173BE14", Offset = "0x173BE14", VA = "0x173BE14", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0x173BE18", Offset = "0x173BE18", VA = "0x173BE18", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0x173C238", Offset = "0x173C238", VA = "0x173C238", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7696F8", Offset = "0x7696F8")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Trophies.TrophyPackGroupResponse response;

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0x173B8E8", Offset = "0x173B8E8", VA = "0x173B8E8")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0x173B8F0", Offset = "0x173B8F0", VA = "0x173B8F0")]
		internal bool <GetTrophyPackGroup>b__0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20001A1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769708", Offset = "0x769708")]
	private sealed class <GetTrophyPackGroup>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private <>c__DisplayClass3_0 <>8__1;

		[Token(Token = "0x1700021F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F1B")]
			[Address(RVA = "0x173BD98", Offset = "0x173BD98", VA = "0x173BD98", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000220")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F1D")]
			[Address(RVA = "0x173BDE0", Offset = "0x173BDE0", VA = "0x173BDE0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0x173B950", Offset = "0x173B950", VA = "0x173B950")]
		[DebuggerHidden]
		public <GetTrophyPackGroup>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0x173B97C", Offset = "0x173B97C", VA = "0x173B97C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0x173B980", Offset = "0x173B980", VA = "0x173B980", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0x173BDA0", Offset = "0x173BDA0", VA = "0x173BDA0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001A2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769718", Offset = "0x769718")]
	private sealed class <>c__DisplayClass5_0
	{
		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Core.EmptyResponse response;

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0x173B91C", Offset = "0x173B91C", VA = "0x173B91C")]
		public <>c__DisplayClass5_0()
		{
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0x173B924", Offset = "0x173B924", VA = "0x173B924")]
		internal bool <UnlockTrophy>b__0()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20001A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769728", Offset = "0x769728")]
	private sealed class <UnlockTrophy>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private <>c__DisplayClass5_0 <>8__1;

		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int trophyId;

		[Token(Token = "0x17000221")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F23")]
			[Address(RVA = "0x1BA5248", Offset = "0x1BA5248", VA = "0x1BA5248", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000222")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F25")]
			[Address(RVA = "0x1BA5290", Offset = "0x1BA5290", VA = "0x1BA5290", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0x1BA4E00", Offset = "0x1BA4E00", VA = "0x1BA4E00")]
		[DebuggerHidden]
		public <UnlockTrophy>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0x1BA4E2C", Offset = "0x1BA4E2C", VA = "0x1BA4E2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0x1BA4E30", Offset = "0x1BA4E30", VA = "0x1BA4E30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0x1BA5250", Offset = "0x1BA5250", VA = "0x1BA5250", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0x14C5DEC", Offset = "0x14C5DEC", VA = "0x14C5DEC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76AA88", Offset = "0x76AA88")]
	public static IEnumerator RegisterTrophyPack()
	{
		return null;
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0x14C5E48", Offset = "0x14C5E48", VA = "0x14C5E48")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76AAE8", Offset = "0x76AAE8")]
	public static IEnumerator GetUnlockedTrophies()
	{
		return null;
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0x14C5EA4", Offset = "0x14C5EA4", VA = "0x14C5EA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76AB48", Offset = "0x76AB48")]
	public static IEnumerator GetTrophyPackSummary()
	{
		return null;
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0x14C5F00", Offset = "0x14C5F00", VA = "0x14C5F00")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76ABA8", Offset = "0x76ABA8")]
	public static IEnumerator GetTrophyPackGroup()
	{
		return null;
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0x14C5F5C", Offset = "0x14C5F5C", VA = "0x14C5F5C")]
	private bool IsTrophyUnlocked(int id, Trophies.UnlockedTrophiesResponse response)
	{
		return default(bool);
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0x14C6004", Offset = "0x14C6004", VA = "0x14C6004")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76AC08", Offset = "0x76AC08")]
	public static IEnumerator UnlockTrophy(int trophyId)
	{
		return null;
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0x14C6070", Offset = "0x14C6070", VA = "0x14C6070")]
	public PS4TrophyManager()
	{
	}
}
[Token(Token = "0x20000C4")]
public class GCVRAutoSaveWriteRequest : FileOps.FileOperationRequest
{
	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string profileData;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string preferenceData;

	[Token(Token = "0x600066C")]
	[Address(RVA = "0x1532EE4", Offset = "0x1532EE4", VA = "0x1532EE4", Slot = "4")]
	public override void DoFileOperations(Mounting.MountPoint mp, FileOps.FileOperationResponse response)
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0x1533084", Offset = "0x1533084", VA = "0x1533084")]
	public GCVRAutoSaveWriteRequest()
	{
	}
}
[Token(Token = "0x20000C5")]
public class GCVRAutoSaveWriteResponse : FileOps.FileOperationResponse
{
	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public DateTime lastWriteTime;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public long totalFileSizeWritten;

	[Token(Token = "0x600066E")]
	[Address(RVA = "0x15330F0", Offset = "0x15330F0", VA = "0x15330F0")]
	public GCVRAutoSaveWriteResponse()
	{
	}
}
[Token(Token = "0x20000C6")]
public class GCVRAutoSaveReadRequest : FileOps.FileOperationRequest
{
	[Token(Token = "0x600066F")]
	[Address(RVA = "0x1532CF8", Offset = "0x1532CF8", VA = "0x1532CF8", Slot = "4")]
	public override void DoFileOperations(Mounting.MountPoint mp, FileOps.FileOperationResponse response)
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x1532E70", Offset = "0x1532E70", VA = "0x1532E70")]
	public GCVRAutoSaveReadRequest()
	{
	}
}
[Token(Token = "0x20000C7")]
public class GCVRAutoSaveReadResponse : FileOps.FileOperationResponse
{
	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string profileData;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string preferenceData;

	[Token(Token = "0x6000671")]
	[Address(RVA = "0x1532E78", Offset = "0x1532E78", VA = "0x1532E78")]
	public GCVRAutoSaveReadResponse()
	{
	}
}
[Token(Token = "0x20000C8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x7690B4", Offset = "0x7690B4")]
public class ProjectionMeshGenerator : MonoBehaviour
{
	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float distance;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float width;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float height;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float currDistance;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float currWidth;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float currHeight;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Mesh mesh;

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x14D0A40", Offset = "0x14D0A40", VA = "0x14D0A40")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x14D0B54", Offset = "0x14D0B54", VA = "0x14D0B54")]
	private void Start()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x14D1020", Offset = "0x14D1020", VA = "0x14D1020")]
	private void Update()
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x14D0B58", Offset = "0x14D0B58", VA = "0x14D0B58")]
	private void GenerateMesh()
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x14D1058", Offset = "0x14D1058", VA = "0x14D1058")]
	public ProjectionMeshGenerator()
	{
	}
}
[Token(Token = "0x20000C9")]
public class RefPointer : MonoBehaviour
{
	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Color highlightColour;

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x1A29DE8", Offset = "0x1A29DE8", VA = "0x1A29DE8")]
	public static void UIButtonDelegate(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x1A29F28", Offset = "0x1A29F28", VA = "0x1A29F28")]
	public static void OverStateDelegate(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x1A29FCC", Offset = "0x1A29FCC", VA = "0x1A29FCC")]
	public static void UIRadioBtnDelegate(ref POINTER_INFO ptr)
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x1A2A0C8", Offset = "0x1A2A0C8", VA = "0x1A2A0C8")]
	public RefPointer()
	{
	}
}
[Token(Token = "0x20000CA")]
public interface IgnoreResourceReference
{
}
[Token(Token = "0x20000CB")]
public class ResourceReferenceBase
{
	[Token(Token = "0x600067C")]
	[Address(RVA = "0x1A2A190", Offset = "0x1A2A190", VA = "0x1A2A190")]
	public ResourceReferenceBase()
	{
	}
}
[Token(Token = "0x20000CC")]
public class ResourceReference<T> : ResourceReferenceBase where T : UnityEngine.Object
{
	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	protected string m_resourcePath;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	protected T m_referencedObject;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	protected string m_hiddenAssetGUID;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[SerializeField]
	protected int m_subAssetIndex;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private T m_loadedObject;

	[Token(Token = "0x17000136")]
	public T value
	{
		[Token(Token = "0x600067D")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600067E")]
	public bool Load()
	{
		return default(bool);
	}

	[Token(Token = "0x600067F")]
	public void Unload()
	{
	}

	[Token(Token = "0x6000680")]
	public ResourceRequest LoadAsync()
	{
		return null;
	}

	[Token(Token = "0x6000681")]
	private void AsyncLoadComplete(UnityEngine.AsyncOperation op)
	{
	}

	[Token(Token = "0x6000682")]
	public ResourceReference()
	{
	}
}
[Token(Token = "0x20000CD")]
public static class ResourceReferenceTypes
{
	[Token(Token = "0x6000683")]
	[Address(RVA = "0x1A2A198", Offset = "0x1A2A198", VA = "0x1A2A198")]
	public static Type GetTargetType(Type referenceType)
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x20000CE")]
public class GameObjectReference : ResourceReference<GameObject>
{
	[Token(Token = "0x6000684")]
	[Address(RVA = "0x15334F8", Offset = "0x15334F8", VA = "0x15334F8")]
	public GameObjectReference()
	{
	}
}
[Serializable]
[Token(Token = "0x20000CF")]
public class AudioClipReference : ResourceReference<AudioClip>
{
	[Token(Token = "0x6000685")]
	[Address(RVA = "0x1AB66D0", Offset = "0x1AB66D0", VA = "0x1AB66D0")]
	public AudioClipReference()
	{
	}
}
[Serializable]
[Token(Token = "0x20000D0")]
public class Texture2DReference : ResourceReference<Texture2D>
{
	[Token(Token = "0x6000686")]
	[Address(RVA = "0x198DE48", Offset = "0x198DE48", VA = "0x198DE48")]
	public Texture2DReference()
	{
	}
}
[Serializable]
[Token(Token = "0x20000D1")]
public class SpriteReference : ResourceReference<Sprite>
{
	[Token(Token = "0x6000687")]
	[Address(RVA = "0x1A3AA18", Offset = "0x1A3AA18", VA = "0x1A3AA18")]
	public SpriteReference()
	{
	}
}
[Serializable]
[Token(Token = "0x20000D2")]
public class MaterialReference : ResourceReference<Material>
{
	[Token(Token = "0x6000688")]
	[Address(RVA = "0x1784A14", Offset = "0x1784A14", VA = "0x1784A14")]
	public MaterialReference()
	{
	}
}
[Serializable]
[Token(Token = "0x20000D3")]
public class MeshReference : ResourceReference<Mesh>
{
	[Token(Token = "0x6000689")]
	[Address(RVA = "0x1786F48", Offset = "0x1786F48", VA = "0x1786F48")]
	public MeshReference()
	{
	}
}
[Serializable]
[Token(Token = "0x20000D4")]
public class AnimatorControllerReference : ResourceReference<RuntimeAnimatorController>
{
	[Token(Token = "0x600068A")]
	[Address(RVA = "0x1AB629C", Offset = "0x1AB629C", VA = "0x1AB629C")]
	public AnimatorControllerReference()
	{
	}
}
[Token(Token = "0x20000D5")]
public class ResultLogger : UnityEngine.Object
{
	[Token(Token = "0x600068B")]
	[Address(RVA = "0x1A2A508", Offset = "0x1A2A508", VA = "0x1A2A508")]
	public static void logObject(object result)
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0x1A2A71C", Offset = "0x1A2A71C", VA = "0x1A2A71C")]
	public static void logArraylist(ArrayList result)
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0x1A2AA6C", Offset = "0x1A2AA6C", VA = "0x1A2AA6C")]
	public static void logHashtable(Hashtable result)
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0x1A2AB24", Offset = "0x1A2AB24", VA = "0x1A2AB24")]
	public static void addHashtableToString(StringBuilder builder, Hashtable item)
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0x1A2AF58", Offset = "0x1A2AF58", VA = "0x1A2AF58")]
	public static void addArraylistToString(StringBuilder builder, ArrayList result)
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0x1A2B2C4", Offset = "0x1A2B2C4", VA = "0x1A2B2C4")]
	public ResultLogger()
	{
	}
}
[Serializable]
[Token(Token = "0x20000D6")]
public class SaveDataBundle
{
	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Player player;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StorageManager.WeaponConfig[] weaponConfigurations;

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x1A2B96C", Offset = "0x1A2B96C", VA = "0x1A2B96C")]
	public SaveDataBundle()
	{
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x1A2B974", Offset = "0x1A2B974", VA = "0x1A2B974")]
	public SaveDataBundle(Player thisPlayer, StorageManager.WeaponConfig[] theseWeaponConfigurations)
	{
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x1A2B9C4", Offset = "0x1A2B9C4", VA = "0x1A2B9C4")]
	public static SaveDataBundle FromByteArray(byte[] array)
	{
		return null;
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x1A2BD3C", Offset = "0x1A2BD3C", VA = "0x1A2BD3C")]
	public void RegenerateSaveData()
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0x1A2BE3C", Offset = "0x1A2BE3C", VA = "0x1A2BE3C")]
	public static byte[] ToByteArray(SaveDataBundle bundle)
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x20000D7")]
public class SecureInt
{
	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private int _value;

	[Token(Token = "0x17000137")]
	public int Value
	{
		[Token(Token = "0x6000696")]
		[Address(RVA = "0x1A2BFF4", Offset = "0x1A2BFF4", VA = "0x1A2BFF4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000697")]
		[Address(RVA = "0x1A2C004", Offset = "0x1A2C004", VA = "0x1A2C004")]
		set
		{
		}
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0x1A2C014", Offset = "0x1A2C014", VA = "0x1A2C014")]
	public SecureInt()
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0x1A2C040", Offset = "0x1A2C040", VA = "0x1A2C040")]
	public static implicit operator SecureInt(int value)
	{
		return null;
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0x1A2C0B4", Offset = "0x1A2C0B4", VA = "0x1A2C0B4")]
	public static implicit operator int(SecureInt value)
	{
		return default(int);
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0x1A2C0D4", Offset = "0x1A2C0D4", VA = "0x1A2C0D4", Slot = "3")]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x20000D8")]
public static class ServerManager
{
	[Serializable]
	[Token(Token = "0x20001A4")]
	public class SessionDetail : ISerializable
	{
		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A3F8", Offset = "0x76A3F8")]
		private ulong <UserId>k__BackingField;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A408", Offset = "0x76A408")]
		private ulong <LogonId>k__BackingField;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ulong SessionId;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A418", Offset = "0x76A418")]
		private string <UserName>k__BackingField;

		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string Email;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string CachedPassword;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A428", Offset = "0x76A428")]
		private string <LogonName>k__BackingField;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A438", Offset = "0x76A438")]
		private string <Role>k__BackingField;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool PreAuth;

		[Token(Token = "0x17000223")]
		public ulong UserId
		{
			[Token(Token = "0x6000F26")]
			[Address(RVA = "0x1BAB7EC", Offset = "0x1BAB7EC", VA = "0x1BAB7EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B8E8", Offset = "0x76B8E8")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6000F27")]
			[Address(RVA = "0x1BAB7F4", Offset = "0x1BAB7F4", VA = "0x1BAB7F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B8F8", Offset = "0x76B8F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000224")]
		public ulong LogonId
		{
			[Token(Token = "0x6000F28")]
			[Address(RVA = "0x1BAB7FC", Offset = "0x1BAB7FC", VA = "0x1BAB7FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B908", Offset = "0x76B908")]
			get
			{
				return default(ulong);
			}
			[Token(Token = "0x6000F29")]
			[Address(RVA = "0x1BAB804", Offset = "0x1BAB804", VA = "0x1BAB804")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B918", Offset = "0x76B918")]
			set
			{
			}
		}

		[Token(Token = "0x17000225")]
		public string UserName
		{
			[Token(Token = "0x6000F2A")]
			[Address(RVA = "0x1BAB80C", Offset = "0x1BAB80C", VA = "0x1BAB80C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B928", Offset = "0x76B928")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F2B")]
			[Address(RVA = "0x1BAB814", Offset = "0x1BAB814", VA = "0x1BAB814")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B938", Offset = "0x76B938")]
			set
			{
			}
		}

		[Token(Token = "0x17000226")]
		public string LogonName
		{
			[Token(Token = "0x6000F2C")]
			[Address(RVA = "0x1BAB81C", Offset = "0x1BAB81C", VA = "0x1BAB81C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B948", Offset = "0x76B948")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F2D")]
			[Address(RVA = "0x1BAB824", Offset = "0x1BAB824", VA = "0x1BAB824")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B958", Offset = "0x76B958")]
			set
			{
			}
		}

		[Token(Token = "0x17000227")]
		public string Role
		{
			[Token(Token = "0x6000F2E")]
			[Address(RVA = "0x1BAB82C", Offset = "0x1BAB82C", VA = "0x1BAB82C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B968", Offset = "0x76B968")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F2F")]
			[Address(RVA = "0x1BAB834", Offset = "0x1BAB834", VA = "0x1BAB834")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B978", Offset = "0x76B978")]
			set
			{
			}
		}

		[Token(Token = "0x17000228")]
		public static string DeviceID
		{
			[Token(Token = "0x6000F30")]
			[Address(RVA = "0x1BAB83C", Offset = "0x1BAB83C", VA = "0x1BAB83C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0x1BAB844", Offset = "0x1BAB844", VA = "0x1BAB844")]
		public SessionDetail(ulong sessionId, ulong logonId, string logonName, ulong userId, string userName, bool newDeviceIDInUse, string role)
		{
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0x1BAB938", Offset = "0x1BAB938", VA = "0x1BAB938")]
		public SessionDetail()
		{
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0x1BAB994", Offset = "0x1BAB994", VA = "0x1BAB994")]
		public SessionDetail(ulong sessionId)
		{
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0x1BABA04", Offset = "0x1BABA04", VA = "0x1BABA04")]
		protected SessionDetail(SerializationInfo info, StreamingContext context)
		{
		}

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0x1BABDEC", Offset = "0x1BABDEC", VA = "0x1BABDEC", Slot = "4")]
		public void GetObjectData(SerializationInfo info, StreamingContext context)
		{
		}
	}

	[Token(Token = "0x20001A5")]
	public static class ResponseModels
	{
		[Serializable]
		[Token(Token = "0x20001F0")]
		public class Friend : ISerializable
		{
			[Token(Token = "0x4000B89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A628", Offset = "0x76A628")]
			private int <UId>k__BackingField;

			[Token(Token = "0x4000B8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A638", Offset = "0x76A638")]
			private string <Name>k__BackingField;

			[Token(Token = "0x4000B8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A648", Offset = "0x76A648")]
			private string <Cty>k__BackingField;

			[Token(Token = "0x4000B8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A658", Offset = "0x76A658")]
			private string <Email>k__BackingField;

			[Token(Token = "0x17000255")]
			public int UId
			{
				[Token(Token = "0x600106A")]
				[Address(RVA = "0x1BB3D2C", Offset = "0x1BB3D2C", VA = "0x1BB3D2C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BED8", Offset = "0x76BED8")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600106B")]
				[Address(RVA = "0x1BB3D34", Offset = "0x1BB3D34", VA = "0x1BB3D34")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BEE8", Offset = "0x76BEE8")]
				set
				{
				}
			}

			[Token(Token = "0x17000256")]
			public string Name
			{
				[Token(Token = "0x600106C")]
				[Address(RVA = "0x1BB3D3C", Offset = "0x1BB3D3C", VA = "0x1BB3D3C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BEF8", Offset = "0x76BEF8")]
				get
				{
					return null;
				}
				[Token(Token = "0x600106D")]
				[Address(RVA = "0x1BB3D44", Offset = "0x1BB3D44", VA = "0x1BB3D44")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BF08", Offset = "0x76BF08")]
				set
				{
				}
			}

			[Token(Token = "0x17000257")]
			public string Cty
			{
				[Token(Token = "0x600106E")]
				[Address(RVA = "0x1BB3D4C", Offset = "0x1BB3D4C", VA = "0x1BB3D4C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BF18", Offset = "0x76BF18")]
				get
				{
					return null;
				}
				[Token(Token = "0x600106F")]
				[Address(RVA = "0x1BB3D54", Offset = "0x1BB3D54", VA = "0x1BB3D54")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BF28", Offset = "0x76BF28")]
				set
				{
				}
			}

			[Token(Token = "0x17000258")]
			public string Email
			{
				[Token(Token = "0x6001070")]
				[Address(RVA = "0x1BB3D5C", Offset = "0x1BB3D5C", VA = "0x1BB3D5C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BF38", Offset = "0x76BF38")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001071")]
				[Address(RVA = "0x1BB3D64", Offset = "0x1BB3D64", VA = "0x1BB3D64")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BF48", Offset = "0x76BF48")]
				set
				{
				}
			}

			[Token(Token = "0x6001072")]
			[Address(RVA = "0x1BB3D6C", Offset = "0x1BB3D6C", VA = "0x1BB3D6C")]
			public Friend()
			{
			}

			[Token(Token = "0x6001073")]
			[Address(RVA = "0x1BB3D74", Offset = "0x1BB3D74", VA = "0x1BB3D74")]
			public Friend(int uId, string name, string cty, string email)
			{
			}

			[Token(Token = "0x6001074")]
			[Address(RVA = "0x1BB3DE8", Offset = "0x1BB3DE8", VA = "0x1BB3DE8")]
			protected Friend(SerializationInfo info, StreamingContext context)
			{
			}

			[Token(Token = "0x6001075")]
			[Address(RVA = "0x1BB4030", Offset = "0x1BB4030", VA = "0x1BB4030", Slot = "4")]
			public void GetObjectData(SerializationInfo info, StreamingContext context)
			{
			}
		}
	}

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769C5C", Offset = "0x769C5C")]
	private static SessionDetail <Session>k__BackingField;

	[Token(Token = "0x17000138")]
	public static SessionDetail Session
	{
		[Token(Token = "0x600069C")]
		[Address(RVA = "0x1A2C444", Offset = "0x1A2C444", VA = "0x1A2C444")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AC68", Offset = "0x76AC68")]
		get
		{
			return null;
		}
		[Token(Token = "0x600069D")]
		[Address(RVA = "0x1A2C4A8", Offset = "0x1A2C4A8", VA = "0x1A2C4A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AC78", Offset = "0x76AC78")]
		set
		{
		}
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0x1A2C514", Offset = "0x1A2C514", VA = "0x1A2C514")]
	static ServerManager()
	{
	}
}
[Token(Token = "0x20000D9")]
[ExecuteInEditMode]
public class SimpleSprite : SpriteRoot
{
	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public Vector2 lowerLeftPixel;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public Vector2 pixelDimensions;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	protected bool nullCamera;

	[Token(Token = "0x600069F")]
	[Address(RVA = "0x1A2D65C", Offset = "0x1A2D65C", VA = "0x1A2D65C", Slot = "45")]
	public override Vector2 GetDefaultPixelSize(PathFromGUIDDelegate guid2Path, AssetLoaderDelegate loader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x1A2D668", Offset = "0x1A2D668", VA = "0x1A2D668", Slot = "12")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x1A2D900", Offset = "0x1A2D900", VA = "0x1A2D900", Slot = "14")]
	protected override void Init()
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x1A2DD50", Offset = "0x1A2DD50", VA = "0x1A2DD50", Slot = "13")]
	public override void Start()
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x1A2E1CC", Offset = "0x1A2E1CC", VA = "0x1A2E1CC", Slot = "15")]
	public override void Clear()
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x1A2E220", Offset = "0x1A2E220", VA = "0x1A2E220")]
	public void Setup(float w, float h, Vector2 lowerleftPixel, Vector2 pixeldimensions)
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x1A2E324", Offset = "0x1A2E324", VA = "0x1A2E324")]
	public void Setup(float w, float h, Vector2 lowerleftPixel, Vector2 pixeldimensions, Material material)
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0x1A2E448", Offset = "0x1A2E448", VA = "0x1A2E448", Slot = "16")]
	public override void Copy(SpriteRoot s)
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0x1A2EC54", Offset = "0x1A2EC54", VA = "0x1A2EC54", Slot = "17")]
	public override void InitUVs()
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0x1A2ED94", Offset = "0x1A2ED94", VA = "0x1A2ED94")]
	public void SetLowerLeftPixel(Vector2 lowerLeft)
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0x1A2EE70", Offset = "0x1A2EE70", VA = "0x1A2EE70")]
	public void SetLowerLeftPixel(int x, int y)
	{
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0x1A2EE7C", Offset = "0x1A2EE7C", VA = "0x1A2EE7C")]
	public void SetPixelDimensions(Vector2 size)
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0x1A2EF18", Offset = "0x1A2EF18", VA = "0x1A2EF18")]
	public void SetPixelDimensions(int x, int y)
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0x1A2EF24", Offset = "0x1A2EF24", VA = "0x1A2EF24", Slot = "46")]
	public override int GetStateIndex(string stateName)
	{
		return default(int);
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0x1A2EF2C", Offset = "0x1A2EF2C", VA = "0x1A2EF2C", Slot = "47")]
	public override void SetState(int index)
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0x1A2EF30", Offset = "0x1A2EF30", VA = "0x1A2EF30")]
	public static SimpleSprite Create(string name, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0x1A2F07C", Offset = "0x1A2F07C", VA = "0x1A2F07C")]
	public static SimpleSprite Create(string name, Vector3 pos, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0x1A2F210", Offset = "0x1A2F210", VA = "0x1A2F210", Slot = "48")]
	public override void DoMirror()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0x1A2F348", Offset = "0x1A2F348", VA = "0x1A2F348")]
	public SimpleSprite()
	{
	}
}
[Token(Token = "0x20000DA")]
public class SimpleSpriteMirror : SpriteRootMirror
{
	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Vector2 lowerLeftPixel;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Vector2 pixelDimensions;

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0x1A2F400", Offset = "0x1A2F400", VA = "0x1A2F400", Slot = "4")]
	public override void Mirror(SpriteRoot s)
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0x1A2F4FC", Offset = "0x1A2F4FC", VA = "0x1A2F4FC", Slot = "6")]
	public override bool DidChange(SpriteRoot s)
	{
		return default(bool);
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0x1A2F340", Offset = "0x1A2F340", VA = "0x1A2F340")]
	public SimpleSpriteMirror()
	{
	}
}
[Token(Token = "0x20000DB")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x769124", Offset = "0x769124")]
[ExecuteInEditMode]
public class SpriteManager : MonoBehaviour
{
	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpriteRoot.WINDING_ORDER winding;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int allocBlockSize;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool autoUpdateBounds;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool drawBoundingBox;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool persistent;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	protected bool initialized;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected EZLinkedList<SpriteMesh_Managed> availableBlocks;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected bool vertsChanged;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	protected bool uvsChanged;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	protected bool colorsChanged;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	protected bool vertCountChanged;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected bool updateBounds;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected SpriteMesh_Managed[] sprites;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected EZLinkedList<SpriteMesh_Managed> activeBlocks;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected List<SpriteMesh_Managed> spriteDrawOrder;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected SpriteDrawLayerComparer drawOrderComparer;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected float boundUpdateInterval;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected List<SpriteRoot> spriteAddQueue;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected SkinnedMeshRenderer meshRenderer;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Mesh mesh;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected Texture texture;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Transform[] bones;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected BoneWeight[] boneWeights;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected Matrix4x4[] bindPoses;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected Vector3[] vertices;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected int[] triIndices;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected Vector2[] UVs;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected Vector2[] UVs2;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected Color[] colors;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	protected SpriteMesh_Managed tempSprite;

	[Token(Token = "0x17000139")]
	public bool IsInitialized
	{
		[Token(Token = "0x60006D0")]
		[Address(RVA = "0x1A384D4", Offset = "0x1A384D4", VA = "0x1A384D4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700013A")]
	public Renderer ManagedRenderer
	{
		[Token(Token = "0x60006D1")]
		[Address(RVA = "0x1A384DC", Offset = "0x1A384DC", VA = "0x1A384DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0x1A34948", Offset = "0x1A34948", VA = "0x1A34948")]
	public Vector2 PixelSpaceToUVSpace(Vector2 xy)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0x1A34A1C", Offset = "0x1A34A1C", VA = "0x1A34A1C")]
	public Vector2 PixelSpaceToUVSpace(int x, int y)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0x1A34A28", Offset = "0x1A34A28", VA = "0x1A34A28")]
	public Vector2 PixelCoordToUVCoord(Vector2 xy)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0x1A34B10", Offset = "0x1A34B10", VA = "0x1A34B10")]
	public Vector2 PixelCoordToUVCoord(int x, int y)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0x1A34B1C", Offset = "0x1A34B1C", VA = "0x1A34B1C")]
	protected void SetupBoneWeights(SpriteMesh_Managed s)
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0x1A34CAC", Offset = "0x1A34CAC", VA = "0x1A34CAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0x1A35D54", Offset = "0x1A35D54", VA = "0x1A35D54")]
	protected void InitArrays()
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0x1A35068", Offset = "0x1A35068", VA = "0x1A35068")]
	protected int EnlargeArrays(int count)
	{
		return default(int);
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0x1A362AC", Offset = "0x1A362AC", VA = "0x1A362AC")]
	public bool AlreadyAdded(SpriteRoot sprite)
	{
		return default(bool);
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0x1A363C4", Offset = "0x1A363C4", VA = "0x1A363C4")]
	public SpriteMesh_Managed AddSprite(GameObject go)
	{
		return null;
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0x1A35974", Offset = "0x1A35974", VA = "0x1A35974")]
	public SpriteMesh_Managed AddSprite(SpriteRoot sprite)
	{
		return null;
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0x1A369E4", Offset = "0x1A369E4", VA = "0x1A369E4")]
	public SpriteRoot CreateSprite(GameObject prefab)
	{
		return null;
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0x1A36A64", Offset = "0x1A36A64", VA = "0x1A36A64")]
	public SpriteRoot CreateSprite(GameObject prefab, Vector3 position, Quaternion rotation)
	{
		return null;
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0x1A36C14", Offset = "0x1A36C14", VA = "0x1A36C14")]
	public void RemoveSprite(SpriteRoot sprite)
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0x1A36D5C", Offset = "0x1A36D5C", VA = "0x1A36D5C")]
	public void RemoveSprite(SpriteMesh_Managed sprite)
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0x1A36FC0", Offset = "0x1A36FC0", VA = "0x1A36FC0")]
	public void MoveToFront(SpriteMesh_Managed s)
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0x1A374CC", Offset = "0x1A374CC", VA = "0x1A374CC")]
	public void MoveToBack(SpriteMesh_Managed s)
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0x1A3798C", Offset = "0x1A3798C", VA = "0x1A3798C")]
	public void MoveInfrontOf(SpriteMesh_Managed toMove, SpriteMesh_Managed reference)
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0x1A37E98", Offset = "0x1A37E98", VA = "0x1A37E98")]
	public void MoveBehind(SpriteMesh_Managed toMove, SpriteMesh_Managed reference)
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0x1A3670C", Offset = "0x1A3670C", VA = "0x1A3670C")]
	public void SortDrawingOrder()
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0x1A383A4", Offset = "0x1A383A4", VA = "0x1A383A4")]
	public SpriteMesh_Managed GetSprite(int i)
	{
		return null;
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0x1A383EC", Offset = "0x1A383EC", VA = "0x1A383EC")]
	public void UpdatePositions()
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0x1A383F8", Offset = "0x1A383F8", VA = "0x1A383F8")]
	public void UpdateUVs()
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0x1A38404", Offset = "0x1A38404", VA = "0x1A38404")]
	public void UpdateColors()
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0x1A38410", Offset = "0x1A38410", VA = "0x1A38410")]
	public void UpdateBounds()
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0x1A3841C", Offset = "0x1A3841C", VA = "0x1A3841C")]
	public void ScheduleBoundsUpdate(float seconds)
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0x1A38484", Offset = "0x1A38484", VA = "0x1A38484")]
	public void CancelBoundsUpdate()
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0x1A38590", Offset = "0x1A38590", VA = "0x1A38590", Slot = "4")]
	public virtual void LateUpdate()
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0x1A38724", Offset = "0x1A38724", VA = "0x1A38724", Slot = "5")]
	public virtual void DoMirror()
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0x1A388A0", Offset = "0x1A388A0", VA = "0x1A388A0", Slot = "6")]
	public virtual void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0x1A38D04", Offset = "0x1A38D04", VA = "0x1A38D04")]
	public void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0x1A3898C", Offset = "0x1A3898C", VA = "0x1A3898C")]
	protected void DrawCenter()
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0x1A38DE8", Offset = "0x1A38DE8", VA = "0x1A38DE8")]
	public SpriteManager()
	{
	}
}
[Token(Token = "0x20000DC")]
public class SpriteDrawLayerComparer : IComparer<SpriteMesh_Managed>
{
	[Token(Token = "0x60006D8")]
	[Address(RVA = "0x1A326E4", Offset = "0x1A326E4", VA = "0x1A326E4", Slot = "4")]
	public int Compare(SpriteMesh_Managed a, SpriteMesh_Managed b)
	{
		return default(int);
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0x1A32720", Offset = "0x1A32720", VA = "0x1A32720")]
	public SpriteDrawLayerComparer()
	{
	}
}
[Serializable]
[Token(Token = "0x20000DD")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x769194", Offset = "0x769194")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x769194", Offset = "0x769194")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x769194", Offset = "0x769194")]
public class SpriteText : UITextBase
{
	[Token(Token = "0x20001A6")]
	public enum Anchor_Pos
	{
		[Token(Token = "0x4000A04")]
		Upper_Left,
		[Token(Token = "0x4000A05")]
		Upper_Center,
		[Token(Token = "0x4000A06")]
		Upper_Right,
		[Token(Token = "0x4000A07")]
		Middle_Left,
		[Token(Token = "0x4000A08")]
		Middle_Center,
		[Token(Token = "0x4000A09")]
		Middle_Right,
		[Token(Token = "0x4000A0A")]
		Lower_Left,
		[Token(Token = "0x4000A0B")]
		Lower_Center,
		[Token(Token = "0x4000A0C")]
		Lower_Right
	}

	[Token(Token = "0x20001A7")]
	public enum Alignment_Type
	{
		[Token(Token = "0x4000A0E")]
		Left,
		[Token(Token = "0x4000A0F")]
		Center,
		[Token(Token = "0x4000A10")]
		Right
	}

	[Token(Token = "0x20001A8")]
	protected struct NewlineInsertInfo
	{
		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int index;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int charDelta;

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0x1BAD424", Offset = "0x1BAD424", VA = "0x1BAD424")]
		public NewlineInsertInfo(int idx, int delta)
		{
		}
	}

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Multiline]
	public string text;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float offsetZ;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float characterSize;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float characterSpacing;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float lineSpacing;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected float lineSpaceSize;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Anchor_Pos anchor;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Alignment_Type alignment;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int tabSize;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected string tabSpaces;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public TextAsset font;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Color color;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Color originalColor;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool pixelPerfect;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float maxWidth;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool maxWidthInPixels;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	public bool multiline;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
	public bool dynamicLength;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
	public bool removeUnsupportedCharacters;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public bool parseColorTags;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	public bool password;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public string maskingCharacter;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected EZScreenPlacement screenPlacer;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected bool clipped;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	protected bool updateClipping;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	protected Rect3D clippingRect;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	protected Rect localClipRect;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	protected Vector3 topLeft;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	protected Vector3 bottomRight;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	protected Vector3 unclippedTL;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	protected Vector3 unclippedBR;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	protected Color[] colors;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	protected bool updateColors;

	[Token(Token = "0x400059A")]
	[HideInInspector]
	public const string colorTag = "[#";

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected static string[] colDel;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	protected static char[] newLineDelimiter;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected static char[] commaDelimiter;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
	[HideInInspector]
	public bool isClone;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12A")]
	protected bool m_awake;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12B")]
	protected bool m_started;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	protected bool stringContentChanged;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	protected Vector2 screenSize;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Camera renderCamera;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[HideInInspector]
	public Vector2 pixelsPerUV;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	protected float worldUnitsPerScreenPixel;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	protected float worldUnitsPerTexel;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	protected Vector2 worldUnitsPerUV;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public bool hideAtStart;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x159")]
	protected bool m_hidden;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15A")]
	public bool ignoreClipping;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	protected int capacity;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	protected string meshString;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	protected string plainText;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	protected string displayString;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	protected List<NewlineInsertInfo> newLineInserts;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	protected float totalWidth;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	protected SpriteFont spriteFont;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	protected SpriteTextMirror mirror;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	protected Mesh oldMesh;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	protected Mesh mesh;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	protected MeshRenderer meshRenderer;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	protected MeshFilter meshFilter;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	protected Texture texture;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	protected Vector3[] vertices;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	protected int[] faces;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	protected Vector2[] UVs;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	protected Color[] meshColors;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private StringBuilder displaySB;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private StringBuilder plainSB;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private List<int> colorInserts;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private List<int> colorTags;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private List<Color> cols;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private string[] lines;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public bool ignoreLocalization;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x211")]
	public bool customLocalization;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public string customLocalizationTag;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	private TextAsset originalFont;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	private Material originalMaterial;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	private Language currentLanguage;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
	private bool localeSubbed;

	[Token(Token = "0x1700013B")]
	public override Color Color
	{
		[Token(Token = "0x60006FC")]
		[Address(RVA = "0x1981C8C", Offset = "0x1981C8C", VA = "0x1981C8C", Slot = "60")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x60006FD")]
		[Address(RVA = "0x1981C98", Offset = "0x1981C98", VA = "0x1981C98", Slot = "61")]
		set
		{
		}
	}

	[Token(Token = "0x1700013C")]
	public override Color OriginalColor
	{
		[Token(Token = "0x60006FE")]
		[Address(RVA = "0x1981CA8", Offset = "0x1981CA8", VA = "0x1981CA8", Slot = "62")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x60006FF")]
		[Address(RVA = "0x1981CB4", Offset = "0x1981CB4", VA = "0x1981CB4", Slot = "63")]
		set
		{
		}
	}

	[Token(Token = "0x1700013D")]
	public override float ZOffset
	{
		[Token(Token = "0x6000700")]
		[Address(RVA = "0x1981CC0", Offset = "0x1981CC0", VA = "0x1981CC0", Slot = "78")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000701")]
		[Address(RVA = "0x1981CC8", Offset = "0x1981CC8", VA = "0x1981CC8", Slot = "79")]
		set
		{
		}
	}

	[Token(Token = "0x1700013E")]
	public override bool IsWidthLimited
	{
		[Token(Token = "0x6000702")]
		[Address(RVA = "0x1981CD0", Offset = "0x1981CD0", VA = "0x1981CD0", Slot = "76")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700013F")]
	public override float MaxWidth
	{
		[Token(Token = "0x6000703")]
		[Address(RVA = "0x1981CE0", Offset = "0x1981CE0", VA = "0x1981CE0", Slot = "94")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000704")]
		[Address(RVA = "0x1981CE8", Offset = "0x1981CE8", VA = "0x1981CE8", Slot = "95")]
		set
		{
		}
	}

	[Token(Token = "0x17000140")]
	public override string MaskingCharacter
	{
		[Token(Token = "0x6000705")]
		[Address(RVA = "0x1981D00", Offset = "0x1981D00", VA = "0x1981D00", Slot = "88")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000706")]
		[Address(RVA = "0x1981D08", Offset = "0x1981D08", VA = "0x1981D08", Slot = "89")]
		set
		{
		}
	}

	[Token(Token = "0x17000141")]
	public override bool Multiline
	{
		[Token(Token = "0x6000707")]
		[Address(RVA = "0x1981D80", Offset = "0x1981D80", VA = "0x1981D80", Slot = "90")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000708")]
		[Address(RVA = "0x1981D88", Offset = "0x1981D88", VA = "0x1981D88", Slot = "91")]
		set
		{
		}
	}

	[Token(Token = "0x17000142")]
	public override bool RemoveUnsupportedCharacters
	{
		[Token(Token = "0x6000709")]
		[Address(RVA = "0x1981DBC", Offset = "0x1981DBC", VA = "0x1981DBC", Slot = "96")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600070A")]
		[Address(RVA = "0x1981DC4", Offset = "0x1981DC4", VA = "0x1981DC4", Slot = "97")]
		set
		{
		}
	}

	[Token(Token = "0x17000143")]
	public override bool ParseTags
	{
		[Token(Token = "0x600070B")]
		[Address(RVA = "0x1981DF8", Offset = "0x1981DF8", VA = "0x1981DF8", Slot = "98")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600070C")]
		[Address(RVA = "0x1981E00", Offset = "0x1981E00", VA = "0x1981E00", Slot = "99")]
		set
		{
		}
	}

	[Token(Token = "0x17000144")]
	public override Camera RenderCamera
	{
		[Token(Token = "0x6000715")]
		[Address(RVA = "0x19820AC", Offset = "0x19820AC", VA = "0x19820AC", Slot = "104")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000716")]
		[Address(RVA = "0x19820B4", Offset = "0x19820B4", VA = "0x19820B4", Slot = "105")]
		set
		{
		}
	}

	[Token(Token = "0x17000145")]
	public override bool Persistent
	{
		[Token(Token = "0x600071C")]
		[Address(RVA = "0x19825A8", Offset = "0x19825A8", VA = "0x19825A8", Slot = "56")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600071D")]
		[Address(RVA = "0x19825B0", Offset = "0x19825B0", VA = "0x19825B0", Slot = "57")]
		set
		{
		}
	}

	[Token(Token = "0x17000146")]
	public override string Text
	{
		[Token(Token = "0x600071E")]
		[Address(RVA = "0x198263C", Offset = "0x198263C", VA = "0x198263C", Slot = "54")]
		get
		{
			return null;
		}
		[Token(Token = "0x600071F")]
		[Address(RVA = "0x1982644", Offset = "0x1982644", VA = "0x1982644", Slot = "55")]
		set
		{
		}
	}

	[Token(Token = "0x17000147")]
	public string PlainText
	{
		[Token(Token = "0x6000720")]
		[Address(RVA = "0x19826F4", Offset = "0x19826F4", VA = "0x19826F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000148")]
	public string DisplayString
	{
		[Token(Token = "0x6000721")]
		[Address(RVA = "0x19826FC", Offset = "0x19826FC", VA = "0x19826FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000149")]
	public override Rect3D ClippingRect
	{
		[Token(Token = "0x6000722")]
		[Address(RVA = "0x1982704", Offset = "0x1982704", VA = "0x1982704", Slot = "68")]
		get
		{
			return default(Rect3D);
		}
		[Token(Token = "0x6000723")]
		[Address(RVA = "0x1982724", Offset = "0x1982724", VA = "0x1982724", Slot = "69")]
		set
		{
		}
	}

	[Token(Token = "0x1700014A")]
	public override bool Clipped
	{
		[Token(Token = "0x6000724")]
		[Address(RVA = "0x1982758", Offset = "0x1982758", VA = "0x1982758", Slot = "66")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000725")]
		[Address(RVA = "0x1982760", Offset = "0x1982760", VA = "0x1982760", Slot = "67")]
		set
		{
		}
	}

	[Token(Token = "0x1700014B")]
	public override float BaseHeight
	{
		[Token(Token = "0x6000729")]
		[Address(RVA = "0x1982D8C", Offset = "0x1982D8C", VA = "0x1982D8C", Slot = "82")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700014C")]
	public override float LineSpan
	{
		[Token(Token = "0x600072A")]
		[Address(RVA = "0x1982DB0", Offset = "0x1982DB0", VA = "0x1982DB0", Slot = "83")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700014D")]
	public override Vector3 TopLeft
	{
		[Token(Token = "0x600072D")]
		[Address(RVA = "0x1982E00", Offset = "0x1982E00", VA = "0x1982E00", Slot = "72")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700014E")]
	public override Vector3 BottomRight
	{
		[Token(Token = "0x600072E")]
		[Address(RVA = "0x1982E0C", Offset = "0x1982E0C", VA = "0x1982E0C", Slot = "73")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700014F")]
	public override Vector3 UnclippedTopLeft
	{
		[Token(Token = "0x600072F")]
		[Address(RVA = "0x1982E18", Offset = "0x1982E18", VA = "0x1982E18", Slot = "74")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000150")]
	public override Vector3 UnclippedBottomRight
	{
		[Token(Token = "0x6000730")]
		[Address(RVA = "0x1982E5C", Offset = "0x1982E5C", VA = "0x1982E5C", Slot = "75")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000151")]
	public float TotalWidth
	{
		[Token(Token = "0x6000731")]
		[Address(RVA = "0x1982EA0", Offset = "0x1982EA0", VA = "0x1982EA0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000152")]
	public float TotalScreenWidth
	{
		[Token(Token = "0x6000732")]
		[Address(RVA = "0x1982EA8", Offset = "0x1982EA8", VA = "0x1982EA8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000153")]
	public Vector2 PixelSize
	{
		[Token(Token = "0x6000735")]
		[Address(RVA = "0x19832C4", Offset = "0x19832C4", VA = "0x19832C4")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x17000154")]
	public override bool Password
	{
		[Token(Token = "0x6000736")]
		[Address(RVA = "0x19832E4", Offset = "0x19832E4", VA = "0x19832E4", Slot = "86")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000737")]
		[Address(RVA = "0x19832EC", Offset = "0x19832EC", VA = "0x19832EC", Slot = "87")]
		set
		{
		}
	}

	[Token(Token = "0x17000155")]
	public override Anchor_Pos Anchor
	{
		[Token(Token = "0x6000739")]
		[Address(RVA = "0x198336C", Offset = "0x198336C", VA = "0x198336C", Slot = "92")]
		get
		{
			return default(Anchor_Pos);
		}
		[Token(Token = "0x600073A")]
		[Address(RVA = "0x1983374", Offset = "0x1983374", VA = "0x1983374", Slot = "93")]
		set
		{
		}
	}

	[Token(Token = "0x17000156")]
	public float CharacterSpacing
	{
		[Token(Token = "0x600073C")]
		[Address(RVA = "0x19833E4", Offset = "0x19833E4", VA = "0x19833E4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600073D")]
		[Address(RVA = "0x19833EC", Offset = "0x19833EC", VA = "0x19833EC")]
		set
		{
		}
	}

	[Token(Token = "0x17000157")]
	public override IControl Parent
	{
		[Token(Token = "0x600073E")]
		[Address(RVA = "0x1983420", Offset = "0x1983420", VA = "0x1983420", Slot = "58")]
		get
		{
			return null;
		}
		[Token(Token = "0x600073F")]
		[Address(RVA = "0x1983428", Offset = "0x1983428", VA = "0x1983428", Slot = "59")]
		set
		{
		}
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0x197C8B4", Offset = "0x197C8B4", VA = "0x197C8B4", Slot = "107")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0x197CAB0", Offset = "0x197CAB0", VA = "0x197CAB0", Slot = "106")]
	public override void Start()
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0x197CCC8", Offset = "0x197CCC8", VA = "0x197CCC8")]
	private void StartLanguage()
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0x197E78C", Offset = "0x197E78C", VA = "0x197E78C")]
	public void RefreshLanguage()
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0x197EA84", Offset = "0x197EA84", VA = "0x197EA84", Slot = "108")]
	protected virtual void Init()
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0x197F24C", Offset = "0x197F24C", VA = "0x197F24C")]
	protected void CreateMesh()
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0x197CF2C", Offset = "0x197CF2C", VA = "0x197CF2C")]
	protected void ProcessString(string str)
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0x197F474", Offset = "0x197F474", VA = "0x197F474")]
	protected void DoSingleLineTruncation()
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0x197F6E4", Offset = "0x197F6E4", VA = "0x197F6E4")]
	protected Color ParseColor(string str)
	{
		return default(Color);
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0x197F87C", Offset = "0x197F87C", VA = "0x197F87C")]
	protected Color ParseHexColor(string str)
	{
		return default(Color);
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0x197FA78", Offset = "0x197FA78", VA = "0x197FA78")]
	protected void EnlargeMesh()
	{
	}

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x197E314", Offset = "0x197E314", VA = "0x197E314")]
	public void UpdateMesh()
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0x19804FC", Offset = "0x19804FC", VA = "0x19804FC")]
	protected Vector3 GetStartPos_SingleLine(float baseHeight, float width)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0x1980580", Offset = "0x1980580", VA = "0x1980580")]
	public int GetDisplayLineCount(int charIndex, out int charLine, out int lineStart, out int lineEnd)
	{
		return default(int);
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0x1980698", Offset = "0x1980698", VA = "0x1980698")]
	public int GetDisplayLineCount()
	{
		return default(int);
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0x1980708", Offset = "0x1980708", VA = "0x1980708", Slot = "84")]
	public override int PlainIndexToDisplayIndex(int plainCharIndex)
	{
		return default(int);
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0x19807F0", Offset = "0x19807F0", VA = "0x19807F0", Slot = "85")]
	public override int DisplayIndexToPlainIndex(int dispCharIndex)
	{
		return default(int);
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0x19808D8", Offset = "0x19808D8", VA = "0x19808D8")]
	protected float GetLineBaseline(int numLines, int lineNum)
	{
		return default(float);
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0x197FDA8", Offset = "0x197FDA8", VA = "0x197FDA8")]
	protected void Layout_Single_Line()
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0x197FF60", Offset = "0x197FF60", VA = "0x197FF60")]
	protected void Layout_Multiline(string[] lines)
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0x1980B40", Offset = "0x1980B40", VA = "0x1980B40")]
	protected void ZeroQuad(int i)
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0x1980C08", Offset = "0x1980C08", VA = "0x1980C08")]
	protected void BuildCharacter(int vertNum, int charNum, Vector3 upperLeft, ref SpriteChar ch)
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0x1980988", Offset = "0x1980988", VA = "0x1980988")]
	protected void Layout_Line(Vector3 startPos, string txt, int charIdx)
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0x197FCB0", Offset = "0x197FCB0", VA = "0x197FCB0")]
	protected void ClearMesh()
	{
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0x19816BC", Offset = "0x19816BC", VA = "0x19816BC", Slot = "65")]
	public override void Unclip()
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0x19816D4", Offset = "0x19816D4", VA = "0x19816D4")]
	public void Delete()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0x19817F0", Offset = "0x19817F0", VA = "0x19817F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0x1981888", Offset = "0x1981888", VA = "0x1981888", Slot = "109")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0x1981964", Offset = "0x1981964", VA = "0x1981964", Slot = "110")]
	public virtual void OnDestroy()
	{
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x1981968", Offset = "0x1981968", VA = "0x1981968", Slot = "77")]
	public override void Copy(IUIText text)
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x1981A0C", Offset = "0x1981A0C", VA = "0x1981A0C", Slot = "111")]
	public virtual void Copy(SpriteText s)
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x1981BDC", Offset = "0x1981BDC", VA = "0x1981BDC")]
	public void CalcSize()
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x1981C38", Offset = "0x1981C38", VA = "0x1981C38")]
	protected void LayoutText()
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x1981C68", Offset = "0x1981C68", VA = "0x1981C68", Slot = "64")]
	public override void SetColor(Color c)
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x1981E34", Offset = "0x1981E34", VA = "0x1981E34")]
	public void SetCharacterSize(float size)
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x1981EB4", Offset = "0x1981EB4", VA = "0x1981EB4")]
	public void SetLineSpacing(float spacing)
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x1981F0C", Offset = "0x1981F0C", VA = "0x1981F0C")]
	public void SetMaxWidth(float width)
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x197E6F8", Offset = "0x197E6F8", VA = "0x197E6F8")]
	public void SetFont(TextAsset newFont, Material fontMaterial)
	{
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0x1981F24", Offset = "0x1981F24", VA = "0x1981F24")]
	public void SetFont(SpriteFont newFont, Material fontMaterial)
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0x198202C", Offset = "0x198202C", VA = "0x198202C")]
	public void SetFontAndText(string newText, TextAsset newFont, Material fontMaterial)
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0x198206C", Offset = "0x198206C", VA = "0x198206C")]
	public void SetPixelToUV(int texWidth, int texHeight)
	{
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0x197F390", Offset = "0x197F390", VA = "0x197F390")]
	public void SetPixelToUV(Texture tex)
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0x19820F4", Offset = "0x19820F4", VA = "0x19820F4", Slot = "101")]
	public override void UpdateCamera()
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0x1982108", Offset = "0x1982108", VA = "0x1982108", Slot = "102")]
	public override void SetCamera()
	{
	}

	[Token(Token = "0x6000719")]
	[Address(RVA = "0x198211C", Offset = "0x198211C", VA = "0x198211C", Slot = "103")]
	public override void SetCamera(Camera c)
	{
	}

	[Token(Token = "0x600071A")]
	[Address(RVA = "0x198243C", Offset = "0x198243C", VA = "0x198243C", Slot = "70")]
	public override void Hide(bool tf)
	{
	}

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x19825A0", Offset = "0x19825A0", VA = "0x19825A0", Slot = "71")]
	public override bool IsHidden()
	{
		return default(bool);
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x1982798", Offset = "0x1982798", VA = "0x1982798", Slot = "80")]
	public override Vector3 GetInsertionPointPos(int charIndex)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0x1982AC8", Offset = "0x1982AC8", VA = "0x1982AC8")]
	public Vector3 GetNearestInsertionPointPos(Vector3 point, ref int insertionPt)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0x1982B10", Offset = "0x1982B10", VA = "0x1982B10", Slot = "81")]
	public override int GetNearestInsertionPoint(Vector3 point)
	{
		return default(int);
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0x1982DB8", Offset = "0x1982DB8", VA = "0x1982DB8")]
	public Vector3[] GetVertices()
	{
		return null;
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0x1982DD4", Offset = "0x1982DD4", VA = "0x1982DD4")]
	public Vector3 GetCenterPoint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x1983074", Offset = "0x1983074", VA = "0x1983074")]
	public float GetWidth(string s)
	{
		return default(float);
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0x19830B0", Offset = "0x19830B0", VA = "0x19830B0")]
	public float GetScreenWidth(string s)
	{
		return default(float);
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x1983334", Offset = "0x1983334", VA = "0x1983334")]
	public void SetAnchor(Anchor_Pos a)
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x19833AC", Offset = "0x19833AC", VA = "0x19833AC")]
	public void SetAlignment(Alignment_Type a)
	{
	}

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x1983430", Offset = "0x1983430", VA = "0x1983430")]
	public Vector2 PixelSpaceToUVSpace(Vector2 xy)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0x198346C", Offset = "0x198346C", VA = "0x198346C")]
	public Vector2 PixelSpaceToUVSpace(int x, int y)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0x1983478", Offset = "0x1983478", VA = "0x1983478")]
	public Vector2 PixelCoordToUVCoord(Vector2 xy)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0x19834C8", Offset = "0x19834C8", VA = "0x19834C8")]
	public Vector2 PixelCoordToUVCoord(int x, int y)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0x19834D4", Offset = "0x19834D4", VA = "0x19834D4")]
	public static SpriteText CreateInstance(IControl control)
	{
		return null;
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0x1983C14", Offset = "0x1983C14", VA = "0x1983C14", Slot = "112")]
	public virtual void DoMirror()
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0x1983D98", Offset = "0x1983D98", VA = "0x1983D98", Slot = "113")]
	public virtual void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0x1983DA8", Offset = "0x1983DA8", VA = "0x1983DA8", Slot = "114")]
	public virtual void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0x1983DB8", Offset = "0x1983DB8", VA = "0x1983DB8")]
	public SpriteText()
	{
	}
}
[Token(Token = "0x20000DE")]
public class SpriteTextMirror
{
	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string text;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextAsset font;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float offsetZ;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float characterSize;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float characterSpacing;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float lineSpacing;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SpriteText.Anchor_Pos anchor;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public SpriteText.Alignment_Type alignment;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int tabSize;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Color color;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float maxWidth;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool maxWidthInPixels;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool pixelPerfect;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Camera renderCamera;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool hideAtStart;

	[Token(Token = "0x600074A")]
	[Address(RVA = "0x19842F0", Offset = "0x19842F0", VA = "0x19842F0", Slot = "4")]
	public virtual void Mirror(SpriteText s)
	{
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0x19843A8", Offset = "0x19843A8", VA = "0x19843A8", Slot = "5")]
	public virtual bool Validate(SpriteText s)
	{
		return default(bool);
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0x19843B0", Offset = "0x19843B0", VA = "0x19843B0", Slot = "6")]
	public virtual bool DidChange(SpriteText s)
	{
		return default(bool);
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0x1983D90", Offset = "0x1983D90", VA = "0x1983D90")]
	public SpriteTextMirror()
	{
	}
}
[Token(Token = "0x20000DF")]
public class AutoSprite : AutoSpriteBase
{
	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public TextureAnim[] textureAnimations;

	[Token(Token = "0x17000158")]
	public override TextureAnim[] States
	{
		[Token(Token = "0x600074E")]
		[Address(RVA = "0x1AB671C", Offset = "0x1AB671C", VA = "0x1AB671C", Slot = "79")]
		get
		{
			return null;
		}
		[Token(Token = "0x600074F")]
		[Address(RVA = "0x1AB6724", Offset = "0x1AB6724", VA = "0x1AB6724", Slot = "80")]
		set
		{
		}
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0x1AB6734", Offset = "0x1AB6734", VA = "0x1AB6734", Slot = "12")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0x1AB69B0", Offset = "0x1AB69B0", VA = "0x1AB69B0", Slot = "14")]
	protected override void Init()
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0x1AB69B8", Offset = "0x1AB69B8", VA = "0x1AB69B8")]
	public AutoSprite()
	{
	}
}
[Serializable]
[Token(Token = "0x20000E0")]
public class TextureAnim
{
	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int loopCycles;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool loopReverse;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float framerate;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public UVAnimation.ANIM_END_ACTION onAnimEnd;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public string[] framePaths;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public string[] frameGUIDs;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public CSpriteFrame[] spriteFrames;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public bool useUnitySprite;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public Sprite unitySprite;

	[Token(Token = "0x6000753")]
	[Address(RVA = "0x198DE94", Offset = "0x198DE94", VA = "0x198DE94")]
	public void Allocate()
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0x198E074", Offset = "0x198E074", VA = "0x198E074")]
	public TextureAnim()
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0x198E0A4", Offset = "0x198E0A4", VA = "0x198E0A4")]
	public TextureAnim(string n)
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0x198E0E8", Offset = "0x198E0E8", VA = "0x198E0E8")]
	public void RefreshUnitySprite()
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0x198E2C4", Offset = "0x198E2C4", VA = "0x198E2C4")]
	public void Copy(TextureAnim a)
	{
	}
}
[Token(Token = "0x20000E1")]
public abstract class AutoSpriteBase : SpriteBase, ISpriteAggregator, ISpritePackable
{
	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	protected Texture2D[] sourceTextures;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	protected CSpriteFrame[] spriteFrames;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public bool doNotTrimImages;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	[HideInInspector]
	public UVAnimation[] animations;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	protected UVAnimation curAnim;

	[Token(Token = "0x17000159")]
	public abstract TextureAnim[] States
	{
		[Token(Token = "0x6000758")]
		get;
		[Token(Token = "0x6000759")]
		set;
	}

	[Token(Token = "0x1700015A")]
	public virtual CSpriteFrame DefaultFrame
	{
		[Token(Token = "0x600075A")]
		[Address(RVA = "0x1AB69C8", Offset = "0x1AB69C8", VA = "0x1AB69C8", Slot = "81")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700015B")]
	public virtual TextureAnim DefaultState
	{
		[Token(Token = "0x600075B")]
		[Address(RVA = "0x1AB6A6C", Offset = "0x1AB6A6C", VA = "0x1AB6A6C", Slot = "82")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700015C")]
	public virtual bool SupportsArbitraryAnimations
	{
		[Token(Token = "0x6000780")]
		[Address(RVA = "0x1AB8ECC", Offset = "0x1AB8ECC", VA = "0x1AB8ECC", Slot = "84")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700015D")]
	public virtual bool DoNotTrimImages
	{
		[Token(Token = "0x6000782")]
		[Address(RVA = "0x1AB90E4", Offset = "0x1AB90E4", VA = "0x1AB90E4", Slot = "86")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000783")]
		[Address(RVA = "0x1AB90EC", Offset = "0x1AB90EC", VA = "0x1AB90EC", Slot = "87")]
		set
		{
		}
	}

	[Token(Token = "0x1700015E")]
	public Texture2D[] SourceTextures
	{
		[Token(Token = "0x6000785")]
		[Address(RVA = "0x1AB9A60", Offset = "0x1AB9A60", VA = "0x1AB9A60", Slot = "65")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700015F")]
	public CSpriteFrame[] SpriteFrames
	{
		[Token(Token = "0x6000786")]
		[Address(RVA = "0x1AB9A68", Offset = "0x1AB9A68", VA = "0x1AB9A68", Slot = "66")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x1AB6AF8", Offset = "0x1AB6AF8", VA = "0x1AB6AF8", Slot = "45")]
	public override Vector2 GetDefaultPixelSize(PathFromGUIDDelegate guid2Path, AssetLoaderDelegate loader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x1AB67B8", Offset = "0x1AB67B8", VA = "0x1AB67B8", Slot = "12")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x1AB6EE0", Offset = "0x1AB6EE0", VA = "0x1AB6EE0", Slot = "15")]
	public override void Clear()
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x1AB6F34", Offset = "0x1AB6F34", VA = "0x1AB6F34")]
	public void Setup(float w, float h)
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x1AB7008", Offset = "0x1AB7008", VA = "0x1AB7008")]
	public void Setup(float w, float h, Material material)
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x1AB70F8", Offset = "0x1AB70F8", VA = "0x1AB70F8", Slot = "16")]
	public override void Copy(SpriteRoot s)
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x1AB73E8", Offset = "0x1AB73E8", VA = "0x1AB73E8", Slot = "83")]
	public virtual void CopyAll(SpriteRoot s)
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x1AB7760", Offset = "0x1AB7760", VA = "0x1AB7760", Slot = "56")]
	public override bool StepAnim(float time)
	{
		return default(bool);
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x1AB7CAC", Offset = "0x1AB7CAC", VA = "0x1AB7CAC")]
	protected void CallAnimCompleteDelegate()
	{
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x1AB7CC4", Offset = "0x1AB7CC4", VA = "0x1AB7CC4")]
	public void PlayAnim(UVAnimation anim, int frame)
	{
	}

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x1AB7E98", Offset = "0x1AB7E98", VA = "0x1AB7E98")]
	public void PlayAnim(UVAnimation anim)
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x1AB7EA0", Offset = "0x1AB7EA0", VA = "0x1AB7EA0")]
	public void PlayAnim(int index, int frame)
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x1AB7FC4", Offset = "0x1AB7FC4", VA = "0x1AB7FC4", Slot = "57")]
	public override void PlayAnim(int index)
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x1AB80D8", Offset = "0x1AB80D8", VA = "0x1AB80D8")]
	public void PlayAnim(string name, int frame)
	{
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0x1AB8228", Offset = "0x1AB8228", VA = "0x1AB8228", Slot = "58")]
	public override void PlayAnim(string name)
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0x1AB8230", Offset = "0x1AB8230", VA = "0x1AB8230")]
	public void PlayAnimInReverse(UVAnimation anim)
	{
	}

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x1AB837C", Offset = "0x1AB837C", VA = "0x1AB837C")]
	public void PlayAnimInReverse(UVAnimation anim, int frame)
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x1AB84E8", Offset = "0x1AB84E8", VA = "0x1AB84E8", Slot = "59")]
	public override void PlayAnimInReverse(int index)
	{
	}

	[Token(Token = "0x600076E")]
	[Address(RVA = "0x1AB85F8", Offset = "0x1AB85F8", VA = "0x1AB85F8")]
	public void PlayAnimInReverse(int index, int frame)
	{
	}

	[Token(Token = "0x600076F")]
	[Address(RVA = "0x1AB871C", Offset = "0x1AB871C", VA = "0x1AB871C", Slot = "60")]
	public override void PlayAnimInReverse(string name)
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0x1AB887C", Offset = "0x1AB887C", VA = "0x1AB887C")]
	public void PlayAnimInReverse(string name, int frame)
	{
	}

	[Token(Token = "0x6000771")]
	[Address(RVA = "0x1AB89F0", Offset = "0x1AB89F0", VA = "0x1AB89F0")]
	public void DoAnim(int index)
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0x1AB8A20", Offset = "0x1AB8A20", VA = "0x1AB8A20")]
	public void DoAnim(string name)
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0x1AB8A84", Offset = "0x1AB8A84", VA = "0x1AB8A84")]
	public void DoAnim(UVAnimation anim)
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0x1AB8AA4", Offset = "0x1AB8AA4", VA = "0x1AB8AA4")]
	public void SetCurFrame(int index)
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0x1AB8B2C", Offset = "0x1AB8B2C", VA = "0x1AB8B2C")]
	public void SetFrame(UVAnimation anim, int frameNum)
	{
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0x1AB8B70", Offset = "0x1AB8B70", VA = "0x1AB8B70")]
	public void SetFrame(string anim, int frameNum)
	{
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0x1AB8BBC", Offset = "0x1AB8BBC", VA = "0x1AB8BBC")]
	public void SetFrame(int anim, int frameNum)
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0x1AB8C08", Offset = "0x1AB8C08", VA = "0x1AB8C08", Slot = "61")]
	public override void StopAnim()
	{
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0x1AB8C4C", Offset = "0x1AB8C4C", VA = "0x1AB8C4C")]
	public void UnpauseAnim()
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0x1AB8C68", Offset = "0x1AB8C68", VA = "0x1AB8C68", Slot = "62")]
	protected override void AddToAnimatedList()
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0x1AB8D14", Offset = "0x1AB8D14", VA = "0x1AB8D14", Slot = "63")]
	protected override void RemoveFromAnimatedList()
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0x1AB8D80", Offset = "0x1AB8D80", VA = "0x1AB8D80")]
	public UVAnimation GetCurAnim()
	{
		return null;
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0x1AB8D88", Offset = "0x1AB8D88", VA = "0x1AB8D88")]
	public UVAnimation GetAnim(string name)
	{
		return null;
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x1AB8E2C", Offset = "0x1AB8E2C", VA = "0x1AB8E2C", Slot = "46")]
	public override int GetStateIndex(string stateName)
	{
		return default(int);
	}

	[Token(Token = "0x600077F")]
	[Address(RVA = "0x1AB8EBC", Offset = "0x1AB8EBC", VA = "0x1AB8EBC", Slot = "47")]
	public override void SetState(int index)
	{
	}

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x1AB8ED4", Offset = "0x1AB8ED4", VA = "0x1AB8ED4", Slot = "85")]
	public virtual Material GetPackedMaterial(out string errString)
	{
		return null;
	}

	[Token(Token = "0x6000784")]
	[Address(RVA = "0x1AB90F8", Offset = "0x1AB90F8", VA = "0x1AB90F8", Slot = "88")]
	public virtual void Aggregate(PathFromGUIDDelegate guid2Path, LoadAssetDelegate load, GUIDFromPathDelegate path2Guid)
	{
	}

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x1AB69C0", Offset = "0x1AB69C0", VA = "0x1AB69C0")]
	protected AutoSpriteBase()
	{
	}

	[SpecialName]
	[Token(Token = "0x6000788")]
	[Address(RVA = "0x1AB9A70", Offset = "0x1AB9A70", VA = "0x1AB9A70", Slot = "70")]
	private GameObject ISpriteAggregator.get_gameObject()
	{
		return null;
	}

	[SpecialName]
	[Token(Token = "0x6000789")]
	[Address(RVA = "0x1AB9A78", Offset = "0x1AB9A78", VA = "0x1AB9A78", Slot = "72")]
	private GameObject ISpritePackable.get_gameObject()
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x20000E2")]
public class EZTransitionList
{
	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public EZTransition[] list;

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x152A594", Offset = "0x152A594", VA = "0x152A594")]
	public EZTransitionList(EZTransition[] l)
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x152A61C", Offset = "0x152A61C", VA = "0x152A61C")]
	public EZTransitionList()
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x152A6AC", Offset = "0x152A6AC", VA = "0x152A6AC")]
	public void Clone(int source, bool force)
	{
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x152A79C", Offset = "0x152A79C", VA = "0x152A79C")]
	public void CloneAsNeeded(int source)
	{
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x152A7A4", Offset = "0x152A7A4", VA = "0x152A7A4")]
	public void CloneAll(int source)
	{
	}

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x152A7AC", Offset = "0x152A7AC", VA = "0x152A7AC")]
	public void MarkAllInitialized()
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x152A80C", Offset = "0x152A80C", VA = "0x152A80C")]
	public string[] GetTransitionNames()
	{
		return null;
	}

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x152A91C", Offset = "0x152A91C", VA = "0x152A91C")]
	public void CopyTo(EZTransitionList target)
	{
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0x152A924", Offset = "0x152A924", VA = "0x152A924")]
	public void CopyTo(EZTransitionList target, bool copyInit)
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0x152AA14", Offset = "0x152AA14", VA = "0x152AA14")]
	public void CopyToNew(EZTransitionList target)
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0x152AA1C", Offset = "0x152AA1C", VA = "0x152AA1C")]
	public void CopyToNew(EZTransitionList target, bool copyInit)
	{
	}
}
[Serializable]
[Token(Token = "0x20000E3")]
public class EZTransition
{
	[Token(Token = "0x20001A9")]
	public delegate void OnTransitionEndDelegate(EZTransition transition);

	[Token(Token = "0x20001AA")]
	public delegate void OnTransitionStartDelegate(EZTransition transition);

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EZAnimation.ANIM_TYPE[] animationTypes;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimParams[] animParams;

	[NonSerialized]
	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected EZLinkedList<EZLinkedListNode<EZAnimation>> runningAnims;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected EZLinkedList<EZLinkedListNode<EZAnimation>> idleAnims;

	[NonSerialized]
	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected GameObject mainSubject;

	[NonSerialized]
	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected EZLinkedList<EZLinkedListNode<GameObject>> subSubjects;

	[NonSerialized]
	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected OnTransitionEndDelegate onEndDelegates;

	[NonSerialized]
	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OnTransitionStartDelegate onStartDelegates;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool initialized;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	protected bool forcedStop;

	[Token(Token = "0x17000160")]
	public EZLinkedList<EZLinkedListNode<GameObject>> SubSubjects
	{
		[Token(Token = "0x600079B")]
		[Address(RVA = "0x15291AC", Offset = "0x15291AC", VA = "0x15291AC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000161")]
	public GameObject MainSubject
	{
		[Token(Token = "0x600079C")]
		[Address(RVA = "0x15291B4", Offset = "0x15291B4", VA = "0x15291B4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600079D")]
		[Address(RVA = "0x15291BC", Offset = "0x15291BC", VA = "0x15291BC")]
		set
		{
		}
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0x1528C28", Offset = "0x1528C28", VA = "0x1528C28")]
	public EZTransition(string n)
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0x1528DB4", Offset = "0x1528DB4", VA = "0x1528DB4")]
	public void AddTransitionStartDelegate(OnTransitionStartDelegate del)
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0x1528E40", Offset = "0x1528E40", VA = "0x1528E40")]
	public void RemoveTransitionStartDelegate(OnTransitionStartDelegate del)
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0x1528ECC", Offset = "0x1528ECC", VA = "0x1528ECC")]
	public void AddTransitionEndDelegate(OnTransitionEndDelegate del)
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0x1528F58", Offset = "0x1528F58", VA = "0x1528F58")]
	public void RemoveTransitionEndDelegate(OnTransitionEndDelegate del)
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0x1528FE4", Offset = "0x1528FE4", VA = "0x1528FE4")]
	public void Copy(EZTransition src)
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0x15291C4", Offset = "0x15291C4", VA = "0x15291C4")]
	public void AddSubSubject(GameObject go)
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0x15292C0", Offset = "0x15292C0", VA = "0x15292C0")]
	public void RemoveSubSubject(GameObject go)
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0x152941C", Offset = "0x152941C", VA = "0x152941C")]
	public void OnAnimEnd(EZAnimation anim)
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0x1524704", Offset = "0x1524704", VA = "0x1524704")]
	public EZLinkedListNode<EZAnimation> AddRunningAnim()
	{
		return null;
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0x152960C", Offset = "0x152960C", VA = "0x152960C")]
	public void Start()
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0x1529948", Offset = "0x1529948", VA = "0x1529948")]
	public void End()
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0x1529740", Offset = "0x1529740", VA = "0x1529740")]
	public void StopSafe()
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0x1529AF0", Offset = "0x1529AF0", VA = "0x1529AF0")]
	public void Pause()
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0x1529BE8", Offset = "0x1529BE8", VA = "0x1529BE8")]
	public void Unpause()
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0x1529CDC", Offset = "0x1529CDC", VA = "0x1529CDC")]
	public bool IsRunning()
	{
		return default(bool);
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0x1529DFC", Offset = "0x1529DFC", VA = "0x1529DFC")]
	public bool IsRunningAtAll()
	{
		return default(bool);
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0x15295EC", Offset = "0x15295EC", VA = "0x15295EC")]
	protected void CallEndDelegates()
	{
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0x1529E54", Offset = "0x1529E54", VA = "0x1529E54")]
	public int Add()
	{
		return default(int);
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0x152A078", Offset = "0x152A078", VA = "0x152A078")]
	public AnimParams AddElement(EZAnimation.ANIM_TYPE type)
	{
		return null;
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0x152A0E8", Offset = "0x152A0E8", VA = "0x152A0E8")]
	public void Remove(int index)
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0x152A2C8", Offset = "0x152A2C8", VA = "0x152A2C8")]
	public void SetElementType(int index, EZAnimation.ANIM_TYPE type)
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0x152A328", Offset = "0x152A328", VA = "0x152A328")]
	public string[] GetNames()
	{
		return null;
	}
}
[Token(Token = "0x20000E4")]
public interface IGUIHelper
{
	[Token(Token = "0x60007AF")]
	Enum EnumField(string label, Enum selected);

	[Token(Token = "0x60007B0")]
	Color ColorField(string label, Color color);

	[Token(Token = "0x60007B1")]
	Vector3 Vector3Field(string label, Vector3 val);

	[Token(Token = "0x60007B2")]
	float FloatField(string label, float val);

	[Token(Token = "0x60007B3")]
	string TextField(string label, string val);

	[Token(Token = "0x60007B4")]
	UnityEngine.Object ObjectField(string label, Type type, UnityEngine.Object obj);
}
[Token(Token = "0x20000E5")]
public class EZAnimator : MonoBehaviour
{
	[Token(Token = "0x20001AB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769738", Offset = "0x769738")]
	private sealed class <AnimPump>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private EZLinkedListIterator<EZAnimation> <i>5__2;

		[Token(Token = "0x17000229")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F43")]
			[Address(RVA = "0x1739C5C", Offset = "0x1739C5C", VA = "0x1739C5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F45")]
			[Address(RVA = "0x1739CA4", Offset = "0x1739CA4", VA = "0x1739CA4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0x17398FC", Offset = "0x17398FC", VA = "0x17398FC")]
		[DebuggerHidden]
		public <AnimPump>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0x1739928", Offset = "0x1739928", VA = "0x1739928", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0x173992C", Offset = "0x173992C", VA = "0x173992C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0x1739C64", Offset = "0x1739C64", VA = "0x1739C64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769748", Offset = "0x769748")]
	private sealed class <PumpStarter>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EZAnimator <>4__this;

		[Token(Token = "0x1700022B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F49")]
			[Address(RVA = "0x1739DBC", Offset = "0x1739DBC", VA = "0x1739DBC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F4B")]
			[Address(RVA = "0x1739E04", Offset = "0x1739E04", VA = "0x1739E04", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0x1739CAC", Offset = "0x1739CAC", VA = "0x1739CAC")]
		[DebuggerHidden]
		public <PumpStarter>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0x1739CD8", Offset = "0x1739CD8", VA = "0x1739CD8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0x1739CDC", Offset = "0x1739CDC", VA = "0x1739CDC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0x1739DC4", Offset = "0x1739DC4", VA = "0x1739DC4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static EZAnimator s_Instance;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	protected static Dictionary<EZAnimation.ANIM_TYPE, EZLinkedList<EZAnimation>> freeAnimPool;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected static EZLinkedList<EZAnimation> animations;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected static bool pumpIsRunning;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	protected static bool pumpIsDone;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected static float _timeScale;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected static float startTime;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	protected static float time;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected static float elapsed;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected static EZAnimation anim;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected static float timePaused;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int i;

	[Token(Token = "0x17000162")]
	public static EZAnimator instance
	{
		[Token(Token = "0x60007B5")]
		[Address(RVA = "0x151EDD4", Offset = "0x151EDD4", VA = "0x151EDD4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000163")]
	public static float timeScale
	{
		[Token(Token = "0x60007B8")]
		[Address(RVA = "0x1523688", Offset = "0x1523688", VA = "0x1523688")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60007B9")]
		[Address(RVA = "0x15236EC", Offset = "0x15236EC", VA = "0x15236EC")]
		set
		{
		}
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0x1523544", Offset = "0x1523544", VA = "0x1523544")]
	public static bool Exists()
	{
		return default(bool);
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0x15235E4", Offset = "0x15235E4", VA = "0x15235E4")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0x1523770", Offset = "0x1523770", VA = "0x1523770")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0x152388C", Offset = "0x152388C", VA = "0x152388C")]
	private void OnLevelWasLoaded(int level)
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0x1523B90", Offset = "0x1523B90", VA = "0x1523B90")]
	private void OnApplicationPause(bool paused)
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0x1523C40", Offset = "0x1523C40", VA = "0x1523C40")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76AC88", Offset = "0x76AC88")]
	protected static IEnumerator AnimPump()
	{
		return null;
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0x1523C9C", Offset = "0x1523C9C", VA = "0x1523C9C")]
	public void StartAnimationPump()
	{
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0x1523D70", Offset = "0x1523D70", VA = "0x1523D70")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76ACE8", Offset = "0x76ACE8")]
	protected IEnumerator PumpStarter()
	{
		return null;
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0x1523DE8", Offset = "0x1523DE8", VA = "0x1523DE8")]
	public static void StopAnimationPump()
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0x1523DEC", Offset = "0x1523DEC", VA = "0x1523DEC")]
	protected EZAnimation CreateNewAnimation(EZAnimation.ANIM_TYPE type)
	{
		return null;
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0x151EFB8", Offset = "0x151EFB8", VA = "0x151EFB8")]
	public EZAnimation GetAnimation(EZAnimation.ANIM_TYPE type)
	{
		return null;
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0x1523A24", Offset = "0x1523A24", VA = "0x1523A24")]
	protected static void ReturnAnimToPool(EZAnimation anim)
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0x151F784", Offset = "0x151F784", VA = "0x151F784")]
	public void AddAnimation(EZAnimation a)
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0x15243F4", Offset = "0x15243F4", VA = "0x15243F4")]
	public void AddTransition(EZTransition t)
	{
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0x1524898", Offset = "0x1524898", VA = "0x1524898")]
	public void Cancel(object obj)
	{
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0x1521A8C", Offset = "0x1521A8C", VA = "0x1521A8C")]
	public void StopAnimation(EZAnimation a)
	{
	}

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x1521B04", Offset = "0x1521B04", VA = "0x1521B04")]
	public void StopAnimation(EZAnimation a, bool end)
	{
	}

	[Token(Token = "0x60007C9")]
	[Address(RVA = "0x1524A4C", Offset = "0x1524A4C", VA = "0x1524A4C")]
	public void Stop(object obj)
	{
	}

	[Token(Token = "0x60007CA")]
	[Address(RVA = "0x1524A54", Offset = "0x1524A54", VA = "0x1524A54")]
	public void Stop(object obj, bool end)
	{
	}

	[Token(Token = "0x60007CB")]
	[Address(RVA = "0x151F58C", Offset = "0x151F58C", VA = "0x151F58C")]
	public void Stop(object obj, EZAnimation.ANIM_TYPE type, bool end)
	{
	}

	[Token(Token = "0x60007CC")]
	[Address(RVA = "0x1524C30", Offset = "0x1524C30", VA = "0x1524C30")]
	public void End(object obj)
	{
	}

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x1524C38", Offset = "0x1524C38", VA = "0x1524C38")]
	public void EndAll()
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x1524D24", Offset = "0x1524D24", VA = "0x1524D24")]
	public void StopAll()
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0x1524E18", Offset = "0x1524E18", VA = "0x1524E18")]
	public void PauseAll()
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x1524F38", Offset = "0x1524F38", VA = "0x1524F38")]
	public void UnpauseAll()
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x1525054", Offset = "0x1525054", VA = "0x1525054")]
	public static int GetNumAnimations()
	{
		return default(int);
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x15250D0", Offset = "0x15250D0", VA = "0x15250D0")]
	public EZAnimator()
	{
	}
}
[Token(Token = "0x20000E6")]
public abstract class EZAnimation : IEZLinkedListItem<EZAnimation>
{
	[Token(Token = "0x20001AD")]
	public enum ANIM_TYPE
	{
		[Token(Token = "0x4000A1A")]
		AnimClip,
		[Token(Token = "0x4000A1B")]
		FadeSprite,
		[Token(Token = "0x4000A1C")]
		FadeMaterial,
		[Token(Token = "0x4000A1D")]
		FadeText,
		[Token(Token = "0x4000A1E")]
		Translate,
		[Token(Token = "0x4000A1F")]
		PunchPosition,
		[Token(Token = "0x4000A20")]
		Crash,
		[Token(Token = "0x4000A21")]
		SmoothCrash,
		[Token(Token = "0x4000A22")]
		Shake,
		[Token(Token = "0x4000A23")]
		Scale,
		[Token(Token = "0x4000A24")]
		PunchScale,
		[Token(Token = "0x4000A25")]
		Rotate,
		[Token(Token = "0x4000A26")]
		PunchRotation,
		[Token(Token = "0x4000A27")]
		ShakeRotation,
		[Token(Token = "0x4000A28")]
		CrashRotation,
		[Token(Token = "0x4000A29")]
		FadeAudio,
		[Token(Token = "0x4000A2A")]
		TuneAudio,
		[Token(Token = "0x4000A2B")]
		TranslateScreen,
		[Token(Token = "0x4000A2C")]
		FadeSpriteAlpha,
		[Token(Token = "0x4000A2D")]
		FadeTextAlpha,
		[Token(Token = "0x4000A2E")]
		RotateEuler
	}

	[Token(Token = "0x20001AE")]
	public enum ANIM_MODE
	{
		[Token(Token = "0x4000A30")]
		By,
		[Token(Token = "0x4000A31")]
		To,
		[Token(Token = "0x4000A32")]
		FromTo
	}

	[Token(Token = "0x20001AF")]
	public delegate void CompletionDelegate(EZAnimation anim);

	[Token(Token = "0x20001B0")]
	public delegate float Interpolator(float time, float start, float delta, float duration);

	[Token(Token = "0x20001B1")]
	public enum EASING_TYPE
	{
		[Token(Token = "0x4000A34")]
		Default = -1,
		[Token(Token = "0x4000A35")]
		Linear,
		[Token(Token = "0x4000A36")]
		BackIn,
		[Token(Token = "0x4000A37")]
		BackOut,
		[Token(Token = "0x4000A38")]
		BackInOut,
		[Token(Token = "0x4000A39")]
		BackOutIn,
		[Token(Token = "0x4000A3A")]
		BounceIn,
		[Token(Token = "0x4000A3B")]
		BounceOut,
		[Token(Token = "0x4000A3C")]
		BounceInOut,
		[Token(Token = "0x4000A3D")]
		BounceOutIn,
		[Token(Token = "0x4000A3E")]
		CircularIn,
		[Token(Token = "0x4000A3F")]
		CircularOut,
		[Token(Token = "0x4000A40")]
		CircularInOut,
		[Token(Token = "0x4000A41")]
		CircularOutIn,
		[Token(Token = "0x4000A42")]
		CubicIn,
		[Token(Token = "0x4000A43")]
		CubicOut,
		[Token(Token = "0x4000A44")]
		CubicInOut,
		[Token(Token = "0x4000A45")]
		CubicOutIn,
		[Token(Token = "0x4000A46")]
		ElasticIn,
		[Token(Token = "0x4000A47")]
		ElasticOut,
		[Token(Token = "0x4000A48")]
		ElasticInOut,
		[Token(Token = "0x4000A49")]
		ElasticOutIn,
		[Token(Token = "0x4000A4A")]
		ExponentialIn,
		[Token(Token = "0x4000A4B")]
		ExponentialOut,
		[Token(Token = "0x4000A4C")]
		ExponentialInOut,
		[Token(Token = "0x4000A4D")]
		ExponentialOutIn,
		[Token(Token = "0x4000A4E")]
		QuadraticIn,
		[Token(Token = "0x4000A4F")]
		QuadraticOut,
		[Token(Token = "0x4000A50")]
		QuadraticInOut,
		[Token(Token = "0x4000A51")]
		QuadraticOutIn,
		[Token(Token = "0x4000A52")]
		QuarticIn,
		[Token(Token = "0x4000A53")]
		QuarticOut,
		[Token(Token = "0x4000A54")]
		QuarticInOut,
		[Token(Token = "0x4000A55")]
		QuarticOutIn,
		[Token(Token = "0x4000A56")]
		QuinticIn,
		[Token(Token = "0x4000A57")]
		QuinticOut,
		[Token(Token = "0x4000A58")]
		QuinticInOut,
		[Token(Token = "0x4000A59")]
		QuinticOutIn,
		[Token(Token = "0x4000A5A")]
		SinusoidalIn,
		[Token(Token = "0x4000A5B")]
		SinusoidalOut,
		[Token(Token = "0x4000A5C")]
		SinusoidalInOut,
		[Token(Token = "0x4000A5D")]
		SinusoidalOutIn,
		[Token(Token = "0x4000A5E")]
		Spring
	}

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ANIM_TYPE type;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool pingPong;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool repeatDelay;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	public bool restartOnRepeat;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
	public bool running;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool m_paused;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected object data;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected ANIM_MODE m_mode;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected float direction;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected float timeElapsed;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected float wait;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected float m_wait;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected float duration;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected float interval;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected CompletionDelegate completedDelegate;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected CompletionDelegate startDelegate;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected Interpolator interpolator;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected EZAnimation m_prev;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected EZAnimation m_next;

	[Token(Token = "0x17000164")]
	public object Data
	{
		[Token(Token = "0x60007D4")]
		[Address(RVA = "0x15217DC", Offset = "0x15217DC", VA = "0x15217DC")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007D5")]
		[Address(RVA = "0x15217E4", Offset = "0x15217E4", VA = "0x15217E4")]
		set
		{
		}
	}

	[Token(Token = "0x17000165")]
	public float Duration
	{
		[Token(Token = "0x60007D6")]
		[Address(RVA = "0x15217EC", Offset = "0x15217EC", VA = "0x15217EC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000166")]
	public float Wait
	{
		[Token(Token = "0x60007D7")]
		[Address(RVA = "0x15217F4", Offset = "0x15217F4", VA = "0x15217F4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000167")]
	public bool Paused
	{
		[Token(Token = "0x60007D8")]
		[Address(RVA = "0x15217FC", Offset = "0x15217FC", VA = "0x15217FC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60007D9")]
		[Address(RVA = "0x1521804", Offset = "0x1521804", VA = "0x1521804")]
		set
		{
		}
	}

	[Token(Token = "0x17000168")]
	public ANIM_MODE Mode
	{
		[Token(Token = "0x60007DA")]
		[Address(RVA = "0x152181C", Offset = "0x152181C", VA = "0x152181C")]
		get
		{
			return default(ANIM_MODE);
		}
	}

	[Token(Token = "0x17000169")]
	public CompletionDelegate CompletedDelegate
	{
		[Token(Token = "0x60007DB")]
		[Address(RVA = "0x1521824", Offset = "0x1521824", VA = "0x1521824")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007DC")]
		[Address(RVA = "0x152182C", Offset = "0x152182C", VA = "0x152182C")]
		set
		{
		}
	}

	[Token(Token = "0x1700016A")]
	public CompletionDelegate StartDelegate
	{
		[Token(Token = "0x60007DD")]
		[Address(RVA = "0x1521834", Offset = "0x1521834", VA = "0x1521834")]
		get
		{
			return null;
		}
		[Token(Token = "0x60007DE")]
		[Address(RVA = "0x152183C", Offset = "0x152183C", VA = "0x152183C")]
		set
		{
		}
	}

	[Token(Token = "0x1700016B")]
	public EZAnimation prev
	{
		[Token(Token = "0x6000821")]
		[Address(RVA = "0x1523524", Offset = "0x1523524", VA = "0x1523524", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000822")]
		[Address(RVA = "0x152352C", Offset = "0x152352C", VA = "0x152352C", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x1700016C")]
	public EZAnimation next
	{
		[Token(Token = "0x6000823")]
		[Address(RVA = "0x1523534", Offset = "0x1523534", VA = "0x1523534", Slot = "6")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000824")]
		[Address(RVA = "0x152353C", Offset = "0x152353C", VA = "0x152353C", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0x1521844", Offset = "0x1521844", VA = "0x1521844")]
	public void Clear()
	{
	}

	[Token(Token = "0x60007E0")]
	public abstract bool Start(GameObject sub, AnimParams parms);

	[Token(Token = "0x60007E1")]
	protected abstract void DoAnim();

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0x1521888", Offset = "0x1521888", VA = "0x1521888", Slot = "10")]
	public virtual bool Step(float timeDelta)
	{
		return default(bool);
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0x1521A1C", Offset = "0x1521A1C", VA = "0x1521A1C", Slot = "11")]
	public virtual void Stop()
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0x151EC90", Offset = "0x151EC90", VA = "0x151EC90")]
	public void _stop()
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0x1521A94", Offset = "0x1521A94", VA = "0x1521A94")]
	public void End()
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0x1521C38", Offset = "0x1521C38", VA = "0x1521C38")]
	public void _cancel()
	{
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0x151EA70", Offset = "0x151EA70", VA = "0x151EA70", Slot = "12")]
	public virtual void _end()
	{
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0x1521C40", Offset = "0x1521C40", VA = "0x1521C40", Slot = "13")]
	protected virtual void LoopReset()
	{
	}

	[Token(Token = "0x60007E9")]
	public abstract object GetSubject();

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0x151EB1C", Offset = "0x151EB1C", VA = "0x151EB1C", Slot = "15")]
	protected virtual void WaitDone()
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0x151F530", Offset = "0x151F530", VA = "0x151F530")]
	protected void StartCommon()
	{
	}

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0x1521C44", Offset = "0x1521C44", VA = "0x1521C44")]
	public void ResetDefaults()
	{
	}

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0x1521C94", Offset = "0x1521C94", VA = "0x1521C94")]
	public static float linear(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0x1521CA4", Offset = "0x1521CA4", VA = "0x1521CA4")]
	public static float quadraticIn(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0x1521CB8", Offset = "0x1521CB8", VA = "0x1521CB8")]
	public static float quadraticOut(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0x1521CD4", Offset = "0x1521CD4", VA = "0x1521CD4")]
	public static float quadraticInOut(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0x1521D24", Offset = "0x1521D24", VA = "0x1521D24")]
	public static float quadraticOutIn(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0x1521D78", Offset = "0x1521D78", VA = "0x1521D78")]
	public static float cubicIn(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0x1521D90", Offset = "0x1521D90", VA = "0x1521D90")]
	public static float cubicOut(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0x1521DB8", Offset = "0x1521DB8", VA = "0x1521DB8")]
	public static float cubicInOut(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0x1521E0C", Offset = "0x1521E0C", VA = "0x1521E0C")]
	public static float cubicOutIn(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0x1521E6C", Offset = "0x1521E6C", VA = "0x1521E6C")]
	public static float quarticIn(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0x1521E88", Offset = "0x1521E88", VA = "0x1521E88")]
	public static float quarticOut(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0x1521EB0", Offset = "0x1521EB0", VA = "0x1521EB0")]
	public static float quarticInOut(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0x1521F0C", Offset = "0x1521F0C", VA = "0x1521F0C")]
	public static float quarticOutIn(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0x1521F74", Offset = "0x1521F74", VA = "0x1521F74")]
	public static float quinticIn(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0x1521F94", Offset = "0x1521F94", VA = "0x1521F94")]
	public static float quinticOut(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0x1521FC4", Offset = "0x1521FC4", VA = "0x1521FC4")]
	public static float quinticInOut(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0x1522028", Offset = "0x1522028", VA = "0x1522028")]
	public static float quinticOutIn(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0x1522098", Offset = "0x1522098", VA = "0x1522098")]
	public static float sinusIn(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0x15220D8", Offset = "0x15220D8", VA = "0x15220D8")]
	public static float sinusOut(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0x1522114", Offset = "0x1522114", VA = "0x1522114")]
	public static float sinusInOut(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0x1522160", Offset = "0x1522160", VA = "0x1522160")]
	public static float sinusOutIn(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0x15221E0", Offset = "0x15221E0", VA = "0x15221E0")]
	public static float expIn(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0x1522220", Offset = "0x1522220", VA = "0x1522220")]
	public static float expOut(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0x1522260", Offset = "0x1522260", VA = "0x1522260")]
	public static float expInOut(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0x15222DC", Offset = "0x15222DC", VA = "0x15222DC")]
	public static float expOutIn(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0x1522364", Offset = "0x1522364", VA = "0x1522364")]
	public static float circIn(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0x15223B8", Offset = "0x15223B8", VA = "0x15223B8")]
	public static float circOut(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0x152240C", Offset = "0x152240C", VA = "0x152240C")]
	public static float circInOut(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0x1522494", Offset = "0x1522494", VA = "0x1522494")]
	public static float circOutIn(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0x1522540", Offset = "0x1522540", VA = "0x1522540")]
	public static float punch(float amplitude, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0x15225B4", Offset = "0x15225B4", VA = "0x15225B4")]
	public static float spring(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0x1522664", Offset = "0x1522664", VA = "0x1522664")]
	public static float elasticIn(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0x1522678", Offset = "0x1522678", VA = "0x1522678")]
	public static float elasticIn(float time, float start, float delta, float duration, float amplitude, float period)
	{
		return default(float);
	}

	[Token(Token = "0x600080E")]
	[Address(RVA = "0x152275C", Offset = "0x152275C", VA = "0x152275C")]
	public static float elasticOut(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0x1522770", Offset = "0x1522770", VA = "0x1522770")]
	public static float elasticOut(float time, float start, float delta, float duration, float amplitude, float period)
	{
		return default(float);
	}

	[Token(Token = "0x6000810")]
	[Address(RVA = "0x1522850", Offset = "0x1522850", VA = "0x1522850")]
	public static float elasticInOut(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0x152286C", Offset = "0x152286C", VA = "0x152286C")]
	public static float elasticInOut(float time, float start, float delta, float duration, float amplitude, float period)
	{
		return default(float);
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0x15229BC", Offset = "0x15229BC", VA = "0x15229BC")]
	public static float elasticOutIn(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0x15229D0", Offset = "0x15229D0", VA = "0x15229D0")]
	public static float elasticOutIn(float time, float start, float delta, float duration, float amplitude, float period)
	{
		return default(float);
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0x15229FC", Offset = "0x15229FC", VA = "0x15229FC")]
	public static float backIn(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0x1522A2C", Offset = "0x1522A2C", VA = "0x1522A2C")]
	public static float backIn(float time, float start, float delta, float duration, float overshootAmt)
	{
		return default(float);
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0x1522A54", Offset = "0x1522A54", VA = "0x1522A54")]
	public static float backOut(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0x1522A94", Offset = "0x1522A94", VA = "0x1522A94")]
	public static float backOut(float time, float start, float delta, float duration, float overshootAmt)
	{
		return default(float);
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0x1522AC8", Offset = "0x1522AC8", VA = "0x1522AC8")]
	public static float backInOut(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0x1522B48", Offset = "0x1522B48", VA = "0x1522B48")]
	public static float backInOut(float time, float start, float delta, float duration, float overshootAmt)
	{
		return default(float);
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0x1522BC8", Offset = "0x1522BC8", VA = "0x1522BC8")]
	public static float backOutIn(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0x1522BD4", Offset = "0x1522BD4", VA = "0x1522BD4")]
	public static float backOutIn(float time, float start, float delta, float duration, float overshootAmt)
	{
		return default(float);
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0x1522C50", Offset = "0x1522C50", VA = "0x1522C50")]
	public static float bounceIn(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0x1522C84", Offset = "0x1522C84", VA = "0x1522C84")]
	public static float bounceOut(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0x1522D4C", Offset = "0x1522D4C", VA = "0x1522D4C")]
	public static float bounceInOut(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0x1522DCC", Offset = "0x1522DCC", VA = "0x1522DCC")]
	public static float bounceOutIn(float time, float start, float delta, float duration)
	{
		return default(float);
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0x1522E24", Offset = "0x1522E24", VA = "0x1522E24")]
	public static Interpolator GetInterpolator(EASING_TYPE type)
	{
		return null;
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0x151F878", Offset = "0x151F878", VA = "0x151F878")]
	protected EZAnimation()
	{
	}
}
[Token(Token = "0x20000E7")]
public class FadeSprite : EZAnimation
{
	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Color start;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Color delta;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected Color end;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected SpriteRoot sprite;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected Color temp;

	[Token(Token = "0x6000826")]
	[Address(RVA = "0x152F4D4", Offset = "0x152F4D4", VA = "0x152F4D4", Slot = "14")]
	public override object GetSubject()
	{
		return null;
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0x152F4DC", Offset = "0x152F4DC", VA = "0x152F4DC", Slot = "12")]
	public override void _end()
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0x152F594", Offset = "0x152F594", VA = "0x152F594", Slot = "13")]
	protected override void LoopReset()
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0x152F5E8", Offset = "0x152F5E8", VA = "0x152F5E8", Slot = "15")]
	protected override void WaitDone()
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0x152F6B0", Offset = "0x152F6B0", VA = "0x152F6B0", Slot = "9")]
	protected override void DoAnim()
	{
	}

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x152F804", Offset = "0x152F804", VA = "0x152F804")]
	public static FadeSprite Do(SpriteRoot sprt, ANIM_MODE mode, Color begin, Color dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x152FB88", Offset = "0x152FB88", VA = "0x152FB88")]
	public static FadeSprite Do(SpriteRoot sprt, ANIM_MODE mode, Color dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x152FD24", Offset = "0x152FD24", VA = "0x152FD24", Slot = "8")]
	public override bool Start(GameObject sub, AnimParams parms)
	{
		return default(bool);
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0x152FCD0", Offset = "0x152FCD0", VA = "0x152FCD0")]
	public void Start(SpriteRoot sprt, ANIM_MODE mode, Color dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x152F97C", Offset = "0x152F97C", VA = "0x152F97C")]
	public void Start(SpriteRoot sprt, ANIM_MODE mode, Color begin, Color dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x1530068", Offset = "0x1530068", VA = "0x1530068")]
	public void Start()
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x15242CC", Offset = "0x15242CC", VA = "0x15242CC")]
	public FadeSprite()
	{
	}
}
[Token(Token = "0x20000E8")]
public class FadeSpriteAlpha : EZAnimation
{
	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Color start;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Color delta;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected Color end;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected SpriteRoot sprite;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected Color temp;

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x1530178", Offset = "0x1530178", VA = "0x1530178", Slot = "14")]
	public override object GetSubject()
	{
		return null;
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x1530180", Offset = "0x1530180", VA = "0x1530180", Slot = "12")]
	public override void _end()
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x1530238", Offset = "0x1530238", VA = "0x1530238", Slot = "13")]
	protected override void LoopReset()
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x153028C", Offset = "0x153028C", VA = "0x153028C", Slot = "15")]
	protected override void WaitDone()
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0x1530370", Offset = "0x1530370", VA = "0x1530370", Slot = "9")]
	protected override void DoAnim()
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0x1530458", Offset = "0x1530458", VA = "0x1530458")]
	public static FadeSpriteAlpha Do(SpriteRoot sprt, ANIM_MODE mode, Color begin, Color dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0x15307B8", Offset = "0x15307B8", VA = "0x15307B8")]
	public static FadeSpriteAlpha Do(SpriteRoot sprt, ANIM_MODE mode, Color dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0x1530954", Offset = "0x1530954", VA = "0x1530954", Slot = "8")]
	public override bool Start(GameObject sub, AnimParams parms)
	{
		return default(bool);
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0x1530900", Offset = "0x1530900", VA = "0x1530900")]
	public void Start(SpriteRoot sprt, ANIM_MODE mode, Color dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0x15305D0", Offset = "0x15305D0", VA = "0x15305D0")]
	public void Start(SpriteRoot sprt, ANIM_MODE mode, Color begin, Color dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0x1530C98", Offset = "0x1530C98", VA = "0x1530C98")]
	public void Start()
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0x152437C", Offset = "0x152437C", VA = "0x152437C")]
	public FadeSpriteAlpha()
	{
	}
}
[Token(Token = "0x20000E9")]
public class FadeMaterial : EZAnimation
{
	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Color start;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Color delta;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected Color end;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected Material mat;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected Color temp;

	[Token(Token = "0x600083E")]
	[Address(RVA = "0x152E848", Offset = "0x152E848", VA = "0x152E848", Slot = "14")]
	public override object GetSubject()
	{
		return null;
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0x152E850", Offset = "0x152E850", VA = "0x152E850", Slot = "12")]
	public override void _end()
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0x152E900", Offset = "0x152E900", VA = "0x152E900", Slot = "13")]
	protected override void LoopReset()
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0x152E954", Offset = "0x152E954", VA = "0x152E954", Slot = "15")]
	protected override void WaitDone()
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0x152EA08", Offset = "0x152EA08", VA = "0x152EA08", Slot = "9")]
	protected override void DoAnim()
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0x152EB54", Offset = "0x152EB54", VA = "0x152EB54")]
	public static FadeMaterial Do(Material material, ANIM_MODE mode, Color begin, Color dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0x152EED0", Offset = "0x152EED0", VA = "0x152EED0")]
	public static FadeMaterial Do(Material material, ANIM_MODE mode, Color dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0x152F0D8", Offset = "0x152F0D8", VA = "0x152F0D8", Slot = "8")]
	public override bool Start(GameObject sub, AnimParams parms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0x152F018", Offset = "0x152F018", VA = "0x152F018")]
	public void Start(Material material, ANIM_MODE mode, Color dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0x152ECCC", Offset = "0x152ECCC", VA = "0x152ECCC")]
	public void Start(Material material, ANIM_MODE mode, Color begin, Color dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0x152F3CC", Offset = "0x152F3CC", VA = "0x152F3CC")]
	public void Start()
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0x1524304", Offset = "0x1524304", VA = "0x1524304")]
	public FadeMaterial()
	{
	}
}
[Token(Token = "0x20000EA")]
public class FadeText : EZAnimation
{
	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Color start;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Color delta;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected Color end;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected UITextBase text;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected Color temp;

	[Token(Token = "0x600084A")]
	[Address(RVA = "0x1530DA8", Offset = "0x1530DA8", VA = "0x1530DA8", Slot = "14")]
	public override object GetSubject()
	{
		return null;
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0x1530DB0", Offset = "0x1530DB0", VA = "0x1530DB0", Slot = "12")]
	public override void _end()
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0x1530E68", Offset = "0x1530E68", VA = "0x1530E68", Slot = "13")]
	protected override void LoopReset()
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0x1530EBC", Offset = "0x1530EBC", VA = "0x1530EBC", Slot = "15")]
	protected override void WaitDone()
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0x1530F78", Offset = "0x1530F78", VA = "0x1530F78", Slot = "9")]
	protected override void DoAnim()
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0x15310CC", Offset = "0x15310CC", VA = "0x15310CC")]
	public static FadeText Do(UITextBase txt, ANIM_MODE mode, Color begin, Color dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0x1531450", Offset = "0x1531450", VA = "0x1531450")]
	public static FadeText Do(UITextBase txt, ANIM_MODE mode, Color dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x6000851")]
	[Address(RVA = "0x1531660", Offset = "0x1531660", VA = "0x1531660", Slot = "8")]
	public override bool Start(GameObject sub, AnimParams parms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0x1531598", Offset = "0x1531598", VA = "0x1531598")]
	public void Start(UITextBase txt, ANIM_MODE mode, Color dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0x1531244", Offset = "0x1531244", VA = "0x1531244")]
	public void Start(UITextBase txt, ANIM_MODE mode, Color begin, Color dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0x1524340", Offset = "0x1524340", VA = "0x1524340")]
	public FadeText()
	{
	}
}
[Token(Token = "0x20000EB")]
public class FadeTextAlpha : EZAnimation
{
	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Color start;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Color delta;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected Color end;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected UITextBase text;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected Color temp;

	[Token(Token = "0x6000855")]
	[Address(RVA = "0x15319AC", Offset = "0x15319AC", VA = "0x15319AC", Slot = "14")]
	public override object GetSubject()
	{
		return null;
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0x15319B4", Offset = "0x15319B4", VA = "0x15319B4", Slot = "12")]
	public override void _end()
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0x1531A6C", Offset = "0x1531A6C", VA = "0x1531A6C", Slot = "13")]
	protected override void LoopReset()
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0x1531AC0", Offset = "0x1531AC0", VA = "0x1531AC0", Slot = "15")]
	protected override void WaitDone()
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0x1531B84", Offset = "0x1531B84", VA = "0x1531B84", Slot = "9")]
	protected override void DoAnim()
	{
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0x1531C6C", Offset = "0x1531C6C", VA = "0x1531C6C")]
	public static FadeTextAlpha Do(UITextBase txt, ANIM_MODE mode, Color begin, Color dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0x1531FCC", Offset = "0x1531FCC", VA = "0x1531FCC")]
	public static FadeTextAlpha Do(UITextBase txt, ANIM_MODE mode, Color dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0x15321DC", Offset = "0x15321DC", VA = "0x15321DC", Slot = "8")]
	public override bool Start(GameObject sub, AnimParams parms)
	{
		return default(bool);
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0x1532114", Offset = "0x1532114", VA = "0x1532114")]
	public void Start(UITextBase txt, ANIM_MODE mode, Color dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x600085E")]
	[Address(RVA = "0x1531DE4", Offset = "0x1531DE4", VA = "0x1531DE4")]
	public void Start(UITextBase txt, ANIM_MODE mode, Color begin, Color dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0x15243B8", Offset = "0x15243B8", VA = "0x15243B8")]
	public FadeTextAlpha()
	{
	}
}
[Token(Token = "0x20000EC")]
public class AnimateRotation : EZAnimation
{
	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected GameObject subject;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected Transform subTrans;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Quaternion temp;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected Quaternion delta;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected Quaternion start;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected Quaternion end;

	[Token(Token = "0x6000860")]
	[Address(RVA = "0x1AB2CB8", Offset = "0x1AB2CB8", VA = "0x1AB2CB8", Slot = "14")]
	public override object GetSubject()
	{
		return null;
	}

	[Token(Token = "0x6000861")]
	[Address(RVA = "0x1AB2CC0", Offset = "0x1AB2CC0", VA = "0x1AB2CC0", Slot = "12")]
	public override void _end()
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0x1AB2D84", Offset = "0x1AB2D84", VA = "0x1AB2D84", Slot = "13")]
	protected override void LoopReset()
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0x1AB2DB0", Offset = "0x1AB2DB0", VA = "0x1AB2DB0", Slot = "15")]
	protected override void WaitDone()
	{
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0x1AB2E70", Offset = "0x1AB2E70", VA = "0x1AB2E70", Slot = "9")]
	protected override void DoAnim()
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0x1AB2FD4", Offset = "0x1AB2FD4", VA = "0x1AB2FD4")]
	public static AnimateRotation Do(GameObject sub, ANIM_MODE mode, Vector3 begin, Vector3 dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0x1AB3378", Offset = "0x1AB3378", VA = "0x1AB3378")]
	public static AnimateRotation Do(GameObject sub, ANIM_MODE mode, Vector3 dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0x1AB35F8", Offset = "0x1AB35F8", VA = "0x1AB35F8", Slot = "8")]
	public override bool Start(GameObject sub, AnimParams parms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0x1AB34C0", Offset = "0x1AB34C0", VA = "0x1AB34C0")]
	public void Start(GameObject sub, ANIM_MODE mode, Vector3 dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x6000869")]
	[Address(RVA = "0x1AB313C", Offset = "0x1AB313C", VA = "0x1AB313C")]
	public void Start(GameObject sub, ANIM_MODE mode, Vector3 begin, Vector3 dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0x1AB3834", Offset = "0x1AB3834", VA = "0x1AB3834")]
	public void Start()
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0x1AB3950", Offset = "0x1AB3950", VA = "0x1AB3950")]
	public AnimateRotation()
	{
	}
}
[Token(Token = "0x20000ED")]
public class AnimateRotationEuler : EZAnimation
{
	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected GameObject subject;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected Transform subTrans;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Vector3 start;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	protected Vector3 delta;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected Vector3 end;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	protected Vector3 temp;

	[Token(Token = "0x600086C")]
	[Address(RVA = "0x1AB397C", Offset = "0x1AB397C", VA = "0x1AB397C", Slot = "14")]
	public override object GetSubject()
	{
		return null;
	}

	[Token(Token = "0x600086D")]
	[Address(RVA = "0x1AB3984", Offset = "0x1AB3984", VA = "0x1AB3984", Slot = "12")]
	public override void _end()
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0x1AB3A48", Offset = "0x1AB3A48", VA = "0x1AB3A48", Slot = "13")]
	protected override void LoopReset()
	{
	}

	[Token(Token = "0x600086F")]
	[Address(RVA = "0x1AB3A88", Offset = "0x1AB3A88", VA = "0x1AB3A88", Slot = "15")]
	protected override void WaitDone()
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0x1AB3B4C", Offset = "0x1AB3B4C", VA = "0x1AB3B4C", Slot = "9")]
	protected override void DoAnim()
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0x1AB3C84", Offset = "0x1AB3C84", VA = "0x1AB3C84")]
	public static AnimateRotationEuler Do(GameObject sub, ANIM_MODE mode, Vector3 begin, Vector3 dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0x1AB3FA0", Offset = "0x1AB3FA0", VA = "0x1AB3FA0")]
	public static AnimateRotationEuler Do(GameObject sub, ANIM_MODE mode, Vector3 dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0x1AB4220", Offset = "0x1AB4220", VA = "0x1AB4220", Slot = "8")]
	public override bool Start(GameObject sub, AnimParams parms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0x1AB40E8", Offset = "0x1AB40E8", VA = "0x1AB40E8")]
	public void Start(GameObject sub, ANIM_MODE mode, Vector3 dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0x1AB3DEC", Offset = "0x1AB3DEC", VA = "0x1AB3DEC")]
	public void Start(GameObject sub, ANIM_MODE mode, Vector3 begin, Vector3 dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0x1AB445C", Offset = "0x1AB445C", VA = "0x1AB445C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0x1AB457C", Offset = "0x1AB457C", VA = "0x1AB457C")]
	public AnimateRotationEuler()
	{
	}
}
[Token(Token = "0x20000EE")]
public class AnimatePosition : EZAnimation
{
	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Vector3 start;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected Vector3 delta;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected Vector3 end;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected GameObject subject;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected Transform subTrans;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected Vector3 temp;

	[Token(Token = "0x6000878")]
	[Address(RVA = "0x1AB208C", Offset = "0x1AB208C", VA = "0x1AB208C", Slot = "14")]
	public override object GetSubject()
	{
		return null;
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0x1AB2094", Offset = "0x1AB2094", VA = "0x1AB2094", Slot = "12")]
	public override void _end()
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0x1AB2158", Offset = "0x1AB2158", VA = "0x1AB2158", Slot = "13")]
	protected override void LoopReset()
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0x1AB2198", Offset = "0x1AB2198", VA = "0x1AB2198", Slot = "15")]
	protected override void WaitDone()
	{
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0x1AB225C", Offset = "0x1AB225C", VA = "0x1AB225C", Slot = "9")]
	protected override void DoAnim()
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0x1AB2394", Offset = "0x1AB2394", VA = "0x1AB2394")]
	public static AnimatePosition Do(GameObject sub, ANIM_MODE mode, Vector3 begin, Vector3 dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0x1AB26B0", Offset = "0x1AB26B0", VA = "0x1AB26B0")]
	public static AnimatePosition Do(GameObject sub, ANIM_MODE mode, Vector3 dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0x1AB2930", Offset = "0x1AB2930", VA = "0x1AB2930", Slot = "8")]
	public override bool Start(GameObject sub, AnimParams parms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0x1AB27F8", Offset = "0x1AB27F8", VA = "0x1AB27F8")]
	public void Start(GameObject sub, ANIM_MODE mode, Vector3 dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0x1AB24FC", Offset = "0x1AB24FC", VA = "0x1AB24FC")]
	public void Start(GameObject sub, ANIM_MODE mode, Vector3 begin, Vector3 dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0x1AB2B6C", Offset = "0x1AB2B6C", VA = "0x1AB2B6C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0x1AB2C8C", Offset = "0x1AB2C8C", VA = "0x1AB2C8C")]
	public AnimatePosition()
	{
	}
}
[Token(Token = "0x20000EF")]
public class AnimateScreenPosition : EZAnimation
{
	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Vector3 start;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected Vector3 delta;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected Vector3 end;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected GameObject subject;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected EZScreenPlacement subSP;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected Vector3 temp;

	[Token(Token = "0x6000884")]
	[Address(RVA = "0x1AB51E0", Offset = "0x1AB51E0", VA = "0x1AB51E0", Slot = "14")]
	public override object GetSubject()
	{
		return null;
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0x1AB51E8", Offset = "0x1AB51E8", VA = "0x1AB51E8", Slot = "12")]
	public override void _end()
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0x1AB52CC", Offset = "0x1AB52CC", VA = "0x1AB52CC", Slot = "13")]
	protected override void LoopReset()
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0x1AB530C", Offset = "0x1AB530C", VA = "0x1AB530C", Slot = "15")]
	protected override void WaitDone()
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0x1AB53CC", Offset = "0x1AB53CC", VA = "0x1AB53CC", Slot = "9")]
	protected override void DoAnim()
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0x1AB5510", Offset = "0x1AB5510", VA = "0x1AB5510")]
	public static AnimateScreenPosition Do(GameObject sub, ANIM_MODE mode, Vector3 begin, Vector3 dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0x1AB59F8", Offset = "0x1AB59F8", VA = "0x1AB59F8")]
	public static AnimateScreenPosition Do(GameObject sub, ANIM_MODE mode, Vector3 dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0x1AB5DDC", Offset = "0x1AB5DDC", VA = "0x1AB5DDC", Slot = "8")]
	public override bool Start(GameObject sub, AnimParams parms)
	{
		return default(bool);
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0x1AB5B40", Offset = "0x1AB5B40", VA = "0x1AB5B40")]
	public void Start(GameObject sub, ANIM_MODE mode, Vector3 dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0x1AB5678", Offset = "0x1AB5678", VA = "0x1AB5678")]
	public void Start(GameObject sub, ANIM_MODE mode, Vector3 begin, Vector3 dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0x1AB6150", Offset = "0x1AB6150", VA = "0x1AB6150")]
	public void Start()
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0x1AB6270", Offset = "0x1AB6270", VA = "0x1AB6270")]
	public AnimateScreenPosition()
	{
	}
}
[Token(Token = "0x20000F0")]
public class AnimateScale : EZAnimation
{
	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Vector3 start;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected Vector3 delta;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected Vector3 end;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected GameObject subject;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected Transform subTrans;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected Vector3 temp;

	[Token(Token = "0x6000890")]
	[Address(RVA = "0x1AB45A8", Offset = "0x1AB45A8", VA = "0x1AB45A8", Slot = "14")]
	public override object GetSubject()
	{
		return null;
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0x1AB45B0", Offset = "0x1AB45B0", VA = "0x1AB45B0", Slot = "12")]
	public override void _end()
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0x1AB4674", Offset = "0x1AB4674", VA = "0x1AB4674", Slot = "13")]
	protected override void LoopReset()
	{
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0x1AB46B4", Offset = "0x1AB46B4", VA = "0x1AB46B4", Slot = "15")]
	protected override void WaitDone()
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x1AB4778", Offset = "0x1AB4778", VA = "0x1AB4778", Slot = "9")]
	protected override void DoAnim()
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0x1AB48B0", Offset = "0x1AB48B0", VA = "0x1AB48B0")]
	public static AnimateScale Do(GameObject sub, ANIM_MODE mode, Vector3 begin, Vector3 dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0x1AB4BD8", Offset = "0x1AB4BD8", VA = "0x1AB4BD8")]
	public static AnimateScale Do(GameObject sub, ANIM_MODE mode, Vector3 dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0x1AB4E58", Offset = "0x1AB4E58", VA = "0x1AB4E58", Slot = "8")]
	public override bool Start(GameObject sub, AnimParams parms)
	{
		return default(bool);
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0x1AB4D20", Offset = "0x1AB4D20", VA = "0x1AB4D20")]
	public void Start(GameObject sub, ANIM_MODE mode, Vector3 dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0x1AB4A18", Offset = "0x1AB4A18", VA = "0x1AB4A18")]
	public void Start(GameObject sub, ANIM_MODE mode, Vector3 begin, Vector3 dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0x1AB5094", Offset = "0x1AB5094", VA = "0x1AB5094")]
	public void Start()
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0x1AB51B4", Offset = "0x1AB51B4", VA = "0x1AB51B4")]
	public AnimateScale()
	{
	}
}
[Token(Token = "0x20000F1")]
public class PunchPosition : EZAnimation
{
	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Vector3 start;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected Vector3 magnitude;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected GameObject subject;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected Transform subTrans;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected Vector3 temp;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	protected float factor;

	[Token(Token = "0x600089C")]
	[Address(RVA = "0x14D1078", Offset = "0x14D1078", VA = "0x14D1078", Slot = "14")]
	public override object GetSubject()
	{
		return null;
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0x14D1080", Offset = "0x14D1080", VA = "0x14D1080", Slot = "12")]
	public override void _end()
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0x14D1144", Offset = "0x14D1144", VA = "0x14D1144", Slot = "15")]
	protected override void WaitDone()
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x14D11E0", Offset = "0x14D11E0", VA = "0x14D11E0", Slot = "9")]
	protected override void DoAnim()
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x14D131C", Offset = "0x14D131C", VA = "0x14D131C")]
	public static PunchPosition Do(GameObject sub, Vector3 mag, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x14D1568", Offset = "0x14D1568", VA = "0x14D1568", Slot = "8")]
	public override bool Start(GameObject sub, AnimParams parms)
	{
		return default(bool);
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x14D144C", Offset = "0x14D144C", VA = "0x14D144C")]
	public void Start(GameObject sub, Vector3 mag, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x14D16E4", Offset = "0x14D16E4", VA = "0x14D16E4")]
	public void Start(GameObject sub, Vector3 begin, Vector3 mag, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x14D18C0", Offset = "0x14D18C0", VA = "0x14D18C0")]
	public PunchPosition()
	{
	}
}
[Token(Token = "0x20000F2")]
public class PunchScale : EZAnimation
{
	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Vector3 start;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected Vector3 magnitude;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected GameObject subject;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected Transform subTrans;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected Vector3 temp;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	protected float factor;

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0x14D2170", Offset = "0x14D2170", VA = "0x14D2170", Slot = "14")]
	public override object GetSubject()
	{
		return null;
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0x14D2178", Offset = "0x14D2178", VA = "0x14D2178", Slot = "12")]
	public override void _end()
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0x14D223C", Offset = "0x14D223C", VA = "0x14D223C", Slot = "15")]
	protected override void WaitDone()
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0x14D22D8", Offset = "0x14D22D8", VA = "0x14D22D8", Slot = "9")]
	protected override void DoAnim()
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0x14D2414", Offset = "0x14D2414", VA = "0x14D2414")]
	public static PunchScale Do(GameObject sub, Vector3 mag, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0x14D2660", Offset = "0x14D2660", VA = "0x14D2660", Slot = "8")]
	public override bool Start(GameObject sub, AnimParams parms)
	{
		return default(bool);
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0x14D2544", Offset = "0x14D2544", VA = "0x14D2544")]
	public void Start(GameObject sub, Vector3 mag, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0x14D27DC", Offset = "0x14D27DC", VA = "0x14D27DC")]
	public void Start(GameObject sub, Vector3 begin, Vector3 mag, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0x14D29B8", Offset = "0x14D29B8", VA = "0x14D29B8")]
	public PunchScale()
	{
	}
}
[Token(Token = "0x20000F3")]
public class PunchRotation : EZAnimation
{
	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Vector3 start;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected Vector3 magnitude;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected GameObject subject;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected Transform subTrans;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected Vector3 temp;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	protected float factor;

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x14D18EC", Offset = "0x14D18EC", VA = "0x14D18EC", Slot = "14")]
	public override object GetSubject()
	{
		return null;
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0x14D18F4", Offset = "0x14D18F4", VA = "0x14D18F4", Slot = "12")]
	public override void _end()
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0x14D19B8", Offset = "0x14D19B8", VA = "0x14D19B8", Slot = "15")]
	protected override void WaitDone()
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0x14D1A54", Offset = "0x14D1A54", VA = "0x14D1A54", Slot = "9")]
	protected override void DoAnim()
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0x14D1BA0", Offset = "0x14D1BA0", VA = "0x14D1BA0")]
	public static PunchRotation Do(GameObject sub, Vector3 mag, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x14D1DEC", Offset = "0x14D1DEC", VA = "0x14D1DEC", Slot = "8")]
	public override bool Start(GameObject sub, AnimParams parms)
	{
		return default(bool);
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x14D1CD0", Offset = "0x14D1CD0", VA = "0x14D1CD0")]
	public void Start(GameObject sub, Vector3 mag, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x14D1F68", Offset = "0x14D1F68", VA = "0x14D1F68")]
	public void Start(GameObject sub, Vector3 begin, Vector3 mag, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x14D2144", Offset = "0x14D2144", VA = "0x14D2144")]
	public PunchRotation()
	{
	}
}
[Token(Token = "0x20000F4")]
public class Crash : EZAnimation
{
	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Vector3 start;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected Vector3 magnitude;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected GameObject subject;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected Transform subTrans;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected Vector3 tempMag;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	protected Vector3 temp;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected float factor;

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x151E98C", Offset = "0x151E98C", VA = "0x151E98C", Slot = "14")]
	public override object GetSubject()
	{
		return null;
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x151E994", Offset = "0x151E994", VA = "0x151E994", Slot = "12")]
	public override void _end()
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x151EA8C", Offset = "0x151EA8C", VA = "0x151EA8C", Slot = "15")]
	protected override void WaitDone()
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x151EB20", Offset = "0x151EB20", VA = "0x151EB20", Slot = "9")]
	protected override void DoAnim()
	{
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x151ECAC", Offset = "0x151ECAC", VA = "0x151ECAC")]
	public static Crash Do(GameObject sub, Vector3 mag, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x151F1EC", Offset = "0x151F1EC", VA = "0x151F1EC", Slot = "8")]
	public override bool Start(GameObject sub, AnimParams parms)
	{
		return default(bool);
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x151F0D0", Offset = "0x151F0D0", VA = "0x151F0D0")]
	public void Start(GameObject sub, Vector3 mag, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x151F368", Offset = "0x151F368", VA = "0x151F368")]
	public void Start(GameObject sub, Vector3 begin, Vector3 mag, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x151F838", Offset = "0x151F838", VA = "0x151F838")]
	public Crash()
	{
	}
}
[Token(Token = "0x20000F5")]
public class SmoothCrash : EZAnimation
{
	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Vector3 start;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected Vector3 magnitude;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected Vector3 oscillations;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected GameObject subject;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected Transform subTrans;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected Vector3 temp;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	protected float factor;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected float invFactor;

	[Token(Token = "0x400066B")]
	protected const float PIx2 = (float)Math.PI * 2f;

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x1A2F5EC", Offset = "0x1A2F5EC", VA = "0x1A2F5EC", Slot = "14")]
	public override object GetSubject()
	{
		return null;
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x1A2F5F4", Offset = "0x1A2F5F4", VA = "0x1A2F5F4", Slot = "12")]
	public override void _end()
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x1A2F6B8", Offset = "0x1A2F6B8", VA = "0x1A2F6B8", Slot = "15")]
	protected override void WaitDone()
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x1A2F754", Offset = "0x1A2F754", VA = "0x1A2F754", Slot = "9")]
	protected override void DoAnim()
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x1A2F8C4", Offset = "0x1A2F8C4", VA = "0x1A2F8C4")]
	public static SmoothCrash Do(GameObject sub, Vector3 mag, Vector3 oscill, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0x1A2FB38", Offset = "0x1A2FB38", VA = "0x1A2FB38", Slot = "8")]
	public override bool Start(GameObject sub, AnimParams parms)
	{
		return default(bool);
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x1A2FA14", Offset = "0x1A2FA14", VA = "0x1A2FA14")]
	public void Start(GameObject sub, Vector3 mag, Vector3 oscill, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x1A2FCD4", Offset = "0x1A2FCD4", VA = "0x1A2FCD4")]
	public void Start(GameObject sub, Vector3 begin, Vector3 mag, Vector3 oscill, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x1A2FF38", Offset = "0x1A2FF38", VA = "0x1A2FF38")]
	public SmoothCrash()
	{
	}
}
[Token(Token = "0x20000F6")]
public class Shake : EZAnimation
{
	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Vector3 start;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected Vector3 magnitude;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected float oscillations;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected GameObject subject;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected Transform subTrans;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected Vector3 temp;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	protected float factor;

	[Token(Token = "0x4000673")]
	protected const float PIx2 = (float)Math.PI * 2f;

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x1A2C5B8", Offset = "0x1A2C5B8", VA = "0x1A2C5B8", Slot = "14")]
	public override object GetSubject()
	{
		return null;
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x1A2C5C0", Offset = "0x1A2C5C0", VA = "0x1A2C5C0", Slot = "12")]
	public override void _end()
	{
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x1A2C684", Offset = "0x1A2C684", VA = "0x1A2C684", Slot = "15")]
	protected override void WaitDone()
	{
	}

	[Token(Token = "0x60008CC")]
	[Address(RVA = "0x1A2C720", Offset = "0x1A2C720", VA = "0x1A2C720", Slot = "9")]
	protected override void DoAnim()
	{
	}

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0x1A2C838", Offset = "0x1A2C838", VA = "0x1A2C838")]
	public static Shake Do(GameObject sub, Vector3 mag, float oscill, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x1A2CA80", Offset = "0x1A2CA80", VA = "0x1A2CA80", Slot = "8")]
	public override bool Start(GameObject sub, AnimParams parms)
	{
		return default(bool);
	}

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0x1A2C970", Offset = "0x1A2C970", VA = "0x1A2C970")]
	public void Start(GameObject sub, Vector3 mag, float oscill, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0x1A2CC0C", Offset = "0x1A2CC0C", VA = "0x1A2CC0C")]
	public void Start(GameObject sub, Vector3 begin, Vector3 mag, float oscill, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0x1A2CE0C", Offset = "0x1A2CE0C", VA = "0x1A2CE0C")]
	public Shake()
	{
	}
}
[Token(Token = "0x20000F7")]
public class CrashRotation : EZAnimation
{
	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Vector3 start;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected Vector3 magnitude;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected Vector3 oscillations;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected GameObject subject;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected Transform subTrans;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected Vector3 temp;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	protected float factor;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected float invFactor;

	[Token(Token = "0x400067C")]
	protected const float PIx2 = (float)Math.PI * 2f;

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0x151F890", Offset = "0x151F890", VA = "0x151F890", Slot = "14")]
	public override object GetSubject()
	{
		return null;
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0x151F898", Offset = "0x151F898", VA = "0x151F898", Slot = "12")]
	public override void _end()
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0x151F974", Offset = "0x151F974", VA = "0x151F974", Slot = "15")]
	protected override void WaitDone()
	{
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0x151FA04", Offset = "0x151FA04", VA = "0x151FA04", Slot = "9")]
	protected override void DoAnim()
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0x151FB9C", Offset = "0x151FB9C", VA = "0x151FB9C")]
	public static CrashRotation Do(GameObject sub, Vector3 mag, Vector3 oscill, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0x151FE08", Offset = "0x151FE08", VA = "0x151FE08", Slot = "8")]
	public override bool Start(GameObject sub, AnimParams parms)
	{
		return default(bool);
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0x151FCE4", Offset = "0x151FCE4", VA = "0x151FCE4")]
	public void Start(GameObject sub, Vector3 mag, Vector3 oscill, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0x151FFA4", Offset = "0x151FFA4", VA = "0x151FFA4")]
	public void Start(GameObject sub, Vector3 begin, Vector3 mag, Vector3 oscill, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0x15201EC", Offset = "0x15201EC", VA = "0x15201EC")]
	public CrashRotation()
	{
	}
}
[Token(Token = "0x20000F8")]
public class ShakeRotation : EZAnimation
{
	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Vector3 start;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	protected Vector3 magnitude;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected float oscillations;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected GameObject subject;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected Transform subTrans;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected Vector3 temp;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	protected float factor;

	[Token(Token = "0x4000684")]
	protected const float PIx2 = (float)Math.PI * 2f;

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0x1A2CE3C", Offset = "0x1A2CE3C", VA = "0x1A2CE3C", Slot = "14")]
	public override object GetSubject()
	{
		return null;
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x1A2CE44", Offset = "0x1A2CE44", VA = "0x1A2CE44", Slot = "12")]
	public override void _end()
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x1A2CF08", Offset = "0x1A2CF08", VA = "0x1A2CF08", Slot = "15")]
	protected override void WaitDone()
	{
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0x1A2CFA4", Offset = "0x1A2CFA4", VA = "0x1A2CFA4", Slot = "9")]
	protected override void DoAnim()
	{
	}

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0x1A2D0C8", Offset = "0x1A2D0C8", VA = "0x1A2D0C8")]
	public static ShakeRotation Do(GameObject sub, Vector3 mag, float oscill, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0x1A2D310", Offset = "0x1A2D310", VA = "0x1A2D310", Slot = "8")]
	public override bool Start(GameObject sub, AnimParams parms)
	{
		return default(bool);
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0x1A2D200", Offset = "0x1A2D200", VA = "0x1A2D200")]
	public void Start(GameObject sub, Vector3 mag, float oscill, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0x1A2D49C", Offset = "0x1A2D49C", VA = "0x1A2D49C")]
	public void Start(GameObject sub, Vector3 begin, Vector3 mag, float oscill, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0x1A2D62C", Offset = "0x1A2D62C", VA = "0x1A2D62C")]
	public ShakeRotation()
	{
	}
}
[Token(Token = "0x20000F9")]
public class RunAnimClip : EZAnimation
{
	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected GameObject subject;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected string m_clip;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected bool waitForClip;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	protected bool playedYet;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	protected float blending;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected Animation subAnim;

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0x1A2B330", Offset = "0x1A2B330", VA = "0x1A2B330", Slot = "14")]
	public override object GetSubject()
	{
		return null;
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0x1A2B338", Offset = "0x1A2B338", VA = "0x1A2B338", Slot = "10")]
	public override bool Step(float timeDelta)
	{
		return default(bool);
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0x1A2B404", Offset = "0x1A2B404", VA = "0x1A2B404", Slot = "9")]
	protected override void DoAnim()
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0x1A2B408", Offset = "0x1A2B408", VA = "0x1A2B408")]
	public static RunAnimClip Do(GameObject sub, string clip, float blend, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0x1A2B708", Offset = "0x1A2B708", VA = "0x1A2B708", Slot = "8")]
	public override bool Start(GameObject sub, AnimParams parms)
	{
		return default(bool);
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0x1A2B530", Offset = "0x1A2B530", VA = "0x1A2B530")]
	public void Start(GameObject sub, string clip, float blend, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0x1A2B89C", Offset = "0x1A2B89C", VA = "0x1A2B89C")]
	public RunAnimClip()
	{
	}
}
[Token(Token = "0x20000FA")]
public class FadeAudio : EZAnimation
{
	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected float start;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected AudioSource subject;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected float delta;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	protected float end;

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0x152DEFC", Offset = "0x152DEFC", VA = "0x152DEFC", Slot = "14")]
	public override object GetSubject()
	{
		return null;
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0x152DF04", Offset = "0x152DF04", VA = "0x152DF04", Slot = "12")]
	public override void _end()
	{
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0x152DFB0", Offset = "0x152DFB0", VA = "0x152DFB0", Slot = "13")]
	protected override void LoopReset()
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0x152DFD8", Offset = "0x152DFD8", VA = "0x152DFD8", Slot = "15")]
	protected override void WaitDone()
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0x152E07C", Offset = "0x152E07C", VA = "0x152E07C", Slot = "9")]
	protected override void DoAnim()
	{
	}

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0x152E150", Offset = "0x152E150", VA = "0x152E150")]
	public static FadeAudio Do(AudioSource audio, ANIM_MODE mode, float begin, float dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0x152E3C8", Offset = "0x152E3C8", VA = "0x152E3C8")]
	public static FadeAudio Do(AudioSource audio, ANIM_MODE mode, float dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0x152E584", Offset = "0x152E584", VA = "0x152E584", Slot = "8")]
	public override bool Start(GameObject sub, AnimParams parms)
	{
		return default(bool);
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0x152E4F0", Offset = "0x152E4F0", VA = "0x152E4F0")]
	public void Start(AudioSource audio, ANIM_MODE mode, float dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0x152E280", Offset = "0x152E280", VA = "0x152E280")]
	public void Start(AudioSource sub, ANIM_MODE mode, float begin, float dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0x152428C", Offset = "0x152428C", VA = "0x152428C")]
	public FadeAudio()
	{
	}
}
[Token(Token = "0x20000FB")]
public class TuneAudio : EZAnimation
{
	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected float start;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected AudioSource subject;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected float delta;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	protected float end;

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0x198F494", Offset = "0x198F494", VA = "0x198F494", Slot = "14")]
	public override object GetSubject()
	{
		return null;
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0x198F49C", Offset = "0x198F49C", VA = "0x198F49C", Slot = "12")]
	public override void _end()
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0x198F530", Offset = "0x198F530", VA = "0x198F530", Slot = "13")]
	protected override void LoopReset()
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0x198F558", Offset = "0x198F558", VA = "0x198F558", Slot = "15")]
	protected override void WaitDone()
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0x198F608", Offset = "0x198F608", VA = "0x198F608", Slot = "9")]
	protected override void DoAnim()
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0x198F6C4", Offset = "0x198F6C4", VA = "0x198F6C4")]
	public static TuneAudio Do(AudioSource audio, ANIM_MODE mode, float begin, float dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0x198F950", Offset = "0x198F950", VA = "0x198F950")]
	public static TuneAudio Do(AudioSource audio, ANIM_MODE mode, float dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
		return null;
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0x198FB14", Offset = "0x198FB14", VA = "0x198FB14", Slot = "8")]
	public override bool Start(GameObject sub, AnimParams parms)
	{
		return default(bool);
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0x198FA80", Offset = "0x198FA80", VA = "0x198FA80")]
	public void Start(AudioSource audio, ANIM_MODE mode, float dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0x198F7FC", Offset = "0x198F7FC", VA = "0x198F7FC")]
	public void Start(AudioSource sub, ANIM_MODE mode, float begin, float dest, Interpolator interp, float dur, float delay, CompletionDelegate startDel, CompletionDelegate del)
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0x198FDE0", Offset = "0x198FDE0", VA = "0x198FDE0")]
	public TuneAudio()
	{
	}
}
[Serializable]
[Token(Token = "0x20000FC")]
public class AnimParams
{
	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public EZAnimation.ANIM_MODE mode;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float delay;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float duration;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool pingPong;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool restartOnRepeat;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool repeatDelay;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EZAnimation.EASING_TYPE easing;

	[NonSerialized]
	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected EZTransition m_transition;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color color;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color color2;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3 vec;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Vector3 vec2;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3 axis;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float floatVal;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float floatVal2;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public string strVal;

	[Token(Token = "0x1700016D")]
	public EZTransition transition
	{
		[Token(Token = "0x6000903")]
		[Address(RVA = "0x1AAE400", Offset = "0x1AAE400", VA = "0x1AAE400")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000904")]
		[Address(RVA = "0x1AAE408", Offset = "0x1AAE408", VA = "0x1AAE408")]
		set
		{
		}
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0x1AAE290", Offset = "0x1AAE290", VA = "0x1AAE290")]
	public AnimParams(EZTransition trans)
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0x1AAE330", Offset = "0x1AAE330", VA = "0x1AAE330")]
	public void Copy(AnimParams src)
	{
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0x1AAE410", Offset = "0x1AAE410", VA = "0x1AAE410", Slot = "4")]
	public virtual void DrawGUI(EZAnimation.ANIM_TYPE type, GameObject go, IGUIHelper gui, bool inspector)
	{
	}
}
[Serializable]
[Token(Token = "0x20000FD")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x76925C", Offset = "0x76925C")]
public class EZScreenPlacement : MonoBehaviour, IUseCamera
{
	[Token(Token = "0x20001B2")]
	public enum HORIZONTAL_ALIGN
	{
		[Token(Token = "0x4000A60")]
		NONE,
		[Token(Token = "0x4000A61")]
		SCREEN_LEFT,
		[Token(Token = "0x4000A62")]
		SCREEN_RIGHT,
		[Token(Token = "0x4000A63")]
		SCREEN_CENTER,
		[Token(Token = "0x4000A64")]
		OBJECT
	}

	[Token(Token = "0x20001B3")]
	public enum VERTICAL_ALIGN
	{
		[Token(Token = "0x4000A66")]
		NONE,
		[Token(Token = "0x4000A67")]
		SCREEN_TOP,
		[Token(Token = "0x4000A68")]
		SCREEN_BOTTOM,
		[Token(Token = "0x4000A69")]
		SCREEN_CENTER,
		[Token(Token = "0x4000A6A")]
		OBJECT
	}

	[Serializable]
	[Token(Token = "0x20001B4")]
	public class RelativeTo
	{
		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HORIZONTAL_ALIGN horizontal;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public VERTICAL_ALIGN vertical;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected EZScreenPlacement script;

		[Token(Token = "0x1700022D")]
		public EZScreenPlacement Script
		{
			[Token(Token = "0x6000F54")]
			[Address(RVA = "0x173A4B0", Offset = "0x173A4B0", VA = "0x173A4B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F55")]
			[Address(RVA = "0x173A4B8", Offset = "0x173A4B8", VA = "0x173A4B8")]
			set
			{
			}
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0x173A4BC", Offset = "0x173A4BC", VA = "0x173A4BC")]
		public bool Equals(RelativeTo rt)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0x173A4EC", Offset = "0x173A4EC", VA = "0x173A4EC")]
		public void Copy(RelativeTo rt)
		{
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0x173A504", Offset = "0x173A504", VA = "0x173A504")]
		public RelativeTo(EZScreenPlacement sp, RelativeTo rt)
		{
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0x173A564", Offset = "0x173A564", VA = "0x173A564")]
		public RelativeTo(EZScreenPlacement sp)
		{
		}
	}

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera renderCamera;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 screenPos;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool ignoreZ;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RelativeTo relativeTo;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform relativeObject;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool alwaysRecursive;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool allowTransformDrag;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected Vector2 viewportPixels;

	[NonSerialized]
	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected bool justEnabled;

	[NonSerialized]
	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected EZScreenPlacementMirror mirror;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected bool m_awake;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	protected bool m_started;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public EZScreenPlacement[] dependents;

	[Token(Token = "0x1700016E")]
	public Camera RenderCamera
	{
		[Token(Token = "0x600090F")]
		[Address(RVA = "0x1527D2C", Offset = "0x1527D2C", VA = "0x1527D2C", Slot = "6")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000910")]
		[Address(RVA = "0x1527D34", Offset = "0x1527D34", VA = "0x1527D34", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x1700016F")]
	public Vector3 ScreenCoord
	{
		[Token(Token = "0x6000915")]
		[Address(RVA = "0x1528118", Offset = "0x1528118", VA = "0x1528118")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0x15271EC", Offset = "0x15271EC", VA = "0x15271EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0x1527474", Offset = "0x1527474", VA = "0x1527474")]
	public void Start()
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0x1527540", Offset = "0x1527540", VA = "0x1527540")]
	public void PositionOnScreenRecursively()
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0x1527864", Offset = "0x1527864", VA = "0x1527864")]
	public Vector3 ScreenPosToLocalPos(Vector3 screenPos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0x1527CA8", Offset = "0x1527CA8", VA = "0x1527CA8")]
	public Vector3 ScreenPosToParentPos(Vector3 screenPos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0x15278CC", Offset = "0x15278CC", VA = "0x15278CC")]
	public Vector3 ScreenPosToWorldPos(Vector3 screenPos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0x15276C0", Offset = "0x15276C0", VA = "0x15276C0")]
	public void PositionOnScreen()
	{
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0x1527D0C", Offset = "0x1527D0C", VA = "0x1527D0C")]
	public void PositionOnScreen(int x, int y, float depth)
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0x1527D20", Offset = "0x1527D20", VA = "0x1527D20")]
	public void PositionOnScreen(Vector3 pos)
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0x1527E58", Offset = "0x1527E58", VA = "0x1527E58")]
	public void UpdateCamera()
	{
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0x1527E60", Offset = "0x1527E60", VA = "0x1527E60", Slot = "4")]
	public void SetCamera()
	{
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0x1527D38", Offset = "0x1527D38", VA = "0x1527D38", Slot = "5")]
	public void SetCamera(Camera c)
	{
	}

	[Token(Token = "0x6000914")]
	[Address(RVA = "0x1527E68", Offset = "0x1527E68", VA = "0x1527E68")]
	public void WorldToScreenPos(Vector3 worldPos)
	{
	}

	[Token(Token = "0x6000916")]
	[Address(RVA = "0x1528158", Offset = "0x1528158", VA = "0x1528158")]
	public static bool TestDepenency(EZScreenPlacement sp)
	{
		return default(bool);
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0x152842C", Offset = "0x152842C", VA = "0x152842C", Slot = "8")]
	public virtual void DoMirror()
	{
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0x15285A4", Offset = "0x15285A4", VA = "0x15285A4", Slot = "9")]
	public virtual void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000919")]
	[Address(RVA = "0x15285B0", Offset = "0x15285B0", VA = "0x15285B0", Slot = "10")]
	public virtual void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0x15285BC", Offset = "0x15285BC", VA = "0x15285BC")]
	public EZScreenPlacement()
	{
	}
}
[Token(Token = "0x20000FE")]
public class EZScreenPlacementMirror
{
	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 worldPos;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 screenPos;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public EZScreenPlacement.RelativeTo relativeTo;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform relativeObject;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Camera renderCamera;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector2 screenSize;

	[Token(Token = "0x600091B")]
	[Address(RVA = "0x1528530", Offset = "0x1528530", VA = "0x1528530")]
	public EZScreenPlacementMirror()
	{
	}

	[Token(Token = "0x600091C")]
	[Address(RVA = "0x1528674", Offset = "0x1528674", VA = "0x1528674", Slot = "4")]
	public virtual void Mirror(EZScreenPlacement sp)
	{
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0x1528740", Offset = "0x1528740", VA = "0x1528740", Slot = "5")]
	public virtual bool Validate(EZScreenPlacement sp)
	{
		return default(bool);
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0x1528A1C", Offset = "0x1528A1C", VA = "0x1528A1C", Slot = "6")]
	public virtual bool DidChange(EZScreenPlacement sp)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000FF")]
public static class FontStore
{
	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SpriteFont[] fonts;

	[Token(Token = "0x600091F")]
	[Address(RVA = "0x1532558", Offset = "0x1532558", VA = "0x1532558")]
	public static SpriteFont GetFont(TextAsset fontDef)
	{
		return null;
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0x15327D4", Offset = "0x15327D4", VA = "0x15327D4")]
	private static void AddFont(SpriteFont f)
	{
	}
}
[Token(Token = "0x2000100")]
public delegate UnityEngine.Object LoadAssetDelegate(string path, Type type);
[Token(Token = "0x2000101")]
public delegate string PathFromGUIDDelegate(string path);
[Token(Token = "0x2000102")]
public delegate string GUIDFromPathDelegate(string guid);
[Token(Token = "0x2000103")]
public delegate string GetAssetPathDelegate(UnityEngine.Object asset);
[Token(Token = "0x2000104")]
public interface ISpriteAggregator
{
	[Token(Token = "0x17000170")]
	Texture2D[] SourceTextures
	{
		[Token(Token = "0x6000933")]
		get;
	}

	[Token(Token = "0x17000171")]
	CSpriteFrame[] SpriteFrames
	{
		[Token(Token = "0x6000934")]
		get;
	}

	[Token(Token = "0x17000172")]
	CSpriteFrame DefaultFrame
	{
		[Token(Token = "0x6000936")]
		get;
	}

	[Token(Token = "0x17000173")]
	GameObject gameObject
	{
		[Token(Token = "0x6000938")]
		get;
	}

	[Token(Token = "0x17000174")]
	bool DoNotTrimImages
	{
		[Token(Token = "0x6000939")]
		get;
	}

	[Token(Token = "0x6000932")]
	void Aggregate(PathFromGUIDDelegate guid2Path, LoadAssetDelegate load, GUIDFromPathDelegate path2Guid);

	[Token(Token = "0x6000935")]
	Material GetPackedMaterial(out string errString);

	[Token(Token = "0x6000937")]
	void SetUVs(Rect uvs);
}
[Token(Token = "0x2000105")]
public interface ISpriteAnimatable
{
	[Token(Token = "0x17000175")]
	ISpriteAnimatable prev
	{
		[Token(Token = "0x600093B")]
		get;
		[Token(Token = "0x600093C")]
		set;
	}

	[Token(Token = "0x17000176")]
	ISpriteAnimatable next
	{
		[Token(Token = "0x600093D")]
		get;
		[Token(Token = "0x600093E")]
		set;
	}

	[Token(Token = "0x600093A")]
	bool StepAnim(float time);
}
[Token(Token = "0x2000106")]
public interface ISpriteMesh
{
	[Token(Token = "0x17000177")]
	SpriteRoot sprite
	{
		[Token(Token = "0x600093F")]
		get;
		[Token(Token = "0x6000940")]
		set;
	}

	[Token(Token = "0x17000178")]
	Texture texture
	{
		[Token(Token = "0x6000941")]
		get;
	}

	[Token(Token = "0x17000179")]
	Material material
	{
		[Token(Token = "0x6000942")]
		get;
	}

	[Token(Token = "0x1700017A")]
	Vector3[] vertices
	{
		[Token(Token = "0x6000943")]
		get;
	}

	[Token(Token = "0x1700017B")]
	Vector2[] uvs
	{
		[Token(Token = "0x6000944")]
		get;
	}

	[Token(Token = "0x1700017C")]
	Vector2[] uvs2
	{
		[Token(Token = "0x6000945")]
		get;
	}

	[Token(Token = "0x1700017D")]
	bool UseUV2
	{
		[Token(Token = "0x6000946")]
		get;
		[Token(Token = "0x6000947")]
		set;
	}

	[Token(Token = "0x6000948")]
	void Init();

	[Token(Token = "0x6000949")]
	void UpdateVerts();

	[Token(Token = "0x600094A")]
	void UpdateUVs();

	[Token(Token = "0x600094B")]
	void UpdateColors(Color color);

	[Token(Token = "0x600094C")]
	void Hide(bool tf);

	[Token(Token = "0x600094D")]
	bool IsHidden();
}
[Token(Token = "0x2000107")]
public interface ISpritePackable
{
	[Token(Token = "0x1700017E")]
	GameObject gameObject
	{
		[Token(Token = "0x600094E")]
		get;
	}

	[Token(Token = "0x1700017F")]
	TextureAnim[] States
	{
		[Token(Token = "0x600094F")]
		get;
		[Token(Token = "0x6000950")]
		set;
	}

	[Token(Token = "0x17000180")]
	SpriteRoot.ANCHOR_METHOD Anchor
	{
		[Token(Token = "0x6000951")]
		get;
	}

	[Token(Token = "0x17000181")]
	Color Color
	{
		[Token(Token = "0x6000952")]
		get;
		[Token(Token = "0x6000953")]
		set;
	}

	[Token(Token = "0x17000182")]
	bool SupportsArbitraryAnimations
	{
		[Token(Token = "0x6000954")]
		get;
	}
}
[Token(Token = "0x2000108")]
public interface IUseCamera
{
	[Token(Token = "0x17000183")]
	Camera RenderCamera
	{
		[Token(Token = "0x6000957")]
		get;
		[Token(Token = "0x6000958")]
		set;
	}

	[Token(Token = "0x6000955")]
	void SetCamera();

	[Token(Token = "0x6000956")]
	void SetCamera(Camera c);
}
[Token(Token = "0x2000109")]
public abstract class PackableStub : MonoBehaviour
{
	[Token(Token = "0x17000184")]
	public abstract Texture2D[] SourceTextures
	{
		[Token(Token = "0x600095A")]
		get;
	}

	[Token(Token = "0x17000185")]
	public abstract CSpriteFrame[] SpriteFrames
	{
		[Token(Token = "0x600095B")]
		get;
	}

	[Token(Token = "0x17000186")]
	public abstract CSpriteFrame DefaultFrame
	{
		[Token(Token = "0x600095D")]
		get;
	}

	[Token(Token = "0x17000187")]
	public abstract bool DoNotTrimImages
	{
		[Token(Token = "0x600095F")]
		get;
		[Token(Token = "0x6000960")]
		set;
	}

	[Token(Token = "0x6000959")]
	public abstract void Aggregate(PathFromGUIDDelegate guid2Path, LoadAssetDelegate load, GUIDFromPathDelegate path2Guid);

	[Token(Token = "0x600095C")]
	public abstract Material GetPackedMaterial(out string errString);

	[Token(Token = "0x600095E")]
	public abstract void SetUVs(Rect uvs);

	[Token(Token = "0x6000961")]
	[Address(RVA = "0x14C6078", Offset = "0x14C6078", VA = "0x14C6078")]
	protected PackableStub()
	{
	}
}
[Token(Token = "0x200010A")]
public class SpriteAnimationPump : MonoBehaviour
{
	[Token(Token = "0x20001B5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769758", Offset = "0x769758")]
	private sealed class <PumpStarter>d__21 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpriteAnimationPump <>4__this;

		[Token(Token = "0x1700022E")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F5D")]
			[Address(RVA = "0x1BAC4F4", Offset = "0x1BAC4F4", VA = "0x1BAC4F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700022F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F5F")]
			[Address(RVA = "0x1BAC53C", Offset = "0x1BAC53C", VA = "0x1BAC53C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0x1BAC3E4", Offset = "0x1BAC3E4", VA = "0x1BAC3E4")]
		[DebuggerHidden]
		public <PumpStarter>d__21(int <>1__state)
		{
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0x1BAC410", Offset = "0x1BAC410", VA = "0x1BAC410", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0x1BAC414", Offset = "0x1BAC414", VA = "0x1BAC414", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0x1BAC4FC", Offset = "0x1BAC4FC", VA = "0x1BAC4FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001B6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769768", Offset = "0x769768")]
	private sealed class <AnimationPump>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x17000230")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F63")]
			[Address(RVA = "0x1BAC394", Offset = "0x1BAC394", VA = "0x1BAC394", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000231")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F65")]
			[Address(RVA = "0x1BAC3DC", Offset = "0x1BAC3DC", VA = "0x1BAC3DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0x1BABF70", Offset = "0x1BABF70", VA = "0x1BABF70")]
		[DebuggerHidden]
		public <AnimationPump>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0x1BABF9C", Offset = "0x1BABF9C", VA = "0x1BABF9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0x1BABFA0", Offset = "0x1BABFA0", VA = "0x1BABFA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0x1BAC39C", Offset = "0x1BAC39C", VA = "0x1BAC39C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static SpriteAnimationPump instance;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	protected static ISpriteAnimatable head;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected static ISpriteAnimatable cur;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static float _timeScale;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static float startTime;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static float time;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static float elapsed;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static float timePaused;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private static bool isPaused;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static ISpriteAnimatable next;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected static bool pumpIsRunning;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	protected static bool pumpIsDone;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public static float animationPumpInterval;

	[Token(Token = "0x17000188")]
	public bool IsRunning
	{
		[Token(Token = "0x6000962")]
		[Address(RVA = "0x1A30D54", Offset = "0x1A30D54", VA = "0x1A30D54")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000189")]
	public static float timeScale
	{
		[Token(Token = "0x6000963")]
		[Address(RVA = "0x1A30DB8", Offset = "0x1A30DB8", VA = "0x1A30DB8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000964")]
		[Address(RVA = "0x1A30E1C", Offset = "0x1A30E1C", VA = "0x1A30E1C")]
		set
		{
		}
	}

	[Token(Token = "0x1700018A")]
	public static SpriteAnimationPump Instance
	{
		[Token(Token = "0x600096B")]
		[Address(RVA = "0x1A311F0", Offset = "0x1A311F0", VA = "0x1A311F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0x1A30EA0", Offset = "0x1A30EA0", VA = "0x1A30EA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0x1A30F34", Offset = "0x1A30F34", VA = "0x1A30F34")]
	private void OnApplicationPause(bool paused)
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0x1A31064", Offset = "0x1A31064", VA = "0x1A31064")]
	public void StartAnimationPump()
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0x1A31118", Offset = "0x1A31118", VA = "0x1A31118")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76AD48", Offset = "0x76AD48")]
	protected IEnumerator PumpStarter()
	{
		return null;
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0x1A31190", Offset = "0x1A31190", VA = "0x1A31190")]
	public static void StopAnimationPump()
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0x1A31194", Offset = "0x1A31194", VA = "0x1A31194")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76ADA8", Offset = "0x76ADA8")]
	protected static IEnumerator AnimationPump()
	{
		return null;
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0x1A313D4", Offset = "0x1A313D4", VA = "0x1A313D4")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0x1A31478", Offset = "0x1A31478", VA = "0x1A31478")]
	public static void Add(ISpriteAnimatable s)
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0x1A31668", Offset = "0x1A31668", VA = "0x1A31668")]
	public static void Remove(ISpriteAnimatable s)
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0x1A31C40", Offset = "0x1A31C40", VA = "0x1A31C40")]
	public SpriteAnimationPump()
	{
	}
}
[Serializable]
[Token(Token = "0x200010B")]
public class UVAnimation
{
	[Token(Token = "0x20001B7")]
	public enum ANIM_END_ACTION
	{
		[Token(Token = "0x4000A74")]
		Do_Nothing,
		[Token(Token = "0x4000A75")]
		Revert_To_Static,
		[Token(Token = "0x4000A76")]
		Play_Default_Anim,
		[Token(Token = "0x4000A77")]
		Hide,
		[Token(Token = "0x4000A78")]
		Deactivate,
		[Token(Token = "0x4000A79")]
		Destroy
	}

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected SPRITE_FRAME[] frames;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected int curFrame;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected int stepDir;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected int numLoops;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	protected bool playInReverse;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected float length;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string name;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int loopCycles;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool loopReverse;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public float framerate;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public int index;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public ANIM_END_ACTION onAnimEnd;

	[Token(Token = "0x1700018B")]
	public int StepDirection
	{
		[Token(Token = "0x6000971")]
		[Address(RVA = "0x17358D4", Offset = "0x17358D4", VA = "0x17358D4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000972")]
		[Address(RVA = "0x17358DC", Offset = "0x17358DC", VA = "0x17358DC")]
		set
		{
		}
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0x1735924", Offset = "0x1735924", VA = "0x1735924")]
	public UVAnimation(UVAnimation anim)
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0x1735A88", Offset = "0x1735A88", VA = "0x1735A88")]
	public UVAnimation Clone()
	{
		return null;
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0x17298FC", Offset = "0x17298FC", VA = "0x17298FC")]
	public UVAnimation()
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0x1735AE4", Offset = "0x1735AE4", VA = "0x1735AE4")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0x1735AFC", Offset = "0x1735AFC", VA = "0x1735AFC")]
	public void PlayInReverse()
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0x1735900", Offset = "0x1735900", VA = "0x1735900")]
	public void SetStepDir(int dir)
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0x1735B30", Offset = "0x1735B30", VA = "0x1735B30")]
	public bool GetNextFrame(ref SPRITE_FRAME nextFrame)
	{
		return default(bool);
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0x1735C68", Offset = "0x1735C68", VA = "0x1735C68")]
	public SPRITE_FRAME GetCurrentFrame()
	{
		return default(SPRITE_FRAME);
	}

	[Token(Token = "0x600097B")]
	[Address(RVA = "0x1735CD4", Offset = "0x1735CD4", VA = "0x1735CD4")]
	public SPRITE_FRAME GetFrame(int frame)
	{
		return default(SPRITE_FRAME);
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x1735D20", Offset = "0x1735D20", VA = "0x1735D20")]
	public SPRITE_FRAME[] BuildUVAnim(Vector2 start, Vector2 cellSize, int cols, int rows, int totalCells)
	{
		return null;
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x173608C", Offset = "0x173608C", VA = "0x173608C")]
	public SPRITE_FRAME[] BuildWrappedUVAnim(Vector2 start, Vector2 cellSize, int cols, int rows, int totalCells)
	{
		return null;
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x1736094", Offset = "0x1736094", VA = "0x1736094")]
	public SPRITE_FRAME[] BuildWrappedUVAnim(Vector2 start, Vector2 cellSize, int totalCells)
	{
		return null;
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x1736364", Offset = "0x1736364", VA = "0x1736364")]
	public void SetAnim(SPRITE_FRAME[] anim)
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x1729664", Offset = "0x1729664", VA = "0x1729664")]
	public void SetAnim(TextureAnim anim, int idx)
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0x17363B8", Offset = "0x17363B8", VA = "0x17363B8")]
	public void AppendAnim(SPRITE_FRAME[] anim)
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x173648C", Offset = "0x173648C", VA = "0x173648C")]
	public void SetCurrentFrame(int f)
	{
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x17364D0", Offset = "0x17364D0", VA = "0x17364D0")]
	public void SetPosition(float pos)
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x17365EC", Offset = "0x17365EC", VA = "0x17365EC")]
	public void SetClipPosition(float pos)
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0x1735A54", Offset = "0x1735A54", VA = "0x1735A54")]
	protected void CalcLength()
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0x1736620", Offset = "0x1736620", VA = "0x1736620")]
	public float GetLength()
	{
		return default(float);
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0x1736628", Offset = "0x1736628", VA = "0x1736628")]
	public float GetDuration()
	{
		return default(float);
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0x173665C", Offset = "0x173665C", VA = "0x173665C")]
	public int GetFrameCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0x1736678", Offset = "0x1736678", VA = "0x1736678")]
	public int GetFramesDisplayed()
	{
		return default(int);
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0x17366B4", Offset = "0x17366B4", VA = "0x17366B4")]
	public int GetCurPosition()
	{
		return default(int);
	}
}
[Serializable]
[Token(Token = "0x200010C")]
public class UVAnimation_Auto : UVAnimation
{
	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector2 start;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector2 pixelsToNextColumnAndRow;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int cols;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int rows;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int totalCells;

	[Token(Token = "0x600098B")]
	[Address(RVA = "0x17366BC", Offset = "0x17366BC", VA = "0x17366BC")]
	public UVAnimation_Auto()
	{
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0x17366C0", Offset = "0x17366C0", VA = "0x17366C0")]
	public UVAnimation_Auto(UVAnimation_Auto anim)
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0x1736714", Offset = "0x1736714", VA = "0x1736714")]
	public new UVAnimation_Auto Clone()
	{
		return null;
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0x1736770", Offset = "0x1736770", VA = "0x1736770")]
	public SPRITE_FRAME[] BuildUVAnim(SpriteRoot s)
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x200010D")]
public class UVAnimation_Multi
{
	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int loopCycles;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool loopReverse;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float framerate;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public UVAnimation.ANIM_END_ACTION onAnimEnd;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UVAnimation_Auto[] clips;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public int index;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected int curClip;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected int stepDir;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected int numLoops;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected float duration;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected bool ret;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected int i;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected int framePos;

	[Token(Token = "0x1700018C")]
	public int StepDirection
	{
		[Token(Token = "0x6000993")]
		[Address(RVA = "0x1736BB4", Offset = "0x1736BB4", VA = "0x1736BB4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000994")]
		[Address(RVA = "0x1736BBC", Offset = "0x1736BBC", VA = "0x1736BBC")]
		set
		{
		}
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0x1736808", Offset = "0x1736808", VA = "0x1736808")]
	public UVAnimation_Multi()
	{
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0x173689C", Offset = "0x173689C", VA = "0x173689C")]
	public UVAnimation_Multi(UVAnimation_Multi anim)
	{
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0x1736B18", Offset = "0x1736B18", VA = "0x1736B18")]
	public UVAnimation_Multi Clone()
	{
		return null;
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0x1736B74", Offset = "0x1736B74", VA = "0x1736B74")]
	public UVAnimation_Auto GetCurrentClip()
	{
		return null;
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0x1736BC4", Offset = "0x1736BC4", VA = "0x1736BC4")]
	public UVAnimation_Auto[] BuildUVAnim(SpriteRoot s)
	{
		return null;
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0x1736C48", Offset = "0x1736C48", VA = "0x1736C48")]
	public bool GetNextFrame(ref SPRITE_FRAME nextFrame)
	{
		return default(bool);
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0x1736F08", Offset = "0x1736F08", VA = "0x1736F08")]
	public SPRITE_FRAME GetCurrentFrame()
	{
		return default(SPRITE_FRAME);
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0x1736F8C", Offset = "0x1736F8C", VA = "0x1736F8C")]
	public void AppendAnim(int index, SPRITE_FRAME[] anim)
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x1736FF4", Offset = "0x1736FF4", VA = "0x1736FF4")]
	public void AppendClip(UVAnimation clip)
	{
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0x1737158", Offset = "0x1737158", VA = "0x1737158")]
	public void PlayInReverse()
	{
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0x1737290", Offset = "0x1737290", VA = "0x1737290")]
	public void SetAnim(int index, SPRITE_FRAME[] frames)
	{
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0x17372F8", Offset = "0x17372F8", VA = "0x17372F8")]
	public void Reset()
	{
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x1737380", Offset = "0x1737380", VA = "0x1737380")]
	public void SetPosition(float pos)
	{
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0x17373FC", Offset = "0x17373FC", VA = "0x17373FC")]
	public void SetAnimPosition(float pos)
	{
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0x1736A44", Offset = "0x1736A44", VA = "0x1736A44")]
	protected void CalcDuration()
	{
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0x1737684", Offset = "0x1737684", VA = "0x1737684")]
	public float GetDuration()
	{
		return default(float);
	}

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0x1737214", Offset = "0x1737214", VA = "0x1737214")]
	public int GetFrameCount()
	{
		return default(int);
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0x173768C", Offset = "0x173768C", VA = "0x173768C")]
	public int GetCurPosition()
	{
		return default(int);
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0x1737694", Offset = "0x1737694", VA = "0x1737694")]
	public int GetCurClipNum()
	{
		return default(int);
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0x173769C", Offset = "0x173769C", VA = "0x173769C")]
	public void SetCurClipNum(int index)
	{
	}
}
[Token(Token = "0x200010E")]
[ExecuteInEditMode]
public abstract class SpriteBase : SpriteRoot, ISpriteAnimatable
{
	[Token(Token = "0x20001B8")]
	public delegate void AnimCompleteDelegate(SpriteBase sprite);

	[Token(Token = "0x20001B9")]
	public delegate void AnimFrameDelegate(SpriteBase sprite, int frame);

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public bool playAnimOnStart;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F9")]
	[HideInInspector]
	public bool crossfadeFrames;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	public int defaultAnim;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	protected int curAnimIndex;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	protected AnimCompleteDelegate animCompleteDelegate;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	protected AnimFrameDelegate animFrameDelegate;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	protected float timeSinceLastFrame;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
	protected float timeBetweenAnimFrames;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	protected float framesToAdvance;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
	protected bool animating;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x225")]
	protected bool currentlyAnimating;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	protected SPRITE_FRAME nextFrameInfo;

	[Token(Token = "0x1700018D")]
	public bool Animating
	{
		[Token(Token = "0x60009BE")]
		[Address(RVA = "0x1A325B8", Offset = "0x1A325B8", VA = "0x1A325B8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60009BF")]
		[Address(RVA = "0x1A325C0", Offset = "0x1A325C0", VA = "0x1A325C0")]
		set
		{
		}
	}

	[Token(Token = "0x1700018E")]
	public int CurAnimIndex
	{
		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x1A325DC", Offset = "0x1A325DC", VA = "0x1A325DC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60009C1")]
		[Address(RVA = "0x1A325E4", Offset = "0x1A325E4", VA = "0x1A325E4")]
		set
		{
		}
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0x1A31CD8", Offset = "0x1A31CD8", VA = "0x1A31CD8", Slot = "12")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0x1A31CDC", Offset = "0x1A31CDC", VA = "0x1A31CDC", Slot = "13")]
	public override void Start()
	{
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0x1A31DA8", Offset = "0x1A31DA8", VA = "0x1A31DA8", Slot = "15")]
	public override void Clear()
	{
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0x1A31DD4", Offset = "0x1A31DD4", VA = "0x1A31DD4", Slot = "18")]
	public override void Delete()
	{
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0x1A31F78", Offset = "0x1A31F78", VA = "0x1A31F78", Slot = "20")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0x1A32064", Offset = "0x1A32064", VA = "0x1A32064", Slot = "19")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0x1A321EC", Offset = "0x1A321EC", VA = "0x1A321EC", Slot = "16")]
	public override void Copy(SpriteRoot s)
	{
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0x1A32288", Offset = "0x1A32288", VA = "0x1A32288", Slot = "37")]
	public override void Hide(bool tf)
	{
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0x1A323BC", Offset = "0x1A323BC", VA = "0x1A323BC")]
	public void SetAnimCompleteDelegate(AnimCompleteDelegate del)
	{
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0x1A323CC", Offset = "0x1A323CC", VA = "0x1A323CC")]
	public void SetAnimFrameDelegate(AnimFrameDelegate del)
	{
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0x1A323DC", Offset = "0x1A323DC", VA = "0x1A323DC")]
	public void SetSpriteResizedDelegate(SpriteResizedDelegate del)
	{
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0x1A323EC", Offset = "0x1A323EC", VA = "0x1A323EC")]
	public void AddSpriteResizedDelegate(SpriteResizedDelegate del)
	{
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0x1A32478", Offset = "0x1A32478", VA = "0x1A32478")]
	public void RemoveSpriteresizedDelegate(SpriteResizedDelegate del)
	{
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0x1A32504", Offset = "0x1A32504", VA = "0x1A32504", Slot = "56")]
	public virtual bool StepAnim(float time)
	{
		return default(bool);
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0x1A3250C", Offset = "0x1A3250C", VA = "0x1A3250C", Slot = "57")]
	public virtual void PlayAnim(int index)
	{
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0x1A32510", Offset = "0x1A32510", VA = "0x1A32510", Slot = "58")]
	public virtual void PlayAnim(string name)
	{
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0x1A32514", Offset = "0x1A32514", VA = "0x1A32514", Slot = "59")]
	public virtual void PlayAnimInReverse(int index)
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x1A32518", Offset = "0x1A32518", VA = "0x1A32518", Slot = "60")]
	public virtual void PlayAnimInReverse(string name)
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x1A3251C", Offset = "0x1A3251C", VA = "0x1A3251C")]
	public void SetFramerate(float fps)
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x1A323A0", Offset = "0x1A323A0", VA = "0x1A323A0")]
	public void PauseAnim()
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x1A3252C", Offset = "0x1A3252C", VA = "0x1A3252C", Slot = "61")]
	public virtual void StopAnim()
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x1A32530", Offset = "0x1A32530", VA = "0x1A32530")]
	public void RevertToStatic()
	{
	}

	[Token(Token = "0x60009BB")]
	protected abstract void AddToAnimatedList();

	[Token(Token = "0x60009BC")]
	protected abstract void RemoveFromAnimatedList();

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x1A325B0", Offset = "0x1A325B0", VA = "0x1A325B0")]
	public bool IsAnimating()
	{
		return default(bool);
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x1A325EC", Offset = "0x1A325EC", VA = "0x1A325EC")]
	protected SpriteBase()
	{
	}
}
[Token(Token = "0x200010F")]
public class SpriteChar
{
	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int id;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Rect UVs;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float xOffset;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float yOffset;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float xAdvance;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Dictionary<int, float> kernings;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Dictionary<int, float> origKernings;

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0x1A32660", Offset = "0x1A32660", VA = "0x1A32660")]
	public float GetKerning(int prevChar)
	{
		return default(float);
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0x1A326DC", Offset = "0x1A326DC", VA = "0x1A326DC")]
	public SpriteChar()
	{
	}
}
[Token(Token = "0x2000110")]
public class SpriteFont
{
	[Token(Token = "0x20001BA")]
	protected delegate void ParserDel(string line);

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public TextAsset fontDef;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected Dictionary<int, int> charMap;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected SpriteChar[] chars;

	[Token(Token = "0x40006F9")]
	protected const float bleedCompensation = 0f;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Vector2 bleedCompUV;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Vector2 bleedCompUVMax;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected int lineHeight;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected int baseHeight;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected int texWidth;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	protected int texHeight;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected string face;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected int pxSize;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	protected float charSpacing;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int kerningsCount;

	[Token(Token = "0x1700018F")]
	public int LineHeight
	{
		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x1A32728", Offset = "0x1A32728", VA = "0x1A32728")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60009C6")]
		[Address(RVA = "0x1A32730", Offset = "0x1A32730", VA = "0x1A32730")]
		set
		{
		}
	}

	[Token(Token = "0x17000190")]
	public int BaseHeight
	{
		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x1A32738", Offset = "0x1A32738", VA = "0x1A32738")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000191")]
	public int PixelSize
	{
		[Token(Token = "0x60009C8")]
		[Address(RVA = "0x1A32740", Offset = "0x1A32740", VA = "0x1A32740")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000192")]
	public float CharacterSpacing
	{
		[Token(Token = "0x60009C9")]
		[Address(RVA = "0x1A32748", Offset = "0x1A32748", VA = "0x1A32748")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60009CA")]
		[Address(RVA = "0x1A32750", Offset = "0x1A32750", VA = "0x1A32750")]
		set
		{
		}
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x1A329AC", Offset = "0x1A329AC", VA = "0x1A329AC")]
	public SpriteFont(TextAsset def)
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x1A32A50", Offset = "0x1A32A50", VA = "0x1A32A50")]
	public void Load(TextAsset def)
	{
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x1A32E04", Offset = "0x1A32E04", VA = "0x1A32E04")]
	private int ParseSection(string tag, string[] lines, ParserDel parser, int pos)
	{
		return default(int);
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x1A33858", Offset = "0x1A33858", VA = "0x1A33858")]
	private int FindField(string label, string[] fields, int pos, bool logError)
	{
		return default(int);
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x1A33B00", Offset = "0x1A33B00", VA = "0x1A33B00")]
	private int FindField(string label, string[] fields, int pos)
	{
		return default(int);
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x1A33B08", Offset = "0x1A33B08", VA = "0x1A33B08")]
	private int FindFieldOptional(string label, string[] fields, int pos)
	{
		return default(int);
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x1A33B10", Offset = "0x1A33B10", VA = "0x1A33B10")]
	private void HeaderParser(string line)
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x1A33D08", Offset = "0x1A33D08", VA = "0x1A33D08")]
	private void CommonParser(string line)
	{
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x1A33FE0", Offset = "0x1A33FE0", VA = "0x1A33FE0")]
	private void CharCountParser(string line)
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x1A32ED0", Offset = "0x1A32ED0", VA = "0x1A32ED0")]
	private bool CharParser(string line, int charNum)
	{
		return default(bool);
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x1A3415C", Offset = "0x1A3415C", VA = "0x1A3415C")]
	private void KerningCountParser(string line)
	{
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x1A3351C", Offset = "0x1A3351C", VA = "0x1A3351C")]
	private bool KerningParser(string line)
	{
		return default(bool);
	}

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x1A34210", Offset = "0x1A34210", VA = "0x1A34210")]
	public SpriteChar GetSpriteChar(char ch)
	{
		return null;
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x1A342B8", Offset = "0x1A342B8", VA = "0x1A342B8")]
	public bool ContainsCharacter(char ch)
	{
		return default(bool);
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0x1A3431C", Offset = "0x1A3431C", VA = "0x1A3431C")]
	public float GetWidth(string str)
	{
		return default(float);
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0x1A34324", Offset = "0x1A34324", VA = "0x1A34324")]
	public float GetWidth(string str, float spacingCoef)
	{
		return default(float);
	}

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0x1A34430", Offset = "0x1A34430", VA = "0x1A34430")]
	public float GetWidth(string str, int start, int end)
	{
		return default(float);
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0x1A34438", Offset = "0x1A34438", VA = "0x1A34438")]
	public float GetWidth(string str, int start, int end, float spacingCoef)
	{
		return default(float);
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0x1A3456C", Offset = "0x1A3456C", VA = "0x1A3456C")]
	public float GetWidth(StringBuilder sb, int start, int end)
	{
		return default(float);
	}

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0x1A34574", Offset = "0x1A34574", VA = "0x1A34574")]
	public float GetWidth(StringBuilder sb, int start, int end, float spacingCoef)
	{
		return default(float);
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0x1A346C0", Offset = "0x1A346C0", VA = "0x1A346C0")]
	public float GetWidth(char prevChar, char c)
	{
		return default(float);
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0x1A34708", Offset = "0x1A34708", VA = "0x1A34708")]
	public float GetAdvance(char c)
	{
		return default(float);
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0x1A3472C", Offset = "0x1A3472C", VA = "0x1A3472C")]
	public string RemoveUnsupportedCharacters(string str)
	{
		return null;
	}
}
[Token(Token = "0x2000111")]
public class SpriteMesh : ISpriteMesh
{
	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected SpriteRoot m_sprite;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected MeshFilter meshFilter;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected MeshRenderer meshRenderer;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected Mesh m_mesh;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected Texture m_texture;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected Vector3[] m_vertices;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Color[] m_colors;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Vector2[] m_uvs;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected Vector2[] m_uvs2;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected int[] m_faces;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected bool m_useUV2;

	[Token(Token = "0x17000193")]
	public virtual SpriteRoot sprite
	{
		[Token(Token = "0x60009E2")]
		[Address(RVA = "0x1A38F30", Offset = "0x1A38F30", VA = "0x1A38F30", Slot = "19")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009E3")]
		[Address(RVA = "0x1A38F38", Offset = "0x1A38F38", VA = "0x1A38F38", Slot = "20")]
		set
		{
		}
	}

	[Token(Token = "0x17000194")]
	public virtual Texture texture
	{
		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x1A393DC", Offset = "0x1A393DC", VA = "0x1A393DC", Slot = "21")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000195")]
	public virtual Material material
	{
		[Token(Token = "0x60009E5")]
		[Address(RVA = "0x1A393E4", Offset = "0x1A393E4", VA = "0x1A393E4", Slot = "22")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009E6")]
		[Address(RVA = "0x1A39400", Offset = "0x1A39400", VA = "0x1A39400", Slot = "23")]
		set
		{
		}
	}

	[Token(Token = "0x17000196")]
	public virtual Vector3[] vertices
	{
		[Token(Token = "0x60009E7")]
		[Address(RVA = "0x1A395D8", Offset = "0x1A395D8", VA = "0x1A395D8", Slot = "24")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000197")]
	public virtual Vector2[] uvs
	{
		[Token(Token = "0x60009E8")]
		[Address(RVA = "0x1A395E0", Offset = "0x1A395E0", VA = "0x1A395E0", Slot = "25")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000198")]
	public virtual Vector2[] uvs2
	{
		[Token(Token = "0x60009E9")]
		[Address(RVA = "0x1A395E8", Offset = "0x1A395E8", VA = "0x1A395E8", Slot = "26")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000199")]
	public virtual bool UseUV2
	{
		[Token(Token = "0x60009EA")]
		[Address(RVA = "0x1A395F0", Offset = "0x1A395F0", VA = "0x1A395F0", Slot = "27")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60009EB")]
		[Address(RVA = "0x1A395F8", Offset = "0x1A395F8", VA = "0x1A395F8", Slot = "28")]
		set
		{
		}
	}

	[Token(Token = "0x1700019A")]
	public virtual Mesh mesh
	{
		[Token(Token = "0x60009EC")]
		[Address(RVA = "0x1A39604", Offset = "0x1A39604", VA = "0x1A39604", Slot = "29")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009ED")]
		[Address(RVA = "0x1A3978C", Offset = "0x1A3978C", VA = "0x1A3978C", Slot = "30")]
		set
		{
		}
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0x1A39794", Offset = "0x1A39794", VA = "0x1A39794", Slot = "31")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0x1A39684", Offset = "0x1A39684", VA = "0x1A39684")]
	protected void CreateMesh()
	{
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0x1A39AC0", Offset = "0x1A39AC0", VA = "0x1A39AC0", Slot = "32")]
	public virtual void UpdateVerts()
	{
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0x1A39B60", Offset = "0x1A39B60", VA = "0x1A39B60", Slot = "33")]
	public virtual void UpdateUVs()
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0x1A39C10", Offset = "0x1A39C10", VA = "0x1A39C10", Slot = "34")]
	public virtual void UpdateColors(Color color)
	{
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0x1A39D44", Offset = "0x1A39D44", VA = "0x1A39D44", Slot = "35")]
	public virtual void Hide(bool tf)
	{
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0x1A39DEC", Offset = "0x1A39DEC", VA = "0x1A39DEC", Slot = "36")]
	public virtual bool IsHidden()
	{
		return default(bool);
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0x1A39E84", Offset = "0x1A39E84", VA = "0x1A39E84")]
	public void SetPersistent()
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0x1A39F34", Offset = "0x1A39F34", VA = "0x1A39F34", Slot = "37")]
	public virtual void SetWindingOrder(SpriteRoot.WINDING_ORDER winding)
	{
	}

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0x1A3A074", Offset = "0x1A3A074", VA = "0x1A3A074")]
	public SpriteMesh()
	{
	}
}
[Token(Token = "0x2000112")]
public class SpriteMesh_Managed : ISpriteMesh, IEZLinkedListItem<SpriteMesh_Managed>
{
	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	protected SpriteRoot m_sprite;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool hidden;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int index;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int drawLayer;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SpriteManager m_manager;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SpriteMesh_Managed m_next;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SpriteMesh_Managed m_prev;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected Vector3[] m_vertices;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected Vector2[] m_uvs;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected Vector2[] m_uvs2;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected bool m_useUV2;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected Material m_material;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Texture m_texture;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected Vector3[] meshVerts;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected Vector2[] meshUVs;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected Vector2[] meshUVs2;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected Color[] meshColors;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public int mv1;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public int mv2;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int mv3;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public int mv4;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int uv1;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public int uv2;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public int uv3;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public int uv4;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public int cv1;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public int cv2;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public int cv3;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public int cv4;

	[Token(Token = "0x1700019B")]
	public SpriteManager manager
	{
		[Token(Token = "0x60009FA")]
		[Address(RVA = "0x1A3A188", Offset = "0x1A3A188", VA = "0x1A3A188")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009FB")]
		[Address(RVA = "0x1A361A4", Offset = "0x1A361A4", VA = "0x1A361A4")]
		set
		{
		}
	}

	[Token(Token = "0x1700019C")]
	public virtual SpriteRoot sprite
	{
		[Token(Token = "0x60009FC")]
		[Address(RVA = "0x1A3A190", Offset = "0x1A3A190", VA = "0x1A3A190", Slot = "23")]
		get
		{
			return null;
		}
		[Token(Token = "0x60009FD")]
		[Address(RVA = "0x1A3A198", Offset = "0x1A3A198", VA = "0x1A3A198", Slot = "24")]
		set
		{
		}
	}

	[Token(Token = "0x1700019D")]
	public virtual Texture texture
	{
		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x1A3A268", Offset = "0x1A3A268", VA = "0x1A3A268", Slot = "25")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700019E")]
	public virtual Material material
	{
		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x1A3A270", Offset = "0x1A3A270", VA = "0x1A3A270", Slot = "26")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700019F")]
	public virtual Vector3[] vertices
	{
		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x1A3A278", Offset = "0x1A3A278", VA = "0x1A3A278", Slot = "27")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A0")]
	public virtual Vector2[] uvs
	{
		[Token(Token = "0x6000A01")]
		[Address(RVA = "0x1A3A280", Offset = "0x1A3A280", VA = "0x1A3A280", Slot = "28")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A1")]
	public virtual Vector2[] uvs2
	{
		[Token(Token = "0x6000A02")]
		[Address(RVA = "0x1A3A288", Offset = "0x1A3A288", VA = "0x1A3A288", Slot = "29")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001A2")]
	public virtual bool UseUV2
	{
		[Token(Token = "0x6000A03")]
		[Address(RVA = "0x1A3A290", Offset = "0x1A3A290", VA = "0x1A3A290", Slot = "30")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x1A3A298", Offset = "0x1A3A298", VA = "0x1A3A298", Slot = "31")]
		set
		{
		}
	}

	[Token(Token = "0x170001A3")]
	public SpriteMesh_Managed prev
	{
		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0x1A3A9F8", Offset = "0x1A3A9F8", VA = "0x1A3A9F8", Slot = "19")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0x1A3AA00", Offset = "0x1A3AA00", VA = "0x1A3AA00", Slot = "20")]
		set
		{
		}
	}

	[Token(Token = "0x170001A4")]
	public SpriteMesh_Managed next
	{
		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x1A3AA08", Offset = "0x1A3AA08", VA = "0x1A3AA08", Slot = "21")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x1A3AA10", Offset = "0x1A3AA10", VA = "0x1A3AA10", Slot = "22")]
		set
		{
		}
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0x1A36140", Offset = "0x1A36140", VA = "0x1A36140")]
	public void SetBuffers(Vector3[] verts, Vector2[] uvs, Vector2[] uvs2, Color[] cols)
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0x1A36FB8", Offset = "0x1A36FB8", VA = "0x1A36FB8")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0x1A3A2A4", Offset = "0x1A3A2A4", VA = "0x1A3A2A4", Slot = "32")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0x1A3A458", Offset = "0x1A3A458", VA = "0x1A3A458", Slot = "33")]
	public virtual void UpdateVerts()
	{
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0x1A3A59C", Offset = "0x1A3A59C", VA = "0x1A3A59C", Slot = "34")]
	public virtual void UpdateUVs()
	{
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0x1A3A81C", Offset = "0x1A3A81C", VA = "0x1A3A81C", Slot = "35")]
	public virtual void UpdateColors(Color color)
	{
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0x1A3A8DC", Offset = "0x1A3A8DC", VA = "0x1A3A8DC", Slot = "36")]
	public virtual void Hide(bool tf)
	{
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0x1A3A9F0", Offset = "0x1A3A9F0", VA = "0x1A3A9F0", Slot = "37")]
	public virtual bool IsHidden()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0x1A3608C", Offset = "0x1A3608C", VA = "0x1A3608C")]
	public SpriteMesh_Managed()
	{
	}
}
[Token(Token = "0x2000113")]
public delegate UnityEngine.Object AssetLoaderDelegate(string path, Type type);
[Serializable]
[Token(Token = "0x2000114")]
public struct SPRITE_FRAME
{
	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Rect uvs;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector2 scaleFactor;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 topLeftOffset;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 bottomRightOffset;

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0x1A2B8D8", Offset = "0x1A2B8D8", VA = "0x1A2B8D8")]
	public SPRITE_FRAME(float dummy)
	{
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0x1A2B938", Offset = "0x1A2B938", VA = "0x1A2B938")]
	public void Copy(CSpriteFrame f)
	{
	}
}
[Serializable]
[Token(Token = "0x2000115")]
public class SpriteState
{
	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public string imgPath;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public CSpriteFrame frameInfo;

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0x197C864", Offset = "0x197C864", VA = "0x197C864")]
	public SpriteState(string n, string p)
	{
	}
}
[Serializable]
[Token(Token = "0x2000116")]
public class CSpriteFrame
{
	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Rect uvs;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 scaleFactor;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 topLeftOffset;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector2 bottomRightOffset;

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0x1ABE988", Offset = "0x1ABE988", VA = "0x1ABE988")]
	public void Copy(SPRITE_FRAME f)
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0x1ABE9AC", Offset = "0x1ABE9AC", VA = "0x1ABE9AC")]
	public void Copy(CSpriteFrame f)
	{
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0x1ABE9E0", Offset = "0x1ABE9E0", VA = "0x1ABE9E0")]
	public SPRITE_FRAME ToStruct()
	{
		return default(SPRITE_FRAME);
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0x1AB99F4", Offset = "0x1AB99F4", VA = "0x1AB99F4")]
	public CSpriteFrame()
	{
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0x1ABE9F4", Offset = "0x1ABE9F4", VA = "0x1ABE9F4")]
	public CSpriteFrame(CSpriteFrame f)
	{
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0x1ABEA70", Offset = "0x1ABEA70", VA = "0x1ABEA70")]
	public CSpriteFrame(SPRITE_FRAME f)
	{
	}
}
[Token(Token = "0x2000117")]
public interface IEZLinkedListItem<T>
{
	[Token(Token = "0x170001A5")]
	T prev
	{
		[Token(Token = "0x6000A1D")]
		get;
		[Token(Token = "0x6000A1E")]
		set;
	}

	[Token(Token = "0x170001A6")]
	T next
	{
		[Token(Token = "0x6000A1F")]
		get;
		[Token(Token = "0x6000A20")]
		set;
	}
}
[Token(Token = "0x2000118")]
public class EZLinkedListIterator<T> where T : IEZLinkedListItem<T>
{
	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected T cur;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected EZLinkedList<T> list;

	[Token(Token = "0x170001A7")]
	public T Current
	{
		[Token(Token = "0x6000A21")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x6000A22")]
		set
		{
		}
	}

	[Token(Token = "0x170001A8")]
	public bool Done
	{
		[Token(Token = "0x6000A25")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000A23")]
	public bool Begin(EZLinkedList<T> l)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A24")]
	public void End()
	{
	}

	[Token(Token = "0x6000A26")]
	public bool Next()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A27")]
	public bool NextNoRemove()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A28")]
	public EZLinkedListIterator()
	{
	}
}
[Token(Token = "0x2000119")]
public class EZLinkedListNode<T> : IEZLinkedListItem<EZLinkedListNode<T>>
{
	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T val;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private EZLinkedListNode<T> m_prev;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private EZLinkedListNode<T> m_next;

	[Token(Token = "0x170001A9")]
	public EZLinkedListNode<T> prev
	{
		[Token(Token = "0x6000A2A")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A2B")]
		set
		{
		}
	}

	[Token(Token = "0x170001AA")]
	public EZLinkedListNode<T> next
	{
		[Token(Token = "0x6000A2C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A2D")]
		set
		{
		}
	}

	[Token(Token = "0x6000A29")]
	public EZLinkedListNode(T v)
	{
	}
}
[Token(Token = "0x200011A")]
public class EZLinkedList<T> where T : IEZLinkedListItem<T>
{
	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private List<EZLinkedListIterator<T>> iters;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private List<EZLinkedListIterator<T>> freeIters;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected T head;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected T cur;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected T nextItem;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected int count;

	[Token(Token = "0x170001AB")]
	public int Count
	{
		[Token(Token = "0x6000A2E")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001AC")]
	public bool Empty
	{
		[Token(Token = "0x6000A2F")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001AD")]
	public T Head
	{
		[Token(Token = "0x6000A30")]
		get
		{
			return (T)null;
		}
	}

	[Token(Token = "0x170001AE")]
	public T Current
	{
		[Token(Token = "0x6000A31")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x6000A32")]
		set
		{
		}
	}

	[Token(Token = "0x6000A33")]
	public EZLinkedListIterator<T> Begin()
	{
		return null;
	}

	[Token(Token = "0x6000A34")]
	public void End(EZLinkedListIterator<T> it)
	{
	}

	[Token(Token = "0x6000A35")]
	public bool Rewind()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A36")]
	public bool MoveNext()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A37")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x6000A38")]
	public void Remove(T item)
	{
	}

	[Token(Token = "0x6000A39")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000A3A")]
	public EZLinkedList()
	{
	}
}
[Token(Token = "0x200011B")]
public struct Rect3D
{
	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private Vector3 m_tl;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Vector3 m_tr;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_bl;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 m_br;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float m_width;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float m_height;

	[Token(Token = "0x170001AF")]
	public Vector3 topLeft
	{
		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0x1A2987C", Offset = "0x1A2987C", VA = "0x1A2987C")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001B0")]
	public Vector3 topRight
	{
		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0x1A29888", Offset = "0x1A29888", VA = "0x1A29888")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001B1")]
	public Vector3 bottomLeft
	{
		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0x1A29894", Offset = "0x1A29894", VA = "0x1A29894")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001B2")]
	public Vector3 bottomRight
	{
		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0x1A298A0", Offset = "0x1A298A0", VA = "0x1A298A0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001B3")]
	public float width
	{
		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0x1A298AC", Offset = "0x1A298AC", VA = "0x1A298AC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001B4")]
	public float height
	{
		[Token(Token = "0x6000A40")]
		[Address(RVA = "0x1A298F8", Offset = "0x1A298F8", VA = "0x1A298F8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0x1A29948", Offset = "0x1A29948", VA = "0x1A29948")]
	public void FromPoints(Vector3 tl, Vector3 tr, Vector3 bl)
	{
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0x1A29990", Offset = "0x1A29990", VA = "0x1A29990")]
	public Rect3D(Vector3 tl, Vector3 tr, Vector3 bl)
	{
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0x1A29A54", Offset = "0x1A29A54", VA = "0x1A29A54")]
	public Rect3D(Rect r)
	{
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0x1A29BB0", Offset = "0x1A29BB0", VA = "0x1A29BB0")]
	public Rect GetRect()
	{
		return default(Rect);
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0x1A29AE8", Offset = "0x1A29AE8", VA = "0x1A29AE8")]
	public void FromRect(Rect r)
	{
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0x1A29BC4", Offset = "0x1A29BC4", VA = "0x1A29BC4")]
	public void MultFast(Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0x1A29C84", Offset = "0x1A29C84", VA = "0x1A29C84")]
	public static Rect3D MultFast(Rect3D rect, Matrix4x4 matrix)
	{
		return default(Rect3D);
	}
}
[Token(Token = "0x200011C")]
[ExecuteInEditMode]
public abstract class SpriteRoot : MonoBehaviour, IEZLinkedListItem<ISpriteAnimatable>, IUseCamera
{
	[Token(Token = "0x20001BB")]
	public enum SPRITE_PLANE
	{
		[Token(Token = "0x4000A7B")]
		XY,
		[Token(Token = "0x4000A7C")]
		XZ,
		[Token(Token = "0x4000A7D")]
		YZ
	}

	[Token(Token = "0x20001BC")]
	public enum ANCHOR_METHOD
	{
		[Token(Token = "0x4000A7F")]
		UPPER_LEFT,
		[Token(Token = "0x4000A80")]
		UPPER_CENTER,
		[Token(Token = "0x4000A81")]
		UPPER_RIGHT,
		[Token(Token = "0x4000A82")]
		MIDDLE_LEFT,
		[Token(Token = "0x4000A83")]
		MIDDLE_CENTER,
		[Token(Token = "0x4000A84")]
		MIDDLE_RIGHT,
		[Token(Token = "0x4000A85")]
		BOTTOM_LEFT,
		[Token(Token = "0x4000A86")]
		BOTTOM_CENTER,
		[Token(Token = "0x4000A87")]
		BOTTOM_RIGHT,
		[Token(Token = "0x4000A88")]
		TEXTURE_OFFSET
	}

	[Token(Token = "0x20001BD")]
	public enum WINDING_ORDER
	{
		[Token(Token = "0x4000A8A")]
		CCW,
		[Token(Token = "0x4000A8B")]
		CW
	}

	[Token(Token = "0x20001BE")]
	public delegate void SpriteResizedDelegate(float newWidth, float newHeight, SpriteRoot sprite);

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool managed;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SpriteManager manager;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected bool addedToManager;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int drawLayer;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool persistent;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public SPRITE_PLANE plane;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public WINDING_ORDER winding;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float width;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float height;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector2 bleedCompensation;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public ANCHOR_METHOD anchor;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool pixelPerfect;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool autoResize;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	protected Vector2 bleedCompensationUV;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	protected Vector2 bleedCompensationUVMax;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	protected SPRITE_FRAME frameInfo;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	protected Rect uvRect;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	protected Vector2 scaleFactor;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	protected Vector2 topLeftOffset;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	protected Vector2 bottomRightOffset;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	protected Vector3 topLeft;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	protected Vector3 bottomRight;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	protected Vector3 unclippedTopLeft;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	protected Vector3 unclippedBottomRight;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	protected Vector2 tlTruncate;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	protected Vector2 brTruncate;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	protected bool truncated;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	protected Rect3D clippingRect;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	protected Rect localClipRect;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	protected float leftClipPct;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	protected float rightClipPct;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	protected float topClipPct;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	protected float bottomClipPct;

	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	protected bool clipped;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x151")]
	[HideInInspector]
	public bool billboarded;

	[NonSerialized]
	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x152")]
	public bool isClone;

	[NonSerialized]
	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x153")]
	public bool uvsInitialized;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	protected bool m_started;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x155")]
	protected bool deleted;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public Vector3 offset;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public Color color;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	protected ISpriteMesh m_spriteMesh;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	protected ISpriteAnimatable m_prev;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	protected ISpriteAnimatable m_next;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	protected Vector2 screenSize;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public Camera renderCamera;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	protected Vector2 sizeUnitsPerUV;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[HideInInspector]
	public Vector2 pixelsPerUV;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[HideInInspector]
	public Renderer _renderer;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	protected float worldUnitsPerScreenPixel;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	protected SpriteResizedDelegate resizedDelegate;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	protected EZScreenPlacement screenPlacer;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public bool hideAtStart;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D1")]
	protected bool m_hidden;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D2")]
	public bool ignoreClipping;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	protected SpriteRootMirror mirror;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	protected Vector2 tempUV;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	protected Mesh oldMesh;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	protected SpriteManager savedManager;

	[Token(Token = "0x170001B5")]
	public Color Color
	{
		[Token(Token = "0x6000A62")]
		[Address(RVA = "0x1A3C0C4", Offset = "0x1A3C0C4", VA = "0x1A3C0C4", Slot = "31")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000A63")]
		[Address(RVA = "0x1A3C0D8", Offset = "0x1A3C0D8", VA = "0x1A3C0D8", Slot = "32")]
		set
		{
		}
	}

	[Token(Token = "0x170001B6")]
	public virtual Camera RenderCamera
	{
		[Token(Token = "0x6000A69")]
		[Address(RVA = "0x1A3C6C4", Offset = "0x1A3C6C4", VA = "0x1A3C6C4", Slot = "33")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0x1A3C6CC", Offset = "0x1A3C6CC", VA = "0x1A3C6CC", Slot = "34")]
		set
		{
		}
	}

	[Token(Token = "0x170001B7")]
	public Vector2 PixelSize
	{
		[Token(Token = "0x6000A70")]
		[Address(RVA = "0x1A3CA6C", Offset = "0x1A3CA6C", VA = "0x1A3CA6C")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x6000A71")]
		[Address(RVA = "0x1A3CA80", Offset = "0x1A3CA80", VA = "0x1A3CA80")]
		set
		{
		}
	}

	[Token(Token = "0x170001B8")]
	public Vector2 ImageSize
	{
		[Token(Token = "0x6000A72")]
		[Address(RVA = "0x1A3CA9C", Offset = "0x1A3CA9C", VA = "0x1A3CA9C")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x170001B9")]
	public bool Managed
	{
		[Token(Token = "0x6000A73")]
		[Address(RVA = "0x1A3CAF4", Offset = "0x1A3CAF4", VA = "0x1A3CAF4", Slot = "38")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A74")]
		[Address(RVA = "0x1A3CAFC", Offset = "0x1A3CAFC", VA = "0x1A3CAFC")]
		set
		{
		}
	}

	[Token(Token = "0x170001BA")]
	public bool Started
	{
		[Token(Token = "0x6000A75")]
		[Address(RVA = "0x1A3CEB0", Offset = "0x1A3CEB0", VA = "0x1A3CEB0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001BB")]
	public virtual Rect3D ClippingRect
	{
		[Token(Token = "0x6000A84")]
		[Address(RVA = "0x1A3D56C", Offset = "0x1A3D56C", VA = "0x1A3D56C", Slot = "40")]
		get
		{
			return default(Rect3D);
		}
		[Token(Token = "0x6000A85")]
		[Address(RVA = "0x1A3D594", Offset = "0x1A3D594", VA = "0x1A3D594", Slot = "41")]
		set
		{
		}
	}

	[Token(Token = "0x170001BC")]
	public virtual bool Clipped
	{
		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x1A3D6DC", Offset = "0x1A3D6DC", VA = "0x1A3D6DC", Slot = "42")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x1A3D6E4", Offset = "0x1A3D6E4", VA = "0x1A3D6E4", Slot = "43")]
		set
		{
		}
	}

	[Token(Token = "0x170001BD")]
	public ANCHOR_METHOD Anchor
	{
		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x1A3D734", Offset = "0x1A3D734", VA = "0x1A3D734", Slot = "44")]
		get
		{
			return default(ANCHOR_METHOD);
		}
		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0x1A3D73C", Offset = "0x1A3D73C", VA = "0x1A3D73C")]
		set
		{
		}
	}

	[Token(Token = "0x170001BE")]
	public Vector3 UnclippedTopLeft
	{
		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0x1A3D774", Offset = "0x1A3D774", VA = "0x1A3D774")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001BF")]
	public Vector3 UnclippedBottomRight
	{
		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x1A3D7B4", Offset = "0x1A3D7B4", VA = "0x1A3D7B4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001C0")]
	public Vector3 TopLeft
	{
		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0x1A3D7F4", Offset = "0x1A3D7F4", VA = "0x1A3D7F4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001C1")]
	public Vector3 BottomRight
	{
		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0x1A3D8D4", Offset = "0x1A3D8D4", VA = "0x1A3D8D4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001C2")]
	public ISpriteMesh spriteMesh
	{
		[Token(Token = "0x6000A90")]
		[Address(RVA = "0x1A3D9B8", Offset = "0x1A3D9B8", VA = "0x1A3D9B8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A91")]
		[Address(RVA = "0x1A36514", Offset = "0x1A36514", VA = "0x1A36514")]
		set
		{
		}
	}

	[Token(Token = "0x170001C3")]
	public bool AddedToManager
	{
		[Token(Token = "0x6000A92")]
		[Address(RVA = "0x1A3D9C0", Offset = "0x1A3D9C0", VA = "0x1A3D9C0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A93")]
		[Address(RVA = "0x1A3D9C8", Offset = "0x1A3D9C8", VA = "0x1A3D9C8")]
		set
		{
		}
	}

	[Token(Token = "0x170001C4")]
	public ISpriteAnimatable prev
	{
		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x1A3D9E0", Offset = "0x1A3D9E0", VA = "0x1A3D9E0", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0x1A3D9E8", Offset = "0x1A3D9E8", VA = "0x1A3D9E8", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x170001C5")]
	public ISpriteAnimatable next
	{
		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0x1A3D9F8", Offset = "0x1A3D9F8", VA = "0x1A3D9F8", Slot = "6")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0x1A3DA00", Offset = "0x1A3DA00", VA = "0x1A3DA00", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0x1A2D698", Offset = "0x1A2D698", VA = "0x1A2D698", Slot = "12")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x1A2DE68", Offset = "0x1A2DE68", VA = "0x1A2DE68", Slot = "13")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x1A3AB4C", Offset = "0x1A3AB4C", VA = "0x1A3AB4C")]
	protected void CalcSizeUnitsPerUV()
	{
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x1A2D97C", Offset = "0x1A2D97C", VA = "0x1A2D97C", Slot = "14")]
	protected virtual void Init()
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x1A2E1D0", Offset = "0x1A2E1D0", VA = "0x1A2E1D0", Slot = "15")]
	public virtual void Clear()
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x1A2E57C", Offset = "0x1A2E57C", VA = "0x1A2E57C", Slot = "16")]
	public virtual void Copy(SpriteRoot s)
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x1A2ED88", Offset = "0x1A2ED88", VA = "0x1A2ED88", Slot = "17")]
	public virtual void InitUVs()
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x1A31E10", Offset = "0x1A31E10", VA = "0x1A31E10", Slot = "18")]
	public virtual void Delete()
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x1A320B8", Offset = "0x1A320B8", VA = "0x1A320B8", Slot = "19")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x1A31FBC", Offset = "0x1A31FBC", VA = "0x1A31FBC", Slot = "20")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x1A3AC14", Offset = "0x1A3AC14", VA = "0x1A3AC14", Slot = "21")]
	public virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x1A3AC24", Offset = "0x1A3AC24", VA = "0x1A3AC24")]
	public void CalcEdges()
	{
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0x1A2EB2C", Offset = "0x1A2EB2C", VA = "0x1A2EB2C")]
	public void CalcSize()
	{
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0x1A3B1B0", Offset = "0x1A3B1B0", VA = "0x1A3B1B0", Slot = "22")]
	public virtual void SetSize(float w, float h)
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0x1A3B234", Offset = "0x1A3B234", VA = "0x1A3B234")]
	protected void SetSizeXY(float w, float h)
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0x1A3B430", Offset = "0x1A3B430", VA = "0x1A3B430")]
	protected void SetSizeXZ(float w, float h)
	{
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0x1A3B62C", Offset = "0x1A3B62C", VA = "0x1A3B62C")]
	protected void SetSizeYZ(float w, float h)
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0x1A3B828", Offset = "0x1A3B828", VA = "0x1A3B828", Slot = "23")]
	public virtual void TruncateRight(float pct)
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0x1A3B8B8", Offset = "0x1A3B8B8", VA = "0x1A3B8B8", Slot = "24")]
	public virtual void TruncateLeft(float pct)
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0x1A3B948", Offset = "0x1A3B948", VA = "0x1A3B948", Slot = "25")]
	public virtual void TruncateTop(float pct)
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0x1A3B9D8", Offset = "0x1A3B9D8", VA = "0x1A3B9D8", Slot = "26")]
	public virtual void TruncateBottom(float pct)
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0x1A3BA68", Offset = "0x1A3BA68", VA = "0x1A3BA68", Slot = "27")]
	public virtual void Untruncate()
	{
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0x1A3BAA4", Offset = "0x1A3BAA4", VA = "0x1A3BAA4", Slot = "28")]
	public virtual void Unclip()
	{
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0x1A3BAEC", Offset = "0x1A3BAEC", VA = "0x1A3BAEC", Slot = "29")]
	public virtual void UpdateUVs()
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0x1A3BFC0", Offset = "0x1A3BFC0", VA = "0x1A3BFC0")]
	public void TransformBillboarded(Transform t)
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x1A3BFC4", Offset = "0x1A3BFC4", VA = "0x1A3BFC4", Slot = "30")]
	public virtual void SetColor(Color c)
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0x1A3C0E8", Offset = "0x1A3C0E8", VA = "0x1A3C0E8")]
	public void SetPixelToUV(int texWidth, int texHeight)
	{
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0x1A39514", Offset = "0x1A39514", VA = "0x1A39514")]
	public void SetPixelToUV(Texture tex)
	{
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0x1A3C1C8", Offset = "0x1A3C1C8", VA = "0x1A3C1C8")]
	public void CalcPixelToUV()
	{
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0x1A3C4F4", Offset = "0x1A3C4F4", VA = "0x1A3C4F4")]
	public void SetTexture(Texture2D tex)
	{
	}

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0x1A3C5E4", Offset = "0x1A3C5E4", VA = "0x1A3C5E4")]
	public void SetMaterial(Material mat)
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0x1A3C70C", Offset = "0x1A3C70C", VA = "0x1A3C70C", Slot = "35")]
	public void UpdateCamera()
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0x1A3C5D0", Offset = "0x1A3C5D0", VA = "0x1A3C5D0", Slot = "8")]
	public void SetCamera()
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0x1A3C720", Offset = "0x1A3C720", VA = "0x1A3C720", Slot = "36")]
	public virtual void SetCamera(Camera c)
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0x1A322D8", Offset = "0x1A322D8", VA = "0x1A322D8", Slot = "37")]
	public virtual void Hide(bool tf)
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0x1A3CA64", Offset = "0x1A3CA64", VA = "0x1A3CA64")]
	public bool IsHidden()
	{
		return default(bool);
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0x1A3CC24", Offset = "0x1A3CC24", VA = "0x1A3CC24")]
	protected void DestroyMesh()
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0x1A3AA64", Offset = "0x1A3AA64", VA = "0x1A3AA64")]
	protected void AddMesh()
	{
	}

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0x1A325A8", Offset = "0x1A325A8", VA = "0x1A325A8")]
	public void SetBleedCompensation()
	{
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0x1A3CEB8", Offset = "0x1A3CEB8", VA = "0x1A3CEB8")]
	public void SetBleedCompensation(float x, float y)
	{
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0x1A2EA60", Offset = "0x1A2EA60", VA = "0x1A2EA60")]
	public void SetBleedCompensation(Vector2 xy)
	{
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0x1A3CEBC", Offset = "0x1A3CEBC", VA = "0x1A3CEBC")]
	public void SetPlane(SPRITE_PLANE p)
	{
	}

	[Token(Token = "0x6000A7C")]
	[Address(RVA = "0x1A3CED4", Offset = "0x1A3CED4", VA = "0x1A3CED4")]
	public void SetWindingOrder(WINDING_ORDER order)
	{
	}

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0x1A3CF84", Offset = "0x1A3CF84", VA = "0x1A3CF84")]
	public void SetDrawLayer(int layer)
	{
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0x1A3D07C", Offset = "0x1A3D07C", VA = "0x1A3D07C")]
	public void SetFrameInfo(SPRITE_FRAME fInfo)
	{
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0x1A3D0DC", Offset = "0x1A3D0DC", VA = "0x1A3D0DC", Slot = "39")]
	public void SetUVs(Rect uv)
	{
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0x1A3D14C", Offset = "0x1A3D14C", VA = "0x1A3D14C")]
	public void SetUVsFromPixelCoords(Rect pxCoords)
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0x1A3D26C", Offset = "0x1A3D26C", VA = "0x1A3D26C")]
	public Rect GetUVs()
	{
		return default(Rect);
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0x1A3D278", Offset = "0x1A3D278", VA = "0x1A3D278")]
	public Vector3[] GetVertices()
	{
		return null;
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0x1A3D3C8", Offset = "0x1A3D3C8", VA = "0x1A3D3C8")]
	public Vector3 GetCenterPoint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0x1A3D71C", Offset = "0x1A3D71C", VA = "0x1A3D71C")]
	public void SetAnchor(ANCHOR_METHOD a)
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0x1A3D754", Offset = "0x1A3D754", VA = "0x1A3D754")]
	public void SetOffset(Vector3 o)
	{
	}

	[Token(Token = "0x6000A94")]
	public abstract Vector2 GetDefaultPixelSize(PathFromGUIDDelegate guid2Path, AssetLoaderDelegate loader);

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0x1A2ED4C", Offset = "0x1A2ED4C", VA = "0x1A2ED4C")]
	public Vector2 PixelSpaceToUVSpace(Vector2 xy)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0x1A3D9D4", Offset = "0x1A3D9D4", VA = "0x1A3D9D4")]
	public Vector2 PixelSpaceToUVSpace(int x, int y)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0x1A2ED04", Offset = "0x1A2ED04", VA = "0x1A2ED04")]
	public Vector2 PixelCoordToUVCoord(Vector2 xy)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0x1A3D260", Offset = "0x1A3D260", VA = "0x1A3D260")]
	public Vector2 PixelCoordToUVCoord(int x, int y)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000A99")]
	public abstract int GetStateIndex(string stateName);

	[Token(Token = "0x6000A9A")]
	public abstract void SetState(int index);

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0x1A3DA10", Offset = "0x1A3DA10", VA = "0x1A3DA10", Slot = "48")]
	public virtual void DoMirror()
	{
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0x1A3DB4C", Offset = "0x1A3DB4C", VA = "0x1A3DB4C", Slot = "49")]
	public virtual void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0x1A3DB5C", Offset = "0x1A3DB5C", VA = "0x1A3DB5C", Slot = "50")]
	public virtual void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0x1A2F34C", Offset = "0x1A2F34C", VA = "0x1A2F34C")]
	protected SpriteRoot()
	{
	}
}
[Token(Token = "0x200011D")]
public class SpriteRootMirror
{
	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool managed;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpriteManager manager;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int drawLayer;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public SpriteRoot.SPRITE_PLANE plane;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SpriteRoot.WINDING_ORDER winding;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float width;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float height;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector2 bleedCompensation;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public SpriteRoot.ANCHOR_METHOD anchor;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 offset;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Color color;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool pixelPerfect;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	public bool autoResize;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Camera renderCamera;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool hideAtStart;

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0x197C370", Offset = "0x197C370", VA = "0x197C370", Slot = "4")]
	public virtual void Mirror(SpriteRoot s)
	{
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0x197C438", Offset = "0x197C438", VA = "0x197C438", Slot = "5")]
	public virtual bool Validate(SpriteRoot s)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0x197C460", Offset = "0x197C460", VA = "0x197C460", Slot = "6")]
	public virtual bool DidChange(SpriteRoot s)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0x197C6E4", Offset = "0x197C6E4", VA = "0x197C6E4", Slot = "7")]
	protected virtual void HandleManageState(SpriteRoot s)
	{
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0x197C718", Offset = "0x197C718", VA = "0x197C718", Slot = "8")]
	public virtual void UpdateManager(SpriteRoot s)
	{
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0x197C828", Offset = "0x197C828", VA = "0x197C828", Slot = "9")]
	protected virtual void HandleDrawLayerChange(SpriteRoot s)
	{
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0x197C85C", Offset = "0x197C85C", VA = "0x197C85C")]
	public SpriteRootMirror()
	{
	}
}
[Token(Token = "0x200011E")]
public class StorageManager : MonoBehaviour
{
	[Token(Token = "0x20001BF")]
	private class TypeNameConverter : SerializationBinder
	{
		[Token(Token = "0x6000F76")]
		[Address(RVA = "0x1BAF548", Offset = "0x1BAF548", VA = "0x1BAF548", Slot = "5")]
		public override Type BindToType(string assemblyName, string typeName)
		{
			return null;
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0x1BAF680", Offset = "0x1BAF680", VA = "0x1BAF680")]
		public TypeNameConverter()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001C0")]
	public class RangeResultBase : ISerializable
	{
		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Score;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float AccuracyPercentage;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int BonusPoints;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int GunId;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int ScopeId;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int LaserId;

		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int StockId;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int MagazineId;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int GripId;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int BulletsFired;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int TargetsHit;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int TargetsMissed;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int LongestStreak;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ExtraBonuses extraBonuses;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float AverageTime;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float AverageDistance;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float Time;

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float BestShot;

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int RangeId;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public ulong UserId;

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0x1BAE59C", Offset = "0x1BAE59C", VA = "0x1BAE59C")]
		public RangeResultBase()
		{
		}

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0x1BA5624", Offset = "0x1BA5624", VA = "0x1BA5624")]
		public RangeResultBase(RangeResult clientResult)
		{
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0x1BAEA34", Offset = "0x1BAEA34", VA = "0x1BAEA34")]
		public RangeResultBase(SerializationInfo info, StreamingContext context)
		{
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0x1BAF0F4", Offset = "0x1BAF0F4", VA = "0x1BAF0F4", Slot = "5")]
		public virtual void GetObjectData(SerializationInfo info, StreamingContext context)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001C1")]
	public class RangeResult : RangeResultBase, ISerializable
	{
		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool isNew;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int topScore;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int scorePercent;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string scoreResult;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int totalReloads;

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public int perfectReloads;

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int bullseyes;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float maxTimeBonus;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float accuracyBonus;

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float maxAccuracyBonus;

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float maxRunningScore;

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x1BAE42C", Offset = "0x1BAE42C", VA = "0x1BAE42C")]
		public RangeResult(bool data_isNew, int data_score, int data_topScore, int data_scorePercent, string data_scoreResult, float data_accuracy, int data_bonusPoints, int data_gunUsed, int data_scopeUsed, int data_laserUsed, int data_stockUsed, int data_magazineUsed, int data_gripUsed, int data_totalShotsFired, int data_shotsOnTargetFired, int data_targetsMissed, int data_totalReloads, int data_perfectReloads, int data_longestStreak, int data_bullseyes, float data_averageTimeToTarget, float data_averageDistanceToTarget, float data_totalTimeTaken, float data_bestShot, int data_rangeID)
		{
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0x1BAE65C", Offset = "0x1BAE65C", VA = "0x1BAE65C")]
		public RangeResult()
		{
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0x1BAE660", Offset = "0x1BAE660", VA = "0x1BAE660")]
		public RangeResult(RangeResult rangeResult)
		{
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0x1BAE75C", Offset = "0x1BAE75C", VA = "0x1BAE75C")]
		public RangeResult(RangeResultBase rangeResultBase)
		{
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0x1BAE818", Offset = "0x1BAE818", VA = "0x1BAE818")]
		public RangeResult(SerializationInfo info, StreamingContext context)
		{
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0x1BAEFB8", Offset = "0x1BAEFB8", VA = "0x1BAEFB8", Slot = "5")]
		public override void GetObjectData(SerializationInfo info, StreamingContext context)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001C2")]
	public class PlaybackStorage : ISerializable
	{
		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int challengeRange;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int challengeScore;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int challengeWeapon;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public byte[] replayData;

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0x1BAE1CC", Offset = "0x1BAE1CC", VA = "0x1BAE1CC")]
		public PlaybackStorage()
		{
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0x1BAE1D4", Offset = "0x1BAE1D4", VA = "0x1BAE1D4")]
		protected PlaybackStorage(SerializationInfo info, StreamingContext context)
		{
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0x1BAE34C", Offset = "0x1BAE34C", VA = "0x1BAE34C", Slot = "4")]
		public void GetObjectData(SerializationInfo info, StreamingContext context)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001C3")]
	public class WeaponConfig : ISerializable
	{
		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isNew;

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int versionReference;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int weaponIndex;

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] railNames;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] railAttachmentNames;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string[] upgradeNames;

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string[] upgradeRails;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string[] upgradeRailAttachmentNames;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string[] customComponents;

		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string nativeStock;

		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string ammunitionUpgrade;

		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string camouflageTexture;

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float camouflageTiling;

		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float reloadSpeedMultiplier;

		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float sightingSpeedMultiplier;

		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float actionSpeedMultiplier;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float accuracyMultiplier;

		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float holdBreathMultiplier;

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0x1BAFA7C", Offset = "0x1BAFA7C", VA = "0x1BAFA7C")]
		public WeaponConfig(bool data_isNew, int data_versionReference, string[] data_railNames, string[] data_railAttachmentNames, string[] data_upgradeNames, string[] data_upgradeRails, string[] data_upgradeRailAttachmentNames, string[] data_customComponents, string data_nativeStock, string data_ammunitionUpgrade, string data_camouflageTexture, float data_camouflageTiling, float data_reloadSpeedMultiplier, float data_sightingSpeedMultiplier, float data_actionSpeedMultiplier, float data_accuracyMultiplier, float data_holdBreathMultiplier)
		{
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0x1BAFBD8", Offset = "0x1BAFBD8", VA = "0x1BAFBD8")]
		public WeaponConfig()
		{
		}

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0x1BAFBE8", Offset = "0x1BAFBE8", VA = "0x1BAFBE8")]
		protected WeaponConfig(SerializationInfo info, StreamingContext context)
		{
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0x1BB0364", Offset = "0x1BB0364", VA = "0x1BB0364", Slot = "4")]
		public void GetObjectData(SerializationInfo info, StreamingContext context)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001C4")]
	public class WeaponStatistic : ISerializable
	{
		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int bulletsFired;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int timesReloaded;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int timeSpent;

		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int rangesCompleted;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int attachmentsOwned;

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int skinsOwned;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int weaponLevel;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int bullseyes;

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int zombieHeadshots;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int rangeAccuracy;

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int laddersComplete;

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0x1BB0790", Offset = "0x1BB0790", VA = "0x1BB0790")]
		public WeaponStatistic(int data_bulletsFired, int data_timesReloaded, int data_timeSpent, int data_rangesCompleted, int data_attachmentsOwned, int data_skinsOwned, int data_weaponLevel, int data_bullseyes, int data_zombieHeadshots, int data_rangeAccuracy, int data_laddersComplete)
		{
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0x1BB0824", Offset = "0x1BB0824", VA = "0x1BB0824")]
		public WeaponStatistic()
		{
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0x1BB0858", Offset = "0x1BB0858", VA = "0x1BB0858")]
		protected WeaponStatistic(SerializationInfo info, StreamingContext context)
		{
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0x1BB0CF8", Offset = "0x1BB0CF8", VA = "0x1BB0CF8", Slot = "4")]
		public void GetObjectData(SerializationInfo info, StreamingContext context)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001C5")]
	public class WeaponStatistics : ISerializable, IEnumerable
	{
		[Token(Token = "0x20001F1")]
		private class WeaponStatisticsEnumerator : IEnumerator
		{
			[Token(Token = "0x4000B8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int _position;

			[Token(Token = "0x4000B8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private readonly WeaponStatistics _ws;

			[Token(Token = "0x17000259")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001077")]
				[Address(RVA = "0x1BB4110", Offset = "0x1BB4110", VA = "0x1BB4110", Slot = "5")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001076")]
			[Address(RVA = "0x1BB11DC", Offset = "0x1BB11DC", VA = "0x1BB11DC")]
			public WeaponStatisticsEnumerator(WeaponStatistics ws)
			{
			}

			[Token(Token = "0x6001078")]
			[Address(RVA = "0x1BB4158", Offset = "0x1BB4158", VA = "0x1BB4158", Slot = "4")]
			private bool System.Collections.IEnumerator.MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001079")]
			[Address(RVA = "0x1BB41A4", Offset = "0x1BB41A4", VA = "0x1BB41A4", Slot = "6")]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isNew;

		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WeaponStatistic[] storedWeaponStatistics;

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0x1BB0EF0", Offset = "0x1BB0EF0", VA = "0x1BB0EF0")]
		public WeaponStatistics(bool data_isNew, WeaponStatistic[] data_storedWeaponStatistics)
		{
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0x1BB0F38", Offset = "0x1BB0F38", VA = "0x1BB0F38")]
		public WeaponStatistics()
		{
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x1BB0F40", Offset = "0x1BB0F40", VA = "0x1BB0F40")]
		protected WeaponStatistics(SerializationInfo info, StreamingContext context)
		{
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x1BB10D8", Offset = "0x1BB10D8", VA = "0x1BB10D8", Slot = "4")]
		public void GetObjectData(SerializationInfo info, StreamingContext context)
		{
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x1BB1168", Offset = "0x1BB1168", VA = "0x1BB1168", Slot = "5")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}
	}

	[Serializable]
	[Token(Token = "0x20001C6")]
	public class UserScores : ISerializable
	{
		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int versionReference;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int[] storedUserScores;

		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int[] storedEventScores;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] storedEventResult;

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0x1BAF688", Offset = "0x1BAF688", VA = "0x1BAF688")]
		public UserScores(int data_versionReference, int[] data_storedUserScores, int[] data_storedEventScores, string[] data_storedEventResult)
		{
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0x1BAF6FC", Offset = "0x1BAF6FC", VA = "0x1BAF6FC")]
		public UserScores()
		{
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0x1BAF704", Offset = "0x1BAF704", VA = "0x1BAF704")]
		protected UserScores(SerializationInfo info, StreamingContext context)
		{
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0x1BAF99C", Offset = "0x1BAF99C", VA = "0x1BAF99C", Slot = "4")]
		public void GetObjectData(SerializationInfo info, StreamingContext context)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001C7")]
	public class Challenge : ISerializable
	{
		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlaybackStorage playback;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RangeResult result;

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string UserName;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int UserId;

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0x1BAD42C", Offset = "0x1BAD42C", VA = "0x1BAD42C")]
		public Challenge(PlaybackStorage data_playback, RangeResult data_result, string data_UserName, int data_UserId)
		{
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0x1BAD4A4", Offset = "0x1BAD4A4", VA = "0x1BAD4A4")]
		public Challenge()
		{
		}

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0x1BAD4AC", Offset = "0x1BAD4AC", VA = "0x1BAD4AC")]
		protected Challenge(SerializationInfo info, StreamingContext context)
		{
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0x1BAD77C", Offset = "0x1BAD77C", VA = "0x1BAD77C", Slot = "4")]
		public void GetObjectData(SerializationInfo info, StreamingContext context)
		{
		}
	}

	[Token(Token = "0x20001C8")]
	public class ChallengeDetail
	{
		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A448", Offset = "0x76A448")]
		private int <UCId>k__BackingField;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A458", Offset = "0x76A458")]
		private int <CId>k__BackingField;

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A468", Offset = "0x76A468")]
		private string <Chgr>k__BackingField;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A478", Offset = "0x76A478")]
		private int <UId>k__BackingField;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A488", Offset = "0x76A488")]
		private int <RId>k__BackingField;

		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A498", Offset = "0x76A498")]
		private int <State>k__BackingField;

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A4A8", Offset = "0x76A4A8")]
		private int <Prize>k__BackingField;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A4B8", Offset = "0x76A4B8")]
		private DateTime <ChgeDt>k__BackingField;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A4C8", Offset = "0x76A4C8")]
		private string <ChallengeMode>k__BackingField;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A4D8", Offset = "0x76A4D8")]
		private string <ChallengeWeapon>k__BackingField;

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A4E8", Offset = "0x76A4E8")]
		private int <ChallengePrize>k__BackingField;

		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A4F8", Offset = "0x76A4F8")]
		private int <ChallengePercentage>k__BackingField;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A508", Offset = "0x76A508")]
		private int <Win>k__BackingField;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A518", Offset = "0x76A518")]
		private string <EventType>k__BackingField;

		[Token(Token = "0x17000232")]
		public int UCId
		{
			[Token(Token = "0x6000F9A")]
			[Address(RVA = "0x1BAD85C", Offset = "0x1BAD85C", VA = "0x1BAD85C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BAC8", Offset = "0x76BAC8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F9B")]
			[Address(RVA = "0x1BAD864", Offset = "0x1BAD864", VA = "0x1BAD864")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BAD8", Offset = "0x76BAD8")]
			set
			{
			}
		}

		[Token(Token = "0x17000233")]
		public int CId
		{
			[Token(Token = "0x6000F9C")]
			[Address(RVA = "0x1BAD86C", Offset = "0x1BAD86C", VA = "0x1BAD86C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BAE8", Offset = "0x76BAE8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000F9D")]
			[Address(RVA = "0x1BAD874", Offset = "0x1BAD874", VA = "0x1BAD874")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BAF8", Offset = "0x76BAF8")]
			set
			{
			}
		}

		[Token(Token = "0x17000234")]
		public string Chgr
		{
			[Token(Token = "0x6000F9E")]
			[Address(RVA = "0x1BAD87C", Offset = "0x1BAD87C", VA = "0x1BAD87C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BB08", Offset = "0x76BB08")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000F9F")]
			[Address(RVA = "0x1BAD884", Offset = "0x1BAD884", VA = "0x1BAD884")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BB18", Offset = "0x76BB18")]
			set
			{
			}
		}

		[Token(Token = "0x17000235")]
		public int UId
		{
			[Token(Token = "0x6000FA0")]
			[Address(RVA = "0x1BAD88C", Offset = "0x1BAD88C", VA = "0x1BAD88C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BB28", Offset = "0x76BB28")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000FA1")]
			[Address(RVA = "0x1BAD894", Offset = "0x1BAD894", VA = "0x1BAD894")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BB38", Offset = "0x76BB38")]
			set
			{
			}
		}

		[Token(Token = "0x17000236")]
		public int RId
		{
			[Token(Token = "0x6000FA2")]
			[Address(RVA = "0x1BAD89C", Offset = "0x1BAD89C", VA = "0x1BAD89C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BB48", Offset = "0x76BB48")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000FA3")]
			[Address(RVA = "0x1BAD8A4", Offset = "0x1BAD8A4", VA = "0x1BAD8A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BB58", Offset = "0x76BB58")]
			set
			{
			}
		}

		[Token(Token = "0x17000237")]
		public int State
		{
			[Token(Token = "0x6000FA4")]
			[Address(RVA = "0x1BAD8AC", Offset = "0x1BAD8AC", VA = "0x1BAD8AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BB68", Offset = "0x76BB68")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000FA5")]
			[Address(RVA = "0x1BAD8B4", Offset = "0x1BAD8B4", VA = "0x1BAD8B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BB78", Offset = "0x76BB78")]
			set
			{
			}
		}

		[Token(Token = "0x17000238")]
		public int Prize
		{
			[Token(Token = "0x6000FA6")]
			[Address(RVA = "0x1BAD8BC", Offset = "0x1BAD8BC", VA = "0x1BAD8BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BB88", Offset = "0x76BB88")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000FA7")]
			[Address(RVA = "0x1BAD8C4", Offset = "0x1BAD8C4", VA = "0x1BAD8C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BB98", Offset = "0x76BB98")]
			set
			{
			}
		}

		[Token(Token = "0x17000239")]
		public DateTime ChgeDt
		{
			[Token(Token = "0x6000FA8")]
			[Address(RVA = "0x1BAD8CC", Offset = "0x1BAD8CC", VA = "0x1BAD8CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BBA8", Offset = "0x76BBA8")]
			get
			{
				return default(DateTime);
			}
			[Token(Token = "0x6000FA9")]
			[Address(RVA = "0x1BAD8D4", Offset = "0x1BAD8D4", VA = "0x1BAD8D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BBB8", Offset = "0x76BBB8")]
			set
			{
			}
		}

		[Token(Token = "0x1700023A")]
		public string ChallengeMode
		{
			[Token(Token = "0x6000FAA")]
			[Address(RVA = "0x1BAD8DC", Offset = "0x1BAD8DC", VA = "0x1BAD8DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BBC8", Offset = "0x76BBC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FAB")]
			[Address(RVA = "0x1BAD8E4", Offset = "0x1BAD8E4", VA = "0x1BAD8E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BBD8", Offset = "0x76BBD8")]
			set
			{
			}
		}

		[Token(Token = "0x1700023B")]
		public string ChallengeWeapon
		{
			[Token(Token = "0x6000FAC")]
			[Address(RVA = "0x1BAD8EC", Offset = "0x1BAD8EC", VA = "0x1BAD8EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BBE8", Offset = "0x76BBE8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FAD")]
			[Address(RVA = "0x1BAD8F4", Offset = "0x1BAD8F4", VA = "0x1BAD8F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BBF8", Offset = "0x76BBF8")]
			set
			{
			}
		}

		[Token(Token = "0x1700023C")]
		public int ChallengePrize
		{
			[Token(Token = "0x6000FAE")]
			[Address(RVA = "0x1BAD8FC", Offset = "0x1BAD8FC", VA = "0x1BAD8FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BC08", Offset = "0x76BC08")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000FAF")]
			[Address(RVA = "0x1BAD904", Offset = "0x1BAD904", VA = "0x1BAD904")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BC18", Offset = "0x76BC18")]
			set
			{
			}
		}

		[Token(Token = "0x1700023D")]
		public int ChallengePercentage
		{
			[Token(Token = "0x6000FB0")]
			[Address(RVA = "0x1BAD90C", Offset = "0x1BAD90C", VA = "0x1BAD90C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BC28", Offset = "0x76BC28")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000FB1")]
			[Address(RVA = "0x1BAD914", Offset = "0x1BAD914", VA = "0x1BAD914")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BC38", Offset = "0x76BC38")]
			set
			{
			}
		}

		[Token(Token = "0x1700023E")]
		public int Win
		{
			[Token(Token = "0x6000FB2")]
			[Address(RVA = "0x1BAD91C", Offset = "0x1BAD91C", VA = "0x1BAD91C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BC48", Offset = "0x76BC48")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000FB3")]
			[Address(RVA = "0x1BAD924", Offset = "0x1BAD924", VA = "0x1BAD924")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BC58", Offset = "0x76BC58")]
			set
			{
			}
		}

		[Token(Token = "0x1700023F")]
		public string EventType
		{
			[Token(Token = "0x6000FB4")]
			[Address(RVA = "0x1BAD92C", Offset = "0x1BAD92C", VA = "0x1BAD92C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BC68", Offset = "0x76BC68")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FB5")]
			[Address(RVA = "0x1BAD934", Offset = "0x1BAD934", VA = "0x1BAD934")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BC78", Offset = "0x76BC78")]
			set
			{
			}
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x1BAD93C", Offset = "0x1BAD93C", VA = "0x1BAD93C")]
		public ChallengeDetail()
		{
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x1BAD944", Offset = "0x1BAD944", VA = "0x1BAD944")]
		public ChallengeDetail(int uCId, int cId, string chgr, int uId, int rId, int state, int prize, DateTime chgeDt)
		{
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0x1BAD9C8", Offset = "0x1BAD9C8", VA = "0x1BAD9C8")]
		public ChallengeDetail(ChallengeResult challengeDetail)
		{
		}
	}

	[Token(Token = "0x20001C9")]
	public class ChallengeResult
	{
		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A528", Offset = "0x76A528")]
		private int <UCID>k__BackingField;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A538", Offset = "0x76A538")]
		private int <CID>k__BackingField;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A548", Offset = "0x76A548")]
		private string <User>k__BackingField;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A558", Offset = "0x76A558")]
		private int <UID>k__BackingField;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A568", Offset = "0x76A568")]
		private int <RID>k__BackingField;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A578", Offset = "0x76A578")]
		private int <State>k__BackingField;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A588", Offset = "0x76A588")]
		private int <Prize>k__BackingField;

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A598", Offset = "0x76A598")]
		private DateTime <ChgeDt>k__BackingField;

		[Token(Token = "0x17000240")]
		public int UCID
		{
			[Token(Token = "0x6000FB9")]
			[Address(RVA = "0x1BADA40", Offset = "0x1BADA40", VA = "0x1BADA40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BC88", Offset = "0x76BC88")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000FBA")]
			[Address(RVA = "0x1BADA48", Offset = "0x1BADA48", VA = "0x1BADA48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BC98", Offset = "0x76BC98")]
			set
			{
			}
		}

		[Token(Token = "0x17000241")]
		public int CID
		{
			[Token(Token = "0x6000FBB")]
			[Address(RVA = "0x1BADA50", Offset = "0x1BADA50", VA = "0x1BADA50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BCA8", Offset = "0x76BCA8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000FBC")]
			[Address(RVA = "0x1BADA58", Offset = "0x1BADA58", VA = "0x1BADA58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BCB8", Offset = "0x76BCB8")]
			set
			{
			}
		}

		[Token(Token = "0x17000242")]
		public string User
		{
			[Token(Token = "0x6000FBD")]
			[Address(RVA = "0x1BADA60", Offset = "0x1BADA60", VA = "0x1BADA60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BCC8", Offset = "0x76BCC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FBE")]
			[Address(RVA = "0x1BADA68", Offset = "0x1BADA68", VA = "0x1BADA68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BCD8", Offset = "0x76BCD8")]
			set
			{
			}
		}

		[Token(Token = "0x17000243")]
		public int UID
		{
			[Token(Token = "0x6000FBF")]
			[Address(RVA = "0x1BADA70", Offset = "0x1BADA70", VA = "0x1BADA70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BCE8", Offset = "0x76BCE8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000FC0")]
			[Address(RVA = "0x1BADA78", Offset = "0x1BADA78", VA = "0x1BADA78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BCF8", Offset = "0x76BCF8")]
			set
			{
			}
		}

		[Token(Token = "0x17000244")]
		public int RID
		{
			[Token(Token = "0x6000FC1")]
			[Address(RVA = "0x1BADA80", Offset = "0x1BADA80", VA = "0x1BADA80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BD08", Offset = "0x76BD08")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000FC2")]
			[Address(RVA = "0x1BADA88", Offset = "0x1BADA88", VA = "0x1BADA88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BD18", Offset = "0x76BD18")]
			set
			{
			}
		}

		[Token(Token = "0x17000245")]
		public int State
		{
			[Token(Token = "0x6000FC3")]
			[Address(RVA = "0x1BADA90", Offset = "0x1BADA90", VA = "0x1BADA90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BD28", Offset = "0x76BD28")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000FC4")]
			[Address(RVA = "0x1BADA98", Offset = "0x1BADA98", VA = "0x1BADA98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BD38", Offset = "0x76BD38")]
			set
			{
			}
		}

		[Token(Token = "0x17000246")]
		public int Prize
		{
			[Token(Token = "0x6000FC5")]
			[Address(RVA = "0x1BADAA0", Offset = "0x1BADAA0", VA = "0x1BADAA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BD48", Offset = "0x76BD48")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000FC6")]
			[Address(RVA = "0x1BADAA8", Offset = "0x1BADAA8", VA = "0x1BADAA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BD58", Offset = "0x76BD58")]
			set
			{
			}
		}

		[Token(Token = "0x17000247")]
		public DateTime ChgeDt
		{
			[Token(Token = "0x6000FC7")]
			[Address(RVA = "0x1BADAB0", Offset = "0x1BADAB0", VA = "0x1BADAB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BD68", Offset = "0x76BD68")]
			get
			{
				return default(DateTime);
			}
			[Token(Token = "0x6000FC8")]
			[Address(RVA = "0x1BADAB8", Offset = "0x1BADAB8", VA = "0x1BADAB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BD78", Offset = "0x76BD78")]
			set
			{
			}
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0x1BADAC0", Offset = "0x1BADAC0", VA = "0x1BADAC0")]
		public ChallengeResult()
		{
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0x1BADAC8", Offset = "0x1BADAC8", VA = "0x1BADAC8")]
		public ChallengeResult(int uCID, int cID, string user, int uID, int rID, int state, int prize, DateTime chgeDt)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001CA")]
	public class GatedPurchase : ISerializable
	{
		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int itemID;

		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DateTime unlockTime;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int weapon;

		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int priceOfItem;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int hasUnlocked;

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0x1BADB4C", Offset = "0x1BADB4C", VA = "0x1BADB4C")]
		public GatedPurchase(int data_itemID, DateTime data_unlockTime, int data_weapon, int data_priceOfItem, int data_hasUnlocked)
		{
		}

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0x1BADBA4", Offset = "0x1BADBA4", VA = "0x1BADBA4")]
		public GatedPurchase()
		{
		}

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0x1BADBAC", Offset = "0x1BADBAC", VA = "0x1BADBAC")]
		protected GatedPurchase(SerializationInfo info, StreamingContext context)
		{
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0x1BADE4C", Offset = "0x1BADE4C", VA = "0x1BADE4C", Slot = "4")]
		public void GetObjectData(SerializationInfo info, StreamingContext context)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001CB")]
	public class GatedPurchases : ISerializable
	{
		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isNew;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GatedPurchase[] storedGatedPurchases;

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0x1BADF54", Offset = "0x1BADF54", VA = "0x1BADF54")]
		public GatedPurchases(bool data_isNew, GatedPurchase[] data_storedGatedPurchases)
		{
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0x1BADF9C", Offset = "0x1BADF9C", VA = "0x1BADF9C")]
		public GatedPurchases()
		{
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0x1BADFA4", Offset = "0x1BADFA4", VA = "0x1BADFA4")]
		protected GatedPurchases(SerializationInfo info, StreamingContext context)
		{
		}

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0x1BAE13C", Offset = "0x1BAE13C", VA = "0x1BAE13C", Slot = "4")]
		public void GetObjectData(SerializationInfo info, StreamingContext context)
		{
		}
	}

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string _saveLocationPrefix;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static StorageManager instance;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Player player;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static RangeResult rangeResult;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string cachedFilename;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool saveLastResult;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PlaybackStorage playbackStorage;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public WeaponConfig weaponConfig;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool hasConfigChanged;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public WeaponStatistics weaponStatistics;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool shouldSaveStats;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UserScores userScores;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Challenge challenge;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Challenge downloadedChallenge;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GatedPurchase gatedpurchase;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GatedPurchases gatedpurchases;

	[Token(Token = "0x170001C6")]
	public static StorageManager Instance
	{
		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0x1984AE0", Offset = "0x1984AE0", VA = "0x1984AE0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0x1984854", Offset = "0x1984854", VA = "0x1984854")]
	public static string GetSaveLocationPrefix()
	{
		return null;
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0x1984C0C", Offset = "0x1984C0C", VA = "0x1984C0C")]
	public static string UrlEncodeString(string str)
	{
		return null;
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0x1984CF4", Offset = "0x1984CF4", VA = "0x1984CF4")]
	public static void WriteStringToFile(string str, string fileName, bool absolutePath = false)
	{
	}

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0x1984DF0", Offset = "0x1984DF0", VA = "0x1984DF0")]
	public static string ReadStringFromFile(string fileName, bool absolutePath = false)
	{
		return null;
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0x1984F0C", Offset = "0x1984F0C", VA = "0x1984F0C")]
	public static void WriteBytesToFile(byte[] bytes, string fileName)
	{
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0x1984FD0", Offset = "0x1984FD0", VA = "0x1984FD0")]
	public static byte[] ReadBytesFromFile(string fileName)
	{
		return null;
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0x19850F4", Offset = "0x19850F4", VA = "0x19850F4")]
	public static void removeFile(string fileName)
	{
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0x1985144", Offset = "0x1985144", VA = "0x1985144")]
	public static void RemoveAllFiles()
	{
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0x1985210", Offset = "0x1985210", VA = "0x1985210")]
	public static byte[] SerializeToBytes(object obj)
	{
		return null;
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0x19852E0", Offset = "0x19852E0", VA = "0x19852E0")]
	public static string SerializeToString(object obj)
	{
		return null;
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0x19854F0", Offset = "0x19854F0", VA = "0x19854F0")]
	public static string CompressToString(object obj)
	{
		return null;
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0x1985568", Offset = "0x1985568", VA = "0x1985568")]
	public static object Decompress(string objAsCompressedString)
	{
		return null;
	}

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0x1985934", Offset = "0x1985934", VA = "0x1985934")]
	public static object SafeDecompress(string unSafeObjAsCompressedString)
	{
		return null;
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0x19857F8", Offset = "0x19857F8", VA = "0x19857F8")]
	public static object Deserialize(byte[] bytes)
	{
		return null;
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0x19855FC", Offset = "0x19855FC", VA = "0x19855FC")]
	public static object Deserialize(string serializedObj)
	{
		return null;
	}

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0x1984F04", Offset = "0x1984F04", VA = "0x1984F04")]
	public static bool FileExists(string filePath)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0x1985A10", Offset = "0x1985A10", VA = "0x1985A10")]
	public static void BackupPlayer(string playerFileName, string playerBackupFileName)
	{
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0x1985AF4", Offset = "0x1985AF4", VA = "0x1985AF4")]
	public RangeResult loadResult(string fileName)
	{
		return null;
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0x1985C54", Offset = "0x1985C54", VA = "0x1985C54")]
	public void cacheResult(string fileName)
	{
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0x1985C5C", Offset = "0x1985C5C", VA = "0x1985C5C")]
	public void SaveLastResult(bool save)
	{
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0x1985C68", Offset = "0x1985C68", VA = "0x1985C68")]
	public void saveCachedResults()
	{
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0x1985D68", Offset = "0x1985D68", VA = "0x1985D68")]
	public void cacheLastResult(string filename)
	{
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0x1985D0C", Offset = "0x1985D0C", VA = "0x1985D0C")]
	public void saveResult(string fileName)
	{
	}

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0x1985D6C", Offset = "0x1985D6C", VA = "0x1985D6C")]
	public void saveReplay(string fileName)
	{
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0x1985E04", Offset = "0x1985E04", VA = "0x1985E04")]
	public static WeaponConfig loadConfig(string fileName)
	{
		return null;
	}

	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0x1985EF4", Offset = "0x1985EF4", VA = "0x1985EF4")]
	public static void saveConfig(string fileName)
	{
	}

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0x1986018", Offset = "0x1986018", VA = "0x1986018")]
	public WeaponStatistics loadStats(string fileName)
	{
		return null;
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0x198615C", Offset = "0x198615C", VA = "0x198615C")]
	public void ShouldSaveStats(bool save)
	{
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0x1986168", Offset = "0x1986168", VA = "0x1986168")]
	public void saveStats(string fileName)
	{
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0x1986228", Offset = "0x1986228", VA = "0x1986228")]
	public UserScores loadScores(string fileName)
	{
		return null;
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0x198639C", Offset = "0x198639C", VA = "0x198639C")]
	public void saveScores(string fileName)
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0x1986434", Offset = "0x1986434", VA = "0x1986434")]
	public Challenge loadChallenge(string fileName)
	{
		return null;
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0x19865A8", Offset = "0x19865A8", VA = "0x19865A8")]
	public void saveChallenge(string fileName)
	{
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0x1986640", Offset = "0x1986640", VA = "0x1986640")]
	public GatedPurchases loadGatedPurchases(string fileName)
	{
		return null;
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0x19867C4", Offset = "0x19867C4", VA = "0x19867C4")]
	public void saveGatedPurchases(string fileName)
	{
	}

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0x198685C", Offset = "0x198685C", VA = "0x198685C")]
	public StorageManager()
	{
	}
}
[Token(Token = "0x200011F")]
public static class StringCompression
{
	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0x19868C0", Offset = "0x19868C0", VA = "0x19868C0")]
	public static string CompressString(string text, bool secure = true)
	{
		return null;
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0x1986948", Offset = "0x1986948", VA = "0x1986948")]
	public static string DecompressString(string compressedText)
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x2000120")]
public class DataPrefs
{
	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<string, int> _intPrefs;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<string, float> _floatPrefs;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, string> _stringPrefs;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, byte[]> _bytePrefs;

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0x152022C", Offset = "0x152022C", VA = "0x152022C")]
	public void SetInt(string key, int value)
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0x15202FC", Offset = "0x15202FC", VA = "0x15202FC")]
	public void SetFloat(string key, float value)
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0x15203D8", Offset = "0x15203D8", VA = "0x15203D8")]
	public void SetString(string key, string value)
	{
	}

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0x15204A8", Offset = "0x15204A8", VA = "0x15204A8")]
	public void SetBytes(string key, byte[] value)
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0x1520578", Offset = "0x1520578", VA = "0x1520578")]
	public int GetInt(string key, int defaultVal = 0)
	{
		return default(int);
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0x1520620", Offset = "0x1520620", VA = "0x1520620")]
	public float GetFloat(string key, float defaultVal = 0f)
	{
		return default(float);
	}

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0x15206D4", Offset = "0x15206D4", VA = "0x15206D4")]
	public string GetString(string key, string defaultVal = "")
	{
		return null;
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0x1520774", Offset = "0x1520774", VA = "0x1520774")]
	public byte[] GetBytes(string key, [Optional] byte[] defaultVal)
	{
		return null;
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0x1520814", Offset = "0x1520814", VA = "0x1520814")]
	public bool ContainsKey(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0x1520910", Offset = "0x1520910", VA = "0x1520910")]
	public void DeleteKey(string key)
	{
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0x1520AAC", Offset = "0x1520AAC", VA = "0x1520AAC")]
	public DataPrefs()
	{
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0x1520AB4", Offset = "0x1520AB4", VA = "0x1520AB4")]
	public DataPrefs(bool init)
	{
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0x1520CA4", Offset = "0x1520CA4", VA = "0x1520CA4")]
	public void Validate()
	{
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0x1520E44", Offset = "0x1520E44", VA = "0x1520E44")]
	public void Merge(DataPrefs altPrefs)
	{
	}
}
[Token(Token = "0x2000121")]
public static class QuickJson
{
	[Token(Token = "0x20001CC")]
	public enum EnumSerializationMethod
	{
		[Token(Token = "0x4000AF4")]
		Name,
		[Token(Token = "0x4000AF5")]
		UnderlyingValue
	}

	[Token(Token = "0x20001CD")]
	public delegate void Serializer(StringBuilder sb, object obj);

	[Token(Token = "0x20001CE")]
	public delegate object Deserializer(Type type, JsonParser parser);

	[Token(Token = "0x20001CF")]
	private class FieldSerializer
	{
		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string nameAndColon;

		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public FieldInfo fieldInfo;

		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Serializer serializer;

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0x1BA8D24", Offset = "0x1BA8D24", VA = "0x1BA8D24")]
		public FieldSerializer(string nameAndColon, FieldInfo fieldInfo, Serializer serializer)
		{
		}
	}

	[Token(Token = "0x20001D0")]
	public class JsonParser
	{
		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int count;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private readonly int textLength;

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly string jsonText;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private StringBuilder subStringBuilder;

		[Token(Token = "0x17000248")]
		public bool End
		{
			[Token(Token = "0x6000FE9")]
			[Address(RVA = "0x1BA9968", Offset = "0x1BA9968", VA = "0x1BA9968")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0x1BA8D88", Offset = "0x1BA8D88", VA = "0x1BA8D88")]
		public JsonParser(string jsonText)
		{
		}

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0x1BA8E2C", Offset = "0x1BA8E2C", VA = "0x1BA8E2C")]
		public char Peek()
		{
			return default(char);
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0x1BA8E50", Offset = "0x1BA8E50", VA = "0x1BA8E50")]
		public char Read()
		{
			return default(char);
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0x1BA8E7C", Offset = "0x1BA8E7C", VA = "0x1BA8E7C")]
		public char PeekWithTrim()
		{
			return default(char);
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x1BA8EC8", Offset = "0x1BA8EC8", VA = "0x1BA8EC8")]
		public char ReadWithTrim()
		{
			return default(char);
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0x1BA8EF8", Offset = "0x1BA8EF8", VA = "0x1BA8EF8")]
		public void Trim()
		{
		}

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0x1BA8F48", Offset = "0x1BA8F48", VA = "0x1BA8F48")]
		private void _Skip()
		{
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0x1BA8FEC", Offset = "0x1BA8FEC", VA = "0x1BA8FEC")]
		public string ReadToken()
		{
			return null;
		}

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0x1BA9034", Offset = "0x1BA9034", VA = "0x1BA9034")]
		public bool ReadIfNull()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0x1BA9058", Offset = "0x1BA9058", VA = "0x1BA9058")]
		private bool _ReadIfNull()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0x1BA9128", Offset = "0x1BA9128", VA = "0x1BA9128")]
		public void ReadSpecifyChar(char spec)
		{
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0x1BA93B8", Offset = "0x1BA93B8", VA = "0x1BA93B8")]
		public string ReadString()
		{
			return null;
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0x1BA96E4", Offset = "0x1BA96E4", VA = "0x1BA96E4")]
		public void SkipValue()
		{
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0x1BA9674", Offset = "0x1BA9674", VA = "0x1BA9674")]
		public FormatException CreateFormatException()
		{
			return null;
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x1BA9BB0", Offset = "0x1BA9BB0", VA = "0x1BA9BB0")]
		public OverflowException CreateOverflowException()
		{
			return null;
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x1BA9978", Offset = "0x1BA9978", VA = "0x1BA9978")]
		private string _GetExceptionText()
		{
			return null;
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x1BA9C20", Offset = "0x1BA9C20", VA = "0x1BA9C20")]
		public bool ReadBool()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x1BA9DA4", Offset = "0x1BA9DA4", VA = "0x1BA9DA4")]
		private bool _ReadNegativeSign()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x1BA9DF8", Offset = "0x1BA9DF8", VA = "0x1BA9DF8")]
		public sbyte ReadInt8()
		{
			return default(sbyte);
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x1BAA070", Offset = "0x1BAA070", VA = "0x1BAA070")]
		public short ReadInt16()
		{
			return default(short);
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x1BAA2F0", Offset = "0x1BAA2F0", VA = "0x1BAA2F0")]
		public int ReadInt32()
		{
			return default(int);
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x1BAA588", Offset = "0x1BAA588", VA = "0x1BAA588")]
		public long ReadInt64()
		{
			return default(long);
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x1BAA81C", Offset = "0x1BAA81C", VA = "0x1BAA81C")]
		public byte ReadUInt8()
		{
			return default(byte);
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x1BAAA5C", Offset = "0x1BAAA5C", VA = "0x1BAAA5C")]
		public ushort ReadUInt16()
		{
			return default(ushort);
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x1BAAC9C", Offset = "0x1BAAC9C", VA = "0x1BAAC9C")]
		public uint ReadUInt32()
		{
			return default(uint);
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x1BAAEE8", Offset = "0x1BAAEE8", VA = "0x1BAAEE8")]
		public ulong ReadUInt64()
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x20001D1")]
	public class DeserializeEnumerator<T> : IEnumerator<T>, IEnumerator, IDisposable, IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T current;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Deserializer deserializer;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private JsonParser parser;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Type type;

		[Token(Token = "0x17000249")]
		public T Current
		{
			[Token(Token = "0x6000FF9")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x1700024A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000FFA")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FF7")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000FF8")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6000FFB")]
		public DeserializeEnumerator(JsonParser parser, Type type)
		{
		}

		[Token(Token = "0x6000FFC")]
		public bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FFD")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000FFE")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static EnumSerializationMethod enumSerializationMethod;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Type[] serializerrArgs;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static Type[] deserializerArgs;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static Dictionary<Type, List<FieldSerializer>> fieldSerializerCache;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static Dictionary<Type, Serializer> serializerCache;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static Dictionary<Type, Deserializer> deserializerCache;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static byte[] encodeCharaTable;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static byte[] decodeCharaTable;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static byte[] hexDecodeTable;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static bool[] jsonSeparator;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static char[] hexBuff;

	[Token(Token = "0x40007B1")]
	public const string DATE_FORMAT = "yyyy-MM-dd HH:mm:ss";

	[Token(Token = "0x40007B2")]
	public const BindingFlags BINDING_FLAGS = BindingFlags.Instance | BindingFlags.Public | BindingFlags.NonPublic;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static char[] numberBuff;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static FieldInfo[] hash128Fields;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static char[] hash128Buff;

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0x14D29E4", Offset = "0x14D29E4", VA = "0x14D29E4")]
	public static void RegisterSerializer(Type type, Serializer serializer)
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0x14D2AD4", Offset = "0x14D2AD4", VA = "0x14D2AD4")]
	public static void RegisterDeserializer(Type type, Deserializer deserializer)
	{
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0x14D2BC4", Offset = "0x14D2BC4", VA = "0x14D2BC4")]
	public static string Serialize(object obj)
	{
		return null;
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0x14D2C68", Offset = "0x14D2C68", VA = "0x14D2C68")]
	private static void _Serialize(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0x14D2DB4", Offset = "0x14D2DB4", VA = "0x14D2DB4")]
	private static Serializer _GetSerializer(Type type)
	{
		return null;
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0x14D3454", Offset = "0x14D3454", VA = "0x14D3454")]
	private static void _SerializeArray(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0x14D3980", Offset = "0x14D3980", VA = "0x14D3980")]
	private static void _SerializeList(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0x14D3D10", Offset = "0x14D3D10", VA = "0x14D3D10")]
	private static void _SerializeDictionary(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0x14D4298", Offset = "0x14D4298", VA = "0x14D4298")]
	private static void _SerializeHashSet(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0x14D4678", Offset = "0x14D4678", VA = "0x14D4678")]
	private static void _SerializeObject(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0x14D2D3C", Offset = "0x14D2D3C", VA = "0x14D2D3C")]
	private static bool _SerializeIfNull(StringBuilder sb, object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0x14D4B2C", Offset = "0x14D4B2C", VA = "0x14D4B2C")]
	private static void _Register(Type type, Serializer serializer, Deserializer deserializer)
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0x14D4C00", Offset = "0x14D4C00", VA = "0x14D4C00")]
	static QuickJson()
	{
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0x14D6608", Offset = "0x14D6608", VA = "0x14D6608")]
	public static int HexToInt(char ch)
	{
		return default(int);
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0x14D66DC", Offset = "0x14D66DC", VA = "0x14D66DC")]
	public static char IntToHex(int i)
	{
		return default(char);
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0x14D66F4", Offset = "0x14D66F4", VA = "0x14D66F4")]
	public static char IntToHex(uint i)
	{
		return default(char);
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0x14D670C", Offset = "0x14D670C", VA = "0x14D670C")]
	public static bool IsDigit(char ch)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0x14D6720", Offset = "0x14D6720", VA = "0x14D6720")]
	public static bool IsSpace(char ch)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0x14D6730", Offset = "0x14D6730", VA = "0x14D6730")]
	public static bool IsJsonSeparator(char ch)
	{
		return default(bool);
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0x14D680C", Offset = "0x14D680C", VA = "0x14D680C")]
	public static char ToUpper(char ch)
	{
		return default(char);
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0x14D6814", Offset = "0x14D6814", VA = "0x14D6814")]
	private static void _ToString(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0x14D685C", Offset = "0x14D685C", VA = "0x14D685C")]
	private static void _SerializeSByte(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0x14D6AD0", Offset = "0x14D6AD0", VA = "0x14D6AD0")]
	private static void _SerializeInt16(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0x14D6D44", Offset = "0x14D6D44", VA = "0x14D6D44")]
	private static void _SerializeInt32(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0x14D6FB8", Offset = "0x14D6FB8", VA = "0x14D6FB8")]
	private static void _SerializeInt64(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0x14D7224", Offset = "0x14D7224", VA = "0x14D7224")]
	private static void _SerializeByte(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0x14D73D0", Offset = "0x14D73D0", VA = "0x14D73D0")]
	private static void _SerializeUInt16(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0x14D7578", Offset = "0x14D7578", VA = "0x14D7578")]
	private static void _SerializeUInt32(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0x14D7718", Offset = "0x14D7718", VA = "0x14D7718")]
	private static void _SerializeUInt64(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0x14D78B8", Offset = "0x14D78B8", VA = "0x14D78B8")]
	private static void _SerializeBool(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0x14D7978", Offset = "0x14D7978", VA = "0x14D7978")]
	private static void _SerializeChar(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0x14D7A20", Offset = "0x14D7A20", VA = "0x14D7A20")]
	private static void _SerializeString(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0x14D7D44", Offset = "0x14D7D44", VA = "0x14D7D44")]
	private static void _SerializeEnumName(StringBuilder sb, object obj)
	{
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0x14D7DA8", Offset = "0x14D7DA8", VA = "0x14D7DA8")]
	private static void _SerializeVector2(StringBuilder sb, object vec)
	{
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0x14D7E80", Offset = "0x14D7E80", VA = "0x14D7E80")]
	private static void _SerializeVector3(StringBuilder sb, object vec)
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0x14D7F84", Offset = "0x14D7F84", VA = "0x14D7F84")]
	private static void _SerializeVector4(StringBuilder sb, object vec)
	{
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0x14D80A8", Offset = "0x14D80A8", VA = "0x14D80A8")]
	private static void _SerializeQuaternion(StringBuilder sb, object q)
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0x14D81CC", Offset = "0x14D81CC", VA = "0x14D81CC")]
	private static void _SerializeRect(StringBuilder sb, object rect)
	{
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0x14D8310", Offset = "0x14D8310", VA = "0x14D8310")]
	private static void _SerializeColor(StringBuilder sb, object color)
	{
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0x14D8434", Offset = "0x14D8434", VA = "0x14D8434")]
	private static void _SerializeColor32(StringBuilder sb, object color)
	{
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0x14D8658", Offset = "0x14D8658", VA = "0x14D8658")]
	public static string Hash128ToString(Hash128 hash)
	{
		return null;
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0x14D8894", Offset = "0x14D8894", VA = "0x14D8894")]
	private static void _SerializeHash128(StringBuilder sb, object hash)
	{
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0x14D8A50", Offset = "0x14D8A50", VA = "0x14D8A50")]
	private static void _SerializeDate(StringBuilder sb, object date)
	{
	}

	[Token(Token = "0x6000B0A")]
	public static T Deserialize<T>(string jsonText)
	{
		return (T)null;
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0x14D8B30", Offset = "0x14D8B30", VA = "0x14D8B30")]
	public static object Deserialize(string jsonText, Type type)
	{
		return null;
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0x14D8BCC", Offset = "0x14D8BCC", VA = "0x14D8BCC")]
	private static object _Deserialize(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0x14D9284", Offset = "0x14D9284", VA = "0x14D9284")]
	private static object _GetDefault(Type type)
	{
		return null;
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0x14D8C78", Offset = "0x14D8C78", VA = "0x14D8C78")]
	private static Deserializer _GetDeserializer(Type type)
	{
		return null;
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0x14D92CC", Offset = "0x14D92CC", VA = "0x14D92CC")]
	private static object _DeserializeArray(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0x14D95FC", Offset = "0x14D95FC", VA = "0x14D95FC")]
	private static List<object> _ParseArray(JsonParser parser, Type elementType, Deserializer deserializer, int nest, ref int[] length)
	{
		return null;
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0x14D9838", Offset = "0x14D9838", VA = "0x14D9838")]
	private static void _SetArray(Array array, int[] indices, List<object> listList, int nest)
	{
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0x14D9A3C", Offset = "0x14D9A3C", VA = "0x14D9A3C")]
	private static object _DeserializeList(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0x14D9C6C", Offset = "0x14D9C6C", VA = "0x14D9C6C")]
	private static object _DeserializeHashSet(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0x14D9E88", Offset = "0x14D9E88", VA = "0x14D9E88")]
	private static object _DeserializeDictionary(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0x14DA10C", Offset = "0x14DA10C", VA = "0x14DA10C")]
	private static object _DeserializeEnum(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0x14DA22C", Offset = "0x14DA22C", VA = "0x14DA22C")]
	private static object _DeserializeObject(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000B17")]
	[Address(RVA = "0x14DA3FC", Offset = "0x14DA3FC", VA = "0x14DA3FC")]
	private static object _DeserializeInt16(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000B18")]
	[Address(RVA = "0x14DA470", Offset = "0x14DA470", VA = "0x14DA470")]
	private static object _DeserializeInt32(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000B19")]
	[Address(RVA = "0x14DA4E4", Offset = "0x14DA4E4", VA = "0x14DA4E4")]
	private static object _DeserializeInt64(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0x14DA558", Offset = "0x14DA558", VA = "0x14DA558")]
	private static object _DeserializeUInt16(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0x14DA5CC", Offset = "0x14DA5CC", VA = "0x14DA5CC")]
	private static object _DeserializeUInt32(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0x14DA640", Offset = "0x14DA640", VA = "0x14DA640")]
	private static object _DeserializeUInt64(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0x14DA6B4", Offset = "0x14DA6B4", VA = "0x14DA6B4")]
	private static object _DeserializeString(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0x14DA6EC", Offset = "0x14DA6EC", VA = "0x14DA6EC")]
	private static object _DeserializeFloat(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0x14DA764", Offset = "0x14DA764", VA = "0x14DA764")]
	private static object _DeserializeDouble(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0x14DA800", Offset = "0x14DA800", VA = "0x14DA800")]
	private static object _DeserializeByte(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0x14DA874", Offset = "0x14DA874", VA = "0x14DA874")]
	private static object _DeserializeSByte(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0x14DA8E8", Offset = "0x14DA8E8", VA = "0x14DA8E8")]
	private static object _DeserializeBoolean(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0x14DA960", Offset = "0x14DA960", VA = "0x14DA960")]
	private static object _DeserializeDecimal(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0x14DAA00", Offset = "0x14DAA00", VA = "0x14DAA00")]
	private static object _DeserializeChar(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0x14DAA74", Offset = "0x14DAA74", VA = "0x14DAA74")]
	private static object _DeserializeVector2(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0x14DAB40", Offset = "0x14DAB40", VA = "0x14DAB40")]
	private static object _DeserializeVector3(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0x14DAC40", Offset = "0x14DAC40", VA = "0x14DAC40")]
	private static object _DeserializeVector4(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0x14DAD88", Offset = "0x14DAD88", VA = "0x14DAD88")]
	private static object _DeserializeQuaternion(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0x14DAED0", Offset = "0x14DAED0", VA = "0x14DAED0")]
	private static object _DeserializeRect(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0x14DB018", Offset = "0x14DB018", VA = "0x14DB018")]
	private static object _DeserializeColor(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0x14DB160", Offset = "0x14DB160", VA = "0x14DB160")]
	private static object _DeserializeColor32(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0x14DB2FC", Offset = "0x14DB2FC", VA = "0x14DB2FC")]
	public static Hash128 ParseHash128(string hex)
	{
		return default(Hash128);
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0x14DB504", Offset = "0x14DB504", VA = "0x14DB504")]
	private static object _DeserializeHash128(Type type, JsonParser parser)
	{
		return null;
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0x14DB6EC", Offset = "0x14DB6EC", VA = "0x14DB6EC")]
	private static object _DeserializeDate(Type type, JsonParser parser)
	{
		return null;
	}
}
[Token(Token = "0x2000122")]
public class TBMDebug
{
	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0x1986EC8", Offset = "0x1986EC8", VA = "0x1986EC8")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x76AE08", Offset = "0x76AE08")]
	public static void Log(object message, [Optional] UnityEngine.Object context)
	{
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0x1986F3C", Offset = "0x1986F3C", VA = "0x1986F3C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x76AE40", Offset = "0x76AE40")]
	public static void LogWarning(object message, [Optional] UnityEngine.Object context)
	{
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0x1986FB0", Offset = "0x1986FB0", VA = "0x1986FB0")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x76AE78", Offset = "0x76AE78")]
	public static void LogError(object message, [Optional] UnityEngine.Object context)
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0x1987024", Offset = "0x1987024", VA = "0x1987024")]
	public TBMDebug()
	{
	}
}
[Token(Token = "0x2000123")]
public class MCVoxelChunk : MonoBehaviour
{
	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MeshFilter filter;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Mesh mesh;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshCollider col;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer rend;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private uint posX;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private uint posY;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private uint posZ;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool colliderDirty;

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0x1781818", Offset = "0x1781818", VA = "0x1781818")]
	public void Initialize(uint x, uint y, uint z)
	{
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0x178199C", Offset = "0x178199C", VA = "0x178199C")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0x1781A10", Offset = "0x1781A10", VA = "0x1781A10")]
	public void Update()
	{
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0x1781AF8", Offset = "0x1781AF8", VA = "0x1781AF8")]
	public void UpdateMesh()
	{
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0x1781E44", Offset = "0x1781E44", VA = "0x1781E44")]
	public void DoMCVoxelOperation(uint shape, uint type, Vector3 position, float size, bool displace)
	{
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0x178203C", Offset = "0x178203C", VA = "0x178203C")]
	public MCVoxelChunk()
	{
	}
}
[Token(Token = "0x2000124")]
public enum VoxelCollisionType
{
	[Token(Token = "0x40007BF")]
	None,
	[Token(Token = "0x40007C0")]
	Box,
	[Token(Token = "0x40007C1")]
	FullConvexMesh,
	[Token(Token = "0x40007C2")]
	SimplifiedConvexMesh
}
[Token(Token = "0x2000125")]
public enum VoxelLightingType
{
	[Token(Token = "0x40007C4")]
	Default,
	[Token(Token = "0x40007C5")]
	LightProbeProxyVolume,
	[Token(Token = "0x40007C6")]
	ProbeAnchorParent,
	[Token(Token = "0x40007C7")]
	ProbeAnchorTarget
}
[Serializable]
[Token(Token = "0x2000126")]
public class MCVoxelObjectSettings
{
	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint width;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public uint height;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public uint depth;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public uint resolutionX;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public uint resolutionY;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public uint resolutionZ;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float cellScale;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool initialFill;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string file;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VoxelCollisionType destructionCollisionType;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string tag;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public VoxelLightingType lightingType;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string lightingTypeTargetName;

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0x17848E4", Offset = "0x17848E4", VA = "0x17848E4")]
	public MCVoxelObjectSettings()
	{
	}
}
[Token(Token = "0x2000127")]
public class MCVoxelObject : MonoBehaviour
{
	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MCVoxelShape m_shape;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<GameObject> m_probeOverrides;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MCVoxelChunk[][][] m_chunks;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject m_chunkParent;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MCVoxelObjectSettings m_curSettings;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 m_initialLocation;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MCVoxelShape m_curShape;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<GameObject> m_disconnectedObjects;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Mesh> m_disconnectedObjectMeshes;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int m_simplifiedMeshFaceCount;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] m_simplifiedVertices;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int[] m_simplifiedIndices;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool m_isActive;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GameObject discPrefab;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<IntersectionTest> m_tests;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private List<float> m_testLife;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<string, GameObject> m_probeOverrideDict;

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0x1782044", Offset = "0x1782044", VA = "0x1782044")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0x1782288", Offset = "0x1782288", VA = "0x1782288")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0x1782290", Offset = "0x1782290", VA = "0x1782290")]
	public void SetVoxelShape(MCVoxelShape shape)
	{
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0x1783518", Offset = "0x1783518", VA = "0x1783518")]
	public void ClearDestruction()
	{
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0x1783520", Offset = "0x1783520", VA = "0x1783520")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0x1783D78", Offset = "0x1783D78", VA = "0x1783D78")]
	private void DrawIntersectionTests()
	{
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0x1783E70", Offset = "0x1783E70", VA = "0x1783E70")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0x17842B4", Offset = "0x17842B4", VA = "0x17842B4")]
	private void DebugDrawIntegrityState()
	{
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0x1783674", Offset = "0x1783674", VA = "0x1783674")]
	private void GetDiscMesh()
	{
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0x17842E4", Offset = "0x17842E4", VA = "0x17842E4")]
	private Mesh GenerateSimplifiedMesh(Vector3[] vertices, int[] triangles)
	{
		return null;
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0x1784628", Offset = "0x1784628", VA = "0x1784628")]
	public MCVoxelObject()
	{
	}
}
[Serializable]
[Token(Token = "0x2000128")]
public class VoxelShapeOpRepeat
{
	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int count;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 offset;

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0x173903C", Offset = "0x173903C", VA = "0x173903C")]
	public VoxelShapeOpRepeat()
	{
	}
}
[Serializable]
[Token(Token = "0x2000129")]
public class VoxelShapeOp
{
	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public VoxelOpShape shape;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public VoxelOpType type;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 offset;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 size;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool displace;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public VoxelShapeOpRepeat repeat;

	[Token(Token = "0x6000B47")]
	[Address(RVA = "0x1739034", Offset = "0x1739034", VA = "0x1739034")]
	public VoxelShapeOp()
	{
	}
}
[Token(Token = "0x200012A")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7692C8", Offset = "0x7692C8")]
public class MCVoxelShape : ScriptableObject
{
	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MCVoxelObjectSettings objectSettings;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material material;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 shapeOffset;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<VoxelShapeOp> shapeOperations;

	[Token(Token = "0x6000B48")]
	[Address(RVA = "0x1784990", Offset = "0x1784990", VA = "0x1784990")]
	public MCVoxelShape()
	{
	}
}
[Token(Token = "0x200012B")]
public class RandomVoxelShape : MonoBehaviour
{
	[Token(Token = "0x20001D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769778", Offset = "0x769778")]
	private sealed class <SetRandomShape>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RandomVoxelShape <>4__this;

		[Token(Token = "0x1700024B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001002")]
			[Address(RVA = "0x1BAB79C", Offset = "0x1BAB79C", VA = "0x1BAB79C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700024C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001004")]
			[Address(RVA = "0x1BAB7E4", Offset = "0x1BAB7E4", VA = "0x1BAB7E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0x1BAB518", Offset = "0x1BAB518", VA = "0x1BAB518")]
		[DebuggerHidden]
		public <SetRandomShape>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0x1BAB544", Offset = "0x1BAB544", VA = "0x1BAB544", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0x1BAB548", Offset = "0x1BAB548", VA = "0x1BAB548", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0x1BAB7A4", Offset = "0x1BAB7A4", VA = "0x1BAB7A4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private MCVoxelShape[] m_randomShapes;

	[Token(Token = "0x6000B49")]
	[Address(RVA = "0x1A297C8", Offset = "0x1A297C8", VA = "0x1A297C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0x1A297F4", Offset = "0x1A297F4", VA = "0x1A297F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x76AEB0", Offset = "0x76AEB0")]
	private IEnumerator SetRandomShape()
	{
		return null;
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0x1A2986C", Offset = "0x1A2986C", VA = "0x1A2986C")]
	public RandomVoxelShape()
	{
	}
}
[Token(Token = "0x200012C")]
public class SDFDataBuildExport
{
	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0x1A2B8D0", Offset = "0x1A2B8D0", VA = "0x1A2B8D0")]
	public SDFDataBuildExport()
	{
	}
}
[Token(Token = "0x200012D")]
public class TBMDynamics : MonoBehaviour
{
	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected float m_integrityCheckTime;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int collidersUpdated;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float lastCheck;

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0x198702C", Offset = "0x198702C", VA = "0x198702C")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0x19870A0", Offset = "0x19870A0", VA = "0x19870A0")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0x1987114", Offset = "0x1987114", VA = "0x1987114")]
	public void Update()
	{
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0x1987288", Offset = "0x1987288", VA = "0x1987288")]
	public TBMDynamics()
	{
	}
}
[Token(Token = "0x200012E")]
public struct VoxelVertex
{
	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float u;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float v;
}
[Token(Token = "0x200012F")]
public enum VoxelOpShape
{
	[Token(Token = "0x40007FF")]
	Sphere,
	[Token(Token = "0x4000800")]
	Cube,
	[Token(Token = "0x4000801")]
	Cone
}
[Token(Token = "0x2000130")]
public enum VoxelOpType
{
	[Token(Token = "0x4000803")]
	Add,
	[Token(Token = "0x4000804")]
	Subtract,
	[Token(Token = "0x4000805")]
	Intersect
}
[Token(Token = "0x2000131")]
public struct IntersectionTest
{
	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float minX;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float minY;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float minZ;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float maxX;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float maxY;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float maxZ;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float posX;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float posY;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float posZ;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float sphereRadius;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float result;
}
[Token(Token = "0x2000132")]
public static class TBMDynamicsPlugin
{
	[Token(Token = "0x4000811")]
	private const string dllName = "TBMDynamicsUnityPlugin";

	[PreserveSig]
	[Token(Token = "0x6000B52")]
	[Address(RVA = "0x1987030", Offset = "0x1987030", VA = "0x1987030")]
	public static extern void Initialize();

	[PreserveSig]
	[Token(Token = "0x6000B53")]
	[Address(RVA = "0x19870A4", Offset = "0x19870A4", VA = "0x19870A4")]
	public static extern void Release();

	[PreserveSig]
	[Token(Token = "0x6000B54")]
	[Address(RVA = "0x19871A8", Offset = "0x19871A8", VA = "0x19871A8")]
	public static extern void UpdateDynamics();

	[PreserveSig]
	[Token(Token = "0x6000B55")]
	[Address(RVA = "0x198729C", Offset = "0x198729C", VA = "0x198729C")]
	public static extern void Reset();

	[PreserveSig]
	[Token(Token = "0x6000B56")]
	[Address(RVA = "0x1987218", Offset = "0x1987218", VA = "0x1987218")]
	public static extern void RunIntegrityCheck();

	[PreserveSig]
	[Token(Token = "0x6000B57")]
	[Address(RVA = "0x198730C", Offset = "0x198730C", VA = "0x198730C")]
	public static extern bool HasDisconnectedMesh();

	[PreserveSig]
	[Token(Token = "0x6000B58")]
	[Address(RVA = "0x1987388", Offset = "0x1987388", VA = "0x1987388")]
	public unsafe static extern void GetDisconnectedMesh(uint* vertCount, VoxelVertex** vertices, uint* indexCount, ushort** indices, float* x, float* y, float* z);

	[PreserveSig]
	[Token(Token = "0x6000B59")]
	[Address(RVA = "0x1987450", Offset = "0x1987450", VA = "0x1987450")]
	public unsafe static extern void GetIntegrityGrid(byte** integrityGrid, uint* gridLength);

	[PreserveSig]
	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0x19874DC", Offset = "0x19874DC", VA = "0x19874DC")]
	public static extern bool IsChunkDirty(uint x, uint y, uint z);

	[PreserveSig]
	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0x1987578", Offset = "0x1987578", VA = "0x1987578")]
	public unsafe static extern void GetChunkMesh(uint x, uint y, uint z, uint* vertCount, VoxelVertex** vertices, uint* indexCount, ushort** indices);

	[PreserveSig]
	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0x1987640", Offset = "0x1987640", VA = "0x1987640")]
	public static extern void NotifyChunkMeshUpdated(uint x, uint y, uint z);

	[PreserveSig]
	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0x19876D4", Offset = "0x19876D4", VA = "0x19876D4")]
	public static extern bool CreateMCVoxelObject(uint width, uint height, uint depth, uint resX, uint resY, uint resZ, float scale, bool fill);

	[PreserveSig]
	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0x19877B4", Offset = "0x19877B4", VA = "0x19877B4")]
	public static extern bool CreateMCVoxelObjectFromFile(uint width, uint height, uint depth, uint resX, uint resY, uint resZ, float scale, bool fill, string file);

	[PreserveSig]
	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0x19878BC", Offset = "0x19878BC", VA = "0x19878BC")]
	public static extern void DestroyMCVoxelObject();

	[PreserveSig]
	[Token(Token = "0x6000B60")]
	[Address(RVA = "0x198792C", Offset = "0x198792C", VA = "0x198792C")]
	public static extern void DoMCVoxelOperation(uint shape, uint type, float x, float y, float z, float sx, float sy, float sz, bool displace);

	[PreserveSig]
	[Token(Token = "0x6000B61")]
	[Address(RVA = "0x1987A0C", Offset = "0x1987A0C", VA = "0x1987A0C")]
	public static extern bool HasIntersectionTests();

	[PreserveSig]
	[Token(Token = "0x6000B62")]
	[Address(RVA = "0x1987A88", Offset = "0x1987A88", VA = "0x1987A88")]
	public static extern void GetIntersection(ref IntersectionTest test);
}
[Token(Token = "0x2000133")]
public class RequireInterfaceAttribute : PropertyAttribute
{
	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769DFC", Offset = "0x769DFC")]
	private Type <requiredType>k__BackingField;

	[Token(Token = "0x170001C7")]
	public Type requiredType
	{
		[Token(Token = "0x6000B63")]
		[Address(RVA = "0x1A2A14C", Offset = "0x1A2A14C", VA = "0x1A2A14C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AF10", Offset = "0x76AF10")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B64")]
		[Address(RVA = "0x1A2A154", Offset = "0x1A2A154", VA = "0x1A2A154")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AF20", Offset = "0x76AF20")]
		private set
		{
		}
	}

	[Token(Token = "0x6000B65")]
	[Address(RVA = "0x1A2A15C", Offset = "0x1A2A15C", VA = "0x1A2A15C")]
	public RequireInterfaceAttribute(Type type)
	{
	}
}
[Serializable]
[Token(Token = "0x2000134")]
public class TBMAttachPoint : MonoBehaviour
{
	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected string m_pointName;

	[Token(Token = "0x170001C8")]
	public string pointName
	{
		[Token(Token = "0x6000B66")]
		[Address(RVA = "0x1986DF0", Offset = "0x1986DF0", VA = "0x1986DF0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B67")]
	[Address(RVA = "0x1986DF8", Offset = "0x1986DF8", VA = "0x1986DF8")]
	public static TBMAttachPoint GetAttachPoint(GameObject obj, string name)
	{
		return null;
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0x1986EC0", Offset = "0x1986EC0", VA = "0x1986EC0")]
	public TBMAttachPoint()
	{
	}
}
[Serializable]
[Token(Token = "0x2000135")]
public class TBMMath
{
	[Token(Token = "0x6000B69")]
	[Address(RVA = "0x1987B08", Offset = "0x1987B08", VA = "0x1987B08")]
	public static Vector3 ClosestPointOnLine(Vector3 start, Vector3 end, Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0x1987C34", Offset = "0x1987C34", VA = "0x1987C34")]
	public static float NormalizeValue(float min, float max, float val)
	{
		return default(float);
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0x1987C44", Offset = "0x1987C44", VA = "0x1987C44")]
	public static float RemapNumber(float num, float low1, float high1, float low2, float high2)
	{
		return default(float);
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0x1987C60", Offset = "0x1987C60", VA = "0x1987C60")]
	public static float RemapNumberClamped(float num, float low1, float high1, float low2, float high2)
	{
		return default(float);
	}

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0x1987CD4", Offset = "0x1987CD4", VA = "0x1987CD4")]
	public static Vector3 GetParabolicPosition(Vector3 start, Vector3 initialVelocity, Vector3 acceleration, float time)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0x1987D20", Offset = "0x1987D20", VA = "0x1987D20")]
	public static float SignedAngleBetween(Vector3 a, Vector3 b, Vector3 n)
	{
		return default(float);
	}

	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0x1987DDC", Offset = "0x1987DDC", VA = "0x1987DDC")]
	public static float SignedAngleBetween360(Vector3 a, Vector3 b, Vector3 n)
	{
		return default(float);
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0x1987E1C", Offset = "0x1987E1C", VA = "0x1987E1C")]
	public static bool Between(float num, float min, float max)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0x1987E34", Offset = "0x1987E34", VA = "0x1987E34")]
	public static bool Between(int num, int min, int max)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0x1987E4C", Offset = "0x1987E4C", VA = "0x1987E4C")]
	public static bool BetweenInclusive(int num, int min, int max)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B73")]
	[Address(RVA = "0x1987E64", Offset = "0x1987E64", VA = "0x1987E64")]
	public static Vector3 RandomNormalisedDirection(Transform point, Transform direction, float distance, float sizeOfUnitSphere, bool debug = false)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0x198801C", Offset = "0x198801C", VA = "0x198801C")]
	public static Vector3 GetPosition(Matrix4x4 matrix)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0x1988028", Offset = "0x1988028", VA = "0x1988028")]
	public static bool IsInsideCollider(Collider c, Vector3 point)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0x19880D0", Offset = "0x19880D0", VA = "0x19880D0")]
	public TBMMath()
	{
	}
}
[Token(Token = "0x2000136")]
public class BatchMeshGroup
{
	[Token(Token = "0x6000B77")]
	[Address(RVA = "0x1ABE70C", Offset = "0x1ABE70C", VA = "0x1ABE70C")]
	public BatchMeshGroup()
	{
	}
}
[Token(Token = "0x2000137")]
public class TBMMeshBatch : MonoBehaviour
{
	[Token(Token = "0x6000B78")]
	[Address(RVA = "0x19880D8", Offset = "0x19880D8", VA = "0x19880D8")]
	public TBMMeshBatch()
	{
	}
}
[Serializable]
[Token(Token = "0x2000138")]
public class TBMRandomTransform : MonoBehaviour
{
	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected bool local;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	protected Vector3 minPosition;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected Vector3 maxPosition;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	protected Vector3 minAngle;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected Vector3 maxAngle;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	protected Vector3 minScale;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	protected Vector3 maxScale;

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0x198CA90", Offset = "0x198CA90", VA = "0x198CA90")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0x198CBD0", Offset = "0x198CBD0", VA = "0x198CBD0")]
	private Vector3 Range(Vector3 min, Vector3 max)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0x198CC48", Offset = "0x198CC48", VA = "0x198CC48")]
	public TBMRandomTransform()
	{
	}
}
[Serializable]
[Token(Token = "0x2000139")]
public class TBMUtility
{
	[Token(Token = "0x20001D3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769788", Offset = "0x769788")]
	private sealed class <>c__DisplayClass15_0<T>
	{
		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Predicate<T>[] predicates;

		[Token(Token = "0x6001005")]
		public <>c__DisplayClass15_0()
		{
		}

		[Token(Token = "0x6001006")]
		internal bool <And>b__0(T item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20001D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769798", Offset = "0x769798")]
	private sealed class <>c__DisplayClass15_1<T>
	{
		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T item;

		[Token(Token = "0x6001007")]
		public <>c__DisplayClass15_1()
		{
		}

		[Token(Token = "0x6001008")]
		internal bool <And>b__1(Predicate<T> predicate)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20001D5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7697A8", Offset = "0x7697A8")]
	private sealed class <>c__DisplayClass16_0<T>
	{
		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Predicate<T>[] predicates;

		[Token(Token = "0x6001009")]
		public <>c__DisplayClass16_0()
		{
		}

		[Token(Token = "0x600100A")]
		internal bool <Or>b__0(T item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20001D6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7697B8", Offset = "0x7697B8")]
	private sealed class <>c__DisplayClass16_1<T>
	{
		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T item;

		[Token(Token = "0x600100B")]
		public <>c__DisplayClass16_1()
		{
		}

		[Token(Token = "0x600100C")]
		internal bool <Or>b__1(Predicate<T> predicate)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20001D7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7697C8", Offset = "0x7697C8")]
	private sealed class <>c__DisplayClass17_0<T>
	{
		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<Predicate<T>> predicates;

		[Token(Token = "0x600100D")]
		public <>c__DisplayClass17_0()
		{
		}

		[Token(Token = "0x600100E")]
		internal bool <And>b__0(T item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20001D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7697D8", Offset = "0x7697D8")]
	private sealed class <>c__DisplayClass18_0<T>
	{
		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<Predicate<T>> predicates;

		[Token(Token = "0x600100F")]
		public <>c__DisplayClass18_0()
		{
		}

		[Token(Token = "0x6001010")]
		internal bool <Or>b__0(T item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0x198CC94", Offset = "0x198CC94", VA = "0x198CC94")]
	public static void SetRendererLayers(GameObject obj, string layerName)
	{
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0x198CD6C", Offset = "0x198CD6C", VA = "0x198CD6C")]
	public static void SwapAllMaterials(GameObject obj, Material newMaterial)
	{
	}

	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0x198CE58", Offset = "0x198CE58", VA = "0x198CE58")]
	public static void SwapMaterialsThatMatchTarget(GameObject obj, Material swapMaterial, Material newMaterial, [Optional] List<WeaponSkinPairing> pairings)
	{
	}

	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0x198D1E4", Offset = "0x198D1E4", VA = "0x198D1E4")]
	public static void SwapAllMaterials(GameObject obj, string materialPath)
	{
	}

	[Token(Token = "0x6000B80")]
	[Address(RVA = "0x198D348", Offset = "0x198D348", VA = "0x198D348")]
	public static void SetParentWithScale(GameObject obj, Transform parent)
	{
	}

	[Token(Token = "0x6000B81")]
	[Address(RVA = "0x198D3D8", Offset = "0x198D3D8", VA = "0x198D3D8")]
	public static void SetParentZero(GameObject obj, Transform parent)
	{
	}

	[Token(Token = "0x6000B82")]
	[Address(RVA = "0x198D3E0", Offset = "0x198D3E0", VA = "0x198D3E0")]
	public static void SetParentZero(GameObject obj, Transform parent, bool retainScale)
	{
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0x198D4E8", Offset = "0x198D4E8", VA = "0x198D4E8")]
	public static void CopyTransform(Transform fromT, Transform toT, bool copyScale)
	{
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0x198D574", Offset = "0x198D574", VA = "0x198D574")]
	public Vector3 CalculateAngularVelocityCorrection(Vector3 currentUp, Vector3 desiredUp, Vector3 currentRight, Vector3 desiredRight, float rotationSpeed)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B85")]
	public static T[] Concat<T>(T[] array1, T[] array2)
	{
		return null;
	}

	[Token(Token = "0x6000B86")]
	public static T[][] Concat<T>(T[][] array1, T[][] array2)
	{
		return null;
	}

	[Token(Token = "0x6000B87")]
	public static T[][][] Concat<T>(T[][][] array1, T[][][] array2)
	{
		return null;
	}

	[Token(Token = "0x6000B88")]
	public static T[] MergeArrays<T>(IReadOnlyList<T> array1, IReadOnlyList<T> array2, [Optional] Func<T, T, T> matchingIndexComparison)
	{
		return null;
	}

	[Token(Token = "0x6000B89")]
	public static string LogArray<T>(T[] array1, string prefix, Func<T, string, string> process)
	{
		return null;
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0x198D630", Offset = "0x198D630", VA = "0x198D630")]
	public static string CapitaliseFirst(string str)
	{
		return null;
	}

	[Token(Token = "0x6000B8B")]
	public static Predicate<T> And<T>(params Predicate<T>[] predicates)
	{
		return null;
	}

	[Token(Token = "0x6000B8C")]
	public static Predicate<T> Or<T>(params Predicate<T>[] predicates)
	{
		return null;
	}

	[Token(Token = "0x6000B8D")]
	public static Predicate<T> And<T>(List<Predicate<T>> predicates)
	{
		return null;
	}

	[Token(Token = "0x6000B8E")]
	public static Predicate<T> Or<T>(List<Predicate<T>> predicates)
	{
		return null;
	}

	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0x198D700", Offset = "0x198D700", VA = "0x198D700")]
	public static Quaternion Lerp(Quaternion p, Quaternion q, float t, bool shortWay)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0x198D84C", Offset = "0x198D84C", VA = "0x198D84C")]
	public static Quaternion Slerp(Quaternion p, Quaternion q, float t, bool shortWay)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0x198D9C0", Offset = "0x198D9C0", VA = "0x198D9C0")]
	public static Quaternion Add(Quaternion p, Quaternion q)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0x198D80C", Offset = "0x198D80C", VA = "0x198D80C")]
	public static Quaternion ScalarMultiply(Quaternion input, float scalar)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0x198DA00", Offset = "0x198DA00", VA = "0x198DA00")]
	public static string GetHeirachyPathForObject(GameObject target)
	{
		return null;
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0x198DB08", Offset = "0x198DB08", VA = "0x198DB08")]
	public static string GetHeirachyPathForTransform(Transform target)
	{
		return null;
	}

	[Token(Token = "0x6000B95")]
	[Address(RVA = "0x198DC48", Offset = "0x198DC48", VA = "0x198DC48")]
	private static string GetArg(string name)
	{
		return null;
	}

	[Token(Token = "0x6000B96")]
	[Address(RVA = "0x198DD00", Offset = "0x198DD00", VA = "0x198DD00")]
	public TBMUtility()
	{
	}
}
[Serializable]
[Token(Token = "0x200013A")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x769334", Offset = "0x769334")]
public class WeaponSkinPairing : ScriptableObject
{
	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected MaterialReference m_baseMaterialReference;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected MaterialReference m_skinMaterialReference;

	[Token(Token = "0x170001C9")]
	public Material baseMaterial
	{
		[Token(Token = "0x6000B97")]
		[Address(RVA = "0x1739070", Offset = "0x1739070", VA = "0x1739070")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001CA")]
	public Material skinMaterial
	{
		[Token(Token = "0x6000B98")]
		[Address(RVA = "0x17390C4", Offset = "0x17390C4", VA = "0x17390C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B99")]
	[Address(RVA = "0x1739118", Offset = "0x1739118", VA = "0x1739118")]
	public bool CompareAgainstBase(Material material)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0x17391BC", Offset = "0x17391BC", VA = "0x17391BC")]
	public WeaponSkinPairing()
	{
	}
}
[Token(Token = "0x200013B")]
public class TBMPrefs
{
	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string[] PreferenceArray;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string m_savePrefix;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string m_developmentSavePrefix;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static bool validate;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private static bool init;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static string filePath;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static DataPrefs _prefs;

	[Token(Token = "0x170001CB")]
	private static string SavePrefix
	{
		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x19880E0", Offset = "0x19880E0", VA = "0x19880E0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001CC")]
	public static DataPrefs Prefs
	{
		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0x19883B8", Offset = "0x19883B8", VA = "0x19883B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0x19881DC", Offset = "0x19881DC", VA = "0x19881DC")]
	public static string GetSavePrefix()
	{
		return null;
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0x1988234", Offset = "0x1988234", VA = "0x1988234")]
	public static void SetSavePrefix(string prefix)
	{
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0x198845C", Offset = "0x198845C", VA = "0x198845C")]
	public static void Init()
	{
	}

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0x19884F0", Offset = "0x19884F0", VA = "0x19884F0")]
	private static void LoadPrefs()
	{
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0x19889C4", Offset = "0x19889C4", VA = "0x19889C4")]
	private static void SavePrefs()
	{
	}

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0x1988A78", Offset = "0x1988A78", VA = "0x1988A78")]
	public static void Merge(DataPrefs altPrefs)
	{
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0x1988B2C", Offset = "0x1988B2C", VA = "0x1988B2C")]
	public static void Save()
	{
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0x1988BCC", Offset = "0x1988BCC", VA = "0x1988BCC")]
	public static void DeleteKey(string key)
	{
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0x1988C6C", Offset = "0x1988C6C", VA = "0x1988C6C")]
	public static bool GetBool(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0x1988DDC", Offset = "0x1988DDC", VA = "0x1988DDC")]
	public static bool GetBool(string key, bool defaultValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0x1988F5C", Offset = "0x1988F5C", VA = "0x1988F5C")]
	public static float GetFloat(string key)
	{
		return default(float);
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0x19890BC", Offset = "0x19890BC", VA = "0x19890BC")]
	public static float GetFloat(string key, float defaultValue)
	{
		return default(float);
	}

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0x198922C", Offset = "0x198922C", VA = "0x198922C")]
	public static int GetInt(string key)
	{
		return default(int);
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0x1989390", Offset = "0x1989390", VA = "0x1989390")]
	public static int GetInt(string key, int defaultValue)
	{
		return default(int);
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0x1989534", Offset = "0x1989534", VA = "0x1989534")]
	public static string GetString(string key)
	{
		return null;
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0x19896E0", Offset = "0x19896E0", VA = "0x19896E0")]
	public static bool HasKey(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0x19897B8", Offset = "0x19897B8", VA = "0x19897B8")]
	public static void SetBool(string key, bool val)
	{
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0x1989850", Offset = "0x1989850", VA = "0x1989850")]
	public static void SetFloat(string key, float val)
	{
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0x19898E8", Offset = "0x19898E8", VA = "0x19898E8")]
	public static void SetInt(string key, int val)
	{
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0x1989980", Offset = "0x1989980", VA = "0x1989980")]
	public static void SetString(string key, string val)
	{
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0x1989A18", Offset = "0x1989A18", VA = "0x1989A18")]
	public static void DeleteGlobalKey(string key)
	{
	}

	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0x1989A94", Offset = "0x1989A94", VA = "0x1989A94")]
	public static float GetGlobalFloat(string key)
	{
		return default(float);
	}

	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0x1989BA4", Offset = "0x1989BA4", VA = "0x1989BA4")]
	public static bool GetGlobalBool(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0x1989CC4", Offset = "0x1989CC4", VA = "0x1989CC4")]
	public static int GetGlobalInt(string key)
	{
		return default(int);
	}

	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0x1989DD8", Offset = "0x1989DD8", VA = "0x1989DD8")]
	public static string GetGlobalString(string key)
	{
		return null;
	}

	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0x1989F00", Offset = "0x1989F00", VA = "0x1989F00")]
	public static bool HasGlobalKey(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0x1989F90", Offset = "0x1989F90", VA = "0x1989F90")]
	public static void SetGlobalFloat(string key, float val)
	{
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0x198A010", Offset = "0x198A010", VA = "0x198A010")]
	public static void SetGlobalInt(string key, int val)
	{
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0x198A090", Offset = "0x198A090", VA = "0x198A090")]
	public static void SetGlobalString(string key, string val)
	{
	}

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0x198A110", Offset = "0x198A110", VA = "0x198A110")]
	public static void SetGlobalBool(string key, bool val)
	{
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0x198A190", Offset = "0x198A190", VA = "0x198A190")]
	public static void DeleteObscuredKey(string key)
	{
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0x198A2E4", Offset = "0x198A2E4", VA = "0x198A2E4")]
	public static int GetObscuredInt(string key, int defaultValue = 0)
	{
		return default(int);
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0x198A4D0", Offset = "0x198A4D0", VA = "0x198A4D0")]
	public static void SetObscuredInt(string key, int value)
	{
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0x198A720", Offset = "0x198A720", VA = "0x198A720")]
	public static string GetObscuredString(string key, string defaultValue = "")
	{
		return null;
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0x198A8EC", Offset = "0x198A8EC", VA = "0x198A8EC")]
	public static void SetObscuredString(string key, string value)
	{
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0x198A5B4", Offset = "0x198A5B4", VA = "0x198A5B4")]
	private static string GetData(string key, string defaultValueRaw)
	{
		return null;
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0x198A9C4", Offset = "0x198A9C4", VA = "0x198A9C4")]
	public static void ClearAllPreferences()
	{
	}

	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0x19886E4", Offset = "0x19886E4", VA = "0x19886E4")]
	public static void Validate()
	{
	}

	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0x198AAF4", Offset = "0x198AAF4", VA = "0x198AAF4")]
	public TBMPrefs()
	{
	}
}
[Token(Token = "0x200013C")]
public enum HandPoseId
{
	[Token(Token = "0x4000825")]
	Default,
	[Token(Token = "0x4000826")]
	Generic,
	[Token(Token = "0x4000827")]
	PingPongBall,
	[Token(Token = "0x4000828")]
	Controller,
	[Token(Token = "0x4000829")]
	PistolGrip,
	[Token(Token = "0x400082A")]
	BarrelGrip,
	[Token(Token = "0x400082B")]
	M870Grip,
	[Token(Token = "0x400082C")]
	P90Grip,
	[Token(Token = "0x400082D")]
	DESERTEAGLE,
	[Token(Token = "0x400082E")]
	MP5A3,
	[Token(Token = "0x400082F")]
	CylinderGrip,
	[Token(Token = "0x4000830")]
	Flashbang,
	[Token(Token = "0x4000831")]
	GrenadeMk2,
	[Token(Token = "0x4000832")]
	GrenadeM67,
	[Token(Token = "0x4000833")]
	SprayCanGrip,
	[Token(Token = "0x4000834")]
	AngledForgrip,
	[Token(Token = "0x4000835")]
	WA2000,
	[Token(Token = "0x4000836")]
	Magazine_Pistol,
	[Token(Token = "0x4000837")]
	Magazine_SMG,
	[Token(Token = "0x4000838")]
	Magazine_SMG_Curved,
	[Token(Token = "0x4000839")]
	Magazine_Pistol_Large,
	[Token(Token = "0x400083A")]
	Magazine_SMG_Drum,
	[Token(Token = "0x400083B")]
	Magazine_Assault_Curved,
	[Token(Token = "0x400083C")]
	Magazine_Assault,
	[Token(Token = "0x400083D")]
	Magazine_Sniper,
	[Token(Token = "0x400083E")]
	Magazine_Clip,
	[Token(Token = "0x400083F")]
	Magazine_Shotgun,
	[Token(Token = "0x4000840")]
	Force_Closed_Fist,
	[Token(Token = "0x4000841")]
	Axis_Pistol_Slide,
	[Token(Token = "0x4000842")]
	Axis_Small_Knob,
	[Token(Token = "0x4000843")]
	Axis_Hook_2_Fingers,
	[Token(Token = "0x4000844")]
	Pivot_MagazineWell,
	[Token(Token = "0x4000845")]
	Hold_Pinch,
	[Token(Token = "0x4000846")]
	Hold_ASS12_Grip,
	[Token(Token = "0x4000847")]
	Hold_RoundObject,
	[Token(Token = "0x4000848")]
	Hold_FlatObject,
	[Token(Token = "0x4000849")]
	Hold_LeverAction_Grip,
	[Token(Token = "0x400084A")]
	Hold_LeverAction_Lever,
	[Token(Token = "0x400084B")]
	Complementary_Pistol_Grip,
	[Token(Token = "0x400084C")]
	L_Shaped_Grip,
	[Token(Token = "0x400084D")]
	Single_Shell_Grip,
	[Token(Token = "0x400084E")]
	PistolHammerInteract,
	[Token(Token = "0x400084F")]
	Hold_LeverAction_PistolGrip,
	[Token(Token = "0x4000850")]
	M870HammerInteract,
	[Token(Token = "0x4000851")]
	M870DoubleTrigger
}
[Token(Token = "0x200013D")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7693A0", Offset = "0x7693A0")]
public class TBMVRHandPose : ScriptableObject
{
	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected float m_handClosedAmount;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private bool m_allowPointing;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[SerializeField]
	private bool m_allowThumbsUp;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private HandPoseId m_poseId;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x769EEC", Offset = "0x769EEC")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x769EEC", Offset = "0x769EEC")]
	private float m_maxIndexFingerBlend;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x769F50", Offset = "0x769F50")]
	private float m_maxMiddleFingerBlend;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x769F90", Offset = "0x769F90")]
	private float m_maxRingFingerBlend;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x769FD0", Offset = "0x769FD0")]
	private float m_maxPinkyFingerBlend;

	[Token(Token = "0x170001CD")]
	public bool AllowPointing
	{
		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0x198DD08", Offset = "0x198DD08", VA = "0x198DD08")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001CE")]
	public bool AllowThumbsUp
	{
		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0x198DD10", Offset = "0x198DD10", VA = "0x198DD10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001CF")]
	public HandPoseId PoseId
	{
		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0x198DD18", Offset = "0x198DD18", VA = "0x198DD18")]
		get
		{
			return default(HandPoseId);
		}
	}

	[Token(Token = "0x170001D0")]
	public float handClosedAmount
	{
		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0x198DD20", Offset = "0x198DD20", VA = "0x198DD20")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001D1")]
	public float maxIndexFingerBlend
	{
		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0x198DD28", Offset = "0x198DD28", VA = "0x198DD28")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001D2")]
	public float maxMiddleFingerBlend
	{
		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0x198DD30", Offset = "0x198DD30", VA = "0x198DD30")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001D3")]
	public float maxRingFingerBlend
	{
		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0x198DD38", Offset = "0x198DD38", VA = "0x198DD38")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170001D4")]
	public float maxPinkyFingerBlend
	{
		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0x198DD40", Offset = "0x198DD40", VA = "0x198DD40")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0x198DD48", Offset = "0x198DD48", VA = "0x198DD48")]
	public TBMVRHandPose()
	{
	}
}
[Token(Token = "0x200013E")]
public class TestServerMessage : MonoBehaviour
{
	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0x198DD60", Offset = "0x198DD60", VA = "0x198DD60")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0x198DE40", Offset = "0x198DE40", VA = "0x198DE40")]
	public TestServerMessage()
	{
	}
}
[Token(Token = "0x200013F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x76940C", Offset = "0x76940C")]
public class VersionDisplay : MonoBehaviour
{
	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SpriteText textObject;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool noDevNum;

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0x1737D9C", Offset = "0x1737D9C", VA = "0x1737D9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0x1738048", Offset = "0x1738048", VA = "0x1738048")]
	private void SetText(string newText = "")
	{
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0x1738104", Offset = "0x1738104", VA = "0x1738104")]
	public VersionDisplay()
	{
	}
}
namespace VersionManager
{
	[Token(Token = "0x2000140")]
	public class Versioning
	{
		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A020", Offset = "0x76A020")]
		private static VersionInfo <Version>k__BackingField;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A030", Offset = "0x76A030")]
		private static string <CoreVersion>k__BackingField;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A040", Offset = "0x76A040")]
		private static string <DeveloperVersion>k__BackingField;

		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A050", Offset = "0x76A050")]
		private static string <FullVersion>k__BackingField;

		[Token(Token = "0x170001D5")]
		public static VersionInfo Version
		{
			[Token(Token = "0x6000BD3")]
			[Address(RVA = "0x173873C", Offset = "0x173873C", VA = "0x173873C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AF30", Offset = "0x76AF30")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BD4")]
			[Address(RVA = "0x17387A0", Offset = "0x17387A0", VA = "0x17387A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AF40", Offset = "0x76AF40")]
			set
			{
			}
		}

		[Token(Token = "0x170001D6")]
		public static string CoreVersion
		{
			[Token(Token = "0x6000BD5")]
			[Address(RVA = "0x173880C", Offset = "0x173880C", VA = "0x173880C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AF50", Offset = "0x76AF50")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BD6")]
			[Address(RVA = "0x1738870", Offset = "0x1738870", VA = "0x1738870")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AF60", Offset = "0x76AF60")]
			set
			{
			}
		}

		[Token(Token = "0x170001D7")]
		public static string DeveloperVersion
		{
			[Token(Token = "0x6000BD7")]
			[Address(RVA = "0x17388DC", Offset = "0x17388DC", VA = "0x17388DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AF70", Offset = "0x76AF70")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BD8")]
			[Address(RVA = "0x1738940", Offset = "0x1738940", VA = "0x1738940")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AF80", Offset = "0x76AF80")]
			set
			{
			}
		}

		[Token(Token = "0x170001D8")]
		public static string FullVersion
		{
			[Token(Token = "0x6000BD9")]
			[Address(RVA = "0x17389AC", Offset = "0x17389AC", VA = "0x17389AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AF90", Offset = "0x76AF90")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BDA")]
			[Address(RVA = "0x1738A10", Offset = "0x1738A10", VA = "0x1738A10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AFA0", Offset = "0x76AFA0")]
			set
			{
			}
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0x1738A7C", Offset = "0x1738A7C", VA = "0x1738A7C")]
		static Versioning()
		{
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0x1738D3C", Offset = "0x1738D3C", VA = "0x1738D3C")]
		private static string LoadVersion()
		{
			return null;
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0x1738EB4", Offset = "0x1738EB4", VA = "0x1738EB4")]
		private static string LoadDeveloperVersion()
		{
			return null;
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0x173902C", Offset = "0x173902C", VA = "0x173902C")]
		public Versioning()
		{
		}
	}
	[Token(Token = "0x2000141")]
	public class VersionInfo : IComparable
	{
		[Token(Token = "0x20001D9")]
		public enum VersionClass
		{
			[Token(Token = "0x4000B0B")]
			Major,
			[Token(Token = "0x4000B0C")]
			Minor,
			[Token(Token = "0x4000B0D")]
			Revision
		}

		[Token(Token = "0x4000860")]
		public const string EMPTY_VERSION = "0.0.0";

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A060", Offset = "0x76A060")]
		private int <MajorVersion>k__BackingField;

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A070", Offset = "0x76A070")]
		private int <MinorVersion>k__BackingField;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A080", Offset = "0x76A080")]
		private int <RevisionVersion>k__BackingField;

		[Token(Token = "0x170001D9")]
		public int MajorVersion
		{
			[Token(Token = "0x6000BDF")]
			[Address(RVA = "0x173810C", Offset = "0x173810C", VA = "0x173810C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AFB0", Offset = "0x76AFB0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000BE0")]
			[Address(RVA = "0x1738114", Offset = "0x1738114", VA = "0x1738114")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AFC0", Offset = "0x76AFC0")]
			set
			{
			}
		}

		[Token(Token = "0x170001DA")]
		public int MinorVersion
		{
			[Token(Token = "0x6000BE1")]
			[Address(RVA = "0x173811C", Offset = "0x173811C", VA = "0x173811C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AFD0", Offset = "0x76AFD0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000BE2")]
			[Address(RVA = "0x1738124", Offset = "0x1738124", VA = "0x1738124")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AFE0", Offset = "0x76AFE0")]
			set
			{
			}
		}

		[Token(Token = "0x170001DB")]
		public int RevisionVersion
		{
			[Token(Token = "0x6000BE3")]
			[Address(RVA = "0x173812C", Offset = "0x173812C", VA = "0x173812C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76AFF0", Offset = "0x76AFF0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000BE4")]
			[Address(RVA = "0x1738134", Offset = "0x1738134", VA = "0x1738134")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B000", Offset = "0x76B000")]
			set
			{
			}
		}

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0x173813C", Offset = "0x173813C", VA = "0x173813C")]
		public VersionInfo(string versionInfoStr)
		{
		}

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0x17383D8", Offset = "0x17383D8", VA = "0x17383D8", Slot = "4")]
		public int CompareTo(object other)
		{
			return default(int);
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0x1738540", Offset = "0x1738540", VA = "0x1738540", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
}
namespace UnityEngine.EventSystems
{
	[Token(Token = "0x2000142")]
	public class TouchScreenEventData : PointerEventData
	{
		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Vector3 m_sourcePosition;

		[Token(Token = "0x170001DC")]
		public Vector3 SourcePosition
		{
			[Token(Token = "0x6000BE9")]
			[Address(RVA = "0x198E50C", Offset = "0x198E50C", VA = "0x198E50C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000BEA")]
			[Address(RVA = "0x198E51C", Offset = "0x198E51C", VA = "0x198E51C")]
			set
			{
			}
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0x198E504", Offset = "0x198E504", VA = "0x198E504")]
		public TouchScreenEventData([Optional] EventSystem e)
		{
		}
	}
	[Token(Token = "0x2000143")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x76946C", Offset = "0x76946C")]
	public class VRTouchScreenRaycaster : BaseRaycaster
	{
		[Serializable]
		[Token(Token = "0x20001DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7697E8", Offset = "0x7697E8")]
		private sealed class <>c
		{
			[Token(Token = "0x4000B0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000B0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<RaycastHit> <>9__31_0;

			[Token(Token = "0x6001012")]
			[Address(RVA = "0x1BB3CE0", Offset = "0x1BB3CE0", VA = "0x1BB3CE0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001013")]
			[Address(RVA = "0x1BB3CE8", Offset = "0x1BB3CE8", VA = "0x1BB3CE8")]
			internal int <Raycast>b__31_0(RaycastHit r1, RaycastHit r2)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000865")]
		protected const int kNoEventMaskSet = -1;

		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected LayerMask m_EventMask;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		protected int m_depth;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected float m_rayDistance;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform m_source;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected Transform m_rayDirection;

		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private EventTrigger m_activeTrigger;

		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TouchScreenEventData m_lastEventData;

		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Selectable m_selectable;

		[Token(Token = "0x170001DD")]
		public override Camera eventCamera
		{
			[Token(Token = "0x6000BEC")]
			[Address(RVA = "0x17376E0", Offset = "0x17376E0", VA = "0x17376E0", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DE")]
		public virtual int depth
		{
			[Token(Token = "0x6000BED")]
			[Address(RVA = "0x17376E8", Offset = "0x17376E8", VA = "0x17376E8", Slot = "22")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001DF")]
		public int finalEventMask
		{
			[Token(Token = "0x6000BEE")]
			[Address(RVA = "0x17376F0", Offset = "0x17376F0", VA = "0x17376F0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001E0")]
		public LayerMask eventMask
		{
			[Token(Token = "0x6000BEF")]
			[Address(RVA = "0x17376FC", Offset = "0x17376FC", VA = "0x17376FC")]
			get
			{
				return default(LayerMask);
			}
			[Token(Token = "0x6000BF0")]
			[Address(RVA = "0x1737704", Offset = "0x1737704", VA = "0x1737704")]
			set
			{
			}
		}

		[Token(Token = "0x170001E1")]
		public Transform RaySource
		{
			[Token(Token = "0x6000BF1")]
			[Address(RVA = "0x173770C", Offset = "0x173770C", VA = "0x173770C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BF2")]
			[Address(RVA = "0x1737714", Offset = "0x1737714", VA = "0x1737714")]
			set
			{
			}
		}

		[Token(Token = "0x170001E2")]
		public Transform RayDirection
		{
			[Token(Token = "0x6000BF3")]
			[Address(RVA = "0x173771C", Offset = "0x173771C", VA = "0x173771C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BF4")]
			[Address(RVA = "0x1737724", Offset = "0x1737724", VA = "0x1737724")]
			set
			{
			}
		}

		[Token(Token = "0x170001E3")]
		public PointerEventData EventData
		{
			[Token(Token = "0x6000BF5")]
			[Address(RVA = "0x173772C", Offset = "0x173772C", VA = "0x173772C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E4")]
		public EventTrigger ActiveTrigger
		{
			[Token(Token = "0x6000BF6")]
			[Address(RVA = "0x1737734", Offset = "0x1737734", VA = "0x1737734")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E5")]
		public Selectable attachedSelectable
		{
			[Token(Token = "0x6000BF7")]
			[Address(RVA = "0x173773C", Offset = "0x173773C", VA = "0x173773C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x17376A4", Offset = "0x17376A4", VA = "0x17376A4")]
		protected VRTouchScreenRaycaster()
		{
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0x1737744", Offset = "0x1737744", VA = "0x1737744", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}
	}
}
namespace TBMPlugins.Attributes
{
	[Token(Token = "0x2000144")]
	public class ReadOnlyAttribute : PropertyAttribute
	{
		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0x1A29874", Offset = "0x1A29874", VA = "0x1A29874")]
		public ReadOnlyAttribute()
		{
		}
	}
}
namespace Plugins.ProjectileMath
{
	[Token(Token = "0x2000145")]
	public class Math3d : MonoBehaviour
	{
		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Transform tempChild;

		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Transform tempParent;

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0x1784A60", Offset = "0x1784A60", VA = "0x1784A60")]
		public static void Init()
		{
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0x1784C64", Offset = "0x1784C64", VA = "0x1784C64")]
		public static Vector3 AddVectorLength(Vector3 vector, float size)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0x1784D28", Offset = "0x1784D28", VA = "0x1784D28")]
		public static Vector3 SetVectorLength(Vector3 vector, float size)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0x1784D58", Offset = "0x1784D58", VA = "0x1784D58")]
		public static Quaternion SubtractRotation(Quaternion B, Quaternion A)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0x1784DB4", Offset = "0x1784DB4", VA = "0x1784DB4")]
		public static bool PlanePlaneIntersection(out Vector3 linePoint, out Vector3 lineVec, Vector3 plane1Normal, Vector3 plane1Position, Vector3 plane2Normal, Vector3 plane2Position)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0x1784F08", Offset = "0x1784F08", VA = "0x1784F08")]
		public static bool LinePlaneIntersection(out Vector3 intersection, Vector3 linePoint, Vector3 lineVec, Vector3 planeNormal, Vector3 planePoint)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0x178504C", Offset = "0x178504C", VA = "0x178504C")]
		public static bool LineLineIntersection(out Vector3 intersection, Vector3 linePoint1, Vector3 lineVec1, Vector3 linePoint2, Vector3 lineVec2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0x1785214", Offset = "0x1785214", VA = "0x1785214")]
		public static bool ClosestPointsOnTwoLines(out Vector3 closestPointLine1, out Vector3 closestPointLine2, Vector3 linePoint1, Vector3 lineVec1, Vector3 linePoint2, Vector3 lineVec2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0x178539C", Offset = "0x178539C", VA = "0x178539C")]
		public static Vector3 ProjectPointOnLine(Vector3 linePoint, Vector3 lineVec, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0x17853E0", Offset = "0x17853E0", VA = "0x17853E0")]
		public static Vector3 ProjectPointOnLineSegment(Vector3 linePoint1, Vector3 linePoint2, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0x17855F4", Offset = "0x17855F4", VA = "0x17855F4")]
		public static Vector3 ProjectPointOnPlane(Vector3 planeNormal, Vector3 planePoint, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0x1785710", Offset = "0x1785710", VA = "0x1785710")]
		public static Vector3 ProjectVectorOnPlane(Vector3 planeNormal, Vector3 vector)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0x17856E4", Offset = "0x17856E4", VA = "0x17856E4")]
		public static float SignedDistancePlanePoint(Vector3 planeNormal, Vector3 planePoint, Vector3 point)
		{
			return default(float);
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0x1785740", Offset = "0x1785740", VA = "0x1785740")]
		public static float SignedDotProduct(Vector3 vectorA, Vector3 vectorB, Vector3 normal)
		{
			return default(float);
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0x17857A4", Offset = "0x17857A4", VA = "0x17857A4")]
		public static float SignedVectorAngle(Vector3 referenceVector, Vector3 otherVector, Vector3 normal)
		{
			return default(float);
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0x1785868", Offset = "0x1785868", VA = "0x1785868")]
		public static float AngleVectorPlane(Vector3 vector, Vector3 normal)
		{
			return default(float);
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0x178591C", Offset = "0x178591C", VA = "0x178591C")]
		public static float DotProductAngle(Vector3 vec1, Vector3 vec2)
		{
			return default(float);
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0x17859D8", Offset = "0x17859D8", VA = "0x17859D8")]
		public static void PlaneFrom3Points(out Vector3 planeNormal, out Vector3 planePoint, Vector3 pointA, Vector3 pointB, Vector3 pointC)
		{
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0x1785BC4", Offset = "0x1785BC4", VA = "0x1785BC4")]
		public static Vector3 GetForwardVector(Quaternion q)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0x1785C1C", Offset = "0x1785C1C", VA = "0x1785C1C")]
		public static Vector3 GetUpVector(Quaternion q)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0x1785C74", Offset = "0x1785C74", VA = "0x1785C74")]
		public static Vector3 GetRightVector(Quaternion q)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0x1785CCC", Offset = "0x1785CCC", VA = "0x1785CCC")]
		public static Quaternion QuaternionFromMatrix(Matrix4x4 m)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0x1785D4C", Offset = "0x1785D4C", VA = "0x1785D4C")]
		public static Vector3 PositionFromMatrix(Matrix4x4 m)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0x1785D58", Offset = "0x1785D58", VA = "0x1785D58")]
		public static void LookRotationExtended(ref GameObject gameObjectInOut, Vector3 alignWithVector, Vector3 alignWithNormal, Vector3 customForward, Vector3 customUp)
		{
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0x1785E48", Offset = "0x1785E48", VA = "0x1785E48")]
		public static void TransformWithParent(out Quaternion childRotation, out Vector3 childPosition, Quaternion parentRotation, Vector3 parentPosition, Quaternion startParentRotation, Vector3 startParentPosition, Quaternion startChildRotation, Vector3 startChildPosition)
		{
		}

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0x1786064", Offset = "0x1786064", VA = "0x1786064")]
		public static void PreciseAlign(ref GameObject gameObjectInOut, Vector3 alignWithVector, Vector3 alignWithNormal, Vector3 alignWithPosition, Vector3 triangleForward, Vector3 triangleNormal, Vector3 trianglePosition)
		{
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0x17861FC", Offset = "0x17861FC", VA = "0x17861FC")]
		private void VectorsToTransform(ref GameObject gameObjectInOut, Vector3 positionVector, Vector3 directionVector, Vector3 normalVector)
		{
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0x1785558", Offset = "0x1785558", VA = "0x1785558")]
		public static int PointOnWhichSideOfLineSegment(Vector3 linePoint1, Vector3 linePoint2, Vector3 point)
		{
			return default(int);
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0x17862C4", Offset = "0x17862C4", VA = "0x17862C4")]
		public static float MouseDistanceToLine(Vector3 linePoint1, Vector3 linePoint2)
		{
			return default(float);
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0x1786424", Offset = "0x1786424", VA = "0x1786424")]
		public static float MouseDistanceToCircle(Vector3 point, float radius)
		{
			return default(float);
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0x17864E4", Offset = "0x17864E4", VA = "0x17864E4")]
		public static bool IsLineInRectangle(Vector3 linePoint1, Vector3 linePoint2, Vector3 rectA, Vector3 rectB, Vector3 rectC, Vector3 rectD)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0x17867BC", Offset = "0x17867BC", VA = "0x17867BC")]
		public static bool IsPointInRectangle(Vector3 point, Vector3 rectA, Vector3 rectC, Vector3 rectB, Vector3 rectD)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0x1786A1C", Offset = "0x1786A1C", VA = "0x1786A1C")]
		public static bool AreLineSegmentsCrossing(Vector3 pointA1, Vector3 pointA2, Vector3 pointB1, Vector3 pointB2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0x1786C18", Offset = "0x1786C18", VA = "0x1786C18")]
		public static bool LineSphereIntersection(Ray ray, Vector3 center, float radius, out float t0, out float t1)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0x1786D0C", Offset = "0x1786D0C", VA = "0x1786D0C")]
		public static void ClosestPointOnTriangleToPoint(Vector3 vertex1, Vector3 vertex2, Vector3 vertex3, Vector3 point, out Vector3 result)
		{
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0x1786F3C", Offset = "0x1786F3C", VA = "0x1786F3C")]
		public Math3d()
		{
		}
	}
	[Token(Token = "0x2000146")]
	public static class ProjectileMath
	{
		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0x14D0670", Offset = "0x14D0670", VA = "0x14D0670")]
		public static bool LaunchAngle(float speed, float distance, float yOffset, float gravity, out float angle0, out float angle1)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0x14D0724", Offset = "0x14D0724", VA = "0x14D0724")]
		public static float LaunchSpeed(float distance, float yOffset, float gravity, float angle)
		{
			return default(float);
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0x14D07DC", Offset = "0x14D07DC", VA = "0x14D07DC")]
		public static float TimeOfFlight(float speed, float angle, float yOffset, float gravity)
		{
			return default(float);
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0x14D0840", Offset = "0x14D0840", VA = "0x14D0840")]
		public static Vector2[] ProjectileArcPoints(int iterations, float speed, float distance, float gravity, float angle)
		{
			return null;
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0x14D0950", Offset = "0x14D0950", VA = "0x14D0950")]
		public static void ProjectileArcPointsLowAlloc(ref Vector2[] buffer, float speed, float distance, float gravity, float angle)
		{
		}
	}
}
namespace GunClub
{
	[Serializable]
	[Token(Token = "0x2000147")]
	public class Player : ISerializable
	{
		[Serializable]
		[Token(Token = "0x20001DB")]
		public class ProductSubmit : ISerializable
		{
			[Token(Token = "0x4000B10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int? AssociatedProductId;

			[Token(Token = "0x4000B11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool PayUsingCoins;

			[Token(Token = "0x4000B12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int ScoreAmount;

			[Token(Token = "0x4000B13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int ProductId;

			[Token(Token = "0x4000B14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string SaleDate;

			[Token(Token = "0x4000B15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public ulong UserId;

			[Token(Token = "0x6001014")]
			[Address(RVA = "0x1BA7708", Offset = "0x1BA7708", VA = "0x1BA7708")]
			public ProductSubmit()
			{
			}

			[Token(Token = "0x6001015")]
			[Address(RVA = "0x1BA77C8", Offset = "0x1BA77C8", VA = "0x1BA77C8")]
			public ProductSubmit(bool payUsingCoins, int productReward, int productId, int? associatedProductId)
			{
			}

			[Token(Token = "0x6001016")]
			[Address(RVA = "0x1BA79BC", Offset = "0x1BA79BC", VA = "0x1BA79BC")]
			public ProductSubmit(bool payUsingCoins, int productReward, int productId)
			{
			}

			[Token(Token = "0x6001017")]
			[Address(RVA = "0x1BA7B64", Offset = "0x1BA7B64", VA = "0x1BA7B64", Slot = "4")]
			public void GetObjectData(SerializationInfo info, StreamingContext context)
			{
			}

			[Token(Token = "0x6001018")]
			[Address(RVA = "0x1BA7C98", Offset = "0x1BA7C98", VA = "0x1BA7C98")]
			public ProductSubmit(SerializationInfo info, StreamingContext context)
			{
			}
		}

		[Token(Token = "0x20001DC")]
		public class ProductFetch
		{
			[Token(Token = "0x4000B16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int SId;

			[Token(Token = "0x4000B17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int WId;

			[Token(Token = "0x4000B18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int[] Accs;

			[Token(Token = "0x6001019")]
			[Address(RVA = "0x1BA6EFC", Offset = "0x1BA6EFC", VA = "0x1BA6EFC")]
			public ProductFetch()
			{
			}

			[Token(Token = "0x600101A")]
			[Address(RVA = "0x1BA6F04", Offset = "0x1BA6F04", VA = "0x1BA6F04")]
			public ProductFetch(int wId)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001DD")]
		public class ProductIATSubmit : ISerializable
		{
			[Token(Token = "0x4000B19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int IATProductId;

			[Token(Token = "0x4000B1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int SaleId;

			[Token(Token = "0x4000B1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ulong UserId;

			[Token(Token = "0x4000B1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string SaleDate;

			[Token(Token = "0x600101B")]
			[Address(RVA = "0x1BA6F84", Offset = "0x1BA6F84", VA = "0x1BA6F84")]
			public ProductIATSubmit(int productId, int saleId)
			{
			}

			[Token(Token = "0x600101C")]
			[Address(RVA = "0x1BA7118", Offset = "0x1BA7118", VA = "0x1BA7118", Slot = "4")]
			public void GetObjectData(SerializationInfo info, StreamingContext context)
			{
			}

			[Token(Token = "0x600101D")]
			[Address(RVA = "0x1BA71F8", Offset = "0x1BA71F8", VA = "0x1BA71F8")]
			public ProductIATSubmit(SerializationInfo info, StreamingContext context)
			{
			}
		}

		[Token(Token = "0x20001DE")]
		public class ProductIATFetch
		{
			[Token(Token = "0x4000B1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int SId;

			[Token(Token = "0x4000B1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int PId;

			[Token(Token = "0x4000B1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int TId;

			[Token(Token = "0x600101E")]
			[Address(RVA = "0x1BA6F7C", Offset = "0x1BA6F7C", VA = "0x1BA6F7C")]
			public ProductIATFetch()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001DF")]
		public class AchievementData : ISerializable
		{
			[Token(Token = "0x4000B20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A5A8", Offset = "0x76A5A8")]
			private ulong <UserId>k__BackingField;

			[Token(Token = "0x4000B21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A5B8", Offset = "0x76A5B8")]
			private int <AssociatedProductId>k__BackingField;

			[Token(Token = "0x4000B22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A5C8", Offset = "0x76A5C8")]
			private int <ScoreAmount>k__BackingField;

			[Token(Token = "0x4000B23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string AchievementEarnedDate;

			[Token(Token = "0x1700024D")]
			public ulong UserId
			{
				[Token(Token = "0x6001021")]
				[Address(RVA = "0x1BA6404", Offset = "0x1BA6404", VA = "0x1BA6404")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BDD8", Offset = "0x76BDD8")]
				get
				{
					return default(ulong);
				}
				[Token(Token = "0x6001022")]
				[Address(RVA = "0x1BA640C", Offset = "0x1BA640C", VA = "0x1BA640C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BDE8", Offset = "0x76BDE8")]
				set
				{
				}
			}

			[Token(Token = "0x1700024E")]
			public int AssociatedProductId
			{
				[Token(Token = "0x6001023")]
				[Address(RVA = "0x1BA6414", Offset = "0x1BA6414", VA = "0x1BA6414")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BDF8", Offset = "0x76BDF8")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001024")]
				[Address(RVA = "0x1BA641C", Offset = "0x1BA641C", VA = "0x1BA641C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BE08", Offset = "0x76BE08")]
				set
				{
				}
			}

			[Token(Token = "0x1700024F")]
			public int ScoreAmount
			{
				[Token(Token = "0x6001025")]
				[Address(RVA = "0x1BA6424", Offset = "0x1BA6424", VA = "0x1BA6424")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BE18", Offset = "0x76BE18")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001026")]
				[Address(RVA = "0x1BA642C", Offset = "0x1BA642C", VA = "0x1BA642C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BE28", Offset = "0x76BE28")]
				set
				{
				}
			}

			[Token(Token = "0x600101F")]
			[Address(RVA = "0x1BA63B4", Offset = "0x1BA63B4", VA = "0x1BA63B4")]
			public AchievementData()
			{
			}

			[Token(Token = "0x6001020")]
			[Address(RVA = "0x1BA63BC", Offset = "0x1BA63BC", VA = "0x1BA63BC")]
			public AchievementData(int pProdId, int pScore, string pDate)
			{
			}

			[Token(Token = "0x6001027")]
			[Address(RVA = "0x1BA6434", Offset = "0x1BA6434", VA = "0x1BA6434", Slot = "4")]
			public void GetObjectData(SerializationInfo info, StreamingContext context)
			{
			}

			[Token(Token = "0x6001028")]
			[Address(RVA = "0x1BA6514", Offset = "0x1BA6514", VA = "0x1BA6514")]
			public AchievementData(SerializationInfo info, StreamingContext context)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001E0")]
		public class PlayerProgressSubmit : ISerializable
		{
			[Token(Token = "0x4000B24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int[][] LadderProgress;

			[Token(Token = "0x4000B25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public EventHighScore[][][] LadderEventScores;

			[Token(Token = "0x4000B26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int[][] LadderHighScores;

			[Token(Token = "0x4000B27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int[] WeaponExperience;

			[Token(Token = "0x4000B28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int TutorialStage;

			[Token(Token = "0x4000B29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public int PreviousRank;

			[Token(Token = "0x4000B2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool FirstWeaponRecieved;

			[Token(Token = "0x4000B2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
			public bool IsFreeAmmoRefillUsed;

			[Token(Token = "0x4000B2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
			public bool FacebookCoinsClaimed;

			[Token(Token = "0x4000B2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Hashtable ExtraData;

			[Token(Token = "0x6001029")]
			[Address(RVA = "0x1BA6728", Offset = "0x1BA6728", VA = "0x1BA6728")]
			public PlayerProgressSubmit(int[][] ladderProgress, EventHighScore[][][] ladderEventScores, int[][] ladderHighScores, int[] weaponExperience, bool firstWeaponRecieved, bool isFreeAmmoRefillUsed, bool facebookCoinsClaimed, int tutorialStage, int previousRank, Hashtable extraData)
			{
			}

			[Token(Token = "0x600102A")]
			[Address(RVA = "0x1BA6808", Offset = "0x1BA6808", VA = "0x1BA6808")]
			public PlayerProgressSubmit(SerializationInfo info, StreamingContext context)
			{
			}

			[Token(Token = "0x600102B")]
			[Address(RVA = "0x1BA6C48", Offset = "0x1BA6C48", VA = "0x1BA6C48", Slot = "4")]
			public void GetObjectData(SerializationInfo info, StreamingContext context)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20001E1")]
		public class RangeResultSubmit : ISerializable
		{
			[Token(Token = "0x4000B2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A5D8", Offset = "0x76A5D8")]
			private int <LadderPack>k__BackingField;

			[Token(Token = "0x4000B2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A5E8", Offset = "0x76A5E8")]
			private int <LadderNumber>k__BackingField;

			[Token(Token = "0x4000B30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A5F8", Offset = "0x76A5F8")]
			private int <PlaysSinceLadderSubmission>k__BackingField;

			[Token(Token = "0x4000B31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A608", Offset = "0x76A608")]
			private bool <Submitted>k__BackingField;

			[Token(Token = "0x4000B32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A618", Offset = "0x76A618")]
			private StorageManager.RangeResult <RangeResult>k__BackingField;

			[Token(Token = "0x17000250")]
			public int LadderPack
			{
				[Token(Token = "0x600102C")]
				[Address(RVA = "0x1BA7FAC", Offset = "0x1BA7FAC", VA = "0x1BA7FAC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BE38", Offset = "0x76BE38")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600102D")]
				[Address(RVA = "0x1BA7FB4", Offset = "0x1BA7FB4", VA = "0x1BA7FB4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BE48", Offset = "0x76BE48")]
				set
				{
				}
			}

			[Token(Token = "0x17000251")]
			public int LadderNumber
			{
				[Token(Token = "0x600102E")]
				[Address(RVA = "0x1BA7FBC", Offset = "0x1BA7FBC", VA = "0x1BA7FBC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BE58", Offset = "0x76BE58")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x600102F")]
				[Address(RVA = "0x1BA7FC4", Offset = "0x1BA7FC4", VA = "0x1BA7FC4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BE68", Offset = "0x76BE68")]
				set
				{
				}
			}

			[Token(Token = "0x17000252")]
			public int PlaysSinceLadderSubmission
			{
				[Token(Token = "0x6001030")]
				[Address(RVA = "0x1BA7FCC", Offset = "0x1BA7FCC", VA = "0x1BA7FCC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BE78", Offset = "0x76BE78")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6001031")]
				[Address(RVA = "0x1BA7FD4", Offset = "0x1BA7FD4", VA = "0x1BA7FD4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BE88", Offset = "0x76BE88")]
				set
				{
				}
			}

			[Token(Token = "0x17000253")]
			public bool Submitted
			{
				[Token(Token = "0x6001032")]
				[Address(RVA = "0x1BA7FDC", Offset = "0x1BA7FDC", VA = "0x1BA7FDC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BE98", Offset = "0x76BE98")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6001033")]
				[Address(RVA = "0x1BA7FE4", Offset = "0x1BA7FE4", VA = "0x1BA7FE4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BEA8", Offset = "0x76BEA8")]
				set
				{
				}
			}

			[Token(Token = "0x17000254")]
			public StorageManager.RangeResult RangeResult
			{
				[Token(Token = "0x6001034")]
				[Address(RVA = "0x1BA7FF0", Offset = "0x1BA7FF0", VA = "0x1BA7FF0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BEB8", Offset = "0x76BEB8")]
				get
				{
					return null;
				}
				[Token(Token = "0x6001035")]
				[Address(RVA = "0x1BA7FF8", Offset = "0x1BA7FF8", VA = "0x1BA7FF8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76BEC8", Offset = "0x76BEC8")]
				set
				{
				}
			}

			[Token(Token = "0x6001036")]
			[Address(RVA = "0x1BA8000", Offset = "0x1BA8000", VA = "0x1BA8000")]
			public RangeResultSubmit(StorageManager.RangeResult rangeResult, int ladderPack, int ladderNumber, bool submitted, int playsSinceLadderSubmission)
			{
			}

			[Token(Token = "0x6001037")]
			[Address(RVA = "0x1BA8068", Offset = "0x1BA8068", VA = "0x1BA8068")]
			public RangeResultSubmit(RangeResultSubmit rangeResultSent, bool submitted, int playsSinceLadderSubmission)
			{
			}

			[Token(Token = "0x6001038")]
			[Address(RVA = "0x1BA80D0", Offset = "0x1BA80D0", VA = "0x1BA80D0", Slot = "4")]
			public void GetObjectData(SerializationInfo info, StreamingContext context)
			{
			}

			[Token(Token = "0x6001039")]
			[Address(RVA = "0x1BA81D8", Offset = "0x1BA81D8", VA = "0x1BA81D8")]
			public RangeResultSubmit(SerializationInfo info, StreamingContext context)
			{
			}
		}

		[Token(Token = "0x20001E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x7697F8", Offset = "0x7697F8")]
		private sealed class <>c__DisplayClass40_0
		{
			[Token(Token = "0x4000B33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int weaponId;

			[Token(Token = "0x4000B34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int? assProdId;

			[Token(Token = "0x600103A")]
			[Address(RVA = "0x1BA62F0", Offset = "0x1BA62F0", VA = "0x1BA62F0")]
			public <>c__DisplayClass40_0()
			{
			}

			[Token(Token = "0x600103B")]
			[Address(RVA = "0x1BA62F8", Offset = "0x1BA62F8", VA = "0x1BA62F8")]
			internal bool <IsProductOwned>b__0(ProductSubmit p)
			{
				return default(bool);
			}

			[Token(Token = "0x600103C")]
			[Address(RVA = "0x1BA631C", Offset = "0x1BA631C", VA = "0x1BA631C")]
			internal bool <IsProductOwned>b__1(ProductSubmit p)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20001E3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x769808", Offset = "0x769808")]
		private sealed class <>c
		{
			[Token(Token = "0x4000B35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000B36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<ProductSubmit, bool> <>9__43_0;

			[Token(Token = "0x4000B37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<ProductSubmit, int> <>9__43_1;

			[Token(Token = "0x4000B38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<IGrouping<int, ProductSubmit>, ProductSubmit> <>9__43_2;

			[Token(Token = "0x4000B39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<ProductSubmit, bool> <>9__43_3;

			[Token(Token = "0x4000B3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<ProductSubmit, int> <>9__43_4;

			[Token(Token = "0x4000B3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<ProductSubmit, int?> <>9__43_5;

			[Token(Token = "0x4000B3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<IGrouping<int?, ProductSubmit>, ProductSubmit> <>9__43_6;

			[Token(Token = "0x4000B3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Func<StorageManager.RangeResult[], IEnumerable<StorageManager.RangeResult>> <>9__75_0;

			[Token(Token = "0x4000B3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static Func<StorageManager.RangeResult[], StorageManager.RangeResult, <>f__AnonymousType0<StorageManager.RangeResult[], StorageManager.RangeResult>> <>9__75_1;

			[Token(Token = "0x4000B3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static Func<<>f__AnonymousType0<StorageManager.RangeResult[], StorageManager.RangeResult>, bool> <>9__75_2;

			[Token(Token = "0x4000B40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public static Func<<>f__AnonymousType0<StorageManager.RangeResult[], StorageManager.RangeResult>, bool> <>9__75_3;

			[Token(Token = "0x4000B41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public static Func<<>f__AnonymousType0<StorageManager.RangeResult[], StorageManager.RangeResult>, StorageManager.RangeResultBase> <>9__75_4;

			[Token(Token = "0x4000B42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public static Func<StorageManager.RangeResultBase, int> <>9__75_5;

			[Token(Token = "0x4000B43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public static Func<IGrouping<int, StorageManager.RangeResultBase>, StorageManager.RangeResultBase> <>9__75_6;

			[Token(Token = "0x4000B44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public static Func<EventHighScore, EventHighScore, EventHighScore> <>9__132_4;

			[Token(Token = "0x4000B45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public static Func<EventHighScore[], EventHighScore[], EventHighScore[]> <>9__132_3;

			[Token(Token = "0x4000B46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public static Func<EventHighScore[][], EventHighScore[][], EventHighScore[][]> <>9__132_1;

			[Token(Token = "0x4000B47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public static Func<StorageManager.RangeResult, StorageManager.RangeResult, StorageManager.RangeResult> <>9__132_5;

			[Token(Token = "0x4000B48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public static Func<StorageManager.RangeResult[], StorageManager.RangeResult[], StorageManager.RangeResult[]> <>9__132_2;

			[Token(Token = "0x4000B49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public static Func<int[], int> <>9__133_0;

			[Token(Token = "0x4000B4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public static Func<int, string, string> <>9__133_5;

			[Token(Token = "0x4000B4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public static Func<int[], string, string> <>9__133_1;

			[Token(Token = "0x4000B4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public static Func<EventHighScore, string, string> <>9__133_7;

			[Token(Token = "0x4000B4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public static Func<EventHighScore[], string, string> <>9__133_6;

			[Token(Token = "0x4000B4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public static Func<EventHighScore[][], string, string> <>9__133_2;

			[Token(Token = "0x4000B4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public static Func<int, string, string> <>9__133_3;

			[Token(Token = "0x4000B50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			public static Func<StorageManager.RangeResult, string, string> <>9__133_8;

			[Token(Token = "0x4000B51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
			public static Func<StorageManager.RangeResult[], string, string> <>9__133_4;

			[Token(Token = "0x600103E")]
			[Address(RVA = "0x1BA52FC", Offset = "0x1BA52FC", VA = "0x1BA52FC")]
			public <>c()
			{
			}

			[Token(Token = "0x600103F")]
			[Address(RVA = "0x1BA5304", Offset = "0x1BA5304", VA = "0x1BA5304")]
			internal bool <SanitizePurchasedProducts>b__43_0(ProductSubmit p)
			{
				return default(bool);
			}

			[Token(Token = "0x6001040")]
			[Address(RVA = "0x1BA5354", Offset = "0x1BA5354", VA = "0x1BA5354")]
			internal int <SanitizePurchasedProducts>b__43_1(ProductSubmit w)
			{
				return default(int);
			}

			[Token(Token = "0x6001041")]
			[Address(RVA = "0x1BA536C", Offset = "0x1BA536C", VA = "0x1BA536C")]
			internal ProductSubmit <SanitizePurchasedProducts>b__43_2(IGrouping<int, ProductSubmit> w)
			{
				return null;
			}

			[Token(Token = "0x6001042")]
			[Address(RVA = "0x1BA53B8", Offset = "0x1BA53B8", VA = "0x1BA53B8")]
			internal bool <SanitizePurchasedProducts>b__43_3(ProductSubmit p)
			{
				return default(bool);
			}

			[Token(Token = "0x6001043")]
			[Address(RVA = "0x1BA5400", Offset = "0x1BA5400", VA = "0x1BA5400")]
			internal int <SanitizePurchasedProducts>b__43_4(ProductSubmit a)
			{
				return default(int);
			}

			[Token(Token = "0x6001044")]
			[Address(RVA = "0x1BA5418", Offset = "0x1BA5418", VA = "0x1BA5418")]
			internal int? <SanitizePurchasedProducts>b__43_5(ProductSubmit a)
			{
				return null;
			}

			[Token(Token = "0x6001045")]
			[Address(RVA = "0x1BA5430", Offset = "0x1BA5430", VA = "0x1BA5430")]
			internal ProductSubmit <SanitizePurchasedProducts>b__43_6(IGrouping<int?, ProductSubmit> a)
			{
				return null;
			}

			[Token(Token = "0x6001046")]
			[Address(RVA = "0x1BA547C", Offset = "0x1BA547C", VA = "0x1BA547C")]
			internal IEnumerable<StorageManager.RangeResult> <get_RangeResultsFlat>b__75_0(StorageManager.RangeResult[] rangeResultLadder)
			{
				return null;
			}

			[Token(Token = "0x6001047")]
			[Address(RVA = "0x1BA5484", Offset = "0x1BA5484", VA = "0x1BA5484")]
			internal <>f__AnonymousType0<StorageManager.RangeResult[], StorageManager.RangeResult> <get_RangeResultsFlat>b__75_1(StorageManager.RangeResult[] rangeResultLadder, StorageManager.RangeResult result)
			{
				return null;
			}

			[Token(Token = "0x6001048")]
			[Address(RVA = "0x1BA5508", Offset = "0x1BA5508", VA = "0x1BA5508")]
			internal bool <get_RangeResultsFlat>b__75_2(<>f__AnonymousType0<StorageManager.RangeResult[], StorageManager.RangeResult> <>h__TransparentIdentifier0)
			{
				return default(bool);
			}

			[Token(Token = "0x6001049")]
			[Address(RVA = "0x1BA5558", Offset = "0x1BA5558", VA = "0x1BA5558")]
			internal bool <get_RangeResultsFlat>b__75_3(<>f__AnonymousType0<StorageManager.RangeResult[], StorageManager.RangeResult> <>h__TransparentIdentifier0)
			{
				return default(bool);
			}

			[Token(Token = "0x600104A")]
			[Address(RVA = "0x1BA55B0", Offset = "0x1BA55B0", VA = "0x1BA55B0")]
			internal StorageManager.RangeResultBase <get_RangeResultsFlat>b__75_4(<>f__AnonymousType0<StorageManager.RangeResult[], StorageManager.RangeResult> <>h__TransparentIdentifier0)
			{
				return null;
			}

			[Token(Token = "0x600104B")]
			[Address(RVA = "0x1BA5780", Offset = "0x1BA5780", VA = "0x1BA5780")]
			internal int <get_RangeResultsFlat>b__75_5(StorageManager.RangeResultBase r)
			{
				return default(int);
			}

			[Token(Token = "0x600104C")]
			[Address(RVA = "0x1BA5798", Offset = "0x1BA5798", VA = "0x1BA5798")]
			internal StorageManager.RangeResultBase <get_RangeResultsFlat>b__75_6(IGrouping<int, StorageManager.RangeResultBase> rid)
			{
				return null;
			}

			[Token(Token = "0x600104D")]
			[Address(RVA = "0x1BA57E4", Offset = "0x1BA57E4", VA = "0x1BA57E4")]
			internal EventHighScore[][] <MergePlayerData>b__132_1(EventHighScore[][] curPlayerScore, EventHighScore[][] otherPlayerScore)
			{
				return null;
			}

			[Token(Token = "0x600104E")]
			[Address(RVA = "0x1BA5914", Offset = "0x1BA5914", VA = "0x1BA5914")]
			internal EventHighScore[] <MergePlayerData>b__132_3(EventHighScore[] scores, EventHighScore[] highScores)
			{
				return null;
			}

			[Token(Token = "0x600104F")]
			[Address(RVA = "0x1BA5A44", Offset = "0x1BA5A44", VA = "0x1BA5A44")]
			internal EventHighScore <MergePlayerData>b__132_4(EventHighScore score, EventHighScore highScore)
			{
				return null;
			}

			[Token(Token = "0x6001050")]
			[Address(RVA = "0x1BA5B10", Offset = "0x1BA5B10", VA = "0x1BA5B10")]
			internal StorageManager.RangeResult[] <MergePlayerData>b__132_2(StorageManager.RangeResult[] curResults, StorageManager.RangeResult[] otherResults)
			{
				return null;
			}

			[Token(Token = "0x6001051")]
			[Address(RVA = "0x1BA5C40", Offset = "0x1BA5C40", VA = "0x1BA5C40")]
			internal StorageManager.RangeResult <MergePlayerData>b__132_5(StorageManager.RangeResult result1, StorageManager.RangeResult result2)
			{
				return null;
			}

			[Token(Token = "0x6001052")]
			[Address(RVA = "0x1BA5D0C", Offset = "0x1BA5D0C", VA = "0x1BA5D0C")]
			internal int <LogPlayer>b__133_0(int[] ints)
			{
				return default(int);
			}

			[Token(Token = "0x6001053")]
			[Address(RVA = "0x1BA5D18", Offset = "0x1BA5D18", VA = "0x1BA5D18")]
			internal string <LogPlayer>b__133_1(int[] ints, string s)
			{
				return null;
			}

			[Token(Token = "0x6001054")]
			[Address(RVA = "0x1BA5E48", Offset = "0x1BA5E48", VA = "0x1BA5E48")]
			internal string <LogPlayer>b__133_5(int i, string s1)
			{
				return null;
			}

			[Token(Token = "0x6001055")]
			[Address(RVA = "0x1BA5E70", Offset = "0x1BA5E70", VA = "0x1BA5E70")]
			internal string <LogPlayer>b__133_2(EventHighScore[][] scores1, string s)
			{
				return null;
			}

			[Token(Token = "0x6001056")]
			[Address(RVA = "0x1BA5FA0", Offset = "0x1BA5FA0", VA = "0x1BA5FA0")]
			internal string <LogPlayer>b__133_6(EventHighScore[] scores2, string s1)
			{
				return null;
			}

			[Token(Token = "0x6001057")]
			[Address(RVA = "0x1BA60D0", Offset = "0x1BA60D0", VA = "0x1BA60D0")]
			internal string <LogPlayer>b__133_7(EventHighScore score, string s2)
			{
				return null;
			}

			[Token(Token = "0x6001058")]
			[Address(RVA = "0x1BA6130", Offset = "0x1BA6130", VA = "0x1BA6130")]
			internal string <LogPlayer>b__133_3(int i, string s)
			{
				return null;
			}

			[Token(Token = "0x6001059")]
			[Address(RVA = "0x1BA6158", Offset = "0x1BA6158", VA = "0x1BA6158")]
			internal string <LogPlayer>b__133_4(StorageManager.RangeResult[] results, string s)
			{
				return null;
			}

			[Token(Token = "0x600105A")]
			[Address(RVA = "0x1BA6288", Offset = "0x1BA6288", VA = "0x1BA6288")]
			internal string <LogPlayer>b__133_8(StorageManager.RangeResult result, string s1)
			{
				return null;
			}
		}

		[Token(Token = "0x4000870")]
		private const string PLAYER_FILE_NAME = "Player";

		[Token(Token = "0x4000871")]
		private const string PLAYER_BACKUP_FILE_NAME = "PlayerBackup";

		[Token(Token = "0x4000872")]
		private const string PLAYER_BACKUP_LAST_RESORT_FILE_NAME = "PlayerBackupArchived";

		[Token(Token = "0x4000873")]
		private const string PLAYER_BACKUP_MAJOR_UPDATE = "PlayerBackupPriorTo_";

		[Token(Token = "0x4000874")]
		private const string UPDATESUFFIX = ".ubak";

		[Token(Token = "0x4000875")]
		private const string GCVR_PLAYER_MIGRATION_FLAG = "GCVR_PLAYER_MIGRATION_FLAG";

		[Token(Token = "0x4000876")]
		public const string FIRSTVERSION = "FirstVersion";

		[Token(Token = "0x4000877")]
		public const string PROFILE_FIRST_VERSION = "ProfileFirstVersion";

		[Token(Token = "0x4000878")]
		public const int AMMO_BOX_MAXIMUM = 10;

		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static GameObject _globalControl;

		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int _activeWeaponId;

		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int[,] _ownershipMatrix;

		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StorageManager.GatedPurchase[] storedGatedPurchases;

		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private StorageManager.WeaponConfig[] _weaponConfigs;

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public readonly List<ProductIATSubmit> _purchasedIAT;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public List<ProductSubmit> _purchasedProducts;

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int[][] _ladderProgress;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private EventHighScore[][][] _ladderEventScores;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int[][] _ladderHighScores;

		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public int[] weaponExperience;

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int[] weaponsRangesCompleted;

		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int previousRank;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int tutorialStage;

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private StorageManager.RangeResult[][] _rangeResults;

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool firstWeaponRecieved;

		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public int fruitDestroyed;

		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AchievementData[] achievementsUnlocked;

		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int coinsSpent;

		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public int coinsEarned;

		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int coinsPurchased;

		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int prizeMoneySpent;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int prizeMoneyEarned;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int prizeMoneyPurchased;

		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool isFreeAmmoRefillUsed;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		public bool facebookCoinsClaimed;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int _prizeMoneyOwned;

		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int _coinsOwned;

		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private int _ammunitionTokens;

		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool allowInfiniteCash;

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Hashtable extraData;

		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static BackgroundWorker bw;

		[Token(Token = "0x4000899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static bool isSerializing;

		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public static bool isDeserializing;

		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		private static bool m_playerWasSerialized;

		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static string tempPlayerDataStr;

		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static Player m_deserializedPlayer;

		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static UnityEvent OnSaveRequested;

		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static UnityEvent OnLoadRequested;

		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static UnityEvent OnMigrateProducts;

		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static string m_playerName;

		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static string m_displayName;

		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static string m_curPlayerDataStr;

		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public string tempName;

		[Token(Token = "0x170001E6")]
		public static Player Instance
		{
			[Token(Token = "0x6000C24")]
			[Address(RVA = "0x14C9284", Offset = "0x14C9284", VA = "0x14C9284")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C25")]
			[Address(RVA = "0x14C9AC8", Offset = "0x14C9AC8", VA = "0x14C9AC8")]
			set
			{
			}
		}

		[Token(Token = "0x170001E7")]
		public string playerName
		{
			[Token(Token = "0x6000C28")]
			[Address(RVA = "0x14C9F58", Offset = "0x14C9F58", VA = "0x14C9F58")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C29")]
			[Address(RVA = "0x14CA040", Offset = "0x14CA040", VA = "0x14CA040")]
			set
			{
			}
		}

		[Token(Token = "0x170001E8")]
		public int activeWeaponID
		{
			[Token(Token = "0x6000C2A")]
			[Address(RVA = "0x14CA0E8", Offset = "0x14CA0E8", VA = "0x14CA0E8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C2B")]
			[Address(RVA = "0x14CA30C", Offset = "0x14CA30C", VA = "0x14CA30C")]
			set
			{
			}
		}

		[Token(Token = "0x170001E9")]
		public StorageManager.WeaponConfig[] WeaponConfigs
		{
			[Token(Token = "0x6000C2F")]
			[Address(RVA = "0x14CA59C", Offset = "0x14CA59C", VA = "0x14CA59C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C30")]
			[Address(RVA = "0x14CA630", Offset = "0x14CA630", VA = "0x14CA630")]
			set
			{
			}
		}

		[Token(Token = "0x170001EA")]
		private StorageManager.WeaponStatistics WeaponStatistics
		{
			[Token(Token = "0x6000C31")]
			[Address(RVA = "0x14CA638", Offset = "0x14CA638", VA = "0x14CA638")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C32")]
			[Address(RVA = "0x14CA65C", Offset = "0x14CA65C", VA = "0x14CA65C")]
			set
			{
			}
		}

		[Token(Token = "0x170001EB")]
		public ProductSubmit[] PurchasedProducts
		{
			[Token(Token = "0x6000C34")]
			[Address(RVA = "0x14CA728", Offset = "0x14CA728", VA = "0x14CA728")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EC")]
		public int FirstPurchasedWeaponID
		{
			[Token(Token = "0x6000C37")]
			[Address(RVA = "0x14CA280", Offset = "0x14CA280", VA = "0x14CA280")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001ED")]
		public int Score
		{
			[Token(Token = "0x6000C39")]
			[Address(RVA = "0x14CB2DC", Offset = "0x14CB2DC", VA = "0x14CB2DC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001EE")]
		public int localScore
		{
			[Token(Token = "0x6000C3A")]
			[Address(RVA = "0x14CB348", Offset = "0x14CB348", VA = "0x14CB348")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001EF")]
		public static int[][] LadderProgress
		{
			[Token(Token = "0x6000C3B")]
			[Address(RVA = "0x14CB354", Offset = "0x14CB354", VA = "0x14CB354")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C3C")]
			[Address(RVA = "0x14CB3BC", Offset = "0x14CB3BC", VA = "0x14CB3BC")]
			set
			{
			}
		}

		[Token(Token = "0x170001F0")]
		public int[][] ladderProgress
		{
			[Token(Token = "0x6000C3D")]
			[Address(RVA = "0x14CB42C", Offset = "0x14CB42C", VA = "0x14CB42C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F1")]
		public static EventHighScore[][][] LadderEventScores
		{
			[Token(Token = "0x6000C3E")]
			[Address(RVA = "0x14CB434", Offset = "0x14CB434", VA = "0x14CB434")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C3F")]
			[Address(RVA = "0x14CB49C", Offset = "0x14CB49C", VA = "0x14CB49C")]
			set
			{
			}
		}

		[Token(Token = "0x170001F2")]
		public EventHighScore[][][] ladderEventScores
		{
			[Token(Token = "0x6000C40")]
			[Address(RVA = "0x14CB50C", Offset = "0x14CB50C", VA = "0x14CB50C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F3")]
		public static int[][] LadderHighScores
		{
			[Token(Token = "0x6000C41")]
			[Address(RVA = "0x14CB514", Offset = "0x14CB514", VA = "0x14CB514")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C42")]
			[Address(RVA = "0x14CB57C", Offset = "0x14CB57C", VA = "0x14CB57C")]
			set
			{
			}
		}

		[Token(Token = "0x170001F4")]
		private PlayerProgressSubmit PlayerProgress
		{
			[Token(Token = "0x6000C43")]
			[Address(RVA = "0x14CB5EC", Offset = "0x14CB5EC", VA = "0x14CB5EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F5")]
		public static StorageManager.RangeResult[][] RangeResults
		{
			[Token(Token = "0x6000C45")]
			[Address(RVA = "0x14CB724", Offset = "0x14CB724", VA = "0x14CB724")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C44")]
			[Address(RVA = "0x14CB6B4", Offset = "0x14CB6B4", VA = "0x14CB6B4")]
			set
			{
			}
		}

		[Token(Token = "0x170001F6")]
		private StorageManager.RangeResultBase[] RangeResultsFlat
		{
			[Token(Token = "0x6000C46")]
			[Address(RVA = "0x14CB78C", Offset = "0x14CB78C", VA = "0x14CB78C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F7")]
		public static int PrizeMoneyOwned
		{
			[Token(Token = "0x6000C47")]
			[Address(RVA = "0x14CBDD4", Offset = "0x14CBDD4", VA = "0x14CBDD4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C48")]
			[Address(RVA = "0x14CBEA8", Offset = "0x14CBEA8", VA = "0x14CBEA8")]
			set
			{
			}
		}

		[Token(Token = "0x170001F8")]
		public static int CoinsOwned
		{
			[Token(Token = "0x6000C49")]
			[Address(RVA = "0x14CBF14", Offset = "0x14CBF14", VA = "0x14CBF14")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C4A")]
			[Address(RVA = "0x14CBF7C", Offset = "0x14CBF7C", VA = "0x14CBF7C")]
			set
			{
			}
		}

		[Token(Token = "0x170001F9")]
		public static int AmmunitionTokens
		{
			[Token(Token = "0x6000C4B")]
			[Address(RVA = "0x14CBFE8", Offset = "0x14CBFE8", VA = "0x14CBFE8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C4C")]
			[Address(RVA = "0x14CC050", Offset = "0x14CC050", VA = "0x14CC050")]
			set
			{
			}
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0x14C9B5C", Offset = "0x14C9B5C", VA = "0x14C9B5C")]
		public Player()
		{
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0x14C9C9C", Offset = "0x14C9C9C", VA = "0x14C9C9C")]
		public Player(int weaponAllocation, int productAllocation, int[][] ladderProgress, EventHighScore[][][] ladderEventScores, int[][] ladderHighScores, StorageManager.RangeResult[][] rangeResults)
		{
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0x14CA314", Offset = "0x14CA314", VA = "0x14CA314")]
		public static int GetAttachmentUnlockProgress(int weaponId)
		{
			return default(int);
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0x14CA3B8", Offset = "0x14CA3B8", VA = "0x14CA3B8")]
		public static int GetAttachmentId(int weaponId, int attachmentIndex)
		{
			return default(int);
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0x14CA470", Offset = "0x14CA470", VA = "0x14CA470")]
		public static void SetProductOwned(int productId, int weaponId = -1)
		{
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0x14CA690", Offset = "0x14CA690", VA = "0x14CA690")]
		public void AddPurchasedProduct(int iatProductId, int saleId)
		{
		}

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0x14CA77C", Offset = "0x14CA77C", VA = "0x14CA77C")]
		public void AddPurcahsedProduct(ProductSubmit product)
		{
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0x14CA808", Offset = "0x14CA808", VA = "0x14CA808")]
		public bool IsProductOwned(int weaponId, int? assProdId)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0x14CA948", Offset = "0x14CA948", VA = "0x14CA948")]
		public void SanitizePurchasedProducts()
		{
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0x14CC0BC", Offset = "0x14CC0BC", VA = "0x14CC0BC")]
		public static void Save()
		{
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0x14CC4AC", Offset = "0x14CC4AC", VA = "0x14CC4AC")]
		public static void DeserializePlayerThreaded()
		{
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0x14CC6CC", Offset = "0x14CC6CC", VA = "0x14CC6CC")]
		public static void SerializePlayerThreaded()
		{
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0x14CC77C", Offset = "0x14CC77C", VA = "0x14CC77C")]
		private static void DoSerializationWork(object sender, DoWorkEventArgs e)
		{
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0x14CC5A0", Offset = "0x14CC5A0", VA = "0x14CC5A0")]
		private static void InitSerializationThread()
		{
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0x14C9358", Offset = "0x14C9358", VA = "0x14C9358")]
		public static void Load()
		{
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0x14CD1D4", Offset = "0x14CD1D4", VA = "0x14CD1D4")]
		public static Player RegressionCheck(Player loadedPlayer, bool playerFileValid = true)
		{
			return null;
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0x14CDC50", Offset = "0x14CDC50", VA = "0x14CDC50")]
		public static void HandleUpdateBackup()
		{
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0x14CDC54", Offset = "0x14CDC54", VA = "0x14CDC54")]
		public static void SetPlayerName(string name)
		{
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0x14CDCC0", Offset = "0x14CDCC0", VA = "0x14CDCC0")]
		public static string GetPlayerName()
		{
			return null;
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0x14CDD24", Offset = "0x14CDD24", VA = "0x14CDD24")]
		public static void SetDisplayName(string name)
		{
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0x14CDDE8", Offset = "0x14CDDE8", VA = "0x14CDDE8")]
		public static void SetPlayerData(string dataStr)
		{
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0x14CDE54", Offset = "0x14CDE54", VA = "0x14CDE54")]
		public static string GetPlayerData()
		{
			return null;
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0x14CCAD4", Offset = "0x14CCAD4", VA = "0x14CCAD4")]
		public static Player GetPlayerFromFile(string fileName)
		{
			return null;
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0x14CDA1C", Offset = "0x14CDA1C", VA = "0x14CDA1C")]
		public static Player GetLastResortBackupPlayer()
		{
			return null;
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0x14CDEB8", Offset = "0x14CDEB8", VA = "0x14CDEB8")]
		public static void Delete()
		{
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0x14CCD6C", Offset = "0x14CCD6C", VA = "0x14CCD6C")]
		private static void Init()
		{
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0x14CDFA0", Offset = "0x14CDFA0", VA = "0x14CDFA0")]
		protected Player(SerializationInfo info, StreamingContext context)
		{
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0x14CEE78", Offset = "0x14CEE78", VA = "0x14CEE78")]
		public void MergePlayerData(Player otherPlayer)
		{
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0x14CF2B8", Offset = "0x14CF2B8", VA = "0x14CF2B8")]
		public void LogPlayer(string prefix = "")
		{
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0x14CFAB8", Offset = "0x14CFAB8", VA = "0x14CFAB8", Slot = "4")]
		public void GetObjectData(SerializationInfo info, StreamingContext context)
		{
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0x14D02F4", Offset = "0x14D02F4", VA = "0x14D02F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B010", Offset = "0x76B010")]
		internal static int[] <MergePlayerData>g__MergeCompareInts|132_0(int[] ar1, int[] ar2)
		{
			return null;
		}
	}
}
namespace MiniLocale
{
	[Token(Token = "0x2000148")]
	public static class Localizer
	{
		[Token(Token = "0x20001E4")]
		public delegate void LanguageEvent();

		[Token(Token = "0x40008A5")]
		private const string _NO_STRING_FOUND = "";

		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<string, string> _strings;

		[Token(Token = "0x14000002")]
		public static event LanguageEvent SourceChanged
		{
			[Token(Token = "0x6000C64")]
			[Address(RVA = "0x17802F0", Offset = "0x17802F0", VA = "0x17802F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B020", Offset = "0x76B020")]
			add
			{
			}
			[Token(Token = "0x6000C65")]
			[Address(RVA = "0x17803E8", Offset = "0x17803E8", VA = "0x17803E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B030", Offset = "0x76B030")]
			remove
			{
			}
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0x177FCD0", Offset = "0x177FCD0", VA = "0x177FCD0")]
		public static string GetString(string tag)
		{
			return null;
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0x17814E4", Offset = "0x17814E4", VA = "0x17814E4")]
		public static void LoadSource(LanguageData data)
		{
		}
	}
}
namespace MiniLocale.Serialization
{
	[Token(Token = "0x2000149")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x7694A4", Offset = "0x7694A4")]
	public class LanguageData : ScriptableObject
	{
		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StringData[] strings;

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0x1535130", Offset = "0x1535130", VA = "0x1535130")]
		public LanguageData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200014A")]
	public class StringData
	{
		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Multiline]
		public string tag;

		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Multiline]
		public string text;

		[Token(Token = "0x170001FA")]
		public string Tag
		{
			[Token(Token = "0x6000C6A")]
			[Address(RVA = "0x1986DC8", Offset = "0x1986DC8", VA = "0x1986DC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C6B")]
			[Address(RVA = "0x1986DD0", Offset = "0x1986DD0", VA = "0x1986DD0")]
			set
			{
			}
		}

		[Token(Token = "0x170001FB")]
		public string Text
		{
			[Token(Token = "0x6000C6C")]
			[Address(RVA = "0x1986DD8", Offset = "0x1986DD8", VA = "0x1986DD8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C6D")]
			[Address(RVA = "0x1986DE0", Offset = "0x1986DE0", VA = "0x1986DE0")]
			set
			{
			}
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0x1986DE8", Offset = "0x1986DE8", VA = "0x1986DE8")]
		public StringData()
		{
		}
	}
}
namespace MiniLocale.Serialization.Editor
{
	[Token(Token = "0x200014B")]
	public static class CsvParser
	{
	}
	[Token(Token = "0x200014C")]
	public static class TsvParser
	{
		[Token(Token = "0x40008AB")]
		private const char _DELIMINATOR = '\t';

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0x198F064", Offset = "0x198F064", VA = "0x198F064")]
		public static StringData[] ParseTsv(string path)
		{
			return null;
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0x198F07C", Offset = "0x198F07C", VA = "0x198F07C")]
		public static StringData[] ParseLines(string[] lines)
		{
			return null;
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0x198F194", Offset = "0x198F194", VA = "0x198F194")]
		public static StringData ParseLine(string line)
		{
			return null;
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0x198F2B0", Offset = "0x198F2B0", VA = "0x198F2B0")]
		public static bool WriteTsv(string path, StringData[] data)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0x198F2F4", Offset = "0x198F2F4", VA = "0x198F2F4")]
		public static string[] ToLines(StringData[] data)
		{
			return null;
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0x198F418", Offset = "0x198F418", VA = "0x198F418")]
		public static string ToLine(StringData data)
		{
			return null;
		}
	}
}
namespace MiniLocale.Components
{
	[Token(Token = "0x200014D")]
	public abstract class LocalizeComponent : MonoBehaviour
	{
		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected string textTag;

		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _subscribed;

		[Token(Token = "0x170001FC")]
		public string Tag
		{
			[Token(Token = "0x6000C75")]
			[Address(RVA = "0x17800A0", Offset = "0x17800A0", VA = "0x17800A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C76")]
			[Address(RVA = "0x17800A8", Offset = "0x17800A8", VA = "0x17800A8")]
			set
			{
			}
		}

		[Token(Token = "0x6000C77")]
		public abstract void SetText(string text);

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0x1780148", Offset = "0x1780148", VA = "0x1780148", Slot = "5")]
		protected virtual void Init()
		{
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0x17800D0", Offset = "0x17800D0", VA = "0x17800D0")]
		public void Localize()
		{
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0x178014C", Offset = "0x178014C", VA = "0x178014C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x1780238", Offset = "0x1780238", VA = "0x1780238")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x1780180", Offset = "0x1780180", VA = "0x1780180")]
		private void Subscribe()
		{
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x178023C", Offset = "0x178023C", VA = "0x178023C")]
		private void Unsubscribe()
		{
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x17804E0", Offset = "0x17804E0", VA = "0x17804E0")]
		protected LocalizeComponent()
		{
		}
	}
	[Token(Token = "0x200014E")]
	public class LocalizeUguiText : LocalizeComponent
	{
		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text _text;

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x17804E8", Offset = "0x17804E8", VA = "0x17804E8", Slot = "4")]
		public override void SetText(string text)
		{
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x178050C", Offset = "0x178050C", VA = "0x178050C")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0x17805C8", Offset = "0x17805C8", VA = "0x17805C8")]
		public LocalizeUguiText()
		{
		}
	}
}
namespace TBM.PlayerOptions
{
	[Token(Token = "0x200014F")]
	public static class Options
	{
		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly HolsterWidth HolsterWidth;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly AllowHolsteredReloads HolsteredReloads;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly PlayerOption[] OPTIONS;

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0x14C4064", Offset = "0x14C4064", VA = "0x14C4064")]
		public static void LoadAll()
		{
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0x14C411C", Offset = "0x14C411C", VA = "0x14C411C")]
		public static void ClearAll()
		{
		}
	}
	[Token(Token = "0x2000150")]
	public static class Constants
	{
		[Token(Token = "0x20001E5")]
		public static class PrefNames
		{
			[Token(Token = "0x4000B52")]
			public const string ALLOW_HOLSTERED_RELOADS_KEY = "HOLSTER_RELOADING_ENABLED";

			[Token(Token = "0x4000B53")]
			public const string HOLSTER_WIDTH_KEY = "HOLSTER_WIDTH_SETTING";
		}
	}
	[Token(Token = "0x2000151")]
	public class AllowHolsteredReloads : PlayerBoolOption
	{
		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x1AAE028", Offset = "0x1AAE028", VA = "0x1AAE028")]
		public AllowHolsteredReloads()
		{
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x1AAE0D0", Offset = "0x1AAE0D0", VA = "0x1AAE0D0", Slot = "5")]
		public override void LoadFromPrefs()
		{
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x1AAE164", Offset = "0x1AAE164", VA = "0x1AAE164", Slot = "6")]
		public override void ClearPref()
		{
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x1AAE20C", Offset = "0x1AAE20C", VA = "0x1AAE20C", Slot = "4")]
		protected override void SaveToPrefs()
		{
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0x1AAE058", Offset = "0x1AAE058", VA = "0x1AAE058")]
		protected bool GetInitialValue()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000152")]
	public class HolsterWidth : PlayerIntOption
	{
		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x1533C90", Offset = "0x1533C90", VA = "0x1533C90")]
		public HolsterWidth()
		{
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x1533D34", Offset = "0x1533D34", VA = "0x1533D34", Slot = "5")]
		public override void LoadFromPrefs()
		{
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x1533DC8", Offset = "0x1533DC8", VA = "0x1533DC8", Slot = "6")]
		public override void ClearPref()
		{
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x1533E70", Offset = "0x1533E70", VA = "0x1533E70", Slot = "4")]
		protected override void SaveToPrefs()
		{
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x1533EF0", Offset = "0x1533EF0", VA = "0x1533EF0", Slot = "8")]
		protected override int GetMaxValue()
		{
			return default(int);
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x1533CBC", Offset = "0x1533CBC", VA = "0x1533CBC")]
		protected int GetInitialValue()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000153")]
	public abstract class PlayerOption
	{
		[Token(Token = "0x6000C90")]
		protected abstract void SaveToPrefs();

		[Token(Token = "0x6000C91")]
		public abstract void LoadFromPrefs();

		[Token(Token = "0x6000C92")]
		public abstract void ClearPref();

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x14D0660", Offset = "0x14D0660", VA = "0x14D0660")]
		protected PlayerOption()
		{
		}
	}
	[Token(Token = "0x2000154")]
	public abstract class PlayerOption<T> : PlayerOption
	{
		[Token(Token = "0x20001E6")]
		public class PlayerOptionEventArgs : EventArgs
		{
			[Token(Token = "0x4000B54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T prevValue;

			[Token(Token = "0x4000B55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T value;

			[Token(Token = "0x4000B56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool forced;

			[Token(Token = "0x600105F")]
			public PlayerOptionEventArgs(T previous, T curr, bool forced = false)
			{
			}
		}

		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T value;

		[Token(Token = "0x14000003")]
		public event EventHandler<PlayerOptionEventArgs> ValueChanged
		{
			[Token(Token = "0x6000C94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B040", Offset = "0x76B040")]
			add
			{
			}
			[Token(Token = "0x6000C95")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B050", Offset = "0x76B050")]
			remove
			{
			}
		}

		[Token(Token = "0x6000C96")]
		public virtual void SetValue(T newValue, bool forceChanges = false)
		{
		}

		[Token(Token = "0x6000C97")]
		public static implicit operator T(PlayerOption<T> option)
		{
			return (T)null;
		}

		[Token(Token = "0x6000C98")]
		protected PlayerOption()
		{
		}
	}
	[Token(Token = "0x2000155")]
	public abstract class PlayerIntOption : PlayerOption<int>
	{
		[Token(Token = "0x6000C99")]
		protected abstract int GetMaxValue();

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x14D03F8", Offset = "0x14D03F8", VA = "0x14D03F8", Slot = "7")]
		public override void SetValue(int newValue, bool forceChanges = false)
		{
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x14D0480", Offset = "0x14D0480", VA = "0x14D0480")]
		public void IncreaseValue(bool wrap = false)
		{
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x14D0558", Offset = "0x14D0558", VA = "0x14D0558")]
		public void DecreaseValue(bool wrap = false)
		{
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0x14D0614", Offset = "0x14D0614", VA = "0x14D0614")]
		protected PlayerIntOption()
		{
		}
	}
	[Token(Token = "0x2000156")]
	public abstract class PlayerBoolOption : PlayerOption<bool>
	{
		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0x14D03AC", Offset = "0x14D03AC", VA = "0x14D03AC")]
		protected PlayerBoolOption()
		{
		}
	}
}
namespace TBM.Extensions
{
	[Token(Token = "0x2000157")]
	public static class EnumExtensions
	{
		[Token(Token = "0x6000C9F")]
		public static T NextEnum<T>(this T src) where T : struct
		{
			return (T)null;
		}

		[Token(Token = "0x6000CA0")]
		public static T PrevEnum<T>(this T src) where T : struct
		{
			return (T)null;
		}

		[Token(Token = "0x6000CA1")]
		public static T RandomEnum<T>() where T : struct
		{
			return (T)null;
		}
	}
	[Token(Token = "0x2000158")]
	public static class GameObjectExtensions
	{
		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x15334B8", Offset = "0x15334B8", VA = "0x15334B8")]
		public static bool IsInLayerMask(this GameObject obj, int layerMask)
		{
			return default(bool);
		}
	}
}
namespace CodeStage.AntiCheat.ObscuredTypes
{
	[Serializable]
	[Token(Token = "0x2000159")]
	public struct ObscuredBool : IEquatable<ObscuredBool>
	{
		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte cryptoKey;

		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private byte currentCryptoKey;

		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[SerializeField]
		private int hiddenValue;

		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private bool fakeValue;

		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		[SerializeField]
		private bool fakeValueChanged;

		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		[SerializeField]
		private bool inited;

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x1789860", Offset = "0x1789860", VA = "0x1789860")]
		private ObscuredBool(int value)
		{
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x17898E8", Offset = "0x17898E8", VA = "0x17898E8")]
		public static void SetNewCryptoKey(byte newKey)
		{
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x1789950", Offset = "0x1789950", VA = "0x1789950")]
		public void ApplyNewCryptoKey()
		{
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x1789BF8", Offset = "0x1789BF8", VA = "0x1789BF8")]
		public static int Encrypt(bool value)
		{
			return default(int);
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x1789B64", Offset = "0x1789B64", VA = "0x1789B64")]
		public static int Encrypt(bool value, byte key)
		{
			return default(int);
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x1789C5C", Offset = "0x1789C5C", VA = "0x1789C5C")]
		public static bool Decrypt(int value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x1789CC0", Offset = "0x1789CC0", VA = "0x1789CC0")]
		public static bool Decrypt(int value, byte key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x1789D4C", Offset = "0x1789D4C", VA = "0x1789D4C")]
		public int GetEncrypted()
		{
			return default(int);
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x1789D70", Offset = "0x1789D70", VA = "0x1789D70")]
		public void SetEncrypted(int encrypted)
		{
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x1789A1C", Offset = "0x1789A1C", VA = "0x1789A1C")]
		private bool InternalDecrypt()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x1789E38", Offset = "0x1789E38", VA = "0x1789E38")]
		public static implicit operator ObscuredBool(bool value)
		{
			return default(ObscuredBool);
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x1789F04", Offset = "0x1789F04", VA = "0x1789F04")]
		public static implicit operator bool(ObscuredBool value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x1789F30", Offset = "0x1789F30", VA = "0x1789F30", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x1789FB4", Offset = "0x1789FB4", VA = "0x1789FB4", Slot = "4")]
		public bool Equals(ObscuredBool obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x1789FC8", Offset = "0x1789FC8", VA = "0x1789FC8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x1789FF8", Offset = "0x1789FF8", VA = "0x1789FF8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200015A")]
	public struct ObscuredByte : IEquatable<ObscuredByte>, IFormattable
	{
		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte cryptoKey;

		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private byte currentCryptoKey;

		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private byte hiddenValue;

		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		private byte fakeValue;

		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		private bool inited;

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x178A078", Offset = "0x178A078", VA = "0x178A078")]
		private ObscuredByte(byte value)
		{
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x178A0FC", Offset = "0x178A0FC", VA = "0x178A0FC")]
		public static void SetNewCryptoKey(byte newKey)
		{
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x178A164", Offset = "0x178A164", VA = "0x178A164")]
		public void ApplyNewCryptoKey()
		{
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x178A418", Offset = "0x178A418", VA = "0x178A418")]
		public static byte EncryptDecrypt(byte value)
		{
			return default(byte);
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x178A398", Offset = "0x178A398", VA = "0x178A398")]
		public static byte EncryptDecrypt(byte value, byte key)
		{
			return default(byte);
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0x178A47C", Offset = "0x178A47C", VA = "0x178A47C")]
		public byte GetEncrypted()
		{
			return default(byte);
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0x178A4A0", Offset = "0x178A4A0", VA = "0x178A4A0")]
		public void SetEncrypted(byte encrypted)
		{
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0x178A230", Offset = "0x178A230", VA = "0x178A230")]
		private byte InternalDecrypt()
		{
			return default(byte);
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0x178A510", Offset = "0x178A510", VA = "0x178A510")]
		public static implicit operator ObscuredByte(byte value)
		{
			return default(ObscuredByte);
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0x178A5B8", Offset = "0x178A5B8", VA = "0x178A5B8")]
		public static implicit operator byte(ObscuredByte value)
		{
			return default(byte);
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0x178A5DC", Offset = "0x178A5DC", VA = "0x178A5DC")]
		public static ObscuredByte operator ++(ObscuredByte input)
		{
			return default(ObscuredByte);
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0x178A690", Offset = "0x178A690", VA = "0x178A690")]
		public static ObscuredByte operator --(ObscuredByte input)
		{
			return default(ObscuredByte);
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0x178A744", Offset = "0x178A744", VA = "0x178A744", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0x178A7C8", Offset = "0x178A7C8", VA = "0x178A7C8", Slot = "4")]
		public bool Equals(ObscuredByte obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0x178A7DC", Offset = "0x178A7DC", VA = "0x178A7DC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0x178A808", Offset = "0x178A808", VA = "0x178A808")]
		public string ToString(string format)
		{
			return null;
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0x178A83C", Offset = "0x178A83C", VA = "0x178A83C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0x178A868", Offset = "0x178A868", VA = "0x178A868")]
		public string ToString(IFormatProvider provider)
		{
			return null;
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0x178A89C", Offset = "0x178A89C", VA = "0x178A89C", Slot = "5")]
		public string ToString(string format, IFormatProvider provider)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200015B")]
	public struct ObscuredChar : IEquatable<ObscuredChar>
	{
		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static char cryptoKey;

		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private char currentCryptoKey;

		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		private char hiddenValue;

		[Token(Token = "0x40008C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private char fakeValue;

		[Token(Token = "0x40008C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		private bool inited;

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0x178A930", Offset = "0x178A930", VA = "0x178A930")]
		private ObscuredChar(char value)
		{
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0x178A9B8", Offset = "0x178A9B8", VA = "0x178A9B8")]
		public static void SetNewCryptoKey(char newKey)
		{
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0x178AA20", Offset = "0x178AA20", VA = "0x178AA20")]
		public void ApplyNewCryptoKey()
		{
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0x178ACD8", Offset = "0x178ACD8", VA = "0x178ACD8")]
		public static char EncryptDecrypt(char value)
		{
			return default(char);
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0x178AC58", Offset = "0x178AC58", VA = "0x178AC58")]
		public static char EncryptDecrypt(char value, char key)
		{
			return default(char);
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0x178AD3C", Offset = "0x178AD3C", VA = "0x178AD3C")]
		public char GetEncrypted()
		{
			return default(char);
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0x178AD60", Offset = "0x178AD60", VA = "0x178AD60")]
		public void SetEncrypted(char encrypted)
		{
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0x178AAEC", Offset = "0x178AAEC", VA = "0x178AAEC")]
		private char InternalDecrypt()
		{
			return default(char);
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0x178ADD0", Offset = "0x178ADD0", VA = "0x178ADD0")]
		public static implicit operator ObscuredChar(char value)
		{
			return default(ObscuredChar);
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0x178AE78", Offset = "0x178AE78", VA = "0x178AE78")]
		public static implicit operator char(ObscuredChar value)
		{
			return default(char);
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0x178AE9C", Offset = "0x178AE9C", VA = "0x178AE9C")]
		public static ObscuredChar operator ++(ObscuredChar input)
		{
			return default(ObscuredChar);
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0x178AF50", Offset = "0x178AF50", VA = "0x178AF50")]
		public static ObscuredChar operator --(ObscuredChar input)
		{
			return default(ObscuredChar);
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0x178B004", Offset = "0x178B004", VA = "0x178B004", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0x178B088", Offset = "0x178B088", VA = "0x178B088", Slot = "4")]
		public bool Equals(ObscuredChar obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0x178B098", Offset = "0x178B098", VA = "0x178B098", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0x178B0C4", Offset = "0x178B0C4", VA = "0x178B0C4")]
		public string ToString(IFormatProvider provider)
		{
			return null;
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0x178B0F8", Offset = "0x178B0F8", VA = "0x178B0F8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Serializable]
	[Token(Token = "0x200015C")]
	public struct ObscuredDecimal : IEquatable<ObscuredDecimal>, IFormattable
	{
		[StructLayout(2)]
		[Token(Token = "0x20001E7")]
		private struct DecimalLongBytesUnion
		{
			[Token(Token = "0x4000B57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public decimal d;

			[Token(Token = "0x4000B58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public long l1;

			[Token(Token = "0x4000B59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public long l2;

			[Token(Token = "0x4000B5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public byte b1;

			[Token(Token = "0x4000B5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public byte b2;

			[Token(Token = "0x4000B5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
			public byte b3;

			[Token(Token = "0x4000B5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
			public byte b4;

			[Token(Token = "0x4000B5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public byte b5;

			[Token(Token = "0x4000B5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
			public byte b6;

			[Token(Token = "0x4000B60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
			public byte b7;

			[Token(Token = "0x4000B61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
			public byte b8;

			[Token(Token = "0x4000B62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public byte b9;

			[Token(Token = "0x4000B63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
			public byte b10;

			[Token(Token = "0x4000B64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
			public byte b11;

			[Token(Token = "0x4000B65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB")]
			public byte b12;

			[Token(Token = "0x4000B66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public byte b13;

			[Token(Token = "0x4000B67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
			public byte b14;

			[Token(Token = "0x4000B68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
			public byte b15;

			[Token(Token = "0x4000B69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
			public byte b16;
		}

		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static long cryptoKey;

		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private long currentCryptoKey;

		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private byte[] hiddenValue;

		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private decimal fakeValue;

		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool inited;

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0x178B974", Offset = "0x178B974", VA = "0x178B974")]
		private ObscuredDecimal(byte[] value)
		{
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0x178BA08", Offset = "0x178BA08", VA = "0x178BA08")]
		public static void SetNewCryptoKey(long newKey)
		{
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0x178BA70", Offset = "0x178BA70", VA = "0x178BA70")]
		public void ApplyNewCryptoKey()
		{
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0x178BFC4", Offset = "0x178BFC4", VA = "0x178BFC4")]
		public static decimal Encrypt(decimal value)
		{
			return default(decimal);
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0x178C040", Offset = "0x178C040", VA = "0x178C040")]
		public static decimal Encrypt(decimal value, long key)
		{
			return default(decimal);
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0x178C04C", Offset = "0x178C04C", VA = "0x178C04C")]
		private static byte[] InternalEncrypt(decimal value)
		{
			return null;
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0x178BE14", Offset = "0x178BE14", VA = "0x178BE14")]
		private static byte[] InternalEncrypt(decimal value, long key)
		{
			return null;
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0x178C0C0", Offset = "0x178C0C0", VA = "0x178C0C0")]
		public static decimal Decrypt(decimal value)
		{
			return default(decimal);
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0x178C13C", Offset = "0x178C13C", VA = "0x178C13C")]
		public static decimal Decrypt(decimal value, long key)
		{
			return default(decimal);
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0x178C148", Offset = "0x178C148", VA = "0x178C148")]
		public decimal GetEncrypted()
		{
			return default(decimal);
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x178C240", Offset = "0x178C240", VA = "0x178C240")]
		public void SetEncrypted(decimal encrypted)
		{
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x178BB4C", Offset = "0x178BB4C", VA = "0x178BB4C")]
		private decimal InternalDecrypt()
		{
			return default(decimal);
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x178C3EC", Offset = "0x178C3EC", VA = "0x178C3EC")]
		public static implicit operator ObscuredDecimal(decimal value)
		{
			return default(ObscuredDecimal);
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x178C4C4", Offset = "0x178C4C4", VA = "0x178C4C4")]
		public static implicit operator decimal(ObscuredDecimal value)
		{
			return default(decimal);
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0x178C4C8", Offset = "0x178C4C8", VA = "0x178C4C8")]
		public static ObscuredDecimal operator ++(ObscuredDecimal input)
		{
			return default(ObscuredDecimal);
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0x178C5F8", Offset = "0x178C5F8", VA = "0x178C5F8")]
		public static ObscuredDecimal operator --(ObscuredDecimal input)
		{
			return default(ObscuredDecimal);
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0x178C728", Offset = "0x178C728", VA = "0x178C728", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0x178C754", Offset = "0x178C754", VA = "0x178C754")]
		public string ToString(string format)
		{
			return null;
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0x178C790", Offset = "0x178C790", VA = "0x178C790")]
		public string ToString(IFormatProvider provider)
		{
			return null;
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x178C7CC", Offset = "0x178C7CC", VA = "0x178C7CC", Slot = "5")]
		public string ToString(string format, IFormatProvider provider)
		{
			return null;
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0x178C810", Offset = "0x178C810", VA = "0x178C810", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x178C8E0", Offset = "0x178C8E0", VA = "0x178C8E0", Slot = "4")]
		public bool Equals(ObscuredDecimal obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x178C938", Offset = "0x178C938", VA = "0x178C938", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Serializable]
	[Token(Token = "0x200015D")]
	public struct ObscuredDouble : IEquatable<ObscuredDouble>, IFormattable
	{
		[StructLayout(2)]
		[Token(Token = "0x20001E8")]
		private struct DoubleLongBytesUnion
		{
			[Token(Token = "0x4000B6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public double d;

			[Token(Token = "0x4000B6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public long l;

			[Token(Token = "0x4000B6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public byte b1;

			[Token(Token = "0x4000B6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public byte b2;

			[Token(Token = "0x4000B6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
			public byte b3;

			[Token(Token = "0x4000B6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
			public byte b4;

			[Token(Token = "0x4000B70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public byte b5;

			[Token(Token = "0x4000B71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
			public byte b6;

			[Token(Token = "0x4000B72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
			public byte b7;

			[Token(Token = "0x4000B73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
			public byte b8;
		}

		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static long cryptoKey;

		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private long currentCryptoKey;

		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private byte[] hiddenValue;

		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private double fakeValue;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inited;

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x178C9B8", Offset = "0x178C9B8", VA = "0x178C9B8")]
		private ObscuredDouble(byte[] value)
		{
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0x178CA4C", Offset = "0x178CA4C", VA = "0x178CA4C")]
		public static void SetNewCryptoKey(long newKey)
		{
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0x178CAB4", Offset = "0x178CAB4", VA = "0x178CAB4")]
		public void ApplyNewCryptoKey()
		{
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x178CEC8", Offset = "0x178CEC8", VA = "0x178CEC8")]
		public static long Encrypt(double value)
		{
			return default(long);
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x178CF40", Offset = "0x178CF40", VA = "0x178CF40")]
		public static long Encrypt(double value, long key)
		{
			return default(long);
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x178CF4C", Offset = "0x178CF4C", VA = "0x178CF4C")]
		private static byte[] InternalEncrypt(double value)
		{
			return null;
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0x178CD98", Offset = "0x178CD98", VA = "0x178CD98")]
		private static byte[] InternalEncrypt(double value, long key)
		{
			return null;
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0x178CFB8", Offset = "0x178CFB8", VA = "0x178CFB8")]
		public static double Decrypt(long value)
		{
			return default(double);
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0x178D028", Offset = "0x178D028", VA = "0x178D028")]
		public static double Decrypt(long value, long key)
		{
			return default(double);
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0x178D034", Offset = "0x178D034", VA = "0x178D034")]
		public long GetEncrypted()
		{
			return default(long);
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0x178D0E8", Offset = "0x178D0E8", VA = "0x178D0E8")]
		public void SetEncrypted(long encrypted)
		{
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0x178CB90", Offset = "0x178CB90", VA = "0x178CB90")]
		private double InternalDecrypt()
		{
			return default(double);
		}

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0x178D214", Offset = "0x178D214", VA = "0x178D214")]
		public static implicit operator ObscuredDouble(double value)
		{
			return default(ObscuredDouble);
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0x178D2D0", Offset = "0x178D2D0", VA = "0x178D2D0")]
		public static implicit operator double(ObscuredDouble value)
		{
			return default(double);
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0x178D2D4", Offset = "0x178D2D4", VA = "0x178D2D4")]
		public static ObscuredDouble operator ++(ObscuredDouble input)
		{
			return default(ObscuredDouble);
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0x178D3A8", Offset = "0x178D3A8", VA = "0x178D3A8")]
		public static ObscuredDouble operator --(ObscuredDouble input)
		{
			return default(ObscuredDouble);
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0x178D47C", Offset = "0x178D47C", VA = "0x178D47C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0x178D4A8", Offset = "0x178D4A8", VA = "0x178D4A8")]
		public string ToString(string format)
		{
			return null;
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0x178D4DC", Offset = "0x178D4DC", VA = "0x178D4DC")]
		public string ToString(IFormatProvider provider)
		{
			return null;
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0x178D510", Offset = "0x178D510", VA = "0x178D510", Slot = "5")]
		public string ToString(string format, IFormatProvider provider)
		{
			return null;
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0x178D554", Offset = "0x178D554", VA = "0x178D554", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0x178D674", Offset = "0x178D674", VA = "0x178D674", Slot = "4")]
		public bool Equals(ObscuredDouble obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x178D754", Offset = "0x178D754", VA = "0x178D754", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Serializable]
	[Token(Token = "0x200015E")]
	public struct ObscuredFloat : IEquatable<ObscuredFloat>, IFormattable
	{
		[StructLayout(2)]
		[Token(Token = "0x20001E9")]
		private struct FloatIntBytesUnion
		{
			[Token(Token = "0x4000B74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float f;

			[Token(Token = "0x4000B75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int i;

			[Token(Token = "0x4000B76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public byte b1;

			[Token(Token = "0x4000B77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public byte b2;

			[Token(Token = "0x4000B78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
			public byte b3;

			[Token(Token = "0x4000B79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
			public byte b4;
		}

		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int cryptoKey;

		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private int currentCryptoKey;

		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private byte[] hiddenValue;

		[Token(Token = "0x40008D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private float fakeValue;

		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private bool inited;

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x178D7D4", Offset = "0x178D7D4", VA = "0x178D7D4")]
		private ObscuredFloat(byte[] value)
		{
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x178D868", Offset = "0x178D868", VA = "0x178D868")]
		public static void SetNewCryptoKey(int newKey)
		{
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0x178D8D0", Offset = "0x178D8D0", VA = "0x178D8D0")]
		public void ApplyNewCryptoKey()
		{
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0x178DC60", Offset = "0x178DC60", VA = "0x178DC60")]
		public static int Encrypt(float value)
		{
			return default(int);
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0x178DCD8", Offset = "0x178DCD8", VA = "0x178DCD8")]
		public static int Encrypt(float value, int key)
		{
			return default(int);
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0x178DCE4", Offset = "0x178DCE4", VA = "0x178DCE4")]
		private static byte[] InternalEncrypt(float value)
		{
			return null;
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0x178DB70", Offset = "0x178DB70", VA = "0x178DB70")]
		private static byte[] InternalEncrypt(float value, int key)
		{
			return null;
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0x178DD50", Offset = "0x178DD50", VA = "0x178DD50")]
		public static float Decrypt(int value)
		{
			return default(float);
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0x178DDC0", Offset = "0x178DDC0", VA = "0x178DDC0")]
		public static float Decrypt(int value, int key)
		{
			return default(float);
		}

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0x178DDCC", Offset = "0x178DDCC", VA = "0x178DDCC")]
		public int GetEncrypted()
		{
			return default(int);
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0x178DE40", Offset = "0x178DE40", VA = "0x178DE40")]
		public void SetEncrypted(int encrypted)
		{
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0x178D9AC", Offset = "0x178D9AC", VA = "0x178D9AC")]
		private float InternalDecrypt()
		{
			return default(float);
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0x178DF2C", Offset = "0x178DF2C", VA = "0x178DF2C")]
		public static implicit operator ObscuredFloat(float value)
		{
			return default(ObscuredFloat);
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0x178DFF0", Offset = "0x178DFF0", VA = "0x178DFF0")]
		public static implicit operator float(ObscuredFloat value)
		{
			return default(float);
		}

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0x178DFF4", Offset = "0x178DFF4", VA = "0x178DFF4")]
		public static ObscuredFloat operator ++(ObscuredFloat input)
		{
			return default(ObscuredFloat);
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0x178E0CC", Offset = "0x178E0CC", VA = "0x178E0CC")]
		public static ObscuredFloat operator --(ObscuredFloat input)
		{
			return default(ObscuredFloat);
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0x178E1A4", Offset = "0x178E1A4", VA = "0x178E1A4", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0x178E288", Offset = "0x178E288", VA = "0x178E288", Slot = "4")]
		public bool Equals(ObscuredFloat obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0x178E300", Offset = "0x178E300", VA = "0x178E300", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0x178E32C", Offset = "0x178E32C", VA = "0x178E32C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0x178E358", Offset = "0x178E358", VA = "0x178E358")]
		public string ToString(string format)
		{
			return null;
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0x178E38C", Offset = "0x178E38C", VA = "0x178E38C")]
		public string ToString(IFormatProvider provider)
		{
			return null;
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0x178E3C0", Offset = "0x178E3C0", VA = "0x178E3C0", Slot = "5")]
		public string ToString(string format, IFormatProvider provider)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x200015F")]
	public struct ObscuredInt : IEquatable<ObscuredInt>, IFormattable
	{
		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int cryptoKey;

		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private int currentCryptoKey;

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		[SerializeField]
		private int hiddenValue;

		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private int fakeValue;

		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private bool inited;

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0x178EAB8", Offset = "0x178EAB8", VA = "0x178EAB8")]
		private ObscuredInt(int value)
		{
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0x178EB3C", Offset = "0x178EB3C", VA = "0x178EB3C")]
		public static void SetNewCryptoKey(int newKey)
		{
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0x178EBA4", Offset = "0x178EBA4", VA = "0x178EBA4")]
		public void ApplyNewCryptoKey()
		{
		}

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0x178EE44", Offset = "0x178EE44", VA = "0x178EE44")]
		public static int Encrypt(int value)
		{
			return default(int);
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0x178EDC8", Offset = "0x178EDC8", VA = "0x178EDC8")]
		public static int Encrypt(int value, int key)
		{
			return default(int);
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0x178EEA8", Offset = "0x178EEA8", VA = "0x178EEA8")]
		public static int Decrypt(int value)
		{
			return default(int);
		}

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0x178EF0C", Offset = "0x178EF0C", VA = "0x178EF0C")]
		public static int Decrypt(int value, int key)
		{
			return default(int);
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0x178EF88", Offset = "0x178EF88", VA = "0x178EF88")]
		public int GetEncrypted()
		{
			return default(int);
		}

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0x178EFAC", Offset = "0x178EFAC", VA = "0x178EFAC")]
		public void SetEncrypted(int encrypted)
		{
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0x178EC70", Offset = "0x178EC70", VA = "0x178EC70")]
		private int InternalDecrypt()
		{
			return default(int);
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0x178F01C", Offset = "0x178F01C", VA = "0x178F01C")]
		public static implicit operator ObscuredInt(int value)
		{
			return default(ObscuredInt);
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x178F0C4", Offset = "0x178F0C4", VA = "0x178F0C4")]
		public static implicit operator int(ObscuredInt value)
		{
			return default(int);
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x178F0E8", Offset = "0x178F0E8", VA = "0x178F0E8")]
		public static ObscuredInt operator ++(ObscuredInt input)
		{
			return default(ObscuredInt);
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x178F19C", Offset = "0x178F19C", VA = "0x178F19C")]
		public static ObscuredInt operator --(ObscuredInt input)
		{
			return default(ObscuredInt);
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x178F250", Offset = "0x178F250", VA = "0x178F250", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x178F2D4", Offset = "0x178F2D4", VA = "0x178F2D4", Slot = "4")]
		public bool Equals(ObscuredInt obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0x178F2E8", Offset = "0x178F2E8", VA = "0x178F2E8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0x178F314", Offset = "0x178F314", VA = "0x178F314", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0x178F340", Offset = "0x178F340", VA = "0x178F340")]
		public string ToString(string format)
		{
			return null;
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0x178F374", Offset = "0x178F374", VA = "0x178F374")]
		public string ToString(IFormatProvider provider)
		{
			return null;
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0x178F3A8", Offset = "0x178F3A8", VA = "0x178F3A8", Slot = "5")]
		public string ToString(string format, IFormatProvider provider)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000160")]
	public struct ObscuredLong : IEquatable<ObscuredLong>, IFormattable
	{
		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static long cryptoKey;

		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private long currentCryptoKey;

		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private long hiddenValue;

		[Token(Token = "0x40008DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private long fakeValue;

		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inited;

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0x178FBD8", Offset = "0x178FBD8", VA = "0x178FBD8")]
		private ObscuredLong(long value)
		{
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0x178FC5C", Offset = "0x178FC5C", VA = "0x178FC5C")]
		public static void SetNewCryptoKey(long newKey)
		{
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0x178FCC4", Offset = "0x178FCC4", VA = "0x178FCC4")]
		public void ApplyNewCryptoKey()
		{
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0x178FF64", Offset = "0x178FF64", VA = "0x178FF64")]
		public static long Encrypt(long value)
		{
			return default(long);
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0x178FFC8", Offset = "0x178FFC8", VA = "0x178FFC8")]
		public static long Decrypt(long value)
		{
			return default(long);
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0x178FEE8", Offset = "0x178FEE8", VA = "0x178FEE8")]
		public static long Encrypt(long value, long key)
		{
			return default(long);
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0x179002C", Offset = "0x179002C", VA = "0x179002C")]
		public static long Decrypt(long value, long key)
		{
			return default(long);
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0x17900A8", Offset = "0x17900A8", VA = "0x17900A8")]
		public long GetEncrypted()
		{
			return default(long);
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0x17900CC", Offset = "0x17900CC", VA = "0x17900CC")]
		public void SetEncrypted(long encrypted)
		{
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0x178FD90", Offset = "0x178FD90", VA = "0x178FD90")]
		private long InternalDecrypt()
		{
			return default(long);
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0x179013C", Offset = "0x179013C", VA = "0x179013C")]
		public static implicit operator ObscuredLong(long value)
		{
			return default(ObscuredLong);
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0x17901F8", Offset = "0x17901F8", VA = "0x17901F8")]
		public static implicit operator long(ObscuredLong value)
		{
			return default(long);
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0x17901FC", Offset = "0x17901FC", VA = "0x17901FC")]
		public static ObscuredLong operator ++(ObscuredLong input)
		{
			return default(ObscuredLong);
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0x17902B8", Offset = "0x17902B8", VA = "0x17902B8")]
		public static ObscuredLong operator --(ObscuredLong input)
		{
			return default(ObscuredLong);
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0x1790374", Offset = "0x1790374", VA = "0x1790374", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0x17903F8", Offset = "0x17903F8", VA = "0x17903F8", Slot = "4")]
		public bool Equals(ObscuredLong obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0x179040C", Offset = "0x179040C", VA = "0x179040C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0x1790438", Offset = "0x1790438", VA = "0x1790438", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0x1790464", Offset = "0x1790464", VA = "0x1790464")]
		public string ToString(string format)
		{
			return null;
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0x1790498", Offset = "0x1790498", VA = "0x1790498")]
		public string ToString(IFormatProvider provider)
		{
			return null;
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0x17904CC", Offset = "0x17904CC", VA = "0x17904CC", Slot = "5")]
		public string ToString(string format, IFormatProvider provider)
		{
			return null;
		}
	}
	[Token(Token = "0x2000161")]
	public static class ObscuredPrefs
	{
		[Token(Token = "0x20001EA")]
		public enum DeviceLockLevel : byte
		{
			[Token(Token = "0x4000B7B")]
			None,
			[Token(Token = "0x4000B7C")]
			Soft,
			[Token(Token = "0x4000B7D")]
			Strict
		}

		[Token(Token = "0x40008DD")]
		private const string RAW_NOT_FOUND = "{not_found}";

		[Token(Token = "0x40008DE")]
		private const string DATA_SEPARATOR = "|";

		[Token(Token = "0x40008DF")]
		private const char RAW_SEPARATOR = ':';

		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string encryptionKey;

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool savesAlterationReported;

		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		private static bool foreignSavesReported;

		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string deviceHash;

		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action onAlterationDetected;

		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static bool preservePlayerPrefs;

		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Action onPossibleForeignSavesDetected;

		[Token(Token = "0x40008E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static DeviceLockLevel lockToDevice;

		[Token(Token = "0x40008E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public static bool readForeignSaves;

		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public static bool emergencyMode;

		[Token(Token = "0x170001FD")]
		private static string DeviceHash
		{
			[Token(Token = "0x6000D4E")]
			[Address(RVA = "0x1790564", Offset = "0x1790564", VA = "0x1790564")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0x17906BC", Offset = "0x17906BC", VA = "0x17906BC")]
		public static void ForceLockToDeviceInit()
		{
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0x17907B0", Offset = "0x17907B0", VA = "0x17907B0")]
		public static void ForceDeviceID(string newDeviceID)
		{
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0x179081C", Offset = "0x179081C", VA = "0x179081C")]
		public static void SetNewCryptoKey(string newKey)
		{
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0x1790888", Offset = "0x1790888", VA = "0x1790888")]
		public static void SetInt(string key, int value)
		{
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0x1790998", Offset = "0x1790998", VA = "0x1790998")]
		public static int GetInt(string key)
		{
			return default(int);
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0x17909FC", Offset = "0x17909FC", VA = "0x17909FC")]
		public static int GetInt(string key, int defaultValue)
		{
			return default(int);
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0x1790E4C", Offset = "0x1790E4C", VA = "0x1790E4C")]
		public static void SetString(string key, string value)
		{
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0x1790EBC", Offset = "0x1790EBC", VA = "0x1790EBC")]
		public static string GetString(string key)
		{
			return null;
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0x1790F34", Offset = "0x1790F34", VA = "0x1790F34")]
		public static string GetString(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0x1791068", Offset = "0x1791068", VA = "0x1791068")]
		public static void SetFloat(string key, float value)
		{
		}

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0x17910F0", Offset = "0x17910F0", VA = "0x17910F0")]
		public static float GetFloat(string key)
		{
			return default(float);
		}

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0x1791154", Offset = "0x1791154", VA = "0x1791154")]
		public static float GetFloat(string key, float defaultValue)
		{
			return default(float);
		}

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0x17912B4", Offset = "0x17912B4", VA = "0x17912B4")]
		public static void SetDouble(string key, double value)
		{
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0x179133C", Offset = "0x179133C", VA = "0x179133C")]
		public static double GetDouble(string key)
		{
			return default(double);
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0x17913A0", Offset = "0x17913A0", VA = "0x17913A0")]
		public static double GetDouble(string key, double defaultValue)
		{
			return default(double);
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0x1791478", Offset = "0x1791478", VA = "0x1791478")]
		public static void SetLong(string key, long value)
		{
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0x1791500", Offset = "0x1791500", VA = "0x1791500")]
		public static long GetLong(string key)
		{
			return default(long);
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0x1791564", Offset = "0x1791564", VA = "0x1791564")]
		public static long GetLong(string key, long defaultValue)
		{
			return default(long);
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0x1791604", Offset = "0x1791604", VA = "0x1791604")]
		public static void SetBool(string key, bool value)
		{
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0x1791678", Offset = "0x1791678", VA = "0x1791678")]
		public static bool GetBool(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0x17916DC", Offset = "0x17916DC", VA = "0x17916DC")]
		public static bool GetBool(string key, bool defaultValue)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0x1791788", Offset = "0x1791788", VA = "0x1791788")]
		public static void SetByteArray(string key, byte[] value)
		{
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0x1791830", Offset = "0x1791830", VA = "0x1791830")]
		public static byte[] GetByteArray(string key)
		{
			return null;
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0x1791898", Offset = "0x1791898", VA = "0x1791898")]
		public static byte[] GetByteArray(string key, byte defaultValue, int defaultLength)
		{
			return null;
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0x17919CC", Offset = "0x17919CC", VA = "0x17919CC")]
		public static void SetVector2(string key, Vector2 value)
		{
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0x1791A94", Offset = "0x1791A94", VA = "0x1791A94")]
		public static Vector2 GetVector2(string key)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0x1791B14", Offset = "0x1791B14", VA = "0x1791B14")]
		public static Vector2 GetVector2(string key, Vector2 defaultValue)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0x1791C90", Offset = "0x1791C90", VA = "0x1791C90")]
		public static void SetVector3(string key, Vector3 value)
		{
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0x1791ED0", Offset = "0x1791ED0", VA = "0x1791ED0")]
		public static Vector3 GetVector3(string key)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0x1791F60", Offset = "0x1791F60", VA = "0x1791F60")]
		public static Vector3 GetVector3(string key, Vector3 defaultValue)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0x1792110", Offset = "0x1792110", VA = "0x1792110")]
		public static void SetQuaternion(string key, Quaternion value)
		{
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0x17923D4", Offset = "0x17923D4", VA = "0x17923D4")]
		public static Quaternion GetQuaternion(string key)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0x179246C", Offset = "0x179246C", VA = "0x179246C")]
		public static Quaternion GetQuaternion(string key, Quaternion defaultValue)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0x1792668", Offset = "0x1792668", VA = "0x1792668")]
		public static void SetColor(string key, Color value)
		{
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0x179292C", Offset = "0x179292C", VA = "0x179292C")]
		public static Color GetColor(string key)
		{
			return default(Color);
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x17929C4", Offset = "0x17929C4", VA = "0x17929C4")]
		public static Color GetColor(string key, Color defaultValue)
		{
			return default(Color);
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x1792BC0", Offset = "0x1792BC0", VA = "0x1792BC0")]
		public static bool HasKey(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x1792C48", Offset = "0x1792C48", VA = "0x1792C48")]
		public static void DeleteKey(string key)
		{
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x1792CBC", Offset = "0x1792CBC", VA = "0x1792CBC")]
		public static void DeleteAll()
		{
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x1792CC4", Offset = "0x1792CC4", VA = "0x1792CC4")]
		public static void Save()
		{
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0x1790910", Offset = "0x1790910", VA = "0x1790910")]
		private static void SetStringValue(string key, string value)
		{
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x1790C64", Offset = "0x1790C64", VA = "0x1790C64")]
		public static string GetData(string key, string defaultValueRaw)
		{
			return null;
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0x1790B5C", Offset = "0x1790B5C", VA = "0x1790B5C")]
		public static string EncryptKey(string key)
		{
			return null;
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x17934C4", Offset = "0x17934C4", VA = "0x17934C4")]
		public static string DecryptKey(string key)
		{
			return null;
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x1792CCC", Offset = "0x1792CCC", VA = "0x1792CCC")]
		public static string EncryptValue(string value, string key)
		{
			return null;
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x1792FE4", Offset = "0x1792FE4", VA = "0x1792FE4")]
		public static string DecryptValue(string value, string key)
		{
			return null;
		}

		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0x1793A48", Offset = "0x1793A48", VA = "0x1793A48")]
		private static string CalculateChecksum(string input)
		{
			return null;
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x1793B98", Offset = "0x1793B98", VA = "0x1793B98")]
		private static void SavesTampered()
		{
		}

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0x1793C74", Offset = "0x1793C74", VA = "0x1793C74")]
		private static void PossibleForeignSavesDetected()
		{
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x179062C", Offset = "0x179062C", VA = "0x179062C")]
		private static string GetDeviceID()
		{
			return null;
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x17935D4", Offset = "0x17935D4", VA = "0x17935D4")]
		private static string EncryptKeyDeprecated(string key)
		{
			return null;
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x1793734", Offset = "0x1793734", VA = "0x1793734")]
		private static string DecryptValueDeprecated(string value)
		{
			return null;
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x1793DC8", Offset = "0x1793DC8", VA = "0x1793DC8")]
		private static string GetDeviceIDDeprecated()
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000162")]
	public struct ObscuredQuaternion
	{
		[Token(Token = "0x20001EB")]
		public struct RawEncryptedQuaternion
		{
			[Token(Token = "0x4000B7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal int x;

			[Token(Token = "0x4000B7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal int y;

			[Token(Token = "0x4000B80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal int z;

			[Token(Token = "0x4000B81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			internal int w;

			[Token(Token = "0x6001060")]
			[Address(RVA = "0x173B75C", Offset = "0x173B75C", VA = "0x173B75C")]
			private RawEncryptedQuaternion(float x, float y, float z, float w)
			{
			}

			[Token(Token = "0x6001061")]
			[Address(RVA = "0x173B778", Offset = "0x173B778", VA = "0x173B778")]
			public static explicit operator Quaternion(RawEncryptedQuaternion value)
			{
				return default(Quaternion);
			}

			[Token(Token = "0x6001062")]
			[Address(RVA = "0x173B7C0", Offset = "0x173B7C0", VA = "0x173B7C0")]
			public static explicit operator RawEncryptedQuaternion(Quaternion value)
			{
				return default(RawEncryptedQuaternion);
			}
		}

		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int cryptoKey;

		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly Quaternion initialFakeValue;

		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int currentCryptoKey;

		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private RawEncryptedQuaternion hiddenValue;

		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Quaternion fakeValue;

		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool inited;

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x1794D00", Offset = "0x1794D00", VA = "0x1794D00")]
		private ObscuredQuaternion(RawEncryptedQuaternion value)
		{
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x1794D9C", Offset = "0x1794D9C", VA = "0x1794D9C")]
		public static void SetNewCryptoKey(int newKey)
		{
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x1794E04", Offset = "0x1794E04", VA = "0x1794E04")]
		public void ApplyNewCryptoKey()
		{
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x17951D4", Offset = "0x17951D4", VA = "0x17951D4")]
		public static RawEncryptedQuaternion Encrypt(Quaternion value)
		{
			return default(RawEncryptedQuaternion);
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0x17950F4", Offset = "0x17950F4", VA = "0x17950F4")]
		public static RawEncryptedQuaternion Encrypt(Quaternion value, int key)
		{
			return default(RawEncryptedQuaternion);
		}

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x1795260", Offset = "0x1795260", VA = "0x1795260")]
		public static Quaternion Decrypt(RawEncryptedQuaternion value)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x17952D4", Offset = "0x17952D4", VA = "0x17952D4")]
		public static Quaternion Decrypt(RawEncryptedQuaternion value, int key)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x17953A4", Offset = "0x17953A4", VA = "0x17953A4")]
		public RawEncryptedQuaternion GetEncrypted()
		{
			return default(RawEncryptedQuaternion);
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x17953CC", Offset = "0x17953CC", VA = "0x17953CC")]
		public void SetEncrypted(RawEncryptedQuaternion encrypted)
		{
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x1794EF8", Offset = "0x1794EF8", VA = "0x1794EF8")]
		private Quaternion InternalDecrypt()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x1795448", Offset = "0x1795448", VA = "0x1795448")]
		private bool CompareQuaternionsWithTolerance(Quaternion q1, Quaternion q2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0x17955A4", Offset = "0x17955A4", VA = "0x17955A4")]
		public static implicit operator ObscuredQuaternion(Quaternion value)
		{
			return default(ObscuredQuaternion);
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0x17956A4", Offset = "0x17956A4", VA = "0x17956A4")]
		public static implicit operator Quaternion(ObscuredQuaternion value)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0x17956A8", Offset = "0x17956A8", VA = "0x17956A8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0x17956D8", Offset = "0x17956D8", VA = "0x17956D8", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0x1795708", Offset = "0x1795708", VA = "0x1795708")]
		public string ToString(string format)
		{
			return null;
		}

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0x1795748", Offset = "0x1795748", VA = "0x1795748")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x76B090", Offset = "0x76B090")]
		public static Quaternion EncryptDeprecated(Quaternion value)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0x17957D4", Offset = "0x17957D4", VA = "0x17957D4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x76B0CC", Offset = "0x76B0CC")]
		public static Quaternion EncryptDeprecated(Quaternion value, int key)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0x17958BC", Offset = "0x17958BC", VA = "0x17958BC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x76B108", Offset = "0x76B108")]
		public static Quaternion DecryptDeprecated(Quaternion value)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0x1795948", Offset = "0x1795948", VA = "0x1795948")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x76B144", Offset = "0x76B144")]
		public static Quaternion DecryptDeprecated(Quaternion value, int key)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0x1795A30", Offset = "0x1795A30", VA = "0x1795A30")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x76B180", Offset = "0x76B180")]
		public Quaternion GetEncryptedDeprecated()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0x1795A5C", Offset = "0x1795A5C", VA = "0x1795A5C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x76B1BC", Offset = "0x76B1BC")]
		public void SetEncryptedDeprecated(Quaternion encrypted)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000163")]
	public struct ObscuredSByte : IEquatable<ObscuredSByte>, IFormattable
	{
		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static sbyte cryptoKey;

		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private sbyte currentCryptoKey;

		[Token(Token = "0x40008F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private sbyte hiddenValue;

		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		private sbyte fakeValue;

		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		private bool inited;

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0x1795B6C", Offset = "0x1795B6C", VA = "0x1795B6C")]
		private ObscuredSByte(sbyte value)
		{
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0x1795BF0", Offset = "0x1795BF0", VA = "0x1795BF0")]
		public static void SetNewCryptoKey(sbyte newKey)
		{
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0x1795C58", Offset = "0x1795C58", VA = "0x1795C58")]
		public void ApplyNewCryptoKey()
		{
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0x1795F0C", Offset = "0x1795F0C", VA = "0x1795F0C")]
		public static sbyte EncryptDecrypt(sbyte value)
		{
			return default(sbyte);
		}

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0x1795E8C", Offset = "0x1795E8C", VA = "0x1795E8C")]
		public static sbyte EncryptDecrypt(sbyte value, sbyte key)
		{
			return default(sbyte);
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0x1795F70", Offset = "0x1795F70", VA = "0x1795F70")]
		public sbyte GetEncrypted()
		{
			return default(sbyte);
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0x1795F94", Offset = "0x1795F94", VA = "0x1795F94")]
		public void SetEncrypted(sbyte encrypted)
		{
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0x1795D24", Offset = "0x1795D24", VA = "0x1795D24")]
		private sbyte InternalDecrypt()
		{
			return default(sbyte);
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0x1796004", Offset = "0x1796004", VA = "0x1796004")]
		public static implicit operator ObscuredSByte(sbyte value)
		{
			return default(ObscuredSByte);
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0x17960AC", Offset = "0x17960AC", VA = "0x17960AC")]
		public static implicit operator sbyte(ObscuredSByte value)
		{
			return default(sbyte);
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0x17960D0", Offset = "0x17960D0", VA = "0x17960D0")]
		public static ObscuredSByte operator ++(ObscuredSByte input)
		{
			return default(ObscuredSByte);
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0x1796184", Offset = "0x1796184", VA = "0x1796184")]
		public static ObscuredSByte operator --(ObscuredSByte input)
		{
			return default(ObscuredSByte);
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0x1796238", Offset = "0x1796238", VA = "0x1796238", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0x17962BC", Offset = "0x17962BC", VA = "0x17962BC", Slot = "4")]
		public bool Equals(ObscuredSByte obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0x17962D0", Offset = "0x17962D0", VA = "0x17962D0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0x17962FC", Offset = "0x17962FC", VA = "0x17962FC")]
		public string ToString(string format)
		{
			return null;
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0x1796330", Offset = "0x1796330", VA = "0x1796330", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0x179635C", Offset = "0x179635C", VA = "0x179635C")]
		public string ToString(IFormatProvider provider)
		{
			return null;
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0x1796390", Offset = "0x1796390", VA = "0x1796390", Slot = "5")]
		public string ToString(string format, IFormatProvider provider)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000164")]
	public struct ObscuredShort : IEquatable<ObscuredShort>, IFormattable
	{
		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static short cryptoKey;

		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private short currentCryptoKey;

		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		private short hiddenValue;

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private short fakeValue;

		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		private bool inited;

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0x1796424", Offset = "0x1796424", VA = "0x1796424")]
		private ObscuredShort(short value)
		{
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0x17964AC", Offset = "0x17964AC", VA = "0x17964AC")]
		public static void SetNewCryptoKey(short newKey)
		{
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0x1796514", Offset = "0x1796514", VA = "0x1796514")]
		public void ApplyNewCryptoKey()
		{
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0x17967CC", Offset = "0x17967CC", VA = "0x17967CC")]
		public static short EncryptDecrypt(short value)
		{
			return default(short);
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0x179674C", Offset = "0x179674C", VA = "0x179674C")]
		public static short EncryptDecrypt(short value, short key)
		{
			return default(short);
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0x1796830", Offset = "0x1796830", VA = "0x1796830")]
		public short GetEncrypted()
		{
			return default(short);
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0x1796854", Offset = "0x1796854", VA = "0x1796854")]
		public void SetEncrypted(short encrypted)
		{
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0x17965E0", Offset = "0x17965E0", VA = "0x17965E0")]
		private short InternalDecrypt()
		{
			return default(short);
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0x17968C4", Offset = "0x17968C4", VA = "0x17968C4")]
		public static implicit operator ObscuredShort(short value)
		{
			return default(ObscuredShort);
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0x179696C", Offset = "0x179696C", VA = "0x179696C")]
		public static implicit operator short(ObscuredShort value)
		{
			return default(short);
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0x1796990", Offset = "0x1796990", VA = "0x1796990")]
		public static ObscuredShort operator ++(ObscuredShort input)
		{
			return default(ObscuredShort);
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0x1796A34", Offset = "0x1796A34", VA = "0x1796A34")]
		public static ObscuredShort operator --(ObscuredShort input)
		{
			return default(ObscuredShort);
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0x1796AD8", Offset = "0x1796AD8", VA = "0x1796AD8", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0x1796B5C", Offset = "0x1796B5C", VA = "0x1796B5C", Slot = "4")]
		public bool Equals(ObscuredShort obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0x1796B6C", Offset = "0x1796B6C", VA = "0x1796B6C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0x1796B98", Offset = "0x1796B98", VA = "0x1796B98")]
		public string ToString(string format)
		{
			return null;
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0x1796BCC", Offset = "0x1796BCC", VA = "0x1796BCC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0x1796BF8", Offset = "0x1796BF8", VA = "0x1796BF8")]
		public string ToString(IFormatProvider provider)
		{
			return null;
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0x1796C2C", Offset = "0x1796C2C", VA = "0x1796C2C", Slot = "5")]
		public string ToString(string format, IFormatProvider provider)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000165")]
	public sealed class ObscuredString
	{
		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string cryptoKey;

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string currentCryptoKey;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private byte[] hiddenValue;

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string fakeValue;

		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool inited;

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0x1796CC0", Offset = "0x1796CC0", VA = "0x1796CC0")]
		private ObscuredString(byte[] value)
		{
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0x1796D74", Offset = "0x1796D74", VA = "0x1796D74")]
		public static void SetNewCryptoKey(string newKey)
		{
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0x1796DE0", Offset = "0x1796DE0", VA = "0x1796DE0")]
		public void ApplyNewCryptoKey()
		{
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0x1793D50", Offset = "0x1793D50", VA = "0x1793D50")]
		public static string EncryptDecrypt(string value)
		{
			return null;
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0x17938D0", Offset = "0x17938D0", VA = "0x17938D0")]
		public static string EncryptDecrypt(string value, string key)
		{
			return null;
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0x1797138", Offset = "0x1797138", VA = "0x1797138")]
		public string GetEncrypted()
		{
			return null;
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0x1797234", Offset = "0x1797234", VA = "0x1797234")]
		public void SetEncrypted(string encrypted)
		{
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0x17970C8", Offset = "0x17970C8", VA = "0x17970C8")]
		private static byte[] InternalEncrypt(string value)
		{
			return null;
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0x1796ECC", Offset = "0x1796ECC", VA = "0x1796ECC")]
		private string InternalDecrypt()
		{
			return null;
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0x1797388", Offset = "0x1797388", VA = "0x1797388")]
		public static implicit operator ObscuredString(string value)
		{
			return null;
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0x179745C", Offset = "0x179745C", VA = "0x179745C")]
		public static implicit operator string(ObscuredString value)
		{
			return null;
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0x1797590", Offset = "0x1797590", VA = "0x1797590", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0x17974F0", Offset = "0x17974F0", VA = "0x17974F0")]
		public static bool operator ==(ObscuredString a, ObscuredString b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0x1797618", Offset = "0x1797618", VA = "0x1797618")]
		public static bool operator !=(ObscuredString a, ObscuredString b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0x1797694", Offset = "0x1797694", VA = "0x1797694", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0x1797758", Offset = "0x1797758", VA = "0x1797758")]
		public bool Equals(ObscuredString value)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0x1797804", Offset = "0x1797804", VA = "0x1797804")]
		public bool Equals(ObscuredString value, StringComparison comparisonType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0x17978AC", Offset = "0x17978AC", VA = "0x17978AC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0x17972FC", Offset = "0x17972FC", VA = "0x17972FC")]
		private static byte[] GetBytes(string str)
		{
			return null;
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0x17971A4", Offset = "0x17971A4", VA = "0x17971A4")]
		private static string GetString(byte[] bytes)
		{
			return null;
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0x1797594", Offset = "0x1797594", VA = "0x1797594")]
		private static bool ArraysEquals(byte[] a1, byte[] a2)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x2000166")]
	public struct ObscuredULong : IEquatable<ObscuredULong>, IFormattable
	{
		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ulong cryptoKey;

		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ulong currentCryptoKey;

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private ulong hiddenValue;

		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong fakeValue;

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inited;

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0x14BF450", Offset = "0x14BF450", VA = "0x14BF450")]
		private ObscuredULong(ulong value)
		{
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0x14BF4D4", Offset = "0x14BF4D4", VA = "0x14BF4D4")]
		public static void SetNewCryptoKey(ulong newKey)
		{
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0x14BF53C", Offset = "0x14BF53C", VA = "0x14BF53C")]
		public void ApplyNewCryptoKey()
		{
		}

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0x14BF7E0", Offset = "0x14BF7E0", VA = "0x14BF7E0")]
		public static ulong Encrypt(ulong value)
		{
			return default(ulong);
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0x14BF844", Offset = "0x14BF844", VA = "0x14BF844")]
		public static ulong Decrypt(ulong value)
		{
			return default(ulong);
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0x14BF764", Offset = "0x14BF764", VA = "0x14BF764")]
		public static ulong Encrypt(ulong value, ulong key)
		{
			return default(ulong);
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0x14BF8A8", Offset = "0x14BF8A8", VA = "0x14BF8A8")]
		public static ulong Decrypt(ulong value, ulong key)
		{
			return default(ulong);
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0x14BF924", Offset = "0x14BF924", VA = "0x14BF924")]
		public ulong GetEncrypted()
		{
			return default(ulong);
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0x14BF948", Offset = "0x14BF948", VA = "0x14BF948")]
		public void SetEncrypted(ulong encrypted)
		{
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0x14BF608", Offset = "0x14BF608", VA = "0x14BF608")]
		private ulong InternalDecrypt()
		{
			return default(ulong);
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x14BF9B8", Offset = "0x14BF9B8", VA = "0x14BF9B8")]
		public static implicit operator ObscuredULong(ulong value)
		{
			return default(ObscuredULong);
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0x14BFA74", Offset = "0x14BFA74", VA = "0x14BFA74")]
		public static implicit operator ulong(ObscuredULong value)
		{
			return default(ulong);
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0x14BFA78", Offset = "0x14BFA78", VA = "0x14BFA78")]
		public static ObscuredULong operator ++(ObscuredULong input)
		{
			return default(ObscuredULong);
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0x14BFB34", Offset = "0x14BFB34", VA = "0x14BFB34")]
		public static ObscuredULong operator --(ObscuredULong input)
		{
			return default(ObscuredULong);
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0x14BFBF0", Offset = "0x14BFBF0", VA = "0x14BFBF0", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0x14BFC74", Offset = "0x14BFC74", VA = "0x14BFC74", Slot = "4")]
		public bool Equals(ObscuredULong obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0x14BFC88", Offset = "0x14BFC88", VA = "0x14BFC88", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0x14BFCB4", Offset = "0x14BFCB4", VA = "0x14BFCB4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0x14BFCE0", Offset = "0x14BFCE0", VA = "0x14BFCE0")]
		public string ToString(string format)
		{
			return null;
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0x14BFD14", Offset = "0x14BFD14", VA = "0x14BFD14")]
		public string ToString(IFormatProvider provider)
		{
			return null;
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x14BFD48", Offset = "0x14BFD48", VA = "0x14BFD48", Slot = "5")]
		public string ToString(string format, IFormatProvider provider)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000167")]
	public struct ObscuredUInt : IEquatable<ObscuredUInt>, IFormattable
	{
		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static uint cryptoKey;

		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private uint currentCryptoKey;

		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private uint hiddenValue;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private uint fakeValue;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private bool inited;

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x1797D68", Offset = "0x1797D68", VA = "0x1797D68")]
		private ObscuredUInt(uint value)
		{
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0x1797DEC", Offset = "0x1797DEC", VA = "0x1797DEC")]
		public static void SetNewCryptoKey(uint newKey)
		{
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0x1797E54", Offset = "0x1797E54", VA = "0x1797E54")]
		public void ApplyNewCryptoKey()
		{
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0x17980F4", Offset = "0x17980F4", VA = "0x17980F4")]
		public static uint Encrypt(uint value)
		{
			return default(uint);
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x1798158", Offset = "0x1798158", VA = "0x1798158")]
		public static uint Decrypt(uint value)
		{
			return default(uint);
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x1798078", Offset = "0x1798078", VA = "0x1798078")]
		public static uint Encrypt(uint value, uint key)
		{
			return default(uint);
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0x17981BC", Offset = "0x17981BC", VA = "0x17981BC")]
		public static uint Decrypt(uint value, uint key)
		{
			return default(uint);
		}

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0x1798238", Offset = "0x1798238", VA = "0x1798238")]
		public uint GetEncrypted()
		{
			return default(uint);
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0x179825C", Offset = "0x179825C", VA = "0x179825C")]
		public void SetEncrypted(uint encrypted)
		{
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0x1797F20", Offset = "0x1797F20", VA = "0x1797F20")]
		private uint InternalDecrypt()
		{
			return default(uint);
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x17982CC", Offset = "0x17982CC", VA = "0x17982CC")]
		public static implicit operator ObscuredUInt(uint value)
		{
			return default(ObscuredUInt);
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x1798374", Offset = "0x1798374", VA = "0x1798374")]
		public static implicit operator uint(ObscuredUInt value)
		{
			return default(uint);
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x1798398", Offset = "0x1798398", VA = "0x1798398")]
		public static ObscuredUInt operator ++(ObscuredUInt input)
		{
			return default(ObscuredUInt);
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x179844C", Offset = "0x179844C", VA = "0x179844C")]
		public static ObscuredUInt operator --(ObscuredUInt input)
		{
			return default(ObscuredUInt);
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x1798500", Offset = "0x1798500", VA = "0x1798500", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0x1798584", Offset = "0x1798584", VA = "0x1798584", Slot = "4")]
		public bool Equals(ObscuredUInt obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0x1798598", Offset = "0x1798598", VA = "0x1798598", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0x17985C4", Offset = "0x17985C4", VA = "0x17985C4")]
		public string ToString(string format)
		{
			return null;
		}

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0x17985F8", Offset = "0x17985F8", VA = "0x17985F8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0x1798624", Offset = "0x1798624", VA = "0x1798624")]
		public string ToString(IFormatProvider provider)
		{
			return null;
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0x1798658", Offset = "0x1798658", VA = "0x1798658", Slot = "5")]
		public string ToString(string format, IFormatProvider provider)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000168")]
	public struct ObscuredUShort : IEquatable<ObscuredUShort>, IFormattable
	{
		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ushort cryptoKey;

		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ushort currentCryptoKey;

		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		private ushort hiddenValue;

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private ushort fakeValue;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		private bool inited;

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x14BFDE0", Offset = "0x14BFDE0", VA = "0x14BFDE0")]
		private ObscuredUShort(ushort value)
		{
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0x14BFE68", Offset = "0x14BFE68", VA = "0x14BFE68")]
		public static void SetNewCryptoKey(ushort newKey)
		{
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x14BFED0", Offset = "0x14BFED0", VA = "0x14BFED0")]
		public void ApplyNewCryptoKey()
		{
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x14C018C", Offset = "0x14C018C", VA = "0x14C018C")]
		public static ushort EncryptDecrypt(ushort value)
		{
			return default(ushort);
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x14C010C", Offset = "0x14C010C", VA = "0x14C010C")]
		public static ushort EncryptDecrypt(ushort value, ushort key)
		{
			return default(ushort);
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x14C01F0", Offset = "0x14C01F0", VA = "0x14C01F0")]
		public ushort GetEncrypted()
		{
			return default(ushort);
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x14C0214", Offset = "0x14C0214", VA = "0x14C0214")]
		public void SetEncrypted(ushort encrypted)
		{
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x14BFF9C", Offset = "0x14BFF9C", VA = "0x14BFF9C")]
		private ushort InternalDecrypt()
		{
			return default(ushort);
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x14C0284", Offset = "0x14C0284", VA = "0x14C0284")]
		public static implicit operator ObscuredUShort(ushort value)
		{
			return default(ObscuredUShort);
		}

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0x14C032C", Offset = "0x14C032C", VA = "0x14C032C")]
		public static implicit operator ushort(ObscuredUShort value)
		{
			return default(ushort);
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0x14C0350", Offset = "0x14C0350", VA = "0x14C0350")]
		public static ObscuredUShort operator ++(ObscuredUShort input)
		{
			return default(ObscuredUShort);
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x14C0404", Offset = "0x14C0404", VA = "0x14C0404")]
		public static ObscuredUShort operator --(ObscuredUShort input)
		{
			return default(ObscuredUShort);
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0x14C04B8", Offset = "0x14C04B8", VA = "0x14C04B8", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x14C053C", Offset = "0x14C053C", VA = "0x14C053C", Slot = "4")]
		public bool Equals(ObscuredUShort obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x14C054C", Offset = "0x14C054C", VA = "0x14C054C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x14C0578", Offset = "0x14C0578", VA = "0x14C0578")]
		public string ToString(string format)
		{
			return null;
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x14C05AC", Offset = "0x14C05AC", VA = "0x14C05AC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0x14C05D8", Offset = "0x14C05D8", VA = "0x14C05D8")]
		public string ToString(IFormatProvider provider)
		{
			return null;
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0x14C060C", Offset = "0x14C060C", VA = "0x14C060C", Slot = "5")]
		public string ToString(string format, IFormatProvider provider)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000169")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x769530", Offset = "0x769530")]
	public struct ObscuredVector2
	{
		[Token(Token = "0x20001EC")]
		public struct RawEncryptedVector2
		{
			[Token(Token = "0x4000B82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal int x;

			[Token(Token = "0x4000B83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal int y;

			[Token(Token = "0x6001063")]
			[Address(RVA = "0x173B7DC", Offset = "0x173B7DC", VA = "0x173B7DC")]
			private RawEncryptedVector2(float x, float y)
			{
			}

			[Token(Token = "0x6001064")]
			[Address(RVA = "0x173B7EC", Offset = "0x173B7EC", VA = "0x173B7EC")]
			public static explicit operator Vector2(RawEncryptedVector2 value)
			{
				return default(Vector2);
			}

			[Token(Token = "0x6001065")]
			[Address(RVA = "0x173B7FC", Offset = "0x173B7FC", VA = "0x173B7FC")]
			public static explicit operator RawEncryptedVector2(Vector2 value)
			{
				return default(RawEncryptedVector2);
			}
		}

		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int cryptoKey;

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly Vector2 initialFakeValue;

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int currentCryptoKey;

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private RawEncryptedVector2 hiddenValue;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Vector2 fakeValue;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private bool inited;

		[Token(Token = "0x170001FE")]
		public float x
		{
			[Token(Token = "0x6000E1B")]
			[Address(RVA = "0x14C0734", Offset = "0x14C0734", VA = "0x14C0734")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E1C")]
			[Address(RVA = "0x14C091C", Offset = "0x14C091C", VA = "0x14C091C")]
			set
			{
			}
		}

		[Token(Token = "0x170001FF")]
		public float y
		{
			[Token(Token = "0x6000E1D")]
			[Address(RVA = "0x14C0A38", Offset = "0x14C0A38", VA = "0x14C0A38")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E1E")]
			[Address(RVA = "0x14C0B84", Offset = "0x14C0B84", VA = "0x14C0B84")]
			set
			{
			}
		}

		[Token(Token = "0x17000200")]
		public float Item
		{
			[Token(Token = "0x6000E1F")]
			[Address(RVA = "0x14C0BF4", Offset = "0x14C0BF4", VA = "0x14C0BF4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E20")]
			[Address(RVA = "0x14C0C5C", Offset = "0x14C0C5C", VA = "0x14C0C5C")]
			set
			{
			}
		}

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0x14C06A0", Offset = "0x14C06A0", VA = "0x14C06A0")]
		private ObscuredVector2(RawEncryptedVector2 value)
		{
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0x14C0CC4", Offset = "0x14C0CC4", VA = "0x14C0CC4")]
		public static void SetNewCryptoKey(int newKey)
		{
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0x14C0D2C", Offset = "0x14C0D2C", VA = "0x14C0D2C")]
		public void ApplyNewCryptoKey()
		{
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0x14C10B8", Offset = "0x14C10B8", VA = "0x14C10B8")]
		public static RawEncryptedVector2 Encrypt(Vector2 value)
		{
			return default(RawEncryptedVector2);
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0x14C0FE0", Offset = "0x14C0FE0", VA = "0x14C0FE0")]
		public static RawEncryptedVector2 Encrypt(Vector2 value, int key)
		{
			return default(RawEncryptedVector2);
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0x14C112C", Offset = "0x14C112C", VA = "0x14C112C")]
		public static Vector2 Decrypt(RawEncryptedVector2 value)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x14C1190", Offset = "0x14C1190", VA = "0x14C1190")]
		public static Vector2 Decrypt(RawEncryptedVector2 value, int key)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x14C126C", Offset = "0x14C126C", VA = "0x14C126C")]
		public RawEncryptedVector2 GetEncrypted()
		{
			return default(RawEncryptedVector2);
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x14C1290", Offset = "0x14C1290", VA = "0x14C1290")]
		public void SetEncrypted(RawEncryptedVector2 encrypted)
		{
		}

		[Token(Token = "0x6000E29")]
		[Address(RVA = "0x14C0E04", Offset = "0x14C0E04", VA = "0x14C0E04")]
		private Vector2 InternalDecrypt()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0x14C1300", Offset = "0x14C1300", VA = "0x14C1300")]
		private bool CompareVectorsWithTolerance(Vector2 vector1, Vector2 vector2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0x14C0878", Offset = "0x14C0878", VA = "0x14C0878")]
		private float InternalDecryptField(int encrypted)
		{
			return default(float);
		}

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0x14C098C", Offset = "0x14C098C", VA = "0x14C098C")]
		private int InternalEncryptField(float encrypted)
		{
			return default(int);
		}

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0x14C13F8", Offset = "0x14C13F8", VA = "0x14C13F8")]
		public static implicit operator ObscuredVector2(Vector2 value)
		{
			return default(ObscuredVector2);
		}

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0x14C14C4", Offset = "0x14C14C4", VA = "0x14C14C4")]
		public static implicit operator Vector2(ObscuredVector2 value)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0x14C14C8", Offset = "0x14C14C8", VA = "0x14C14C8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0x14C14F4", Offset = "0x14C14F4", VA = "0x14C14F4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0x14C1520", Offset = "0x14C1520", VA = "0x14C1520")]
		public string ToString(string format)
		{
			return null;
		}

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0x14C1554", Offset = "0x14C1554", VA = "0x14C1554")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x76B1F8", Offset = "0x76B1F8")]
		public static Vector2 EncryptDeprecated(Vector2 value)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0x14C15C8", Offset = "0x14C15C8", VA = "0x14C15C8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x76B234", Offset = "0x76B234")]
		public static Vector2 EncryptDeprecated(Vector2 value, int key)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0x14C169C", Offset = "0x14C169C", VA = "0x14C169C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x76B270", Offset = "0x76B270")]
		public static Vector2 DecryptDeprecated(Vector2 value)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0x14C1710", Offset = "0x14C1710", VA = "0x14C1710")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x76B2AC", Offset = "0x76B2AC")]
		public static Vector2 DecryptDeprecated(Vector2 value, int key)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0x14C17CC", Offset = "0x14C17CC", VA = "0x14C17CC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x76B2E8", Offset = "0x76B2E8")]
		public Vector2 GetEncryptedDeprecated()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0x14C17F4", Offset = "0x14C17F4", VA = "0x14C17F4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x76B324", Offset = "0x76B324")]
		public void SetEncryptedDeprecated(Vector2 encrypted)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200016A")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x769568", Offset = "0x769568")]
	public struct ObscuredVector3
	{
		[Token(Token = "0x20001ED")]
		public struct RawEncryptedVector3
		{
			[Token(Token = "0x4000B84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			internal int x;

			[Token(Token = "0x4000B85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			internal int y;

			[Token(Token = "0x4000B86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			internal int z;

			[Token(Token = "0x6001066")]
			[Address(RVA = "0x173B80C", Offset = "0x173B80C", VA = "0x173B80C")]
			private RawEncryptedVector3(float x, float y, float z)
			{
			}

			[Token(Token = "0x6001067")]
			[Address(RVA = "0x173B824", Offset = "0x173B824", VA = "0x173B824")]
			public static explicit operator Vector3(RawEncryptedVector3 value)
			{
				return default(Vector3);
			}

			[Token(Token = "0x6001068")]
			[Address(RVA = "0x173B838", Offset = "0x173B838", VA = "0x173B838")]
			public static explicit operator RawEncryptedVector3(Vector3 value)
			{
				return default(RawEncryptedVector3);
			}
		}

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int cryptoKey;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly Vector3 initialFakeValue;

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int currentCryptoKey;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private RawEncryptedVector3 hiddenValue;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector3 fakeValue;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool inited;

		[Token(Token = "0x17000201")]
		public float x
		{
			[Token(Token = "0x6000E3A")]
			[Address(RVA = "0x14C1984", Offset = "0x14C1984", VA = "0x14C1984")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E3B")]
			[Address(RVA = "0x14C1B6C", Offset = "0x14C1B6C", VA = "0x14C1B6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000202")]
		public float y
		{
			[Token(Token = "0x6000E3C")]
			[Address(RVA = "0x14C1C88", Offset = "0x14C1C88", VA = "0x14C1C88")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E3D")]
			[Address(RVA = "0x14C1DCC", Offset = "0x14C1DCC", VA = "0x14C1DCC")]
			set
			{
			}
		}

		[Token(Token = "0x17000203")]
		public float z
		{
			[Token(Token = "0x6000E3E")]
			[Address(RVA = "0x14C1E3C", Offset = "0x14C1E3C", VA = "0x14C1E3C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E3F")]
			[Address(RVA = "0x14C1F80", Offset = "0x14C1F80", VA = "0x14C1F80")]
			set
			{
			}
		}

		[Token(Token = "0x17000204")]
		public float Item
		{
			[Token(Token = "0x6000E40")]
			[Address(RVA = "0x14C1FF0", Offset = "0x14C1FF0", VA = "0x14C1FF0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000E41")]
			[Address(RVA = "0x14C2064", Offset = "0x14C2064", VA = "0x14C2064")]
			set
			{
			}
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0x14C18E0", Offset = "0x14C18E0", VA = "0x14C18E0")]
		private ObscuredVector3(RawEncryptedVector3 encrypted)
		{
		}

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x14C20D8", Offset = "0x14C20D8", VA = "0x14C20D8")]
		public static void SetNewCryptoKey(int newKey)
		{
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x14C2140", Offset = "0x14C2140", VA = "0x14C2140")]
		public void ApplyNewCryptoKey()
		{
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0x14C2520", Offset = "0x14C2520", VA = "0x14C2520")]
		public static RawEncryptedVector3 Encrypt(Vector3 value)
		{
			return default(RawEncryptedVector3);
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0x14C241C", Offset = "0x14C241C", VA = "0x14C241C")]
		public static RawEncryptedVector3 Encrypt(Vector3 value, int key)
		{
			return default(RawEncryptedVector3);
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0x14C25AC", Offset = "0x14C25AC", VA = "0x14C25AC")]
		public static Vector3 Decrypt(RawEncryptedVector3 value)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x14C2620", Offset = "0x14C2620", VA = "0x14C2620")]
		public static Vector3 Decrypt(RawEncryptedVector3 value, int key)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0x14C2718", Offset = "0x14C2718", VA = "0x14C2718")]
		public RawEncryptedVector3 GetEncrypted()
		{
			return default(RawEncryptedVector3);
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0x14C2740", Offset = "0x14C2740", VA = "0x14C2740")]
		public void SetEncrypted(RawEncryptedVector3 encrypted)
		{
		}

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0x14C222C", Offset = "0x14C222C", VA = "0x14C222C")]
		private Vector3 InternalDecrypt()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0x14C27BC", Offset = "0x14C27BC", VA = "0x14C27BC")]
		private bool CompareVectorsWithTolerance(Vector3 vector1, Vector3 vector2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0x14C1AC8", Offset = "0x14C1AC8", VA = "0x14C1AC8")]
		private float InternalDecryptField(int encrypted)
		{
			return default(float);
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0x14C1BDC", Offset = "0x14C1BDC", VA = "0x14C1BDC")]
		private int InternalEncryptField(float encrypted)
		{
			return default(int);
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0x14C28E8", Offset = "0x14C28E8", VA = "0x14C28E8")]
		public static implicit operator ObscuredVector3(Vector3 value)
		{
			return default(ObscuredVector3);
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0x14C29D4", Offset = "0x14C29D4", VA = "0x14C29D4")]
		public static implicit operator Vector3(ObscuredVector3 value)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0x14C29D8", Offset = "0x14C29D8", VA = "0x14C29D8")]
		public static ObscuredVector3 operator +(ObscuredVector3 a, ObscuredVector3 b)
		{
			return default(ObscuredVector3);
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0x14C2AA0", Offset = "0x14C2AA0", VA = "0x14C2AA0")]
		public static ObscuredVector3 operator +(Vector3 a, ObscuredVector3 b)
		{
			return default(ObscuredVector3);
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0x14C2B5C", Offset = "0x14C2B5C", VA = "0x14C2B5C")]
		public static ObscuredVector3 operator +(ObscuredVector3 a, Vector3 b)
		{
			return default(ObscuredVector3);
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0x14C2C18", Offset = "0x14C2C18", VA = "0x14C2C18")]
		public static ObscuredVector3 operator -(ObscuredVector3 a, ObscuredVector3 b)
		{
			return default(ObscuredVector3);
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0x14C2CE0", Offset = "0x14C2CE0", VA = "0x14C2CE0")]
		public static ObscuredVector3 operator -(Vector3 a, ObscuredVector3 b)
		{
			return default(ObscuredVector3);
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0x14C2D9C", Offset = "0x14C2D9C", VA = "0x14C2D9C")]
		public static ObscuredVector3 operator -(ObscuredVector3 a, Vector3 b)
		{
			return default(ObscuredVector3);
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0x14C2E58", Offset = "0x14C2E58", VA = "0x14C2E58")]
		public static ObscuredVector3 operator -(ObscuredVector3 a)
		{
			return default(ObscuredVector3);
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0x14C2F08", Offset = "0x14C2F08", VA = "0x14C2F08")]
		public static ObscuredVector3 operator *(ObscuredVector3 a, float d)
		{
			return default(ObscuredVector3);
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0x14C2FBC", Offset = "0x14C2FBC", VA = "0x14C2FBC")]
		public static ObscuredVector3 operator *(float d, ObscuredVector3 a)
		{
			return default(ObscuredVector3);
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0x14C3070", Offset = "0x14C3070", VA = "0x14C3070")]
		public static ObscuredVector3 operator /(ObscuredVector3 a, float d)
		{
			return default(ObscuredVector3);
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0x14C3124", Offset = "0x14C3124", VA = "0x14C3124")]
		public static bool operator ==(ObscuredVector3 lhs, ObscuredVector3 rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0x14C3184", Offset = "0x14C3184", VA = "0x14C3184")]
		public static bool operator ==(Vector3 lhs, ObscuredVector3 rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0x14C31D0", Offset = "0x14C31D0", VA = "0x14C31D0")]
		public static bool operator ==(ObscuredVector3 lhs, Vector3 rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0x14C3210", Offset = "0x14C3210", VA = "0x14C3210")]
		public static bool operator !=(ObscuredVector3 lhs, ObscuredVector3 rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0x14C3270", Offset = "0x14C3270", VA = "0x14C3270")]
		public static bool operator !=(Vector3 lhs, ObscuredVector3 rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0x14C32BC", Offset = "0x14C32BC", VA = "0x14C32BC")]
		public static bool operator !=(ObscuredVector3 lhs, Vector3 rhs)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0x14C32FC", Offset = "0x14C32FC", VA = "0x14C32FC", Slot = "0")]
		public override bool Equals(object other)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0x14C3340", Offset = "0x14C3340", VA = "0x14C3340", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0x14C3370", Offset = "0x14C3370", VA = "0x14C3370", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0x14C33A0", Offset = "0x14C33A0", VA = "0x14C33A0")]
		public string ToString(string format)
		{
			return null;
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0x14C33E0", Offset = "0x14C33E0", VA = "0x14C33E0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x76B360", Offset = "0x76B360")]
		public static Vector3 EncryptDeprecated(Vector3 value)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0x14C3464", Offset = "0x14C3464", VA = "0x14C3464")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x76B39C", Offset = "0x76B39C")]
		public static Vector3 EncryptDeprecated(Vector3 value, int key)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0x14C355C", Offset = "0x14C355C", VA = "0x14C355C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x76B3D8", Offset = "0x76B3D8")]
		public static Vector3 DecryptDeprecated(Vector3 value)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0x14C35E0", Offset = "0x14C35E0", VA = "0x14C35E0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x76B414", Offset = "0x76B414")]
		public static Vector3 DecryptDeprecated(Vector3 value, int key)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0x14C36D8", Offset = "0x14C36D8", VA = "0x14C36D8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x76B450", Offset = "0x76B450")]
		public Vector3 GetEncryptedDeprecated()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0x14C3704", Offset = "0x14C3704", VA = "0x14C3704")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x76B48C", Offset = "0x76B48C")]
		public void SetEncryptedDeprecated(Vector3 encrypted)
		{
		}
	}
}
namespace CodeStage.AntiCheat.Detectors
{
	[Token(Token = "0x200016B")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x7695A0", Offset = "0x7695A0")]
	public abstract class ActDetectorBase : MonoBehaviour
	{
		[Token(Token = "0x400091A")]
		protected const string CONTAINER_NAME = "Anti-Cheat Toolkit Detectors";

		[Token(Token = "0x400091B")]
		protected const string MENU_PATH = "GameObject/Create Other/Code Stage/Anti-Cheat Toolkit/";

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x76A270", Offset = "0x76A270")]
		public bool autoDispose;

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x76A2A8", Offset = "0x76A2A8")]
		public bool keepAlive;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static GameObject detectorsContainer;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected Action onDetection;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool inited;

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0x1AAB694", Offset = "0x1AAB694", VA = "0x1AAB694")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0x1AAB6A0", Offset = "0x1AAB6A0", VA = "0x1AAB6A0", Slot = "4")]
		protected virtual bool Init(ActDetectorBase instance, string detectorName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0x1AAB7C0", Offset = "0x1AAB7C0", VA = "0x1AAB7C0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0x1AAB7D8", Offset = "0x1AAB7D8", VA = "0x1AAB7D8")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0x1AAB7E4", Offset = "0x1AAB7E4", VA = "0x1AAB7E4")]
		private void OnLevelWasLoaded(int index)
		{
		}

		[Token(Token = "0x6000E70")]
		protected abstract void StopDetectionInternal();

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0x1AAB804", Offset = "0x1AAB804", VA = "0x1AAB804", Slot = "6")]
		protected virtual void DisposeInternal()
		{
		}

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0x1AAB878", Offset = "0x1AAB878", VA = "0x1AAB878", Slot = "7")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0x1AAB94C", Offset = "0x1AAB94C", VA = "0x1AAB94C")]
		protected ActDetectorBase()
		{
		}
	}
	[Token(Token = "0x200016C")]
	[DisallowMultipleComponent]
	public class InjectionDetector : ActDetectorBase
	{
		[Token(Token = "0x20001EE")]
		private class AllowedAssembly
		{
			[Token(Token = "0x4000B87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly string name;

			[Token(Token = "0x4000B88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public readonly int[] hashes;

			[Token(Token = "0x6001069")]
			[Address(RVA = "0x173B18C", Offset = "0x173B18C", VA = "0x173B18C")]
			public AllowedAssembly(string name, int[] hashes)
			{
			}
		}

		[Token(Token = "0x4000921")]
		private const string COMPONENT_NAME = "Injection Detector";

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static bool isRunning;

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool signaturesAreNotGenuine;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AllowedAssembly[] allowedAssemblies;

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string[] hexTable;

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A2E0", Offset = "0x76A2E0")]
		private static InjectionDetector <Instance>k__BackingField;

		[Token(Token = "0x17000205")]
		public static InjectionDetector Instance
		{
			[Token(Token = "0x6000E74")]
			[Address(RVA = "0x1533EF8", Offset = "0x1533EF8", VA = "0x1533EF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B4C8", Offset = "0x76B4C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E75")]
			[Address(RVA = "0x1533F44", Offset = "0x1533F44", VA = "0x1533F44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B4D8", Offset = "0x76B4D8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000206")]
		private static InjectionDetector GetOrCreateInstance
		{
			[Token(Token = "0x6000E76")]
			[Address(RVA = "0x1533F98", Offset = "0x1533F98", VA = "0x1533F98")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0x15215B8", Offset = "0x15215B8", VA = "0x15215B8")]
		public static void StartDetection(Action callback)
		{
		}

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0x1534340", Offset = "0x1534340", VA = "0x1534340")]
		public static void StopDetection()
		{
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0x1534430", Offset = "0x1534430", VA = "0x1534430")]
		public static void Dispose()
		{
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0x1534520", Offset = "0x1534520", VA = "0x1534520")]
		private InjectionDetector()
		{
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0x1534528", Offset = "0x1534528", VA = "0x1534528")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0x15341C0", Offset = "0x15341C0", VA = "0x15341C0")]
		private void StartDetectionInternal(Action callback)
		{
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0x1534C78", Offset = "0x1534C78", VA = "0x1534C78", Slot = "5")]
		protected override void StopDetectionInternal()
		{
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0x1534D5C", Offset = "0x1534D5C", VA = "0x1534D5C", Slot = "6")]
		protected override void DisposeInternal()
		{
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x1534B90", Offset = "0x1534B90", VA = "0x1534B90")]
		private void OnInjectionDetected()
		{
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0x1534E54", Offset = "0x1534E54", VA = "0x1534E54")]
		private void OnNewAssemblyLoaded(object sender, AssemblyLoadEventArgs args)
		{
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0x1534BDC", Offset = "0x1534BDC", VA = "0x1534BDC")]
		private bool FindInjectionInCurrentAssemblies()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0x1534E94", Offset = "0x1534E94", VA = "0x1534E94")]
		private bool AssemblyAllowed(Assembly ass)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0x1534600", Offset = "0x1534600", VA = "0x1534600")]
		private void LoadAndParseAllowedAssemblies()
		{
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0x1534F9C", Offset = "0x1534F9C", VA = "0x1534F9C")]
		private int GetAssemblyHash(Assembly ass)
		{
			return default(int);
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x1535078", Offset = "0x1535078", VA = "0x1535078")]
		private string PublicKeyTokenToString(byte[] bytes)
		{
			return null;
		}
	}
	[Token(Token = "0x200016D")]
	[DisallowMultipleComponent]
	public class ObscuredCheatingDetector : ActDetectorBase
	{
		[Token(Token = "0x4000927")]
		private const string COMPONENT_NAME = "Obscured Cheating Detector";

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static bool isRunning;

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public float floatEpsilon;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public float vector2Epsilon;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public float vector3Epsilon;

		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public float quaternionEpsilon;

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A330", Offset = "0x76A330")]
		private static ObscuredCheatingDetector <Instance>k__BackingField;

		[Token(Token = "0x17000207")]
		public static ObscuredCheatingDetector Instance
		{
			[Token(Token = "0x6000E86")]
			[Address(RVA = "0x178B174", Offset = "0x178B174", VA = "0x178B174")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B4E8", Offset = "0x76B4E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E87")]
			[Address(RVA = "0x178B1C0", Offset = "0x178B1C0", VA = "0x178B1C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B4F8", Offset = "0x76B4F8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000208")]
		private static ObscuredCheatingDetector GetOrCreateInstance
		{
			[Token(Token = "0x6000E88")]
			[Address(RVA = "0x178B214", Offset = "0x178B214", VA = "0x178B214")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0x178B43C", Offset = "0x178B43C", VA = "0x178B43C")]
		public static void StartDetection(Action callback)
		{
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0x178B540", Offset = "0x178B540", VA = "0x178B540")]
		public static void StopDetection()
		{
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0x178B630", Offset = "0x178B630", VA = "0x178B630")]
		public static void Dispose()
		{
		}

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0x178B720", Offset = "0x178B720", VA = "0x178B720")]
		private ObscuredCheatingDetector()
		{
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0x178B734", Offset = "0x178B734", VA = "0x178B734")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0x178B468", Offset = "0x178B468", VA = "0x178B468")]
		private void StartDetectionInternal(Action callback)
		{
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0x178B80C", Offset = "0x178B80C", VA = "0x178B80C", Slot = "5")]
		protected override void StopDetectionInternal()
		{
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0x178B87C", Offset = "0x178B87C", VA = "0x178B87C", Slot = "6")]
		protected override void DisposeInternal()
		{
		}

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0x1789DEC", Offset = "0x1789DEC", VA = "0x1789DEC")]
		internal void OnCheatingDetected()
		{
		}
	}
	[Token(Token = "0x200016E")]
	[DisallowMultipleComponent]
	public class SpeedHackDetector : ActDetectorBase
	{
		[Token(Token = "0x400092E")]
		private const string COMPONENT_NAME = "Speed Hack Detector";

		[Token(Token = "0x400092F")]
		private const long TICKS_PER_SECOND = 10000000L;

		[Token(Token = "0x4000930")]
		private const int THRESHOLD = 5000000;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x76A340", Offset = "0x76A340")]
		public float interval;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x76A378", Offset = "0x76A378")]
		public byte maxFalsePositives;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x76A3B0", Offset = "0x76A3B0")]
		public int coolDown;

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static bool isRunning;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private byte currentFalsePositives;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int currentCooldownShots;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private long ticksOnStart;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private long vulnerableTicksOnStart;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private long prevTicks;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private long prevIntervalTicks;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76A3E8", Offset = "0x76A3E8")]
		private static SpeedHackDetector <Instance>k__BackingField;

		[Token(Token = "0x17000209")]
		public static SpeedHackDetector Instance
		{
			[Token(Token = "0x6000E92")]
			[Address(RVA = "0x1A2FF68", Offset = "0x1A2FF68", VA = "0x1A2FF68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B508", Offset = "0x76B508")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000E93")]
			[Address(RVA = "0x1A2FFB4", Offset = "0x1A2FFB4", VA = "0x1A2FFB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x76B518", Offset = "0x76B518")]
			private set
			{
			}
		}

		[Token(Token = "0x1700020A")]
		private static SpeedHackDetector InstanceInternalForced
		{
			[Token(Token = "0x6000E94")]
			[Address(RVA = "0x1A30008", Offset = "0x1A30008", VA = "0x1A30008")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0x1A30230", Offset = "0x1A30230", VA = "0x1A30230")]
		public static void StartDetection(Action callback)
		{
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0x1A30260", Offset = "0x1A30260", VA = "0x1A30260")]
		public static void StartDetection(Action callback, float checkInterval)
		{
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0x1A302A0", Offset = "0x1A302A0", VA = "0x1A302A0")]
		public static void StartDetection(Action callback, float checkInterval, byte falsePositives)
		{
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0x1A302E8", Offset = "0x1A302E8", VA = "0x1A302E8")]
		public static void StartDetection(Action callback, float checkInterval, byte falsePositives, int shotsTillCooldown)
		{
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0x1A30454", Offset = "0x1A30454", VA = "0x1A30454")]
		public static void StopDetection()
		{
		}

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0x1A30544", Offset = "0x1A30544", VA = "0x1A30544")]
		public static void Dispose()
		{
		}

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0x1A30634", Offset = "0x1A30634", VA = "0x1A30634")]
		private SpeedHackDetector()
		{
		}

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0x1A30654", Offset = "0x1A30654", VA = "0x1A30654")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0x1A3033C", Offset = "0x1A3033C", VA = "0x1A3033C")]
		private void StartDetectionInternal(Action callback, float checkInterval, byte falsePositives, int shotsTillCooldown)
		{
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0x1A307CC", Offset = "0x1A307CC", VA = "0x1A307CC", Slot = "5")]
		protected override void StopDetectionInternal()
		{
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0x1A3083C", Offset = "0x1A3083C", VA = "0x1A3083C", Slot = "6")]
		protected override void DisposeInternal()
		{
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0x1A3072C", Offset = "0x1A3072C", VA = "0x1A3072C")]
		private void ResetStartTicks()
		{
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0x1A30934", Offset = "0x1A30934", VA = "0x1A30934")]
		private void OnApplicationPause(bool pause)
		{
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0x1A30940", Offset = "0x1A30940", VA = "0x1A30940")]
		private void Update()
		{
		}
	}
}
