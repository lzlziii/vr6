using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Net;
using System.Net.Security;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Security.Cryptography.X509Certificates;
using System.Text;
using System.Threading;
using DigitalOpus.MB.Core;
using Il2CppDummyDll;
using Oculus.Spatializer.Propagation;
using TMPro;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Playables;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.Timeline;
using UnityEngine.UI;
using UnityEngine.Video;
using VRPanorama;
using kiupe;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class ActiveSceneManager : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] sceneNames;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0xA26AE4", Offset = "0xA26AE4", VA = "0xA26AE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0xA26AE8", Offset = "0xA26AE8", VA = "0xA26AE8")]
	public void SetActiveScene(int i)
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xA26B4C", Offset = "0xA26B4C", VA = "0xA26B4C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0xA26B50", Offset = "0xA26B50", VA = "0xA26B50")]
	public ActiveSceneManager()
	{
	}
}
[Token(Token = "0x2000003")]
public class LoadScene : MonoBehaviour
{
	[Token(Token = "0x6000005")]
	[Address(RVA = "0xB25088", Offset = "0xB25088", VA = "0xB25088")]
	public void Load(string sceneName)
	{
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xB25098", Offset = "0xB25098", VA = "0xB25098")]
	public LoadScene()
	{
	}
}
[Token(Token = "0x2000004")]
public class AutoSpriteSwap : MonoBehaviour
{
	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isRandom;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int refreshingFrameRate;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite[] tabSprites;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int frameCounter;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int currentSpriteIndex;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<int> indexesSprites;

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xA27830", Offset = "0xA27830", VA = "0xA27830")]
	private void Start()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0xA278F0", Offset = "0xA278F0", VA = "0xA278F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0xA27914", Offset = "0xA27914", VA = "0xA27914")]
	private void DisplayNextSprite()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xA27ADC", Offset = "0xA27ADC", VA = "0xA27ADC")]
	public AutoSpriteSwap()
	{
	}
}
[Token(Token = "0x2000005")]
public class BlendShapeLinker : MonoBehaviour
{
	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform boneParent;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string prefixe;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string suffixe;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<string> linkedBonesName;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<GameObject> linkedBonesObjects;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SkinnedMeshRenderer smr;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Mesh mesh;

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xA291B8", Offset = "0xA291B8", VA = "0xA291B8")]
	private void Start()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xA2922C", Offset = "0xA2922C", VA = "0xA2922C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xA293A0", Offset = "0xA293A0", VA = "0xA293A0")]
	public void UpdateAnim()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xA2976C", Offset = "0xA2976C", VA = "0xA2976C")]
	public BlendShapeLinker()
	{
	}
}
[Token(Token = "0x2000006")]
public class LaunchAnimationRandom : MonoBehaviour
{
	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject go_VinylAnimation;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float f_TimeMaxLaunch;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float f_TimeMinLaunch;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animator Anim;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool b_offset;

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xB22AC0", Offset = "0xB22AC0", VA = "0xB22AC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xB22B68", Offset = "0xB22B68", VA = "0xB22B68")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xB22C6C", Offset = "0xB22C6C", VA = "0xB22C6C")]
	private void Active()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0xB22CD0", Offset = "0xB22CD0", VA = "0xB22CD0")]
	public LaunchAnimationRandom()
	{
	}
}
[Token(Token = "0x2000007")]
public class LAunchSoundAtEndAnimation : StateMachineBehaviour
{
	[Token(Token = "0x6000013")]
	[Address(RVA = "0xB1D508", Offset = "0xB1D508", VA = "0xB1D508", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xB1D50C", Offset = "0xB1D50C", VA = "0xB1D50C")]
	public LAunchSoundAtEndAnimation()
	{
	}
}
[Token(Token = "0x2000008")]
public class SpectrumData : MonoBehaviour
{
	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audiosource;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LineRenderer lineRenderer;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int ARRAY_SIZE;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int limiteMin;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int limiteMax;

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xA1C760", Offset = "0xA1C760", VA = "0xA1C760")]
	private void Update()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0xA1C9D8", Offset = "0xA1C9D8", VA = "0xA1C9D8")]
	public SpectrumData()
	{
	}
}
[Token(Token = "0x2000009")]
public class Chapter : MonoBehaviour
{
	[Token(Token = "0x2000228")]
	public delegate void OnStepStarted(string stepName);

	[Token(Token = "0x2000229")]
	public delegate void OnStepFinished();

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<ChapterStepConfig> stepConfigs;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B9E4", Offset = "0x87B9E4")]
	private bool <isPlaying>k__BackingField;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B9F4", Offset = "0x87B9F4")]
	private bool <isChapterRunning>k__BackingField;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<ChapterStep> running;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private UnityEvent EventOnTimelineEnd;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int runningCount;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int m_stepIndex;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_stepMax;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool m_initialize;

	[Token(Token = "0x17000001")]
	public bool isPlaying
	{
		[Token(Token = "0x600001C")]
		[Address(RVA = "0xA2A2C8", Offset = "0xA2A2C8", VA = "0xA2A2C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88206C", Offset = "0x88206C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600001D")]
		[Address(RVA = "0xA2A2D0", Offset = "0xA2A2D0", VA = "0xA2A2D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88207C", Offset = "0x88207C")]
		private set
		{
		}
	}

	[Token(Token = "0x17000002")]
	public bool isChapterRunning
	{
		[Token(Token = "0x600001E")]
		[Address(RVA = "0xA2A2DC", Offset = "0xA2A2DC", VA = "0xA2A2DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88208C", Offset = "0x88208C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600001F")]
		[Address(RVA = "0xA2A2E4", Offset = "0xA2A2E4", VA = "0xA2A2E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88209C", Offset = "0x88209C")]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public static event OnStepStarted OnStepStartedEvent
	{
		[Token(Token = "0x6000018")]
		[Address(RVA = "0xA29ED0", Offset = "0xA29ED0", VA = "0xA29ED0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88202C", Offset = "0x88202C")]
		add
		{
		}
		[Token(Token = "0x6000019")]
		[Address(RVA = "0xA29FCC", Offset = "0xA29FCC", VA = "0xA29FCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88203C", Offset = "0x88203C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public static event OnStepFinished OnStepFinishedEvent
	{
		[Token(Token = "0x600001A")]
		[Address(RVA = "0xA2A0C8", Offset = "0xA2A0C8", VA = "0xA2A0C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88204C", Offset = "0x88204C")]
		add
		{
		}
		[Token(Token = "0x600001B")]
		[Address(RVA = "0xA2A1C8", Offset = "0xA2A1C8", VA = "0xA2A1C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88205C", Offset = "0x88205C")]
		remove
		{
		}
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xA2A2F0", Offset = "0xA2A2F0", VA = "0xA2A2F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xA2A2F8", Offset = "0xA2A2F8", VA = "0xA2A2F8")]
	public string LogStep()
	{
		return null;
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xA2A4A0", Offset = "0xA2A4A0", VA = "0xA2A4A0")]
	public void CalculateSeconds()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xA2A714", Offset = "0xA2A714", VA = "0xA2A714")]
	public void Init(UnityEvent EventOnTimelineEnd)
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xA2A864", Offset = "0xA2A864", VA = "0xA2A864")]
	public void Clean()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xA2A98C", Offset = "0xA2A98C", VA = "0xA2A98C")]
	public void PlayTimeLine()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xA2AC20", Offset = "0xA2AC20", VA = "0xA2AC20")]
	public void PauseTimeLine()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xA2AEAC", Offset = "0xA2AEAC", VA = "0xA2AEAC")]
	public void ToggleTimeLine()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xA2B37C", Offset = "0xA2B37C", VA = "0xA2B37C")]
	public void Rewind()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xA2B9E4", Offset = "0xA2B9E4", VA = "0xA2B9E4")]
	public void FastForward()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xA2BEEC", Offset = "0xA2BEEC", VA = "0xA2BEEC")]
	public void GoToNextTimeLine()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xA2CA44", Offset = "0xA2CA44", VA = "0xA2CA44")]
	public void GoToPreviousTimeline()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xA2C3A4", Offset = "0xA2C3A4", VA = "0xA2C3A4")]
	private void UnloadAllScenes()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xA2CE84", Offset = "0xA2CE84", VA = "0xA2CE84")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xA2CE88", Offset = "0xA2CE88", VA = "0xA2CE88")]
	public void StartChapter(int indexStep = 0, int endStep = 0)
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xA2C21C", Offset = "0xA2C21C", VA = "0xA2C21C")]
	public void StopCurrentStep()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xA2CF98", Offset = "0xA2CF98", VA = "0xA2CF98")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xA2CFA0", Offset = "0xA2CFA0", VA = "0xA2CFA0")]
	public void Resume()
	{
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xA2CFB8", Offset = "0xA2CFB8", VA = "0xA2CFB8")]
	private void OnPauseChapterMessageHandler(OnPauseChapterMessage msg)
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xA2CFC0", Offset = "0xA2CFC0", VA = "0xA2CFC0")]
	private void OnResumeChapterMessageHandler(OnResumeChapterMessage msg)
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xA2C48C", Offset = "0xA2C48C", VA = "0xA2C48C")]
	private void ExecuteNextChapter()
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xA2D158", Offset = "0xA2D158", VA = "0xA2D158")]
	private void CurrentStep_OnComplete(ChapterStep chapterStep)
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xA2D474", Offset = "0xA2D474", VA = "0xA2D474")]
	private void Update()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xA2D0F0", Offset = "0xA2D0F0", VA = "0xA2D0F0")]
	private void StepStarted(string stepName)
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xA2D328", Offset = "0xA2D328", VA = "0xA2D328")]
	private void StepFinished()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xA2E054", Offset = "0xA2E054", VA = "0xA2E054")]
	public Chapter()
	{
	}
}
[Token(Token = "0x200000A")]
public class ChapterLauncher : MonoBehaviour
{
	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Chapter chapter;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool launchOnStart;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int stepBegin;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87BA04", Offset = "0x87BA04")]
	public int stepEnd;

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xA2E154", Offset = "0xA2E154", VA = "0xA2E154")]
	private void Start()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xA2E158", Offset = "0xA2E158", VA = "0xA2E158")]
	public void Init(UnityEvent EventOnTimelineEnd)
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xA2E24C", Offset = "0xA2E24C", VA = "0xA2E24C")]
	private void Update()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xA2E298", Offset = "0xA2E298", VA = "0xA2E298")]
	public ChapterLauncher()
	{
	}
}
[Token(Token = "0x200000B")]
public class ChapterManager : MonoBehaviour
{
	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87BA3C", Offset = "0x87BA3C")]
	public ChapterLauncher chapDebug;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87BA74", Offset = "0x87BA74")]
	public ChapterLauncher chapBuild;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public ChapterLauncher currentChapter;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Language language;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent EventOnPlay;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent EventOnPause;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent EventOnTimelineEnd;

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xA2E2A0", Offset = "0xA2E2A0", VA = "0xA2E2A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xA2E2A8", Offset = "0xA2E2A8", VA = "0xA2E2A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xA2E34C", Offset = "0xA2E34C", VA = "0xA2E34C")]
	public void Begin()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xA2E354", Offset = "0xA2E354", VA = "0xA2E354")]
	public void launchChapter(ChapterLauncher chap)
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xA2E38C", Offset = "0xA2E38C", VA = "0xA2E38C")]
	public void PlayPause(bool isPlay)
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xA2E438", Offset = "0xA2E438", VA = "0xA2E438")]
	public void TogglePlayPause()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xA2E474", Offset = "0xA2E474", VA = "0xA2E474")]
	public void GoToNextStepOfCurrentChapter()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xA2E50C", Offset = "0xA2E50C", VA = "0xA2E50C")]
	public void GoToPreviousStepOfCurrentChapter()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xA2E5A4", Offset = "0xA2E5A4", VA = "0xA2E5A4")]
	public void Rewind()
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xA2E5E0", Offset = "0xA2E5E0", VA = "0xA2E5E0")]
	public void FastForward()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xA2E61C", Offset = "0xA2E61C", VA = "0xA2E61C")]
	public ChapterManager()
	{
	}
}
[Serializable]
[Token(Token = "0x200000C")]
public class ChapterParams
{
	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Chapter chapter;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public KeyCode keyLaunch;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int stepBegin;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int stepEnd;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool waitForKeyLaunch;

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xA2E624", Offset = "0xA2E624", VA = "0xA2E624")]
	public ChapterParams()
	{
	}
}
[Serializable]
[Token(Token = "0x200000D")]
public class ChapterStepConfig
{
	[Token(Token = "0x200022A")]
	public enum types
	{
		[Token(Token = "0x4000C8A")]
		LOAD_LEVELS,
		[Token(Token = "0x4000C8B")]
		UNLOAD_LEVELS,
		[Token(Token = "0x4000C8C")]
		PLAY_TIMELINES,
		[Token(Token = "0x4000C8D")]
		PAUSE,
		[Token(Token = "0x4000C8E")]
		RESUME,
		[Token(Token = "0x4000C8F")]
		WAIT_GAME_EVENT,
		[Token(Token = "0x4000C90")]
		LOAD_PREFAB
	}

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool expand;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int currentSceneIndex;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayableDirector currentPlayableDirector;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public types nextConfigType;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public types type;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool waitCompleteBeforeContinue;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Scene]
	public List<string> levelIDs;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Transform> prefabs;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string gameEvent;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public PlayableDirector playableDirector;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool timelinePlayAll;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool timelineResume;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	public bool timelinePlayToEnd;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float timelineFrom;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float timelineTo;

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xA2E6A4", Offset = "0xA2E6A4", VA = "0xA2E6A4")]
	public ChapterStepConfig()
	{
	}
}
[Token(Token = "0x200000E")]
public class OnPauseChapterMessage : Message
{
	[Token(Token = "0x600004B")]
	[Address(RVA = "0xBBF84C", Offset = "0xBBF84C", VA = "0xBBF84C")]
	public OnPauseChapterMessage()
	{
	}
}
[Token(Token = "0x200000F")]
public class OnResumeChapterMessage : Message
{
	[Token(Token = "0x600004C")]
	[Address(RVA = "0xBBF854", Offset = "0xBBF854", VA = "0xBBF854")]
	public OnResumeChapterMessage()
	{
	}
}
[Token(Token = "0x2000010")]
public class ChapterStep
{
	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87BADC", Offset = "0x87BADC")]
	private ChapterStepConfig <config>k__BackingField;

	[Token(Token = "0x17000003")]
	public ChapterStepConfig config
	{
		[Token(Token = "0x600004F")]
		[Address(RVA = "0xA2AC18", Offset = "0xA2AC18", VA = "0xA2AC18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8820CC", Offset = "0x8820CC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000050")]
		[Address(RVA = "0xA2E62C", Offset = "0xA2E62C", VA = "0xA2E62C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8820DC", Offset = "0x8820DC")]
		private set
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action<ChapterStep> OnComplete
	{
		[Token(Token = "0x600004D")]
		[Address(RVA = "0xA2D004", Offset = "0xA2D004", VA = "0xA2D004")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8820AC", Offset = "0x8820AC")]
		add
		{
		}
		[Token(Token = "0x600004E")]
		[Address(RVA = "0xA2D388", Offset = "0xA2D388", VA = "0xA2D388")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8820BC", Offset = "0x8820BC")]
		remove
		{
		}
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xA2CFD8", Offset = "0xA2CFD8", VA = "0xA2CFD8")]
	public ChapterStep(ChapterStepConfig config)
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xA2E634", Offset = "0xA2E634", VA = "0xA2E634", Slot = "4")]
	public virtual void Stop()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xA2E638", Offset = "0xA2E638", VA = "0xA2E638", Slot = "5")]
	public virtual void Execute()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xA2E6A0", Offset = "0xA2E6A0", VA = "0xA2E6A0", Slot = "6")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xA2E63C", Offset = "0xA2E63C", VA = "0xA2E63C")]
	protected void DispatchComplete()
	{
	}
}
[Token(Token = "0x2000011")]
public class LoadLevelChapterStep : ChapterStep
{
	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int loaded;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int toLoad;

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xB24450", Offset = "0xB24450", VA = "0xB24450")]
	public LoadLevelChapterStep(ChapterStepConfig config)
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0xB24458", Offset = "0xB24458", VA = "0xB24458", Slot = "5")]
	public override void Execute()
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xB2450C", Offset = "0xB2450C", VA = "0xB2450C")]
	private void LoadNext()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xB24730", Offset = "0xB24730", VA = "0xB24730")]
	private void SceneManager_sceneLoaded(Scene arg0, LoadSceneMode arg1)
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xB247C0", Offset = "0xB247C0", VA = "0xB247C0")]
	private void OnCurrentLevelLoaded()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xB248F0", Offset = "0xB248F0", VA = "0xB248F0")]
	private void LevelManager_Instance_OnLoadLevelFailed(string obj)
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xB248F4", Offset = "0xB248F4", VA = "0xB248F4")]
	private void LevelManager_Instance_OnLevelLoaded(string obj)
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xB248F8", Offset = "0xB248F8", VA = "0xB248F8")]
	private void LevelComplete()
	{
	}
}
[Token(Token = "0x2000012")]
public class LoadPrefabChapterStep : ChapterStep
{
	[Token(Token = "0x600005E")]
	[Address(RVA = "0xB24EE4", Offset = "0xB24EE4", VA = "0xB24EE4")]
	public LoadPrefabChapterStep(ChapterStepConfig config)
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xB24EEC", Offset = "0xB24EEC", VA = "0xB24EEC", Slot = "5")]
	public override void Execute()
	{
	}
}
[Token(Token = "0x2000013")]
public class PauseChapterStep : ChapterStep
{
	[Token(Token = "0x6000060")]
	[Address(RVA = "0xA13738", Offset = "0xA13738", VA = "0xA13738")]
	public PauseChapterStep(ChapterStepConfig config)
	{
	}
}
[Token(Token = "0x2000014")]
public class PlayTimelineChapterStep : ChapterStep
{
	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool playing;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool complete;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int count;

	[Token(Token = "0x6000061")]
	[Address(RVA = "0xA13D50", Offset = "0xA13D50", VA = "0xA13D50")]
	public PlayTimelineChapterStep(ChapterStepConfig config)
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xA13D58", Offset = "0xA13D58", VA = "0xA13D58", Slot = "5")]
	public override void Execute()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xA140C0", Offset = "0xA140C0", VA = "0xA140C0", Slot = "6")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xA14324", Offset = "0xA14324", VA = "0xA14324", Slot = "4")]
	public override void Stop()
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xA14368", Offset = "0xA14368", VA = "0xA14368")]
	public void Resume()
	{
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xA14114", Offset = "0xA14114", VA = "0xA14114")]
	private bool AllComplete()
	{
		return default(bool);
	}
}
[Token(Token = "0x2000015")]
public class UnloadLevelChapterStep : ChapterStep
{
	[Token(Token = "0x6000067")]
	[Address(RVA = "0xDEF8B0", Offset = "0xDEF8B0", VA = "0xDEF8B0")]
	public UnloadLevelChapterStep(ChapterStepConfig config)
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xDEF8B8", Offset = "0xDEF8B8", VA = "0xDEF8B8", Slot = "5")]
	public override void Execute()
	{
	}
}
[Token(Token = "0x2000016")]
public class ActiveChildrenOnKey : MonoBehaviour
{
	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public KeyCode key;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool isActive;

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xA26288", Offset = "0xA26288", VA = "0xA26288")]
	private void Start()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xA26614", Offset = "0xA26614", VA = "0xA26614")]
	private void Update()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xA269CC", Offset = "0xA269CC", VA = "0xA269CC")]
	public ActiveChildrenOnKey()
	{
	}
}
[Token(Token = "0x2000017")]
public class AutoRotate : MonoBehaviour
{
	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 axe;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float speed;

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xA27734", Offset = "0xA27734", VA = "0xA27734")]
	private void Start()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xA27738", Offset = "0xA27738", VA = "0xA27738")]
	private void Update()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xA277B0", Offset = "0xA277B0", VA = "0xA277B0")]
	public AutoRotate()
	{
	}
}
[Token(Token = "0x2000018")]
public class Benchmark : MonoBehaviour
{
	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] objects;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<int> compteurs;

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xA28228", Offset = "0xA28228", VA = "0xA28228")]
	private void Start()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xA282DC", Offset = "0xA282DC", VA = "0xA282DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xA282E0", Offset = "0xA282E0", VA = "0xA282E0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xA2889C", Offset = "0xA2889C", VA = "0xA2889C")]
	public Benchmark()
	{
	}
}
[Token(Token = "0x2000019")]
public class CameraMouseRotation : MonoBehaviour
{
	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameObject obj;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool b_ActiveScript;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float f_axisX;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float f_AxisY;

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xA29B28", Offset = "0xA29B28", VA = "0xA29B28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xA29BA0", Offset = "0xA29BA0", VA = "0xA29BA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xA29C3C", Offset = "0xA29C3C", VA = "0xA29C3C")]
	private void RotateCamera()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xA29D20", Offset = "0xA29D20", VA = "0xA29D20")]
	public CameraMouseRotation()
	{
	}
}
[Token(Token = "0x200001A")]
public class CameraVR : MonoBehaviour
{
	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float heightY;

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xA29D28", Offset = "0xA29D28", VA = "0xA29D28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xA29D2C", Offset = "0xA29D2C", VA = "0xA29D2C")]
	public void Recenter()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xA29E68", Offset = "0xA29E68", VA = "0xA29E68")]
	private void Update()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xA29EA4", Offset = "0xA29EA4", VA = "0xA29EA4")]
	public CameraVR()
	{
	}
}
[Token(Token = "0x200001B")]
public class DebugChapterAssistant : MonoBehaviour
{
	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TimelineController lastChapter;

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xA30090", Offset = "0xA30090", VA = "0xA30090")]
	private string getChapterName()
	{
		return null;
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xA30138", Offset = "0xA30138", VA = "0xA30138")]
	public void ResolveBindings()
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xA3022C", Offset = "0xA3022C", VA = "0xA3022C")]
	public void RegisterLastChapter(TimelineController tc)
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xA302C4", Offset = "0xA302C4", VA = "0xA302C4")]
	public DebugChapterAssistant()
	{
	}
}
[Token(Token = "0x200001C")]
public class CopyTransformRotation : MonoBehaviour
{
	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform other;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool copyRotX;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool copyRotY;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool copyRotZ;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float ratioPos;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _t;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 initPos;

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xA2FBE0", Offset = "0xA2FBE0", VA = "0xA2FBE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xA2FC28", Offset = "0xA2FC28", VA = "0xA2FC28")]
	private void Update()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xA2FD90", Offset = "0xA2FD90", VA = "0xA2FD90")]
	public CopyTransformRotation()
	{
	}
}
[Token(Token = "0x200001D")]
public class CustomAnimator : MonoBehaviour
{
	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string booleanName;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public KeyCode key;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animator m_Animator;

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xA2FF30", Offset = "0xA2FF30", VA = "0xA2FF30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xA2FFA0", Offset = "0xA2FFA0", VA = "0xA2FFA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xA30038", Offset = "0xA30038", VA = "0xA30038")]
	public CustomAnimator()
	{
	}
}
[Token(Token = "0x200001E")]
public class ActiveDebugMode : MonoBehaviour
{
	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject objectToActive;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float timeHold;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float f1;

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float f2;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float timerPull;

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xA269D4", Offset = "0xA269D4", VA = "0xA269D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xA269D8", Offset = "0xA269D8", VA = "0xA269D8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xA26AD4", Offset = "0xA26AD4", VA = "0xA26AD4")]
	public ActiveDebugMode()
	{
	}
}
[Token(Token = "0x200001F")]
public class DebugEpChapter : MonoBehaviour
{
	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ChapterManager ChapterManager;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI textEpisode;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI textSeq;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string lastSeqName;

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xA302CC", Offset = "0xA302CC", VA = "0xA302CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xA302D0", Offset = "0xA302D0", VA = "0xA302D0")]
	private void Update()
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xA303E4", Offset = "0xA303E4", VA = "0xA303E4")]
	public DebugEpChapter()
	{
	}
}
[Token(Token = "0x2000020")]
public class DebugLeftOculusController : MonoBehaviour
{
	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CameraVR camvr;

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xA3043C", Offset = "0xA3043C", VA = "0xA3043C")]
	private void Start()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xA30440", Offset = "0xA30440", VA = "0xA30440")]
	private void Update()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xA304D4", Offset = "0xA304D4", VA = "0xA304D4")]
	public DebugLeftOculusController()
	{
	}
}
[Token(Token = "0x2000021")]
public class DebugModeKeyboard : MonoBehaviour
{
	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ChapterManager chapterManager;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isPlay;

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xA305FC", Offset = "0xA305FC", VA = "0xA305FC")]
	private void Start()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xA30600", Offset = "0xA30600", VA = "0xA30600")]
	private void Update()
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xA30718", Offset = "0xA30718", VA = "0xA30718")]
	public DebugModeKeyboard()
	{
	}
}
[Token(Token = "0x2000022")]
public class OculusController : MonoBehaviour
{
	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject canvasToDisplay;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInput.Controller m_controller;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject activeObjectEvent;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool triggerIsPulled;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float f;

	[Token(Token = "0x4000072")]
	private const float triggerSensitivity = 0.95f;

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xCB2250", Offset = "0xCB2250", VA = "0xCB2250")]
	private void Start()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xCB2284", Offset = "0xCB2284", VA = "0xCB2284")]
	private void Update()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xCB2414", Offset = "0xCB2414", VA = "0xCB2414")]
	public OculusController()
	{
	}
}
[Token(Token = "0x2000023")]
public class DestroyOnPlay : MonoBehaviour
{
	[Token(Token = "0x6000094")]
	[Address(RVA = "0xA35A94", Offset = "0xA35A94", VA = "0xA35A94")]
	private void Start()
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xA35B10", Offset = "0xA35B10", VA = "0xA35B10")]
	private void Update()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xA35B14", Offset = "0xA35B14", VA = "0xA35B14")]
	public DestroyOnPlay()
	{
	}
}
[Token(Token = "0x2000024")]
public class FPSDisplay : MonoBehaviour
{
	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI UIText;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool displayFPS;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool displayMemory;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float frameCount;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float elapsedTime;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string text;

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xA3B3BC", Offset = "0xA3B3BC", VA = "0xA3B3BC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xA3B6D0", Offset = "0xA3B6D0", VA = "0xA3B6D0")]
	private string DisplayBytes(double sizeInBytes)
	{
		return null;
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xA3B7E8", Offset = "0xA3B7E8", VA = "0xA3B7E8")]
	public FPSDisplay()
	{
	}
}
[Token(Token = "0x2000025")]
public class SceneFPSPair
{
	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string scene;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int fps;

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xA187B8", Offset = "0xA187B8", VA = "0xA187B8")]
	public SceneFPSPair()
	{
	}
}
[Token(Token = "0x2000026")]
public class LogFPS : MonoBehaviour
{
	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float interval;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float subcheckInterval;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float lastTime;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float lastSubcheck;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float startingTime;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<float, SceneFPSPair> fpsTimeline;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<float> subcheckFPS;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private StringBuilder csvBuilder;

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xB29280", Offset = "0xB29280", VA = "0xB29280")]
	private void Start()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xB292A8", Offset = "0xB292A8", VA = "0xB292A8")]
	private float Average(List<float> list)
	{
		return default(float);
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xB293F8", Offset = "0xB293F8", VA = "0xB293F8")]
	private void Update()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0xB295B8", Offset = "0xB295B8", VA = "0xB295B8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xB29CDC", Offset = "0xB29CDC", VA = "0xB29CDC")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0xB295BC", Offset = "0xB295BC", VA = "0xB295BC")]
	public void GenerateSpreadsheet()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0xB29CE0", Offset = "0xB29CE0", VA = "0xB29CE0")]
	public LogFPS()
	{
	}
}
[Token(Token = "0x2000027")]
public class offsetMaterial : MonoBehaviour
{
	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float scrollSpeedX;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float scrollSpeedY;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int indexMat;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float timeUpdate;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Renderer rend;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float counter;

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xE03774", Offset = "0xE03774", VA = "0xE03774")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xE037CC", Offset = "0xE037CC", VA = "0xE037CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xE03900", Offset = "0xE03900", VA = "0xE03900")]
	public offsetMaterial()
	{
	}
}
[Token(Token = "0x2000028")]
public class SceneIndicatorOnScreen : MonoBehaviour
{
	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text txt_Indicator;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<string> l_s_NamesScenes;

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xA187C0", Offset = "0xA187C0", VA = "0xA187C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xA188C8", Offset = "0xA188C8", VA = "0xA188C8")]
	private void Addscene(Scene sc, LoadSceneMode scm)
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xA18B64", Offset = "0xA18B64", VA = "0xA18B64")]
	private void RemoveScene(Scene sc)
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xA189C0", Offset = "0xA189C0", VA = "0xA189C0")]
	private void UpdateSceneIndicator()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xA18BF0", Offset = "0xA18BF0", VA = "0xA18BF0")]
	public SceneIndicatorOnScreen()
	{
	}
}
[Token(Token = "0x2000029")]
public class ScenesLauncher : MonoBehaviour
{
	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int sceneIndex;

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xA19810", Offset = "0xA19810", VA = "0xA19810")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xA198A4", Offset = "0xA198A4", VA = "0xA198A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xA19938", Offset = "0xA19938", VA = "0xA19938")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xA19D58", Offset = "0xA19D58", VA = "0xA19D58")]
	public ScenesLauncher()
	{
	}
}
[Token(Token = "0x200002A")]
public class SceneUnloadAtStart : MonoBehaviour
{
	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xA19758", Offset = "0xA19758", VA = "0xA19758")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xA19808", Offset = "0xA19808", VA = "0xA19808")]
	public SceneUnloadAtStart()
	{
	}
}
[Token(Token = "0x200002B")]
public class ShowMesh : MonoBehaviour
{
	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private MeshRenderer MsRend;

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xA1A434", Offset = "0xA1A434", VA = "0xA1A434")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xA1A48C", Offset = "0xA1A48C", VA = "0xA1A48C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xA1A490", Offset = "0xA1A490", VA = "0xA1A490")]
	private void switchEnableMeshRenderer()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xA1A570", Offset = "0xA1A570", VA = "0xA1A570")]
	public ShowMesh()
	{
	}
}
[Serializable]
[Token(Token = "0x200002C")]
public class AudioMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string floatPropertyName;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float floatPropertyValue;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve curve;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public double start;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public double end;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public double duration;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public double progress;

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0xA26D64", Offset = "0xA26D64", VA = "0xA26D64", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xA26DD8", Offset = "0xA26DD8", VA = "0xA26DD8")]
	public AudioMixerBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x200002D")]
public class AudioMixerClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerBehaviour template;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public double start;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public double end;

	[Token(Token = "0x17000004")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x60000B6")]
		[Address(RVA = "0xA26DF0", Offset = "0xA26DF0", VA = "0xA26DF0", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xA26DF8", Offset = "0xA26DF8", VA = "0xA26DF8", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xA26E98", Offset = "0xA26E98", VA = "0xA26E98")]
	public AudioMixerClip()
	{
	}
}
[Token(Token = "0x200002E")]
public class AudioMixerMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private string m_DefaultPropertyName;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float m_DefaultFloatPropertyValue;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float m_deltaValue;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioMixer m_TrackBinding;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_FirstFrameHappened;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int currentIndex;

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xA26F1C", Offset = "0xA26F1C", VA = "0xA26F1C", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xA2723C", Offset = "0xA2723C", VA = "0xA2723C", Slot = "14")]
	public override void OnGraphStop(Playable playable)
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xA27244", Offset = "0xA27244", VA = "0xA27244")]
	public AudioMixerMixerBehaviour()
	{
	}
}
[Token(Token = "0x200002F")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x87901C", Offset = "0x87901C")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x87901C", Offset = "0x87901C")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x87901C", Offset = "0x87901C")]
public class AudioMixerTrack : TrackAsset
{
	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xA27254", Offset = "0xA27254", VA = "0xA27254", Slot = "14")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xA276CC", Offset = "0xA276CC", VA = "0xA276CC")]
	public AudioMixerTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x2000030")]
public class LightControlBehaviour : PlayableBehaviour
{
	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color color;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float intensity;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float bounceIntensity;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float range;

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xB23C38", Offset = "0xB23C38", VA = "0xB23C38")]
	public LightControlBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x2000031")]
public class LightControlClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LightControlBehaviour template;

	[Token(Token = "0x17000005")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x60000BF")]
		[Address(RVA = "0xB23C7C", Offset = "0xB23C7C", VA = "0xB23C7C", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xB23C84", Offset = "0xB23C84", VA = "0xB23C84", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xB23D24", Offset = "0xB23D24", VA = "0xB23D24")]
	public LightControlClip()
	{
	}
}
[Token(Token = "0x2000032")]
public class LightControlMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Color m_DefaultColor;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_DefaultIntensity;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float m_DefaultBounceIntensity;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float m_DefaultRange;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light m_TrackBinding;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_FirstFrameHappened;

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xB23D88", Offset = "0xB23D88", VA = "0xB23D88", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xB24214", Offset = "0xB24214", VA = "0xB24214", Slot = "14")]
	public override void OnGraphStop(Playable playable)
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xB24340", Offset = "0xB24340", VA = "0xB24340")]
	public LightControlMixerBehaviour()
	{
	}
}
[Token(Token = "0x2000033")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x8790D0", Offset = "0x8790D0")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x8790D0", Offset = "0x8790D0")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x8790D0", Offset = "0x8790D0")]
public class LightControlTrack : TrackAsset
{
	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xB24348", Offset = "0xB24348", VA = "0xB24348", Slot = "14")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xB243E0", Offset = "0xB243E0", VA = "0xB243E0", Slot = "18")]
	public override void GatherProperties(PlayableDirector director, IPropertyCollector driver)
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xB243E8", Offset = "0xB243E8", VA = "0xB243E8")]
	public LightControlTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x2000034")]
public class NavMeshAgentControlBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform destination;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool destinationSet;

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xB34254", Offset = "0xB34254", VA = "0xB34254", Slot = "13")]
	public override void OnGraphStart(Playable playable)
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xB3425C", Offset = "0xB3425C", VA = "0xB3425C")]
	public NavMeshAgentControlBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x2000035")]
public class NavMeshAgentControlClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ExposedReference<Transform> destination;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public NavMeshAgentControlBehaviour template;

	[Token(Token = "0x17000006")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x60000CA")]
		[Address(RVA = "0xB34264", Offset = "0xB34264", VA = "0xB34264", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xB3426C", Offset = "0xB3426C", VA = "0xB3426C", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xB34380", Offset = "0xB34380", VA = "0xB34380")]
	public NavMeshAgentControlClip()
	{
	}
}
[Token(Token = "0x2000036")]
public class NavMeshAgentControlMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xB343E8", Offset = "0xB343E8", VA = "0xB343E8", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xB3465C", Offset = "0xB3465C", VA = "0xB3465C")]
	public NavMeshAgentControlMixerBehaviour()
	{
	}
}
[Token(Token = "0x2000037")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x879184", Offset = "0x879184")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x879184", Offset = "0x879184")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x879184", Offset = "0x879184")]
public class NavMeshAgentControlTrack : TrackAsset
{
	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xB34664", Offset = "0xB34664", VA = "0xB34664", Slot = "14")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xB346FC", Offset = "0xB346FC", VA = "0xB346FC")]
	public NavMeshAgentControlTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x2000038")]
public class ScreenFaderBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color color;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color colorIn;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color colorOut;

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xA19D60", Offset = "0xA19D60", VA = "0xA19D60")]
	public ScreenFaderBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x2000039")]
public class ScreenFaderClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ScreenFaderBehaviour template;

	[Token(Token = "0x17000007")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x60000D2")]
		[Address(RVA = "0xA19DB4", Offset = "0xA19DB4", VA = "0xA19DB4", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xA19DBC", Offset = "0xA19DBC", VA = "0xA19DBC", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xA19E5C", Offset = "0xA19E5C", VA = "0xA19E5C")]
	public ScreenFaderClip()
	{
	}
}
[Token(Token = "0x200003A")]
public class ScreenFaderMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Color m_DefaultColor;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Image m_TrackBinding;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_FirstFrameHappened;

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xA19EC0", Offset = "0xA19EC0", VA = "0xA19EC0", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0xA1A224", Offset = "0xA1A224", VA = "0xA1A224", Slot = "14")]
	public override void OnGraphStop(Playable playable)
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0xA1A290", Offset = "0xA1A290", VA = "0xA1A290")]
	public ScreenFaderMixerBehaviour()
	{
	}
}
[Token(Token = "0x200003B")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x879238", Offset = "0x879238")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x879238", Offset = "0x879238")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x879238", Offset = "0x879238")]
public class ScreenFaderTrack : TrackAsset
{
	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xA1A298", Offset = "0xA1A298", VA = "0xA1A298", Slot = "14")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xA1A330", Offset = "0xA1A330", VA = "0xA1A330", Slot = "18")]
	public override void GatherProperties(PlayableDirector director, IPropertyCollector driver)
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xA1A338", Offset = "0xA1A338", VA = "0xA1A338")]
	public ScreenFaderTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x200003C")]
public class TextSwitcherBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color color;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int fontSize;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string text;

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xA7EFC4", Offset = "0xA7EFC4", VA = "0xA7EFC4")]
	public TextSwitcherBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x200003D")]
public class TextSwitcherClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextSwitcherBehaviour template;

	[Token(Token = "0x17000008")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x60000DC")]
		[Address(RVA = "0xA7F000", Offset = "0xA7F000", VA = "0xA7F000", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xA7F008", Offset = "0xA7F008", VA = "0xA7F008", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xA7F0A8", Offset = "0xA7F0A8", VA = "0xA7F0A8")]
	public TextSwitcherClip()
	{
	}
}
[Token(Token = "0x200003E")]
public class TextSwitcherMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Color m_DefaultColor;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_DefaultFontSize;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string m_DefaultText;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Text m_TrackBinding;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool m_FirstFrameHappened;

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xA7F10C", Offset = "0xA7F10C", VA = "0xA7F10C", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xA7F5C0", Offset = "0xA7F5C0", VA = "0xA7F5C0", Slot = "14")]
	public override void OnGraphStop(Playable playable)
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xA7F680", Offset = "0xA7F680", VA = "0xA7F680")]
	public TextSwitcherMixerBehaviour()
	{
	}
}
[Token(Token = "0x200003F")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x8792E8", Offset = "0x8792E8")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x8792E8", Offset = "0x8792E8")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x8792E8", Offset = "0x8792E8")]
public class TextSwitcherTrack : TrackAsset
{
	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xDEA72C", Offset = "0xDEA72C", VA = "0xDEA72C", Slot = "14")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xDEA7C4", Offset = "0xDEA7C4", VA = "0xDEA7C4", Slot = "18")]
	public override void GatherProperties(PlayableDirector director, IPropertyCollector driver)
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xDEA7CC", Offset = "0xDEA7CC", VA = "0xDEA7CC")]
	public TextSwitcherTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x2000040")]
public class TimeDilationBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float timeScale;

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xDEA888", Offset = "0xDEA888", VA = "0xDEA888")]
	public TimeDilationBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x2000041")]
public class TimeDilationClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TimeDilationBehaviour template;

	[Token(Token = "0x17000009")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x60000E6")]
		[Address(RVA = "0xDEA898", Offset = "0xDEA898", VA = "0xDEA898", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xDEA8A0", Offset = "0xDEA8A0", VA = "0xDEA8A0", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xDEA940", Offset = "0xDEA940", VA = "0xDEA940")]
	public TimeDilationClip()
	{
	}
}
[Token(Token = "0x2000042")]
public class TimeDilationMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float m_OldTimeScale;

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xDEA9B0", Offset = "0xDEA9B0", VA = "0xDEA9B0", Slot = "13")]
	public override void OnGraphStart(Playable playable)
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xDEA9D8", Offset = "0xDEA9D8", VA = "0xDEA9D8", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xDEAB78", Offset = "0xDEAB78", VA = "0xDEAB78", Slot = "14")]
	public override void OnGraphStop(Playable playable)
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xDEAB84", Offset = "0xDEAB84", VA = "0xDEAB84")]
	public TimeDilationMixerBehaviour()
	{
	}
}
[Token(Token = "0x2000043")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x87939C", Offset = "0x87939C")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x87939C", Offset = "0x87939C")]
public class TimeDilationTrack : TrackAsset
{
	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xDEAB94", Offset = "0xDEAB94", VA = "0xDEAB94", Slot = "14")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xDEAC2C", Offset = "0xDEAC2C", VA = "0xDEAC2C")]
	public TimeDilationTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x2000044")]
public class TransformTweenBehaviour : PlayableBehaviour
{
	[Token(Token = "0x200022B")]
	public enum TweenType
	{
		[Token(Token = "0x4000C92")]
		Linear,
		[Token(Token = "0x4000C93")]
		Deceleration,
		[Token(Token = "0x4000C94")]
		Harmonic,
		[Token(Token = "0x4000C95")]
		Custom
	}

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Transform startLocation;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform endLocation;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool tweenPosition;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool tweenRotation;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public TweenType tweenType;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float customStartingSpeed;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float customEndingSpeed;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float inverseDuration;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 startingPosition;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Quaternion startingRotation;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve currentCurve;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AnimationCurve m_LinearCurve;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private AnimationCurve m_DecelerationCurve;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AnimationCurve m_HarmonicCurve;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AnimationCurve m_CustomCurve;

	[Token(Token = "0x40000CE")]
	private const float k_RightAngleInRads = (float)Math.PI / 2f;

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xDEC818", Offset = "0xDEC818", VA = "0xDEC818", Slot = "13")]
	public override void OnGraphStart(Playable playable)
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xDECB04", Offset = "0xDECB04", VA = "0xDECB04")]
	public TransformTweenBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x2000045")]
public class TransformTweenClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TransformTweenBehaviour template;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ExposedReference<Transform> startLocation;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ExposedReference<Transform> endLocation;

	[Token(Token = "0x1700000A")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x60000F1")]
		[Address(RVA = "0xDECCB4", Offset = "0xDECCB4", VA = "0xDECCB4", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0xDECCBC", Offset = "0xDECCBC", VA = "0xDECCBC", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0xDECE04", Offset = "0xDECE04", VA = "0xDECE04")]
	public TransformTweenClip()
	{
	}
}
[Token(Token = "0x2000046")]
public class TransformTweenMixerBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool m_FirstFrameHappened;

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xDECE68", Offset = "0xDECE68", VA = "0xDECE68", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xDED604", Offset = "0xDED604", VA = "0xDED604")]
	private static Quaternion AddQuaternions(Quaternion first, Quaternion second)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xDED5F0", Offset = "0xDED5F0", VA = "0xDED5F0")]
	private static Quaternion ScaleQuaternion(Quaternion rotation, float multiplier)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xDED618", Offset = "0xDED618", VA = "0xDED618")]
	private static float QuaternionMagnitude(Quaternion rotation)
	{
		return default(float);
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xDED4F4", Offset = "0xDED4F4", VA = "0xDED4F4")]
	private static Quaternion NormalizeQuaternion(Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xDED704", Offset = "0xDED704", VA = "0xDED704")]
	public TransformTweenMixerBehaviour()
	{
	}
}
[Token(Token = "0x2000047")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x879428", Offset = "0x879428")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x879428", Offset = "0x879428")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x879428", Offset = "0x879428")]
public class TransformTweenTrack : TrackAsset
{
	[Token(Token = "0x60000FA")]
	[Address(RVA = "0xDED70C", Offset = "0xDED70C", VA = "0xDED70C", Slot = "14")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xDED7A4", Offset = "0xDED7A4", VA = "0xDED7A4", Slot = "18")]
	public override void GatherProperties(PlayableDirector director, IPropertyCollector driver)
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xDED7AC", Offset = "0xDED7AC", VA = "0xDED7AC")]
	public TransformTweenTrack()
	{
	}
}
[Token(Token = "0x2000048")]
public class DownloadManager : MonoBehaviour
{
	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VideoDownloader videoDownloader;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ProgressBar progressBar;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject downloadUI;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject menu;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<TextButton> menuButtons;

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xA3AB94", Offset = "0xA3AB94", VA = "0xA3AB94")]
	private void Start()
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xA3ACBC", Offset = "0xA3ACBC", VA = "0xA3ACBC")]
	public void UnlockMenu()
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xA3AE28", Offset = "0xA3AE28", VA = "0xA3AE28")]
	public DownloadManager()
	{
	}
}
[Token(Token = "0x2000049")]
public class FTPDownloader : MonoBehaviour
{
	[Token(Token = "0x200022C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B38C", Offset = "0x87B38C")]
	private sealed class <downloadAsync>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FTPDownloader <>4__this;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private FileStream <localFileStream>5__2;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private byte[] <byteBuffer>5__3;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <totalBytes>5__4;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <bytesRead>5__5;

		[Token(Token = "0x170000D4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B88")]
			[Address(RVA = "0xA3D698", Offset = "0xA3D698", VA = "0xA3D698", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B8A")]
			[Address(RVA = "0xA3D708", Offset = "0xA3D708", VA = "0xA3D708", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0xA3D0B0", Offset = "0xA3D0B0", VA = "0xA3D0B0")]
		[DebuggerHidden]
		public <downloadAsync>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0xA3D188", Offset = "0xA3D188", VA = "0xA3D188", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0xA3D18C", Offset = "0xA3D18C", VA = "0xA3D18C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0xA3D6A0", Offset = "0xA3D6A0", VA = "0xA3D6A0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string remoteFile;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string localFile;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VideoDownloader downloader;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string host;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string user;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private string pass;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private FtpWebRequest ftpRequest;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private FtpWebResponse ftpResponse;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Stream ftpStream;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int bufferSize;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool stop;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int currentSizeFile;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public UnityEvent OnFinish;

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xA3CE0C", Offset = "0xA3CE0C", VA = "0xA3CE0C")]
	public void Download(string ftpFile)
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xA3CFD4", Offset = "0xA3CFD4", VA = "0xA3CFD4")]
	public void StartdownloadAsync(string _remoteFile, string _localFile)
	{
	}

	[Token(Token = "0x6000102")]
	[Address(RVA = "0xA3D03C", Offset = "0xA3D03C", VA = "0xA3D03C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8820EC", Offset = "0x8820EC")]
	public IEnumerator downloadAsync()
	{
		return null;
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0xA3D0DC", Offset = "0xA3D0DC", VA = "0xA3D0DC")]
	public FTPDownloader()
	{
	}
}
[Token(Token = "0x200004A")]
public class StreamingAssetsTransfer : MonoBehaviour
{
	[Token(Token = "0x200022D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B39C", Offset = "0x87B39C")]
	private sealed class <StartDownload>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string file;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public StreamingAssetsTransfer <>4__this;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private UnityWebRequest <www>5__2;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UnityWebRequestAsyncOperation <op>5__3;

		[Token(Token = "0x170000D6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B8F")]
			[Address(RVA = "0xA79064", Offset = "0xA79064", VA = "0xA79064", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B91")]
			[Address(RVA = "0xA790D4", Offset = "0xA790D4", VA = "0xA790D4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0xA78BB8", Offset = "0xA78BB8", VA = "0xA78BB8")]
		[DebuggerHidden]
		public <StartDownload>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0xA78BEC", Offset = "0xA78BEC", VA = "0xA78BEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0xA78CC8", Offset = "0xA78CC8", VA = "0xA78CC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0xA78C08", Offset = "0xA78C08", VA = "0xA78C08")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0xA7906C", Offset = "0xA7906C", VA = "0xA7906C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ProgressBar progressBar;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent onComplete;

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xA78A68", Offset = "0xA78A68", VA = "0xA78A68")]
	public void Download(string file)
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0xA78B20", Offset = "0xA78B20", VA = "0xA78B20")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x882150", Offset = "0x882150")]
	private IEnumerator StartDownload(string file)
	{
		return null;
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0xA78BE4", Offset = "0xA78BE4", VA = "0xA78BE4")]
	public StreamingAssetsTransfer()
	{
	}
}
[Serializable]
[Token(Token = "0x200004B")]
public class DownloaderFile
{
	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int size;

	[Token(Token = "0x6000107")]
	[Address(RVA = "0xA3AE30", Offset = "0xA3AE30", VA = "0xA3AE30")]
	public DownloaderFile()
	{
	}
}
[Token(Token = "0x200004C")]
public class VideoDownloader : MonoBehaviour
{
	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ProgressBar progressBar;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<DownloaderFile> files;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public StreamingAssetsTransfer fileDownloader;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent onComplete;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool testDownload;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public List<string> queue;

	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<string> downloaded;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool downloading;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool shouldDownload;

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xE009B4", Offset = "0xE009B4", VA = "0xE009B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xE00A48", Offset = "0xE00A48", VA = "0xE00A48")]
	public void AddAllFilesToQueue()
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0xE00DA4", Offset = "0xE00DA4", VA = "0xE00DA4")]
	public bool ScanFiles()
	{
		return default(bool);
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0xE00F20", Offset = "0xE00F20", VA = "0xE00F20")]
	public bool ScanFile(DownloaderFile file)
	{
		return default(bool);
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xE0101C", Offset = "0xE0101C", VA = "0xE0101C")]
	private void StartDownload()
	{
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xE00B8C", Offset = "0xE00B8C", VA = "0xE00B8C")]
	public void NextDownload(bool firstDL)
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xE01050", Offset = "0xE01050", VA = "0xE01050")]
	private void EndDownload()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0xE010A0", Offset = "0xE010A0", VA = "0xE010A0")]
	public void UpdateProgressBar(float percentage)
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0xE00CB8", Offset = "0xE00CB8", VA = "0xE00CB8")]
	public bool AddFileToQueue(DownloaderFile file)
	{
		return default(bool);
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0xE010E0", Offset = "0xE010E0", VA = "0xE010E0")]
	public VideoDownloader()
	{
	}
}
[Token(Token = "0x200004D")]
public enum Language
{
	[Token(Token = "0x40000F3")]
	English,
	[Token(Token = "0x40000F4")]
	French,
	[Token(Token = "0x40000F5")]
	German,
	[Token(Token = "0x40000F6")]
	Korean,
	[Token(Token = "0x40000F7")]
	Chinese
}
[Serializable]
[Token(Token = "0x200004E")]
public class ButtonLanguagePair
{
	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Button button;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Language language;

	[Token(Token = "0x6000112")]
	[Address(RVA = "0xA29968", Offset = "0xA29968", VA = "0xA29968")]
	public ButtonLanguagePair()
	{
	}
}
[Token(Token = "0x200004F")]
public class LanguageSelector : MonoBehaviour
{
	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<ButtonLanguagePair> buttons;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent onLanguageChange;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Language selectedLanguage;

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xB20BE4", Offset = "0xB20BE4", VA = "0xB20BE4")]
	public void OnClick(int index)
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xB20D60", Offset = "0xB20D60", VA = "0xB20D60")]
	public LanguageSelector()
	{
	}
}
[Serializable]
[Token(Token = "0x2000050")]
public class LanguageTextPair
{
	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Language language;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x87BB0C", Offset = "0x87BB0C")]
	public string languageText;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_FontAsset fontAsset;

	[Token(Token = "0x6000115")]
	[Address(RVA = "0xB20F9C", Offset = "0xB20F9C", VA = "0xB20F9C")]
	public LanguageTextPair()
	{
	}
}
[Token(Token = "0x2000051")]
public class LanguageText : MonoBehaviour
{
	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro textMesh;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<LanguageTextPair> languages;

	[Token(Token = "0x6000116")]
	[Address(RVA = "0xB20D68", Offset = "0xB20D68", VA = "0xB20D68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0xB20F94", Offset = "0xB20F94", VA = "0xB20F94")]
	public LanguageText()
	{
	}
}
[Serializable]
[Token(Token = "0x2000052")]
public class LanguageTrackPair
{
	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Language language;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string track;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isVO;

	[Token(Token = "0x6000118")]
	[Address(RVA = "0xB220EC", Offset = "0xB220EC", VA = "0xB220EC")]
	public LanguageTrackPair()
	{
	}
}
[Token(Token = "0x2000053")]
public class LanguageTrackMuter : MonoBehaviour
{
	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ChapterManager chapterManager;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayableDirector playableDirector;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<string> mixerTracks;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<LanguageTrackPair> languages;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<string, bool> defaultValues;

	[Token(Token = "0x6000119")]
	[Address(RVA = "0xB20FA4", Offset = "0xB20FA4", VA = "0xB20FA4")]
	private void Start()
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0xB20FA8", Offset = "0xB20FA8", VA = "0xB20FA8")]
	public void Init()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0xB21648", Offset = "0xB21648", VA = "0xB21648")]
	private void ManageMixerTrack(bool mute)
	{
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0xB21C08", Offset = "0xB21C08", VA = "0xB21C08")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xB2207C", Offset = "0xB2207C", VA = "0xB2207C")]
	public LanguageTrackMuter()
	{
	}
}
[Token(Token = "0x2000054")]
public class Level : MonoBehaviour
{
	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Scene]
	public string ID;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Light[] lights;

	[Token(Token = "0x600011E")]
	[Address(RVA = "0xB22CD8", Offset = "0xB22CD8", VA = "0xB22CD8")]
	public void Init()
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0xB22D48", Offset = "0xB22D48", VA = "0xB22D48")]
	public void Clean()
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0xB22D4C", Offset = "0xB22D4C", VA = "0xB22D4C")]
	public Level()
	{
	}
}
[Token(Token = "0x2000055")]
[ExecuteInEditMode]
public class LevelManager : Singleton<LevelManager>
{
	[Token(Token = "0x200022E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B3AC", Offset = "0x87B3AC")]
	private sealed class <LoadNextLevel>d__19 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LevelManager <>4__this;

		[Token(Token = "0x170000D8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B95")]
			[Address(RVA = "0xB23BC0", Offset = "0xB23BC0", VA = "0xB23BC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000D9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B97")]
			[Address(RVA = "0xB23C30", Offset = "0xB23C30", VA = "0xB23C30", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B92")]
		[Address(RVA = "0xB23750", Offset = "0xB23750", VA = "0xB23750")]
		[DebuggerHidden]
		public <LoadNextLevel>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0xB238C8", Offset = "0xB238C8", VA = "0xB238C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0xB238CC", Offset = "0xB238CC", VA = "0xB238CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0xB23BC8", Offset = "0xB23BC8", VA = "0xB23BC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<string> m_levels;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<LevelConfiguration> m_levelConfigurations;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WaitForEndOfFrame m_waitEOF;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AsyncOperation m_operation;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LevelConfiguration m_currentLevelConfig;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_isLoading;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool m_initialized;

	[Token(Token = "0x14000004")]
	public event Action<string> OnLevelLoaded
	{
		[Token(Token = "0x6000121")]
		[Address(RVA = "0xB22D9C", Offset = "0xB22D9C", VA = "0xB22D9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8821B4", Offset = "0x8821B4")]
		add
		{
		}
		[Token(Token = "0x6000122")]
		[Address(RVA = "0xB22E88", Offset = "0xB22E88", VA = "0xB22E88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8821C4", Offset = "0x8821C4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action<string> OnLoadLevelFailed
	{
		[Token(Token = "0x6000123")]
		[Address(RVA = "0xB22F74", Offset = "0xB22F74", VA = "0xB22F74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8821D4", Offset = "0x8821D4")]
		add
		{
		}
		[Token(Token = "0x6000124")]
		[Address(RVA = "0xB23060", Offset = "0xB23060", VA = "0xB23060")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8821E4", Offset = "0x8821E4")]
		remove
		{
		}
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xB2314C", Offset = "0xB2314C", VA = "0xB2314C")]
	public void Init()
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xB2320C", Offset = "0xB2320C", VA = "0xB2320C")]
	public void Clean()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xB23244", Offset = "0xB23244", VA = "0xB23244")]
	private new void OnDestroy()
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xB2327C", Offset = "0xB2327C", VA = "0xB2327C")]
	public bool IsLevelLoadedOrLoading(string ID)
	{
		return default(bool);
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xB23334", Offset = "0xB23334", VA = "0xB23334")]
	public void LoadLevel(string ID, LoadSceneMode mode = LoadSceneMode.Single)
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xB23650", Offset = "0xB23650", VA = "0xB23650")]
	private void StartLoadingNextLevel()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0xB236DC", Offset = "0xB236DC", VA = "0xB236DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8821F4", Offset = "0x8821F4")]
	private IEnumerator LoadNextLevel()
	{
		return null;
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0xB2377C", Offset = "0xB2377C", VA = "0xB2377C")]
	public void UnloadLevel(string ID)
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0xB23838", Offset = "0xB23838", VA = "0xB23838")]
	public LevelManager()
	{
	}
}
[Token(Token = "0x2000056")]
public class LevelConfiguration
{
	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string ID;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LoadSceneMode mode;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool load;

	[Token(Token = "0x600012E")]
	[Address(RVA = "0xB22D54", Offset = "0xB22D54", VA = "0xB22D54")]
	public LevelConfiguration(string ID, bool load, LoadSceneMode mode = LoadSceneMode.Single)
	{
	}
}
[Token(Token = "0x2000057")]
public class SceneButton : MonoBehaviour
{
	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int stepBegin;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int stepEnd;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SceneSelector selector;

	[Token(Token = "0x600012F")]
	[Address(RVA = "0xA186A8", Offset = "0xA186A8", VA = "0xA186A8")]
	public void OnClick()
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xA187B0", Offset = "0xA187B0", VA = "0xA187B0")]
	public SceneButton()
	{
	}
}
[Serializable]
[Token(Token = "0x2000058")]
public class SceneInterval
{
	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string scene;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int stepBegin;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int stepEnd;

	[Token(Token = "0x6000131")]
	[Address(RVA = "0xA18C60", Offset = "0xA18C60", VA = "0xA18C60")]
	public SceneInterval()
	{
	}
}
[Token(Token = "0x2000059")]
public class SceneSelector : MonoBehaviour
{
	[Token(Token = "0x200022F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B3BC", Offset = "0x87B3BC")]
	private sealed class <ChapterManagerInit>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneSelector <>4__this;

		[Token(Token = "0x170000DA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B9B")]
			[Address(RVA = "0xA196E0", Offset = "0xA196E0", VA = "0xA196E0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B9D")]
			[Address(RVA = "0xA19750", Offset = "0xA19750", VA = "0xA19750", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0xA1946C", Offset = "0xA1946C", VA = "0xA1946C")]
		[DebuggerHidden]
		public <ChapterManagerInit>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0xA194A4", Offset = "0xA194A4", VA = "0xA194A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0xA194A8", Offset = "0xA194A8", VA = "0xA194A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0xA196E8", Offset = "0xA196E8", VA = "0xA196E8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static SceneSelector instance;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<SceneInterval> scenes;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject buttonPrefab;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform buttonsParent;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshProUGUI textDebugLangage;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool alreadyDone;

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Language selectedLanguage;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _stepBegin;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int _stepEnd;

	[Token(Token = "0x6000132")]
	[Address(RVA = "0xA18C68", Offset = "0xA18C68", VA = "0xA18C68")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0xA18D84", Offset = "0xA18D84", VA = "0xA18D84")]
	private void Start()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0xA18DA8", Offset = "0xA18DA8", VA = "0xA18DA8")]
	private void CreateButtons()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0xA190B0", Offset = "0xA190B0", VA = "0xA190B0")]
	private void DebugLanguage()
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0xA19150", Offset = "0xA19150", VA = "0xA19150")]
	private void Update()
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0xA192C0", Offset = "0xA192C0", VA = "0xA192C0")]
	public void SetLanguageEnglish()
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xA192C8", Offset = "0xA192C8", VA = "0xA192C8")]
	public void SetLanguageFrench()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0xA192D4", Offset = "0xA192D4", VA = "0xA192D4")]
	public void SetLanguageGerman()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0xA192E0", Offset = "0xA192E0", VA = "0xA192E0")]
	public void SetLanguageKorean()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0xA192EC", Offset = "0xA192EC", VA = "0xA192EC")]
	public void SetLanguageChinese()
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0xA192F8", Offset = "0xA192F8", VA = "0xA192F8")]
	public void LaunchProjectInEnglish()
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xA19328", Offset = "0xA19328", VA = "0xA19328")]
	public void LaunchProjectInFrench()
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xA1935C", Offset = "0xA1935C", VA = "0xA1935C")]
	public void LaunchProjectInGerman()
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xA19390", Offset = "0xA19390", VA = "0xA19390")]
	public void LaunchProjectInKorean()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xA193C4", Offset = "0xA193C4", VA = "0xA193C4")]
	public void LaunchProjectInChinese()
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xA186E8", Offset = "0xA186E8", VA = "0xA186E8")]
	public void LaunchScene(int stepBegin = 0, int stepEnd = 0)
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xA193F8", Offset = "0xA193F8", VA = "0xA193F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x882258", Offset = "0x882258")]
	private IEnumerator ChapterManagerInit()
	{
		return null;
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xA19498", Offset = "0xA19498", VA = "0xA19498")]
	public SceneSelector()
	{
	}
}
[Token(Token = "0x200005A")]
public class IntermittenceEmissive : MonoBehaviour
{
	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timeSwitch;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color colorA;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color colorB;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool isColorA;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float timer;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material mat;

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xB1D068", Offset = "0xB1D068", VA = "0xB1D068")]
	private void Start()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xB1D188", Offset = "0xB1D188", VA = "0xB1D188")]
	private void Update()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xB1D0E4", Offset = "0xB1D0E4", VA = "0xB1D0E4")]
	private void SetNewColor()
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xB1D1F0", Offset = "0xB1D1F0", VA = "0xB1D1F0")]
	public IntermittenceEmissive()
	{
	}
}
[Token(Token = "0x200005B")]
public class DisactiveInFrontOfMask : MonoBehaviour
{
	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform mask;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform trCam;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SkinnedMeshRenderer smr;

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xA3AB84", Offset = "0xA3AB84", VA = "0xA3AB84")]
	private void Awake()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xA3AB88", Offset = "0xA3AB88", VA = "0xA3AB88")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0xA3AB8C", Offset = "0xA3AB8C", VA = "0xA3AB8C")]
	public DisactiveInFrontOfMask()
	{
	}
}
[Token(Token = "0x200005C")]
public class EmissionMaterialManager : MonoBehaviour
{
	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> targetsObjects;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Color> colors;

	[Token(Token = "0x600014C")]
	[Address(RVA = "0xA3AE38", Offset = "0xA3AE38", VA = "0xA3AE38")]
	private void Awake()
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xA3AFCC", Offset = "0xA3AFCC", VA = "0xA3AFCC")]
	public void ChangeEmissionIntensity(float value)
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xA3B1A4", Offset = "0xA3B1A4", VA = "0xA3B1A4")]
	public EmissionMaterialManager()
	{
	}
}
[Token(Token = "0x200005D")]
public class RimMaterialManager : MonoBehaviour
{
	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Material> targetsMaterial;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> targetObj;

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xA15350", Offset = "0xA15350", VA = "0xA15350")]
	public void ChangeRimDirectionX(float value)
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0xA15628", Offset = "0xA15628", VA = "0xA15628")]
	public void ChangeRimDirectionY(float value)
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0xA15688", Offset = "0xA15688", VA = "0xA15688")]
	public void ChangeRimIntensity(float value)
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xA156E8", Offset = "0xA156E8", VA = "0xA156E8")]
	public void ChangeRimColor(string colorHex)
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xA1579C", Offset = "0xA1579C", VA = "0xA1579C")]
	private void ChangeRimColor(Color value)
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xA15898", Offset = "0xA15898", VA = "0xA15898")]
	private void ChangeProperty(string propertyName, Color value)
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xA153B0", Offset = "0xA153B0", VA = "0xA153B0")]
	private void ChangeProperty(string propertyName, float value)
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xA159F8", Offset = "0xA159F8", VA = "0xA159F8")]
	public RimMaterialManager()
	{
	}
}
[Token(Token = "0x200005E")]
public class StencilMaterialManager : MonoBehaviour
{
	[Token(Token = "0x6000157")]
	[Address(RVA = "0xA78984", Offset = "0xA78984", VA = "0xA78984")]
	public StencilMaterialManager()
	{
	}
}
[Token(Token = "0x200005F")]
public class SetRenderQueue : MonoBehaviour
{
	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int idQueue;

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xA1A3A0", Offset = "0xA1A3A0", VA = "0xA1A3A0")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x8822BC", Offset = "0x8822BC")]
	private void Do()
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xA1A428", Offset = "0xA1A428", VA = "0xA1A428")]
	private void Start()
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xA1A42C", Offset = "0xA1A42C", VA = "0xA1A42C")]
	public SetRenderQueue()
	{
	}
}
[Token(Token = "0x2000060")]
public class SkyboxManager : MonoBehaviour
{
	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material[] skyboxes;

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xA1B91C", Offset = "0xA1B91C", VA = "0xA1B91C")]
	public void SetMaterialIndex(int i)
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xA1B974", Offset = "0xA1B974", VA = "0xA1B974")]
	public SkyboxManager()
	{
	}
}
[Token(Token = "0x2000061")]
public class DisabledAtStart : MonoBehaviour
{
	[Token(Token = "0x600015D")]
	[Address(RVA = "0xA3AA6C", Offset = "0xA3AA6C", VA = "0xA3AA6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xA3AAA4", Offset = "0xA3AAA4", VA = "0xA3AAA4")]
	public DisabledAtStart()
	{
	}
}
[Token(Token = "0x2000062")]
public class DisabledAtStartIfNotActiveScene : MonoBehaviour
{
	[Token(Token = "0x600015F")]
	[Address(RVA = "0xA3AAAC", Offset = "0xA3AAAC", VA = "0xA3AAAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xA3AB3C", Offset = "0xA3AB3C", VA = "0xA3AB3C")]
	public DisabledAtStartIfNotActiveScene()
	{
	}
}
[Token(Token = "0x2000063")]
public class DisabledOnBuild : MonoBehaviour
{
	[Token(Token = "0x6000161")]
	[Address(RVA = "0xA3AB44", Offset = "0xA3AB44", VA = "0xA3AB44")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0xA3AB7C", Offset = "0xA3AB7C", VA = "0xA3AB7C")]
	public DisabledOnBuild()
	{
	}
}
[Serializable]
[Token(Token = "0x2000064")]
public class FaunsBehaviour : PlayableBehaviour
{
	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public UnityEvent EventAtBeginning;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent EventAtEnd;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isEventFired;

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xA3F2C4", Offset = "0xA3F2C4", VA = "0xA3F2C4", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0xA3F434", Offset = "0xA3F434", VA = "0xA3F434")]
	public FaunsBehaviour()
	{
	}
}
[Serializable]
[Token(Token = "0x2000065")]
public class FaunsClip : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FaunsBehaviour behaviour;

	[Token(Token = "0x1700000B")]
	public ClipCaps clipCaps
	{
		[Token(Token = "0x6000165")]
		[Address(RVA = "0xA3F43C", Offset = "0xA3F43C", VA = "0xA3F43C", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0xA3F444", Offset = "0xA3F444", VA = "0xA3F444", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0xA3F4E4", Offset = "0xA3F4E4", VA = "0xA3F4E4")]
	public FaunsClip()
	{
	}
}
[Token(Token = "0x2000066")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x8794EC", Offset = "0x8794EC")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x8794EC", Offset = "0x8794EC")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0x8794EC", Offset = "0x8794EC")]
public class FaunsTrack : TrackAsset
{
	[Token(Token = "0x6000168")]
	[Address(RVA = "0xA3F54C", Offset = "0xA3F54C", VA = "0xA3F54C", Slot = "14")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0xA3F8BC", Offset = "0xA3F8BC", VA = "0xA3F8BC")]
	public FaunsTrack()
	{
	}
}
[Serializable]
[Token(Token = "0x2000067")]
public class ReleaseHelperConfig
{
	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ReleaseHelperMode mode;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool enabled;

	[Token(Token = "0x600016A")]
	[Address(RVA = "0xA14F50", Offset = "0xA14F50", VA = "0xA14F50")]
	public ReleaseHelperConfig()
	{
	}
}
[Token(Token = "0x2000068")]
public enum ReleaseHelperMode
{
	[Token(Token = "0x400013D")]
	Debug,
	[Token(Token = "0x400013E")]
	Release
}
[Token(Token = "0x2000069")]
public class ReleaseHelperObject : MonoBehaviour
{
	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<ReleaseHelperConfig> configs;

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xA14F58", Offset = "0xA14F58", VA = "0xA14F58")]
	public ReleaseHelperObject()
	{
	}
}
[Token(Token = "0x200006A")]
public class CrossSceneFerraraActivator : MonoBehaviour
{
	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ferraraTag;

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xA2FDA0", Offset = "0xA2FDA0", VA = "0xA2FDA0")]
	public void Enable()
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0xA2FE64", Offset = "0xA2FE64", VA = "0xA2FE64")]
	public void Disable()
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0xA2FF28", Offset = "0xA2FF28", VA = "0xA2FF28")]
	public CrossSceneFerraraActivator()
	{
	}
}
[Token(Token = "0x200006B")]
public class EventOnActive : EventTrigger
{
	[Token(Token = "0x600016F")]
	[Address(RVA = "0xA3B1AC", Offset = "0xA3B1AC", VA = "0xA3B1AC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0xA3B2D0", Offset = "0xA3B2D0", VA = "0xA3B2D0", Slot = "34")]
	public override void OnBeginDrag(PointerEventData data)
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xA3B2D4", Offset = "0xA3B2D4", VA = "0xA3B2D4", Slot = "37")]
	public override void OnCancel(BaseEventData data)
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xA3B2D8", Offset = "0xA3B2D8", VA = "0xA3B2D8", Slot = "29")]
	public override void OnDeselect(BaseEventData data)
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xA3B2DC", Offset = "0xA3B2DC", VA = "0xA3B2DC", Slot = "23")]
	public override void OnDrag(PointerEventData data)
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0xA3B2E0", Offset = "0xA3B2E0", VA = "0xA3B2E0", Slot = "24")]
	public override void OnDrop(PointerEventData data)
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xA3B2E4", Offset = "0xA3B2E4", VA = "0xA3B2E4", Slot = "35")]
	public override void OnEndDrag(PointerEventData data)
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xA3B2E8", Offset = "0xA3B2E8", VA = "0xA3B2E8", Slot = "33")]
	public override void OnInitializePotentialDrag(PointerEventData data)
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xA3B2EC", Offset = "0xA3B2EC", VA = "0xA3B2EC", Slot = "31")]
	public override void OnMove(AxisEventData data)
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xA3B2F0", Offset = "0xA3B2F0", VA = "0xA3B2F0", Slot = "27")]
	public override void OnPointerClick(PointerEventData data)
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0xA3B2F4", Offset = "0xA3B2F4", VA = "0xA3B2F4", Slot = "25")]
	public override void OnPointerDown(PointerEventData data)
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0xA3B2F8", Offset = "0xA3B2F8", VA = "0xA3B2F8", Slot = "21")]
	public override void OnPointerEnter(PointerEventData data)
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0xA3B2FC", Offset = "0xA3B2FC", VA = "0xA3B2FC", Slot = "22")]
	public override void OnPointerExit(PointerEventData data)
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xA3B300", Offset = "0xA3B300", VA = "0xA3B300", Slot = "26")]
	public override void OnPointerUp(PointerEventData data)
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xA3B304", Offset = "0xA3B304", VA = "0xA3B304", Slot = "30")]
	public override void OnScroll(PointerEventData data)
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xA3B308", Offset = "0xA3B308", VA = "0xA3B308", Slot = "28")]
	public override void OnSelect(BaseEventData data)
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xA3B30C", Offset = "0xA3B30C", VA = "0xA3B30C", Slot = "36")]
	public override void OnSubmit(BaseEventData data)
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0xA3B310", Offset = "0xA3B310", VA = "0xA3B310", Slot = "32")]
	public override void OnUpdateSelected(BaseEventData data)
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0xA3B314", Offset = "0xA3B314", VA = "0xA3B314")]
	public EventOnActive()
	{
	}
}
[Token(Token = "0x200006C")]
public class EventOnInactive : MonoBehaviour
{
	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent _onInactive;

	[Token(Token = "0x6000182")]
	[Address(RVA = "0xA3B31C", Offset = "0xA3B31C", VA = "0xA3B31C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0xA3B34C", Offset = "0xA3B34C", VA = "0xA3B34C")]
	public EventOnInactive()
	{
	}
}
[Token(Token = "0x200006D")]
public class RealTimelineController : MonoBehaviour
{
	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayableDirector pd;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent EventOnPlay;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent EventOnPause;

	[Token(Token = "0x6000184")]
	[Address(RVA = "0xA14CE4", Offset = "0xA14CE4", VA = "0xA14CE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0xA14CE8", Offset = "0xA14CE8", VA = "0xA14CE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0xA14F48", Offset = "0xA14F48", VA = "0xA14F48")]
	public RealTimelineController()
	{
	}
}
[Token(Token = "0x200006E")]
public class TimelineBinding : MonoBehaviour
{
	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string sceneName;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string playableAssetName;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string streamName;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int streamObjectID;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEngine.Object value;

	[Token(Token = "0x6000187")]
	[Address(RVA = "0xDEAC94", Offset = "0xDEAC94", VA = "0xDEAC94")]
	public TimelineBinding()
	{
	}
}
[Token(Token = "0x200006F")]
[ExecuteInEditMode]
public class TimelineController : MonoBehaviour
{
	[Token(Token = "0x2000230")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B3CC", Offset = "0x87B3CC")]
	private sealed class <>c__DisplayClass4_0
	{
		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayableAsset pa;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> activeStreamNames;

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0xDEBE20", Offset = "0xDEBE20", VA = "0xDEBE20")]
		public <>c__DisplayClass4_0()
		{
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0xDEC64C", Offset = "0xDEC64C", VA = "0xDEC64C")]
		internal bool <SaveBindings>b__0(TimelineBinding item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000231")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B3DC", Offset = "0x87B3DC")]
	private sealed class <>c__DisplayClass5_0
	{
		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayableAsset pa;

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0xDEC3B4", Offset = "0xDEC3B4", VA = "0xDEC3B4")]
		public <>c__DisplayClass5_0()
		{
		}
	}

	[Token(Token = "0x2000232")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B3EC", Offset = "0x87B3EC")]
	private sealed class <>c__DisplayClass5_1
	{
		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayableBinding pb;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public <>c__DisplayClass5_0 CS$<>8__locals1;

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0xDEC3BC", Offset = "0xDEC3BC", VA = "0xDEC3BC")]
		public <>c__DisplayClass5_1()
		{
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0xDEC714", Offset = "0xDEC714", VA = "0xDEC714")]
		internal bool <ResolveBindings>b__0(TimelineBinding item)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayableDirector pd;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> sceneDependencies;

	[Token(Token = "0x6000188")]
	[Address(RVA = "0xDEAC9C", Offset = "0xDEAC9C", VA = "0xDEAC9C")]
	private string GetUniqueID()
	{
		return null;
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0xDEAD4C", Offset = "0xDEAD4C", VA = "0xDEAD4C")]
	public void UpdateTrackNames()
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0xDEB524", Offset = "0xDEB524", VA = "0xDEB524")]
	public void SaveBindings()
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0xDEBF9C", Offset = "0xDEBF9C", VA = "0xDEBF9C")]
	public void ResolveBindings()
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0xDEC3C4", Offset = "0xDEC3C4", VA = "0xDEC3C4")]
	public void RemoveAllBindings()
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0xDEBE28", Offset = "0xDEBE28", VA = "0xDEBE28")]
	private List<TimelineBinding> GetAllSceneBindings()
	{
		return null;
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0xDEC4A4", Offset = "0xDEC4A4", VA = "0xDEC4A4")]
	private List<TimelineBinding> GetSceneBindings(Scene scene)
	{
		return null;
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0xDEC5DC", Offset = "0xDEC5DC", VA = "0xDEC5DC")]
	public TimelineController()
	{
	}
}
[Token(Token = "0x2000070")]
public class CopyMaterials : MonoBehaviour
{
	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TextAreaAttribute", RVA = "0x87BB4C", Offset = "0x87BB4C")]
	public string matPath;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform ObjSrc;

	[Token(Token = "0x6000190")]
	[Address(RVA = "0xA2FB88", Offset = "0xA2FB88", VA = "0xA2FB88")]
	public CopyMaterials()
	{
	}
}
[Token(Token = "0x2000071")]
public class EventOnTrigger : MonoBehaviour
{
	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent TriggerEnter;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent TriggerExit;

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xA3B354", Offset = "0xA3B354", VA = "0xA3B354")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xA3B384", Offset = "0xA3B384", VA = "0xA3B384")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0xA3B3B4", Offset = "0xA3B3B4", VA = "0xA3B3B4")]
	public EventOnTrigger()
	{
	}
}
[Token(Token = "0x2000072")]
public class FPSLogger : MonoBehaviour
{
	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string currentStepName;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int FPSMin;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int FPSMax;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int FPSAverage;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int recordedFrames;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float recordedTime;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool isRecording;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int completedSteps;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private StringBuilder builder;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<int> FPSList;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<int> differenceList;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<float> timeList;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private StringBuilder csvBuilder;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int lineCount;

	[Token(Token = "0x400015E")]
	private const string objectName = "_FPS_LOGGER";

	[Token(Token = "0x400015F")]
	private const string folderName = "/_LOGS/";

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xA3B848", Offset = "0xA3B848", VA = "0xA3B848")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x8822F4", Offset = "0x8822F4")]
	private static void OnRuntimeMethodLoad()
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xA3B8B8", Offset = "0xA3B8B8", VA = "0xA3B8B8")]
	private static FPSLogger SetupFPSLogger()
	{
		return null;
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xA3BF94", Offset = "0xA3BF94", VA = "0xA3BF94")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xA3C05C", Offset = "0xA3C05C", VA = "0xA3C05C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xA3C124", Offset = "0xA3C124", VA = "0xA3C124")]
	private void Update()
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xA3C378", Offset = "0xA3C378", VA = "0xA3C378")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xA3C5D0", Offset = "0xA3C5D0", VA = "0xA3C5D0")]
	private void StartStepLog(string stepName)
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xA3C678", Offset = "0xA3C678", VA = "0xA3C678")]
	private void StopStepLog()
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xA3C8BC", Offset = "0xA3C8BC", VA = "0xA3C8BC")]
	private void LogStep(string stepName)
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xA3C408", Offset = "0xA3C408", VA = "0xA3C408")]
	private void LogFile()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0xA3BF10", Offset = "0xA3BF10", VA = "0xA3BF10")]
	private static string GetTime()
	{
		return null;
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0xA3CDFC", Offset = "0xA3CDFC", VA = "0xA3CDFC")]
	public FPSLogger()
	{
	}
}
[Token(Token = "0x2000073")]
internal class FPSLoggerEnabler : MonoBehaviour
{
	[Token(Token = "0x60001A0")]
	[Address(RVA = "0xA3CE04", Offset = "0xA3CE04", VA = "0xA3CE04")]
	public FPSLoggerEnabler()
	{
	}
}
[Token(Token = "0x2000074")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8795B0", Offset = "0x8795B0")]
public class HoloVideoPlayer : MonoBehaviour
{
	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isPlaying;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HoloVideoObject hvo;

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0xB1C584", Offset = "0xB1C584", VA = "0xB1C584")]
	public void StartVideo()
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0xB1C668", Offset = "0xB1C668", VA = "0xB1C668")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xB1C720", Offset = "0xB1C720", VA = "0xB1C720")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xB1C66C", Offset = "0xB1C66C", VA = "0xB1C66C")]
	public void StopVideo()
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xB1C724", Offset = "0xB1C724", VA = "0xB1C724")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xB1C77C", Offset = "0xB1C77C", VA = "0xB1C77C")]
	public void Play()
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xB1C850", Offset = "0xB1C850", VA = "0xB1C850")]
	public void Pause()
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xB1C924", Offset = "0xB1C924", VA = "0xB1C924")]
	public HoloVideoPlayer()
	{
	}
}
[Token(Token = "0x2000075")]
public class TiltbrushActivate : MonoBehaviour
{
	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xDEA834", Offset = "0xDEA834", VA = "0xDEA834")]
	private void Start()
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xDEA880", Offset = "0xDEA880", VA = "0xDEA880")]
	public TiltbrushActivate()
	{
	}
}
[Token(Token = "0x2000076")]
public class DebugMenu : MonoBehaviour
{
	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject menu;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool wereButtonsPressed;

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xA304DC", Offset = "0xA304DC", VA = "0xA304DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xA305F4", Offset = "0xA305F4", VA = "0xA305F4")]
	public DebugMenu()
	{
	}
}
[Token(Token = "0x2000077")]
[ExecuteInEditMode]
public class ProgressBar : MonoBehaviour
{
	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform progressUI;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI progressText;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VideoDownloader downloader;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isQuantifiableProgress;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string loadingText;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int currentStep;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x87BB5C", Offset = "0x87BB5C")]
	public float progress;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RectTransform rectTransform;

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xA14510", Offset = "0xA14510", VA = "0xA14510")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xA14568", Offset = "0xA14568", VA = "0xA14568")]
	public void SetProgress(float progress)
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xA14BC0", Offset = "0xA14BC0", VA = "0xA14BC0")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xA14BC8", Offset = "0xA14BC8", VA = "0xA14BC8")]
	public ProgressBar()
	{
	}
}
[Token(Token = "0x2000078")]
[ExecuteInEditMode]
public class TextButton : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform neutral;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform highlight;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool activeNeutralOnHighlit;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[SerializeField]
	private bool _interactable;

	[Token(Token = "0x1700000C")]
	public bool interactable
	{
		[Token(Token = "0x60001B1")]
		[Address(RVA = "0xA7EC04", Offset = "0xA7EC04", VA = "0xA7EC04")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001B2")]
		[Address(RVA = "0xA7EC0C", Offset = "0xA7EC0C", VA = "0xA7EC0C")]
		set
		{
		}
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xA7EDFC", Offset = "0xA7EDFC", VA = "0xA7EDFC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xA7EC18", Offset = "0xA7EC18", VA = "0xA7EC18")]
	private void UpdateTextColor()
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xA7EE00", Offset = "0xA7EE00", VA = "0xA7EE00", Slot = "4")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xA7EF18", Offset = "0xA7EF18", VA = "0xA7EF18", Slot = "5")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xA7EFB4", Offset = "0xA7EFB4", VA = "0xA7EFB4")]
	public TextButton()
	{
	}
}
[Token(Token = "0x2000079")]
public class UIVRButton : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000233")]
	public class MyEvent : UnityEvent
	{
		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0xDEDE48", Offset = "0xDEDE48", VA = "0xDEDE48")]
		public MyEvent()
		{
		}
	}

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image image;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float timeActivate;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MyEvent OnActivate;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isUpdate;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float updateCounter;

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xDEDC68", Offset = "0xDEDC68", VA = "0xDEDC68")]
	public void OnCursorUpdate()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xDEDC74", Offset = "0xDEDC74", VA = "0xDEDC74")]
	public void OnCursorExit()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0xDEDC7C", Offset = "0xDEDC7C", VA = "0xDEDC7C")]
	private void Activate()
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0xDEDD08", Offset = "0xDEDD08", VA = "0xDEDD08")]
	private void Start()
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0xDEDD3C", Offset = "0xDEDD3C", VA = "0xDEDD3C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0xDEDE38", Offset = "0xDEDE38", VA = "0xDEDE38")]
	public UIVRButton()
	{
	}
}
[Token(Token = "0x200007A")]
public class UIVRCam : MonoBehaviour
{
	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int layerMask;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float tailleRayon;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIVRButton lastButton;

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xDEDE50", Offset = "0xDEDE50", VA = "0xDEDE50")]
	private void Start()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xDEDE54", Offset = "0xDEDE54", VA = "0xDEDE54")]
	private void Activate()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xDEDF60", Offset = "0xDEDF60", VA = "0xDEDF60")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xDEE31C", Offset = "0xDEE31C", VA = "0xDEE31C")]
	public UIVRCam()
	{
	}
}
[Token(Token = "0x200007B")]
public class AInitializable : MonoBehaviour
{
	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xA2627C", Offset = "0xA2627C", VA = "0xA2627C", Slot = "4")]
	public virtual void Init()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xA26280", Offset = "0xA26280", VA = "0xA26280")]
	public AInitializable()
	{
	}
}
[Token(Token = "0x200007C")]
public class DecreaseLight : MonoBehaviour
{
	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<Light> l_light;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float f_Light_Value;

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xA34A90", Offset = "0xA34A90", VA = "0xA34A90")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xA34A94", Offset = "0xA34A94", VA = "0xA34A94")]
	private void GetLight()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xA34E14", Offset = "0xA34E14", VA = "0xA34E14")]
	public void DecreaseLighting()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xA34F4C", Offset = "0xA34F4C", VA = "0xA34F4C")]
	public DecreaseLight()
	{
	}
}
[Token(Token = "0x200007D")]
public class InputManager : MonoBehaviour
{
	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private OVRInput.Button button;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string nameSceneToLaunch;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UnityEvent OnButtonPressed;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool eventPlayed;

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xB1CE04", Offset = "0xB1CE04", VA = "0xB1CE04")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xB1CF58", Offset = "0xB1CF58", VA = "0xB1CF58")]
	private void PlayEventOnce(UnityEvent eventToPlay)
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xB1CE94", Offset = "0xB1CE94", VA = "0xB1CE94")]
	private void LaunchSceneOnce(string nameScene)
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xB1CFA4", Offset = "0xB1CFA4", VA = "0xB1CFA4")]
	public InputManager()
	{
	}
}
[Token(Token = "0x200007E")]
public class KeyManager : MonoBehaviour
{
	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ChapterManager chapterManager;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] objControllers;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool debugMode;

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xB1D1F8", Offset = "0xB1D1F8", VA = "0xB1D1F8")]
	private void Update()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xB1D500", Offset = "0xB1D500", VA = "0xB1D500")]
	public KeyManager()
	{
	}
}
[Token(Token = "0x200007F")]
public class LoadMain : MonoBehaviour
{
	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text text;

	[Token(Token = "0x4000182")]
	public const int minGPUMemory = 2500;

	[Token(Token = "0x4000183")]
	public const int minProcCount = 4;

	[Token(Token = "0x4000184")]
	public const int minProcFreq = 2500;

	[Token(Token = "0x4000185")]
	public const int minRAM = 7500;

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xB24A48", Offset = "0xB24A48", VA = "0xB24A48")]
	private void Start()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xB24E8C", Offset = "0xB24E8C", VA = "0xB24E8C")]
	private void Load()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xB24B08", Offset = "0xB24B08", VA = "0xB24B08")]
	private void GetSystemInfo()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xB24EDC", Offset = "0xB24EDC", VA = "0xB24EDC")]
	public LoadMain()
	{
	}
}
[Token(Token = "0x2000080")]
public class QualitySettingsManager : MonoBehaviour
{
	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float shadowDistance;

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xA14C28", Offset = "0xA14C28", VA = "0xA14C28")]
	private void Start()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xA14C2C", Offset = "0xA14C2C", VA = "0xA14C2C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0x882304", Offset = "0x882304")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xA14C38", Offset = "0xA14C38", VA = "0xA14C38")]
	public QualitySettingsManager()
	{
	}
}
[Token(Token = "0x2000081")]
public class Restart : MonoBehaviour
{
	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ObjToDisactive;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ObjToActive;

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xA14FC0", Offset = "0xA14FC0", VA = "0xA14FC0")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xA15204", Offset = "0xA15204", VA = "0xA15204")]
	public void RestartProject()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xA152F8", Offset = "0xA152F8", VA = "0xA152F8")]
	public void ReallyRestart()
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xA15348", Offset = "0xA15348", VA = "0xA15348")]
	public Restart()
	{
	}
}
[Token(Token = "0x2000082")]
public class SceneAttribute : PropertyAttribute
{
	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xA186A0", Offset = "0xA186A0", VA = "0xA186A0")]
	public SceneAttribute()
	{
	}
}
[Token(Token = "0x2000083")]
public class Singleton<T> : MonoBehaviour where T : MonoBehaviour
{
	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static T _instance;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static object _lock;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool applicationIsQuitting;

	[Token(Token = "0x1700000D")]
	public static T Instance
	{
		[Token(Token = "0x60001DA")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001DB")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x60001DC")]
	public Singleton()
	{
	}
}
[Token(Token = "0x2000084")]
public class HandsBegone : MonoBehaviour
{
	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xA44FC8", Offset = "0xA44FC8", VA = "0xA44FC8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xA45088", Offset = "0xA45088", VA = "0xA45088")]
	public HandsBegone()
	{
	}
}
[Token(Token = "0x2000085")]
public class VRRenderScale : MonoBehaviour
{
	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x87BBB8", Offset = "0x87BBB8")]
	public float renderScale;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float increaseAmount;

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xE00838", Offset = "0xE00838", VA = "0xE00838")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xE00908", Offset = "0xE00908", VA = "0xE00908")]
	public VRRenderScale()
	{
	}
}
[Token(Token = "0x2000086")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x879634", Offset = "0x879634")]
[ImageEffectAllowedInSceneView]
[ExecuteInEditMode]
public class Pixelize : MonoBehaviour
{
	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Shader _screenAndMaskShader;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material _screenAndMaskMaterial;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RenderTexture _temporaryRenderTexture;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Shader _combineLayersShader;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material _combineLayersMaterial;

	[Token(Token = "0x1700000E")]
	private Shader ScreenAndMaskShader
	{
		[Token(Token = "0x60001E2")]
		[Address(RVA = "0xA13740", Offset = "0xA13740", VA = "0xA13740")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000F")]
	private Material ScreenAndMaskMaterial
	{
		[Token(Token = "0x60001E3")]
		[Address(RVA = "0xA137D8", Offset = "0xA137D8", VA = "0xA137D8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000010")]
	private RenderTexture TemporaryRenderTarget
	{
		[Token(Token = "0x60001E4")]
		[Address(RVA = "0xA13898", Offset = "0xA13898", VA = "0xA13898")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000011")]
	private Shader CombineLayersShader
	{
		[Token(Token = "0x60001E5")]
		[Address(RVA = "0xA13A48", Offset = "0xA13A48", VA = "0xA13A48")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000012")]
	private Material CombineLayersMaterial
	{
		[Token(Token = "0x60001E6")]
		[Address(RVA = "0xA13AE0", Offset = "0xA13AE0", VA = "0xA13AE0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xA13BA0", Offset = "0xA13BA0", VA = "0xA13BA0")]
	private void OnRenderImage(RenderTexture src, RenderTexture dest)
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0xA1391C", Offset = "0xA1391C", VA = "0xA1391C")]
	private void CreateTemporaryRenderTarget()
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0xA13C74", Offset = "0xA13C74", VA = "0xA13C74")]
	private void CheckTemporaryRenderTarget()
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0xA13D0C", Offset = "0xA13D0C", VA = "0xA13D0C")]
	private void ReleaseTemporaryRenderTarget()
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0xA13D48", Offset = "0xA13D48", VA = "0xA13D48")]
	public Pixelize()
	{
	}
}
[Token(Token = "0x2000087")]
[ExecuteInEditMode]
public class VolumetricSphere : MonoBehaviour
{
	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87BBD0", Offset = "0x87BBD0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87BBD0", Offset = "0x87BBD0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x87BBD0", Offset = "0x87BBD0")]
	public float radius;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87BC4C", Offset = "0x87BC4C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x87BC4C", Offset = "0x87BC4C")]
	public float density;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87BCA0", Offset = "0x87BCA0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x87BCA0", Offset = "0x87BCA0")]
	public float exponent;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87BCF8", Offset = "0x87BCF8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x87BCF8", Offset = "0x87BCF8")]
	public int maxPixelizationLevel;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87BD4C", Offset = "0x87BD4C")]
	public bool enableLayersInterpolation;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87BD84", Offset = "0x87BD84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87BD84", Offset = "0x87BD84")]
	public bool debugSphere;

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0xE01FC8", Offset = "0xE01FC8", VA = "0xE01FC8")]
	private void Update()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0xE02140", Offset = "0xE02140", VA = "0xE02140")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xE02198", Offset = "0xE02198", VA = "0xE02198")]
	public VolumetricSphere()
	{
	}
}
[Token(Token = "0x2000088")]
public class SimpleGPUInstancingExample : MonoBehaviour
{
	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Prefab;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material InstancedMaterial;

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xA1B1B8", Offset = "0xA1B1B8", VA = "0xA1B1B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xA1B448", Offset = "0xA1B448", VA = "0xA1B448")]
	public SimpleGPUInstancingExample()
	{
	}
}
[Token(Token = "0x2000089")]
public class SimpleMoveExample : MonoBehaviour
{
	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_previous;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 m_target;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 m_originalPosition;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 BoundingVolume;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float Speed;

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xA1B450", Offset = "0xA1B450", VA = "0xA1B450")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xA1B4EC", Offset = "0xA1B4EC", VA = "0xA1B4EC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xA1B7E8", Offset = "0xA1B7E8", VA = "0xA1B7E8")]
	public SimpleMoveExample()
	{
	}
}
[Token(Token = "0x200008A")]
public class Smear : MonoBehaviour
{
	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Queue<Vector3> m_recentPositions;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int FramesBufferSize;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer Renderer;

	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material m_instancedMaterial;

	[Token(Token = "0x17000013")]
	private Material InstancedMaterial
	{
		[Token(Token = "0x60001F4")]
		[Address(RVA = "0xA1B97C", Offset = "0xA1B97C", VA = "0xA1B97C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60001F5")]
		[Address(RVA = "0xA1B984", Offset = "0xA1B984", VA = "0xA1B984")]
		set
		{
		}
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xA1B98C", Offset = "0xA1B98C", VA = "0xA1B98C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xA1B9C8", Offset = "0xA1B9C8", VA = "0xA1B9C8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0xA1BC04", Offset = "0xA1BC04", VA = "0xA1BC04")]
	public Smear()
	{
	}
}
[Token(Token = "0x200008B")]
[ExecuteInEditMode]
public class PostProcessExample : MonoBehaviour
{
	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material PostProcessMat;

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xA143AC", Offset = "0xA143AC", VA = "0xA143AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xA14484", Offset = "0xA14484", VA = "0xA14484")]
	private void OnRenderImage(RenderTexture src, RenderTexture dest)
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xA14508", Offset = "0xA14508", VA = "0xA14508")]
	public PostProcessExample()
	{
	}
}
[Token(Token = "0x200008C")]
[ExecuteInEditMode]
public class SpriteMaskController : MonoBehaviour
{
	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private SpriteRenderer m_spriteRenderer;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector4 m_uvs;

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xA7858C", Offset = "0xA7858C", VA = "0xA7858C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xA78670", Offset = "0xA78670", VA = "0xA78670")]
	public SpriteMaskController()
	{
	}
}
[Token(Token = "0x200008D")]
public class RandomMaterial : MonoBehaviour
{
	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer targetRenderer;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material[] materials;

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xA14C48", Offset = "0xA14C48", VA = "0xA14C48")]
	public void Start()
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xA14C4C", Offset = "0xA14C4C", VA = "0xA14C4C")]
	public void ChangeMaterial()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0xA14CDC", Offset = "0xA14CDC", VA = "0xA14CDC")]
	public RandomMaterial()
	{
	}
}
[Token(Token = "0x200008E")]
public class UnluckDistanceDisabler : MonoBehaviour
{
	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int _distanceDisable;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform _distanceFrom;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool _distanceFromMainCam;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _disableCheckInterval;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _enableCheckInterval;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool _disableOnStart;

	[Token(Token = "0x6000201")]
	[Address(RVA = "0xDEFA34", Offset = "0xDEFA34", VA = "0xDEFA34")]
	public void Start()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xDEFB24", Offset = "0xDEFB24", VA = "0xDEFB24")]
	public void DisableOnStart()
	{
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0xDEFB68", Offset = "0xDEFB68", VA = "0xDEFB68")]
	public void CheckDisable()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0xDEFCE0", Offset = "0xDEFCE0", VA = "0xDEFCE0")]
	public void CheckEnable()
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xDEFE58", Offset = "0xDEFE58", VA = "0xDEFE58")]
	public UnluckDistanceDisabler()
	{
	}
}
[Token(Token = "0x200008F")]
public class LookAtCamera : MonoBehaviour
{
	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera lookAtCamera;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool lookOnlyOnAwake;

	[Token(Token = "0x6000206")]
	[Address(RVA = "0xB29DA4", Offset = "0xB29DA4", VA = "0xB29DA4")]
	public void Start()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0xB29EA0", Offset = "0xB29EA0", VA = "0xB29EA0")]
	public void Update()
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xB29E40", Offset = "0xB29E40", VA = "0xB29E40")]
	public void LookCam()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0xB29EB0", Offset = "0xB29EB0", VA = "0xB29EB0")]
	public LookAtCamera()
	{
	}
}
[Token(Token = "0x2000090")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8796E8", Offset = "0x8796E8")]
public class SmoothCameraOrbit : MonoBehaviour
{
	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 targetOffset;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float distance;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxDistance;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float minDistance;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float xSpeed;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float ySpeed;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int yMinLimit;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int yMaxLimit;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int zoomRate;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float panSpeed;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float zoomDampening;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float autoRotate;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float autoRotateSpeed;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float xDeg;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float yDeg;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float currentDistance;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float desiredDistance;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Quaternion currentRotation;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Quaternion desiredRotation;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Quaternion rotation;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 position;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float idleTimer;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private float idleSmooth;

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xA1BC74", Offset = "0xA1BC74", VA = "0xA1BC74")]
	private void Start()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0xA1C0C8", Offset = "0xA1C0C8", VA = "0xA1C0C8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0xA1BC78", Offset = "0xA1BC78", VA = "0xA1BC78")]
	public void Init()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xA1C0CC", Offset = "0xA1C0CC", VA = "0xA1C0CC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xA1C674", Offset = "0xA1C674", VA = "0xA1C674")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xA1C724", Offset = "0xA1C724", VA = "0xA1C724")]
	public SmoothCameraOrbit()
	{
	}
}
[Token(Token = "0x2000091")]
public class FlockChild : MonoBehaviour
{
	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public FlockController _spawner;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Vector3 _wayPoint;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _speed;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public bool _dived;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public float _stuckCounter;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public float _damping;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	public bool _soar;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	[HideInInspector]
	public bool _landing;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public float _targetSpeed;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public bool _move;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject _model;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform _modelT;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public float _avoidValue;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[HideInInspector]
	public float _avoidDistance;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _soarTimer;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool _instantiated;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int _updateNextSeed;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _updateSeed;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[HideInInspector]
	public bool _avoid;

	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform _thisT;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector3 _landingPosOffset;

	[Token(Token = "0x6000210")]
	[Address(RVA = "0xA3F924", Offset = "0xA3F924", VA = "0xA3F924")]
	public void Start()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xA4031C", Offset = "0xA4031C", VA = "0xA4031C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xA40CC8", Offset = "0xA40CC8", VA = "0xA40CC8")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0xA40D28", Offset = "0xA40D28", VA = "0xA40D28")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xA3FAD4", Offset = "0xA3FAD4", VA = "0xA3FAD4")]
	public void FindRequiredComponents()
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xA3FF40", Offset = "0xA3FF40", VA = "0xA3FF40")]
	public void RandomizeStartAnimationFrame()
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xA40250", Offset = "0xA40250", VA = "0xA40250")]
	public void InitAvoidanceValues()
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xA3FD0C", Offset = "0xA3FD0C", VA = "0xA3FD0C")]
	public void SetRandomScale()
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0xA4039C", Offset = "0xA4039C", VA = "0xA4039C")]
	public void SoarTimeLimit()
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0xA40434", Offset = "0xA40434", VA = "0xA40434")]
	public void CheckForDistanceToWaypoint()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xA40598", Offset = "0xA40598", VA = "0xA40598")]
	public void RotationBasedOnWaypointOrAvoidance()
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xA410FC", Offset = "0xA410FC", VA = "0xA410FC")]
	public bool Avoidance()
	{
		return default(bool);
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xA40A28", Offset = "0xA40A28", VA = "0xA40A28")]
	public void LimitRotationOfModel()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xA3FC28", Offset = "0xA3FC28", VA = "0xA3FC28")]
	public void Wander(float delay)
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xA4186C", Offset = "0xA4186C", VA = "0xA4186C")]
	public void SetRandomMode()
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0xA40E34", Offset = "0xA40E34", VA = "0xA40E34")]
	public void Flap()
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xA3FDA4", Offset = "0xA3FDA4", VA = "0xA3FDA4")]
	public Vector3 findWaypoint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xA41958", Offset = "0xA41958", VA = "0xA41958")]
	public void Soar()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xA41A1C", Offset = "0xA41A1C", VA = "0xA41A1C")]
	public void Dive()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xA41DD8", Offset = "0xA41DD8", VA = "0xA41DD8")]
	public void animationSpeed()
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0xA4215C", Offset = "0xA4215C", VA = "0xA4215C")]
	public FlockChild()
	{
	}
}
[Token(Token = "0x2000092")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x879720", Offset = "0x879720")]
public class FlockChildSound : MonoBehaviour
{
	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] _idleSounds;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float _idleSoundRandomChance;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip[] _flightSounds;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _flightSoundRandomChance;

	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip[] _scareSounds;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float _pitchMin;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float _pitchMax;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float _volumeMin;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float _volumeMax;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private FlockChild _flockChild;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AudioSource _audio;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool _hasLanded;

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xA42184", Offset = "0xA42184", VA = "0xA42184")]
	public void Start()
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xA42260", Offset = "0xA42260", VA = "0xA42260")]
	public void PlayRandomSound()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xA42578", Offset = "0xA42578", VA = "0xA42578")]
	public void ScareSound()
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xA426E0", Offset = "0xA426E0", VA = "0xA426E0")]
	public FlockChildSound()
	{
	}
}
[Token(Token = "0x2000093")]
public class FlockController : MonoBehaviour
{
	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FlockChild _childPrefab;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int _childAmount;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool _slowSpawn;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float _spawnSphere;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _spawnSphereHeight;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _spawnSphereDepth;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float _minSpeed;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float _maxSpeed;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float _minScale;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float _maxScale;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float _soarFrequency;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string _soarAnimation;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string _flapAnimation;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string _idleAnimation;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float _diveValue;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float _diveFrequency;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float _minDamping;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float _maxDamping;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float _waypointDistance;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float _minAnimationSpeed;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float _maxAnimationSpeed;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float _randomPositionTimer;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float _positionSphere;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float _positionSphereHeight;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float _positionSphereDepth;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public bool _childTriggerPos;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	public bool _forceChildWaypoints;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float _forcedRandomDelay;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public bool _flatFly;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
	public bool _flatSoar;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x96")]
	public bool _birdAvoid;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int _birdAvoidHorizontalForce;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool _birdAvoidDown;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
	public bool _birdAvoidUp;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public int _birdAvoidVerticalForce;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public float _birdAvoidDistanceMax;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float _birdAvoidDistanceMin;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float _soarMaxTime;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LayerMask _avoidanceMask;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public List<FlockChild> _roamers;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Vector3 _posBuffer;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public int _updateDivisor;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float _newDelta;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public int _updateCounter;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float _activeChildren;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public bool _groupChildToNewTransform;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform _groupTransform;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public string _groupName;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public bool _groupChildToFlock;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public Vector3 _startPosOffset;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Transform _thisT;

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xA42704", Offset = "0xA42704", VA = "0xA42704")]
	public void Start()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0xA42860", Offset = "0xA42860", VA = "0xA42860")]
	public void AddChild(int amount)
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xA42B08", Offset = "0xA42B08", VA = "0xA42B08")]
	public void AddChildToParent(Transform obj)
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0xA42B70", Offset = "0xA42B70", VA = "0xA42B70")]
	public void RemoveChild(int amount)
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0xA42CE4", Offset = "0xA42CE4", VA = "0xA42CE4")]
	public void Update()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0xA42964", Offset = "0xA42964", VA = "0xA42964")]
	public void InstantiateGroup()
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xA42D54", Offset = "0xA42D54", VA = "0xA42D54")]
	public void UpdateChildAmount()
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0xA42E30", Offset = "0xA42E30", VA = "0xA42E30")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xA40F38", Offset = "0xA40F38", VA = "0xA40F38")]
	public void SetFlockRandomPosition()
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xA43128", Offset = "0xA43128", VA = "0xA43128")]
	public void destroyBirds()
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xA43248", Offset = "0xA43248", VA = "0xA43248")]
	public FlockController()
	{
	}
}
[Token(Token = "0x2000094")]
public class FlockScare : MonoBehaviour
{
	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LandingSpotController[] landingSpotControllers;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float scareInterval;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float distanceToScare;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int checkEveryNthLandingSpot;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int InvokeAmounts;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int lsc;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int ls;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LandingSpotController currentController;

	[Token(Token = "0x6000235")]
	[Address(RVA = "0xA43360", Offset = "0xA43360", VA = "0xA43360")]
	private void CheckProximityToLandingSpots()
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xA43478", Offset = "0xA43478", VA = "0xA43478")]
	private void IterateLandingSpots()
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xA43568", Offset = "0xA43568", VA = "0xA43568")]
	private bool CheckDistanceToLandingSpot(LandingSpotController lc)
	{
		return default(bool);
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xA4373C", Offset = "0xA4373C", VA = "0xA4373C")]
	private void Invoker()
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xA437D4", Offset = "0xA437D4", VA = "0xA437D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xA43854", Offset = "0xA43854", VA = "0xA43854")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xA438A8", Offset = "0xA438A8", VA = "0xA438A8")]
	public FlockScare()
	{
	}
}
[Token(Token = "0x2000095")]
public class FlockWaypointTrigger : MonoBehaviour
{
	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float _timer;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FlockChild _flockChild;

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xA438C4", Offset = "0xA438C4", VA = "0xA438C4")]
	public void Start()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0xA439B0", Offset = "0xA439B0", VA = "0xA439B0")]
	public void Trigger()
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0xA439E0", Offset = "0xA439E0", VA = "0xA439E0")]
	public FlockWaypointTrigger()
	{
	}
}
[Token(Token = "0x2000096")]
public class LandingButtons : MonoBehaviour
{
	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LandingSpotController _landingSpotController;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FlockController _flockController;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float hSliderValue;

	[Token(Token = "0x600023F")]
	[Address(RVA = "0xB1D514", Offset = "0xB1D514", VA = "0xB1D514")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0xB1DB34", Offset = "0xB1DB34", VA = "0xB1DB34")]
	public LandingButtons()
	{
	}
}
[Token(Token = "0x2000097")]
public class LandingSpot : MonoBehaviour
{
	[Token(Token = "0x2000234")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B3FC", Offset = "0x87B3FC")]
	private sealed class <GetFlockChild>d__12 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float minDelay;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float maxDelay;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LandingSpot <>4__this;

		[Token(Token = "0x170000DC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BA7")]
			[Address(RVA = "0xB201A8", Offset = "0xB201A8", VA = "0xB201A8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BA9")]
			[Address(RVA = "0xB20218", Offset = "0xB20218", VA = "0xB20218", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0xB1EFB4", Offset = "0xB1EFB4", VA = "0xB1EFB4")]
		[DebuggerHidden]
		public <GetFlockChild>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0xB1F918", Offset = "0xB1F918", VA = "0xB1F918", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0xB1F91C", Offset = "0xB1F91C", VA = "0xB1F91C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0xB201B0", Offset = "0xB201B0", VA = "0xB201B0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public FlockChild landingChild;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public bool landing;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int lerpCounter;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public LandingSpotController _controller;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _idle;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform _thisT;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool _gotcha;

	[Token(Token = "0x6000241")]
	[Address(RVA = "0xB1DB44", Offset = "0xB1DB44", VA = "0xB1DB44")]
	public void Start()
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0xB1DD6C", Offset = "0xB1DD6C", VA = "0xB1DD6C")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0xB1E29C", Offset = "0xB1E29C", VA = "0xB1E29C")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0xB1EEE4", Offset = "0xB1EEE4", VA = "0xB1EEE4")]
	public void StraightenBird()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xB1ECCC", Offset = "0xB1ECCC", VA = "0xB1ECCC")]
	public void RotateBird()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0xB1DCBC", Offset = "0xB1DCBC", VA = "0xB1DCBC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88233C", Offset = "0x88233C")]
	public IEnumerator GetFlockChild(float minDelay, float maxDelay)
	{
		return null;
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0xB1EFE0", Offset = "0xB1EFE0", VA = "0xB1EFE0")]
	public void InstantLand()
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0xB1F4B8", Offset = "0xB1F4B8", VA = "0xB1F4B8")]
	public void ReleaseFlockChild()
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0xB1F910", Offset = "0xB1F910", VA = "0xB1F910")]
	public LandingSpot()
	{
	}
}
[Token(Token = "0x2000098")]
public class LandingSpotController : MonoBehaviour
{
	[Token(Token = "0x2000235")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B40C", Offset = "0x87B40C")]
	private sealed class <InstantLandOnStart>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LandingSpotController <>4__this;

		[Token(Token = "0x170000DE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BAD")]
			[Address(RVA = "0xB20B6C", Offset = "0xB20B6C", VA = "0xB20B6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BAF")]
			[Address(RVA = "0xB20BDC", Offset = "0xB20BDC", VA = "0xB20BDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0xB20660", Offset = "0xB20660", VA = "0xB20660")]
		[DebuggerHidden]
		public <InstantLandOnStart>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0xB209B0", Offset = "0xB209B0", VA = "0xB209B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0xB209B4", Offset = "0xB209B4", VA = "0xB209B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0xB20B74", Offset = "0xB20B74", VA = "0xB20B74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000236")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B41C", Offset = "0x87B41C")]
	private sealed class <InstantLand>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float delay;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LandingSpotController <>4__this;

		[Token(Token = "0x170000E0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BB3")]
			[Address(RVA = "0xB20938", Offset = "0xB20938", VA = "0xB20938", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BB5")]
			[Address(RVA = "0xB209A8", Offset = "0xB209A8", VA = "0xB209A8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0xB2068C", Offset = "0xB2068C", VA = "0xB2068C")]
		[DebuggerHidden]
		public <InstantLand>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0xB2077C", Offset = "0xB2077C", VA = "0xB2077C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0xB20780", Offset = "0xB20780", VA = "0xB20780", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0xB20940", Offset = "0xB20940", VA = "0xB20940", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool _randomRotate;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector2 _autoCatchDelay;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector2 _autoDismountDelay;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float _maxBirdDistance;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float _minBirdDistance;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool _takeClosest;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public FlockController _flock;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool _landOnStart;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool _soarLand;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool _onlyBirdsAbove;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float _landingSpeedModifier;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float _landingTurnSpeedModifier;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform _featherPS;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform _thisT;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int _activeLandingSpots;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float _snapLandDistance;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float _landedRotateSpeed;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float _gizmoSize;

	[Token(Token = "0x600024A")]
	[Address(RVA = "0xB20220", Offset = "0xB20220", VA = "0xB20220")]
	public void Start()
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0xB1D924", Offset = "0xB1D924", VA = "0xB1D924")]
	public void ScareAll()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0xB204D4", Offset = "0xB204D4", VA = "0xB204D4")]
	public void ScareAll(float minDelay, float maxDelay)
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xB1D930", Offset = "0xB1D930", VA = "0xB1D930")]
	public void LandAll()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0xB2043C", Offset = "0xB2043C", VA = "0xB2043C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8823A0", Offset = "0x8823A0")]
	public IEnumerator InstantLandOnStart(float delay)
	{
		return null;
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0xB1DA9C", Offset = "0xB1DA9C", VA = "0xB1DA9C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x882404", Offset = "0x882404")]
	public IEnumerator InstantLand(float delay)
	{
		return null;
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xB206B8", Offset = "0xB206B8", VA = "0xB206B8")]
	public LandingSpotController()
	{
	}
}
[Token(Token = "0x2000099")]
public class DeepLinking : MonoBehaviour
{
	[Token(Token = "0x2000237")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B42C", Offset = "0x87B42C")]
	private sealed class <Fade>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DeepLinking <>4__this;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <value>5__2;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <timeElapsed>5__3;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <lerpDuration>5__4;

		[Token(Token = "0x170000E2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BB9")]
			[Address(RVA = "0xA35A1C", Offset = "0xA35A1C", VA = "0xA35A1C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BBB")]
			[Address(RVA = "0xA35A8C", Offset = "0xA35A8C", VA = "0xA35A8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0xA354D0", Offset = "0xA354D0", VA = "0xA354D0")]
		[DebuggerHidden]
		public <Fade>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0xA3550C", Offset = "0xA3550C", VA = "0xA3550C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0xA35510", Offset = "0xA35510", VA = "0xA35510", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0xA35A24", Offset = "0xA35A24", VA = "0xA35A24", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] urlStoreApp;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] nameBundle;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string[] urlSteam;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Image[] images_button;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private SpriteRenderer image_Backgroud;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Button button;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool faded;

	[Token(Token = "0x6000251")]
	[Address(RVA = "0xA34FBC", Offset = "0xA34FBC", VA = "0xA34FBC")]
	public void SelectEpisode(int _index)
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0xA34FC0", Offset = "0xA34FC0", VA = "0xA34FC0")]
	public void LaunchOtherApp(int _bundleID)
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xA353D8", Offset = "0xA353D8", VA = "0xA353D8")]
	public void LaunchOtherExe(int _bundleID)
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xA35430", Offset = "0xA35430", VA = "0xA35430")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0xA3545C", Offset = "0xA3545C", VA = "0xA3545C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x882468", Offset = "0x882468")]
	private IEnumerator Fade()
	{
		return null;
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xA354FC", Offset = "0xA354FC", VA = "0xA354FC")]
	public DeepLinking()
	{
	}
}
[Token(Token = "0x200009A")]
public enum LensFlareTypes
{
	[Token(Token = "0x400024B")]
	BloomAndFlare = 0,
	[Token(Token = "0x400024C")]
	Flare = 2,
	[Token(Token = "0x400024D")]
	Bloom = 1
}
[Token(Token = "0x200009B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x879784", Offset = "0x879784")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x879784", Offset = "0x879784")]
public class DirtyLensFlare : MonoBehaviour
{
	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LensFlareTypes lensFlareType;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float saturation;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float threshold;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float flareIntensity;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float bloomIntensity;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int iterations;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float blurSpread;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int downsample;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool useDirt;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Texture2D screenDirt;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Shader blurShader;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material blurMaterial;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Shader shader;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material m_Material;

	[Token(Token = "0x17000014")]
	protected Material material
	{
		[Token(Token = "0x6000258")]
		[Address(RVA = "0xA3A080", Offset = "0xA3A080", VA = "0xA3A080")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0xA39DE8", Offset = "0xA39DE8", VA = "0xA39DE8", Slot = "4")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xA3A148", Offset = "0xA3A148", VA = "0xA3A148", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xA3A1F8", Offset = "0xA3A1F8", VA = "0xA3A1F8")]
	public void FourTapCone(RenderTexture source, RenderTexture dest, int iteration, Material blurMtl)
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xA3A3C8", Offset = "0xA3A3C8", VA = "0xA3A3C8")]
	private void ApplyBlurPass(RenderTexture source, RenderTexture destination, Material blurMtl)
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0xA39EA8", Offset = "0xA39EA8", VA = "0xA39EA8")]
	private bool CheckResources()
	{
		return default(bool);
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0xA3A618", Offset = "0xA3A618", VA = "0xA3A618")]
	private void OnRenderImage(RenderTexture source, RenderTexture destination)
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0xA3AA38", Offset = "0xA3AA38", VA = "0xA3AA38")]
	public DirtyLensFlare()
	{
	}
}
[Token(Token = "0x200009C")]
public class BakeTexturesAtRuntime : MonoBehaviour
{
	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float elapsedTime;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MB3_TextureCombiner.CreateAtlasesCoroutineResult result;

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xA27AF4", Offset = "0xA27AF4", VA = "0xA27AF4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0xA27F94", Offset = "0xA27F94", VA = "0xA27F94")]
	private void OnBuiltAtlasesSuccess()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0xA281C0", Offset = "0xA281C0", VA = "0xA281C0")]
	public BakeTexturesAtRuntime()
	{
	}
}
[Token(Token = "0x200009D")]
public class MB_BatchPrepareObjectsForDynamicBatchingDescription : MonoBehaviour
{
	[Token(Token = "0x6000262")]
	[Address(RVA = "0xB2A174", Offset = "0xB2A174", VA = "0xB2A174")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0xB2A1D8", Offset = "0xB2A1D8", VA = "0xB2A1D8")]
	public MB_BatchPrepareObjectsForDynamicBatchingDescription()
	{
	}
}
[Token(Token = "0x200009E")]
public class MB_SwapShirts : MonoBehaviour
{
	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBaker meshBaker;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer[] clothingAndBodyPartsBareTorso;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer[] clothingAndBodyPartsBareTorsoDamagedArm;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Renderer[] clothingAndBodyPartsHoodie;

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xB2C1E4", Offset = "0xB2C1E4", VA = "0xB2C1E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0xB2C3A8", Offset = "0xB2C3A8", VA = "0xB2C3A8")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xB2C494", Offset = "0xB2C494", VA = "0xB2C494")]
	private void ChangeOutfit(Renderer[] outfit)
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xB2C9F8", Offset = "0xB2C9F8", VA = "0xB2C9F8")]
	public MB_SwapShirts()
	{
	}
}
[Token(Token = "0x200009F")]
public class MB_PrepareObjectsForDynamicBatchingDescription : MonoBehaviour
{
	[Token(Token = "0x6000268")]
	[Address(RVA = "0xB2AE88", Offset = "0xB2AE88", VA = "0xB2AE88")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xB2AEEC", Offset = "0xB2AEEC", VA = "0xB2AEEC")]
	public MB_PrepareObjectsForDynamicBatchingDescription()
	{
	}
}
[Token(Token = "0x20000A0")]
public class MB_DynamicAddDeleteExample : MonoBehaviour
{
	[Token(Token = "0x2000238")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B43C", Offset = "0x87B43C")]
	private sealed class <largeNumber>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MB_DynamicAddDeleteExample <>4__this;

		[Token(Token = "0x170000E4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BBF")]
			[Address(RVA = "0xB2AB04", Offset = "0xB2AB04", VA = "0xB2AB04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BC1")]
			[Address(RVA = "0xB2AB74", Offset = "0xB2AB74", VA = "0xB2AB74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0xB2A828", Offset = "0xB2A828", VA = "0xB2A828")]
		[DebuggerHidden]
		public <largeNumber>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0xB2A928", Offset = "0xB2A928", VA = "0xB2A928", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0xB2A92C", Offset = "0xB2A92C", VA = "0xB2A92C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0xB2AB0C", Offset = "0xB2AB0C", VA = "0xB2AB0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<GameObject> objsInCombined;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MB3_MultiMeshBaker mbd;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject[] objs;

	[Token(Token = "0x600026A")]
	[Address(RVA = "0xB2A1E0", Offset = "0xB2A1E0", VA = "0xB2A1E0")]
	private float GaussianValue()
	{
		return default(float);
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0xB2A2C4", Offset = "0xB2A2C4", VA = "0xB2A2C4")]
	private void Start()
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0xB2A7B4", Offset = "0xB2A7B4", VA = "0xB2A7B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8824CC", Offset = "0x8824CC")]
	private IEnumerator largeNumber()
	{
		return null;
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xB2A854", Offset = "0xB2A854", VA = "0xB2A854")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xB2A8B8", Offset = "0xB2A8B8", VA = "0xB2A8B8")]
	public MB_DynamicAddDeleteExample()
	{
	}
}
[Token(Token = "0x20000A1")]
public class MB_Example : MonoBehaviour
{
	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MB3_MeshBaker meshbaker;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject[] objsToCombine;

	[Token(Token = "0x600026F")]
	[Address(RVA = "0xB2AB7C", Offset = "0xB2AB7C", VA = "0xB2AB7C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0xB2ABF0", Offset = "0xB2ABF0", VA = "0xB2ABF0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0xB2AC98", Offset = "0xB2AC98", VA = "0xB2AC98")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0xB2ACFC", Offset = "0xB2ACFC", VA = "0xB2ACFC")]
	public MB_Example()
	{
	}
}
[Token(Token = "0x20000A2")]
public class MB_ExampleMover : MonoBehaviour
{
	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int axis;

	[Token(Token = "0x6000273")]
	[Address(RVA = "0xB2AD04", Offset = "0xB2AD04", VA = "0xB2AD04")]
	private void Update()
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0xB2AE14", Offset = "0xB2AE14", VA = "0xB2AE14")]
	public MB_ExampleMover()
	{
	}
}
[Token(Token = "0x20000A3")]
public class MB_ExampleSkinnedMeshDescription : MonoBehaviour
{
	[Token(Token = "0x6000275")]
	[Address(RVA = "0xB2AE1C", Offset = "0xB2AE1C", VA = "0xB2AE1C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0xB2AE80", Offset = "0xB2AE80", VA = "0xB2AE80")]
	public MB_ExampleSkinnedMeshDescription()
	{
	}
}
[Token(Token = "0x20000A4")]
public class MB_SkinnedMeshSceneController : MonoBehaviour
{
	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject swordPrefab;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject hatPrefab;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject glassesPrefab;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject workerPrefab;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject targetCharacter;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MB3_MeshBaker skinnedMeshBaker;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject swordInstance;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GameObject glassesInstance;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameObject hatInstance;

	[Token(Token = "0x6000277")]
	[Address(RVA = "0xB2AEF4", Offset = "0xB2AEF4", VA = "0xB2AEF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0xB2B178", Offset = "0xB2B178", VA = "0xB2B178")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0xB2C0A8", Offset = "0xB2C0A8", VA = "0xB2C0A8")]
	public Transform SearchHierarchyForBone(Transform current, string name)
	{
		return null;
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0xB2C1DC", Offset = "0xB2C1DC", VA = "0xB2C1DC")]
	public MB_SkinnedMeshSceneController()
	{
	}
}
[Token(Token = "0x20000A5")]
public class MB_SwitchBakedObjectsTexture : MonoBehaviour
{
	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer targetRenderer;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material[] materials;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MB3_MeshBaker meshBaker;

	[Token(Token = "0x600027B")]
	[Address(RVA = "0xB2CA00", Offset = "0xB2CA00", VA = "0xB2CA00")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0xB2CA64", Offset = "0xB2CA64", VA = "0xB2CA64")]
	public void Start()
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0xB2CB2C", Offset = "0xB2CB2C", VA = "0xB2CB2C")]
	public void Update()
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0xB2CE58", Offset = "0xB2CE58", VA = "0xB2CE58")]
	public MB_SwitchBakedObjectsTexture()
	{
	}
}
[Token(Token = "0x20000A6")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x87981C", Offset = "0x87981C")]
public class FastList<T>
{
	[Token(Token = "0x2000239")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x200023A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B44C", Offset = "0x87B44C")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x170000E6")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x6000BC9")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x170000E7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BCB")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BC6")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000BC7")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BC8")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BCA")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x17000015")]
	public int Count
	{
		[Token(Token = "0x6000281")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000282")]
		set
		{
		}
	}

	[Token(Token = "0x17000016")]
	public T Item
	{
		[Token(Token = "0x6000283")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x6000284")]
		set
		{
		}
	}

	[Token(Token = "0x600027F")]
	public FastList()
	{
	}

	[Token(Token = "0x6000280")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x6000285")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x6000286")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x6000287")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x6000288")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x6000289")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600028A")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x600028B")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600028C")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x600028D")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600028E")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x600028F")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x6000290")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x6000291")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000292")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000293")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x882530", Offset = "0x882530")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000294")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x6000295")]
	private void Allocate()
	{
	}

	[Token(Token = "0x6000296")]
	private void Trim()
	{
	}

	[Token(Token = "0x6000297")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000298")]
	public void Release()
	{
	}
}
[Token(Token = "0x20000A7")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string header;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x6000299")]
	[Address(RVA = "0xB1D030", Offset = "0xB1D030", VA = "0xB1D030")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x20000A8")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string message;

	[Token(Token = "0x600029A")]
	[Address(RVA = "0xB1D004", Offset = "0xB1D004", VA = "0xB1D004")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x20000A9")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x600029B")]
	[Address(RVA = "0xA439F0", Offset = "0xA439F0", VA = "0xA439F0")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0xA43A60", Offset = "0xA43A60", VA = "0xA43A60")]
	private void Start()
	{
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0xA43C0C", Offset = "0xA43C0C", VA = "0xA43C0C")]
	private void Update()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0xA43C84", Offset = "0xA43C84", VA = "0xA43C84")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0xA43AA4", Offset = "0xA43AA4", VA = "0xA43AA4")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0xA43D58", Offset = "0xA43D58", VA = "0xA43D58")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0xA43DB8", Offset = "0xA43DB8", VA = "0xA43DB8")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x20000AA")]
public class AvatarLayer
{
	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0xA27AEC", Offset = "0xA27AEC", VA = "0xA27AEC")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x20000AB")]
public class PacketRecordSettings
{
	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0xA13724", Offset = "0xA13724", VA = "0xA13724")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x20000AC")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x200023B")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0xBC3644", Offset = "0xBC3644", VA = "0xBC3644")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x200023C")]
	public enum HandType
	{
		[Token(Token = "0x4000CCA")]
		Right,
		[Token(Token = "0x4000CCB")]
		Left,
		[Token(Token = "0x4000CCC")]
		Max
	}

	[Token(Token = "0x200023D")]
	public enum HandJoint
	{
		[Token(Token = "0x4000CCE")]
		HandBase,
		[Token(Token = "0x4000CCF")]
		IndexBase,
		[Token(Token = "0x4000CD0")]
		IndexTip,
		[Token(Token = "0x4000CD1")]
		ThumbBase,
		[Token(Token = "0x4000CD2")]
		ThumbTip,
		[Token(Token = "0x4000CD3")]
		Max
	}

	[Token(Token = "0x200023E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B45C", Offset = "0x87B45C")]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x170000E8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BD0")]
			[Address(RVA = "0xBC6008", Offset = "0xBC6008", VA = "0xBC6008", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000E9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BD2")]
			[Address(RVA = "0xBC6078", Offset = "0xBC6078", VA = "0xBC6078", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0xBC5944", Offset = "0xBC5944", VA = "0xBC5944")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0xBC5DA4", Offset = "0xBC5DA4", VA = "0xBC5DA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0xBC5DA8", Offset = "0xBC5DA8", VA = "0xBC5DA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0xBC6010", Offset = "0xBC6010", VA = "0xBC6010", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87BEF4", Offset = "0x87BEF4")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87BF2C", Offset = "0x87BF2C")]
	public bool EnableBody;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87BF64", Offset = "0x87BF64")]
	public bool RecordPackets;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87BF9C", Offset = "0x87BF9C")]
	public bool StartWithControllers;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87BFD4", Offset = "0x87BFD4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87BFD4", Offset = "0x87BFD4")]
	[SerializeField]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87C044", Offset = "0x87C044")]
	private bool CombineMeshes;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87C07C", Offset = "0x87C07C")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87C0B4", Offset = "0x87C0B4")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87C0EC", Offset = "0x87C0EC")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87C124", Offset = "0x87C124")]
	public bool EnableLaughter;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x40002BC")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x40002BE")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x40002BF")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x40002C0")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x40002C1")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x40002C2")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0xBBF85C", Offset = "0xBBF85C", VA = "0xBBF85C")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0xBBFD44", Offset = "0xBBFD44", VA = "0xBBFD44")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0xBBFDD0", Offset = "0xBBFDD0", VA = "0xBBFDD0")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0xBBFE50", Offset = "0xBBFE50", VA = "0xBBFE50")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0xBBFF90", Offset = "0xBBFF90", VA = "0xBBFF90")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0xBC0098", Offset = "0xBC0098", VA = "0xBC0098")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0xBC0194", Offset = "0xBC0194", VA = "0xBC0194")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0xBC0398", Offset = "0xBC0398", VA = "0xBC0398")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xBC0460", Offset = "0xBC0460", VA = "0xBC0460")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xBC04E4", Offset = "0xBC04E4", VA = "0xBC04E4")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xBC0670", Offset = "0xBC0670", VA = "0xBC0670")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xBC0758", Offset = "0xBC0758", VA = "0xBC0758")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xBC0884", Offset = "0xBC0884", VA = "0xBC0884")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0xBC08E4", Offset = "0xBC08E4", VA = "0xBC08E4")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x60002B2")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xBC0D84", Offset = "0xBC0D84", VA = "0xBC0D84")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xBC1100", Offset = "0xBC1100", VA = "0xBC1100")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xBC12A4", Offset = "0xBC12A4", VA = "0xBC12A4")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xBC15B8", Offset = "0xBC15B8", VA = "0xBC15B8")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xBC16AC", Offset = "0xBC16AC", VA = "0xBC16AC")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0xBC1D30", Offset = "0xBC1D30", VA = "0xBC1D30")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0xBC2064", Offset = "0xBC2064", VA = "0xBC2064")]
	private void Update()
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xBC2C7C", Offset = "0xBC2C7C", VA = "0xBC2C7C")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0xBC2CC4", Offset = "0xBC2CC4", VA = "0xBC2CC4")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0xBC1958", Offset = "0xBC1958", VA = "0xBC1958")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0xBC19F4", Offset = "0xBC19F4", VA = "0xBC19F4")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0xBC2CF4", Offset = "0xBC2CF4", VA = "0xBC2CF4")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0xBC2444", Offset = "0xBC2444", VA = "0xBC2444")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0xBC2FBC", Offset = "0xBC2FBC", VA = "0xBC2FBC")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0xBC2D64", Offset = "0xBC2D64", VA = "0xBC2D64")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0xBC36C0", Offset = "0xBC36C0", VA = "0xBC36C0")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0xBC3B64", Offset = "0xBC3B64", VA = "0xBC3B64")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0xBC3F7C", Offset = "0xBC3F7C", VA = "0xBC3F7C")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0xBC40C8", Offset = "0xBC40C8", VA = "0xBC40C8")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0xBC4308", Offset = "0xBC4308", VA = "0xBC4308")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0xBC261C", Offset = "0xBC261C", VA = "0xBC261C")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0xBC4404", Offset = "0xBC4404", VA = "0xBC4404")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0xBC2454", Offset = "0xBC2454", VA = "0xBC2454")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xBC44FC", Offset = "0xBC44FC", VA = "0xBC44FC")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xBC4BE4", Offset = "0xBC4BE4", VA = "0xBC4BE4")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xBC5204", Offset = "0xBC5204", VA = "0xBC5204")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0xBC5284", Offset = "0xBC5284", VA = "0xBC5284")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0xBC5308", Offset = "0xBC5308", VA = "0xBC5308")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0xBC2AFC", Offset = "0xBC2AFC", VA = "0xBC2AFC")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0xBC45B8", Offset = "0xBC45B8", VA = "0xBC45B8")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0xBC58D0", Offset = "0xBC58D0", VA = "0xBC58D0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x882594", Offset = "0x882594")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xBC5970", Offset = "0xBC5970", VA = "0xBC5970")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0xBC56F0", Offset = "0xBC56F0", VA = "0xBC56F0")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xBC5A40", Offset = "0xBC5A40", VA = "0xBC5A40")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0xBC5B34", Offset = "0xBC5B34", VA = "0xBC5B34")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0xBC53E0", Offset = "0xBC53E0", VA = "0xBC53E0")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0xBC5C28", Offset = "0xBC5C28", VA = "0xBC5C28")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x20000AD")]
public class OvrAvatarAsset
{
	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0xBC6080", Offset = "0xBC6080", VA = "0xBC6080")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x20000AE")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0xBC6130", Offset = "0xBC6130", VA = "0xBC6130")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0xBC78F0", Offset = "0xBC78F0", VA = "0xBC78F0")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0xBC741C", Offset = "0xBC741C", VA = "0xBC741C")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0xBC71B8", Offset = "0xBC71B8", VA = "0xBC71B8")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0xBC7290", Offset = "0xBC7290", VA = "0xBC7290")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0xBC7C10", Offset = "0xBC7C10", VA = "0xBC7C10")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x20000AF")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x40002DF")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xBC83E0", Offset = "0xBC83E0", VA = "0xBC83E0")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x20000B0")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xBC8694", Offset = "0xBC8694", VA = "0xBC8694")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xBC8D80", Offset = "0xBC8D80", VA = "0xBC8D80")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x20000B1")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0xBC3E0C", Offset = "0xBC3E0C", VA = "0xBC3E0C")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0xBC8E7C", Offset = "0xBC8E7C", VA = "0xBC8E7C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0xBC8FA4", Offset = "0xBC8FA4", VA = "0xBC8FA4")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x20000B2")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0xBC9008", Offset = "0xBC9008", VA = "0xBC9008")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xBC87BC", Offset = "0xBC87BC", VA = "0xBC87BC")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xBC9010", Offset = "0xBC9010", VA = "0xBC9010")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0xBC90B0", Offset = "0xBC90B0", VA = "0xBC90B0")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xBC9BD0", Offset = "0xBC9BD0", VA = "0xBC9BD0")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xBC8DE4", Offset = "0xBC8DE4", VA = "0xBC8DE4")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x20000B3")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x200023F")]
	public enum PacketMode
	{
		[Token(Token = "0x4000CD8")]
		SDK,
		[Token(Token = "0x4000CD9")]
		Unity
	}

	[Token(Token = "0x2000240")]
	public struct ControllerPose
	{
		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0xBCB6D8", Offset = "0xBCB6D8", VA = "0xBCB6D8")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x2000241")]
	public struct PoseFrame
	{
		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0xBC3280", Offset = "0xBC3280", VA = "0xBC3280")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0xBC3270", Offset = "0xBC3270", VA = "0xBC3270")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x60002ED")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0xBCB62C", Offset = "0xBCB62C", VA = "0xBCB62C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0xBC1A90", Offset = "0xBC1A90", VA = "0xBC1A90")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xBCB6C0", Offset = "0xBCB6C0", VA = "0xBCB6C0")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xBCB6C8", Offset = "0xBCB6C8", VA = "0xBCB6C8")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x20000B4")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0xBCB830", Offset = "0xBCB830", VA = "0xBCB830")]
	private void Update()
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0xBCB9A8", Offset = "0xBCB9A8", VA = "0xBCB9A8")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x20000B5")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0xBCBA14", Offset = "0xBCBA14", VA = "0xBCBA14")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0xBCBB40", Offset = "0xBCBB40", VA = "0xBCBB40")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0xBCBE9C", Offset = "0xBCBE9C", VA = "0xBCBE9C")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xBCC0D0", Offset = "0xBCC0D0", VA = "0xBCC0D0", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xBCC0FC", Offset = "0xBCC0FC", VA = "0xBCC0FC")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x20000B6")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x2000242")]
	public enum TextureType
	{
		[Token(Token = "0x4000CEA")]
		DiffuseTextures,
		[Token(Token = "0x4000CEB")]
		NormalMaps,
		[Token(Token = "0x4000CEC")]
		RoughnessMaps,
		[Token(Token = "0x4000CED")]
		Count
	}

	[Token(Token = "0x2000243")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x2000244")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x2000245")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x2000246")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0xA0A308", Offset = "0xA0A308", VA = "0xA0A308")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x2000247")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B46C", Offset = "0x87B46C")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Action callBack;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x170000EA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BD9")]
			[Address(RVA = "0xA0A290", Offset = "0xA0A290", VA = "0xA0A290", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000EB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BDB")]
			[Address(RVA = "0xA0A300", Offset = "0xA0A300", VA = "0xA0A300", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0xA09690", Offset = "0xA09690", VA = "0xA09690")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0xA096BC", Offset = "0xA096BC", VA = "0xA096BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0xA096C0", Offset = "0xA096C0", VA = "0xA096C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0xA0A298", Offset = "0xA0A298", VA = "0xA0A298", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x4000313")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x4000314")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x4000315")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x4000316")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0xBCC1AC", Offset = "0xBCC1AC", VA = "0xBCC1AC")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0xBCC374", Offset = "0xBCC374", VA = "0xBCC374")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0xBCC3B0", Offset = "0xBCC3B0", VA = "0xBCC3B0")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0xBCCEFC", Offset = "0xBCCEFC", VA = "0xBCCEFC")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0xBCCF7C", Offset = "0xBCCF7C", VA = "0xBCCF7C")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0xBCC444", Offset = "0xBCC444", VA = "0xBCC444")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0xBCCFE4", Offset = "0xBCCFE4", VA = "0xBCCFE4")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0xBCCB38", Offset = "0xBCCB38", VA = "0xBCCB38")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0xBCD120", Offset = "0xBCD120", VA = "0xBCD120")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0xBCD4BC", Offset = "0xBCD4BC", VA = "0xBCD4BC")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0xBCD5EC", Offset = "0xBCD5EC", VA = "0xBCD5EC")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0xBCD624", Offset = "0xBCD624", VA = "0xBCD624")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0xBCCE64", Offset = "0xBCCE64", VA = "0xBCCE64")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8825F8", Offset = "0x8825F8")]
	private IEnumerator RunLoadingAnimation(Action callBack)
	{
		return null;
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0xBCE774", Offset = "0xBCE774", VA = "0xBCE774")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x20000B7")]
public class OvrAvatarMeshInstance : MonoBehaviour
{
	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private HashSet<ulong> AssetsToLoad;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ulong MeshID;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ulong MaterialID;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ulong FadeTextureID;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarBodyPartType MeshType;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ovrAvatarMaterialState MaterialState;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private MeshFilter Mesh;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private MeshRenderer MeshInstance;

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xA0A310", Offset = "0xA0A310", VA = "0xA0A310")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xA0B384", Offset = "0xA0B384", VA = "0xA0B384")]
	public void SetMeshAssets(ulong fadeTexture, ulong meshID, ulong materialID, ovrAvatarBodyPartType type)
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0xA0A3E0", Offset = "0xA0A3E0", VA = "0xA0A3E0")]
	private void HandleAssetAvailable(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0xA0B5F4", Offset = "0xA0B5F4", VA = "0xA0B5F4")]
	public void ChangeMaterial(ulong assetID)
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0xA0B438", Offset = "0xA0B438", VA = "0xA0B438")]
	private void RequestAsset(ulong assetID)
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0xA0B550", Offset = "0xA0B550", VA = "0xA0B550")]
	private void RequestMaterialTextures()
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0xA0B7C0", Offset = "0xA0B7C0", VA = "0xA0B7C0")]
	public void SetActive(bool active)
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0xA0A764", Offset = "0xA0A764", VA = "0xA0A764")]
	private void UpdateMaterial()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0xA0B824", Offset = "0xA0B824", VA = "0xA0B824")]
	public OvrAvatarMeshInstance()
	{
	}
}
[Token(Token = "0x20000B8")]
public class OvrAvatarPacket
{
	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x17000017")]
	public float Duration
	{
		[Token(Token = "0x6000311")]
		[Address(RVA = "0xA0B82C", Offset = "0xA0B82C", VA = "0xA0B82C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000018")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x6000312")]
		[Address(RVA = "0xA0B8CC", Offset = "0xA0B8CC", VA = "0xA0B8CC")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0xA0B97C", Offset = "0xA0B97C", VA = "0xA0B97C")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0xA0BA40", Offset = "0xA0BA40", VA = "0xA0BA40")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0xA0BB90", Offset = "0xA0BB90", VA = "0xA0BB90")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xA0BC6C", Offset = "0xA0BC6C", VA = "0xA0BC6C")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xA0BD4C", Offset = "0xA0BD4C", VA = "0xA0BD4C")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xA0BF80", Offset = "0xA0BF80", VA = "0xA0BF80")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xA0C200", Offset = "0xA0C200", VA = "0xA0C200")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x20000B9")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x600031A")]
	[Address(RVA = "0xA28D9C", Offset = "0xA28D9C", VA = "0xA28D9C")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xA28EC0", Offset = "0xA28EC0", VA = "0xA28EC0")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xA2914C", Offset = "0xA2914C", VA = "0xA2914C")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xA28F74", Offset = "0xA28F74", VA = "0xA28F74")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0xA29050", Offset = "0xA29050", VA = "0xA29050")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x20000BA")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x600031F")]
	[Address(RVA = "0xA2890C", Offset = "0xA2890C", VA = "0xA2890C")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0xA28D30", Offset = "0xA28D30", VA = "0xA28D30")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xA28AB4", Offset = "0xA28AB4", VA = "0xA28AB4")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0xA28B48", Offset = "0xA28B48", VA = "0xA28B48")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0xA28C0C", Offset = "0xA28C0C", VA = "0xA28C0C")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x20000BB")]
public class OvrAvatarProjectorRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material material;

	[Token(Token = "0x6000324")]
	[Address(RVA = "0xA0C44C", Offset = "0xA0C44C", VA = "0xA0C44C")]
	internal void InitializeProjectorRender(ovrAvatarRenderPart_ProjectorRender render, Shader shader, OvrAvatarRenderComponent target)
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0xA0C78C", Offset = "0xA0C78C", VA = "0xA0C78C")]
	internal void UpdateProjectorRender(OvrAvatarComponent component, ovrAvatarRenderPart_ProjectorRender render)
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0xA0C920", Offset = "0xA0C920", VA = "0xA0C920")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0xA0CEE8", Offset = "0xA0CEE8", VA = "0xA0CEE8")]
	public OvrAvatarProjectorRenderComponent()
	{
	}
}
[Token(Token = "0x20000BC")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x4000327")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x4000328")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x6000328")]
	[Address(RVA = "0xA0CF08", Offset = "0xA0CF08", VA = "0xA0CF08")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0xA0CF9C", Offset = "0xA0CF9C", VA = "0xA0CF9C", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0xA0CFB8", Offset = "0xA0CFB8", VA = "0xA0CFB8")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0xA0D1BC", Offset = "0xA0D1BC", VA = "0xA0D1BC")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0xA0D408", Offset = "0xA0D408", VA = "0xA0D408")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x20000BD")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x600032D")]
	[Address(RVA = "0xA0D480", Offset = "0xA0D480", VA = "0xA0D480")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0xA0D5C8", Offset = "0xA0D5C8", VA = "0xA0D5C8")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0xA0D868", Offset = "0xA0D868", VA = "0xA0D868")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0xA0C688", Offset = "0xA0C688", VA = "0xA0C688")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0xA0CEF8", Offset = "0xA0CEF8", VA = "0xA0CEF8")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x20000BE")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x4000331")]
	Body = 1,
	[Token(Token = "0x4000332")]
	Hands = 2,
	[Token(Token = "0x4000333")]
	Base = 4,
	[Token(Token = "0x4000334")]
	BodyTilt = 0x10,
	[Token(Token = "0x4000335")]
	Expressive = 0x20,
	[Token(Token = "0x4000336")]
	All = -1
}
[Token(Token = "0x20000BF")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x4000338")]
	AvatarSpecification,
	[Token(Token = "0x4000339")]
	AssetLoaded,
	[Token(Token = "0x400033A")]
	Count
}
[Token(Token = "0x20000C0")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x20000C1")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x20000C2")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x4000340")]
	Mesh,
	[Token(Token = "0x4000341")]
	Texture,
	[Token(Token = "0x4000342")]
	Pose,
	[Token(Token = "0x4000343")]
	Material,
	[Token(Token = "0x4000344")]
	CombinedMesh,
	[Token(Token = "0x4000345")]
	PBSMaterial,
	[Token(Token = "0x4000346")]
	FailedLoad,
	[Token(Token = "0x4000347")]
	Count
}
[Token(Token = "0x20000C3")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x20000C4")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x20000C5")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x20000C6")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x20000C7")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x20000C8")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x400037C")]
	RGB24,
	[Token(Token = "0x400037D")]
	DXT1,
	[Token(Token = "0x400037E")]
	DXT5,
	[Token(Token = "0x400037F")]
	ASTC_RGB_6x6,
	[Token(Token = "0x4000380")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x4000381")]
	Count
}
[Token(Token = "0x20000C9")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x20000CA")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x4000389")]
	SkinnedMeshRender,
	[Token(Token = "0x400038A")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x400038B")]
	ProjectorRender,
	[Token(Token = "0x400038C")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x400038D")]
	Count
}
[Token(Token = "0x20000CB")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x400038F")]
	Unknown,
	[Token(Token = "0x4000390")]
	Default,
	[Token(Token = "0x4000391")]
	Verbose,
	[Token(Token = "0x4000392")]
	Debug,
	[Token(Token = "0x4000393")]
	Info,
	[Token(Token = "0x4000394")]
	Warn,
	[Token(Token = "0x4000395")]
	Error,
	[Token(Token = "0x4000396")]
	Fatal,
	[Token(Token = "0x4000397")]
	Silent
}
[Token(Token = "0x20000CC")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x20000CD")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x400039C")]
	One = 1,
	[Token(Token = "0x400039D")]
	Two = 2,
	[Token(Token = "0x400039E")]
	Three = 4,
	[Token(Token = "0x400039F")]
	Joystick = 8
}
[Token(Token = "0x20000CE")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x40003A1")]
	One = 1,
	[Token(Token = "0x40003A2")]
	Two = 2,
	[Token(Token = "0x40003A3")]
	Joystick = 4,
	[Token(Token = "0x40003A4")]
	ThumbRest = 8,
	[Token(Token = "0x40003A5")]
	Index = 0x10,
	[Token(Token = "0x40003A6")]
	Pointing = 0x40,
	[Token(Token = "0x40003A7")]
	ThumbUp = 0x80
}
[Token(Token = "0x20000CF")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x20000D0")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x20000D1")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x20000D2")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000D3")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000D4")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x20000D5")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000D6")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x20000D7")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x40003C7")]
	Add,
	[Token(Token = "0x40003C8")]
	Multiply,
	[Token(Token = "0x40003C9")]
	Count
}
[Token(Token = "0x20000D8")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x40003CB")]
	Color,
	[Token(Token = "0x40003CC")]
	Texture,
	[Token(Token = "0x40003CD")]
	TextureSingleChannel,
	[Token(Token = "0x40003CE")]
	Parallax,
	[Token(Token = "0x40003CF")]
	Count
}
[Token(Token = "0x20000D9")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x40003D1")]
	None,
	[Token(Token = "0x40003D2")]
	Positional,
	[Token(Token = "0x40003D3")]
	ViewReflection,
	[Token(Token = "0x40003D4")]
	Fresnel,
	[Token(Token = "0x40003D5")]
	Pulse,
	[Token(Token = "0x40003D6")]
	Count
}
[Token(Token = "0x20000DA")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x40003D8")]
	Touch,
	[Token(Token = "0x40003D9")]
	Malibu,
	[Token(Token = "0x40003DA")]
	Go,
	[Token(Token = "0x40003DB")]
	Quest,
	[Token(Token = "0x40003DC")]
	Count
}
[Token(Token = "0x20000DB")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x40003DE")]
	Lowest = 1,
	[Token(Token = "0x40003DF")]
	Medium = 3,
	[Token(Token = "0x40003E0")]
	Highest = 5
}
[Token(Token = "0x20000DC")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x40003E2")]
	Unknown = -1,
	[Token(Token = "0x40003E3")]
	One,
	[Token(Token = "0x40003E4")]
	Two
}
[Token(Token = "0x20000DD")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x6000334")]
	[Address(RVA = "0xE046A8", Offset = "0xE046A8", VA = "0xE046A8")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x92D274", Offset = "0x92D274", VA = "0x92D274", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x92D27C", Offset = "0x92D27C", VA = "0x92D27C", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000DE")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x6000337")]
	[Address(RVA = "0xE049D8", Offset = "0xE049D8", VA = "0xE049D8")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0x92D51C", Offset = "0x92D51C", VA = "0x92D51C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0x92D524", Offset = "0x92D524", VA = "0x92D524", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000DF")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xE03D50", Offset = "0xE03D50", VA = "0xE03D50")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0x92CFBC", Offset = "0x92CFBC", VA = "0x92CFBC", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0x92CFC4", Offset = "0x92CFC4", VA = "0x92CFC4", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000E0")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xE04F38", Offset = "0xE04F38", VA = "0xE04F38")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x92DDD4", Offset = "0x92DDD4", VA = "0x92DDD4", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x92DDDC", Offset = "0x92DDDC", VA = "0x92DDDC", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x20000E1")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xBC6088", Offset = "0xBC6088", VA = "0xBC6088")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x20000E2")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x20000E3")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x4000419")]
	FirstPerson = 1,
	[Token(Token = "0x400041A")]
	ThirdPerson = 2,
	[Token(Token = "0x400041B")]
	SelfOccluding = 4
}
[Token(Token = "0x20000E4")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20000E5")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20000E6")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x20000E7")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x20000E8")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x4000431")]
	Default,
	[Token(Token = "0x4000432")]
	GripSphere,
	[Token(Token = "0x4000433")]
	GripCube,
	[Token(Token = "0x4000434")]
	Count
}
[Token(Token = "0x20000E9")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x4000436")]
	Body,
	[Token(Token = "0x4000437")]
	Clothing,
	[Token(Token = "0x4000438")]
	Eyewear,
	[Token(Token = "0x4000439")]
	Hair,
	[Token(Token = "0x400043A")]
	Beard,
	[Token(Token = "0x400043B")]
	Count
}
[Token(Token = "0x20000EA")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x20000EB")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x20000EC")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x20000ED")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x20000EE")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x4000445")]
	AvatarHead,
	[Token(Token = "0x4000446")]
	AvatarHand,
	[Token(Token = "0x4000447")]
	Object,
	[Token(Token = "0x4000448")]
	ObjectStatic,
	[Token(Token = "0x4000449")]
	Count
}
[Token(Token = "0x20000EF")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x20000F0")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x20000F1")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x20000F2")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x20000F3")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x4000455")]
	Point,
	[Token(Token = "0x4000456")]
	Direction,
	[Token(Token = "0x4000457")]
	Spot,
	[Token(Token = "0x4000458")]
	Count
}
[Token(Token = "0x20000F4")]
public struct ovrAvatarLight
{
	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x20000F5")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x20000F6")]
public struct ovrAvatarLights
{
	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x20000F7")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x20000F8")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x400046E")]
	None = 0u,
	[Token(Token = "0x400046F")]
	GazeTarget = 1u,
	[Token(Token = "0x4000470")]
	Any = uint.MaxValue
}
[Token(Token = "0x20000F9")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x20000FA")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x20000FB")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x20000FC")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x20000FD")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x20000FE")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x2000248")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0x91FD38", Offset = "0x91FD38", VA = "0x91FD38")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x4000485")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x17000019")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x6000353")]
		[Address(RVA = "0xA09FCC", Offset = "0xA09FCC", VA = "0xA09FCC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0xA0DC1C", Offset = "0xA0DC1C", VA = "0xA0DC1C")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xA0DE44", Offset = "0xA0DE44", VA = "0xA0DE44")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0xA0DEB8", Offset = "0xA0DEB8", VA = "0xA0DEB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xA0E844", Offset = "0xA0E844", VA = "0xA0E844")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xA0E8B0", Offset = "0xA0E8B0", VA = "0xA0E8B0")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xA0E91C", Offset = "0xA0E91C", VA = "0xA0E91C")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0xA0E98C", Offset = "0xA0E98C", VA = "0xA0E98C")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0xA0E9FC", Offset = "0xA0E9FC", VA = "0xA0E9FC")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xA0E640", Offset = "0xA0E640", VA = "0xA0E640")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0xA0B684", Offset = "0xA0B684", VA = "0xA0B684")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0xA0EB20", Offset = "0xA0EB20", VA = "0xA0EB20")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0xA0B5FC", Offset = "0xA0B5FC", VA = "0xA0B5FC")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0xA0EC1C", Offset = "0xA0EC1C", VA = "0xA0EC1C")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0xA0DE1C", Offset = "0xA0DE1C", VA = "0xA0DE1C")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0xA0A1AC", Offset = "0xA0A1AC", VA = "0xA0A1AC")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0xA0ED20", Offset = "0xA0ED20", VA = "0xA0ED20")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x20000FF")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x1700001A")]
	public static string AppID
	{
		[Token(Token = "0x6000364")]
		[Address(RVA = "0xA0ECC8", Offset = "0xA0ECC8", VA = "0xA0ECC8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000365")]
		[Address(RVA = "0xA0EE78", Offset = "0xA0EE78", VA = "0xA0EE78")]
		set
		{
		}
	}

	[Token(Token = "0x1700001B")]
	public static string MobileAppID
	{
		[Token(Token = "0x6000366")]
		[Address(RVA = "0xA0ECF4", Offset = "0xA0ECF4", VA = "0xA0ECF4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000367")]
		[Address(RVA = "0xA0EEA8", Offset = "0xA0EEA8", VA = "0xA0EEA8")]
		set
		{
		}
	}

	[Token(Token = "0x1700001C")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x6000368")]
		[Address(RVA = "0xA0ED64", Offset = "0xA0ED64", VA = "0xA0ED64")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000369")]
		[Address(RVA = "0xA0EED8", Offset = "0xA0EED8", VA = "0xA0EED8")]
		set
		{
		}
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0xA0EF2C", Offset = "0xA0EF2C", VA = "0xA0EF2C")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x2000100")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x600036B")]
	[Address(RVA = "0xA11718", Offset = "0xA11718", VA = "0xA11718")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0xA11A04", Offset = "0xA11A04", VA = "0xA11A04")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0xA1186C", Offset = "0xA1186C", VA = "0xA1186C")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0xA11C50", Offset = "0xA11C50", VA = "0xA11C50")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x2000101")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x600036F")]
	[Address(RVA = "0xA11C60", Offset = "0xA11C60", VA = "0xA11C60")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0xA11DB0", Offset = "0xA11DB0", VA = "0xA11DB0")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0xA11F68", Offset = "0xA11F68", VA = "0xA11F68")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x2000102")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x4000494")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x4000495")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x4000496")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x6000372")]
	[Address(RVA = "0xA0EF84", Offset = "0xA0EF84", VA = "0xA0EF84")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0xA10748", Offset = "0xA10748", VA = "0xA10748")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0xA10994", Offset = "0xA10994", VA = "0xA10994")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0xA0F858", Offset = "0xA0F858", VA = "0xA0F858")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xA0F420", Offset = "0xA0F420", VA = "0xA0F420")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0xA0F634", Offset = "0xA0F634", VA = "0xA0F634")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0xA11708", Offset = "0xA11708", VA = "0xA11708")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x2000103")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000249")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x200024A")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0x91FDB0", Offset = "0x91FDB0", VA = "0x91FDB0")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x200024B")]
	public struct TextureSet
	{
		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0x91FE58", Offset = "0x91FE58", VA = "0x91FE58")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x200024C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B47C", Offset = "0x87B47C")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x170000EC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BE2")]
			[Address(RVA = "0xA134C0", Offset = "0xA134C0", VA = "0xA134C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BE4")]
			[Address(RVA = "0xA13530", Offset = "0xA13530", VA = "0xA13530", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0xA12BC0", Offset = "0xA12BC0", VA = "0xA12BC0")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0xA12DF8", Offset = "0xA12DF8", VA = "0xA12DF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0xA12DFC", Offset = "0xA12DFC", VA = "0xA12DFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0xA134C8", Offset = "0xA134C8", VA = "0xA134C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x400049A")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x400049B")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x400049E")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x400049F")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x40004A0")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x40004A1")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x40004A2")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x40004A3")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x40004A4")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x6000379")]
	[Address(RVA = "0xA11F78", Offset = "0xA11F78", VA = "0xA11F78")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0xA12440", Offset = "0xA12440", VA = "0xA12440")]
	public void Update()
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0xA0A230", Offset = "0xA0A230", VA = "0xA0A230")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0xA12678", Offset = "0xA12678", VA = "0xA12678")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0xA125E8", Offset = "0xA125E8", VA = "0xA125E8")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0xA12834", Offset = "0xA12834", VA = "0xA12834")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0xA12A4C", Offset = "0xA12A4C", VA = "0xA12A4C")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0xA12AFC", Offset = "0xA12AFC", VA = "0xA12AFC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8826FC", Offset = "0x8826FC")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0xA0EAA0", Offset = "0xA0EAA0", VA = "0xA0EAA0")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0xA12BEC", Offset = "0xA12BEC", VA = "0xA12BEC")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x2000104")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xA13538", Offset = "0xA13538", VA = "0xA13538")]
	private void Update()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0xA136B4", Offset = "0xA136B4", VA = "0xA136B4")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x2000105")]
public class OVRLipSyncDebugConsole : MonoBehaviour
{
	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArrayList messages;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxMessages;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textMsg;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OVRLipSyncDebugConsole s_Instance;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool clearTimeoutOn;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float clearTimeout;

	[Token(Token = "0x1700001D")]
	public static OVRLipSyncDebugConsole instance
	{
		[Token(Token = "0x6000385")]
		[Address(RVA = "0xC9C7C8", Offset = "0xC9C7C8", VA = "0xC9C7C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0xC9CAA4", Offset = "0xC9CAA4", VA = "0xC9CAA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0xC9CBE0", Offset = "0xC9CBE0", VA = "0xC9CBE0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0xC9CB14", Offset = "0xC9CB14", VA = "0xC9CB14")]
	public void Init()
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0xC9CCE8", Offset = "0xC9CCE8", VA = "0xC9CCE8")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0xC9CEA0", Offset = "0xC9CEA0", VA = "0xC9CEA0")]
	public static void Log(string message, Color color)
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0xC9CC78", Offset = "0xC9CC78", VA = "0xC9CC78")]
	public static void Clear()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0xC9CF8C", Offset = "0xC9CF8C", VA = "0xC9CF8C")]
	public static void ClearTimeout(float timeToClear)
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0xC9CD9C", Offset = "0xC9CD9C", VA = "0xC9CD9C")]
	public void AddMessage(string message, Color color)
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0xC9CF48", Offset = "0xC9CF48", VA = "0xC9CF48")]
	public void ClearMessages()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0xC9D010", Offset = "0xC9D010", VA = "0xC9D010")]
	public void SetClearTimeout(float timeout)
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0xC9D290", Offset = "0xC9D290", VA = "0xC9D290")]
	private void Prune()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0xC9D020", Offset = "0xC9D020", VA = "0xC9D020")]
	private void Display()
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0xC9D370", Offset = "0xC9D370", VA = "0xC9D370")]
	public OVRLipSyncDebugConsole()
	{
	}
}
[Token(Token = "0x2000106")]
public class OVRNamedArrayAttribute : PropertyAttribute
{
	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string[] names;

	[Token(Token = "0x6000394")]
	[Address(RVA = "0xC9FF6C", Offset = "0xC9FF6C", VA = "0xC9FF6C")]
	public OVRNamedArrayAttribute(string[] names)
	{
	}
}
[Token(Token = "0x2000107")]
public static class OVRTouchpad
{
	[Token(Token = "0x200024D")]
	public enum TouchEvent
	{
		[Token(Token = "0x4000D20")]
		SingleTap,
		[Token(Token = "0x4000D21")]
		DoubleTap,
		[Token(Token = "0x4000D22")]
		Left,
		[Token(Token = "0x4000D23")]
		Right,
		[Token(Token = "0x4000D24")]
		Up,
		[Token(Token = "0x4000D25")]
		Down
	}

	[Token(Token = "0x200024E")]
	public delegate void OVRTouchpadCallback<TouchEvent>(TouchEvent arg);

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 moveAmountMouse;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float minMovMagnitudeMouse;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Delegate touchPadCallbacks;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static OVRTouchpadHelper touchpadHelper;

	[Token(Token = "0x6000395")]
	[Address(RVA = "0xCA5E98", Offset = "0xCA5E98", VA = "0xCA5E98")]
	public static void Create()
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0xCA5E9C", Offset = "0xCA5E9C", VA = "0xCA5E9C")]
	public static void Update()
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0xCA61D0", Offset = "0xCA61D0", VA = "0xCA61D0")]
	public static void OnDisable()
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0xCA600C", Offset = "0xCA600C", VA = "0xCA600C")]
	private static void HandleInputMouse(ref Vector3 move)
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0xCA61D4", Offset = "0xCA61D4", VA = "0xCA61D4")]
	public static void AddListener(OVRTouchpadCallback<TouchEvent> handler)
	{
	}
}
[Token(Token = "0x2000108")]
public sealed class OVRTouchpadHelper : MonoBehaviour
{
	[Token(Token = "0x600039B")]
	[Address(RVA = "0xCA63CC", Offset = "0xCA63CC", VA = "0xCA63CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0xCA6448", Offset = "0xCA6448", VA = "0xCA6448")]
	private void Start()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0xCA64E0", Offset = "0xCA64E0", VA = "0xCA64E0")]
	private void Update()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0xCA653C", Offset = "0xCA653C", VA = "0xCA653C")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0xCA65A0", Offset = "0xCA65A0", VA = "0xCA65A0")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0xCA65A4", Offset = "0xCA65A4", VA = "0xCA65A4")]
	public OVRTouchpadHelper()
	{
	}
}
[Token(Token = "0x2000109")]
public class OVRLipSync : MonoBehaviour
{
	[Token(Token = "0x200024F")]
	public enum Result
	{
		[Token(Token = "0x4000D27")]
		Success = 0,
		[Token(Token = "0x4000D28")]
		Unknown = -2200,
		[Token(Token = "0x4000D29")]
		CannotCreateContext = -2201,
		[Token(Token = "0x4000D2A")]
		InvalidParam = -2202,
		[Token(Token = "0x4000D2B")]
		BadSampleRate = -2203,
		[Token(Token = "0x4000D2C")]
		MissingDLL = -2204,
		[Token(Token = "0x4000D2D")]
		BadVersion = -2205,
		[Token(Token = "0x4000D2E")]
		UndefinedFunction = -2206
	}

	[Token(Token = "0x2000250")]
	public enum AudioDataType
	{
		[Token(Token = "0x4000D30")]
		S16_Mono,
		[Token(Token = "0x4000D31")]
		S16_Stereo,
		[Token(Token = "0x4000D32")]
		F32_Mono,
		[Token(Token = "0x4000D33")]
		F32_Stereo
	}

	[Token(Token = "0x2000251")]
	public enum Viseme
	{
		[Token(Token = "0x4000D35")]
		sil,
		[Token(Token = "0x4000D36")]
		PP,
		[Token(Token = "0x4000D37")]
		FF,
		[Token(Token = "0x4000D38")]
		TH,
		[Token(Token = "0x4000D39")]
		DD,
		[Token(Token = "0x4000D3A")]
		kk,
		[Token(Token = "0x4000D3B")]
		CH,
		[Token(Token = "0x4000D3C")]
		SS,
		[Token(Token = "0x4000D3D")]
		nn,
		[Token(Token = "0x4000D3E")]
		RR,
		[Token(Token = "0x4000D3F")]
		aa,
		[Token(Token = "0x4000D40")]
		E,
		[Token(Token = "0x4000D41")]
		ih,
		[Token(Token = "0x4000D42")]
		oh,
		[Token(Token = "0x4000D43")]
		ou
	}

	[Token(Token = "0x2000252")]
	public enum Signals
	{
		[Token(Token = "0x4000D45")]
		VisemeOn,
		[Token(Token = "0x4000D46")]
		VisemeOff,
		[Token(Token = "0x4000D47")]
		VisemeAmount,
		[Token(Token = "0x4000D48")]
		VisemeSmoothing,
		[Token(Token = "0x4000D49")]
		LaughterAmount
	}

	[Token(Token = "0x2000253")]
	public enum ContextProviders
	{
		[Token(Token = "0x4000D4B")]
		Original,
		[Token(Token = "0x4000D4C")]
		Enhanced,
		[Token(Token = "0x4000D4D")]
		Enhanced_with_Laughter
	}

	[Serializable]
	[Token(Token = "0x2000254")]
	public class Frame
	{
		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int frameNumber;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int frameDelay;

		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] Visemes;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float laughterScore;

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0x16776C0", Offset = "0x16776C0", VA = "0x16776C0")]
		public void CopyInput(Frame input)
		{
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0x1677760", Offset = "0x1677760", VA = "0x1677760")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0x16777F0", Offset = "0x16777F0", VA = "0x16777F0")]
		public Frame()
		{
		}
	}

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int VisemeCount;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly int SignalCount;

	[Token(Token = "0x40004B4")]
	public const string strOVRLS = "OVRLipSync";

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Result sInitialized;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static OVRLipSync sInstance;

	[PreserveSig]
	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x16761BC", Offset = "0x16761BC", VA = "0x16761BC")]
	private static extern int ovrLipSyncDll_Initialize(int samplerate, int buffersize);

	[PreserveSig]
	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x1676268", Offset = "0x1676268", VA = "0x1676268")]
	private static extern void ovrLipSyncDll_Shutdown();

	[PreserveSig]
	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x16762F4", Offset = "0x16762F4", VA = "0x16762F4")]
	private static extern IntPtr ovrLipSyncDll_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[PreserveSig]
	[Token(Token = "0x60003A4")]
	[Address(RVA = "0x16763A4", Offset = "0x16763A4", VA = "0x16763A4")]
	private static extern int ovrLipSyncDll_CreateContextEx(ref uint context, ContextProviders provider, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x60003A5")]
	[Address(RVA = "0x1676468", Offset = "0x1676468", VA = "0x1676468")]
	private static extern int ovrLipSyncDll_CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x1676550", Offset = "0x1676550", VA = "0x1676550")]
	private static extern int ovrLipSyncDll_DestroyContext(uint context);

	[PreserveSig]
	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x16765EC", Offset = "0x16765EC", VA = "0x16765EC")]
	private static extern int ovrLipSyncDll_ResetContext(uint context);

	[PreserveSig]
	[Token(Token = "0x60003A8")]
	[Address(RVA = "0x1676688", Offset = "0x1676688", VA = "0x1676688")]
	private static extern int ovrLipSyncDll_SendSignal(uint context, Signals signal, int arg1, int arg2);

	[PreserveSig]
	[Token(Token = "0x60003A9")]
	[Address(RVA = "0x167674C", Offset = "0x167674C", VA = "0x167674C")]
	private static extern int ovrLipSyncDll_ProcessFrameEx(uint context, IntPtr audioBuffer, uint bufferSize, AudioDataType dataType, ref int frameNumber, ref int frameDelay, float[] visemes, int visemeCount, ref float laughterScore, float[] laughterCategories, int laughterCategoriesLength);

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x1676864", Offset = "0x1676864", VA = "0x1676864")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x1676C14", Offset = "0x1676C14", VA = "0x1676C14")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x1676ADC", Offset = "0x1676ADC", VA = "0x1676ADC")]
	public static Result Initialize()
	{
		return default(Result);
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x1676CF4", Offset = "0x1676CF4", VA = "0x1676CF4")]
	public static Result Initialize(int sampleRate, int bufferSize)
	{
		return default(Result);
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x1676E08", Offset = "0x1676E08", VA = "0x1676E08")]
	public static void Shutdown()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x1676A74", Offset = "0x1676A74", VA = "0x1676A74")]
	public static Result IsInitialized()
	{
		return default(Result);
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x1676E78", Offset = "0x1676E78", VA = "0x1676E78")]
	public static Result CreateContext(ref uint context, ContextProviders provider, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x1676F5C", Offset = "0x1676F5C", VA = "0x1676F5C")]
	public static Result CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x1677048", Offset = "0x1677048", VA = "0x1677048")]
	public static Result DestroyContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x16770DC", Offset = "0x16770DC", VA = "0x16770DC")]
	public static Result ResetContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x1677170", Offset = "0x1677170", VA = "0x1677170")]
	public static Result SendSignal(uint context, Signals signal, int arg1, int arg2)
	{
		return default(Result);
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x1677234", Offset = "0x1677234", VA = "0x1677234")]
	public static Result ProcessFrame(uint context, float[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x16773EC", Offset = "0x16773EC", VA = "0x16773EC")]
	public static Result ProcessFrame(uint context, short[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x167759C", Offset = "0x167759C", VA = "0x167759C")]
	public OVRLipSync()
	{
	}
}
[Token(Token = "0x200010A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8798C4", Offset = "0x8798C4")]
public class OVRLipSyncContext : OVRLipSyncContextBase
{
	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87C17C", Offset = "0x87C17C")]
	public bool enableKeyboardInput;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87C1B4", Offset = "0x87C1B4")]
	public bool enableTouchInput;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87C1EC", Offset = "0x87C1EC")]
	public bool audioLoopback;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87C224", Offset = "0x87C224")]
	public KeyCode loopbackKey;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87C25C", Offset = "0x87C25C")]
	public bool showVisemes;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87C294", Offset = "0x87C294")]
	public KeyCode debugVisemesKey;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87C2CC", Offset = "0x87C2CC")]
	public bool skipAudioSource;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87C304", Offset = "0x87C304")]
	public float gain;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool hasDebugConsole;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public KeyCode debugLaughterKey;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool showLaughter;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float laughterScore;

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x1677878", Offset = "0x1677878", VA = "0x1677878")]
	private void Start()
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x16779B0", Offset = "0x16779B0", VA = "0x16779B0")]
	private void HandleKeyboard()
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x1677DB4", Offset = "0x1677DB4", VA = "0x1677DB4")]
	private void Update()
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x16780E8", Offset = "0x16780E8", VA = "0x16780E8")]
	public void PreprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x1678188", Offset = "0x1678188", VA = "0x1678188")]
	public void PostprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x167822C", Offset = "0x167822C", VA = "0x167822C")]
	public void ProcessAudioSamplesRaw(float[] data, int channels)
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x16783B4", Offset = "0x16783B4", VA = "0x16783B4")]
	public void ProcessAudioSamplesRaw(short[] data, int channels)
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x167853C", Offset = "0x167853C", VA = "0x167853C")]
	public void ProcessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x1678620", Offset = "0x1678620", VA = "0x1678620")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x1677E04", Offset = "0x1677E04", VA = "0x1677E04")]
	private void DebugShowVisemesAndLaughter()
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x1677CD4", Offset = "0x1677CD4", VA = "0x1677CD4")]
	private void ToggleAudioLoopback()
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x1678630", Offset = "0x1678630", VA = "0x1678630")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x1678768", Offset = "0x1678768", VA = "0x1678768")]
	public OVRLipSyncContext()
	{
	}
}
[Token(Token = "0x200010B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x879928", Offset = "0x879928")]
public class OVRLipSyncContextBase : MonoBehaviour
{
	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87C33C", Offset = "0x87C33C")]
	public OVRLipSync.ContextProviders provider;

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87C374", Offset = "0x87C374")]
	public bool enableAcceleration;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRLipSync.Frame frame;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private uint context;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _smoothing;

	[Token(Token = "0x1700001E")]
	public int Smoothing
	{
		[Token(Token = "0x60003C7")]
		[Address(RVA = "0xC9B114", Offset = "0xC9B114", VA = "0xC9B114")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60003C6")]
		[Address(RVA = "0xC9B024", Offset = "0xC9B024", VA = "0xC9B024")]
		set
		{
		}
	}

	[Token(Token = "0x1700001F")]
	public uint Context
	{
		[Token(Token = "0x60003C8")]
		[Address(RVA = "0xC9B11C", Offset = "0xC9B11C", VA = "0xC9B11C")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000020")]
	protected OVRLipSync.Frame Frame
	{
		[Token(Token = "0x60003C9")]
		[Address(RVA = "0xC9B124", Offset = "0xC9B124", VA = "0xC9B124")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0xC9B12C", Offset = "0xC9B12C", VA = "0xC9B12C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0xC9B2C8", Offset = "0xC9B2C8", VA = "0xC9B2C8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0xC9B3F0", Offset = "0xC9B3F0", VA = "0xC9B3F0")]
	public OVRLipSync.Frame GetCurrentPhonemeFrame()
	{
		return null;
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0xC9B3F8", Offset = "0xC9B3F8", VA = "0xC9B3F8")]
	public void SetVisemeBlend(int viseme, int amount)
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0xC9B4F0", Offset = "0xC9B4F0", VA = "0xC9B4F0")]
	public void SetLaughterBlend(int amount)
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0xC9B5BC", Offset = "0xC9B5BC", VA = "0xC9B5BC")]
	public OVRLipSync.Result ResetContext()
	{
		return default(OVRLipSync.Result);
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0xC9B644", Offset = "0xC9B644", VA = "0xC9B644")]
	public OVRLipSyncContextBase()
	{
	}
}
[Token(Token = "0x200010C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x87998C", Offset = "0x87998C")]
public class OVRLipSyncContextCanned : OVRLipSyncContextBase
{
	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87C3AC", Offset = "0x87C3AC")]
	public OVRLipSyncSequence currentSequence;

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xC9B6B8", Offset = "0xC9B6B8", VA = "0xC9B6B8")]
	private void Update()
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xC9B8C8", Offset = "0xC9B8C8", VA = "0xC9B8C8")]
	public OVRLipSyncContextCanned()
	{
	}
}
[Token(Token = "0x200010D")]
public class OVRLipSyncContextMorphTarget : MonoBehaviour
{
	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87C3E4", Offset = "0x87C3E4")]
	public SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87C41C", Offset = "0x87C41C")]
	public int[] visemeToBlendTargets;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87C454", Offset = "0x87C454")]
	public bool enableVisemeTestKeys;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87C48C", Offset = "0x87C48C")]
	public KeyCode[] visemeTestKeys;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87C4C4", Offset = "0x87C4C4")]
	public KeyCode laughterKey;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87C4FC", Offset = "0x87C4FC")]
	public int laughterBlendTarget;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x87C534", Offset = "0x87C534")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87C534", Offset = "0x87C534")]
	public float laughterThreshold;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x87C588", Offset = "0x87C588")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87C588", Offset = "0x87C588")]
	public float laughterMultiplier;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x87C5DC", Offset = "0x87C5DC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87C5DC", Offset = "0x87C5DC")]
	public int smoothAmount;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0xC9B8CC", Offset = "0xC9B8CC", VA = "0xC9B8CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0xC9BA1C", Offset = "0xC9BA1C", VA = "0xC9BA1C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0xC9BD98", Offset = "0xC9BD98", VA = "0xC9BD98")]
	private void CheckForKeys()
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0xC9BB50", Offset = "0xC9BB50", VA = "0xC9BB50")]
	private void SetVisemeToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0xC9BC94", Offset = "0xC9BC94", VA = "0xC9BC94")]
	private void SetLaughterToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0xC9BE7C", Offset = "0xC9BE7C", VA = "0xC9BE7C")]
	private void CheckVisemeKey(KeyCode key, int viseme, int amount)
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0xC9BFA0", Offset = "0xC9BFA0", VA = "0xC9BFA0")]
	private void CheckLaughterKey()
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0xC9C01C", Offset = "0xC9C01C", VA = "0xC9C01C")]
	public OVRLipSyncContextMorphTarget()
	{
	}
}
[Token(Token = "0x200010E")]
public class OVRLipSyncContextTextureFlip : MonoBehaviour
{
	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87C634", Offset = "0x87C634")]
	[AttributeAttribute(Name = "OVRNamedArrayAttribute", RVA = "0x87C634", Offset = "0x87C634")]
	public Texture[] Textures;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x87C7B0", Offset = "0x87C7B0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87C7B0", Offset = "0x87C7B0")]
	public int smoothAmount;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVRLipSync.Frame oldFrame;

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0xC9C114", Offset = "0xC9C114", VA = "0xC9C114")]
	private void Start()
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0xC9C274", Offset = "0xC9C274", VA = "0xC9C274")]
	private void Update()
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0xC9C518", Offset = "0xC9C518", VA = "0xC9C518")]
	private void SetVisemeToTexture()
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0xC9C718", Offset = "0xC9C718", VA = "0xC9C718")]
	public OVRLipSyncContextTextureFlip()
	{
	}
}
[Token(Token = "0x200010F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8799F0", Offset = "0x8799F0")]
public class OVRLipSyncMicInput : MonoBehaviour
{
	[Token(Token = "0x2000255")]
	public enum micActivation
	{
		[Token(Token = "0x4000D53")]
		HoldToSpeak,
		[Token(Token = "0x4000D54")]
		PushToSpeak,
		[Token(Token = "0x4000D55")]
		ConstantSpeak
	}

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87C808", Offset = "0x87C808")]
	public AudioSource audioSource;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87C840", Offset = "0x87C840")]
	public bool enableMicSelectionGUI;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87C878", Offset = "0x87C878")]
	public KeyCode micSelectionGUIKey;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x87C8B0", Offset = "0x87C8B0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87C8B0", Offset = "0x87C8B0")]
	private float micInputVolume;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87C918", Offset = "0x87C918")]
	private int micFrequency;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87C964", Offset = "0x87C964")]
	public micActivation micControl;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87C99C", Offset = "0x87C99C")]
	public KeyCode micActivationKey;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87C9D4", Offset = "0x87C9D4")]
	public string selectedDevice;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool micSelected;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int minFreq;

	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int maxFreq;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool focused;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool initialized;

	[Token(Token = "0x17000021")]
	public float MicFrequency
	{
		[Token(Token = "0x60003DF")]
		[Address(RVA = "0xC9D3E4", Offset = "0xC9D3E4", VA = "0xC9D3E4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60003E0")]
		[Address(RVA = "0xC9D3F0", Offset = "0xC9D3F0", VA = "0xC9D3F0")]
		set
		{
		}
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0xC9D47C", Offset = "0xC9D47C", VA = "0xC9D47C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0xC9D53C", Offset = "0xC9D53C", VA = "0xC9D53C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0xC9D59C", Offset = "0xC9D59C", VA = "0xC9D59C")]
	private void InitializeMicrophone()
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0xC9D708", Offset = "0xC9D708", VA = "0xC9D708")]
	private void Update()
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0xC9DBC0", Offset = "0xC9DBC0", VA = "0xC9DBC0")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0xC9DBD4", Offset = "0xC9DBD4", VA = "0xC9DBD4")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0xC9DBEC", Offset = "0xC9DBEC", VA = "0xC9DBEC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0xC9DBF0", Offset = "0xC9DBF0", VA = "0xC9DBF0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0xC9DC68", Offset = "0xC9DC68", VA = "0xC9DC68")]
	public void MicDeviceGUI(float left, float top, float width, float height, float buttonSpaceTop, float buttonSpaceLeft)
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xC9D640", Offset = "0xC9D640", VA = "0xC9D640")]
	public void GetMicCaps()
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0xC9D9F8", Offset = "0xC9D9F8", VA = "0xC9D9F8")]
	public void StartMicrophone()
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0xC9D878", Offset = "0xC9D878", VA = "0xC9D878")]
	public void StopMicrophone()
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0xC9DE90", Offset = "0xC9DE90", VA = "0xC9DE90")]
	private float GetAveragedVolume()
	{
		return default(float);
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0xC9DE98", Offset = "0xC9DE98", VA = "0xC9DE98")]
	public OVRLipSyncMicInput()
	{
	}
}
[Serializable]
[Token(Token = "0x2000110")]
public class OVRLipSyncSequence : ScriptableObject
{
	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<OVRLipSync.Frame> entries;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float length;

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xC9B7D0", Offset = "0xC9B7D0", VA = "0xC9B7D0")]
	public OVRLipSync.Frame GetFrameAtTime(float time)
	{
		return null;
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0xC9DEC8", Offset = "0xC9DEC8", VA = "0xC9DEC8")]
	public OVRLipSyncSequence()
	{
	}
}
[Token(Token = "0x2000111")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x2000256")]
	public delegate void OnClick();

	[Token(Token = "0x2000257")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x2000258")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x2000259")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x200025A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B48C", Offset = "0x87B48C")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0xA31D18", Offset = "0xA31D18", VA = "0xA31D18")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0xA32850", Offset = "0xA32850", VA = "0xA32850")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x200025B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B49C", Offset = "0x87B49C")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0xA3201C", Offset = "0xA3201C", VA = "0xA3201C")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0xA32C7C", Offset = "0xA32C7C", VA = "0xA32C7C")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x200025C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B4AC", Offset = "0x87B4AC")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0xA32268", Offset = "0xA32268", VA = "0xA32268")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0xA33108", Offset = "0xA33108", VA = "0xA33108")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x200025D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B4BC", Offset = "0x87B4BC")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0xA3243C", Offset = "0xA3243C", VA = "0xA3243C")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0xA3386C", Offset = "0xA3386C", VA = "0xA3386C")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x200025E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B4CC", Offset = "0x87B4CC")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0xA32718", Offset = "0xA32718", VA = "0xA32718")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0xA3389C", Offset = "0xA3389C", VA = "0xA3389C")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x40004E8")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x40004E9")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x40004EA")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] reEnable;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x40004F7")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x40004F8")]
	private const float marginH = 16f;

	[Token(Token = "0x40004F9")]
	private const float marginV = 16f;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2[] insertPositions;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 menuOffset;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private OVRCameraRig rig;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private LaserPointer lp;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LineRenderer lr;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xA30728", Offset = "0xA30728", VA = "0xA30728")]
	public void Awake()
	{
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xA30C50", Offset = "0xA30C50", VA = "0xA30C50")]
	public void Show()
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xA3145C", Offset = "0xA3145C", VA = "0xA3145C")]
	public void Hide()
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0xA3115C", Offset = "0xA3115C", VA = "0xA3115C")]
	private void Relayout()
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0xA31650", Offset = "0xA31650", VA = "0xA31650")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0xA31A0C", Offset = "0xA31A0C", VA = "0xA31A0C")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0xA31D20", Offset = "0xA31D20", VA = "0xA31D20")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0xA31E28", Offset = "0xA31E28", VA = "0xA31E28")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0xA32024", Offset = "0xA32024", VA = "0xA32024")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0xA320C0", Offset = "0xA320C0", VA = "0xA320C0")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0xA32270", Offset = "0xA32270", VA = "0xA32270")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0xA32444", Offset = "0xA32444", VA = "0xA32444")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0xA32720", Offset = "0xA32720", VA = "0xA32720")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0xA327E0", Offset = "0xA327E0", VA = "0xA327E0")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x2000112")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0xA448C4", Offset = "0xA448C4", VA = "0xA448C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0xA4494C", Offset = "0xA4494C", VA = "0xA4494C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0xA449CC", Offset = "0xA449CC", VA = "0xA449CC")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0xA44A3C", Offset = "0xA44A3C", VA = "0xA44A3C")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x2000113")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x200025F")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4000D5F")]
		On,
		[Token(Token = "0x4000D60")]
		Off,
		[Token(Token = "0x4000D61")]
		OnWhenHitTarget
	}

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000022")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x6000404")]
		[Address(RVA = "0xB22150", Offset = "0xB22150", VA = "0xB22150")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x6000403")]
		[Address(RVA = "0xB220F4", Offset = "0xB220F4", VA = "0xB220F4")]
		set
		{
		}
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0xB22158", Offset = "0xB22158", VA = "0xB22158")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0xB221B0", Offset = "0xB221B0", VA = "0xB221B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0xB222D0", Offset = "0xB222D0", VA = "0xB222D0", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0xB222EC", Offset = "0xB222EC", VA = "0xB222EC", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0xB22364", Offset = "0xB22364", VA = "0xB22364")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0xB22648", Offset = "0xB22648", VA = "0xB22648")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0xB227A4", Offset = "0xB227A4", VA = "0xB227A4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0xB22840", Offset = "0xB22840", VA = "0xB22840")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xB22924", Offset = "0xB22924", VA = "0xB22924")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xB229E4", Offset = "0xB229E4", VA = "0xB229E4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xB22AB0", Offset = "0xB22AB0", VA = "0xB22AB0")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x2000114")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87CAAC", Offset = "0x87CAAC")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87CAE4", Offset = "0x87CAE4")]
	public bool EnableCollision;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask CollideLayers;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87CB1C", Offset = "0x87CB1C")]
	public float MaxFade;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87CB54", Offset = "0x87CB54")]
	public float FadeMinDistance;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float PreferredHeight;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87CB8C", Offset = "0x87CB8C")]
	public float FadeMaxDistance;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _cameraUpdateAction;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action _preCharacterMovementAction;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CapsuleCollider _character;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xA2E75C", Offset = "0xA2E75C", VA = "0xA2E75C")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xA2E7E4", Offset = "0xA2E7E4", VA = "0xA2E7E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xA2E854", Offset = "0xA2E854", VA = "0xA2E854")]
	private void Start()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0xA2E858", Offset = "0xA2E858", VA = "0xA2E858")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0xA2E890", Offset = "0xA2E890", VA = "0xA2E890")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0xA2E8C8", Offset = "0xA2E8C8", VA = "0xA2E8C8")]
	private void CameraUpdate()
	{
	}
}
[Token(Token = "0x2000115")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x6000416")]
	[Address(RVA = "0xB250A0", Offset = "0xB250A0", VA = "0xB250A0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0xB2514C", Offset = "0xB2514C", VA = "0xB2514C")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x2000116")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x2000260")]
	public enum States
	{
		[Token(Token = "0x4000D63")]
		Ready,
		[Token(Token = "0x4000D64")]
		Aim,
		[Token(Token = "0x4000D65")]
		CancelAim,
		[Token(Token = "0x4000D66")]
		PreTeleport,
		[Token(Token = "0x4000D67")]
		CancelTeleport,
		[Token(Token = "0x4000D68")]
		Teleporting,
		[Token(Token = "0x4000D69")]
		PostTeleport
	}

	[Token(Token = "0x2000261")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x4000D6B")]
		None,
		[Token(Token = "0x4000D6C")]
		Aim,
		[Token(Token = "0x4000D6D")]
		PreTeleport,
		[Token(Token = "0x4000D6E")]
		Teleport
	}

	[Token(Token = "0x2000262")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4000D70")]
		Point,
		[Token(Token = "0x4000D71")]
		Sphere,
		[Token(Token = "0x4000D72")]
		Capsule
	}

	[Token(Token = "0x2000263")]
	public class AimData
	{
		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881D00", Offset = "0x881D00")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x170000EE")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6000C07")]
			[Address(RVA = "0xB2920C", Offset = "0xB2920C", VA = "0xB2920C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88615C", Offset = "0x88615C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C08")]
			[Address(RVA = "0xB29204", Offset = "0xB29204", VA = "0xB29204")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88616C", Offset = "0x88616C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0xB29190", Offset = "0xB29190", VA = "0xB29190")]
		public AimData()
		{
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0xB29214", Offset = "0xB29214", VA = "0xB29214")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000264")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B4DC", Offset = "0x87B4DC")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000EF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C0D")]
			[Address(RVA = "0xB28F6C", Offset = "0xB28F6C", VA = "0xB28F6C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C0F")]
			[Address(RVA = "0xB28FDC", Offset = "0xB28FDC", VA = "0xB28FDC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0xB26AA4", Offset = "0xB26AA4", VA = "0xB26AA4")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0xB28E00", Offset = "0xB28E00", VA = "0xB28E00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0xB28E04", Offset = "0xB28E04", VA = "0xB28E04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0xB28F74", Offset = "0xB28F74", VA = "0xB28F74", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000265")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B4EC", Offset = "0x87B4EC")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000F1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C13")]
			[Address(RVA = "0xB2873C", Offset = "0xB2873C", VA = "0xB2873C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C15")]
			[Address(RVA = "0xB287AC", Offset = "0xB287AC", VA = "0xB287AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0xB27140", Offset = "0xB27140", VA = "0xB27140")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0xB28570", Offset = "0xB28570", VA = "0xB28570", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0xB28574", Offset = "0xB28574", VA = "0xB28574", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0xB28744", Offset = "0xB28744", VA = "0xB28744", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000266")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B4FC", Offset = "0x87B4FC")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000F3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C19")]
			[Address(RVA = "0xB28890", Offset = "0xB28890", VA = "0xB28890", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C1B")]
			[Address(RVA = "0xB28900", Offset = "0xB28900", VA = "0xB28900", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0xB273B8", Offset = "0xB273B8", VA = "0xB273B8")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0xB287B4", Offset = "0xB287B4", VA = "0xB287B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0xB287B8", Offset = "0xB287B8", VA = "0xB287B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0xB28898", Offset = "0xB28898", VA = "0xB28898", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000267")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B50C", Offset = "0x87B50C")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000F5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C1F")]
			[Address(RVA = "0xB28D88", Offset = "0xB28D88", VA = "0xB28D88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C21")]
			[Address(RVA = "0xB28DF8", Offset = "0xB28DF8", VA = "0xB28DF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0xB27630", Offset = "0xB27630", VA = "0xB27630")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0xB28C3C", Offset = "0xB28C3C", VA = "0xB28C3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0xB28C40", Offset = "0xB28C40", VA = "0xB28C40", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0xB28D90", Offset = "0xB28D90", VA = "0xB28D90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000268")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B51C", Offset = "0x87B51C")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000F7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C25")]
			[Address(RVA = "0xB289E4", Offset = "0xB289E4", VA = "0xB289E4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C27")]
			[Address(RVA = "0xB28A54", Offset = "0xB28A54", VA = "0xB28A54", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0xB278A8", Offset = "0xB278A8", VA = "0xB278A8")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0xB28908", Offset = "0xB28908", VA = "0xB28908", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0xB2890C", Offset = "0xB2890C", VA = "0xB2890C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0xB289EC", Offset = "0xB289EC", VA = "0xB289EC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000269")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B52C", Offset = "0x87B52C")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000F9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C2B")]
			[Address(RVA = "0xB29118", Offset = "0xB29118", VA = "0xB29118", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C2D")]
			[Address(RVA = "0xB29188", Offset = "0xB29188", VA = "0xB29188", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0xB27B20", Offset = "0xB27B20", VA = "0xB27B20")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0xB28FE4", Offset = "0xB28FE4", VA = "0xB28FE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0xB28FE8", Offset = "0xB28FE8", VA = "0xB28FE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0xB29120", Offset = "0xB29120", VA = "0xB29120", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200026A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B53C", Offset = "0x87B53C")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000FB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C31")]
			[Address(RVA = "0xB28BC4", Offset = "0xB28BC4", VA = "0xB28BC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C33")]
			[Address(RVA = "0xB28C34", Offset = "0xB28C34", VA = "0xB28C34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0xB27D98", Offset = "0xB27D98", VA = "0xB27D98")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0xB28A5C", Offset = "0xB28A5C", VA = "0xB28A5C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0xB28A60", Offset = "0xB28A60", VA = "0xB28A60", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0xB28BCC", Offset = "0xB28BCC", VA = "0xB28BCC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87CBC4", Offset = "0x87CBC4")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87CBFC", Offset = "0x87CBFC")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87CC34", Offset = "0x87CC34")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87CC6C", Offset = "0x87CC6C")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87CCA4", Offset = "0x87CCA4")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87CCDC", Offset = "0x87CCDC")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87CD14", Offset = "0x87CD14")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87CD4C", Offset = "0x87CD4C")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CD84", Offset = "0x87CD84")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87CD94", Offset = "0x87CD94")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87CDCC", Offset = "0x87CDCC")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87CE14", Offset = "0x87CE14")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87CE24", Offset = "0x87CE24")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87CE5C", Offset = "0x87CE5C")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87CE94", Offset = "0x87CE94")]
	public float AimCollisionRadius;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87CECC", Offset = "0x87CECC")]
	public float AimCollisionHeight;

	[Token(Token = "0x17000023")]
	public States CurrentState
	{
		[Token(Token = "0x600041A")]
		[Address(RVA = "0xB25DAC", Offset = "0xB25DAC", VA = "0xB25DAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x882760", Offset = "0x882760")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x600041B")]
		[Address(RVA = "0xB25DB4", Offset = "0xB25DB4", VA = "0xB25DB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x882770", Offset = "0x882770")]
		private set
		{
		}
	}

	[Token(Token = "0x17000024")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x600041F")]
		[Address(RVA = "0xB26074", Offset = "0xB26074", VA = "0xB26074")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000025")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x6000420")]
		[Address(RVA = "0xB260B4", Offset = "0xB260B4", VA = "0xB260B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8827A0", Offset = "0x8827A0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000421")]
		[Address(RVA = "0xB260BC", Offset = "0xB260BC", VA = "0xB260BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8827B0", Offset = "0x8827B0")]
		private set
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x600041C")]
		[Address(RVA = "0xB25DBC", Offset = "0xB25DBC", VA = "0xB25DBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x882780", Offset = "0x882780")]
		add
		{
		}
		[Token(Token = "0x600041D")]
		[Address(RVA = "0xB25EA8", Offset = "0xB25EA8", VA = "0xB25EA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x882790", Offset = "0x882790")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x600042B")]
		[Address(RVA = "0xB268CC", Offset = "0xB268CC", VA = "0xB268CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8827F8", Offset = "0x8827F8")]
		add
		{
		}
		[Token(Token = "0x600042C")]
		[Address(RVA = "0xB269B8", Offset = "0xB269B8", VA = "0xB269B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x882808", Offset = "0x882808")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x600042E")]
		[Address(RVA = "0xB26AD0", Offset = "0xB26AD0", VA = "0xB26AD0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88287C", Offset = "0x88287C")]
		add
		{
		}
		[Token(Token = "0x600042F")]
		[Address(RVA = "0xB26BBC", Offset = "0xB26BBC", VA = "0xB26BBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88288C", Offset = "0x88288C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x6000430")]
		[Address(RVA = "0xB26CA8", Offset = "0xB26CA8", VA = "0xB26CA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88289C", Offset = "0x88289C")]
		add
		{
		}
		[Token(Token = "0x6000431")]
		[Address(RVA = "0xB26D94", Offset = "0xB26D94", VA = "0xB26D94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8828AC", Offset = "0x8828AC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x6000433")]
		[Address(RVA = "0xB26EF4", Offset = "0xB26EF4", VA = "0xB26EF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8828BC", Offset = "0x8828BC")]
		add
		{
		}
		[Token(Token = "0x6000434")]
		[Address(RVA = "0xB26FE0", Offset = "0xB26FE0", VA = "0xB26FE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8828CC", Offset = "0x8828CC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x6000436")]
		[Address(RVA = "0xB2716C", Offset = "0xB2716C", VA = "0xB2716C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x882940", Offset = "0x882940")]
		add
		{
		}
		[Token(Token = "0x6000437")]
		[Address(RVA = "0xB27258", Offset = "0xB27258", VA = "0xB27258")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x882950", Offset = "0x882950")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x6000439")]
		[Address(RVA = "0xB273E4", Offset = "0xB273E4", VA = "0xB273E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8829C4", Offset = "0x8829C4")]
		add
		{
		}
		[Token(Token = "0x600043A")]
		[Address(RVA = "0xB274D0", Offset = "0xB274D0", VA = "0xB274D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8829D4", Offset = "0x8829D4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x600043C")]
		[Address(RVA = "0xB2765C", Offset = "0xB2765C", VA = "0xB2765C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x882A48", Offset = "0x882A48")]
		add
		{
		}
		[Token(Token = "0x600043D")]
		[Address(RVA = "0xB27748", Offset = "0xB27748", VA = "0xB27748")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x882A58", Offset = "0x882A58")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x600043F")]
		[Address(RVA = "0xB278D4", Offset = "0xB278D4", VA = "0xB278D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x882ACC", Offset = "0x882ACC")]
		add
		{
		}
		[Token(Token = "0x6000440")]
		[Address(RVA = "0xB279C0", Offset = "0xB279C0", VA = "0xB279C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x882ADC", Offset = "0x882ADC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x6000442")]
		[Address(RVA = "0xB27B4C", Offset = "0xB27B4C", VA = "0xB27B4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x882B50", Offset = "0x882B50")]
		add
		{
		}
		[Token(Token = "0x6000443")]
		[Address(RVA = "0xB27C38", Offset = "0xB27C38", VA = "0xB27C38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x882B60", Offset = "0x882B60")]
		remove
		{
		}
	}

	[Token(Token = "0x14000010")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x6000445")]
		[Address(RVA = "0xB27DC4", Offset = "0xB27DC4", VA = "0xB27DC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x882BD4", Offset = "0x882BD4")]
		add
		{
		}
		[Token(Token = "0x6000446")]
		[Address(RVA = "0xB27EB0", Offset = "0xB27EB0", VA = "0xB27EB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x882BE4", Offset = "0x882BE4")]
		remove
		{
		}
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xB259C4", Offset = "0xB259C4", VA = "0xB259C4")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0xB259E8", Offset = "0xB259E8", VA = "0xB259E8")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0xB25F94", Offset = "0xB25F94", VA = "0xB25F94")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0xB260C4", Offset = "0xB260C4", VA = "0xB260C4")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0xB2646C", Offset = "0xB2646C", VA = "0xB2646C")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8827C0", Offset = "0x8827C0")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0xB26524", Offset = "0xB26524", VA = "0xB26524")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0xB2664C", Offset = "0xB2664C", VA = "0xB2664C")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0xB2667C", Offset = "0xB2667C", VA = "0xB2667C")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0xB26748", Offset = "0xB26748", VA = "0xB26748")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0xB267C4", Offset = "0xB267C4", VA = "0xB267C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0xB26820", Offset = "0xB26820", VA = "0xB26820", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0xB268C4", Offset = "0xB268C4", VA = "0xB268C4", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0xB26850", Offset = "0xB26850", VA = "0xB26850")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x882818", Offset = "0x882818")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0xB26E80", Offset = "0xB26E80", VA = "0xB26E80")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0xB270CC", Offset = "0xB270CC", VA = "0xB270CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8828DC", Offset = "0x8828DC")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0xB27344", Offset = "0xB27344", VA = "0xB27344")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x882960", Offset = "0x882960")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0xB275BC", Offset = "0xB275BC", VA = "0xB275BC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8829E4", Offset = "0x8829E4")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0xB27834", Offset = "0xB27834", VA = "0xB27834")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x882A68", Offset = "0x882A68")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0xB27AAC", Offset = "0xB27AAC", VA = "0xB27AAC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x882AEC", Offset = "0x882AEC")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0xB27D24", Offset = "0xB27D24", VA = "0xB27D24")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x882B70", Offset = "0x882B70")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0xB27F9C", Offset = "0xB27F9C", VA = "0xB27F9C")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0xB28140", Offset = "0xB28140", VA = "0xB28140")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0xB28198", Offset = "0xB28198", VA = "0xB28198")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0xB283D0", Offset = "0xB283D0", VA = "0xB283D0")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0xB28560", Offset = "0xB28560", VA = "0xB28560")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x2000117")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x14000011")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x600044C")]
		[Address(RVA = "0xA1A578", Offset = "0xA1A578", VA = "0xA1A578")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x882BF4", Offset = "0x882BF4")]
		add
		{
		}
		[Token(Token = "0x600044D")]
		[Address(RVA = "0xA1A664", Offset = "0xA1A664", VA = "0xA1A664")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x882C04", Offset = "0x882C04")]
		remove
		{
		}
	}

	[Token(Token = "0x14000012")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x600044E")]
		[Address(RVA = "0xA1A750", Offset = "0xA1A750", VA = "0xA1A750")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x882C14", Offset = "0x882C14")]
		add
		{
		}
		[Token(Token = "0x600044F")]
		[Address(RVA = "0xA1A83C", Offset = "0xA1A83C", VA = "0xA1A83C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x882C24", Offset = "0x882C24")]
		remove
		{
		}
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0xA1A928", Offset = "0xA1A928", VA = "0xA1A928")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0xA1A9D0", Offset = "0xA1A9D0", VA = "0xA1A9D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0xA1A9D4", Offset = "0xA1A9D4", VA = "0xA1A9D4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0xA1AA48", Offset = "0xA1AA48", VA = "0xA1AA48")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0xA1AC50", Offset = "0xA1AC50", VA = "0xA1AC50")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0xA1AF78", Offset = "0xA1AF78", VA = "0xA1AF78")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0xA1B198", Offset = "0xA1B198", VA = "0xA1B198")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x2000118")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x6000457")]
	[Address(RVA = "0xA7987C", Offset = "0xA7987C", VA = "0xA7987C", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0xA7991C", Offset = "0xA7991C", VA = "0xA7991C", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000459")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x600045A")]
	[Address(RVA = "0xA799F8", Offset = "0xA799F8", VA = "0xA799F8")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x2000119")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87CFC4", Offset = "0x87CFC4")]
	public float Range;

	[Token(Token = "0x600045B")]
	[Address(RVA = "0xA79A08", Offset = "0xA79A08", VA = "0xA79A08", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0xA79BB8", Offset = "0xA79BB8", VA = "0xA79BB8")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x200011A")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87CFFC", Offset = "0x87CFFC")]
	public float Range;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87D034", Offset = "0x87D034")]
	public float MinimumElevation;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87D06C", Offset = "0x87D06C")]
	public float Gravity;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87D0A4", Offset = "0x87D0A4")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x87D0A4", Offset = "0x87D0A4")]
	public float AimVelocity;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87D100", Offset = "0x87D100")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x87D100", Offset = "0x87D100")]
	public float AimStep;

	[Token(Token = "0x600045D")]
	[Address(RVA = "0xA79BC8", Offset = "0xA79BC8", VA = "0xA79BC8", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0xA79E2C", Offset = "0xA79E2C", VA = "0xA79E2C")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x200011B")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87D158", Offset = "0x87D158")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x600045F")]
	[Address(RVA = "0xA79E40", Offset = "0xA79E40", VA = "0xA79E40")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0xA79F24", Offset = "0xA79F24", VA = "0xA79F24")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0xA79F70", Offset = "0xA79F70", VA = "0xA79F70")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0xA79FBC", Offset = "0xA79FBC", VA = "0xA79FBC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0xA7A070", Offset = "0xA7A070", VA = "0xA7A070", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0xA7A110", Offset = "0xA7A110", VA = "0xA7A110", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0xA7A1AC", Offset = "0xA7A1AC", VA = "0xA7A1AC")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x200011C")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D190", Offset = "0x87D190")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87D1A0", Offset = "0x87D1A0")]
	public Transform PositionIndicator;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87D1D8", Offset = "0x87D1D8")]
	public Transform OrientationIndicator;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87D210", Offset = "0x87D210")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x17000026")]
	public bool IsValidDestination
	{
		[Token(Token = "0x6000466")]
		[Address(RVA = "0xA7A368", Offset = "0xA7A368", VA = "0xA7A368")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x882C34", Offset = "0x882C34")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000467")]
		[Address(RVA = "0xA7A370", Offset = "0xA7A370", VA = "0xA7A370")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x882C44", Offset = "0x882C44")]
		private set
		{
		}
	}

	[Token(Token = "0x14000013")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x600046C")]
		[Address(RVA = "0xA7A580", Offset = "0xA7A580", VA = "0xA7A580")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x882C54", Offset = "0x882C54")]
		add
		{
		}
		[Token(Token = "0x600046D")]
		[Address(RVA = "0xA7A66C", Offset = "0xA7A66C", VA = "0xA7A66C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x882C64", Offset = "0x882C64")]
		remove
		{
		}
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0xA7A37C", Offset = "0xA7A37C", VA = "0xA7A37C")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0xA7A40C", Offset = "0xA7A40C", VA = "0xA7A40C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0xA7A528", Offset = "0xA7A528", VA = "0xA7A528")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0xA7A57C", Offset = "0xA7A57C", VA = "0xA7A57C")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0xA7A758", Offset = "0xA7A758", VA = "0xA7A758")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0xA7A7C0", Offset = "0xA7A7C0", VA = "0xA7A7C0")]
	public void Recycle()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0xA7A7F8", Offset = "0xA7A7F8", VA = "0xA7A7F8", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x200011D")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x200026B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B54C", Offset = "0x87B54C")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x170000FD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C37")]
			[Address(RVA = "0xA7B050", Offset = "0xA7B050", VA = "0xA7B050", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C39")]
			[Address(RVA = "0xA7B0C0", Offset = "0xA7B0C0", VA = "0xA7B0C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0xA7AD68", Offset = "0xA7AD68", VA = "0xA7AD68")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0xA7AFB4", Offset = "0xA7AFB4", VA = "0xA7AFB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0xA7AFB8", Offset = "0xA7AFB8", VA = "0xA7AFB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0xA7B058", Offset = "0xA7B058", VA = "0xA7B058", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200026C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B55C", Offset = "0x87B55C")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x170000FF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C3D")]
			[Address(RVA = "0xA7AF3C", Offset = "0xA7AF3C", VA = "0xA7AF3C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000100")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C3F")]
			[Address(RVA = "0xA7AFAC", Offset = "0xA7AFAC", VA = "0xA7AFAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0xA7AE08", Offset = "0xA7AE08", VA = "0xA7AE08")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0xA7AE8C", Offset = "0xA7AE8C", VA = "0xA7AE8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0xA7AE90", Offset = "0xA7AE90", VA = "0xA7AE90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0xA7AF44", Offset = "0xA7AF44", VA = "0xA7AF44", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x6000471")]
	[Address(RVA = "0xA7AAD4", Offset = "0xA7AAD4", VA = "0xA7AAD4")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0xA7AB80", Offset = "0xA7AB80", VA = "0xA7AB80", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0xA7AC04", Offset = "0xA7AC04", VA = "0xA7AC04", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0xA7ACF4", Offset = "0xA7ACF4", VA = "0xA7ACF4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x882C74", Offset = "0x882C74")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0xA7AD94", Offset = "0xA7AD94", VA = "0xA7AD94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x882CD8", Offset = "0x882CD8")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000476")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x6000477")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x6000478")]
	[Address(RVA = "0xA7AE34", Offset = "0xA7AE34", VA = "0xA7AE34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x882D3C", Offset = "0x882D3C")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0xA7AE60", Offset = "0xA7AE60", VA = "0xA7AE60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x882D4C", Offset = "0x882D4C")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x200011E")]
public class TeleportInputHandlerAvatarTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x200026D")]
	public enum InputModes
	{
		[Token(Token = "0x4000D94")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4000D95")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4000D96")]
		ThumbstickTeleport,
		[Token(Token = "0x4000D97")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x200026E")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4000D99")]
		A,
		[Token(Token = "0x4000D9A")]
		B,
		[Token(Token = "0x4000D9B")]
		LeftTrigger,
		[Token(Token = "0x4000D9C")]
		LeftThumbstick,
		[Token(Token = "0x4000D9D")]
		RightTrigger,
		[Token(Token = "0x4000D9E")]
		RightThumbstick,
		[Token(Token = "0x4000D9F")]
		X,
		[Token(Token = "0x4000DA0")]
		Y
	}

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87D258", Offset = "0x87D258")]
	public OvrAvatar Avatar;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87D290", Offset = "0x87D290")]
	public InputModes InputMode;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87D2C8", Offset = "0x87D2C8")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87D300", Offset = "0x87D300")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87D338", Offset = "0x87D338")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x600047A")]
	[Address(RVA = "0xA7B0C8", Offset = "0xA7B0C8", VA = "0xA7B0C8")]
	private void Start()
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0xA7B1A8", Offset = "0xA7B1A8", VA = "0xA7B1A8", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0xA7B7C8", Offset = "0xA7B7C8", VA = "0xA7B7C8", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0xA7B8C8", Offset = "0xA7B8C8", VA = "0xA7B8C8")]
	public TeleportInputHandlerAvatarTouch()
	{
	}
}
[Token(Token = "0x200011F")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D370", Offset = "0x87D370")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87D380", Offset = "0x87D380")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87D3B8", Offset = "0x87D3B8")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87D3F0", Offset = "0x87D3F0")]
	public bool FastTeleport;

	[Token(Token = "0x17000027")]
	public Transform Pointer
	{
		[Token(Token = "0x600047E")]
		[Address(RVA = "0xA7B978", Offset = "0xA7B978", VA = "0xA7B978")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x882D5C", Offset = "0x882D5C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600047F")]
		[Address(RVA = "0xA7B980", Offset = "0xA7B980", VA = "0xA7B980")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x882D6C", Offset = "0x882D6C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0xA7B660", Offset = "0xA7B660", VA = "0xA7B660", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0xA7B988", Offset = "0xA7B988", VA = "0xA7B988", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0xA7B974", Offset = "0xA7B974", VA = "0xA7B974")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x2000120")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x200026F")]
	public enum InputModes
	{
		[Token(Token = "0x4000DA2")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4000DA3")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4000DA4")]
		ThumbstickTeleport,
		[Token(Token = "0x4000DA5")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x2000270")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4000DA7")]
		A,
		[Token(Token = "0x4000DA8")]
		B,
		[Token(Token = "0x4000DA9")]
		LeftTrigger,
		[Token(Token = "0x4000DAA")]
		LeftThumbstick,
		[Token(Token = "0x4000DAB")]
		RightTrigger,
		[Token(Token = "0x4000DAC")]
		RightThumbstick,
		[Token(Token = "0x4000DAD")]
		X,
		[Token(Token = "0x4000DAE")]
		Y
	}

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87D428", Offset = "0x87D428")]
	public InputModes InputMode;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87D460", Offset = "0x87D460")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87D498", Offset = "0x87D498")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87D4D0", Offset = "0x87D4D0")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6000483")]
	[Address(RVA = "0xA7BA78", Offset = "0xA7BA78", VA = "0xA7BA78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0xA7BA7C", Offset = "0xA7BA7C", VA = "0xA7BA7C", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0xA7BF34", Offset = "0xA7BF34", VA = "0xA7BF34", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0xA7C004", Offset = "0xA7C004", VA = "0xA7C004")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x2000121")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x2000271")]
	public enum OrientationModes
	{
		[Token(Token = "0x4000DB0")]
		HeadRelative,
		[Token(Token = "0x4000DB1")]
		ForwardFacing
	}

	[Token(Token = "0x2000272")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B56C", Offset = "0x87B56C")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x17000101")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C43")]
			[Address(RVA = "0xA7C554", Offset = "0xA7C554", VA = "0xA7C554", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000102")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C45")]
			[Address(RVA = "0xA7C5C4", Offset = "0xA7C5C4", VA = "0xA7C5C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0xA7C2BC", Offset = "0xA7C2BC", VA = "0xA7C2BC")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0xA7C468", Offset = "0xA7C468", VA = "0xA7C468", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0xA7C46C", Offset = "0xA7C46C", VA = "0xA7C46C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0xA7C55C", Offset = "0xA7C55C", VA = "0xA7C55C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x6000487")]
	[Address(RVA = "0xA7C0B0", Offset = "0xA7C0B0", VA = "0xA7C0B0")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0xA7C164", Offset = "0xA7C164", VA = "0xA7C164")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0xA7C16C", Offset = "0xA7C16C", VA = "0xA7C16C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0xA7C1DC", Offset = "0xA7C1DC", VA = "0xA7C1DC", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0xA7C248", Offset = "0xA7C248", VA = "0xA7C248")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x882D7C", Offset = "0x882D7C")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600048C")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x600048D")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x600048E")]
	[Address(RVA = "0xA7C2E8", Offset = "0xA7C2E8", VA = "0xA7C2E8")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0xA7C43C", Offset = "0xA7C43C", VA = "0xA7C43C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x882DE0", Offset = "0x882DE0")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000122")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x6000490")]
	[Address(RVA = "0xA7C5CC", Offset = "0xA7C5CC", VA = "0xA7C5CC", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0xA7C5D0", Offset = "0xA7C5D0", VA = "0xA7C5D0", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0xA7C68C", Offset = "0xA7C68C", VA = "0xA7C68C")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x2000123")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87D508", Offset = "0x87D508")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87D540", Offset = "0x87D540")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87D578", Offset = "0x87D578")]
	public float AimDistanceThreshold;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87D5B0", Offset = "0x87D5B0")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x6000493")]
	[Address(RVA = "0xA7C690", Offset = "0xA7C690", VA = "0xA7C690", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0xA7C700", Offset = "0xA7C700", VA = "0xA7C700", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0xA7CC6C", Offset = "0xA7CC6C", VA = "0xA7CC6C")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x2000124")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87D5E8", Offset = "0x87D5E8")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87D620", Offset = "0x87D620")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87D658", Offset = "0x87D658")]
	public float RotateStickThreshold;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x6000496")]
	[Address(RVA = "0xA7CC70", Offset = "0xA7CC70", VA = "0xA7CC70", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0xA7CCBC", Offset = "0xA7CCBC", VA = "0xA7CCBC", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0xA7D1A0", Offset = "0xA7D1A0", VA = "0xA7D1A0")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x2000125")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x6000499")]
	[Address(RVA = "0xA7D1B0", Offset = "0xA7D1B0", VA = "0xA7D1B0")]
	private void Start()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0xA7D1B4", Offset = "0xA7D1B4", VA = "0xA7D1B4")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0xA7D1BC", Offset = "0xA7D1BC", VA = "0xA7D1BC")]
	private void Update()
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0xA7D2B8", Offset = "0xA7D2B8", VA = "0xA7D2B8")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0xA7D2E0", Offset = "0xA7D2E0", VA = "0xA7D2E0")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x2000126")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D690", Offset = "0x87D690")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x17000028")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x600049E")]
		[Address(RVA = "0xA79914", Offset = "0xA79914", VA = "0xA79914")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x882DF0", Offset = "0x882DF0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600049F")]
		[Address(RVA = "0xA7D2F8", Offset = "0xA7D2F8", VA = "0xA7D2F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x882E00", Offset = "0x882E00")]
		private set
		{
		}
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0xA798B0", Offset = "0xA798B0", VA = "0xA798B0", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0xA799CC", Offset = "0xA799CC", VA = "0xA799CC", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0xA7D300", Offset = "0xA7D300", VA = "0xA7D300")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x882E10", Offset = "0x882E10")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0xA7A104", Offset = "0xA7A104", VA = "0xA7A104", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0xA7A1A4", Offset = "0xA7A1A4", VA = "0xA7A1A4", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0xA79A00", Offset = "0xA79A00", VA = "0xA79A00")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x2000127")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x2000273")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B57C", Offset = "0x87B57C")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x17000103")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C49")]
			[Address(RVA = "0xA7DAC8", Offset = "0xA7DAC8", VA = "0xA7DAC8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000104")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C4B")]
			[Address(RVA = "0xA7DB38", Offset = "0xA7DB38", VA = "0xA7DB38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0xA7D584", Offset = "0xA7D584", VA = "0xA7D584")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0xA7D758", Offset = "0xA7D758", VA = "0xA7D758", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0xA7D75C", Offset = "0xA7D75C", VA = "0xA7D75C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0xA7DAD0", Offset = "0xA7DAD0", VA = "0xA7DAD0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87D6A0", Offset = "0x87D6A0")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x400058D")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0xA7D3D0", Offset = "0xA7D3D0", VA = "0xA7D3D0")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0xA7D494", Offset = "0xA7D494", VA = "0xA7D494", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0xA7D4D4", Offset = "0xA7D4D4", VA = "0xA7D4D4", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0xA7D510", Offset = "0xA7D510", VA = "0xA7D510")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x882E48", Offset = "0x882E48")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0xA7D5B0", Offset = "0xA7D5B0", VA = "0xA7D5B0", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x60004AB")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0xA7D5E0", Offset = "0xA7D5E0", VA = "0xA7D5E0", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0xA7D72C", Offset = "0xA7D72C", VA = "0xA7D72C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x882EAC", Offset = "0x882EAC")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000128")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0xA7DB40", Offset = "0xA7DB40", VA = "0xA7DB40")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0xA7DBA0", Offset = "0xA7DBA0", VA = "0xA7DBA0", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0xA7DD58", Offset = "0xA7DD58", VA = "0xA7DD58", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0xA7DE90", Offset = "0xA7DE90", VA = "0xA7DE90")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x882EBC", Offset = "0x882EBC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0xA7DE94", Offset = "0xA7DE94", VA = "0xA7DE94")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x2000129")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87D6D8", Offset = "0x87D6D8")]
	public float LOSOffset;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87D710", Offset = "0x87D710")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0xA7DEA0", Offset = "0xA7DEA0", VA = "0xA7DEA0", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0xA7E138", Offset = "0xA7E138", VA = "0xA7E138")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x200012A")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x60004B5")]
	[Address(RVA = "0xA7E144", Offset = "0xA7E144", VA = "0xA7E144", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0xA7E2FC", Offset = "0xA7E2FC", VA = "0xA7E2FC")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x200012B")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x60004B7")]
	[Address(RVA = "0xA7E300", Offset = "0xA7E300", VA = "0xA7E300", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0xA7E3A8", Offset = "0xA7E3A8", VA = "0xA7E3A8", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60004B9")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0xA7E44C", Offset = "0xA7E44C", VA = "0xA7E44C")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x200012C")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x2000274")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B58C", Offset = "0x87B58C")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x17000105")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C4F")]
			[Address(RVA = "0xA7E81C", Offset = "0xA7E81C", VA = "0xA7E81C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000106")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C51")]
			[Address(RVA = "0xA7E88C", Offset = "0xA7E88C", VA = "0xA7E88C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0xA7E4F4", Offset = "0xA7E4F4", VA = "0xA7E4F4")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0xA7E6E0", Offset = "0xA7E6E0", VA = "0xA7E6E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0xA7E6E4", Offset = "0xA7E6E4", VA = "0xA7E6E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0xA7E824", Offset = "0xA7E824", VA = "0xA7E824", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87D748", Offset = "0x87D748")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x87D748", Offset = "0x87D748")]
	public float TransitionDuration;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87D7A0", Offset = "0x87D7A0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x87D7A0", Offset = "0x87D7A0")]
	public float TeleportDelay;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87D7F4", Offset = "0x87D7F4")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0xA7E454", Offset = "0xA7E454", VA = "0xA7E454", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0xA7E480", Offset = "0xA7E480", VA = "0xA7E480")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x882EF4", Offset = "0x882EF4")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0xA7E520", Offset = "0xA7E520", VA = "0xA7E520")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x200012D")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x60004BE")]
	[Address(RVA = "0xA7E894", Offset = "0xA7E894", VA = "0xA7E894", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0xA7E8C4", Offset = "0xA7E8C4", VA = "0xA7E8C4")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x200012E")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x2000275")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B59C", Offset = "0x87B59C")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000107")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C55")]
			[Address(RVA = "0xA7EB8C", Offset = "0xA7EB8C", VA = "0xA7EB8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000108")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C57")]
			[Address(RVA = "0xA7EBFC", Offset = "0xA7EBFC", VA = "0xA7EBFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0xA7E96C", Offset = "0xA7E96C", VA = "0xA7E96C")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0xA7E9E0", Offset = "0xA7E9E0", VA = "0xA7E9E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0xA7E9E4", Offset = "0xA7E9E4", VA = "0xA7E9E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0xA7EB94", Offset = "0xA7EB94", VA = "0xA7EB94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87D82C", Offset = "0x87D82C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x87D82C", Offset = "0x87D82C")]
	public float TransitionDuration;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0xA7E8CC", Offset = "0xA7E8CC", VA = "0xA7E8CC", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0xA7E8F8", Offset = "0xA7E8F8", VA = "0xA7E8F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x882F58", Offset = "0x882F58")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0xA7E998", Offset = "0xA7E998", VA = "0xA7E998")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x200012F")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x14000014")]
	public event Action onButtonDown
	{
		[Token(Token = "0x60004C3")]
		[Address(RVA = "0xA29774", Offset = "0xA29774", VA = "0xA29774")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x882FBC", Offset = "0x882FBC")]
		add
		{
		}
		[Token(Token = "0x60004C4")]
		[Address(RVA = "0xA29860", Offset = "0xA29860", VA = "0xA29860")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x882FCC", Offset = "0x882FCC")]
		remove
		{
		}
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0xA2994C", Offset = "0xA2994C", VA = "0xA2994C", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0xA29960", Offset = "0xA29960", VA = "0xA29960")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x2000130")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x2000276")]
	public enum ButtonType
	{
		[Token(Token = "0x4000DC4")]
		Play,
		[Token(Token = "0x4000DC5")]
		Pause,
		[Token(Token = "0x4000DC6")]
		FastForward,
		[Token(Token = "0x4000DC7")]
		Rewind,
		[Token(Token = "0x4000DC8")]
		SkipForward,
		[Token(Token = "0x4000DC9")]
		SkipBack,
		[Token(Token = "0x4000DCA")]
		Stop
	}

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x17000029")]
	public ButtonType buttonType
	{
		[Token(Token = "0x60004C7")]
		[Address(RVA = "0xB2CE60", Offset = "0xB2CE60", VA = "0xB2CE60")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x60004C8")]
		[Address(RVA = "0xB2CE68", Offset = "0xB2CE68", VA = "0xB2CE68")]
		set
		{
		}
	}

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0xB2CE8C", Offset = "0xB2CE8C", VA = "0xB2CE8C", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0xB2E768", Offset = "0xB2E768", VA = "0xB2E768")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x2000131")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x2000277")]
	private enum PlaybackState
	{
		[Token(Token = "0x4000DCC")]
		Playing,
		[Token(Token = "0x4000DCD")]
		Paused,
		[Token(Token = "0x4000DCE")]
		Rewinding,
		[Token(Token = "0x4000DCF")]
		FastForwarding
	}

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0xB32DE0", Offset = "0xB32DE0", VA = "0xB32DE0")]
	private void Start()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0xB3315C", Offset = "0xB3315C", VA = "0xB3315C")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0xB333C0", Offset = "0xB333C0", VA = "0xB333C0")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0xB33584", Offset = "0xB33584", VA = "0xB33584")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0xB336D4", Offset = "0xB336D4", VA = "0xB336D4")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0xB33514", Offset = "0xB33514", VA = "0xB33514")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0xB337B8", Offset = "0xB337B8", VA = "0xB337B8")]
	private void Update()
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0xB33028", Offset = "0xB33028", VA = "0xB33028")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0xB33BAC", Offset = "0xB33BAC", VA = "0xB33BAC")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x2000132")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0xA33EA8", Offset = "0xA33EA8", VA = "0xA33EA8")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0xA34344", Offset = "0xA34344", VA = "0xA34344")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0xA3440C", Offset = "0xA3440C", VA = "0xA3440C")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0xA346C8", Offset = "0xA346C8", VA = "0xA346C8")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0xA347B8", Offset = "0xA347B8", VA = "0xA347B8")]
	private void Update()
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0xA348AC", Offset = "0xA348AC", VA = "0xA348AC")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0xA34918", Offset = "0xA34918", VA = "0xA34918")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0xA34920", Offset = "0xA34920", VA = "0xA34920")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x882FDC", Offset = "0x882FDC")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0xA3497C", Offset = "0xA3497C", VA = "0xA3497C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x882FEC", Offset = "0x882FEC")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0xA349D8", Offset = "0xA349D8", VA = "0xA349D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x882FFC", Offset = "0x882FFC")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0xA34A34", Offset = "0xA34A34", VA = "0xA34A34")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88300C", Offset = "0x88300C")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x2000133")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x2000278")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B5AC", Offset = "0x87B5AC")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x17000109")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C5B")]
			[Address(RVA = "0xA44F50", Offset = "0xA44F50", VA = "0xA44F50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C5D")]
			[Address(RVA = "0xA44FC0", Offset = "0xA44FC0", VA = "0xA44FC0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0xA44DDC", Offset = "0xA44DDC", VA = "0xA44DDC")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0xA44E10", Offset = "0xA44E10", VA = "0xA44E10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0xA44E14", Offset = "0xA44E14", VA = "0xA44E14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0xA44F58", Offset = "0xA44F58", VA = "0xA44F58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0xA44A44", Offset = "0xA44A44", VA = "0xA44A44")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0xA44B48", Offset = "0xA44B48", VA = "0xA44B48")]
	private void Update()
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0xA44AD4", Offset = "0xA44AD4", VA = "0xA44AD4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88301C", Offset = "0x88301C")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0xA44E08", Offset = "0xA44E08", VA = "0xA44E08")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x2000134")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x87D8C4", Offset = "0x87D8C4")]
	public int SubdivisionsU;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x87D8E0", Offset = "0x87D8E0")]
	public int SubdivisionsV;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0xA2EC20", Offset = "0xA2EC20", VA = "0xA2EC20")]
	private void Update()
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0xA2FB80", Offset = "0xA2FB80", VA = "0xA2FB80")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x2000135")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x1700002A")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x60004E5")]
		[Address(RVA = "0xB25154", Offset = "0xB25154", VA = "0xB25154")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0xB251B4", Offset = "0xB251B4", VA = "0xB251B4")]
	public void Start()
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0xB25574", Offset = "0xB25574", VA = "0xB25574")]
	public void Update()
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0xB25670", Offset = "0xB25670", VA = "0xB25670")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x883080", Offset = "0x883080")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x60004E9")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60004EA")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x60004EB")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x60004EC")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x60004ED")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x60004EE")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x60004EF")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x60004F0")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0xB256D8", Offset = "0xB256D8", VA = "0xB256D8")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0xB2573C", Offset = "0xB2573C", VA = "0xB2573C")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0xB257EC", Offset = "0xB257EC", VA = "0xB257EC")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0xB25A0C", Offset = "0xB25A0C", VA = "0xB25A0C")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0xB25AFC", Offset = "0xB25AFC", VA = "0xB25AFC")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0xB25420", Offset = "0xB25420", VA = "0xB25420")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0xB25BE4", Offset = "0xB25BE4", VA = "0xB25BE4")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0xB25C74", Offset = "0xB25C74", VA = "0xB25C74")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0xB25DA4", Offset = "0xB25DA4", VA = "0xB25DA4")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x2000136")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x879A64", Offset = "0x879A64")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x2000279")]
	public enum DrawMode
	{
		[Token(Token = "0x4000DD4")]
		Opaque,
		[Token(Token = "0x4000DD5")]
		OpaqueWithClip,
		[Token(Token = "0x4000DD6")]
		TransparentDefaultAlpha,
		[Token(Token = "0x4000DD7")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x1700002B")]
	public bool overlayEnabled
	{
		[Token(Token = "0x6000500")]
		[Address(RVA = "0xCA1BAC", Offset = "0xCA1BAC", VA = "0xCA1BAC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000501")]
		[Address(RVA = "0xCA1C48", Offset = "0xCA1C48", VA = "0xCA1C48")]
		set
		{
		}
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0xC9FF98", Offset = "0xC9FF98", VA = "0xC9FF98")]
	private void Start()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0xCA1020", Offset = "0xCA1020", VA = "0xCA1020")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0xCA10A4", Offset = "0xCA10A4", VA = "0xCA10A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0xCA11B8", Offset = "0xCA11B8", VA = "0xCA11B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0xCA12CC", Offset = "0xCA12CC", VA = "0xCA12CC", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0xCA14FC", Offset = "0xCA14FC", VA = "0xCA14FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0xCA1D60", Offset = "0xCA1D60", VA = "0xCA1D60")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x2000137")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x200027A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B5BC", Offset = "0x87B5BC")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0xA7885C", Offset = "0xA7885C", VA = "0xA7885C")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0xA78954", Offset = "0xA78954", VA = "0xA78954")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x6000504")]
	[Address(RVA = "0xA78678", Offset = "0xA78678", VA = "0xA78678")]
	private void Start()
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0xA78864", Offset = "0xA78864", VA = "0xA78864")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0xA7894C", Offset = "0xA7894C", VA = "0xA7894C")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x2000138")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x200027B")]
	public enum PlabackState
	{
		[Token(Token = "0x4000DDB")]
		Idle = 1,
		[Token(Token = "0x4000DDC")]
		Preparing,
		[Token(Token = "0x4000DDD")]
		Buffering,
		[Token(Token = "0x4000DDE")]
		Ready,
		[Token(Token = "0x4000DDF")]
		Ended
	}

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x1700002C")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x6000507")]
		[Address(RVA = "0xB33BBC", Offset = "0xB33BBC", VA = "0xB33BBC")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700002D")]
	private static IntPtr Activity
	{
		[Token(Token = "0x6000508")]
		[Address(RVA = "0xB33E98", Offset = "0xB33E98", VA = "0xB33E98")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700002E")]
	public static bool IsAvailable
	{
		[Token(Token = "0x6000509")]
		[Address(RVA = "0xB30AB8", Offset = "0xB30AB8", VA = "0xB30AB8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700002F")]
	public static bool IsPlaying
	{
		[Token(Token = "0x600050A")]
		[Address(RVA = "0xB31FAC", Offset = "0xB31FAC", VA = "0xB31FAC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000030")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x600050B")]
		[Address(RVA = "0xB340FC", Offset = "0xB340FC", VA = "0xB340FC")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x17000031")]
	public static long Duration
	{
		[Token(Token = "0x600050C")]
		[Address(RVA = "0xB32190", Offset = "0xB32190", VA = "0xB32190")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000032")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x600050D")]
		[Address(RVA = "0xB3209C", Offset = "0xB3209C", VA = "0xB3209C")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600050E")]
		[Address(RVA = "0xB31640", Offset = "0xB31640", VA = "0xB31640")]
		set
		{
		}
	}

	[Token(Token = "0x600050F")]
	[Address(RVA = "0xB32830", Offset = "0xB32830", VA = "0xB32830")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0xB3255C", Offset = "0xB3255C", VA = "0xB3255C")]
	public static void Stop()
	{
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0xB312B0", Offset = "0xB312B0", VA = "0xB312B0")]
	public static void Play()
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0xB31444", Offset = "0xB31444", VA = "0xB31444")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000513")]
	[Address(RVA = "0xB3236C", Offset = "0xB3236C", VA = "0xB3236C")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0xB32A78", Offset = "0xB32A78", VA = "0xB32A78")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0xB31DA0", Offset = "0xB31DA0", VA = "0xB31DA0")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x2000139")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x200027C")]
	public enum VideoShape
	{
		[Token(Token = "0x4000DE1")]
		_360,
		[Token(Token = "0x4000DE2")]
		_180,
		[Token(Token = "0x4000DE3")]
		Quad
	}

	[Token(Token = "0x200027D")]
	public enum VideoStereo
	{
		[Token(Token = "0x4000DE5")]
		Mono,
		[Token(Token = "0x4000DE6")]
		TopBottom,
		[Token(Token = "0x4000DE7")]
		LeftRight,
		[Token(Token = "0x4000DE8")]
		BottomTop
	}

	[Token(Token = "0x200027E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B5CC", Offset = "0x87B5CC")]
	private sealed class <Start>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x1700010B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C63")]
			[Address(RVA = "0xB32D68", Offset = "0xB32D68", VA = "0xB32D68", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700010C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C65")]
			[Address(RVA = "0xB32DD8", Offset = "0xB32DD8", VA = "0xB32DD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0xB30EF0", Offset = "0xB30EF0", VA = "0xB30EF0")]
		[DebuggerHidden]
		public <Start>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0xB32BCC", Offset = "0xB32BCC", VA = "0xB32BCC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0xB32BD0", Offset = "0xB32BD0", VA = "0xB32BD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0xB32D70", Offset = "0xB32D70", VA = "0xB32D70", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200027F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B5DC", Offset = "0x87B5DC")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0xB31204", Offset = "0xB31204", VA = "0xB31204")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0xB32748", Offset = "0xB32748", VA = "0xB32748")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D96C", Offset = "0x87D96C")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D97C", Offset = "0x87D97C")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87D98C", Offset = "0x87D98C")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool DisplayMono;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x17000033")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000517")]
		[Address(RVA = "0xB30820", Offset = "0xB30820", VA = "0xB30820")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8830B8", Offset = "0x8830B8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000518")]
		[Address(RVA = "0xB30828", Offset = "0xB30828", VA = "0xB30828")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8830C8", Offset = "0x8830C8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000034")]
	public long Duration
	{
		[Token(Token = "0x6000519")]
		[Address(RVA = "0xB30834", Offset = "0xB30834", VA = "0xB30834")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8830D8", Offset = "0x8830D8")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600051A")]
		[Address(RVA = "0xB3083C", Offset = "0xB3083C", VA = "0xB3083C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8830E8", Offset = "0x8830E8")]
		private set
		{
		}
	}

	[Token(Token = "0x17000035")]
	public long PlaybackPosition
	{
		[Token(Token = "0x600051B")]
		[Address(RVA = "0xB30844", Offset = "0xB30844", VA = "0xB30844")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8830F8", Offset = "0x8830F8")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600051C")]
		[Address(RVA = "0xB3084C", Offset = "0xB3084C", VA = "0xB3084C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x883108", Offset = "0x883108")]
		private set
		{
		}
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0xB30854", Offset = "0xB30854", VA = "0xB30854")]
	private void Awake()
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0xB30B20", Offset = "0xB30B20", VA = "0xB30B20")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0xB30B8C", Offset = "0xB30B8C", VA = "0xB30B8C")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0xB30E7C", Offset = "0xB30E7C", VA = "0xB30E7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x883118", Offset = "0x883118")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0xB30F1C", Offset = "0xB30F1C", VA = "0xB30F1C")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0xB3120C", Offset = "0xB3120C", VA = "0xB3120C")]
	public void Play()
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0xB313A4", Offset = "0xB313A4", VA = "0xB313A4")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0xB31538", Offset = "0xB31538", VA = "0xB31538")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0xB31790", Offset = "0xB31790", VA = "0xB31790")]
	private void Update()
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0xB32284", Offset = "0xB32284", VA = "0xB32284")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0xB324BC", Offset = "0xB324BC", VA = "0xB324BC")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0xB32650", Offset = "0xB32650", VA = "0xB32650")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0xB32738", Offset = "0xB32738", VA = "0xB32738")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x200013A")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x879AC8", Offset = "0x879AC8")]
public class OVROverlayMeshGenerator : MonoBehaviour
{
	[Token(Token = "0x2000280")]
	private enum CubeFace
	{
		[Token(Token = "0x4000DF0")]
		Right,
		[Token(Token = "0x4000DF1")]
		Left,
		[Token(Token = "0x4000DF2")]
		Top,
		[Token(Token = "0x4000DF3")]
		Bottom,
		[Token(Token = "0x4000DF4")]
		Front,
		[Token(Token = "0x4000DF5")]
		Back,
		[Token(Token = "0x4000DF6")]
		COUNT
	}

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Mesh _Mesh;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector3> _Verts;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector2> _UV;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<int> _Tris;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVROverlay _Overlay;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshFilter _MeshFilter;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshCollider _MeshCollider;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _CameraRoot;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _Transform;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVROverlay.OverlayShape _LastShape;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 _LastPosition;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion _LastRotation;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 _LastScale;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Rect _LastRectLeft;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Rect _LastRectRight;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool _Awake;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3[] BottomLeft;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Vector3[] RightVector;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Vector3[] UpVector;

	[Token(Token = "0x600052A")]
	[Address(RVA = "0xCA1E14", Offset = "0xCA1E14", VA = "0xCA1E14")]
	protected void Awake()
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0xCA1FA0", Offset = "0xCA1FA0", VA = "0xCA1FA0")]
	private Rect GetBoundingRect(Rect a, Rect b)
	{
		return default(Rect);
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0xCA215C", Offset = "0xCA215C", VA = "0xCA215C")]
	private void Update()
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0xCA266C", Offset = "0xCA266C", VA = "0xCA266C")]
	private void UpdateMesh(OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0xCA29F4", Offset = "0xCA29F4", VA = "0xCA29F4")]
	public static void GenerateMesh(List<Vector3> verts, List<Vector2> uvs, List<int> tris, OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0xCA3F74", Offset = "0xCA3F74", VA = "0xCA3F74")]
	private static Vector2 GetSphereUV(float theta, float phi, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0xCA3FD4", Offset = "0xCA3FD4", VA = "0xCA3FD4")]
	private static Vector3 GetSphereVert(float theta, float phi)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0xCA2D74", Offset = "0xCA2D74", VA = "0xCA2D74")]
	public static void BuildSphere(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect, float worldScale = 800f, int latitudes = 128, int longitudes = 128, float expand_coef = 1f)
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0xCA40BC", Offset = "0xCA40BC", VA = "0xCA40BC")]
	private static Vector2 GetCubeUV(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0xCA42A8", Offset = "0xCA42A8", VA = "0xCA42A8")]
	private static Vector3 GetCubeVert(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0xCA32E8", Offset = "0xCA32E8", VA = "0xCA32E8")]
	public static void BuildCube(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, float worldScale = 800f, int subQuads = 1, float expand_coef = 1.01f)
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0xCA36F8", Offset = "0xCA36F8", VA = "0xCA36F8")]
	public static void BuildQuad(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Rect rect)
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0xCA3B34", Offset = "0xCA3B34", VA = "0xCA3B34")]
	public static void BuildHemicylinder(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 scale, Rect rect, int longitudes = 128)
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0xCA4494", Offset = "0xCA4494", VA = "0xCA4494")]
	public OVROverlayMeshGenerator()
	{
	}
}
[Token(Token = "0x200013B")]
public static class VectorUtil
{
	[Token(Token = "0x6000539")]
	[Address(RVA = "0xE00920", Offset = "0xE00920", VA = "0xE00920")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x200013C")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x200013D")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x600053A")]
	[Address(RVA = "0x1669D6C", Offset = "0x1669D6C", VA = "0x1669D6C")]
	private void Start()
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0x1669D70", Offset = "0x1669D70", VA = "0x1669D70")]
	private void Update()
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0x1669D74", Offset = "0x1669D74", VA = "0x1669D74")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0x1669F00", Offset = "0x1669F00", VA = "0x1669F00")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x1669DC8", Offset = "0x1669DC8", VA = "0x1669DC8")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x1669E5C", Offset = "0x1669E5C", VA = "0x1669E5C")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x1669F54", Offset = "0x1669F54", VA = "0x1669F54")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x1669FF4", Offset = "0x1669FF4", VA = "0x1669FF4")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0x166A180", Offset = "0x166A180", VA = "0x166A180")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0x166A30C", Offset = "0x166A30C", VA = "0x166A30C")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x200013E")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x2000281")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x4000DF8")]
		Uninitialized = -1,
		[Token(Token = "0x4000DF9")]
		NotEnabled,
		[Token(Token = "0x4000DFA")]
		Success,
		[Token(Token = "0x4000DFB")]
		StreamError,
		[Token(Token = "0x4000DFC")]
		ProcessError,
		[Token(Token = "0x4000DFD")]
		MaxStatValue
	}

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource source;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x17000036")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x6000545")]
		[Address(RVA = "0xB34764", Offset = "0xB34764", VA = "0xB34764")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000546")]
		[Address(RVA = "0xB3476C", Offset = "0xB3476C", VA = "0xB3476C")]
		set
		{
		}
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0xB34778", Offset = "0xB34778", VA = "0xB34778")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0xB349E4", Offset = "0xB349E4", VA = "0xB349E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0xB34C60", Offset = "0xB34C60", VA = "0xB34C60")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x200013F")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x2000282")]
	private enum Parameters
	{
		[Token(Token = "0x4000DFF")]
		P_GAIN,
		[Token(Token = "0x4000E00")]
		P_USEINVSQR,
		[Token(Token = "0x4000E01")]
		P_NEAR,
		[Token(Token = "0x4000E02")]
		P_FAR,
		[Token(Token = "0x4000E03")]
		P_RADIUS,
		[Token(Token = "0x4000E04")]
		P_DISABLE_RFL,
		[Token(Token = "0x4000E05")]
		P_VSPEAKERMODE,
		[Token(Token = "0x4000E06")]
		P_AMBISTAT,
		[Token(Token = "0x4000E07")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x4000E08")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x4000E09")]
		P_SENDLEVEL,
		[Token(Token = "0x4000E0A")]
		P_NUM
	}

	[Token(Token = "0x400061C")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x17000037")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x600054D")]
		[Address(RVA = "0xB34EF4", Offset = "0xB34EF4", VA = "0xB34EF4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600054E")]
		[Address(RVA = "0xB34EFC", Offset = "0xB34EFC", VA = "0xB34EFC")]
		set
		{
		}
	}

	[Token(Token = "0x17000038")]
	public float Gain
	{
		[Token(Token = "0x600054F")]
		[Address(RVA = "0xB34F08", Offset = "0xB34F08", VA = "0xB34F08")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000550")]
		[Address(RVA = "0xB34F10", Offset = "0xB34F10", VA = "0xB34F10")]
		set
		{
		}
	}

	[Token(Token = "0x17000039")]
	public bool UseInvSqr
	{
		[Token(Token = "0x6000551")]
		[Address(RVA = "0xB34F94", Offset = "0xB34F94", VA = "0xB34F94")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000552")]
		[Address(RVA = "0xB34F9C", Offset = "0xB34F9C", VA = "0xB34F9C")]
		set
		{
		}
	}

	[Token(Token = "0x1700003A")]
	public float Near
	{
		[Token(Token = "0x6000553")]
		[Address(RVA = "0xB34FA8", Offset = "0xB34FA8", VA = "0xB34FA8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000554")]
		[Address(RVA = "0xB34FB0", Offset = "0xB34FB0", VA = "0xB34FB0")]
		set
		{
		}
	}

	[Token(Token = "0x1700003B")]
	public float Far
	{
		[Token(Token = "0x6000555")]
		[Address(RVA = "0xB35038", Offset = "0xB35038", VA = "0xB35038")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000556")]
		[Address(RVA = "0xB35040", Offset = "0xB35040", VA = "0xB35040")]
		set
		{
		}
	}

	[Token(Token = "0x1700003C")]
	public float VolumetricRadius
	{
		[Token(Token = "0x6000557")]
		[Address(RVA = "0xB350C8", Offset = "0xB350C8", VA = "0xB350C8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000558")]
		[Address(RVA = "0xB350D0", Offset = "0xB350D0", VA = "0xB350D0")]
		set
		{
		}
	}

	[Token(Token = "0x1700003D")]
	public float ReverbSend
	{
		[Token(Token = "0x6000559")]
		[Address(RVA = "0xB35158", Offset = "0xB35158", VA = "0xB35158")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600055A")]
		[Address(RVA = "0xB35160", Offset = "0xB35160", VA = "0xB35160")]
		set
		{
		}
	}

	[Token(Token = "0x1700003E")]
	public bool EnableRfl
	{
		[Token(Token = "0x600055B")]
		[Address(RVA = "0xB351E8", Offset = "0xB351E8", VA = "0xB351E8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600055C")]
		[Address(RVA = "0xB351F0", Offset = "0xB351F0", VA = "0xB351F0")]
		set
		{
		}
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0xB34CE4", Offset = "0xB34CE4", VA = "0xB34CE4")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x88318C", Offset = "0x88318C")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600054C")]
	[Address(RVA = "0xB34DF8", Offset = "0xB34DF8", VA = "0xB34DF8")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x600055D")]
	[Address(RVA = "0xB351FC", Offset = "0xB351FC", VA = "0xB351FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0xB353FC", Offset = "0xB353FC", VA = "0xB353FC")]
	private void Start()
	{
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0xB35400", Offset = "0xB35400", VA = "0xB35400")]
	private void Update()
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0xB35268", Offset = "0xB35268", VA = "0xB35268")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x6000561")]
	[Address(RVA = "0xB354E0", Offset = "0xB354E0", VA = "0xB354E0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0xB359B4", Offset = "0xB359B4", VA = "0xB359B4")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000563")]
	[Address(RVA = "0xB34D5C", Offset = "0xB34D5C", VA = "0xB34D5C")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xB35A84", Offset = "0xB35A84", VA = "0xB35A84")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x2000140")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x4000627")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x4000629")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000566")]
	[Address(RVA = "0xB35AA4", Offset = "0xB35AA4", VA = "0xB35AA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0xB35AB0", Offset = "0xB35AB0", VA = "0xB35AB0")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000568")]
	[Address(RVA = "0xB35B84", Offset = "0xB35B84", VA = "0xB35B84")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x6000569")]
	[Address(RVA = "0xB35AE8", Offset = "0xB35AE8", VA = "0xB35AE8")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x600056A")]
	[Address(RVA = "0xB35C20", Offset = "0xB35C20", VA = "0xB35C20")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x2000141")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x2000283")]
	private struct MeshMaterial
	{
		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x2000284")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x4000630")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x1700003F")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x600056B")]
		[Address(RVA = "0x165B3B8", Offset = "0x165B3B8", VA = "0x165B3B8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000040")]
	public string filePath
	{
		[Token(Token = "0x600056C")]
		[Address(RVA = "0x165B444", Offset = "0x165B444", VA = "0x165B444")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x165B4BC", Offset = "0x165B4BC", VA = "0x165B4BC")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x165B634", Offset = "0x165B634", VA = "0x165B634")]
	private void Awake()
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x165B638", Offset = "0x165B638", VA = "0x165B638")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x165BBF0", Offset = "0x165BBF0", VA = "0x165BBF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0x165C0CC", Offset = "0x165C0CC", VA = "0x165C0CC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0x165C234", Offset = "0x165C234", VA = "0x165C234")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0x165CAA4", Offset = "0x165CAA4", VA = "0x165CAA4")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0x165CAF0", Offset = "0x165CAF0", VA = "0x165CAF0")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0x165E79C", Offset = "0x165E79C", VA = "0x165E79C")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0x165E650", Offset = "0x165E650", VA = "0x165E650")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0x165BA04", Offset = "0x165BA04", VA = "0x165BA04")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0x165B820", Offset = "0x165B820", VA = "0x165B820")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0x165EF78", Offset = "0x165EF78", VA = "0x165EF78")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0x165F3F8", Offset = "0x165F3F8", VA = "0x165F3F8")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x2000142")]
internal class ONSPPropagation
{
	[Token(Token = "0x2000285")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x4000E11")]
		Int8,
		[Token(Token = "0x4000E12")]
		UInt8,
		[Token(Token = "0x4000E13")]
		Int16,
		[Token(Token = "0x4000E14")]
		UInt16,
		[Token(Token = "0x4000E15")]
		Int32,
		[Token(Token = "0x4000E16")]
		UInt32,
		[Token(Token = "0x4000E17")]
		Int64,
		[Token(Token = "0x4000E18")]
		UInt64,
		[Token(Token = "0x4000E19")]
		Float16,
		[Token(Token = "0x4000E1A")]
		Float32,
		[Token(Token = "0x4000E1B")]
		Float64
	}

	[Token(Token = "0x2000286")]
	public class ClientType
	{
		[Token(Token = "0x4000E1C")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x4000E1D")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x4000E1E")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x4000E1F")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x4000E20")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x4000E21")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x4000E22")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x4000E23")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x4000E24")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x4000E25")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x4000E26")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x4000E27")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x4000E28")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x4000E29")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_1 = 13u;

		[Token(Token = "0x4000E2A")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_2 = 14u;

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0xB35FDC", Offset = "0xB35FDC", VA = "0xB35FDC")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x2000287")]
	public interface PropagationInterface
	{
		[Token(Token = "0x6000C69")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x6000C6A")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x6000C6B")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x6000C6C")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000C6D")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x6000C6E")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000C6F")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000C70")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000C71")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000C72")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000C73")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000C74")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x6000C75")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000C76")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000C77")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x2000288")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x4000E2B")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700010D")]
		private IntPtr context
		{
			[Token(Token = "0x6000C78")]
			[Address(RVA = "0x16595E0", Offset = "0x16595E0", VA = "0x16595E0")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000C79")]
		[Address(RVA = "0x1659644", Offset = "0x1659644", VA = "0x1659644")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0x16596F0", Offset = "0x16596F0", VA = "0x16596F0")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0x165979C", Offset = "0x165979C", VA = "0x165979C", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0x16597C0", Offset = "0x16597C0", VA = "0x16597C0")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0x165986C", Offset = "0x165986C", VA = "0x165986C", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0x1659890", Offset = "0x1659890", VA = "0x1659890")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0x1659938", Offset = "0x1659938", VA = "0x1659938", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C80")]
		[Address(RVA = "0x165995C", Offset = "0x165995C", VA = "0x165995C")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0x16599F8", Offset = "0x16599F8", VA = "0x16599F8", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C82")]
		[Address(RVA = "0x1659A00", Offset = "0x1659A00", VA = "0x1659A00")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0x1659B28", Offset = "0x1659B28", VA = "0x1659B28", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C84")]
		[Address(RVA = "0x1659C20", Offset = "0x1659C20", VA = "0x1659C20")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0x1659CD4", Offset = "0x1659CD4", VA = "0x1659CD4", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C86")]
		[Address(RVA = "0x1659CE0", Offset = "0x1659CE0", VA = "0x1659CE0")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0x1659E28", Offset = "0x1659E28", VA = "0x1659E28", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C88")]
		[Address(RVA = "0x1659E34", Offset = "0x1659E34", VA = "0x1659E34")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0x1659EFC", Offset = "0x1659EFC", VA = "0x1659EFC", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0x1659F08", Offset = "0x1659F08", VA = "0x1659F08")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0x1659FD0", Offset = "0x1659FD0", VA = "0x1659FD0", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0x1659FDC", Offset = "0x1659FDC", VA = "0x1659FDC")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0x165A0A4", Offset = "0x165A0A4", VA = "0x165A0A4", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0x165A0B0", Offset = "0x165A0B0", VA = "0x165A0B0")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0x165A158", Offset = "0x165A158", VA = "0x165A158", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C90")]
		[Address(RVA = "0x165A17C", Offset = "0x165A17C", VA = "0x165A17C")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0x165A218", Offset = "0x165A218", VA = "0x165A218", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C92")]
		[Address(RVA = "0x165A220", Offset = "0x165A220", VA = "0x165A220")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0x165A2E4", Offset = "0x165A2E4", VA = "0x165A2E4", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C94")]
		[Address(RVA = "0x165A2F0", Offset = "0x165A2F0", VA = "0x165A2F0")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0x165A3B4", Offset = "0x165A3B4", VA = "0x165A3B4", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C96")]
		[Address(RVA = "0x165A3C4", Offset = "0x165A3C4", VA = "0x165A3C4")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0x165A470", Offset = "0x165A470", VA = "0x165A470", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0x165A47C", Offset = "0x165A47C", VA = "0x165A47C")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x2000289")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x4000E2D")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700010E")]
		private IntPtr context
		{
			[Token(Token = "0x6000C99")]
			[Address(RVA = "0x165A4C8", Offset = "0x165A4C8", VA = "0x165A4C8")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0x165A52C", Offset = "0x165A52C", VA = "0x165A52C")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0x165A5D8", Offset = "0x165A5D8", VA = "0x165A5D8")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0x165A684", Offset = "0x165A684", VA = "0x165A684", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0x165A6A8", Offset = "0x165A6A8", VA = "0x165A6A8")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0x165A754", Offset = "0x165A754", VA = "0x165A754", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0x165A778", Offset = "0x165A778", VA = "0x165A778")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0x165A824", Offset = "0x165A824", VA = "0x165A824", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0x165A848", Offset = "0x165A848", VA = "0x165A848")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0x165A8E4", Offset = "0x165A8E4", VA = "0x165A8E4", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0x165A8EC", Offset = "0x165A8EC", VA = "0x165A8EC")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0x165AA14", Offset = "0x165AA14", VA = "0x165AA14", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0x165AB0C", Offset = "0x165AB0C", VA = "0x165AB0C")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0x165ABC0", Offset = "0x165ABC0", VA = "0x165ABC0", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0x165ABCC", Offset = "0x165ABCC", VA = "0x165ABCC")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0x165AD14", Offset = "0x165AD14", VA = "0x165AD14", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0x165AD20", Offset = "0x165AD20", VA = "0x165AD20")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0x165ADE8", Offset = "0x165ADE8", VA = "0x165ADE8", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0x165ADF4", Offset = "0x165ADF4", VA = "0x165ADF4")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0x165AEBC", Offset = "0x165AEBC", VA = "0x165AEBC", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0x165AEC8", Offset = "0x165AEC8", VA = "0x165AEC8")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0x165AF90", Offset = "0x165AF90", VA = "0x165AF90", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0x165AF9C", Offset = "0x165AF9C", VA = "0x165AF9C")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0x165B048", Offset = "0x165B048", VA = "0x165B048", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0x165B06C", Offset = "0x165B06C", VA = "0x165B06C")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0x165B108", Offset = "0x165B108", VA = "0x165B108", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0x165B110", Offset = "0x165B110", VA = "0x165B110")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0x165B1D4", Offset = "0x165B1D4", VA = "0x165B1D4", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0x165B1E0", Offset = "0x165B1E0", VA = "0x165B1E0")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0x165B2A4", Offset = "0x165B2A4", VA = "0x165B2A4", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0x165B2B4", Offset = "0x165B2B4", VA = "0x165B2B4")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0x165B360", Offset = "0x165B360", VA = "0x165B360", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0x165B36C", Offset = "0x165B36C", VA = "0x165B36C")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x200028A")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x4000E2F")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700010F")]
		private IntPtr context
		{
			[Token(Token = "0x6000CBA")]
			[Address(RVA = "0xB35FE4", Offset = "0xB35FE4", VA = "0xB35FE4")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0xB35EDC", Offset = "0xB35EDC", VA = "0xB35EDC")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0xB36048", Offset = "0xB36048", VA = "0xB36048")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0xB360F4", Offset = "0xB360F4", VA = "0xB360F4", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0xB36118", Offset = "0xB36118", VA = "0xB36118")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0xB361C4", Offset = "0xB361C4", VA = "0xB361C4", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0xB361E8", Offset = "0xB361E8", VA = "0xB361E8")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0xB36294", Offset = "0xB36294", VA = "0xB36294", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0xB362B8", Offset = "0xB362B8", VA = "0xB362B8")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0xB36354", Offset = "0xB36354", VA = "0xB36354", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0xB3635C", Offset = "0xB3635C", VA = "0xB3635C")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0xB36484", Offset = "0xB36484", VA = "0xB36484", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0xB3657C", Offset = "0xB3657C", VA = "0xB3657C")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0xB36630", Offset = "0xB36630", VA = "0xB36630", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0xB3663C", Offset = "0xB3663C", VA = "0xB3663C")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0xB36784", Offset = "0xB36784", VA = "0xB36784", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0xB36790", Offset = "0xB36790", VA = "0xB36790")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0xB36858", Offset = "0xB36858", VA = "0xB36858", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0xB36864", Offset = "0xB36864", VA = "0xB36864")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0xB3692C", Offset = "0xB3692C", VA = "0xB3692C", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0xB36938", Offset = "0xB36938", VA = "0xB36938")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0xB36A00", Offset = "0xB36A00", VA = "0xB36A00", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0xB36A0C", Offset = "0xB36A0C", VA = "0xB36A0C")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0xB36AB8", Offset = "0xB36AB8", VA = "0xB36AB8", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0xB36ADC", Offset = "0xB36ADC", VA = "0xB36ADC")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0xB36B78", Offset = "0xB36B78", VA = "0xB36B78", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0xB36B80", Offset = "0xB36B80", VA = "0xB36B80")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0xB36C44", Offset = "0xB36C44", VA = "0xB36C44", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0xB36C50", Offset = "0xB36C50", VA = "0xB36C50")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0xB36D14", Offset = "0xB36D14", VA = "0xB36D14", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0xB36D24", Offset = "0xB36D24", VA = "0xB36D24")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0xB36DD0", Offset = "0xB36DD0", VA = "0xB36DD0", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0xB35F88", Offset = "0xB35F88", VA = "0xB35F88")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x17000041")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x600057C")]
		[Address(RVA = "0xB35C30", Offset = "0xB35C30", VA = "0xB35C30")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0xB35CA0", Offset = "0xB35CA0", VA = "0xB35CA0")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0xB35FD4", Offset = "0xB35FD4", VA = "0xB35FD4")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x2000143")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x200028B")]
	public enum Preset
	{
		[Token(Token = "0x4000E32")]
		Custom,
		[Token(Token = "0x4000E33")]
		AcousticTile,
		[Token(Token = "0x4000E34")]
		Brick,
		[Token(Token = "0x4000E35")]
		BrickPainted,
		[Token(Token = "0x4000E36")]
		Carpet,
		[Token(Token = "0x4000E37")]
		CarpetHeavy,
		[Token(Token = "0x4000E38")]
		CarpetHeavyPadded,
		[Token(Token = "0x4000E39")]
		CeramicTile,
		[Token(Token = "0x4000E3A")]
		Concrete,
		[Token(Token = "0x4000E3B")]
		ConcreteRough,
		[Token(Token = "0x4000E3C")]
		ConcreteBlock,
		[Token(Token = "0x4000E3D")]
		ConcreteBlockPainted,
		[Token(Token = "0x4000E3E")]
		Curtain,
		[Token(Token = "0x4000E3F")]
		Foliage,
		[Token(Token = "0x4000E40")]
		Glass,
		[Token(Token = "0x4000E41")]
		GlassHeavy,
		[Token(Token = "0x4000E42")]
		Grass,
		[Token(Token = "0x4000E43")]
		Gravel,
		[Token(Token = "0x4000E44")]
		GypsumBoard,
		[Token(Token = "0x4000E45")]
		PlasterOnBrick,
		[Token(Token = "0x4000E46")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x4000E47")]
		Soil,
		[Token(Token = "0x4000E48")]
		SoundProof,
		[Token(Token = "0x4000E49")]
		Snow,
		[Token(Token = "0x4000E4A")]
		Steel,
		[Token(Token = "0x4000E4B")]
		Water,
		[Token(Token = "0x4000E4C")]
		WoodThin,
		[Token(Token = "0x4000E4D")]
		WoodThick,
		[Token(Token = "0x4000E4E")]
		WoodFloor,
		[Token(Token = "0x4000E4F")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x200028C")]
	public sealed class Point
	{
		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0x1669580", Offset = "0x1669580", VA = "0x1669580")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0x16696C8", Offset = "0x16696C8", VA = "0x16696C8")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0x1669738", Offset = "0x1669738", VA = "0x1669738")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x200028D")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x87B5EC", Offset = "0x87B5EC")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x20002FF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B9B4", Offset = "0x87B9B4")]
		private sealed class <>c
		{
			[Token(Token = "0x4001000")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001001")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x4001002")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x6000E4C")]
			[Address(RVA = "0x1669C28", Offset = "0x1669C28", VA = "0x1669C28")]
			public <>c()
			{
			}

			[Token(Token = "0x6000E4D")]
			[Address(RVA = "0x1669C30", Offset = "0x1669C30", VA = "0x1669C30")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x6000E4E")]
			[Address(RVA = "0x1669C5C", Offset = "0x1669C5C", VA = "0x1669C5C")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x17000110")]
		public float Item
		{
			[Token(Token = "0x6000CDE")]
			[Address(RVA = "0x16697A0", Offset = "0x16697A0", VA = "0x16697A0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0x1669650", Offset = "0x1669650", VA = "0x1669650")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87DA2C", Offset = "0x87DA2C")]
	public Spectrum absorption;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87DA64", Offset = "0x87DA64")]
	public Spectrum transmission;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87DA9C", Offset = "0x87DA9C")]
	public Spectrum scattering;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x17000042")]
	public Preset preset
	{
		[Token(Token = "0x600057F")]
		[Address(RVA = "0x165F4D0", Offset = "0x165F4D0", VA = "0x165F4D0")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x6000580")]
		[Address(RVA = "0x165F4D8", Offset = "0x165F4D8", VA = "0x165F4D8")]
		set
		{
		}
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0x165F500", Offset = "0x165F500", VA = "0x165F500")]
	private void Start()
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0x165EE00", Offset = "0x165EE00", VA = "0x165EE00")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0x165FBF4", Offset = "0x165FBF4", VA = "0x165FBF4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0x165FBF8", Offset = "0x165FBF8", VA = "0x165FBF8")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0x165F504", Offset = "0x165F504", VA = "0x165F504")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0x165E4BC", Offset = "0x165E4BC", VA = "0x165E4BC")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0x165FCE0", Offset = "0x165FCE0", VA = "0x165FCE0")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0x1660274", Offset = "0x1660274", VA = "0x1660274")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0x1660810", Offset = "0x1660810", VA = "0x1660810")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0x1660DAC", Offset = "0x1660DAC", VA = "0x1660DAC")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x166134C", Offset = "0x166134C", VA = "0x166134C")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x16618E4", Offset = "0x16618E4", VA = "0x16618E4")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x1661E7C", Offset = "0x1661E7C", VA = "0x1661E7C")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x166241C", Offset = "0x166241C", VA = "0x166241C")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x16629BC", Offset = "0x16629BC", VA = "0x16629BC")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x1662F58", Offset = "0x1662F58", VA = "0x1662F58")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x16634F8", Offset = "0x16634F8", VA = "0x16634F8")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x1663A98", Offset = "0x1663A98", VA = "0x1663A98")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x1664030", Offset = "0x1664030", VA = "0x1664030")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x16645C8", Offset = "0x16645C8", VA = "0x16645C8")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x1664B60", Offset = "0x1664B60", VA = "0x1664B60")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x1665100", Offset = "0x1665100", VA = "0x1665100")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x166551C", Offset = "0x166551C", VA = "0x166551C")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x1665930", Offset = "0x1665930", VA = "0x1665930")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x1665ED0", Offset = "0x1665ED0", VA = "0x1665ED0")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0x166646C", Offset = "0x166646C", VA = "0x166646C")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0x1666A08", Offset = "0x1666A08", VA = "0x1666A08")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0x1666E20", Offset = "0x1666E20", VA = "0x1666E20")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0x1666FB4", Offset = "0x1666FB4", VA = "0x1666FB4")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0x16673C8", Offset = "0x16673C8", VA = "0x16673C8")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0x1667964", Offset = "0x1667964", VA = "0x1667964")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0x1667F04", Offset = "0x1667F04", VA = "0x1667F04")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0x16684A0", Offset = "0x16684A0", VA = "0x16684A0")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0x1668A40", Offset = "0x1668A40", VA = "0x1668A40")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0x1668FE0", Offset = "0x1668FE0", VA = "0x1668FE0")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x16695B8", Offset = "0x16695B8", VA = "0x16695B8")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x2000144")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x4000638")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x166A4B8", Offset = "0x166A4B8", VA = "0x166A4B8")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x166A56C", Offset = "0x166A56C", VA = "0x166A56C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x166A678", Offset = "0x166A678", VA = "0x166A678")]
	private void Start()
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x166A67C", Offset = "0x166A67C", VA = "0x166A67C")]
	private void Update()
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x166A680", Offset = "0x166A680", VA = "0x166A680")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x2000145")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x879B4C", Offset = "0x879B4C")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x200028E")]
	public enum RotationAxes
	{
		[Token(Token = "0x4000E55")]
		MouseXAndY,
		[Token(Token = "0x4000E56")]
		MouseX,
		[Token(Token = "0x4000E57")]
		MouseY
	}

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0xB304B4", Offset = "0xB304B4", VA = "0xB304B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0xB30738", Offset = "0xB30738", VA = "0xB30738")]
	private void Start()
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0xB30800", Offset = "0xB30800", VA = "0xB30800")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x2000146")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x200028F")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float particleSize;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float particleOffset;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject room;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] dims;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] coefs;

	[Token(Token = "0x400064F")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] points;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] normals;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem sys;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x4000655")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0xBBCBC4", Offset = "0xBBCBC4", VA = "0xBBCBC4")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0xBBC9F4", Offset = "0xBBC9F4", VA = "0xBBC9F4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x8831A0", Offset = "0x8831A0")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0xBBCBFC", Offset = "0xBBCBFC", VA = "0xBBCBFC")]
	private void Start()
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0xBBCD4C", Offset = "0xBBCD4C", VA = "0xBBCD4C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0xBBCE5C", Offset = "0xBBCE5C", VA = "0xBBCE5C")]
	private void Update()
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0xBBDAE4", Offset = "0xBBDAE4", VA = "0xBBDAE4")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60005B3")]
	[Address(RVA = "0xBBCC9C", Offset = "0xBBCC9C", VA = "0xBBCC9C")]
	private static extern int OSP_Unity_AssignRaycastCallback(AudioRaycastCallback callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x60005B4")]
	[Address(RVA = "0xBBCDB0", Offset = "0xBBCDB0", VA = "0xBBCDB0")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x60005B5")]
	[Address(RVA = "0xBBD7CC", Offset = "0xBBD7CC", VA = "0xBBD7CC")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x60005B6")]
	[Address(RVA = "0xBBD868", Offset = "0xBBD868", VA = "0xBBD868")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x60005B7")]
	[Address(RVA = "0xBBD908", Offset = "0xBBD908", VA = "0xBBD908")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x60005B8")]
	[Address(RVA = "0xBBD9A8", Offset = "0xBBD9A8", VA = "0xBBD9A8")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x60005B9")]
	[Address(RVA = "0xBBDA44", Offset = "0xBBDA44", VA = "0xBBDA44")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x60005BA")]
	[Address(RVA = "0xBBEE4C", Offset = "0xBBEE4C", VA = "0xBBEE4C")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x60005BB")]
	[Address(RVA = "0xBBEF10", Offset = "0xBBEF10", VA = "0xBBEF10")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0xBBEFD4", Offset = "0xBBEFD4", VA = "0xBBEFD4")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x2000147")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0x1669C88", Offset = "0x1669C88", VA = "0x1669C88")]
	private void Update()
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x1669D5C", Offset = "0x1669D5C", VA = "0x1669D5C")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x2000148")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x17000043")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x60005C0")]
		[Address(RVA = "0x166A394", Offset = "0x166A394", VA = "0x166A394")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x166A4A8", Offset = "0x166A4A8", VA = "0x166A4A8")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x2000149")]
public class VoiceModDemo_Logic : MonoBehaviour
{
	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRVoiceModContext[] contexts;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material material;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] xfrms;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VoiceModEnableSwitch SwitchTarget;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int targetSet;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 scale;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float scaleMax;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int currentPreset;

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0xE01198", Offset = "0xE01198", VA = "0xE01198")]
	private void Start()
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0xE0144C", Offset = "0xE0144C", VA = "0xE0144C")]
	private void Update()
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0xE01920", Offset = "0xE01920", VA = "0xE01920")]
	private void SetCurrentTarget()
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0xE01A2C", Offset = "0xE01A2C", VA = "0xE01A2C")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0xE01770", Offset = "0xE01770", VA = "0xE01770")]
	private void UpdateModelScale()
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0xE01F5C", Offset = "0xE01F5C", VA = "0xE01F5C")]
	public VoiceModDemo_Logic()
	{
	}
}
[Token(Token = "0x200014A")]
public class VoiceModEnableSwitch : MonoBehaviour
{
	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SwitchTargets;

	[Token(Token = "0x60005C8")]
	public bool SetActive<T>(int target) where T : MonoBehaviour
	{
		return default(bool);
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0xE01314", Offset = "0xE01314", VA = "0xE01314")]
	public bool SetActive(int target)
	{
		return default(bool);
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0xE01FC0", Offset = "0xE01FC0", VA = "0xE01FC0")]
	public VoiceModEnableSwitch()
	{
	}
}
[Token(Token = "0x200014B")]
public class OVRDebugConsole : MonoBehaviour
{
	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArrayList messages;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxMessages;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textMsg;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OVRDebugConsole s_Instance;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool clearTimeoutOn;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float clearTimeout;

	[Token(Token = "0x17000044")]
	public static OVRDebugConsole instance
	{
		[Token(Token = "0x60005CB")]
		[Address(RVA = "0x16755A0", Offset = "0x16755A0", VA = "0x16755A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x167587C", Offset = "0x167587C", VA = "0x167587C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x16759B8", Offset = "0x16759B8", VA = "0x16759B8")]
	private void Update()
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x16758EC", Offset = "0x16758EC", VA = "0x16758EC")]
	public void Init()
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x1675AC0", Offset = "0x1675AC0", VA = "0x1675AC0")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x1675C78", Offset = "0x1675C78", VA = "0x1675C78")]
	public static void Log(string message, Color color)
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x1675A50", Offset = "0x1675A50", VA = "0x1675A50")]
	public static void Clear()
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x1675D64", Offset = "0x1675D64", VA = "0x1675D64")]
	public static void ClearTimeout(float timeToClear)
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x1675B74", Offset = "0x1675B74", VA = "0x1675B74")]
	public void AddMessage(string message, Color color)
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x1675D20", Offset = "0x1675D20", VA = "0x1675D20")]
	public void ClearMessages()
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x1675DE8", Offset = "0x1675DE8", VA = "0x1675DE8")]
	public void SetClearTimeout(float timeout)
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x1676068", Offset = "0x1676068", VA = "0x1676068")]
	private void Prune()
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x1675DF8", Offset = "0x1675DF8", VA = "0x1675DF8")]
	private void Display()
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x1676148", Offset = "0x1676148", VA = "0x1676148")]
	public OVRDebugConsole()
	{
	}
}
[Token(Token = "0x200014C")]
public delegate void OVRCallback();
[Token(Token = "0x200014D")]
public delegate void OVRCallback<T>(T arg1);
[Token(Token = "0x200014E")]
public delegate void OVRCallback<T, U>(T arg1, U arg2);
[Token(Token = "0x200014F")]
public delegate void OVRCallback<T, U, V>(T arg1, U arg2, V arg3);
[Token(Token = "0x2000150")]
internal static class OVRMessenger
{
	[Token(Token = "0x2000290")]
	public class BroadcastException : Exception
	{
		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0xC9EEAC", Offset = "0xC9EEAC", VA = "0xC9EEAC")]
		public BroadcastException(string msg)
		{
		}
	}

	[Token(Token = "0x2000291")]
	public class ListenerException : Exception
	{
		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0xC9EA6C", Offset = "0xC9EA6C", VA = "0xC9EA6C")]
		public ListenerException(string msg)
		{
		}
	}

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MessengerHelper messengerHelper;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Dictionary<string, Delegate> eventTable;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static List<string> permanentMessages;

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0xC9DF38", Offset = "0xC9DF38", VA = "0xC9DF38")]
	public static void MarkAsPermanent(string eventType)
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0xC9DFC4", Offset = "0xC9DFC4", VA = "0xC9DFC4")]
	public static void Cleanup()
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0xC9E450", Offset = "0xC9E450", VA = "0xC9E450")]
	public static void PrintEventTable()
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0xC9E7F4", Offset = "0xC9E7F4", VA = "0xC9E7F4")]
	public static void OnListenerAdding(string eventType, Delegate listenerBeingAdded)
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0xC9EAE4", Offset = "0xC9EAE4", VA = "0xC9EAE4")]
	public static void OnListenerRemoving(string eventType, Delegate listenerBeingRemoved)
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0xC9ED38", Offset = "0xC9ED38", VA = "0xC9ED38")]
	public static void OnListenerRemoved(string eventType)
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0xC9EE28", Offset = "0xC9EE28", VA = "0xC9EE28")]
	public static void OnBroadcasting(string eventType)
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0xC9EE2C", Offset = "0xC9EE2C", VA = "0xC9EE2C")]
	public static BroadcastException CreateBroadcastSignatureException(string eventType)
	{
		return null;
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0xC9EF24", Offset = "0xC9EF24", VA = "0xC9EF24")]
	public static void AddListener(string eventType, OVRCallback handler)
	{
	}

	[Token(Token = "0x60005F3")]
	public static void AddListener<T>(string eventType, OVRCallback<T> handler)
	{
	}

	[Token(Token = "0x60005F4")]
	public static void AddListener<T, U>(string eventType, OVRCallback<T, U> handler)
	{
	}

	[Token(Token = "0x60005F5")]
	public static void AddListener<T, U, V>(string eventType, OVRCallback<T, U, V> handler)
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0xC9F0D0", Offset = "0xC9F0D0", VA = "0xC9F0D0")]
	public static void RemoveListener(string eventType, OVRCallback handler)
	{
	}

	[Token(Token = "0x60005F7")]
	public static void RemoveListener<T>(string eventType, OVRCallback<T> handler)
	{
	}

	[Token(Token = "0x60005F8")]
	public static void RemoveListener<T, U>(string eventType, OVRCallback<T, U> handler)
	{
	}

	[Token(Token = "0x60005F9")]
	public static void RemoveListener<T, U, V>(string eventType, OVRCallback<T, U, V> handler)
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0xC9F284", Offset = "0xC9F284", VA = "0xC9F284")]
	public static void Broadcast(string eventType)
	{
	}

	[Token(Token = "0x60005FB")]
	public static void Broadcast<T>(string eventType, T arg1)
	{
	}

	[Token(Token = "0x60005FC")]
	public static void Broadcast<T, U>(string eventType, T arg1, U arg2)
	{
	}

	[Token(Token = "0x60005FD")]
	public static void Broadcast<T, U, V>(string eventType, T arg1, U arg2, V arg3)
	{
	}
}
[Token(Token = "0x2000151")]
public sealed class MessengerHelper : MonoBehaviour
{
	[Token(Token = "0x60005FF")]
	[Address(RVA = "0xB2E7D0", Offset = "0xB2E7D0", VA = "0xB2E7D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0xB2E84C", Offset = "0xB2E84C", VA = "0xB2E84C")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0xB2E8AC", Offset = "0xB2E8AC", VA = "0xB2E8AC")]
	public MessengerHelper()
	{
	}
}
[Token(Token = "0x2000152")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x879B84", Offset = "0x879B84")]
public class OVRMicInput : MonoBehaviour
{
	[Token(Token = "0x2000292")]
	public enum micActivation
	{
		[Token(Token = "0x4000E59")]
		HoldToSpeak,
		[Token(Token = "0x4000E5A")]
		PushToSpeak,
		[Token(Token = "0x4000E5B")]
		ConstantSpeak
	}

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool GuiSelectDevice;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float sensitivity;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float sourceVolume;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private int micFrequency;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public micActivation micControl;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string selectedDevice;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float loudness;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool micSelected;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int minFreq;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int maxFreq;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool focused;

	[Token(Token = "0x17000045")]
	public float Sensitivity
	{
		[Token(Token = "0x6000602")]
		[Address(RVA = "0xC9F480", Offset = "0xC9F480", VA = "0xC9F480")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000603")]
		[Address(RVA = "0xC9F488", Offset = "0xC9F488", VA = "0xC9F488")]
		set
		{
		}
	}

	[Token(Token = "0x17000046")]
	public float SourceVolume
	{
		[Token(Token = "0x6000604")]
		[Address(RVA = "0xC9F510", Offset = "0xC9F510", VA = "0xC9F510")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000605")]
		[Address(RVA = "0xC9F518", Offset = "0xC9F518", VA = "0xC9F518")]
		set
		{
		}
	}

	[Token(Token = "0x17000047")]
	public float MicFrequency
	{
		[Token(Token = "0x6000606")]
		[Address(RVA = "0xC9F5A0", Offset = "0xC9F5A0", VA = "0xC9F5A0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000607")]
		[Address(RVA = "0xC9F5AC", Offset = "0xC9F5AC", VA = "0xC9F5AC")]
		set
		{
		}
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0xC9F638", Offset = "0xC9F638", VA = "0xC9F638")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0xC9F6F8", Offset = "0xC9F6F8", VA = "0xC9F6F8")]
	private void Start()
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0xC9F8A0", Offset = "0xC9F8A0", VA = "0xC9F8A0")]
	private void Update()
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0xC9FC78", Offset = "0xC9FC78", VA = "0xC9FC78")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0xC9FC8C", Offset = "0xC9FC8C", VA = "0xC9FC8C")]
	private void OnApplicationPause(bool focus)
	{
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0xC9FCA0", Offset = "0xC9FCA0", VA = "0xC9FCA0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0xC9FCA4", Offset = "0xC9FCA4", VA = "0xC9FCA4")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0xC9FD1C", Offset = "0xC9FD1C", VA = "0xC9FD1C")]
	public void MicDeviceGUI(float left, float top, float width, float height, float buttonSpaceTop, float buttonSpaceLeft)
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0xC9F7D8", Offset = "0xC9F7D8", VA = "0xC9F7D8")]
	public void GetMicCaps()
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0xC9FBD4", Offset = "0xC9FBD4", VA = "0xC9FBD4")]
	public void StartMicrophone()
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0xC9FA74", Offset = "0xC9FA74", VA = "0xC9FA74")]
	public void StopMicrophone()
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0xC9FBCC", Offset = "0xC9FBCC", VA = "0xC9FBCC")]
	private float GetAveragedVolume()
	{
		return default(float);
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0xC9FF44", Offset = "0xC9FF44", VA = "0xC9FF44")]
	public OVRMicInput()
	{
	}
}
[Token(Token = "0x2000153")]
public class OVRVoiceMod : MonoBehaviour
{
	[Token(Token = "0x2000293")]
	public enum ovrVoiceModError
	{
		[Token(Token = "0x4000E5D")]
		Unknown = -2250,
		[Token(Token = "0x4000E5E")]
		CannotCreateContext = -2251,
		[Token(Token = "0x4000E5F")]
		InvalidParam = -2252,
		[Token(Token = "0x4000E60")]
		BadSampleRate = -2253,
		[Token(Token = "0x4000E61")]
		MissingDLL = -2254,
		[Token(Token = "0x4000E62")]
		BadVersion = -2255,
		[Token(Token = "0x4000E63")]
		UndefinedFunction = -2256
	}

	[Token(Token = "0x2000294")]
	public enum ovrViceModFlag
	{
		[Token(Token = "0x4000E65")]
		None
	}

	[Token(Token = "0x4000677")]
	public const int ovrVoiceModSuccess = 0;

	[Token(Token = "0x4000678")]
	public const string strOVRLS = "OVRVoiceMod";

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int sOVRVoiceModInit;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static OVRVoiceMod sInstance;

	[PreserveSig]
	[Token(Token = "0x6000615")]
	[Address(RVA = "0xCA65AC", Offset = "0xCA65AC", VA = "0xCA65AC")]
	private static extern int ovrVoiceModDll_Initialize(int SampleRate, int BufferSize);

	[PreserveSig]
	[Token(Token = "0x6000616")]
	[Address(RVA = "0xCA6658", Offset = "0xCA6658", VA = "0xCA6658")]
	private static extern void ovrVoiceModDll_Shutdown();

	[PreserveSig]
	[Token(Token = "0x6000617")]
	[Address(RVA = "0xCA66E4", Offset = "0xCA66E4", VA = "0xCA66E4")]
	private static extern IntPtr ovrVoicemodDll_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[PreserveSig]
	[Token(Token = "0x6000618")]
	[Address(RVA = "0xCA6798", Offset = "0xCA6798", VA = "0xCA6798")]
	private static extern int ovrVoiceModDll_CreateContext(ref uint Context);

	[PreserveSig]
	[Token(Token = "0x6000619")]
	[Address(RVA = "0xCA6834", Offset = "0xCA6834", VA = "0xCA6834")]
	private static extern int ovrVoiceModDll_DestroyContext(uint Context);

	[PreserveSig]
	[Token(Token = "0x600061A")]
	[Address(RVA = "0xCA68D0", Offset = "0xCA68D0", VA = "0xCA68D0")]
	private static extern int ovrVoiceModDll_SendParameter(uint Context, int Parameter, int Value);

	[PreserveSig]
	[Token(Token = "0x600061B")]
	[Address(RVA = "0xCA6984", Offset = "0xCA6984", VA = "0xCA6984")]
	private static extern int ovrVoiceModDll_ProcessFrame(uint Context, uint Flags, float[] AudioBuffer);

	[PreserveSig]
	[Token(Token = "0x600061C")]
	[Address(RVA = "0xCA6A40", Offset = "0xCA6A40", VA = "0xCA6A40")]
	private static extern int ovrVoiceModDll_ProcessFrameInterleaved(uint Context, uint Flags, float[] AudioBuffer);

	[PreserveSig]
	[Token(Token = "0x600061D")]
	[Address(RVA = "0xCA6AFC", Offset = "0xCA6AFC", VA = "0xCA6AFC")]
	private static extern int ovrVoiceModDll_GetAverageAbsVolume(uint Context, ref float Volume);

	[Token(Token = "0x600061E")]
	[Address(RVA = "0xCA6BA8", Offset = "0xCA6BA8", VA = "0xCA6BA8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0xCA6E44", Offset = "0xCA6E44", VA = "0xCA6E44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0xCA6E48", Offset = "0xCA6E48", VA = "0xCA6E48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0xCA6E4C", Offset = "0xCA6E4C", VA = "0xCA6E4C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0xCA6F58", Offset = "0xCA6F58", VA = "0xCA6F58")]
	public static int IsInitialized()
	{
		return default(int);
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0xCA6FC0", Offset = "0xCA6FC0", VA = "0xCA6FC0")]
	public static int CreateContext(ref uint context)
	{
		return default(int);
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0xCA7054", Offset = "0xCA7054", VA = "0xCA7054")]
	public static int DestroyContext(uint context)
	{
		return default(int);
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0xCA70E8", Offset = "0xCA70E8", VA = "0xCA70E8")]
	public static int SendParameter(uint context, int parameter, int value)
	{
		return default(int);
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0xCA7198", Offset = "0xCA7198", VA = "0xCA7198")]
	public static int ProcessFrame(uint context, float[] audioBuffer)
	{
		return default(int);
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0xCA7244", Offset = "0xCA7244", VA = "0xCA7244")]
	public static int ProcessFrameInterleaved(uint context, float[] audioBuffer)
	{
		return default(int);
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0xCA72F0", Offset = "0xCA72F0", VA = "0xCA72F0")]
	public static float GetAverageAbsVolume(uint context)
	{
		return default(float);
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0xCA7394", Offset = "0xCA7394", VA = "0xCA7394")]
	public OVRVoiceMod()
	{
	}
}
[Token(Token = "0x2000154")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x879BE8", Offset = "0x879BE8")]
public class OVRVoiceModContext : MonoBehaviour
{
	[Token(Token = "0x2000295")]
	public enum ovrVoiceModParams
	{
		[Token(Token = "0x4000E67")]
		MixInputAudio,
		[Token(Token = "0x4000E68")]
		PitchInputAudio,
		[Token(Token = "0x4000E69")]
		SetBands,
		[Token(Token = "0x4000E6A")]
		FormantCorrection,
		[Token(Token = "0x4000E6B")]
		Carrier1_TrackPitch,
		[Token(Token = "0x4000E6C")]
		Carrier1_Type,
		[Token(Token = "0x4000E6D")]
		Carrier1_Gain,
		[Token(Token = "0x4000E6E")]
		Carrier1_Frequency,
		[Token(Token = "0x4000E6F")]
		Carrier1_Note,
		[Token(Token = "0x4000E70")]
		Carrier1_PulseWidth,
		[Token(Token = "0x4000E71")]
		Carrier1_CycledNoiseSize,
		[Token(Token = "0x4000E72")]
		Carrier2_TrackPitch,
		[Token(Token = "0x4000E73")]
		Carrier2_Type,
		[Token(Token = "0x4000E74")]
		Carrier2_Gain,
		[Token(Token = "0x4000E75")]
		Carrier2_Frequency,
		[Token(Token = "0x4000E76")]
		Carrier2_Note,
		[Token(Token = "0x4000E77")]
		Carrier2_PulseWidth,
		[Token(Token = "0x4000E78")]
		Carrier2_CycledNoiseSize,
		[Token(Token = "0x4000E79")]
		Count
	}

	[Token(Token = "0x2000296")]
	public struct VMPreset
	{
		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string info;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Color color;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float mix;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float pitch;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int bands;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int formant;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int c1PTrack;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int c1Type;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float c1Gain;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float c1Freq;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int c1Note;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float c1PW;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int c1CNS;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int c2PTrack;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int c2Type;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float c2Gain;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float c2Freq;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public int c2Note;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float c2PW;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public int c2CNS;
	}

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float gain;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool audioMute;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public KeyCode loopback;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private VMPreset[] VMPresets;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float VM_MixAudio;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float VM_Pitch;

	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int VM_Bands;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int VM_FormantCorrect;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int VM_C1_TrackPitch;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int VM_C1_Type;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float VM_C1_Gain;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float VM_C1_Freq;

	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int VM_C1_Note;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float VM_C1_PulseWidth;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int VM_C1_CycledNoiseSize;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int VM_C2_TrackPitch;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int VM_C2_Type;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float VM_C2_Gain;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float VM_C2_Freq;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int VM_C2_Note;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float VM_C2_PulseWidth;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int VM_C2_CycledNoiseSize;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private uint context;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float prevVol;

	[Token(Token = "0x600062B")]
	[Address(RVA = "0xCA73FC", Offset = "0xCA73FC", VA = "0xCA73FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0xCA74BC", Offset = "0xCA74BC", VA = "0xCA74BC")]
	private void Start()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0xCA7A58", Offset = "0xCA7A58", VA = "0xCA7A58")]
	private void Update()
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0xCA7CDC", Offset = "0xCA7CDC", VA = "0xCA7CDC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0xCA7E00", Offset = "0xCA7E00", VA = "0xCA7E00")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0xCA8040", Offset = "0xCA8040", VA = "0xCA8040")]
	public int SendParameter(ovrVoiceModParams parameter, int value)
	{
		return default(int);
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0xCA80F4", Offset = "0xCA80F4", VA = "0xCA80F4")]
	public bool SetPreset(int preset)
	{
		return default(bool);
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0xCA8624", Offset = "0xCA8624", VA = "0xCA8624")]
	public int GetNumPresets()
	{
		return default(int);
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0xCA8650", Offset = "0xCA8650", VA = "0xCA8650")]
	public Color GetPresetColor(int preset)
	{
		return default(Color);
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0xCA86EC", Offset = "0xCA86EC", VA = "0xCA86EC")]
	public float GetAverageAbsVolume()
	{
		return default(float);
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0xCA8790", Offset = "0xCA8790", VA = "0xCA8790")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0xCA7C34", Offset = "0xCA7C34", VA = "0xCA7C34")]
	private void UpdateVoiceModUpdate()
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0xCA76A4", Offset = "0xCA76A4", VA = "0xCA76A4")]
	private void SendVoiceModUpdate()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0xCA887C", Offset = "0xCA887C", VA = "0xCA887C")]
	public OVRVoiceModContext()
	{
	}
}
[Token(Token = "0x2000155")]
public class HurtFlashEffect : MonoBehaviour
{
	[Token(Token = "0x2000297")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B624", Offset = "0x87B624")]
	private sealed class <FlashRoutine>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HurtFlashEffect <>4__this;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <fillPhase>5__2;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <fillColor>5__3;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WaitForSeconds <wait>5__4;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__5;

		[Token(Token = "0x17000111")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CE9")]
			[Address(RVA = "0xB1CD8C", Offset = "0xB1CD8C", VA = "0xB1CD8C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000112")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CEB")]
			[Address(RVA = "0xB1CDFC", Offset = "0xB1CDFC", VA = "0xB1CDFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0xB1CAA0", Offset = "0xB1CAA0", VA = "0xB1CAA0")]
		[DebuggerHidden]
		public <FlashRoutine>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0xB1CB58", Offset = "0xB1CB58", VA = "0xB1CB58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0xB1CB5C", Offset = "0xB1CB5C", VA = "0xB1CB5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0xB1CD94", Offset = "0xB1CD94", VA = "0xB1CD94", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000694")]
	private const int DefaultFlashCount = 3;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int flashCount;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color flashColor;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x87DB24", Offset = "0x87DB24")]
	public float interval;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string fillPhaseProperty;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string fillColorProperty;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MaterialPropertyBlock mpb;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x6000639")]
	[Address(RVA = "0xB1C92C", Offset = "0xB1C92C", VA = "0xB1C92C")]
	public void Flash()
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0xB1CA2C", Offset = "0xB1CA2C", VA = "0xB1CA2C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x883204", Offset = "0x883204")]
	private IEnumerator FlashRoutine()
	{
		return null;
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0xB1CACC", Offset = "0xB1CACC", VA = "0xB1CACC")]
	public HurtFlashEffect()
	{
	}
}
[Token(Token = "0x2000156")]
public class ReloadSceneOnKeyDown : MonoBehaviour
{
	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public KeyCode reloadKey;

	[Token(Token = "0x600063C")]
	[Address(RVA = "0xA14F60", Offset = "0xA14F60", VA = "0xA14F60")]
	private void Update()
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0xA14FB0", Offset = "0xA14FB0", VA = "0xA14FB0")]
	public ReloadSceneOnKeyDown()
	{
	}
}
[Token(Token = "0x2000157")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x879C4C", Offset = "0x879C4C")]
public class HoloVideoObject : MonoBehaviour, IDisposable
{
	[Token(Token = "0x2000298")]
	public delegate void OnOpenEvent(HoloVideoObject sender, string url);

	[Token(Token = "0x2000299")]
	public delegate void OnFrameInfoEvent(HoloVideoObject sender, SVFFrameInfo frameInfo);

	[Token(Token = "0x200029A")]
	public delegate void OnRenderEvent(HoloVideoObject sender);

	[Token(Token = "0x200029B")]
	public delegate void OnEndOfStream(HoloVideoObject sender);

	[Token(Token = "0x200029C")]
	public delegate void OnFatalErrorEvent(HoloVideoObject sender);

	[Token(Token = "0x200029D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B634", Offset = "0x87B634")]
	private sealed class <FillUnityBuffers>d__54 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HoloVideoObject <>4__this;

		[Token(Token = "0x17000113")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D03")]
			[Address(RVA = "0xB19828", Offset = "0xB19828", VA = "0xB19828", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000114")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D05")]
			[Address(RVA = "0xB19898", Offset = "0xB19898", VA = "0xB19898", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0xB19728", Offset = "0xB19728", VA = "0xB19728")]
		[DebuggerHidden]
		public <FillUnityBuffers>d__54(int <>1__state)
		{
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0xB19754", Offset = "0xB19754", VA = "0xB19754", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0xB19758", Offset = "0xB19758", VA = "0xB19758", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0xB19830", Offset = "0xB19830", VA = "0xB19830", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200029E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B644", Offset = "0x87B644")]
	private sealed class <>c__DisplayClass70_0
	{
		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public HoloVideoObject <>4__this;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 defaultBoundsScale;

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0xB19468", Offset = "0xB19468", VA = "0xB19468")]
		public <>c__DisplayClass70_0()
		{
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0xB19470", Offset = "0xB19470", VA = "0xB19470")]
		internal bool <OpenAsync>b__0()
		{
			return default(bool);
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x200029F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B654", Offset = "0x87B654")]
	private struct <OpenAsync>d__70 : IAsyncStateMachine
	{
		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HoloVideoObject <>4__this;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool shouldPlayWhenReady;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TaskAwaiter<bool> <>u__1;

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0x921580", Offset = "0x921580", VA = "0x921580", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0x921588", Offset = "0x921588", VA = "0x921588", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x20002A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B664", Offset = "0x87B664")]
	private struct <CloseAsync>d__80 : IAsyncStateMachine
	{
		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HoloVideoObject <>4__this;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0x92156C", Offset = "0x92156C", VA = "0x92156C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0x921574", Offset = "0x921574", VA = "0x921574", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87DB44", Offset = "0x87DB44")]
	public string Url;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool ShouldAutoPlay;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float _audioVolume;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 audioSourceOffset;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool flipHandedness;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public float _clockScale;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool computeNormals;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SVFOpenInfo Settings;

	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87DB9C", Offset = "0x87DB9C")]
	public uint DefaultMaxVertexCount;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public uint DefaultMaxIndexCount;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Bounds localSpaceBounds;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Mesh[] meshes;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private MeshFilter meshFilter;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private BoxCollider HVCollider;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Material material;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private AudioListener listener;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected SVFUnityPluginInterop pluginInterop;

	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	protected bool isInitialized;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	protected SVFOpenInfo openInfo;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public SVFFileInfo fileInfo;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	protected SVFFrameInfo lastFrameInfo;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public OnOpenEvent OnOpenNotify;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public OnFrameInfoEvent OnUpdateFrameInfoNotify;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public OnRenderEvent OnRenderCallback;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public OnFatalErrorEvent OnFatalError;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public OnEndOfStream OnEndOfStreamNotify;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private Coroutine UnityBufferCoroutine;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Thread mainThread;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private Logger logger;

	[Token(Token = "0x40006BB")]
	private const string TAG = "HoloVideoObject";

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private bool isPlaying;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E1")]
	private bool ShouldPauseAfterPlay;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E2")]
	private bool shouldPlayWhenReady;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87DBD4", Offset = "0x87DBD4")]
	public uint PauseFrameID;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static AndroidJavaObject javaPlugin;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly object javaPluginLock;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private bool wasPlaying;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E9")]
	private bool isInstanceDisposed;

	[Token(Token = "0x17000048")]
	public float AudioVolume
	{
		[Token(Token = "0x600063E")]
		[Address(RVA = "0xA4528C", Offset = "0xA4528C", VA = "0xA4528C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600063F")]
		[Address(RVA = "0xA45294", Offset = "0xA45294", VA = "0xA45294")]
		set
		{
		}
	}

	[Token(Token = "0x17000049")]
	public float ClockScale
	{
		[Token(Token = "0x6000640")]
		[Address(RVA = "0xA452B0", Offset = "0xA452B0", VA = "0xA452B0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000641")]
		[Address(RVA = "0xA452C8", Offset = "0xA452C8", VA = "0xA452C8")]
		set
		{
		}
	}

	[Token(Token = "0x1700004A")]
	public Bounds BoundingBox
	{
		[Token(Token = "0x6000642")]
		[Address(RVA = "0xA452E4", Offset = "0xA452E4", VA = "0xA452E4")]
		get
		{
			return default(Bounds);
		}
	}

	[Token(Token = "0x1700004B")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000643")]
		[Address(RVA = "0xA4531C", Offset = "0xA4531C", VA = "0xA4531C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0xA45324", Offset = "0xA45324", VA = "0xA45324")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0xA456E8", Offset = "0xA456E8", VA = "0xA456E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0xA45728", Offset = "0xA45728", VA = "0xA45728")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x883268", Offset = "0x883268")]
	private IEnumerator FillUnityBuffers()
	{
		return null;
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0xA4579C", Offset = "0xA4579C", VA = "0xA4579C")]
	private void OnRenderObject()
	{
	}

	[Token(Token = "0x6000648")]
	[Address(RVA = "0xA457B4", Offset = "0xA457B4", VA = "0xA457B4")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0xA458A4", Offset = "0xA458A4", VA = "0xA458A4")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0xA45994", Offset = "0xA45994", VA = "0xA45994")]
	private AudioListener Listener()
	{
		return null;
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0xA45AA8", Offset = "0xA45AA8", VA = "0xA45AA8")]
	protected void Update3DAudio()
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0xA45C70", Offset = "0xA45C70", VA = "0xA45C70")]
	public void Update()
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0xA4682C", Offset = "0xA4682C", VA = "0xA4682C")]
	private static uint Roundup(uint x, uint multiple)
	{
		return default(uint);
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0xA46848", Offset = "0xA46848", VA = "0xA46848")]
	protected void CreateTexture(int width, int height)
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0xA45FA8", Offset = "0xA45FA8", VA = "0xA45FA8")]
	protected void UpdateUnityBuffers(bool forceNewMesh = false, bool meshDoubleBuffer = false)
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0xA46B48", Offset = "0xA46B48", VA = "0xA46B48", Slot = "5")]
	protected virtual void HandleOnUpdateFrameInfo(SVFFrameInfo frameInfo)
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0xA46B94", Offset = "0xA46B94", VA = "0xA46B94", Slot = "6")]
	protected virtual void HandleOnOpen(string url)
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0xA46BB8", Offset = "0xA46BB8", VA = "0xA46BB8", Slot = "7")]
	protected virtual void HandleOnRender()
	{
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0xA43F6C", Offset = "0xA43F6C", VA = "0xA43F6C")]
	public bool Open(string urlPath)
	{
		return default(bool);
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0xA4700C", Offset = "0xA4700C", VA = "0xA4700C")]
	private static bool CheckURLValid(string source)
	{
		return default(bool);
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0xA46BD4", Offset = "0xA46BD4", VA = "0xA46BD4")]
	public bool Open(string urlPath, Vector3 defaultBoundsScale)
	{
		return default(bool);
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0xA44250", Offset = "0xA44250", VA = "0xA44250")]
	[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x8832CC", Offset = "0x8832CC")]
	public void OpenAsync(bool shouldPlayWhenReady = false)
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0xA47444", Offset = "0xA47444", VA = "0xA47444")]
	private string ConstructFullUrl(string urlPath)
	{
		return null;
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0xA46E94", Offset = "0xA46E94", VA = "0xA46E94")]
	private void PostOpenMainThreadSetup(string urlPath)
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0xA43FDC", Offset = "0xA43FDC", VA = "0xA43FDC")]
	public bool Play()
	{
		return default(bool);
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0xA47594", Offset = "0xA47594", VA = "0xA47594")]
	public bool Pause()
	{
		return default(bool);
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0xA475B4", Offset = "0xA475B4", VA = "0xA475B4")]
	public void DisplayFrame(uint frameToStopOn = 1u)
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0xA47624", Offset = "0xA47624", VA = "0xA47624")]
	private void PauseOnFrame(HoloVideoObject sender, SVFFrameInfo frameInfo)
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0xA47610", Offset = "0xA47610", VA = "0xA47610")]
	public bool Rewind()
	{
		return default(bool);
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0xA47674", Offset = "0xA47674", VA = "0xA47674")]
	public bool Stop()
	{
		return default(bool);
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0xA476F0", Offset = "0xA476F0", VA = "0xA476F0")]
	public bool Close()
	{
		return default(bool);
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0xA446E4", Offset = "0xA446E4", VA = "0xA446E4")]
	[AttributeAttribute(Name = "AsyncStateMachineAttribute", RVA = "0x883330", Offset = "0x883330")]
	public void CloseAsync()
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0xA478CC", Offset = "0xA478CC", VA = "0xA478CC")]
	public void Cleanup()
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0xA47944", Offset = "0xA47944", VA = "0xA47944")]
	public SVFPlaybackState GetCurrentState()
	{
		return default(SVFPlaybackState);
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0xA47150", Offset = "0xA47150", VA = "0xA47150")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0xA47958", Offset = "0xA47958", VA = "0xA47958")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0xA47990", Offset = "0xA47990", VA = "0xA47990")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0xA479B4", Offset = "0xA479B4", VA = "0xA479B4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0xA479D8", Offset = "0xA479D8", VA = "0xA479D8", Slot = "8")]
	protected virtual void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0xA479F0", Offset = "0xA479F0", VA = "0xA479F0", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0xA47A6C", Offset = "0xA47A6C", VA = "0xA47A6C", Slot = "1")]
	~HoloVideoObject()
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0xA47AEC", Offset = "0xA47AEC", VA = "0xA47AEC")]
	public AudioDeviceInfo[] GetAudioDevices()
	{
		return null;
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0xA47B4C", Offset = "0xA47B4C", VA = "0xA47B4C")]
	public string GetVideoFolder()
	{
		return null;
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0xA47B54", Offset = "0xA47B54", VA = "0xA47B54")]
	public HoloVideoObject()
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0xA47D44", Offset = "0xA47D44", VA = "0xA47D44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x883394", Offset = "0x883394")]
	private void <CloseAsync>b__80_0()
	{
	}
}
[Token(Token = "0x2000158")]
public class HVConductor : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20002A1")]
	public struct HVSequence
	{
		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<HoloVideoObject> VideosToLoad;
	}

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool ShouldLoopSequences;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<HVSequence> sequenceList;

	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private int currSequence;

	[Token(Token = "0x600066F")]
	[Address(RVA = "0xA43DC0", Offset = "0xA43DC0", VA = "0xA43DC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0xA4405C", Offset = "0xA4405C", VA = "0xA4405C")]
	private void LoadNextSequence()
	{
	}

	[Token(Token = "0x6000671")]
	[Address(RVA = "0xA44318", Offset = "0xA44318", VA = "0xA44318")]
	public void GoToNextSequence()
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0xA447AC", Offset = "0xA447AC", VA = "0xA447AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0xA447B0", Offset = "0xA447B0", VA = "0xA447B0")]
	public void AddVideoToSequence(int sequence, HoloVideoObject video)
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0xA448BC", Offset = "0xA448BC", VA = "0xA448BC")]
	public HVConductor()
	{
	}
}
[Serializable]
[Token(Token = "0x2000159")]
public struct HCapSettingsInterop
{
	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint defaultMaxVertexCount;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint defaultMaxIndexCount;
}
[Serializable]
[StructLayout(0, CharSet = CharSet.Unicode)]
[Token(Token = "0x200015A")]
public struct SVFOpenInfo
{
	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool AudioDisabled;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
	public bool UseKeyedMutex;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public bool RenderViaClock;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
	public bool OutputNormals;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public bool StartDownloadOnOpen;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
	public bool AutoLooping;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
	public bool forceSoftwareClock;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float PlaybackRate;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float HRTFMinGain;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float HRTFMaxGain;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float HRTFGainDistance;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float HRTFCutoffDistance;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string AudioDeviceId;
}
[Serializable]
[Token(Token = "0x200015B")]
public struct SVFFileInfo
{
	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool hasAudio;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong duration100ns;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint frameCount;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public uint maxVertexCount;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public uint maxIndexCount;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float bitrateMbps;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fileSize;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public double minX;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public double minY;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public double minZ;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public double maxX;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public double maxY;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public double maxZ;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public uint fileWidth;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public uint fileHeight;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool hasNormals;
}
[Token(Token = "0x200015C")]
public enum SVFReaderStateInterop
{
	[Token(Token = "0x40006E7")]
	Unknown,
	[Token(Token = "0x40006E8")]
	Initialized,
	[Token(Token = "0x40006E9")]
	OpenPending,
	[Token(Token = "0x40006EA")]
	Opened,
	[Token(Token = "0x40006EB")]
	Prerolling,
	[Token(Token = "0x40006EC")]
	Ready,
	[Token(Token = "0x40006ED")]
	Buffering,
	[Token(Token = "0x40006EE")]
	Closing,
	[Token(Token = "0x40006EF")]
	Closed,
	[Token(Token = "0x40006F0")]
	EndOfStream,
	[Token(Token = "0x40006F1")]
	ShuttingDown
}
[Token(Token = "0x200015D")]
public enum VRChannel
{
	[Token(Token = "0x40006F3")]
	Mono,
	[Token(Token = "0x40006F4")]
	Left,
	[Token(Token = "0x40006F5")]
	Right,
	[Token(Token = "0x40006F6")]
	Center,
	[Token(Token = "0x40006F7")]
	Head
}
[Serializable]
[Token(Token = "0x200015E")]
public struct SVFStatusInterop
{
	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool isLiveSVFSource;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lastReadFrame;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint unsuccessfulReadFrameCount;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint droppedFrameCount;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint errorHresult;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int lastKnownState;
}
[Serializable]
[Token(Token = "0x200015F")]
public struct SVFFrameInfo
{
	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong frameTimestamp;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public double minX;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public double minY;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public double minZ;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public double maxX;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public double maxY;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public double maxZ;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public uint frameId;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public uint vertexCount;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public uint indexCount;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int textureWidth;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int textureHeight;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool isEOS;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	public bool isRepeatedFrame;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	public bool isKeyFrame;
}
[Serializable]
[Token(Token = "0x2000160")]
public struct Matrix4x4PluginInterop
{
	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float m00;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float m01;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float m02;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float m03;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float m10;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float m11;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m12;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m13;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m20;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float m21;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m22;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float m23;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m30;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float m31;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float m32;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float m33;
}
[Serializable]
[Token(Token = "0x2000161")]
public struct Vector3Interop
{
	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;
}
[Token(Token = "0x2000162")]
public enum SVFPlaybackState
{
	[Token(Token = "0x4000721")]
	Empty,
	[Token(Token = "0x4000722")]
	Initialized,
	[Token(Token = "0x4000723")]
	Opened,
	[Token(Token = "0x4000724")]
	Playing,
	[Token(Token = "0x4000725")]
	Paused,
	[Token(Token = "0x4000726")]
	Closed,
	[Token(Token = "0x4000727")]
	Broken
}
[Token(Token = "0x2000163")]
public enum LogLevel
{
	[Token(Token = "0x4000729")]
	None,
	[Token(Token = "0x400072A")]
	Critical,
	[Token(Token = "0x400072B")]
	Message,
	[Token(Token = "0x400072C")]
	Verbose,
	[Token(Token = "0x400072D")]
	Debug
}
[Serializable]
[StructLayout(0, CharSet = CharSet.Unicode)]
[Token(Token = "0x2000164")]
public struct AudioDeviceInfo
{
	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string Name;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public string Id;
}
[Token(Token = "0x2000165")]
internal class SVFPlaybackStateHelper
{
	[Token(Token = "0x6000675")]
	[Address(RVA = "0xA15A00", Offset = "0xA15A00", VA = "0xA15A00")]
	public static SVFPlaybackState FromInt(int val)
	{
		return default(SVFPlaybackState);
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0xA15A04", Offset = "0xA15A04", VA = "0xA15A04")]
	public SVFPlaybackStateHelper()
	{
	}
}
[Token(Token = "0x2000166")]
internal class SVFReaderStateHelper
{
	[Token(Token = "0x6000677")]
	[Address(RVA = "0xA15A0C", Offset = "0xA15A0C", VA = "0xA15A0C")]
	public static SVFReaderStateInterop FromInt(int val)
	{
		return default(SVFReaderStateInterop);
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0xA15A10", Offset = "0xA15A10", VA = "0xA15A10")]
	public SVFReaderStateHelper()
	{
	}
}
[Token(Token = "0x2000167")]
public class SVFUnityPluginInterop : IDisposable
{
	[Token(Token = "0x4000730")]
	private const string DllName = "SVFUnityPlugin";

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool s_logstack;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Logger logger;

	[Token(Token = "0x4000733")]
	private const int InvalidID = -1;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int instanceId;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool isInstanceDisposed;

	[Token(Token = "0x1700004C")]
	public int InstanceId
	{
		[Token(Token = "0x60006AF")]
		[Address(RVA = "0xA18428", Offset = "0xA18428", VA = "0xA18428")]
		get
		{
			return default(int);
		}
	}

	[PreserveSig]
	[Token(Token = "0x6000679")]
	[Address(RVA = "0xA15A18", Offset = "0xA15A18", VA = "0xA15A18")]
	public static extern bool InteropTestUnityBuffersValid(int instanceId);

	[Token(Token = "0x600067A")]
	[Address(RVA = "0xA15ABC", Offset = "0xA15ABC", VA = "0xA15ABC")]
	public bool TestUnityBuffersValid()
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x600067B")]
	[Address(RVA = "0xA15B3C", Offset = "0xA15B3C", VA = "0xA15B3C")]
	public static extern bool InteropReleaseUnityBuffers(int instanceId);

	[Token(Token = "0x600067C")]
	[Address(RVA = "0xA15BE0", Offset = "0xA15BE0", VA = "0xA15BE0")]
	public bool ReleaseUnityBuffers()
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x600067D")]
	[Address(RVA = "0xA15C60", Offset = "0xA15C60", VA = "0xA15C60")]
	public static extern bool InteropSetUnityBuffers(int instanceId, IntPtr texture, int w, int h, IntPtr vertexBuffer, int vertexCount, IntPtr indexBuffer, int indexCount);

	[Token(Token = "0x600067E")]
	[Address(RVA = "0xA15D5C", Offset = "0xA15D5C", VA = "0xA15D5C")]
	public void SetUnityBuffers(IntPtr texture, int w, int h, IntPtr vertexBuffer, int vertexCount, IntPtr indexBuffer, int indexCount)
	{
	}

	[PreserveSig]
	[Token(Token = "0x600067F")]
	[Address(RVA = "0xA15E40", Offset = "0xA15E40", VA = "0xA15E40")]
	private static extern IntPtr InteropGetUnityRenderModeEventFunc();

	[Token(Token = "0x6000680")]
	[Address(RVA = "0xA15ECC", Offset = "0xA15ECC", VA = "0xA15ECC")]
	public void IssueUnityRenderModePluginEvent()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000681")]
	[Address(RVA = "0xA15FAC", Offset = "0xA15FAC", VA = "0xA15FAC")]
	private static extern int InteropCreateHCapObject(ref HCapSettingsInterop hcapSettings);

	[Token(Token = "0x6000682")]
	[Address(RVA = "0xA16048", Offset = "0xA16048", VA = "0xA16048")]
	public void CreateHCapObject(HCapSettingsInterop hcapSettings)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000683")]
	[Address(RVA = "0xA16160", Offset = "0xA16160", VA = "0xA16160")]
	private static extern bool InteropDestroyHCapObject(int instanceID);

	[Token(Token = "0x6000684")]
	[Address(RVA = "0xA16204", Offset = "0xA16204", VA = "0xA16204")]
	public bool DestroyHCapObject()
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000685")]
	[Address(RVA = "0xA162E8", Offset = "0xA162E8", VA = "0xA162E8")]
	private static extern bool InteropOpenHCapObject(int instanceId, string filePath, ref SVFOpenInfo openInfo);

	[Token(Token = "0x6000686")]
	[Address(RVA = "0xA16410", Offset = "0xA16410", VA = "0xA16410")]
	public bool OpenHCapObject(string filePath, ref SVFOpenInfo openInfo)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000687")]
	[Address(RVA = "0xA16564", Offset = "0xA16564", VA = "0xA16564")]
	private static extern bool InteropCloseHCapObject(int instanceId);

	[Token(Token = "0x6000688")]
	[Address(RVA = "0xA16608", Offset = "0xA16608", VA = "0xA16608")]
	public bool CloseHCapObject()
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000689")]
	[Address(RVA = "0xA166E4", Offset = "0xA166E4", VA = "0xA166E4")]
	private static extern bool InteropPlayHCapObject(int instanceId);

	[Token(Token = "0x600068A")]
	[Address(RVA = "0xA16784", Offset = "0xA16784", VA = "0xA16784")]
	public bool PlayHCapObject()
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x600068B")]
	[Address(RVA = "0xA16860", Offset = "0xA16860", VA = "0xA16860")]
	private static extern bool InteropPauseHCapObject(int instanceId);

	[Token(Token = "0x600068C")]
	[Address(RVA = "0xA16904", Offset = "0xA16904", VA = "0xA16904")]
	public bool PauseHCapObject()
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x600068D")]
	[Address(RVA = "0xA169E0", Offset = "0xA169E0", VA = "0xA169E0")]
	private static extern bool InteropRewindHCapObject(int instanceId);

	[Token(Token = "0x600068E")]
	[Address(RVA = "0xA16A84", Offset = "0xA16A84", VA = "0xA16A84")]
	public bool RewindHCapObject()
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x600068F")]
	[Address(RVA = "0xA16B60", Offset = "0xA16B60", VA = "0xA16B60")]
	private static extern bool InteropCheckEOS(int instanceId);

	[Token(Token = "0x6000690")]
	[Address(RVA = "0xA16C04", Offset = "0xA16C04", VA = "0xA16C04")]
	public bool CheckEOS()
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000691")]
	[Address(RVA = "0xA16CE0", Offset = "0xA16CE0", VA = "0xA16CE0")]
	private static extern int InteropGetHCapState(int instanceId);

	[Token(Token = "0x6000692")]
	[Address(RVA = "0xA16D7C", Offset = "0xA16D7C", VA = "0xA16D7C")]
	public SVFPlaybackState GetHCapState()
	{
		return default(SVFPlaybackState);
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0xA16E58", Offset = "0xA16E58", VA = "0xA16E58")]
	public bool IsPlaying()
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000694")]
	[Address(RVA = "0xA16E74", Offset = "0xA16E74", VA = "0xA16E74")]
	private static extern bool InteropGetHCapSVFStatus(int instanceId, ref SVFStatusInterop svfStatus);

	[Token(Token = "0x6000695")]
	[Address(RVA = "0xA16F2C", Offset = "0xA16F2C", VA = "0xA16F2C")]
	public bool GetHCapSVFStatus(ref SVFStatusInterop svfStatus, ref SVFReaderStateInterop svfInternalState)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000696")]
	[Address(RVA = "0xA16FCC", Offset = "0xA16FCC", VA = "0xA16FCC")]
	private static extern bool InteropGetHCapObjectFileInfo(int instanceId, ref SVFFileInfo info);

	[Token(Token = "0x6000697")]
	[Address(RVA = "0xA17080", Offset = "0xA17080", VA = "0xA17080")]
	public bool GetHCapObjectFileInfo(ref SVFFileInfo fileInfo)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x6000698")]
	[Address(RVA = "0xA17164", Offset = "0xA17164", VA = "0xA17164")]
	private static extern bool InteropGetHCapObjectFrameInfo(int instanceId, ref SVFFrameInfo info);

	[Token(Token = "0x6000699")]
	[Address(RVA = "0xA17218", Offset = "0xA17218", VA = "0xA17218")]
	public bool GetHCapObjectFrameInfo(ref SVFFrameInfo frameInfo)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x600069A")]
	[Address(RVA = "0xA172FC", Offset = "0xA172FC", VA = "0xA172FC")]
	private static extern bool InteropGetSeekRange(int instanceId, ref ulong frameStart, ref ulong frameEnd);

	[Token(Token = "0x600069B")]
	[Address(RVA = "0xA173B8", Offset = "0xA173B8", VA = "0xA173B8")]
	public bool GetSeekRange(ref ulong frameStart, ref ulong frameEnd)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x600069C")]
	[Address(RVA = "0xA174B0", Offset = "0xA174B0", VA = "0xA174B0")]
	private static extern void InteropSeekToFrame(int instanceId, ulong frameId);

	[Token(Token = "0x600069D")]
	[Address(RVA = "0xA1755C", Offset = "0xA1755C", VA = "0xA1755C")]
	public void SeekToFrame(ulong frameId)
	{
	}

	[PreserveSig]
	[Token(Token = "0x600069E")]
	[Address(RVA = "0xA1763C", Offset = "0xA1763C", VA = "0xA1763C")]
	private static extern bool InteropSetHCapObjectAudio3DPosition(int instanceId, float x, float y, float z);

	[Token(Token = "0x600069F")]
	[Address(RVA = "0xA17708", Offset = "0xA17708", VA = "0xA17708")]
	public bool SetHCapObjectAudio3DPosition(float x, float y, float z)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60006A0")]
	[Address(RVA = "0xA17814", Offset = "0xA17814", VA = "0xA17814")]
	private static extern bool InteropSetComputeNormals(int instanceId, bool computeNormals);

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0xA178C8", Offset = "0xA178C8", VA = "0xA178C8")]
	public void SetComputeNormals(bool computeNormals)
	{
	}

	[PreserveSig]
	[Token(Token = "0x60006A2")]
	[Address(RVA = "0xA179A8", Offset = "0xA179A8", VA = "0xA179A8")]
	private static extern float InteropGetClockScale(int instanceId);

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0xA17A44", Offset = "0xA17A44", VA = "0xA17A44")]
	public float GetClockScale()
	{
		return default(float);
	}

	[PreserveSig]
	[Token(Token = "0x60006A4")]
	[Address(RVA = "0xA17AC4", Offset = "0xA17AC4", VA = "0xA17AC4")]
	private static extern void InteropSetClockScale(int instanceId, float scale);

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0xA17B70", Offset = "0xA17B70", VA = "0xA17B70")]
	public void SetClockScale(float scale)
	{
	}

	[PreserveSig]
	[Token(Token = "0x60006A6")]
	[Address(RVA = "0xA17C00", Offset = "0xA17C00", VA = "0xA17C00")]
	private static extern bool InteropSetAudioVolume(int instanceId, float volume);

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0xA17CB0", Offset = "0xA17CB0", VA = "0xA17CB0")]
	public bool SetAudioVolume(float volume)
	{
		return default(bool);
	}

	[PreserveSig]
	[Token(Token = "0x60006A8")]
	[Address(RVA = "0xA17D44", Offset = "0xA17D44", VA = "0xA17D44")]
	private static extern int InteropEnumerateAudioDevices([In][Out] AudioDeviceInfo[] deviceInfos, int deviceInfosCount);

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0xA17ED8", Offset = "0xA17ED8", VA = "0xA17ED8")]
	public static AudioDeviceInfo[] EnumerateAudioDevices()
	{
		return null;
	}

	[PreserveSig]
	[Token(Token = "0x60006AA")]
	[Address(RVA = "0xA17F94", Offset = "0xA17F94", VA = "0xA17F94")]
	private static extern void InteropEnableTracing(bool enable, int level);

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0xA18040", Offset = "0xA18040", VA = "0xA18040")]
	public void EnableTracing(bool enable, LogLevel logLevel)
	{
	}

	[PreserveSig]
	[Token(Token = "0x60006AC")]
	[Address(RVA = "0xA18214", Offset = "0xA18214", VA = "0xA18214")]
	private static extern string InteropGetNextTraceLine();

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0xA182B8", Offset = "0xA182B8", VA = "0xA182B8")]
	private string GetNextTraceLine()
	{
		return null;
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0xA18314", Offset = "0xA18314", VA = "0xA18314")]
	public string[] GetTrace()
	{
		return null;
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0xA18430", Offset = "0xA18430", VA = "0xA18430")]
	public SVFUnityPluginInterop()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0xA18558", Offset = "0xA18558", VA = "0xA18558", Slot = "5")]
	protected virtual void Dispose(bool disposing)
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0xA185A0", Offset = "0xA185A0", VA = "0xA185A0", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0xA1861C", Offset = "0xA1861C", VA = "0xA1861C", Slot = "1")]
	~SVFUnityPluginInterop()
	{
	}
}
[Token(Token = "0x2000168")]
public class TriggerSync : MonoBehaviour
{
	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float delayBeforePlayback;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HoloVideoObject holoObjct;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string holoFilename;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string audioObjectTag;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip audioClip;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AudioSource audioObject;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool ready;

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0xDED814", Offset = "0xDED814", VA = "0xDED814")]
	public void Play()
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0xDEDA54", Offset = "0xDEDA54", VA = "0xDEDA54")]
	private void VolumetricOpened(HoloVideoObject sender, string url)
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0xDEDAE0", Offset = "0xDEDAE0", VA = "0xDEDAE0")]
	public void StartPlayback()
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0xDEDBF8", Offset = "0xDEDBF8", VA = "0xDEDBF8")]
	public TriggerSync()
	{
	}
}
[Token(Token = "0x2000169")]
public class AmbsionicsFilter : MonoBehaviour
{
	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool filter;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int m_sampleRate;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int m_sampleDepth;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float gain;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int channels1;

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0xA26B58", Offset = "0xA26B58", VA = "0xA26B58")]
	private void Start()
	{
	}

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0xA26B5C", Offset = "0xA26B5C", VA = "0xA26B5C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0xA26B60", Offset = "0xA26B60", VA = "0xA26B60")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0xA26D5C", Offset = "0xA26D5C", VA = "0xA26D5C")]
	public AmbsionicsFilter()
	{
	}
}
[Token(Token = "0x200016A")]
public class CameraCutSequences : MonoBehaviour
{
	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject camGobject;

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0xA29970", Offset = "0xA29970", VA = "0xA29970")]
	private void Start()
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0xA29974", Offset = "0xA29974", VA = "0xA29974")]
	private void Update()
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0xA29B20", Offset = "0xA29B20", VA = "0xA29B20")]
	public CameraCutSequences()
	{
	}
}
[Token(Token = "0x200016B")]
public class MouseControlVR : MonoBehaviour
{
	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float mouseSensitivity;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float clampAngle;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float rotY;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float rotX;

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0xB302A4", Offset = "0xB302A4", VA = "0xB302A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0xB30304", Offset = "0xB30304", VA = "0xB30304")]
	private void Update()
	{
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0xB304A0", Offset = "0xB304A0", VA = "0xB304A0")]
	public MouseControlVR()
	{
	}
}
[Token(Token = "0x200016C")]
public class WriteEXR : MonoBehaviour
{
	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RenderTexture rt;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RenderTexture unfilteredRt;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int HRes;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int WRes;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture2D screenShot;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color[] EXRArray;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool render;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material VRAA;

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0xE021C0", Offset = "0xE021C0", VA = "0xE021C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0xE02278", Offset = "0xE02278", VA = "0xE02278")]
	private void Update()
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0xE023A0", Offset = "0xE023A0", VA = "0xE023A0")]
	public void VideoRenderPrepare()
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0xE024D0", Offset = "0xE024D0", VA = "0xE024D0")]
	public Texture2D GetVideoScreenshot()
	{
		return null;
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0xE026FC", Offset = "0xE026FC", VA = "0xE026FC")]
	public WriteEXR()
	{
	}
}
[Token(Token = "0x200016D")]
public class StereoPanorama : MonoBehaviour
{
	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject mappingSphere;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject eyeCamera;

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0xA7898C", Offset = "0xA7898C", VA = "0xA7898C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0xA789B4", Offset = "0xA789B4", VA = "0xA789B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0xA78A60", Offset = "0xA78A60", VA = "0xA78A60")]
	public StereoPanorama()
	{
	}
}
[Token(Token = "0x200016E")]
public class HideRig : MonoBehaviour
{
	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Camera cam;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VRCapture VRcap;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject rig;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject[] rigObjects;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int iterations;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int i;

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0xA45090", Offset = "0xA45090", VA = "0xA45090")]
	private void Start()
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0xA45100", Offset = "0xA45100", VA = "0xA45100")]
	private void Update()
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0xA4527C", Offset = "0xA4527C", VA = "0xA4527C")]
	public HideRig()
	{
	}
}
[Token(Token = "0x200016F")]
public class LookCamera : MonoBehaviour
{
	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speedNormal;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speedFast;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float mouseSensitivityX;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float mouseSensitivityY;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotY;

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0xB29EB8", Offset = "0xB29EB8", VA = "0xB29EB8")]
	private void Start()
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0xB29F80", Offset = "0xB29F80", VA = "0xB29F80")]
	private void Update()
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0xB2A160", Offset = "0xB2A160", VA = "0xB2A160")]
	public LookCamera()
	{
	}
}
[Token(Token = "0x2000170")]
public class SkyboxChanger : MonoBehaviour
{
	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material[] Skyboxes;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dropdown _dropdown;

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0xA1B84C", Offset = "0xA1B84C", VA = "0xA1B84C")]
	public void Awake()
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0xA1B8A4", Offset = "0xA1B8A4", VA = "0xA1B8A4")]
	public void ChangeSkybox()
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0xA1B914", Offset = "0xA1B914", VA = "0xA1B914")]
	public SkyboxChanger()
	{
	}
}
namespace MiniEXR
{
	[Token(Token = "0x2000171")]
	internal static class HalfHelper
	{
		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static uint[] mantissaTable;

		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static uint[] exponentTable;

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static ushort[] offsetTable;

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static ushort[] baseTable;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static sbyte[] shiftTable;

		[Token(Token = "0x60006D4")]
		[Address(RVA = "0xB2E8B4", Offset = "0xB2E8B4", VA = "0xB2E8B4")]
		private static uint ConvertMantissa(int i)
		{
			return default(uint);
		}

		[Token(Token = "0x60006D5")]
		[Address(RVA = "0xB2E8E0", Offset = "0xB2E8E0", VA = "0xB2E8E0")]
		private static uint[] GenerateMantissaTable()
		{
			return null;
		}

		[Token(Token = "0x60006D6")]
		[Address(RVA = "0xB2EA38", Offset = "0xB2EA38", VA = "0xB2EA38")]
		private static uint[] GenerateExponentTable()
		{
			return null;
		}

		[Token(Token = "0x60006D7")]
		[Address(RVA = "0xB2EBB0", Offset = "0xB2EBB0", VA = "0xB2EBB0")]
		private static ushort[] GenerateOffsetTable()
		{
			return null;
		}

		[Token(Token = "0x60006D8")]
		[Address(RVA = "0xB2ECD4", Offset = "0xB2ECD4", VA = "0xB2ECD4")]
		private static ushort[] GenerateBaseTable()
		{
			return null;
		}

		[Token(Token = "0x60006D9")]
		[Address(RVA = "0xB2EF04", Offset = "0xB2EF04", VA = "0xB2EF04")]
		private static sbyte[] GenerateShiftTable()
		{
			return null;
		}

		[Token(Token = "0x60006DA")]
		[Address(RVA = "0xB2F104", Offset = "0xB2F104", VA = "0xB2F104")]
		public static float HalfToSingle(ushort half)
		{
			return default(float);
		}

		[Token(Token = "0x60006DB")]
		[Address(RVA = "0xB2F264", Offset = "0xB2F264", VA = "0xB2F264")]
		public static ushort SingleToHalf(float single)
		{
			return default(ushort);
		}
	}
	[Token(Token = "0x2000172")]
	public static class MiniEXR
	{
		[Token(Token = "0x60006DD")]
		[Address(RVA = "0xB2F434", Offset = "0xB2F434", VA = "0xB2F434")]
		public static void MiniEXRWrite(string _filePath, uint _width, uint _height, uint _channels, float[] _rgbaArray)
		{
		}

		[Token(Token = "0x60006DE")]
		[Address(RVA = "0xB300B4", Offset = "0xB300B4", VA = "0xB300B4")]
		public static void MiniEXRWrite(string _filePath, uint _width, uint _height, Color[] _colorArray)
		{
		}

		[Token(Token = "0x60006DF")]
		[Address(RVA = "0xB300EC", Offset = "0xB300EC", VA = "0xB300EC")]
		public static byte[] MiniEXRWrite(uint _width, uint _height, Color[] _colorArray)
		{
			return null;
		}

		[Token(Token = "0x60006E0")]
		[Address(RVA = "0xB2F470", Offset = "0xB2F470", VA = "0xB2F470")]
		public static byte[] MiniEXRWrite(uint _width, uint _height, uint _channels, float[] _rgbaArray)
		{
			return null;
		}
	}
}
namespace VRPanorama
{
	[Token(Token = "0x2000173")]
	public class AudioSyncWithVRCapture : MonoBehaviour
	{
		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool triggerAudio;

		[Token(Token = "0x60006E1")]
		[Address(RVA = "0xDEFE74", Offset = "0xDEFE74", VA = "0xDEFE74")]
		private void Start()
		{
		}

		[Token(Token = "0x60006E2")]
		[Address(RVA = "0xDEFE78", Offset = "0xDEFE78", VA = "0xDEFE78")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0xDEFEF0", Offset = "0xDEFEF0", VA = "0xDEFEF0")]
		public AudioSyncWithVRCapture()
		{
		}
	}
	[Token(Token = "0x2000174")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x879CF0", Offset = "0x879CF0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x879CF0", Offset = "0x879CF0")]
	public class CameraCapture : MonoBehaviour
	{
		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _setResolution;

		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int _width;

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int _height;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int _frameRate;

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool _allowSlowDown;

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public FFmpegPipe.Preset _preset;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float _startTime;

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float _recordLength;

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[HideInInspector]
		private Shader _shader;

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _material;

		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private FFmpegPipe _pipe;

		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _elapsed;

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RenderTexture _tempTarget;

		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameObject _tempBlitter;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _activePipeCount;

		[Token(Token = "0x60006E4")]
		[Address(RVA = "0xDF0278", Offset = "0xDF0278", VA = "0xDF0278")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60006E5")]
		[Address(RVA = "0xDF0314", Offset = "0xDF0314", VA = "0xDF0314")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60006E6")]
		[Address(RVA = "0xDF03C8", Offset = "0xDF03C8", VA = "0xDF03C8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60006E7")]
		[Address(RVA = "0xDF06A0", Offset = "0xDF06A0", VA = "0xDF06A0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60006E8")]
		[Address(RVA = "0xDF06B0", Offset = "0xDF06B0", VA = "0xDF06B0")]
		private void Start()
		{
		}

		[Token(Token = "0x60006E9")]
		[Address(RVA = "0xDF0720", Offset = "0xDF0720", VA = "0xDF0720")]
		private void Update()
		{
		}

		[Token(Token = "0x60006EA")]
		[Address(RVA = "0xDF09F4", Offset = "0xDF09F4", VA = "0xDF09F4")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60006EB")]
		[Address(RVA = "0xDF07AC", Offset = "0xDF07AC", VA = "0xDF07AC")]
		private void OpenPipe()
		{
		}

		[Token(Token = "0x60006EC")]
		[Address(RVA = "0xDF03D8", Offset = "0xDF03D8", VA = "0xDF03D8")]
		private void ClosePipe()
		{
		}

		[Token(Token = "0x60006ED")]
		[Address(RVA = "0xDF135C", Offset = "0xDF135C", VA = "0xDF135C")]
		public CameraCapture()
		{
		}
	}
	[Token(Token = "0x2000175")]
	internal static class FFmpegConfig
	{
		[Token(Token = "0x1700004D")]
		public static string BinaryPath
		{
			[Token(Token = "0x60006EE")]
			[Address(RVA = "0xDF138C", Offset = "0xDF138C", VA = "0xDF138C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004E")]
		public static bool CheckAvailable
		{
			[Token(Token = "0x60006EF")]
			[Address(RVA = "0xDF03B0", Offset = "0xDF03B0", VA = "0xDF03B0")]
			get
			{
				return default(bool);
			}
		}
	}
	[Token(Token = "0x2000176")]
	public class FFmpegPipe
	{
		[Token(Token = "0x20002A2")]
		public enum Preset
		{
			[Token(Token = "0x4000EA5")]
			ProRes422,
			[Token(Token = "0x4000EA6")]
			ProRes4444,
			[Token(Token = "0x4000EA7")]
			H264Default,
			[Token(Token = "0x4000EA8")]
			H264Lossless420,
			[Token(Token = "0x4000EA9")]
			H264Lossless444,
			[Token(Token = "0x4000EAA")]
			VP8Default
		}

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DC64", Offset = "0x87DC64")]
		private string <Filename>k__BackingField;

		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87DC74", Offset = "0x87DC74")]
		private string <Error>k__BackingField;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Process _subprocess;

		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private BinaryWriter _stdin;

		[Token(Token = "0x4000777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string[] _suffixes;

		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string[] _options;

		[Token(Token = "0x1700004F")]
		public string Filename
		{
			[Token(Token = "0x60006F0")]
			[Address(RVA = "0xDF1248", Offset = "0xDF1248", VA = "0xDF1248")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8833A4", Offset = "0x8833A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006F1")]
			[Address(RVA = "0xDF1490", Offset = "0xDF1490", VA = "0xDF1490")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8833B4", Offset = "0x8833B4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000050")]
		public string Error
		{
			[Token(Token = "0x60006F2")]
			[Address(RVA = "0xDF1354", Offset = "0xDF1354", VA = "0xDF1354")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8833C4", Offset = "0x8833C4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006F3")]
			[Address(RVA = "0xDF1498", Offset = "0xDF1498", VA = "0xDF1498")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8833D4", Offset = "0x8833D4")]
			private set
			{
			}
		}

		[Token(Token = "0x60006F4")]
		[Address(RVA = "0xDF0D04", Offset = "0xDF0D04", VA = "0xDF0D04")]
		public FFmpegPipe(string name, int width, int height, int framerate, Preset preset)
		{
		}

		[Token(Token = "0x60006F5")]
		[Address(RVA = "0xDF0C84", Offset = "0xDF0C84", VA = "0xDF0C84")]
		public void Write(byte[] data)
		{
		}

		[Token(Token = "0x60006F6")]
		[Address(RVA = "0xDF1250", Offset = "0xDF1250", VA = "0xDF1250")]
		public void Close()
		{
		}

		[Token(Token = "0x60006F7")]
		[Address(RVA = "0xDF14A0", Offset = "0xDF14A0", VA = "0xDF14A0")]
		private static string GetSuffix(Preset preset)
		{
			return null;
		}

		[Token(Token = "0x60006F8")]
		[Address(RVA = "0xDF1540", Offset = "0xDF1540", VA = "0xDF1540")]
		private static string GetOptions(Preset preset)
		{
			return null;
		}
	}
	[Token(Token = "0x2000177")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x879D78", Offset = "0x879D78")]
	internal class Blitter : MonoBehaviour
	{
		[Token(Token = "0x4000779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Type[] _blitterComponents;

		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private RenderTexture _sourceTexture;

		[Token(Token = "0x60006FA")]
		[Address(RVA = "0xDEFF00", Offset = "0xDEFF00", VA = "0xDEFF00")]
		public static GameObject CreateGameObject(Camera originalCamera)
		{
			return null;
		}

		[Token(Token = "0x60006FB")]
		[Address(RVA = "0xDF0094", Offset = "0xDF0094", VA = "0xDF0094")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60006FC")]
		[Address(RVA = "0xDF0110", Offset = "0xDF0110", VA = "0xDF0110")]
		public Blitter()
		{
		}
	}
	[Token(Token = "0x2000178")]
	public class VRBuilderScript : MonoBehaviour
	{
		[Token(Token = "0x400077B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject obj;

		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 spawnPoint;

		[Token(Token = "0x60006FE")]
		[Address(RVA = "0xDF1A4C", Offset = "0xDF1A4C", VA = "0xDF1A4C")]
		public void BuildObject()
		{
		}

		[Token(Token = "0x60006FF")]
		[Address(RVA = "0xDF1B3C", Offset = "0xDF1B3C", VA = "0xDF1B3C")]
		public VRBuilderScript()
		{
		}
	}
	[Token(Token = "0x2000179")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x879DDC", Offset = "0x879DDC")]
	public class VRCompositor : MonoBehaviour
	{
		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private RenderTexture thisRT;

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Camera camVR;

		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Camera[] cameraLayers;

		[Token(Token = "0x6000700")]
		[Address(RVA = "0xDFFE20", Offset = "0xDFFE20", VA = "0xDFFE20")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000701")]
		[Address(RVA = "0xDFFF74", Offset = "0xDFFF74", VA = "0xDFFF74")]
		private void Update()
		{
		}

		[Token(Token = "0x6000702")]
		[Address(RVA = "0xE0008C", Offset = "0xE0008C", VA = "0xE0008C")]
		public VRCompositor()
		{
		}
	}
	[Token(Token = "0x200017A")]
	public class VRPanoInterface : MonoBehaviour
	{
		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float progressInd;

		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string timeCounterText;

		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image texLoader;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text timeCounter;

		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int width;

		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int height;

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject PanoramaCam;

		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject hQCam;

		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool rt;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool mono;

		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool sbs;

		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject quadR;

		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject quadL;

		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject hQPlane;

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool hQ;

		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int step;

		[Token(Token = "0x6000703")]
		[Address(RVA = "0xE00094", Offset = "0xE00094", VA = "0xE00094")]
		private void Start()
		{
		}

		[Token(Token = "0x6000704")]
		[Address(RVA = "0xE00098", Offset = "0xE00098", VA = "0xE00098")]
		private void Update()
		{
		}

		[Token(Token = "0x6000705")]
		[Address(RVA = "0xE00560", Offset = "0xE00560", VA = "0xE00560")]
		public VRPanoInterface()
		{
		}
	}
	[Token(Token = "0x200017B")]
	public class VRPanoramaAttribute : PropertyAttribute
	{
		[Token(Token = "0x6000706")]
		[Address(RVA = "0xE00568", Offset = "0xE00568", VA = "0xE00568")]
		public VRPanoramaAttribute()
		{
		}
	}
	[Token(Token = "0x200017C")]
	public class VideoSync : MonoBehaviour
	{
		[Token(Token = "0x20002A3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B674", Offset = "0x87B674")]
		private sealed class <SyncVideo>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public VideoSync <>4__this;

			[Token(Token = "0x17000115")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D0F")]
				[Address(RVA = "0xE007C0", Offset = "0xE007C0", VA = "0xE007C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000116")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D11")]
				[Address(RVA = "0xE00830", Offset = "0xE00830", VA = "0xE00830", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D0C")]
			[Address(RVA = "0xE006A4", Offset = "0xE006A4", VA = "0xE006A4")]
			[DebuggerHidden]
			public <SyncVideo>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6000D0D")]
			[Address(RVA = "0xE006D8", Offset = "0xE006D8", VA = "0xE006D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D0E")]
			[Address(RVA = "0xE006DC", Offset = "0xE006DC", VA = "0xE006DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D10")]
			[Address(RVA = "0xE007C8", Offset = "0xE007C8", VA = "0xE007C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VideoPlayer videoPlayer;

		[Token(Token = "0x6000707")]
		[Address(RVA = "0xE00570", Offset = "0xE00570", VA = "0xE00570")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000708")]
		[Address(RVA = "0xE005C8", Offset = "0xE005C8", VA = "0xE005C8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000709")]
		[Address(RVA = "0xE00630", Offset = "0xE00630", VA = "0xE00630")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8833E4", Offset = "0x8833E4")]
		private IEnumerator SyncVideo()
		{
			return null;
		}

		[Token(Token = "0x600070A")]
		[Address(RVA = "0xE006D0", Offset = "0xE006D0", VA = "0xE006D0")]
		public VideoSync()
		{
		}
	}
	[Token(Token = "0x200017D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x879E40", Offset = "0x879E40")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x879E40", Offset = "0x879E40")]
	public class VRCapture : MonoBehaviour
	{
		[Token(Token = "0x20002A4")]
		public enum VRModeList
		{
			[Token(Token = "0x4000EAF")]
			EquidistantStereo,
			[Token(Token = "0x4000EB0")]
			EquidistantStereoSBS,
			[Token(Token = "0x4000EB1")]
			EquidistantMono,
			[Token(Token = "0x4000EB2")]
			VideoCapture
		}

		[Token(Token = "0x20002A5")]
		public enum VRCaptureList
		{
			[Token(Token = "0x4000EB4")]
			AnimationCapture,
			[Token(Token = "0x4000EB5")]
			StillImage,
			[Token(Token = "0x4000EB6")]
			VRPanoramaRT
		}

		[Token(Token = "0x20002A6")]
		public enum VRCaptureAngle
		{
			[Token(Token = "0x4000EB8")]
			_360,
			[Token(Token = "0x4000EB9")]
			_180
		}

		[Token(Token = "0x20002A7")]
		public enum VRFormatList
		{
			[Token(Token = "0x4000EBB")]
			JPG,
			[Token(Token = "0x4000EBC")]
			PNG,
			[Token(Token = "0x4000EBD")]
			EXR_HDRI,
			[Token(Token = "0x4000EBE")]
			Direct
		}

		[Token(Token = "0x20002A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B684", Offset = "0x87B684")]
		private sealed class <SaveFileJPG>d__168 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Texture2D SShot;

			[Token(Token = "0x4000EC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int jpg;

			[Token(Token = "0x4000EC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string filePathd;

			[Token(Token = "0x17000117")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D15")]
				[Address(RVA = "0xDFFCC4", Offset = "0xDFFCC4", VA = "0xDFFCC4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000118")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D17")]
				[Address(RVA = "0xDFFD34", Offset = "0xDFFD34", VA = "0xDFFD34", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D12")]
			[Address(RVA = "0xDFED10", Offset = "0xDFED10", VA = "0xDFED10")]
			[DebuggerHidden]
			public <SaveFileJPG>d__168(int <>1__state)
			{
			}

			[Token(Token = "0x6000D13")]
			[Address(RVA = "0xDFFC54", Offset = "0xDFFC54", VA = "0xDFFC54", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D14")]
			[Address(RVA = "0xDFFC58", Offset = "0xDFFC58", VA = "0xDFFC58", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D16")]
			[Address(RVA = "0xDFFCCC", Offset = "0xDFFCCC", VA = "0xDFFCCC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002A9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B694", Offset = "0x87B694")]
		private sealed class <SaveFilePNG>d__169 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Texture2D SShot;

			[Token(Token = "0x4000EC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string filePathd;

			[Token(Token = "0x17000119")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D1B")]
				[Address(RVA = "0xDFFDA8", Offset = "0xDFFDA8", VA = "0xDFFDA8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700011A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D1D")]
				[Address(RVA = "0xDFFE18", Offset = "0xDFFE18", VA = "0xDFFE18", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D18")]
			[Address(RVA = "0xDFED3C", Offset = "0xDFED3C", VA = "0xDFED3C")]
			[DebuggerHidden]
			public <SaveFilePNG>d__169(int <>1__state)
			{
			}

			[Token(Token = "0x6000D19")]
			[Address(RVA = "0xDFFD3C", Offset = "0xDFFD3C", VA = "0xDFFD3C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D1A")]
			[Address(RVA = "0xDFFD40", Offset = "0xDFFD40", VA = "0xDFFD40", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D1C")]
			[Address(RVA = "0xDFFDB0", Offset = "0xDFFDB0", VA = "0xDFFDB0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002AA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B6A4", Offset = "0x87B6A4")]
		private sealed class <SaveFileEXRNew>d__170 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000ECA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Texture2D SShot;

			[Token(Token = "0x4000ECB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string filePathd;

			[Token(Token = "0x1700011B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D21")]
				[Address(RVA = "0xDFFBDC", Offset = "0xDFFBDC", VA = "0xDFFBDC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700011C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D23")]
				[Address(RVA = "0xDFFC4C", Offset = "0xDFFC4C", VA = "0xDFFC4C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D1E")]
			[Address(RVA = "0xDFED68", Offset = "0xDFED68", VA = "0xDFED68")]
			[DebuggerHidden]
			public <SaveFileEXRNew>d__170(int <>1__state)
			{
			}

			[Token(Token = "0x6000D1F")]
			[Address(RVA = "0xDFFB70", Offset = "0xDFFB70", VA = "0xDFFB70", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D20")]
			[Address(RVA = "0xDFFB74", Offset = "0xDFFB74", VA = "0xDFFB74", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D22")]
			[Address(RVA = "0xDFFBE4", Offset = "0xDFFBE4", VA = "0xDFFBE4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B6B4", Offset = "0x87B6B4")]
		private sealed class <SaveFileEXR>d__171 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000ECC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000ECD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000ECE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Texture2D SShot;

			[Token(Token = "0x4000ECF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string filePathd;

			[Token(Token = "0x1700011D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D27")]
				[Address(RVA = "0xDFFAF8", Offset = "0xDFFAF8", VA = "0xDFFAF8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700011E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D29")]
				[Address(RVA = "0xDFFB68", Offset = "0xDFFB68", VA = "0xDFFB68", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D24")]
			[Address(RVA = "0xDFEE2C", Offset = "0xDFEE2C", VA = "0xDFEE2C")]
			[DebuggerHidden]
			public <SaveFileEXR>d__171(int <>1__state)
			{
			}

			[Token(Token = "0x6000D25")]
			[Address(RVA = "0xDFFA8C", Offset = "0xDFFA8C", VA = "0xDFFA8C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D26")]
			[Address(RVA = "0xDFFA90", Offset = "0xDFFA90", VA = "0xDFFA90", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D28")]
			[Address(RVA = "0xDFFB00", Offset = "0xDFFB00", VA = "0xDFFB00", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B6C4", Offset = "0x87B6C4")]
		private sealed class <>c
		{
			[Token(Token = "0x4000ED0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000ED1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static RemoteCertificateValidationCallback <>9__174_0;

			[Token(Token = "0x6000D2B")]
			[Address(RVA = "0xDFFA7C", Offset = "0xDFFA7C", VA = "0xDFFA7C")]
			public <>c()
			{
			}

			[Token(Token = "0x6000D2C")]
			[Address(RVA = "0xDFFA84", Offset = "0xDFFA84", VA = "0xDFFA84")]
			internal bool <SendEmail>b__174_0(object s, X509Certificate certificate, X509Chain chain, SslPolicyErrors sslPolicyErrors)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private FFmpegPipe.Preset _preset;

		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int cubemapSize;

		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool oneFacePerFrame;

		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Camera cubeCam;

		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RenderTexture rtex;

		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RenderTexture rtexr;

		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool captureAudio;

		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float volume;

		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool mute;

		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float remainingTime;

		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int minutesRemain;

		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int secondsRemain;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool alignPanoramaWithHorizont;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material VRAA;

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private RenderTexture unfilteredRt;

		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject rig;

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GameObject cam;

		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private GameObject panoramaCam;

		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private string timestamp;

		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private RenderTexture flTex;

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private RenderTexture frTex;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RenderTexture llTex;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private RenderTexture lrTex;

		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private RenderTexture rlTex;

		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private RenderTexture rrTex;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private RenderTexture dlTex;

		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private RenderTexture drTex;

		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private RenderTexture blTex;

		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private RenderTexture brTex;

		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private RenderTexture tlTex;

		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private RenderTexture trTex;

		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private RenderTexture tlxTex;

		[Token(Token = "0x40007B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private RenderTexture trxTex;

		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private RenderTexture dlxTex;

		[Token(Token = "0x40007B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private RenderTexture drxTex;

		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Material FL;

		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Material FR;

		[Token(Token = "0x40007B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Material LL;

		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Material LR;

		[Token(Token = "0x40007B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Material RL;

		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Material RR;

		[Token(Token = "0x40007BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Material DL;

		[Token(Token = "0x40007BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Material DR;

		[Token(Token = "0x40007BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Material BL;

		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Material BR;

		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Material TL;

		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private Material TR;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private Material DLX;

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private Material DRX;

		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Material TLX;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private Material TRX;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private Material HQMat;

		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private RenderTexture rt;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private Texture2D screenShot;

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private Texture2D screenShotHQ;

		[Token(Token = "0x40007C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public Camera camLL;

		[Token(Token = "0x40007C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public Camera camRL;

		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public Camera camTL;

		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public Camera camBL;

		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public Camera camFL;

		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public Camera camDL;

		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public Camera camLR;

		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public Camera camRR;

		[Token(Token = "0x40007D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public Camera camTR;

		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public Camera camBR;

		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public Camera camFR;

		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public Camera camDR;

		[Token(Token = "0x40007D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public Camera camDRX;

		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public Camera camDLX;

		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public Camera camTRX;

		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public Camera camTLX;

		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private GameObject cloneCamLL;

		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private GameObject cloneCamRL;

		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private GameObject cloneCamTL;

		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private GameObject cloneCamBL;

		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		private GameObject cloneCamFL;

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private GameObject cloneCamDL;

		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private GameObject cloneCamLR;

		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private GameObject cloneCamRR;

		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private GameObject cloneCamTR;

		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		private GameObject cloneCamBR;

		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		private GameObject cloneCamFR;

		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		private GameObject cloneCamDR;

		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		private GameObject cloneCamDRX;

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		private GameObject cloneCamDLX;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private GameObject cloneCamTRX;

		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private GameObject cloneCamTLX;

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		private GameObject camll;

		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		private GameObject camrl;

		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		private GameObject camfl;

		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private GameObject camtl;

		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private GameObject cambl;

		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private GameObject camdl;

		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private bool waitRenderFinish;

		[Token(Token = "0x40007EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		public GameObject renderPanorama;

		[Token(Token = "0x40007F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		public int StartFrame;

		[Token(Token = "0x40007F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
		public VRModeList panoramaType;

		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		public VRCaptureList captureType;

		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
		public VRCaptureAngle captureAngle;

		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		public bool RT2Video;

		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
		public VRFormatList ImageFormatType;

		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		public string Folder;

		[Token(Token = "0x40007F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		public KeyCode captureKey;

		[Token(Token = "0x40007F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
		public int FPS;

		[Token(Token = "0x40007F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		private Color[] EXRArray;

		[Token(Token = "0x40007FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		public int resolution;

		[Token(Token = "0x40007FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
		public int resolutionH;

		[Token(Token = "0x40007FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		public int step;

		[Token(Token = "0x40007FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
		public int NumberOfFramesToRender;

		[Token(Token = "0x40007FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		public int renderFromFrame;

		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		[VRPanorama]
		public string sequenceLength;

		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		public float IPDistance;

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
		public float EnvironmentDistance;

		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		public float restoreFOV;

		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34C")]
		public bool openDestinationFolder;

		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34D")]
		public bool ambisonicsSupportTest;

		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		public string fullPath;

		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		public bool customPath;

		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		public string customPathFolder;

		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		public bool encodeToMp4;

		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36C")]
		public int Mp4Bitrate;

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		public int jpgQuality;

		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x374")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87DC94", Offset = "0x87DC94")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x87DC94", Offset = "0x87DC94")]
		public int renderQuality;

		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		public string formatString;

		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		private int qualityTemp;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x384")]
		public bool mailme;

		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		public string _mailto;

		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x390")]
		public string _pass;

		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x398")]
		public string _mailfrom;

		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A0")]
		public string _prefix;

		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A8")]
		private TextureFormat texFormat;

		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3AC")]
		private RenderTextureFormat renderTexFormat;

		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B0")]
		[VRPanorama]
		public string RenderInfo;

		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B8")]
		public int bufferSize;

		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3BC")]
		public int numBuffers;

		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C0")]
		private int outputRate;

		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C4")]
		private int headerSize;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C8")]
		public bool recOutput;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C9")]
		public bool depth;

		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3CC")]
		public int depthBufferSize;

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D0")]
		public bool ambisonics;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D1")]
		public bool disableTracking;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D8")]
		private FileStream fileStream;

		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E0")]
		public ushort achannels;

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E2")]
		public bool hQ;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E4")]
		public int steps;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E8")]
		public bool useAlpha;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3EC")]
		public float smoothing;

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F0")]
		public bool playPanorama;

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F8")]
		private GameObject vrPlayer;

		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x400")]
		private VideoPlayer videoObject;

		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x408")]
		private Material videoMat;

		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x410")]
		public CameraCapture camCaptureComponent;

		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x418")]
		public bool recordRT;

		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41C")]
		public int videoLenght;

		[Token(Token = "0x600070B")]
		[Address(RVA = "0xDF1B44", Offset = "0xDF1B44", VA = "0xDF1B44")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600070C")]
		[Address(RVA = "0xDF1B94", Offset = "0xDF1B94", VA = "0xDF1B94")]
		private void Start()
		{
		}

		[Token(Token = "0x600070D")]
		[Address(RVA = "0xDF69AC", Offset = "0xDF69AC", VA = "0xDF69AC")]
		public void RenderPano()
		{
		}

		[Token(Token = "0x600070E")]
		[Address(RVA = "0xDF7E9C", Offset = "0xDF7E9C", VA = "0xDF7E9C")]
		private void Update()
		{
		}

		[Token(Token = "0x600070F")]
		[Address(RVA = "0xDF94F0", Offset = "0xDF94F0", VA = "0xDF94F0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000710")]
		[Address(RVA = "0xDFBFB0", Offset = "0xDFBFB0", VA = "0xDFBFB0")]
		public void RenderVRPanorama()
		{
		}

		[Token(Token = "0x6000711")]
		[Address(RVA = "0xDFB03C", Offset = "0xDFB03C", VA = "0xDFB03C")]
		public void RenderVideo()
		{
		}

		[Token(Token = "0x6000712")]
		[Address(RVA = "0xDFE178", Offset = "0xDFE178", VA = "0xDFE178")]
		private Texture2D FlipTexture(Texture2D original)
		{
			return null;
		}

		[Token(Token = "0x6000713")]
		[Address(RVA = "0xDFD358", Offset = "0xDFD358", VA = "0xDFD358")]
		public void SaveScreenshot()
		{
		}

		[Token(Token = "0x6000714")]
		[Address(RVA = "0xDFEB30", Offset = "0xDFEB30", VA = "0xDFEB30")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x883448", Offset = "0x883448")]
		private static IEnumerator SaveFileJPG(string filePathd, Texture2D SShot, int jpg)
		{
			return null;
		}

		[Token(Token = "0x6000715")]
		[Address(RVA = "0xDFEBE0", Offset = "0xDFEBE0", VA = "0xDFEBE0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8834AC", Offset = "0x8834AC")]
		private static IEnumerator SaveFilePNG(string filePathd, Texture2D SShot)
		{
			return null;
		}

		[Token(Token = "0x6000716")]
		[Address(RVA = "0xDFEC78", Offset = "0xDFEC78", VA = "0xDFEC78")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x883510", Offset = "0x883510")]
		private static IEnumerator SaveFileEXRNew(string filePathd, Texture2D SShot)
		{
			return null;
		}

		[Token(Token = "0x6000717")]
		[Address(RVA = "0xDFED94", Offset = "0xDFED94", VA = "0xDFED94")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x883574", Offset = "0x883574")]
		private static IEnumerator SaveFileEXR(string filePathd, Texture2D SShot)
		{
			return null;
		}

		[Token(Token = "0x6000718")]
		[Address(RVA = "0xDFE348", Offset = "0xDFE348", VA = "0xDFE348")]
		public Texture2D GetScreenshot(bool eye)
		{
			return null;
		}

		[Token(Token = "0x6000719")]
		[Address(RVA = "0xDF9D64", Offset = "0xDF9D64", VA = "0xDF9D64")]
		public Texture2D GetScreenshotHQ(bool eye)
		{
			return null;
		}

		[Token(Token = "0x600071A")]
		[Address(RVA = "0xDFEE58", Offset = "0xDFEE58", VA = "0xDFEE58")]
		public void SendEmail()
		{
		}

		[Token(Token = "0x600071B")]
		[Address(RVA = "0xDFF160", Offset = "0xDFF160", VA = "0xDFF160")]
		public Texture2D GetVideoScreenshot()
		{
			return null;
		}

		[Token(Token = "0x600071C")]
		[Address(RVA = "0xDF2380", Offset = "0xDF2380", VA = "0xDF2380")]
		public void VideoRenderPrepare()
		{
		}

		[Token(Token = "0x600071D")]
		[Address(RVA = "0xDFDEC4", Offset = "0xDFDEC4", VA = "0xDFDEC4")]
		public void SaveScreenshotVideo()
		{
		}

		[Token(Token = "0x600071E")]
		[Address(RVA = "0xDFF394", Offset = "0xDFF394", VA = "0xDFF394")]
		public void RenderStaticVRPanorama()
		{
		}

		[Token(Token = "0x600071F")]
		[Address(RVA = "0xDFC038", Offset = "0xDFC038", VA = "0xDFC038")]
		public void CounterPost()
		{
		}

		[Token(Token = "0x6000720")]
		[Address(RVA = "0xDFB038", Offset = "0xDFB038", VA = "0xDFB038")]
		public void QuitEditor()
		{
		}

		[Token(Token = "0x6000721")]
		[Address(RVA = "0xDFE174", Offset = "0xDFE174", VA = "0xDFE174")]
		public void ClearBar()
		{
		}

		[Token(Token = "0x6000722")]
		[Address(RVA = "0xDF22C0", Offset = "0xDF22C0", VA = "0xDF22C0")]
		private void StartWriting(string name)
		{
		}

		[Token(Token = "0x6000723")]
		[Address(RVA = "0xDFF398", Offset = "0xDFF398", VA = "0xDFF398")]
		private void OnAudioFilterRead(float[] data, int channels)
		{
		}

		[Token(Token = "0x6000724")]
		[Address(RVA = "0xDFF5E0", Offset = "0xDFF5E0", VA = "0xDFF5E0")]
		private void ConvertAndWrite(float[] dataSource)
		{
		}

		[Token(Token = "0x6000725")]
		[Address(RVA = "0xDFAB44", Offset = "0xDFAB44", VA = "0xDFAB44")]
		private void WriteHeader()
		{
		}

		[Token(Token = "0x6000726")]
		[Address(RVA = "0xDFF7DC", Offset = "0xDFF7DC", VA = "0xDFF7DC")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x6000727")]
		[Address(RVA = "0xDF2598", Offset = "0xDF2598", VA = "0xDF2598")]
		public void PreparePano()
		{
		}

		[Token(Token = "0x6000728")]
		[Address(RVA = "0xDFF8C4", Offset = "0xDFF8C4", VA = "0xDFF8C4")]
		public VRCapture()
		{
		}
	}
}
namespace Spine.Unity
{
	[Token(Token = "0x200017E")]
	[DisallowMultipleComponent]
	public sealed class SkeletonAnimationFixedTimestep : MonoBehaviour
	{
		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SkeletonAnimation skeletonAnimation;

		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87DCF8", Offset = "0x87DCF8")]
		public float frameDeltaTime;

		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87DD30", Offset = "0x87DD30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87DD30", Offset = "0x87DD30")]
		public int maxFrameSkip;

		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87DD90", Offset = "0x87DD90")]
		public bool frameskipMeshUpdate;

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87DDC8", Offset = "0x87DDC8")]
		public float timeOffset;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float accumulatedTime;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool requiresNewMesh;

		[Token(Token = "0x6000729")]
		[Address(RVA = "0xA77618", Offset = "0xA77618", VA = "0xA77618")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600072A")]
		[Address(RVA = "0xA7769C", Offset = "0xA7769C", VA = "0xA7769C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600072B")]
		[Address(RVA = "0xA776B0", Offset = "0xA776B0", VA = "0xA776B0")]
		private void Update()
		{
		}

		[Token(Token = "0x600072C")]
		[Address(RVA = "0xA77790", Offset = "0xA77790", VA = "0xA77790")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600072D")]
		[Address(RVA = "0xA777E0", Offset = "0xA777E0", VA = "0xA777E0")]
		public SkeletonAnimationFixedTimestep()
		{
		}
	}
	[Token(Token = "0x200017F")]
	public class SkeletonAnimationMulti : MonoBehaviour
	{
		[Token(Token = "0x4000833")]
		private const int MainTrackIndex = 0;

		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool initialFlipX;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool initialFlipY;

		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string initialAnimation;

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool initialLoop;

		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x87DE00", Offset = "0x87DE00")]
		public List<SkeletonDataAsset> skeletonDataAssets;

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87DE10", Offset = "0x87DE10")]
		public MeshGenerator.Settings meshGeneratorSettings;

		[Token(Token = "0x400083A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly List<SkeletonAnimation> skeletonAnimations;

		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly Dictionary<string, Animation> animationNameTable;

		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly Dictionary<Animation, SkeletonAnimation> animationSkeletonTable;

		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkeletonAnimation currentSkeletonAnimation;

		[Token(Token = "0x17000051")]
		public Dictionary<Animation, SkeletonAnimation> AnimationSkeletonTable
		{
			[Token(Token = "0x6000731")]
			[Address(RVA = "0xA781B0", Offset = "0xA781B0", VA = "0xA781B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000052")]
		public Dictionary<string, Animation> AnimationNameTable
		{
			[Token(Token = "0x6000732")]
			[Address(RVA = "0xA781B8", Offset = "0xA781B8", VA = "0xA781B8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000053")]
		public SkeletonAnimation CurrentSkeletonAnimation
		{
			[Token(Token = "0x6000733")]
			[Address(RVA = "0xA781C0", Offset = "0xA781C0", VA = "0xA781C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600072E")]
		[Address(RVA = "0xA77800", Offset = "0xA77800", VA = "0xA77800")]
		private void Clear()
		{
		}

		[Token(Token = "0x600072F")]
		[Address(RVA = "0xA779D0", Offset = "0xA779D0", VA = "0xA779D0")]
		private void SetActiveSkeleton(SkeletonAnimation skeletonAnimation)
		{
		}

		[Token(Token = "0x6000730")]
		[Address(RVA = "0xA77B6C", Offset = "0xA77B6C", VA = "0xA77B6C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000734")]
		[Address(RVA = "0xA77B74", Offset = "0xA77B74", VA = "0xA77B74")]
		public void Initialize(bool overwrite)
		{
		}

		[Token(Token = "0x6000735")]
		[Address(RVA = "0xA781F8", Offset = "0xA781F8", VA = "0xA781F8")]
		public Animation FindAnimation(string animationName)
		{
			return null;
		}

		[Token(Token = "0x6000736")]
		[Address(RVA = "0xA781C8", Offset = "0xA781C8", VA = "0xA781C8")]
		public TrackEntry SetAnimation(string animationName, bool loop)
		{
			return null;
		}

		[Token(Token = "0x6000737")]
		[Address(RVA = "0xA78278", Offset = "0xA78278", VA = "0xA78278")]
		public TrackEntry SetAnimation(Animation animation, bool loop)
		{
			return null;
		}

		[Token(Token = "0x6000738")]
		[Address(RVA = "0xA783BC", Offset = "0xA783BC", VA = "0xA783BC")]
		public void SetEmptyAnimation(float mixDuration)
		{
		}

		[Token(Token = "0x6000739")]
		[Address(RVA = "0xA78410", Offset = "0xA78410", VA = "0xA78410")]
		public void ClearAnimation()
		{
		}

		[Token(Token = "0x600073A")]
		[Address(RVA = "0xA78454", Offset = "0xA78454", VA = "0xA78454")]
		public TrackEntry GetCurrent()
		{
			return null;
		}

		[Token(Token = "0x600073B")]
		[Address(RVA = "0xA78498", Offset = "0xA78498", VA = "0xA78498")]
		public SkeletonAnimationMulti()
		{
		}
	}
}
namespace Spine.Unity.Prototyping
{
	[Token(Token = "0x2000180")]
	public class SkeletonColorInitialize : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002AD")]
		public class SlotSettings
		{
			[Token(Token = "0x4000ED2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "SpineSlot", RVA = "0x881D10", Offset = "0x881D10")]
			public string slot;

			[Token(Token = "0x4000ED3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Color color;

			[Token(Token = "0x6000D2D")]
			[Address(RVA = "0xA76E28", Offset = "0xA76E28", VA = "0xA76E28")]
			public SlotSettings()
			{
			}
		}

		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color skeletonColor;

		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<SlotSettings> slotSettings;

		[Token(Token = "0x600073C")]
		[Address(RVA = "0xA76BA8", Offset = "0xA76BA8", VA = "0xA76BA8")]
		private void Start()
		{
		}

		[Token(Token = "0x600073D")]
		[Address(RVA = "0xA76BAC", Offset = "0xA76BAC", VA = "0xA76BAC")]
		private void ApplySettings()
		{
		}

		[Token(Token = "0x600073E")]
		[Address(RVA = "0xA76DA8", Offset = "0xA76DA8", VA = "0xA76DA8")]
		public SkeletonColorInitialize()
		{
		}
	}
	[Token(Token = "0x2000181")]
	public class SpineEventUnityHandler : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002AE")]
		public class EventPair
		{
			[Token(Token = "0x4000ED4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "SpineEvent", RVA = "0x881D70", Offset = "0x881D70")]
			public string spineEvent;

			[Token(Token = "0x4000ED5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public UnityEvent unityHandler;

			[Token(Token = "0x4000ED6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AnimationState.TrackEntryEventDelegate eventDelegate;

			[Token(Token = "0x6000D2E")]
			[Address(RVA = "0xA77610", Offset = "0xA77610", VA = "0xA77610")]
			public EventPair()
			{
			}
		}

		[Token(Token = "0x20002AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B6D4", Offset = "0x87B6D4")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4000ED7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public EventPair ep;

			[Token(Token = "0x6000D2F")]
			[Address(RVA = "0xA77324", Offset = "0xA77324", VA = "0xA77324")]
			public <>c__DisplayClass4_0()
			{
			}
		}

		[Token(Token = "0x20002B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B6E4", Offset = "0x87B6E4")]
		private sealed class <>c__DisplayClass4_1
		{
			[Token(Token = "0x4000ED8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public EventData eventData;

			[Token(Token = "0x4000ED9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass4_0 CS$<>8__locals1;

			[Token(Token = "0x6000D30")]
			[Address(RVA = "0xA7732C", Offset = "0xA7732C", VA = "0xA7732C")]
			public <>c__DisplayClass4_1()
			{
			}

			[Token(Token = "0x6000D31")]
			[Address(RVA = "0xA77588", Offset = "0xA77588", VA = "0xA77588")]
			internal void <Start>b__0(TrackEntry trackEntry, Event e)
			{
			}
		}

		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<EventPair> events;

		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ISkeletonComponent skeletonComponent;

		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private IAnimationStateComponent animationStateComponent;

		[Token(Token = "0x600073F")]
		[Address(RVA = "0xA76E98", Offset = "0xA76E98", VA = "0xA76E98")]
		private void Start()
		{
		}

		[Token(Token = "0x6000740")]
		[Address(RVA = "0xA77334", Offset = "0xA77334", VA = "0xA77334")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000741")]
		[Address(RVA = "0xA77518", Offset = "0xA77518", VA = "0xA77518")]
		public SpineEventUnityHandler()
		{
		}
	}
}
namespace Spine.Unity.Examples
{
	[Token(Token = "0x2000182")]
	public class SpineAnimationTesterTool : MonoBehaviour, IHasSkeletonDataAsset, IHasSkeletonComponent
	{
		[Serializable]
		[Token(Token = "0x20002B1")]
		public struct AnimationControl
		{
			[Token(Token = "0x4000EDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "SpineAnimation", RVA = "0x881DD0", Offset = "0x881DD0")]
			public string animationName;

			[Token(Token = "0x4000EDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool loop;

			[Token(Token = "0x4000EDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public KeyCode key;

			[Token(Token = "0x4000EDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x881E2C", Offset = "0x881E2C")]
			public bool useCustomMixDuration;

			[Token(Token = "0x4000EDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float mixDuration;
		}

		[Serializable]
		[Token(Token = "0x20002B2")]
		public class ControlledTrack
		{
			[Token(Token = "0x4000EDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<AnimationControl> controls;

			[Token(Token = "0x6000D32")]
			[Address(RVA = "0xA715C0", Offset = "0xA715C0", VA = "0xA715C0")]
			public ControlledTrack()
			{
			}
		}

		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SkeletonAnimation skeletonAnimation;

		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool useOverrideMixDuration;

		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float overrideMixDuration;

		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool useOverrideAttachmentThreshold;

		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x87DE48", Offset = "0x87DE48")]
		public float attachmentThreshold;

		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool useOverrideDrawOrderThreshold;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x87DE60", Offset = "0x87DE60")]
		public float drawOrderThreshold;

		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x87DE78", Offset = "0x87DE78")]
		public List<ControlledTrack> trackControls;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87DE88", Offset = "0x87DE88")]
		public Text boundAnimationsText;

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Text skeletonNameText;

		[Token(Token = "0x17000054")]
		public SkeletonDataAsset SkeletonDataAsset
		{
			[Token(Token = "0x6000742")]
			[Address(RVA = "0xA70C4C", Offset = "0xA70C4C", VA = "0xA70C4C", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000055")]
		public ISkeletonComponent SkeletonComponent
		{
			[Token(Token = "0x6000743")]
			[Address(RVA = "0xA70C7C", Offset = "0xA70C7C", VA = "0xA70C7C", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000744")]
		[Address(RVA = "0xA70C84", Offset = "0xA70C84", VA = "0xA70C84")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000745")]
		[Address(RVA = "0xA7116C", Offset = "0xA7116C", VA = "0xA7116C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000746")]
		[Address(RVA = "0xA711F8", Offset = "0xA711F8", VA = "0xA711F8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000747")]
		[Address(RVA = "0xA71530", Offset = "0xA71530", VA = "0xA71530")]
		public SpineAnimationTesterTool()
		{
		}
	}
	[Token(Token = "0x2000183")]
	public class AttackSpineboy : MonoBehaviour
	{
		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SkeletonAnimation spineboy;

		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SkeletonAnimation attackerSpineboy;

		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SpineGauge gauge;

		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text healthText;

		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int currentHealth;

		[Token(Token = "0x4000852")]
		private const int maxHealth = 100;

		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationReferenceAsset shoot;

		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationReferenceAsset hit;

		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationReferenceAsset idle;

		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AnimationReferenceAsset death;

		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public UnityEvent onAttack;

		[Token(Token = "0x6000748")]
		[Address(RVA = "0xA1F228", Offset = "0xA1F228", VA = "0xA1F228")]
		private void Update()
		{
		}

		[Token(Token = "0x6000749")]
		[Address(RVA = "0xA1F53C", Offset = "0xA1F53C", VA = "0xA1F53C")]
		public AttackSpineboy()
		{
		}
	}
	[Token(Token = "0x2000184")]
	public class DataAssetsFromExportsExample : MonoBehaviour
	{
		[Token(Token = "0x20002B3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B6F4", Offset = "0x87B6F4")]
		private sealed class <Start>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DataAssetsFromExportsExample <>4__this;

			[Token(Token = "0x1700011F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D36")]
				[Address(RVA = "0xA20F70", Offset = "0xA20F70", VA = "0xA20F70", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000120")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D38")]
				[Address(RVA = "0xA20FE0", Offset = "0xA20FE0", VA = "0xA20FE0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D33")]
			[Address(RVA = "0xA20C04", Offset = "0xA20C04", VA = "0xA20C04")]
			[DebuggerHidden]
			public <Start>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6000D34")]
			[Address(RVA = "0xA20C38", Offset = "0xA20C38", VA = "0xA20C38", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D35")]
			[Address(RVA = "0xA20C3C", Offset = "0xA20C3C", VA = "0xA20C3C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D37")]
			[Address(RVA = "0xA20F78", Offset = "0xA20F78", VA = "0xA20F78", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextAsset skeletonJson;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextAsset atlasText;

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture2D[] textures;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material materialPropertySource;

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SpineAtlasAsset runtimeAtlasAsset;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private SkeletonDataAsset runtimeSkeletonDataAsset;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SkeletonAnimation runtimeSkeletonAnimation;

		[Token(Token = "0x600074A")]
		[Address(RVA = "0xA20B34", Offset = "0xA20B34", VA = "0xA20B34")]
		private void CreateRuntimeAssetsAndGameObject()
		{
		}

		[Token(Token = "0x600074B")]
		[Address(RVA = "0xA20B90", Offset = "0xA20B90", VA = "0xA20B90")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8835D8", Offset = "0x8835D8")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x600074C")]
		[Address(RVA = "0xA20C30", Offset = "0xA20C30", VA = "0xA20C30")]
		public DataAssetsFromExportsExample()
		{
		}
	}
	[Token(Token = "0x2000185")]
	public class DraggableTransform : MonoBehaviour
	{
		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector2 mousePreviousWorld;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector2 mouseDeltaWorld;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Camera mainCamera;

		[Token(Token = "0x600074D")]
		[Address(RVA = "0xA20FE8", Offset = "0xA20FE8", VA = "0xA20FE8")]
		private void Start()
		{
		}

		[Token(Token = "0x600074E")]
		[Address(RVA = "0xA21010", Offset = "0xA21010", VA = "0xA21010")]
		private void Update()
		{
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0xA21158", Offset = "0xA21158", VA = "0xA21158")]
		private void OnMouseDrag()
		{
		}

		[Token(Token = "0x6000750")]
		[Address(RVA = "0xA2121C", Offset = "0xA2121C", VA = "0xA2121C")]
		public DraggableTransform()
		{
		}
	}
	[Token(Token = "0x2000186")]
	public class FootSoldierExample : MonoBehaviour
	{
		[Token(Token = "0x20002B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B704", Offset = "0x87B704")]
		private sealed class <Blink>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FootSoldierExample <>4__this;

			[Token(Token = "0x17000121")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D3C")]
				[Address(RVA = "0xA226F0", Offset = "0xA226F0", VA = "0xA226F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000122")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D3E")]
				[Address(RVA = "0xA22760", Offset = "0xA22760", VA = "0xA22760", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D39")]
			[Address(RVA = "0xA224F4", Offset = "0xA224F4", VA = "0xA224F4")]
			[DebuggerHidden]
			public <Blink>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6000D3A")]
			[Address(RVA = "0xA22548", Offset = "0xA22548", VA = "0xA22548", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D3B")]
			[Address(RVA = "0xA2254C", Offset = "0xA2254C", VA = "0xA2254C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D3D")]
			[Address(RVA = "0xA226F8", Offset = "0xA226F8", VA = "0xA226F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpineAnimation", RVA = "0x87DEC0", Offset = "0x87DEC0")]
		public string idleAnimation;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpineAnimation", RVA = "0x87DF14", Offset = "0x87DF14")]
		public string attackAnimation;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpineAnimation", RVA = "0x87DF70", Offset = "0x87DF70")]
		public string moveAnimation;

		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpineSlot", RVA = "0x87DFCC", Offset = "0x87DFCC")]
		public string eyesSlot;

		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpineAttachment", RVA = "0x87E02C", Offset = "0x87E02C")]
		public string eyesOpenAttachment;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "SpineAttachment", RVA = "0x87E0B4", Offset = "0x87E0B4")]
		public string blinkAttachment;

		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x87E13C", Offset = "0x87E13C")]
		public float blinkDuration;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public KeyCode attackKey;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public KeyCode rightKey;

		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public KeyCode leftKey;

		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float moveSpeed;

		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkeletonAnimation skeletonAnimation;

		[Token(Token = "0x6000751")]
		[Address(RVA = "0xA221BC", Offset = "0xA221BC", VA = "0xA221BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000752")]
		[Address(RVA = "0xA22264", Offset = "0xA22264", VA = "0xA22264")]
		private void Apply(SkeletonRenderer skeletonRenderer)
		{
		}

		[Token(Token = "0x6000753")]
		[Address(RVA = "0xA222B8", Offset = "0xA222B8", VA = "0xA222B8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000754")]
		[Address(RVA = "0xA22480", Offset = "0xA22480", VA = "0xA22480")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88363C", Offset = "0x88363C")]
		private IEnumerator Blink()
		{
			return null;
		}

		[Token(Token = "0x6000755")]
		[Address(RVA = "0xA22520", Offset = "0xA22520", VA = "0xA22520")]
		public FootSoldierExample()
		{
		}
	}
	[Token(Token = "0x2000187")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x879EDC", Offset = "0x879EDC")]
	public class BasicPlatformerController : MonoBehaviour
	{
		[Token(Token = "0x20002B5")]
		public enum CharacterState
		{
			[Token(Token = "0x4000EE7")]
			None,
			[Token(Token = "0x4000EE8")]
			Idle,
			[Token(Token = "0x4000EE9")]
			Walk,
			[Token(Token = "0x4000EEA")]
			Run,
			[Token(Token = "0x4000EEB")]
			Crouch,
			[Token(Token = "0x4000EEC")]
			Rise,
			[Token(Token = "0x4000EED")]
			Fall,
			[Token(Token = "0x4000EEE")]
			Attack
		}

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87E158", Offset = "0x87E158")]
		public CharacterController controller;

		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87E190", Offset = "0x87E190")]
		public string XAxis;

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string YAxis;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string JumpButton;

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87E1C8", Offset = "0x87E1C8")]
		public float walkSpeed;

		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float runSpeed;

		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float gravityScale;

		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87E200", Offset = "0x87E200")]
		public float jumpSpeed;

		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float minimumJumpDuration;

		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float jumpInterruptFactor;

		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float forceCrouchVelocity;

		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float forceCrouchDuration;

		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87E238", Offset = "0x87E238")]
		public SkeletonAnimationHandleExample animationHandle;

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector2 input;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 velocity;

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float minimumJumpEndTime;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float forceCrouchEndTime;

		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool wasGrounded;

		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private CharacterState previousState;

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private CharacterState currentState;

		[Token(Token = "0x14000015")]
		public event UnityAction OnJump
		{
			[Token(Token = "0x6000756")]
			[Address(RVA = "0xA1F54C", Offset = "0xA1F54C", VA = "0xA1F54C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8836A0", Offset = "0x8836A0")]
			add
			{
			}
			[Token(Token = "0x6000757")]
			[Address(RVA = "0xA1F638", Offset = "0xA1F638", VA = "0xA1F638")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8836B0", Offset = "0x8836B0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000016")]
		public event UnityAction OnLand
		{
			[Token(Token = "0x6000758")]
			[Address(RVA = "0xA1F724", Offset = "0xA1F724", VA = "0xA1F724")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8836C0", Offset = "0x8836C0")]
			add
			{
			}
			[Token(Token = "0x6000759")]
			[Address(RVA = "0xA1F810", Offset = "0xA1F810", VA = "0xA1F810")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8836D0", Offset = "0x8836D0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000017")]
		public event UnityAction OnHardLand
		{
			[Token(Token = "0x600075A")]
			[Address(RVA = "0xA1F8FC", Offset = "0xA1F8FC", VA = "0xA1F8FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8836E0", Offset = "0x8836E0")]
			add
			{
			}
			[Token(Token = "0x600075B")]
			[Address(RVA = "0xA1F9E8", Offset = "0xA1F9E8", VA = "0xA1F9E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8836F0", Offset = "0x8836F0")]
			remove
			{
			}
		}

		[Token(Token = "0x600075C")]
		[Address(RVA = "0xA1FAD4", Offset = "0xA1FAD4", VA = "0xA1FAD4")]
		private void Update()
		{
		}

		[Token(Token = "0x600075D")]
		[Address(RVA = "0xA20014", Offset = "0xA20014", VA = "0xA20014")]
		private void HandleStateChanged()
		{
		}

		[Token(Token = "0x600075E")]
		[Address(RVA = "0xA200F4", Offset = "0xA200F4", VA = "0xA200F4")]
		public BasicPlatformerController()
		{
		}
	}
	[Token(Token = "0x2000188")]
	public class ConstrainedCamera : MonoBehaviour
	{
		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 offset;

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 min;

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 max;

		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float smoothing;

		[Token(Token = "0x600075F")]
		[Address(RVA = "0xA20934", Offset = "0xA20934", VA = "0xA20934")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000760")]
		[Address(RVA = "0xA20B24", Offset = "0xA20B24", VA = "0xA20B24")]
		public ConstrainedCamera()
		{
		}
	}
	[Token(Token = "0x2000189")]
	public class Raptor : MonoBehaviour
	{
		[Token(Token = "0x20002B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B714", Offset = "0x87B714")]
		private sealed class <GunGrabRoutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Raptor <>4__this;

			[Token(Token = "0x17000123")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D42")]
				[Address(RVA = "0xA64F1C", Offset = "0xA64F1C", VA = "0xA64F1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000124")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D44")]
				[Address(RVA = "0xA64F8C", Offset = "0xA64F8C", VA = "0xA64F8C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D3F")]
			[Address(RVA = "0xA64CB0", Offset = "0xA64CB0", VA = "0xA64CB0")]
			[DebuggerHidden]
			public <GunGrabRoutine>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6000D40")]
			[Address(RVA = "0xA64CE4", Offset = "0xA64CE4", VA = "0xA64CE4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D41")]
			[Address(RVA = "0xA64CE8", Offset = "0xA64CE8", VA = "0xA64CE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D43")]
			[Address(RVA = "0xA64F24", Offset = "0xA64F24", VA = "0xA64F24", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationReferenceAsset walk;

		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationReferenceAsset gungrab;

		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationReferenceAsset gunkeep;

		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SkeletonAnimation skeletonAnimation;

		[Token(Token = "0x6000761")]
		[Address(RVA = "0xA64BD0", Offset = "0xA64BD0", VA = "0xA64BD0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000762")]
		[Address(RVA = "0xA64C3C", Offset = "0xA64C3C", VA = "0xA64C3C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x883700", Offset = "0x883700")]
		private IEnumerator GunGrabRoutine()
		{
			return null;
		}

		[Token(Token = "0x6000763")]
		[Address(RVA = "0xA64CDC", Offset = "0xA64CDC", VA = "0xA64CDC")]
		public Raptor()
		{
		}
	}
	[Token(Token = "0x200018A")]
	public class SpineBeginnerTwo : MonoBehaviour
	{
		[Token(Token = "0x20002B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B724", Offset = "0x87B724")]
		private sealed class <DoDemoRoutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpineBeginnerTwo <>4__this;

			[Token(Token = "0x17000125")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D48")]
				[Address(RVA = "0xA71B38", Offset = "0xA71B38", VA = "0xA71B38", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000126")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D4A")]
				[Address(RVA = "0xA71BA8", Offset = "0xA71BA8", VA = "0xA71BA8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D45")]
			[Address(RVA = "0xA7174C", Offset = "0xA7174C", VA = "0xA7174C")]
			[DebuggerHidden]
			public <DoDemoRoutine>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6000D46")]
			[Address(RVA = "0xA71788", Offset = "0xA71788", VA = "0xA71788", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D47")]
			[Address(RVA = "0xA7178C", Offset = "0xA7178C", VA = "0xA7178C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D49")]
			[Address(RVA = "0xA71B40", Offset = "0xA71B40", VA = "0xA71B40", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpineAnimation", RVA = "0x87E2A0", Offset = "0x87E2A0")]
		public string runAnimationName;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpineAnimation", RVA = "0x87E2FC", Offset = "0x87E2FC")]
		public string idleAnimationName;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpineAnimation", RVA = "0x87E358", Offset = "0x87E358")]
		public string walkAnimationName;

		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpineAnimation", RVA = "0x87E3B4", Offset = "0x87E3B4")]
		public string shootAnimationName;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87E410", Offset = "0x87E410")]
		[AttributeAttribute(Name = "SpineAnimation", RVA = "0x87E410", Offset = "0x87E410")]
		public string idleTurnAnimationName;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "SpineAnimation", RVA = "0x87E494", Offset = "0x87E494")]
		public string runToIdleAnimationName;

		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float runWalkDuration;

		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private SkeletonAnimation skeletonAnimation;

		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AnimationState spineAnimationState;

		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Skeleton skeleton;

		[Token(Token = "0x6000764")]
		[Address(RVA = "0xA71630", Offset = "0xA71630", VA = "0xA71630")]
		private void Start()
		{
		}

		[Token(Token = "0x6000765")]
		[Address(RVA = "0xA716D8", Offset = "0xA716D8", VA = "0xA716D8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x883764", Offset = "0x883764")]
		private IEnumerator DoDemoRoutine()
		{
			return null;
		}

		[Token(Token = "0x6000766")]
		[Address(RVA = "0xA71778", Offset = "0xA71778", VA = "0xA71778")]
		public SpineBeginnerTwo()
		{
		}
	}
	[Token(Token = "0x200018B")]
	public class SpineBlinkPlayer : MonoBehaviour
	{
		[Token(Token = "0x20002B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B734", Offset = "0x87B734")]
		private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpineBlinkPlayer <>4__this;

			[Token(Token = "0x4000EF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private SkeletonAnimation <skeletonAnimation>5__2;

			[Token(Token = "0x17000127")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D4E")]
				[Address(RVA = "0xA71DF4", Offset = "0xA71DF4", VA = "0xA71DF4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000128")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D50")]
				[Address(RVA = "0xA71E64", Offset = "0xA71E64", VA = "0xA71E64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D4B")]
			[Address(RVA = "0xA71C24", Offset = "0xA71C24", VA = "0xA71C24")]
			[DebuggerHidden]
			public <Start>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6000D4C")]
			[Address(RVA = "0xA71C68", Offset = "0xA71C68", VA = "0xA71C68", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D4D")]
			[Address(RVA = "0xA71C6C", Offset = "0xA71C6C", VA = "0xA71C6C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D4F")]
			[Address(RVA = "0xA71DFC", Offset = "0xA71DFC", VA = "0xA71DFC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000898")]
		private const int BlinkTrack = 1;

		[Token(Token = "0x4000899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationReferenceAsset blinkAnimation;

		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float minimumDelay;

		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float maximumDelay;

		[Token(Token = "0x6000767")]
		[Address(RVA = "0xA71BB0", Offset = "0xA71BB0", VA = "0xA71BB0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8837C8", Offset = "0x8837C8")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000768")]
		[Address(RVA = "0xA71C50", Offset = "0xA71C50", VA = "0xA71C50")]
		public SpineBlinkPlayer()
		{
		}
	}
	[Token(Token = "0x200018C")]
	public class SpineboyBeginnerInput : MonoBehaviour
	{
		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string horizontalAxis;

		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string attackButton;

		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string jumpButton;

		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SpineboyBeginnerModel model;

		[Token(Token = "0x6000769")]
		[Address(RVA = "0xA72770", Offset = "0xA72770", VA = "0xA72770")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600076A")]
		[Address(RVA = "0xA72800", Offset = "0xA72800", VA = "0xA72800")]
		private void Update()
		{
		}

		[Token(Token = "0x600076B")]
		[Address(RVA = "0xA729E4", Offset = "0xA729E4", VA = "0xA729E4")]
		public SpineboyBeginnerInput()
		{
		}
	}
	[Token(Token = "0x200018D")]
	[SelectionBase]
	public class SpineboyBeginnerModel : MonoBehaviour
	{
		[Token(Token = "0x20002B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B744", Offset = "0x87B744")]
		private sealed class <JumpRoutine>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000EF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000EFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000EFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpineboyBeginnerModel <>4__this;

			[Token(Token = "0x4000EFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <pos>5__2;

			[Token(Token = "0x4000EFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <t>5__3;

			[Token(Token = "0x17000129")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D54")]
				[Address(RVA = "0xA73008", Offset = "0xA73008", VA = "0xA73008", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700012A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D56")]
				[Address(RVA = "0xA73078", Offset = "0xA73078", VA = "0xA73078", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D51")]
			[Address(RVA = "0xA72CA8", Offset = "0xA72CA8", VA = "0xA72CA8")]
			[DebuggerHidden]
			public <JumpRoutine>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6000D52")]
			[Address(RVA = "0xA72CE8", Offset = "0xA72CE8", VA = "0xA72CE8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D53")]
			[Address(RVA = "0xA72CEC", Offset = "0xA72CEC", VA = "0xA72CEC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D55")]
			[Address(RVA = "0xA73010", Offset = "0xA73010", VA = "0xA73010", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87E4F0", Offset = "0x87E4F0")]
		public SpineBeginnerBodyState state;

		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool facingLeft;

		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x87E528", Offset = "0x87E528")]
		public float currentSpeed;

		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87E540", Offset = "0x87E540")]
		public float shootInterval;

		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float lastShootTime;

		[Token(Token = "0x14000018")]
		public event Action ShootEvent
		{
			[Token(Token = "0x600076C")]
			[Address(RVA = "0xA72A5C", Offset = "0xA72A5C", VA = "0xA72A5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88382C", Offset = "0x88382C")]
			add
			{
			}
			[Token(Token = "0x600076D")]
			[Address(RVA = "0xA72B48", Offset = "0xA72B48", VA = "0xA72B48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88383C", Offset = "0x88383C")]
			remove
			{
			}
		}

		[Token(Token = "0x600076E")]
		[Address(RVA = "0xA729B8", Offset = "0xA729B8", VA = "0xA729B8")]
		public void TryJump()
		{
		}

		[Token(Token = "0x600076F")]
		[Address(RVA = "0xA72968", Offset = "0xA72968", VA = "0xA72968")]
		public void TryShoot()
		{
		}

		[Token(Token = "0x6000770")]
		[Address(RVA = "0xA72938", Offset = "0xA72938", VA = "0xA72938")]
		public void TryMove(float speed)
		{
		}

		[Token(Token = "0x6000771")]
		[Address(RVA = "0xA72C34", Offset = "0xA72C34", VA = "0xA72C34")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88384C", Offset = "0x88384C")]
		private IEnumerator JumpRoutine()
		{
			return null;
		}

		[Token(Token = "0x6000772")]
		[Address(RVA = "0xA72CD4", Offset = "0xA72CD4", VA = "0xA72CD4")]
		public SpineboyBeginnerModel()
		{
		}
	}
	[Token(Token = "0x200018E")]
	public enum SpineBeginnerBodyState
	{
		[Token(Token = "0x40008A7")]
		Idle,
		[Token(Token = "0x40008A8")]
		Running,
		[Token(Token = "0x40008A9")]
		Jumping
	}
	[Token(Token = "0x200018F")]
	public class SpineboyBeginnerView : MonoBehaviour
	{
		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87E588", Offset = "0x87E588")]
		public SpineboyBeginnerModel model;

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SkeletonAnimation skeletonAnimation;

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationReferenceAsset run;

		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationReferenceAsset idle;

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationReferenceAsset shoot;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationReferenceAsset jump;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public EventDataReferenceAsset footstepEvent;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87E5C0", Offset = "0x87E5C0")]
		public float footstepPitchOffset;

		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float gunsoundPitchOffset;

		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AudioSource footstepSource;

		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AudioSource gunSource;

		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AudioSource jumpSource;

		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87E5F8", Offset = "0x87E5F8")]
		public ParticleSystem gunParticles;

		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SpineBeginnerBodyState previousViewState;

		[Token(Token = "0x6000773")]
		[Address(RVA = "0xA73080", Offset = "0xA73080", VA = "0xA73080")]
		private void Start()
		{
		}

		[Token(Token = "0x6000774")]
		[Address(RVA = "0xA731C0", Offset = "0xA731C0", VA = "0xA731C0")]
		private void HandleEvent(TrackEntry trackEntry, Event e)
		{
		}

		[Token(Token = "0x6000775")]
		[Address(RVA = "0xA732B0", Offset = "0xA732B0", VA = "0xA732B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000776")]
		[Address(RVA = "0xA73474", Offset = "0xA73474", VA = "0xA73474")]
		private void PlayNewStableAnimation()
		{
		}

		[Token(Token = "0x6000777")]
		[Address(RVA = "0xA7323C", Offset = "0xA7323C", VA = "0xA7323C")]
		private void PlayFootstepSound()
		{
		}

		[Token(Token = "0x6000778")]
		[Address(RVA = "0xA73574", Offset = "0xA73574", VA = "0xA73574")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8838B0", Offset = "0x8838B0")]
		private void CheckTracks()
		{
		}

		[Token(Token = "0x6000779")]
		[Address(RVA = "0xA73640", Offset = "0xA73640", VA = "0xA73640")]
		public void PlayShoot()
		{
		}

		[Token(Token = "0x600077A")]
		[Address(RVA = "0xA7340C", Offset = "0xA7340C", VA = "0xA7340C")]
		public void Turn(bool facingLeft)
		{
		}

		[Token(Token = "0x600077B")]
		[Address(RVA = "0xA7354C", Offset = "0xA7354C", VA = "0xA7354C")]
		public float GetRandomPitch(float maxPitchOffset)
		{
			return default(float);
		}

		[Token(Token = "0x600077C")]
		[Address(RVA = "0xA737D0", Offset = "0xA737D0", VA = "0xA737D0")]
		public SpineboyBeginnerView()
		{
		}
	}
	[Token(Token = "0x2000190")]
	public class SpineboyTargetController : MonoBehaviour
	{
		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SkeletonAnimation skeletonAnimation;

		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpineBone", RVA = "0x87E630", Offset = "0x87E630")]
		public string boneName;

		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Camera camera;

		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Bone bone;

		[Token(Token = "0x600077D")]
		[Address(RVA = "0xA75790", Offset = "0xA75790", VA = "0xA75790")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600077E")]
		[Address(RVA = "0xA75820", Offset = "0xA75820", VA = "0xA75820")]
		private void Start()
		{
		}

		[Token(Token = "0x600077F")]
		[Address(RVA = "0xA75884", Offset = "0xA75884", VA = "0xA75884")]
		private void Update()
		{
		}

		[Token(Token = "0x6000780")]
		[Address(RVA = "0xA759C8", Offset = "0xA759C8", VA = "0xA759C8")]
		public SpineboyTargetController()
		{
		}
	}
	[Token(Token = "0x2000191")]
	public sealed class TransitionDictionaryExample : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002BA")]
		public struct SerializedEntry
		{
			[Token(Token = "0x4000EFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public AnimationReferenceAsset from;

			[Token(Token = "0x4000EFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AnimationReferenceAsset to;

			[Token(Token = "0x4000F00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AnimationReferenceAsset transition;
		}

		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<SerializedEntry> transitions;

		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Dictionary<AnimationStateData.AnimationPair, Animation> dictionary;

		[Token(Token = "0x6000781")]
		[Address(RVA = "0xA76494", Offset = "0xA76494", VA = "0xA76494")]
		private void Start()
		{
		}

		[Token(Token = "0x6000782")]
		[Address(RVA = "0xA7669C", Offset = "0xA7669C", VA = "0xA7669C")]
		public Animation GetTransition(Animation from, Animation to)
		{
			return null;
		}

		[Token(Token = "0x6000783")]
		[Address(RVA = "0xA76740", Offset = "0xA76740", VA = "0xA76740")]
		public TransitionDictionaryExample()
		{
		}
	}
	[Token(Token = "0x2000192")]
	public class Goblins : MonoBehaviour
	{
		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SkeletonAnimation skeletonAnimation;

		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Bone headBone;

		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool girlSkin;

		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x87E694", Offset = "0x87E694")]
		public float extraRotation;

		[Token(Token = "0x6000784")]
		[Address(RVA = "0xA22768", Offset = "0xA22768", VA = "0xA22768")]
		public void Start()
		{
		}

		[Token(Token = "0x6000785")]
		[Address(RVA = "0xA22850", Offset = "0xA22850", VA = "0xA22850")]
		public void UpdateLocal(ISkeletonAnimation skeletonRenderer)
		{
		}

		[Token(Token = "0x6000786")]
		[Address(RVA = "0xA228C4", Offset = "0xA228C4", VA = "0xA228C4")]
		public void OnMouseDown()
		{
		}

		[Token(Token = "0x6000787")]
		[Address(RVA = "0xA22A50", Offset = "0xA22A50", VA = "0xA22A50")]
		public Goblins()
		{
		}
	}
	[Token(Token = "0x2000193")]
	public class HandleEventWithAudioExample : MonoBehaviour
	{
		[Token(Token = "0x40008C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SkeletonAnimation skeletonAnimation;

		[Token(Token = "0x40008C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpineEvent", RVA = "0x87E6B4", Offset = "0x87E6B4")]
		public string eventName;

		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x87E70C", Offset = "0x87E70C")]
		public AudioSource audioSource;

		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip audioClip;

		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float basePitch;

		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float randomPitchOffset;

		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x87E71C", Offset = "0x87E71C")]
		public bool logDebugMessage;

		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private EventData eventData;

		[Token(Token = "0x6000788")]
		[Address(RVA = "0xA22A58", Offset = "0xA22A58", VA = "0xA22A58")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000789")]
		[Address(RVA = "0xA22B3C", Offset = "0xA22B3C", VA = "0xA22B3C")]
		private void Start()
		{
		}

		[Token(Token = "0x600078A")]
		[Address(RVA = "0xA22CF8", Offset = "0xA22CF8", VA = "0xA22CF8")]
		private void HandleAnimationStateEvent(TrackEntry trackEntry, Event e)
		{
		}

		[Token(Token = "0x600078B")]
		[Address(RVA = "0xA22E04", Offset = "0xA22E04", VA = "0xA22E04")]
		public void Play()
		{
		}

		[Token(Token = "0x600078C")]
		[Address(RVA = "0xA22E9C", Offset = "0xA22E9C", VA = "0xA22E9C")]
		public HandleEventWithAudioExample()
		{
		}
	}
	[Token(Token = "0x2000194")]
	public class HeroEffectsHandlerExample : MonoBehaviour
	{
		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BasicPlatformerController eventSource;

		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent OnJump;

		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent OnLand;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent OnHardLand;

		[Token(Token = "0x600078D")]
		[Address(RVA = "0xA22EB4", Offset = "0xA22EB4", VA = "0xA22EB4")]
		public void Awake()
		{
		}

		[Token(Token = "0x600078E")]
		[Address(RVA = "0xA2300C", Offset = "0xA2300C", VA = "0xA2300C")]
		public HeroEffectsHandlerExample()
		{
		}
	}
	[Token(Token = "0x2000195")]
	public class MaterialPropertyBlockExample : MonoBehaviour
	{
		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timeInterval;

		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Gradient randomColors;

		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string colorPropertyName;

		[Token(Token = "0x40008D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MaterialPropertyBlock mpb;

		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float timeToNextColor;

		[Token(Token = "0x600078F")]
		[Address(RVA = "0xA2341C", Offset = "0xA2341C", VA = "0xA2341C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000790")]
		[Address(RVA = "0xA2347C", Offset = "0xA2347C", VA = "0xA2347C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000791")]
		[Address(RVA = "0xA2359C", Offset = "0xA2359C", VA = "0xA2359C")]
		public MaterialPropertyBlockExample()
		{
		}
	}
	[Token(Token = "0x2000196")]
	public class MaterialReplacementExample : MonoBehaviour
	{
		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Material originalMaterial;

		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material replacementMaterial;

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool replacementEnabled;

		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SkeletonAnimation skeletonAnimation;

		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x87E72C", Offset = "0x87E72C")]
		public string phasePropertyName;

		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x87E73C", Offset = "0x87E73C")]
		public float phase;

		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool previousEnabled;

		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MaterialPropertyBlock mpb;

		[Token(Token = "0x6000792")]
		[Address(RVA = "0xA2361C", Offset = "0xA2361C", VA = "0xA2361C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000793")]
		[Address(RVA = "0xA2375C", Offset = "0xA2375C", VA = "0xA2375C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000794")]
		[Address(RVA = "0xA23690", Offset = "0xA23690", VA = "0xA23690")]
		private void SetReplacementEnabled(bool active)
		{
		}

		[Token(Token = "0x6000795")]
		[Address(RVA = "0xA23840", Offset = "0xA23840", VA = "0xA23840")]
		public MaterialReplacementExample()
		{
		}
	}
	[Token(Token = "0x2000197")]
	public class DummyMecanimControllerExample : MonoBehaviour
	{
		[Token(Token = "0x20002BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B754", Offset = "0x87B754")]
		private sealed class <FakeJump>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DummyMecanimControllerExample <>4__this;

			[Token(Token = "0x4000F04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <durationLeft>5__2;

			[Token(Token = "0x1700012B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D5A")]
				[Address(RVA = "0xA216C8", Offset = "0xA216C8", VA = "0xA216C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700012C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D5C")]
				[Address(RVA = "0xA21738", Offset = "0xA21738", VA = "0xA21738", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D57")]
			[Address(RVA = "0xA21430", Offset = "0xA21430", VA = "0xA21430")]
			[DebuggerHidden]
			public <FakeJump>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6000D58")]
			[Address(RVA = "0xA214E8", Offset = "0xA214E8", VA = "0xA214E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D59")]
			[Address(RVA = "0xA214EC", Offset = "0xA214EC", VA = "0xA214EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D5B")]
			[Address(RVA = "0xA216D0", Offset = "0xA216D0", VA = "0xA216D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator logicAnimator;

		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SkeletonAnimationHandleExample animationHandle;

		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87E754", Offset = "0x87E754")]
		public KeyCode walkButton;

		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public KeyCode jumpButton;

		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87E78C", Offset = "0x87E78C")]
		public string horizontalSpeedProperty;

		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string verticalSpeedProperty;

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string groundedProperty;

		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87E7C4", Offset = "0x87E7C4")]
		public float jumpDuration;

		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector2 speed;

		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool isGrounded;

		[Token(Token = "0x6000796")]
		[Address(RVA = "0xA21224", Offset = "0xA21224", VA = "0xA21224")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000797")]
		[Address(RVA = "0xA21230", Offset = "0xA21230", VA = "0xA21230")]
		private void Update()
		{
		}

		[Token(Token = "0x6000798")]
		[Address(RVA = "0xA213BC", Offset = "0xA213BC", VA = "0xA213BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8838E8", Offset = "0x8838E8")]
		private IEnumerator FakeJump()
		{
			return null;
		}

		[Token(Token = "0x6000799")]
		[Address(RVA = "0xA2145C", Offset = "0xA2145C", VA = "0xA2145C")]
		public DummyMecanimControllerExample()
		{
		}
	}
	[Token(Token = "0x2000198")]
	public class MecanimToAnimationHandleExample : StateMachineBehaviour
	{
		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SkeletonAnimationHandleExample animationHandle;

		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool initialized;

		[Token(Token = "0x600079A")]
		[Address(RVA = "0xA238A8", Offset = "0xA238A8", VA = "0xA238A8", Slot = "4")]
		public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x600079B")]
		[Address(RVA = "0xA23970", Offset = "0xA23970", VA = "0xA23970")]
		public MecanimToAnimationHandleExample()
		{
		}
	}
	[Token(Token = "0x2000199")]
	public class SkeletonAnimationHandleExample : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002BC")]
		public class StateNameToAnimationReference
		{
			[Token(Token = "0x4000F05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string stateName;

			[Token(Token = "0x4000F06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AnimationReferenceAsset animation;

			[Token(Token = "0x6000D5D")]
			[Address(RVA = "0xA65A8C", Offset = "0xA65A8C", VA = "0xA65A8C")]
			public StateNameToAnimationReference()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002BD")]
		public class AnimationTransition
		{
			[Token(Token = "0x4000F07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AnimationReferenceAsset from;

			[Token(Token = "0x4000F08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AnimationReferenceAsset to;

			[Token(Token = "0x4000F09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AnimationReferenceAsset transition;

			[Token(Token = "0x6000D5E")]
			[Address(RVA = "0xA65A84", Offset = "0xA65A84", VA = "0xA65A84")]
			public AnimationTransition()
			{
			}
		}

		[Token(Token = "0x20002BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B764", Offset = "0x87B764")]
		private sealed class <>c__DisplayClass14_0
		{
			[Token(Token = "0x4000F0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SkeletonAnimationHandleExample <>4__this;

			[Token(Token = "0x4000F0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int shortNameHash;

			[Token(Token = "0x6000D5F")]
			[Address(RVA = "0xA656A0", Offset = "0xA656A0", VA = "0xA656A0")]
			public <>c__DisplayClass14_0()
			{
			}

			[Token(Token = "0x6000D60")]
			[Address(RVA = "0xA65A24", Offset = "0xA65A24", VA = "0xA65A24")]
			internal bool <GetAnimationForState>b__0(StateNameToAnimationReference entry)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40008E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SkeletonAnimation skeletonAnimation;

		[Token(Token = "0x40008E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<StateNameToAnimationReference> statesAndAnimations;

		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<AnimationTransition> transitions;

		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87E7FC", Offset = "0x87E7FC")]
		private Animation <TargetAnimation>k__BackingField;

		[Token(Token = "0x17000056")]
		public Animation TargetAnimation
		{
			[Token(Token = "0x600079C")]
			[Address(RVA = "0xA650E4", Offset = "0xA650E4", VA = "0xA650E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88394C", Offset = "0x88394C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600079D")]
			[Address(RVA = "0xA650EC", Offset = "0xA650EC", VA = "0xA650EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88395C", Offset = "0x88395C")]
			private set
			{
			}
		}

		[Token(Token = "0x600079E")]
		[Address(RVA = "0xA650F4", Offset = "0xA650F4", VA = "0xA650F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600079F")]
		[Address(RVA = "0xA65364", Offset = "0xA65364", VA = "0xA65364")]
		public void SetFlip(float horizontal)
		{
		}

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0xA653E4", Offset = "0xA653E4", VA = "0xA653E4")]
		public void PlayAnimationForState(string stateShortName, int layerIndex)
		{
		}

		[Token(Token = "0x60007A1")]
		[Address(RVA = "0xA65428", Offset = "0xA65428", VA = "0xA65428")]
		public void PlayAnimationForState(int shortNameHash, int layerIndex)
		{
		}

		[Token(Token = "0x60007A2")]
		[Address(RVA = "0xA65670", Offset = "0xA65670", VA = "0xA65670")]
		public Animation GetAnimationForState(string stateShortName)
		{
			return null;
		}

		[Token(Token = "0x60007A3")]
		[Address(RVA = "0xA6546C", Offset = "0xA6546C", VA = "0xA6546C")]
		public Animation GetAnimationForState(int shortNameHash)
		{
			return null;
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0xA65564", Offset = "0xA65564", VA = "0xA65564")]
		public void PlayNewAnimation(Animation target, int layerIndex)
		{
		}

		[Token(Token = "0x60007A5")]
		[Address(RVA = "0xA658BC", Offset = "0xA658BC", VA = "0xA658BC")]
		public void PlayOneShot(Animation oneShot, int layerIndex)
		{
		}

		[Token(Token = "0x60007A6")]
		[Address(RVA = "0xA65710", Offset = "0xA65710", VA = "0xA65710")]
		private Animation TryGetTransition(Animation from, Animation to)
		{
			return null;
		}

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0xA656A8", Offset = "0xA656A8", VA = "0xA656A8")]
		private Animation GetCurrentAnimation(int layerIndex)
		{
			return null;
		}

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0xA6541C", Offset = "0xA6541C", VA = "0xA6541C")]
		private int StringToHash(string s)
		{
			return default(int);
		}

		[Token(Token = "0x60007A9")]
		[Address(RVA = "0xA6598C", Offset = "0xA6598C", VA = "0xA6598C")]
		public SkeletonAnimationHandleExample()
		{
		}
	}
	[Token(Token = "0x200019A")]
	public class AnimationMatchModifierAsset : SkeletonDataModifierAsset
	{
		[Token(Token = "0x20002BF")]
		public static class AnimationTools
		{
			[Token(Token = "0x6000D61")]
			[Address(RVA = "0xA1CAF0", Offset = "0xA1CAF0", VA = "0xA1CAF0")]
			public static void MatchAnimationTimelines(IEnumerable<Animation> animations, SkeletonData skeletonData)
			{
			}

			[Token(Token = "0x6000D62")]
			[Address(RVA = "0xA1D748", Offset = "0xA1D748", VA = "0xA1D748")]
			private static Timeline GetFillerTimeline(Timeline timeline, SkeletonData skeletonData)
			{
				return null;
			}

			[Token(Token = "0x6000D63")]
			[Address(RVA = "0xA1DAD0", Offset = "0xA1DAD0", VA = "0xA1DAD0")]
			private static RotateTimeline GetFillerTimeline(RotateTimeline timeline, SkeletonData skeletonData)
			{
				return null;
			}

			[Token(Token = "0x6000D64")]
			[Address(RVA = "0xA1DBA0", Offset = "0xA1DBA0", VA = "0xA1DBA0")]
			private static TranslateTimeline GetFillerTimeline(TranslateTimeline timeline, SkeletonData skeletonData)
			{
				return null;
			}

			[Token(Token = "0x6000D65")]
			[Address(RVA = "0xA1DC74", Offset = "0xA1DC74", VA = "0xA1DC74")]
			private static ScaleTimeline GetFillerTimeline(ScaleTimeline timeline, SkeletonData skeletonData)
			{
				return null;
			}

			[Token(Token = "0x6000D66")]
			[Address(RVA = "0xA1DD4C", Offset = "0xA1DD4C", VA = "0xA1DD4C")]
			private static ShearTimeline GetFillerTimeline(ShearTimeline timeline, SkeletonData skeletonData)
			{
				return null;
			}

			[Token(Token = "0x6000D67")]
			[Address(RVA = "0xA1DE24", Offset = "0xA1DE24", VA = "0xA1DE24")]
			private static AttachmentTimeline GetFillerTimeline(AttachmentTimeline timeline, SkeletonData skeletonData)
			{
				return null;
			}

			[Token(Token = "0x6000D68")]
			[Address(RVA = "0xA1DF84", Offset = "0xA1DF84", VA = "0xA1DF84")]
			private static ColorTimeline GetFillerTimeline(ColorTimeline timeline, SkeletonData skeletonData)
			{
				return null;
			}

			[Token(Token = "0x6000D69")]
			[Address(RVA = "0xA1E17C", Offset = "0xA1E17C", VA = "0xA1E17C")]
			private static TwoColorTimeline GetFillerTimeline(TwoColorTimeline timeline, SkeletonData skeletonData)
			{
				return null;
			}

			[Token(Token = "0x6000D6A")]
			[Address(RVA = "0xA1E408", Offset = "0xA1E408", VA = "0xA1E408")]
			private static DeformTimeline GetFillerTimeline(DeformTimeline timeline, SkeletonData skeletonData)
			{
				return null;
			}

			[Token(Token = "0x6000D6B")]
			[Address(RVA = "0xA1E5E8", Offset = "0xA1E5E8", VA = "0xA1E5E8")]
			private static DrawOrderTimeline GetFillerTimeline(DrawOrderTimeline timeline, SkeletonData skeletonData)
			{
				return null;
			}

			[Token(Token = "0x6000D6C")]
			[Address(RVA = "0xA1E66C", Offset = "0xA1E66C", VA = "0xA1E66C")]
			private static IkConstraintTimeline GetFillerTimeline(IkConstraintTimeline timeline, SkeletonData skeletonData)
			{
				return null;
			}

			[Token(Token = "0x6000D6D")]
			[Address(RVA = "0xA1E850", Offset = "0xA1E850", VA = "0xA1E850")]
			private static TransformConstraintTimeline GetFillerTimeline(TransformConstraintTimeline timeline, SkeletonData skeletonData)
			{
				return null;
			}

			[Token(Token = "0x6000D6E")]
			[Address(RVA = "0xA1EA10", Offset = "0xA1EA10", VA = "0xA1EA10")]
			private static PathConstraintPositionTimeline GetFillerTimeline(PathConstraintPositionTimeline timeline, SkeletonData skeletonData)
			{
				return null;
			}

			[Token(Token = "0x6000D6F")]
			[Address(RVA = "0xA1EB40", Offset = "0xA1EB40", VA = "0xA1EB40")]
			private static PathConstraintSpacingTimeline GetFillerTimeline(PathConstraintSpacingTimeline timeline, SkeletonData skeletonData)
			{
				return null;
			}

			[Token(Token = "0x6000D70")]
			[Address(RVA = "0xA1EC70", Offset = "0xA1EC70", VA = "0xA1EC70")]
			private static PathConstraintMixTimeline GetFillerTimeline(PathConstraintMixTimeline timeline, SkeletonData skeletonData)
			{
				return null;
			}
		}

		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool matchAllAnimations;

		[Token(Token = "0x60007AA")]
		[Address(RVA = "0xA1CAA4", Offset = "0xA1CAA4", VA = "0xA1CAA4", Slot = "4")]
		public override void Apply(SkeletonData skeletonData)
		{
		}

		[Token(Token = "0x60007AB")]
		[Address(RVA = "0xA1D738", Offset = "0xA1D738", VA = "0xA1D738")]
		public AnimationMatchModifierAsset()
		{
		}
	}
	[Token(Token = "0x200019B")]
	public class EquipAssetExample : ScriptableObject
	{
		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EquipSystemExample.EquipType equipType;

		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Sprite sprite;

		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string description;

		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int yourStats;

		[Token(Token = "0x60007AC")]
		[Address(RVA = "0xA21740", Offset = "0xA21740", VA = "0xA21740")]
		public EquipAssetExample()
		{
		}
	}
	[Token(Token = "0x200019C")]
	public class EquipButtonExample : MonoBehaviour
	{
		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EquipAssetExample asset;

		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public EquipSystemExample equipSystem;

		[Token(Token = "0x40008F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image inventoryImage;

		[Token(Token = "0x60007AD")]
		[Address(RVA = "0xA21748", Offset = "0xA21748", VA = "0xA21748")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0xA2174C", Offset = "0xA2174C", VA = "0xA2174C")]
		private void MatchImage()
		{
		}

		[Token(Token = "0x60007AF")]
		[Address(RVA = "0xA21800", Offset = "0xA21800", VA = "0xA21800")]
		private void Start()
		{
		}

		[Token(Token = "0x60007B0")]
		[Address(RVA = "0xA218C8", Offset = "0xA218C8", VA = "0xA218C8")]
		public EquipButtonExample()
		{
		}

		[Token(Token = "0x60007B1")]
		[Address(RVA = "0xA218D0", Offset = "0xA218D0", VA = "0xA218D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88396C", Offset = "0x88396C")]
		private void <Start>b__5_0()
		{
		}
	}
	[Token(Token = "0x200019D")]
	public class EquipsVisualsComponentExample : MonoBehaviour
	{
		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SkeletonAnimation skeletonAnimation;

		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpineSkin", RVA = "0x87E80C", Offset = "0x87E80C")]
		public string templateSkinName;

		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Skin equipsSkin;

		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Skin collectedSkin;

		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Material runtimeMaterial;

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Texture2D runtimeAtlas;

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0xA21FEC", Offset = "0xA21FEC", VA = "0xA21FEC")]
		private void Start()
		{
		}

		[Token(Token = "0x60007B3")]
		[Address(RVA = "0xA21BF4", Offset = "0xA21BF4", VA = "0xA21BF4")]
		public void Equip(int slotIndex, string attachmentName, Attachment attachment)
		{
		}

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0xA21CC0", Offset = "0xA21CC0", VA = "0xA21CC0")]
		public void OptimizeSkin()
		{
		}

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0xA2210C", Offset = "0xA2210C", VA = "0xA2210C")]
		private void RefreshSkeletonAttachments()
		{
		}

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0xA221B4", Offset = "0xA221B4", VA = "0xA221B4")]
		public EquipsVisualsComponentExample()
		{
		}
	}
	[Token(Token = "0x200019E")]
	public class EquipSystemExample : MonoBehaviour, IHasSkeletonDataAsset
	{
		[Serializable]
		[Token(Token = "0x20002C0")]
		public class EquipHook
		{
			[Token(Token = "0x4000F0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public EquipType type;

			[Token(Token = "0x4000F0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "SpineSlot", RVA = "0x881E3C", Offset = "0x881E3C")]
			public string slot;

			[Token(Token = "0x4000F0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "SpineSkin", RVA = "0x881E9C", Offset = "0x881E9C")]
			public string templateSkin;

			[Token(Token = "0x4000F0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "SpineAttachment", RVA = "0x881EFC", Offset = "0x881EFC")]
			public string templateAttachment;

			[Token(Token = "0x6000D71")]
			[Address(RVA = "0xA21FE4", Offset = "0xA21FE4", VA = "0xA21FE4")]
			public EquipHook()
			{
			}
		}

		[Token(Token = "0x20002C1")]
		public enum EquipType
		{
			[Token(Token = "0x4000F11")]
			Gun,
			[Token(Token = "0x4000F12")]
			Goggles
		}

		[Token(Token = "0x20002C2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B774", Offset = "0x87B774")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4000F13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public EquipType equipType;

			[Token(Token = "0x6000D72")]
			[Address(RVA = "0xA21A88", Offset = "0xA21A88", VA = "0xA21A88")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6000D73")]
			[Address(RVA = "0xA21FA8", Offset = "0xA21FA8", VA = "0xA21FA8")]
			internal bool <Equip>b__0(EquipHook x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SkeletonDataAsset skeletonDataAsset;

		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material sourceMaterial;

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool applyPMA;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<EquipHook> equippables;

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public EquipsVisualsComponentExample target;

		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Dictionary<EquipAssetExample, Attachment> cachedAttachments;

		[Token(Token = "0x17000057")]
		private SkeletonDataAsset Spine.Unity.IHasSkeletonDataAsset.SkeletonDataAsset
		{
			[Token(Token = "0x60007B7")]
			[Address(RVA = "0xA21A80", Offset = "0xA21A80", VA = "0xA21A80", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0xA21900", Offset = "0xA21900", VA = "0xA21900")]
		public void Equip(EquipAssetExample asset)
		{
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0xA21A90", Offset = "0xA21A90", VA = "0xA21A90")]
		private Attachment GenerateAttachmentFromEquipAsset(EquipAssetExample asset, int slotIndex, string templateSkinName, string templateAttachmentName)
		{
			return null;
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0xA21C94", Offset = "0xA21C94", VA = "0xA21C94")]
		public void Done()
		{
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0xA21F08", Offset = "0xA21F08", VA = "0xA21F08")]
		public EquipSystemExample()
		{
		}
	}
	[Token(Token = "0x200019F")]
	public class MixAndMatch : MonoBehaviour
	{
		[Token(Token = "0x20002C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B784", Offset = "0x87B784")]
		private sealed class <Start>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MixAndMatch <>4__this;

			[Token(Token = "0x1700012D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D77")]
				[Address(RVA = "0xA24060", Offset = "0xA24060", VA = "0xA24060", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700012E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D79")]
				[Address(RVA = "0xA240D0", Offset = "0xA240D0", VA = "0xA240D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D74")]
			[Address(RVA = "0xA23B24", Offset = "0xA23B24", VA = "0xA23B24")]
			[DebuggerHidden]
			public <Start>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6000D75")]
			[Address(RVA = "0xA23FB0", Offset = "0xA23FB0", VA = "0xA23FB0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D76")]
			[Address(RVA = "0xA23FB4", Offset = "0xA23FB4", VA = "0xA23FB4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D78")]
			[Address(RVA = "0xA24068", Offset = "0xA24068", VA = "0xA24068", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpineSkin", RVA = "0x87E86C", Offset = "0x87E86C")]
		public string templateAttachmentsSkin;

		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material sourceMaterial;

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87E8CC", Offset = "0x87E8CC")]
		public Sprite visorSprite;

		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpineSlot", RVA = "0x87E904", Offset = "0x87E904")]
		public string visorSlot;

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpineAttachment", RVA = "0x87E964", Offset = "0x87E964")]
		public string visorKey;

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87E9EC", Offset = "0x87E9EC")]
		public Sprite gunSprite;

		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "SpineSlot", RVA = "0x87EA24", Offset = "0x87EA24")]
		public string gunSlot;

		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "SpineAttachment", RVA = "0x87EA84", Offset = "0x87EA84")]
		public string gunKey;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87EB0C", Offset = "0x87EB0C")]
		public bool repack;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public BoundingBoxFollower bbFollower;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87EB44", Offset = "0x87EB44")]
		public Texture2D runtimeAtlas;

		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Material runtimeMaterial;

		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Skin customSkin;

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0xA23978", Offset = "0xA23978", VA = "0xA23978")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0xA23AB0", Offset = "0xA23AB0", VA = "0xA23AB0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88397C", Offset = "0x88397C")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0xA23B50", Offset = "0xA23B50", VA = "0xA23B50")]
		private void Apply()
		{
		}

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0xA23F30", Offset = "0xA23F30", VA = "0xA23F30")]
		public MixAndMatch()
		{
		}
	}
	[Token(Token = "0x20001A0")]
	public class MixAndMatchGraphic : MonoBehaviour
	{
		[Token(Token = "0x20002C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B794", Offset = "0x87B794")]
		private sealed class <Start>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MixAndMatchGraphic <>4__this;

			[Token(Token = "0x1700012F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D7D")]
				[Address(RVA = "0xA24774", Offset = "0xA24774", VA = "0xA24774", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000130")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D7F")]
				[Address(RVA = "0xA247E4", Offset = "0xA247E4", VA = "0xA247E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D7A")]
			[Address(RVA = "0xA24284", Offset = "0xA24284", VA = "0xA24284")]
			[DebuggerHidden]
			public <Start>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6000D7B")]
			[Address(RVA = "0xA246C4", Offset = "0xA246C4", VA = "0xA246C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D7C")]
			[Address(RVA = "0xA246C8", Offset = "0xA246C8", VA = "0xA246C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D7E")]
			[Address(RVA = "0xA2477C", Offset = "0xA2477C", VA = "0xA2477C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpineSkin", RVA = "0x87EB7C", Offset = "0x87EB7C")]
		public string baseSkinName;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Material sourceMaterial;

		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87EBDC", Offset = "0x87EBDC")]
		public Sprite visorSprite;

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpineSlot", RVA = "0x87EC14", Offset = "0x87EC14")]
		public string visorSlot;

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpineAttachment", RVA = "0x87EC74", Offset = "0x87EC74")]
		public string visorKey;

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87ECFC", Offset = "0x87ECFC")]
		public Sprite gunSprite;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "SpineSlot", RVA = "0x87ED34", Offset = "0x87ED34")]
		public string gunSlot;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "SpineAttachment", RVA = "0x87ED94", Offset = "0x87ED94")]
		public string gunKey;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87EE1C", Offset = "0x87EE1C")]
		public bool repack;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87EE54", Offset = "0x87EE54")]
		public Texture2D runtimeAtlas;

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Material runtimeMaterial;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Skin customSkin;

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0xA240D8", Offset = "0xA240D8", VA = "0xA240D8")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0xA24210", Offset = "0xA24210", VA = "0xA24210")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8839E0", Offset = "0x8839E0")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0xA242B0", Offset = "0xA242B0", VA = "0xA242B0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x883A44", Offset = "0x883A44")]
		private void Apply()
		{
		}

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0xA24644", Offset = "0xA24644", VA = "0xA24644")]
		public MixAndMatchGraphic()
		{
		}
	}
	[Token(Token = "0x20001A1")]
	public class RaggedySpineboy : MonoBehaviour
	{
		[Token(Token = "0x20002C5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B7A4", Offset = "0x87B7A4")]
		private sealed class <Restore>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RaggedySpineboy <>4__this;

			[Token(Token = "0x17000131")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D83")]
				[Address(RVA = "0xA24FE8", Offset = "0xA24FE8", VA = "0xA24FE8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000132")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D85")]
				[Address(RVA = "0xA25058", Offset = "0xA25058", VA = "0xA25058", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D80")]
			[Address(RVA = "0xA24B94", Offset = "0xA24B94", VA = "0xA24B94")]
			[DebuggerHidden]
			public <Restore>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000D81")]
			[Address(RVA = "0xA24C44", Offset = "0xA24C44", VA = "0xA24C44", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D82")]
			[Address(RVA = "0xA24C48", Offset = "0xA24C48", VA = "0xA24C48", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D84")]
			[Address(RVA = "0xA24FF0", Offset = "0xA24FF0", VA = "0xA24FF0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002C6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B7B4", Offset = "0x87B7B4")]
		private sealed class <WaitUntilStopped>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RaggedySpineboy <>4__this;

			[Token(Token = "0x4000F20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x17000133")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D89")]
				[Address(RVA = "0xA25204", Offset = "0xA25204", VA = "0xA25204", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000134")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D8B")]
				[Address(RVA = "0xA25274", Offset = "0xA25274", VA = "0xA25274", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D86")]
			[Address(RVA = "0xA24BC0", Offset = "0xA24BC0", VA = "0xA24BC0")]
			[DebuggerHidden]
			public <WaitUntilStopped>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6000D87")]
			[Address(RVA = "0xA25060", Offset = "0xA25060", VA = "0xA25060", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D88")]
			[Address(RVA = "0xA25064", Offset = "0xA25064", VA = "0xA25064", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D8A")]
			[Address(RVA = "0xA2520C", Offset = "0xA2520C", VA = "0xA2520C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask groundMask;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float restoreDuration;

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 launchVelocity;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SkeletonRagdoll2D ragdoll;

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider2D naturalCollider;

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0xA247EC", Offset = "0xA247EC", VA = "0xA247EC")]
		private void Start()
		{
		}

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0xA2485C", Offset = "0xA2485C", VA = "0xA2485C")]
		private void AddRigidbody()
		{
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0xA24900", Offset = "0xA24900", VA = "0xA24900")]
		private void RemoveRigidbody()
		{
		}

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0xA249A4", Offset = "0xA249A4", VA = "0xA249A4")]
		private void OnMouseUp()
		{
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0xA249F0", Offset = "0xA249F0", VA = "0xA249F0")]
		private void Launch()
		{
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0xA24B20", Offset = "0xA24B20", VA = "0xA24B20")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x883A7C", Offset = "0x883A7C")]
		private IEnumerator Restore()
		{
			return null;
		}

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0xA24AAC", Offset = "0xA24AAC", VA = "0xA24AAC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x883AE0", Offset = "0x883AE0")]
		private IEnumerator WaitUntilStopped()
		{
			return null;
		}

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0xA24BEC", Offset = "0xA24BEC", VA = "0xA24BEC")]
		public RaggedySpineboy()
		{
		}
	}
	[Token(Token = "0x20001A2")]
	public class Rotator : MonoBehaviour
	{
		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 direction;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float speed;

		[Token(Token = "0x60007CC")]
		[Address(RVA = "0xA64F94", Offset = "0xA64F94", VA = "0xA64F94")]
		private void Update()
		{
		}

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0xA65080", Offset = "0xA65080", VA = "0xA65080")]
		public Rotator()
		{
		}
	}
	[Token(Token = "0x20001A3")]
	public class BoneLocalOverride : MonoBehaviour
	{
		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpineBone", RVA = "0x87EE8C", Offset = "0x87EE8C")]
		public string boneName;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x87EEE8", Offset = "0x87EEE8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x87EEE8", Offset = "0x87EEE8")]
		public float alpha;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x87EF28", Offset = "0x87EF28")]
		public bool overridePosition;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 localPosition;

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x87EF38", Offset = "0x87EF38")]
		public bool overrideRotation;

		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x87EF48", Offset = "0x87EF48")]
		public float rotation;

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ISkeletonAnimation spineComponent;

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Bone bone;

		[Token(Token = "0x60007CE")]
		[Address(RVA = "0xA20184", Offset = "0xA20184", VA = "0xA20184")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0xA202A8", Offset = "0xA202A8", VA = "0xA202A8")]
		private void OverrideLocal(ISkeletonAnimation animated)
		{
		}

		[Token(Token = "0x60007D0")]
		[Address(RVA = "0xA20614", Offset = "0xA20614", VA = "0xA20614")]
		public BoneLocalOverride()
		{
		}
	}
	[Token(Token = "0x20001A4")]
	public class CombinedSkin : MonoBehaviour
	{
		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpineSkin", RVA = "0x87EF64", Offset = "0x87EF64")]
		public List<string> skinsToCombine;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Skin combinedSkin;

		[Token(Token = "0x60007D1")]
		[Address(RVA = "0xA20630", Offset = "0xA20630", VA = "0xA20630")]
		private void Start()
		{
		}

		[Token(Token = "0x60007D2")]
		[Address(RVA = "0xA2092C", Offset = "0xA2092C", VA = "0xA2092C")]
		public CombinedSkin()
		{
		}
	}
	[Token(Token = "0x20001A5")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x879F50", Offset = "0x879F50")]
	public class SkeletonGhost : MonoBehaviour
	{
		[Token(Token = "0x4000929")]
		private const HideFlags GhostHideFlags = HideFlags.HideInHierarchy;

		[Token(Token = "0x400092A")]
		private const string GhostingShaderName = "Spine/Special/SkeletonGhost";

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87EFC4", Offset = "0x87EFC4")]
		public bool ghostingEnabled;

		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87EFFC", Offset = "0x87EFFC")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x87EFFC", Offset = "0x87EFFC")]
		public float spawnInterval;

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87F05C", Offset = "0x87F05C")]
		public int maximumGhosts;

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float fadeSpeed;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87F094", Offset = "0x87F094")]
		public Shader ghostShader;

		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color32 color;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87F0CC", Offset = "0x87F0CC")]
		public bool additive;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87F104", Offset = "0x87F104")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x87F104", Offset = "0x87F104")]
		public float textureFade;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87F158", Offset = "0x87F158")]
		public bool sortWithDistanceOnly;

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float zOffset;

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float nextSpawnTime;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private SkeletonGhostRenderer[] pool;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int poolIndex;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkeletonRenderer skeletonRenderer;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private MeshRenderer meshRenderer;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MeshFilter meshFilter;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly Dictionary<Material, Material> materialTable;

		[Token(Token = "0x60007D3")]
		[Address(RVA = "0xA65A94", Offset = "0xA65A94", VA = "0xA65A94")]
		private void Start()
		{
		}

		[Token(Token = "0x60007D4")]
		[Address(RVA = "0xA65A9C", Offset = "0xA65A9C", VA = "0xA65A9C")]
		public void Initialize(bool overwrite)
		{
		}

		[Token(Token = "0x60007D5")]
		[Address(RVA = "0xA65EBC", Offset = "0xA65EBC", VA = "0xA65EBC")]
		private void OnEvent(TrackEntry trackEntry, Event e)
		{
		}

		[Token(Token = "0x60007D6")]
		[Address(RVA = "0xA661E4", Offset = "0xA661E4", VA = "0xA661E4")]
		private void Ghosting(float val)
		{
		}

		[Token(Token = "0x60007D7")]
		[Address(RVA = "0xA661F4", Offset = "0xA661F4", VA = "0xA661F4")]
		private void Update()
		{
		}

		[Token(Token = "0x60007D8")]
		[Address(RVA = "0xA669A8", Offset = "0xA669A8", VA = "0xA669A8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60007D9")]
		[Address(RVA = "0xA66020", Offset = "0xA66020", VA = "0xA66020")]
		private static Color32 HexToColor(string hex)
		{
			return default(Color32);
		}

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0xA66D38", Offset = "0xA66D38", VA = "0xA66D38")]
		public SkeletonGhost()
		{
		}
	}
	[Token(Token = "0x20001A6")]
	public class SkeletonGhostRenderer : MonoBehaviour
	{
		[Token(Token = "0x20002C7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B7C4", Offset = "0x87B7C4")]
		private sealed class <Fade>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SkeletonGhostRenderer <>4__this;

			[Token(Token = "0x4000F24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Color32 <black>5__2;

			[Token(Token = "0x4000F25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <t>5__3;

			[Token(Token = "0x4000F26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <hardTimeLimit>5__4;

			[Token(Token = "0x17000135")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D8F")]
				[Address(RVA = "0xA67344", Offset = "0xA67344", VA = "0xA67344", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000136")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D91")]
				[Address(RVA = "0xA673B4", Offset = "0xA673B4", VA = "0xA673B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D8C")]
			[Address(RVA = "0xA66FC8", Offset = "0xA66FC8", VA = "0xA66FC8")]
			[DebuggerHidden]
			public <Fade>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000D8D")]
			[Address(RVA = "0xA670A4", Offset = "0xA670A4", VA = "0xA670A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D8E")]
			[Address(RVA = "0xA670A8", Offset = "0xA670A8", VA = "0xA670A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D90")]
			[Address(RVA = "0xA6734C", Offset = "0xA6734C", VA = "0xA6734C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B7D4", Offset = "0x87B7D4")]
		private sealed class <FadeAdditive>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SkeletonGhostRenderer <>4__this;

			[Token(Token = "0x4000F2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Color32 <black>5__2;

			[Token(Token = "0x4000F2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <t>5__3;

			[Token(Token = "0x4000F2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <hardTimeLimit>5__4;

			[Token(Token = "0x17000137")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D95")]
				[Address(RVA = "0xA6765C", Offset = "0xA6765C", VA = "0xA6765C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000138")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D97")]
				[Address(RVA = "0xA676CC", Offset = "0xA676CC", VA = "0xA676CC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D92")]
			[Address(RVA = "0xA66FF4", Offset = "0xA66FF4", VA = "0xA66FF4")]
			[DebuggerHidden]
			public <FadeAdditive>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6000D93")]
			[Address(RVA = "0xA673BC", Offset = "0xA673BC", VA = "0xA673BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D94")]
			[Address(RVA = "0xA673C0", Offset = "0xA673C0", VA = "0xA673C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D96")]
			[Address(RVA = "0xA67664", Offset = "0xA67664", VA = "0xA67664", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Color32 TransparentBlack;

		[Token(Token = "0x400093D")]
		private const string colorPropertyName = "_Color";

		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float fadeSpeed;

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Color32 startColor;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MeshFilter meshFilter;

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MeshRenderer meshRenderer;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MaterialPropertyBlock mpb;

		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int colorId;

		[Token(Token = "0x60007DB")]
		[Address(RVA = "0xA66E08", Offset = "0xA66E08", VA = "0xA66E08")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0xA66798", Offset = "0xA66798", VA = "0xA66798")]
		public void Initialize(Mesh mesh, Material[] materials, Color32 color, bool additive, float speed, int sortingLayerID, int sortingOrder)
		{
		}

		[Token(Token = "0x60007DD")]
		[Address(RVA = "0xA66F54", Offset = "0xA66F54", VA = "0xA66F54")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x883B44", Offset = "0x883B44")]
		private IEnumerator Fade()
		{
			return null;
		}

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0xA66EE0", Offset = "0xA66EE0", VA = "0xA66EE0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x883BA8", Offset = "0x883BA8")]
		private IEnumerator FadeAdditive()
		{
			return null;
		}

		[Token(Token = "0x60007DF")]
		[Address(RVA = "0xA66BEC", Offset = "0xA66BEC", VA = "0xA66BEC")]
		public void Cleanup()
		{
		}

		[Token(Token = "0x60007E0")]
		[Address(RVA = "0xA67020", Offset = "0xA67020", VA = "0xA67020")]
		public SkeletonGhostRenderer()
		{
		}
	}
	[Token(Token = "0x20001A7")]
	public class AtlasRegionAttacher : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002C9")]
		public class SlotRegionPair
		{
			[Token(Token = "0x4000F2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "SpineSlot", RVA = "0x881F84", Offset = "0x881F84")]
			public string slot;

			[Token(Token = "0x4000F2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "SpineAtlasRegion", RVA = "0x881FE4", Offset = "0x881FE4")]
			public string region;

			[Token(Token = "0x6000D98")]
			[Address(RVA = "0xA1F220", Offset = "0xA1F220", VA = "0xA1F220")]
			public SlotRegionPair()
			{
			}
		}

		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected SpineAtlasAsset atlasAsset;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected bool inheritProperties;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected List<SlotRegionPair> attachments;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Atlas atlas;

		[Token(Token = "0x60007E2")]
		[Address(RVA = "0xA1EDD0", Offset = "0xA1EDD0", VA = "0xA1EDD0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0xA1EEB8", Offset = "0xA1EEB8", VA = "0xA1EEB8")]
		private void Apply(SkeletonRenderer skeletonRenderer)
		{
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0xA1F1A8", Offset = "0xA1F1A8", VA = "0xA1F1A8")]
		public AtlasRegionAttacher()
		{
		}
	}
	[Token(Token = "0x20001A8")]
	public class SpriteAttacher : MonoBehaviour
	{
		[Token(Token = "0x4000948")]
		public const string DefaultPMAShader = "Spine/Skeleton";

		[Token(Token = "0x4000949")]
		public const string DefaultStraightAlphaShader = "Sprites/Default";

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool attachOnStart;

		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool overrideAnimation;

		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Sprite sprite;

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpineSlot", RVA = "0x87F1C0", Offset = "0x87F1C0")]
		public string slot;

		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private RegionAttachment attachment;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Slot spineSlot;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool applyPMA;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Texture, AtlasPage> atlasPageCache;

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0xA759D0", Offset = "0xA759D0", VA = "0xA759D0")]
		private static AtlasPage GetPageFor(Texture texture, Shader shader)
		{
			return null;
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0xA75B34", Offset = "0xA75B34", VA = "0xA75B34")]
		private void Start()
		{
		}

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0xA75FB0", Offset = "0xA75FB0", VA = "0xA75FB0")]
		private void AnimationOverrideSpriteAttach(ISkeletonAnimation animated)
		{
		}

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0xA75B7C", Offset = "0xA75B7C", VA = "0xA75B7C")]
		public void Initialize(bool overwrite = true)
		{
		}

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0xA76000", Offset = "0xA76000", VA = "0xA76000")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0xA75F94", Offset = "0xA75F94", VA = "0xA75F94")]
		public void Attach()
		{
		}

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0xA7610C", Offset = "0xA7610C", VA = "0xA7610C")]
		public SpriteAttacher()
		{
		}
	}
	[Token(Token = "0x20001A9")]
	public static class SpriteAttachmentExtensions
	{
		[Token(Token = "0x60007EC")]
		[Address(RVA = "0xA7611C", Offset = "0xA7611C", VA = "0xA7611C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x883C0C", Offset = "0x883C0C")]
		public static RegionAttachment AttachUnitySprite(this Skeleton skeleton, string slotName, Sprite sprite, string shaderName = "Spine/Skeleton", bool applyPMA = true, float rotation = 0f)
		{
			return null;
		}

		[Token(Token = "0x60007ED")]
		[Address(RVA = "0xA76284", Offset = "0xA76284", VA = "0xA76284")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x883C44", Offset = "0x883C44")]
		public static RegionAttachment AddUnitySprite(this SkeletonData skeletonData, string slotName, Sprite sprite, string skinName = "", string shaderName = "Spine/Skeleton", bool applyPMA = true, float rotation = 0f)
		{
			return null;
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0xA7617C", Offset = "0xA7617C", VA = "0xA7617C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x883C7C", Offset = "0x883C7C")]
		public static RegionAttachment AttachUnitySprite(this Skeleton skeleton, string slotName, Sprite sprite, Shader shader, bool applyPMA, float rotation = 0f)
		{
			return null;
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0xA762F4", Offset = "0xA762F4", VA = "0xA762F4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x883CB4", Offset = "0x883CB4")]
		public static RegionAttachment AddUnitySprite(this SkeletonData skeletonData, string slotName, Sprite sprite, string skinName, Shader shader, bool applyPMA, float rotation = 0f)
		{
			return null;
		}
	}
	[Token(Token = "0x20001AA")]
	public class JitterEffectExample : MonoBehaviour
	{
		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x87F220", Offset = "0x87F220")]
		public float jitterMagnitude;

		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SkeletonRenderer skeletonRenderer;

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0xA23014", Offset = "0xA23014", VA = "0xA23014")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0xA23180", Offset = "0xA23180", VA = "0xA23180")]
		private void ProcessVertices(MeshGeneratorBuffers buffers)
		{
		}

		[Token(Token = "0x60007F2")]
		[Address(RVA = "0xA232FC", Offset = "0xA232FC", VA = "0xA232FC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0xA23408", Offset = "0xA23408", VA = "0xA23408")]
		public JitterEffectExample()
		{
		}
	}
	[Token(Token = "0x20001AB")]
	public class TwoByTwoTransformEffectExample : MonoBehaviour
	{
		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 xAxis;

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 yAxis;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SkeletonRenderer skeletonRenderer;

		[Token(Token = "0x60007F4")]
		[Address(RVA = "0xA767D8", Offset = "0xA767D8", VA = "0xA767D8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60007F5")]
		[Address(RVA = "0xA76944", Offset = "0xA76944", VA = "0xA76944")]
		private void ProcessVertices(MeshGeneratorBuffers buffers)
		{
		}

		[Token(Token = "0x60007F6")]
		[Address(RVA = "0xA76A20", Offset = "0xA76A20", VA = "0xA76A20")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60007F7")]
		[Address(RVA = "0xA76B2C", Offset = "0xA76B2C", VA = "0xA76B2C")]
		public TwoByTwoTransformEffectExample()
		{
		}
	}
	[Token(Token = "0x20001AC")]
	public class SkeletonGraphicMirror : MonoBehaviour
	{
		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SkeletonRenderer source;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool mirrorOnStart;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool restoreOnDisable;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SkeletonGraphic skeletonGraphic;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Skeleton originalSkeleton;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool originalFreeze;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Texture2D overrideTexture;

		[Token(Token = "0x60007F8")]
		[Address(RVA = "0xA676D4", Offset = "0xA676D4", VA = "0xA676D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007F9")]
		[Address(RVA = "0xA6772C", Offset = "0xA6772C", VA = "0xA6772C")]
		private void Start()
		{
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0xA67900", Offset = "0xA67900", VA = "0xA67900")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60007FB")]
		[Address(RVA = "0xA67930", Offset = "0xA67930", VA = "0xA67930")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60007FC")]
		[Address(RVA = "0xA6773C", Offset = "0xA6773C", VA = "0xA6773C")]
		public void StartMirroring()
		{
		}

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0xA679C8", Offset = "0xA679C8", VA = "0xA679C8")]
		public void UpdateTexture(Texture2D newOverrideTexture)
		{
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0xA67940", Offset = "0xA67940", VA = "0xA67940")]
		public void RestoreIndependentSkeleton()
		{
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0xA67A7C", Offset = "0xA67A7C", VA = "0xA67A7C")]
		public SkeletonGraphicMirror()
		{
		}
	}
	[Token(Token = "0x20001AD")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x879FC4", Offset = "0x879FC4")]
	public class SkeletonRagdoll : MonoBehaviour
	{
		[Token(Token = "0x20002CA")]
		public class LayerFieldAttribute : PropertyAttribute
		{
			[Token(Token = "0x6000D99")]
			[Address(RVA = "0xA6AFC4", Offset = "0xA6AFC4", VA = "0xA6AFC4")]
			public LayerFieldAttribute()
			{
			}
		}

		[Token(Token = "0x20002CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B7E4", Offset = "0x87B7E4")]
		private sealed class <Start>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SkeletonRagdoll <>4__this;

			[Token(Token = "0x17000139")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D9D")]
				[Address(RVA = "0xA6AF4C", Offset = "0xA6AF4C", VA = "0xA6AF4C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700013A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D9F")]
				[Address(RVA = "0xA6AFBC", Offset = "0xA6AFBC", VA = "0xA6AFBC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D9A")]
			[Address(RVA = "0xA67B34", Offset = "0xA67B34", VA = "0xA67B34")]
			[DebuggerHidden]
			public <Start>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x6000D9B")]
			[Address(RVA = "0xA6AC90", Offset = "0xA6AC90", VA = "0xA6AC90", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D9C")]
			[Address(RVA = "0xA6AC94", Offset = "0xA6AC94", VA = "0xA6AC94", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D9E")]
			[Address(RVA = "0xA6AF54", Offset = "0xA6AF54", VA = "0xA6AF54", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B7F4", Offset = "0x87B7F4")]
		private sealed class <SmoothMixCoroutine>d__40 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SkeletonRagdoll <>4__this;

			[Token(Token = "0x4000F35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float target;

			[Token(Token = "0x4000F36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float duration;

			[Token(Token = "0x4000F37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startTime>5__2;

			[Token(Token = "0x4000F38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startMix>5__3;

			[Token(Token = "0x1700013B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DA3")]
				[Address(RVA = "0xA6AC18", Offset = "0xA6AC18", VA = "0xA6AC18", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700013C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DA5")]
				[Address(RVA = "0xA6AC88", Offset = "0xA6AC88", VA = "0xA6AC88", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DA0")]
			[Address(RVA = "0xA69650", Offset = "0xA69650", VA = "0xA69650")]
			[DebuggerHidden]
			public <SmoothMixCoroutine>d__40(int <>1__state)
			{
			}

			[Token(Token = "0x6000DA1")]
			[Address(RVA = "0xA6AAD0", Offset = "0xA6AAD0", VA = "0xA6AAD0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DA2")]
			[Address(RVA = "0xA6AAD4", Offset = "0xA6AAD4", VA = "0xA6AAD4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DA4")]
			[Address(RVA = "0xA6AC20", Offset = "0xA6AC20", VA = "0xA6AC20", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Transform parentSpaceHelper;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87F23C", Offset = "0x87F23C")]
		[AttributeAttribute(Name = "SpineBone", RVA = "0x87F23C", Offset = "0x87F23C")]
		public string startingBoneName;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpineBone", RVA = "0x87F2C0", Offset = "0x87F2C0")]
		public List<string> stopBoneNames;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87F31C", Offset = "0x87F31C")]
		public bool applyOnStart;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87F354", Offset = "0x87F354")]
		public bool disableIK;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool disableOtherConstraints;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x87F38C", Offset = "0x87F38C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87F38C", Offset = "0x87F38C")]
		public bool pinStartBone;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87F3DC", Offset = "0x87F3DC")]
		public bool enableJointCollision;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool useGravity;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87F414", Offset = "0x87F414")]
		public float thickness;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87F44C", Offset = "0x87F44C")]
		public float rotationLimit;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float rootMass;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87F484", Offset = "0x87F484")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x87F484", Offset = "0x87F484")]
		public float massFalloffFactor;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87F4DC", Offset = "0x87F4DC")]
		public int colliderLayer;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x87F514", Offset = "0x87F514")]
		public float mix;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ISkeletonAnimation targetSkeletonComponent;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Skeleton skeleton;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Bone, Transform> boneTable;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform ragdollRoot;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F52C", Offset = "0x87F52C")]
		private Rigidbody <RootRigidbody>k__BackingField;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F53C", Offset = "0x87F53C")]
		private Bone <StartingBone>k__BackingField;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 rootOffset;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool isActive;

		[Token(Token = "0x17000058")]
		public Rigidbody RootRigidbody
		{
			[Token(Token = "0x6000800")]
			[Address(RVA = "0xA67A8C", Offset = "0xA67A8C", VA = "0xA67A8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x883CEC", Offset = "0x883CEC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000801")]
			[Address(RVA = "0xA67A94", Offset = "0xA67A94", VA = "0xA67A94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x883CFC", Offset = "0x883CFC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000059")]
		public Bone StartingBone
		{
			[Token(Token = "0x6000802")]
			[Address(RVA = "0xA67A9C", Offset = "0xA67A9C", VA = "0xA67A9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x883D0C", Offset = "0x883D0C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000803")]
			[Address(RVA = "0xA67AA4", Offset = "0xA67AA4", VA = "0xA67AA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x883D1C", Offset = "0x883D1C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700005A")]
		public Vector3 RootOffset
		{
			[Token(Token = "0x6000804")]
			[Address(RVA = "0xA67AAC", Offset = "0xA67AAC", VA = "0xA67AAC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700005B")]
		public bool IsActive
		{
			[Token(Token = "0x6000805")]
			[Address(RVA = "0xA67AB8", Offset = "0xA67AB8", VA = "0xA67AB8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700005C")]
		public Rigidbody[] RigidbodyArray
		{
			[Token(Token = "0x6000807")]
			[Address(RVA = "0xA67B60", Offset = "0xA67B60", VA = "0xA67B60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005D")]
		public Vector3 EstimatedSkeletonPosition
		{
			[Token(Token = "0x6000808")]
			[Address(RVA = "0xA67D8C", Offset = "0xA67D8C", VA = "0xA67D8C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0xA67AC0", Offset = "0xA67AC0", VA = "0xA67AC0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x883D2C", Offset = "0x883D2C")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000809")]
		[Address(RVA = "0xA67E50", Offset = "0xA67E50", VA = "0xA67E50")]
		public void Apply()
		{
		}

		[Token(Token = "0x600080A")]
		[Address(RVA = "0xA69574", Offset = "0xA69574", VA = "0xA69574")]
		public Coroutine SmoothMix(float target, float duration)
		{
			return null;
		}

		[Token(Token = "0x600080B")]
		[Address(RVA = "0xA695A0", Offset = "0xA695A0", VA = "0xA695A0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x883D90", Offset = "0x883D90")]
		private IEnumerator SmoothMixCoroutine(float target, float duration)
		{
			return null;
		}

		[Token(Token = "0x600080C")]
		[Address(RVA = "0xA6967C", Offset = "0xA6967C", VA = "0xA6967C")]
		public void SetSkeletonPosition(Vector3 worldPosition)
		{
		}

		[Token(Token = "0x600080D")]
		[Address(RVA = "0xA69FCC", Offset = "0xA69FCC", VA = "0xA69FCC")]
		public void Remove()
		{
		}

		[Token(Token = "0x600080E")]
		[Address(RVA = "0xA6A27C", Offset = "0xA6A27C", VA = "0xA6A27C")]
		public Rigidbody GetRigidbody(string boneName)
		{
			return null;
		}

		[Token(Token = "0x600080F")]
		[Address(RVA = "0xA68F24", Offset = "0xA68F24", VA = "0xA68F24")]
		private void RecursivelyCreateBoneProxies(Bone b)
		{
		}

		[Token(Token = "0x6000810")]
		[Address(RVA = "0xA6997C", Offset = "0xA6997C", VA = "0xA6997C")]
		private void UpdateSpineSkeleton(ISkeletonAnimation skeletonRenderer)
		{
		}

		[Token(Token = "0x6000811")]
		[Address(RVA = "0xA6A36C", Offset = "0xA6A36C", VA = "0xA6A36C")]
		private List<Collider> AttachBoundingBoxRagdollColliders(Bone b)
		{
			return null;
		}

		[Token(Token = "0x6000812")]
		[Address(RVA = "0xA694E0", Offset = "0xA694E0", VA = "0xA694E0")]
		private static float GetPropagatedRotation(Bone b)
		{
			return default(float);
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0xA6AA08", Offset = "0xA6AA08", VA = "0xA6AA08")]
		public SkeletonRagdoll()
		{
		}
	}
	[Token(Token = "0x20001AE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x87B028", Offset = "0x87B028")]
	public class SkeletonRagdoll2D : MonoBehaviour
	{
		[Token(Token = "0x20002CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B804", Offset = "0x87B804")]
		private sealed class <Start>d__32 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SkeletonRagdoll2D <>4__this;

			[Token(Token = "0x1700013D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DA9")]
				[Address(RVA = "0xA6E460", Offset = "0xA6E460", VA = "0xA6E460", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700013E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DAB")]
				[Address(RVA = "0xA6E4D0", Offset = "0xA6E4D0", VA = "0xA6E4D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DA6")]
			[Address(RVA = "0xA6B0E0", Offset = "0xA6B0E0", VA = "0xA6B0E0")]
			[DebuggerHidden]
			public <Start>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x6000DA7")]
			[Address(RVA = "0xA6E1CC", Offset = "0xA6E1CC", VA = "0xA6E1CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DA8")]
			[Address(RVA = "0xA6E1D0", Offset = "0xA6E1D0", VA = "0xA6E1D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DAA")]
			[Address(RVA = "0xA6E468", Offset = "0xA6E468", VA = "0xA6E468", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B814", Offset = "0x87B814")]
		private sealed class <SmoothMixCoroutine>d__39 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SkeletonRagdoll2D <>4__this;

			[Token(Token = "0x4000F3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float target;

			[Token(Token = "0x4000F40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float duration;

			[Token(Token = "0x4000F41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startTime>5__2;

			[Token(Token = "0x4000F42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startMix>5__3;

			[Token(Token = "0x1700013F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DAF")]
				[Address(RVA = "0xA6E154", Offset = "0xA6E154", VA = "0xA6E154", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000140")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DB1")]
				[Address(RVA = "0xA6E1C4", Offset = "0xA6E1C4", VA = "0xA6E1C4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DAC")]
			[Address(RVA = "0xA6CC30", Offset = "0xA6CC30", VA = "0xA6CC30")]
			[DebuggerHidden]
			public <SmoothMixCoroutine>d__39(int <>1__state)
			{
			}

			[Token(Token = "0x6000DAD")]
			[Address(RVA = "0xA6E00C", Offset = "0xA6E00C", VA = "0xA6E00C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DAE")]
			[Address(RVA = "0xA6E010", Offset = "0xA6E010", VA = "0xA6E010", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DB0")]
			[Address(RVA = "0xA6E15C", Offset = "0xA6E15C", VA = "0xA6E15C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Transform parentSpaceHelper;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87F54C", Offset = "0x87F54C")]
		[AttributeAttribute(Name = "SpineBone", RVA = "0x87F54C", Offset = "0x87F54C")]
		public string startingBoneName;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpineBone", RVA = "0x87F5D0", Offset = "0x87F5D0")]
		public List<string> stopBoneNames;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87F62C", Offset = "0x87F62C")]
		public bool applyOnStart;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87F664", Offset = "0x87F664")]
		public bool disableIK;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool disableOtherConstraints;

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x87F69C", Offset = "0x87F69C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87F69C", Offset = "0x87F69C")]
		public bool pinStartBone;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float gravityScale;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87F6E8", Offset = "0x87F6E8")]
		public float thickness;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87F720", Offset = "0x87F720")]
		public float rotationLimit;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float rootMass;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87F758", Offset = "0x87F758")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x87F758", Offset = "0x87F758")]
		public float massFalloffFactor;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87F7B0", Offset = "0x87F7B0")]
		[SkeletonRagdoll.LayerField]
		public int colliderLayer;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x87F7FC", Offset = "0x87F7FC")]
		public float mix;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ISkeletonAnimation targetSkeletonComponent;

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Skeleton skeleton;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Bone, Transform> boneTable;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Transform ragdollRoot;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F814", Offset = "0x87F814")]
		private Rigidbody2D <RootRigidbody>k__BackingField;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87F824", Offset = "0x87F824")]
		private Bone <StartingBone>k__BackingField;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector2 rootOffset;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool isActive;

		[Token(Token = "0x1700005E")]
		public Rigidbody2D RootRigidbody
		{
			[Token(Token = "0x6000814")]
			[Address(RVA = "0xA6AFCC", Offset = "0xA6AFCC", VA = "0xA6AFCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x883DF4", Offset = "0x883DF4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000815")]
			[Address(RVA = "0xA6AFD4", Offset = "0xA6AFD4", VA = "0xA6AFD4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x883E04", Offset = "0x883E04")]
			private set
			{
			}
		}

		[Token(Token = "0x1700005F")]
		public Bone StartingBone
		{
			[Token(Token = "0x6000816")]
			[Address(RVA = "0xA6AFDC", Offset = "0xA6AFDC", VA = "0xA6AFDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x883E14", Offset = "0x883E14")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000817")]
			[Address(RVA = "0xA6AFE4", Offset = "0xA6AFE4", VA = "0xA6AFE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x883E24", Offset = "0x883E24")]
			private set
			{
			}
		}

		[Token(Token = "0x17000060")]
		public Vector3 RootOffset
		{
			[Token(Token = "0x6000818")]
			[Address(RVA = "0xA6AFEC", Offset = "0xA6AFEC", VA = "0xA6AFEC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000061")]
		public bool IsActive
		{
			[Token(Token = "0x6000819")]
			[Address(RVA = "0xA6B064", Offset = "0xA6B064", VA = "0xA6B064")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000062")]
		public Rigidbody2D[] RigidbodyArray
		{
			[Token(Token = "0x600081B")]
			[Address(RVA = "0xA6B10C", Offset = "0xA6B10C", VA = "0xA6B10C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000063")]
		public Vector3 EstimatedSkeletonPosition
		{
			[Token(Token = "0x600081C")]
			[Address(RVA = "0xA6B338", Offset = "0xA6B338", VA = "0xA6B338")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600081A")]
		[Address(RVA = "0xA6B06C", Offset = "0xA6B06C", VA = "0xA6B06C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x883E34", Offset = "0x883E34")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x600081D")]
		[Address(RVA = "0xA6B3EC", Offset = "0xA6B3EC", VA = "0xA6B3EC")]
		public void Apply()
		{
		}

		[Token(Token = "0x600081E")]
		[Address(RVA = "0xA6CB54", Offset = "0xA6CB54", VA = "0xA6CB54")]
		public Coroutine SmoothMix(float target, float duration)
		{
			return null;
		}

		[Token(Token = "0x600081F")]
		[Address(RVA = "0xA6CB80", Offset = "0xA6CB80", VA = "0xA6CB80")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x883E98", Offset = "0x883E98")]
		private IEnumerator SmoothMixCoroutine(float target, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000820")]
		[Address(RVA = "0xA6CC5C", Offset = "0xA6CC5C", VA = "0xA6CC5C")]
		public void SetSkeletonPosition(Vector3 worldPosition)
		{
		}

		[Token(Token = "0x6000821")]
		[Address(RVA = "0xA6D5B8", Offset = "0xA6D5B8", VA = "0xA6D5B8")]
		public void Remove()
		{
		}

		[Token(Token = "0x6000822")]
		[Address(RVA = "0xA6D868", Offset = "0xA6D868", VA = "0xA6D868")]
		public Rigidbody2D GetRigidbody(string boneName)
		{
			return null;
		}

		[Token(Token = "0x6000823")]
		[Address(RVA = "0xA6C4AC", Offset = "0xA6C4AC", VA = "0xA6C4AC")]
		private void RecursivelyCreateBoneProxies(Bone b)
		{
		}

		[Token(Token = "0x6000824")]
		[Address(RVA = "0xA6CF5C", Offset = "0xA6CF5C", VA = "0xA6CF5C")]
		private void UpdateSpineSkeleton(ISkeletonAnimation animatedSkeleton)
		{
		}

		[Token(Token = "0x6000825")]
		[Address(RVA = "0xA6D958", Offset = "0xA6D958", VA = "0xA6D958")]
		private static List<Collider2D> AttachBoundingBoxRagdollColliders(Bone b, GameObject go, Skeleton skeleton, float gravityScale)
		{
			return null;
		}

		[Token(Token = "0x6000826")]
		[Address(RVA = "0xA6CAC0", Offset = "0xA6CAC0", VA = "0xA6CAC0")]
		private static float GetPropagatedRotation(Bone b)
		{
			return default(float);
		}

		[Token(Token = "0x6000827")]
		[Address(RVA = "0xA6DEF0", Offset = "0xA6DEF0", VA = "0xA6DEF0")]
		private static Vector3 FlipScale(bool flipX, bool flipY)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000828")]
		[Address(RVA = "0xA6DF3C", Offset = "0xA6DF3C", VA = "0xA6DF3C")]
		public SkeletonRagdoll2D()
		{
		}
	}
	[Token(Token = "0x20001AF")]
	public class SkeletonUtilityEyeConstraint : SkeletonUtilityConstraint
	{
		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform[] eyes;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float radius;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform target;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 targetPosition;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float speed;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3[] origins;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 centerPoint;

		[Token(Token = "0x6000829")]
		[Address(RVA = "0xA6E4D8", Offset = "0xA6E4D8", VA = "0xA6E4D8", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600082A")]
		[Address(RVA = "0xA6E73C", Offset = "0xA6E73C", VA = "0xA6E73C", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600082B")]
		[Address(RVA = "0xA6E778", Offset = "0xA6E778", VA = "0xA6E778", Slot = "6")]
		public override void DoUpdate()
		{
		}

		[Token(Token = "0x600082C")]
		[Address(RVA = "0xA6EB18", Offset = "0xA6EB18", VA = "0xA6EB18")]
		public SkeletonUtilityEyeConstraint()
		{
		}
	}
	[Token(Token = "0x20001B0")]
	[ExecuteAlways]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x87B08C", Offset = "0x87B08C")]
	public class SkeletonUtilityGroundConstraint : SkeletonUtilityConstraint
	{
		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87F834", Offset = "0x87F834")]
		public LayerMask groundMask;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87F86C", Offset = "0x87F86C")]
		public bool use2D;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87F8A4", Offset = "0x87F8A4")]
		public bool useRadius;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87F8DC", Offset = "0x87F8DC")]
		public float castRadius;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87F914", Offset = "0x87F914")]
		public float castDistance;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87F94C", Offset = "0x87F94C")]
		public float castOffset;

		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87F984", Offset = "0x87F984")]
		public float groundOffset;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87F9BC", Offset = "0x87F9BC")]
		public float adjustSpeed;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 rayOrigin;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 rayDir;

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float hitY;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float lastHitY;

		[Token(Token = "0x600082D")]
		[Address(RVA = "0xA6EB30", Offset = "0xA6EB30", VA = "0xA6EB30", Slot = "4")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x600082E")]
		[Address(RVA = "0xA6EB7C", Offset = "0xA6EB7C", VA = "0xA6EB7C", Slot = "6")]
		public override void DoUpdate()
		{
		}

		[Token(Token = "0x600082F")]
		[Address(RVA = "0xA6F188", Offset = "0xA6F188", VA = "0xA6F188")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000830")]
		[Address(RVA = "0xA6F404", Offset = "0xA6F404", VA = "0xA6F404")]
		public SkeletonUtilityGroundConstraint()
		{
		}
	}
	[Token(Token = "0x20001B1")]
	public class SkeletonUtilityKinematicShadow : MonoBehaviour
	{
		[Token(Token = "0x20002CF")]
		private struct TransformPair
		{
			[Token(Token = "0x4000F43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Transform dest;

			[Token(Token = "0x4000F44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Transform src;
		}

		[Token(Token = "0x20002D0")]
		public enum PhysicsSystem
		{
			[Token(Token = "0x4000F46")]
			Physics2D,
			[Token(Token = "0x4000F47")]
			Physics3D
		}

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x87F9F4", Offset = "0x87F9F4")]
		public bool detachedShadow;

		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform parent;

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool hideShadow;

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PhysicsSystem physicsSystem;

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private GameObject shadowRoot;

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly List<TransformPair> shadowTable;

		[Token(Token = "0x6000831")]
		[Address(RVA = "0xA6F47C", Offset = "0xA6F47C", VA = "0xA6F47C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000832")]
		[Address(RVA = "0xA6FB64", Offset = "0xA6FB64", VA = "0xA6FB64")]
		private static void DestroyComponents(Component[] components)
		{
		}

		[Token(Token = "0x6000833")]
		[Address(RVA = "0xA6FC38", Offset = "0xA6FC38", VA = "0xA6FC38")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000834")]
		[Address(RVA = "0xA6FF90", Offset = "0xA6FF90", VA = "0xA6FF90")]
		public SkeletonUtilityKinematicShadow()
		{
		}
	}
	[Token(Token = "0x20001B2")]
	public class SlotTintBlackFollower : MonoBehaviour
	{
		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "SpineSlot", RVA = "0x87FA2C", Offset = "0x87FA2C")]
		[SerializeField]
		protected string slotName;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected string colorPropertyName;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected string blackPropertyName;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Slot slot;

		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private MeshRenderer mr;

		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private MaterialPropertyBlock mb;

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int colorPropertyId;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int blackPropertyId;

		[Token(Token = "0x6000835")]
		[Address(RVA = "0xA7000C", Offset = "0xA7000C", VA = "0xA7000C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000836")]
		[Address(RVA = "0xA70014", Offset = "0xA70014", VA = "0xA70014")]
		public void Initialize(bool overwrite)
		{
		}

		[Token(Token = "0x6000837")]
		[Address(RVA = "0xA7017C", Offset = "0xA7017C", VA = "0xA7017C")]
		public void Update()
		{
		}

		[Token(Token = "0x6000838")]
		[Address(RVA = "0xA70290", Offset = "0xA70290", VA = "0xA70290")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000839")]
		[Address(RVA = "0xA702E8", Offset = "0xA702E8", VA = "0xA702E8")]
		public SlotTintBlackFollower()
		{
		}
	}
	[Token(Token = "0x20001B3")]
	public class SpawnFromSkeletonDataExample : MonoBehaviour
	{
		[Token(Token = "0x20002D1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B824", Offset = "0x87B824")]
		private sealed class <Start>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpawnFromSkeletonDataExample <>4__this;

			[Token(Token = "0x4000F4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Animation <spineAnimation>5__2;

			[Token(Token = "0x4000F4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__3;

			[Token(Token = "0x17000141")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DB5")]
				[Address(RVA = "0xA707EC", Offset = "0xA707EC", VA = "0xA707EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000142")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DB7")]
				[Address(RVA = "0xA7085C", Offset = "0xA7085C", VA = "0xA7085C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DB2")]
			[Address(RVA = "0xA703C4", Offset = "0xA703C4", VA = "0xA703C4")]
			[DebuggerHidden]
			public <Start>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6000DB3")]
			[Address(RVA = "0xA705B0", Offset = "0xA705B0", VA = "0xA705B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DB4")]
			[Address(RVA = "0xA705B4", Offset = "0xA705B4", VA = "0xA705B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DB6")]
			[Address(RVA = "0xA707F4", Offset = "0xA707F4", VA = "0xA707F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SkeletonDataAsset skeletonDataAsset;

		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x87FAC0", Offset = "0x87FAC0")]
		public int count;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpineAnimation", RVA = "0x87FADC", Offset = "0x87FADC")]
		public string startingAnimation;

		[Token(Token = "0x600083A")]
		[Address(RVA = "0xA70350", Offset = "0xA70350", VA = "0xA70350")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x883EFC", Offset = "0x883EFC")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x600083B")]
		[Address(RVA = "0xA703F0", Offset = "0xA703F0", VA = "0xA703F0")]
		private void DoExtraStuff(SkeletonAnimation sa, Animation spineAnimation)
		{
		}

		[Token(Token = "0x600083C")]
		[Address(RVA = "0xA705A0", Offset = "0xA705A0", VA = "0xA705A0")]
		public SpawnFromSkeletonDataExample()
		{
		}
	}
	[Token(Token = "0x20001B4")]
	public class SpawnSkeletonGraphicExample : MonoBehaviour
	{
		[Token(Token = "0x20002D2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B834", Offset = "0x87B834")]
		private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpawnSkeletonGraphicExample <>4__this;

			[Token(Token = "0x17000143")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DBB")]
				[Address(RVA = "0xA70BD4", Offset = "0xA70BD4", VA = "0xA70BD4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000144")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DBD")]
				[Address(RVA = "0xA70C44", Offset = "0xA70C44", VA = "0xA70C44", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DB8")]
			[Address(RVA = "0xA708D8", Offset = "0xA708D8", VA = "0xA708D8")]
			[DebuggerHidden]
			public <Start>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6000DB9")]
			[Address(RVA = "0xA7095C", Offset = "0xA7095C", VA = "0xA7095C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DBA")]
			[Address(RVA = "0xA70960", Offset = "0xA70960", VA = "0xA70960", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DBC")]
			[Address(RVA = "0xA70BDC", Offset = "0xA70BDC", VA = "0xA70BDC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SkeletonDataAsset skeletonDataAsset;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpineAnimation", RVA = "0x87FB30", Offset = "0x87FB30")]
		public string startingAnimation;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpineSkin", RVA = "0x87FB84", Offset = "0x87FB84")]
		public string startingSkin;

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material skeletonGraphicMaterial;

		[Token(Token = "0x600083D")]
		[Address(RVA = "0xA70864", Offset = "0xA70864", VA = "0xA70864")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x883F60", Offset = "0x883F60")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x600083E")]
		[Address(RVA = "0xA70904", Offset = "0xA70904", VA = "0xA70904")]
		public SpawnSkeletonGraphicExample()
		{
		}
	}
	[Token(Token = "0x20001B5")]
	public class Spineboy : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002D3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B844", Offset = "0x87B844")]
		private sealed class <>c
		{
			[Token(Token = "0x4000F50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000F51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static AnimationState.TrackEntryDelegate <>9__1_0;

			[Token(Token = "0x6000DBF")]
			[Address(RVA = "0xA7269C", Offset = "0xA7269C", VA = "0xA7269C")]
			public <>c()
			{
			}

			[Token(Token = "0x6000DC0")]
			[Address(RVA = "0xA726A4", Offset = "0xA726A4", VA = "0xA726A4")]
			internal void <Start>b__1_0(TrackEntry entry)
			{
			}
		}

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SkeletonAnimation skeletonAnimation;

		[Token(Token = "0x600083F")]
		[Address(RVA = "0xA71FF0", Offset = "0xA71FF0", VA = "0xA71FF0")]
		public void Start()
		{
		}

		[Token(Token = "0x6000840")]
		[Address(RVA = "0xA721EC", Offset = "0xA721EC", VA = "0xA721EC")]
		private void HandleEvent(TrackEntry trackEntry, Event e)
		{
		}

		[Token(Token = "0x6000841")]
		[Address(RVA = "0xA72560", Offset = "0xA72560", VA = "0xA72560")]
		public void OnMouseDown()
		{
		}

		[Token(Token = "0x6000842")]
		[Address(RVA = "0xA72630", Offset = "0xA72630", VA = "0xA72630")]
		public Spineboy()
		{
		}
	}
	[Token(Token = "0x20001B6")]
	public class SpineboyBodyTilt : MonoBehaviour
	{
		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87FBDC", Offset = "0x87FBDC")]
		public SpineboyFootplanter planter;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpineBone", RVA = "0x87FC14", Offset = "0x87FC14")]
		public string hip;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpineBone", RVA = "0x87FC70", Offset = "0x87FC70")]
		public string head;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float hipTiltScale;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float headTiltScale;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float hipRotationMoveScale;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87FCCC", Offset = "0x87FCCC")]
		public float hipRotationTarget;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float hipRotationSmoothed;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float baseHeadRotation;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Bone hipBone;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Bone headBone;

		[Token(Token = "0x6000843")]
		[Address(RVA = "0xA737EC", Offset = "0xA737EC", VA = "0xA737EC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000844")]
		[Address(RVA = "0xA73908", Offset = "0xA73908", VA = "0xA73908")]
		private void UpdateLocal(ISkeletonAnimation animated)
		{
		}

		[Token(Token = "0x6000845")]
		[Address(RVA = "0xA73A5C", Offset = "0xA73A5C", VA = "0xA73A5C")]
		public SpineboyBodyTilt()
		{
		}
	}
	[Token(Token = "0x20001B7")]
	public class SpineboyFacialExpression : MonoBehaviour
	{
		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SpineboyFootplanter footPlanter;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpineSlot", RVA = "0x87FD04", Offset = "0x87FD04")]
		public string eyeSlotName;

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpineSlot", RVA = "0x87FD64", Offset = "0x87FD64")]
		public string mouthSlotName;

		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpineAttachment", RVA = "0x87FDC4", Offset = "0x87FDC4")]
		public string shockEyeName;

		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "SpineAttachment", RVA = "0x87FE4C", Offset = "0x87FE4C")]
		public string normalEyeName;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "SpineAttachment", RVA = "0x87FED4", Offset = "0x87FED4")]
		public string shockMouthName;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "SpineAttachment", RVA = "0x87FF5C", Offset = "0x87FF5C")]
		public string normalMouthName;

		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Slot eyeSlot;

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Slot mouthSlot;

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Attachment shockEye;

		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Attachment normalEye;

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Attachment shockMouth;

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Attachment normalMouth;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float balanceThreshold;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float shockDuration;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x87FFE4", Offset = "0x87FFE4")]
		public float shockTimer;

		[Token(Token = "0x6000846")]
		[Address(RVA = "0xA73AD8", Offset = "0xA73AD8", VA = "0xA73AD8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000847")]
		[Address(RVA = "0xA73CAC", Offset = "0xA73CAC", VA = "0xA73CAC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000848")]
		[Address(RVA = "0xA73DF0", Offset = "0xA73DF0", VA = "0xA73DF0")]
		public SpineboyFacialExpression()
		{
		}
	}
	[Token(Token = "0x20001B8")]
	public class SpineboyFootplanter : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002D4")]
		public class FootMovement
		{
			[Token(Token = "0x4000F52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public AnimationCurve xMoveCurve;

			[Token(Token = "0x4000F53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public AnimationCurve raiseCurve;

			[Token(Token = "0x4000F54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float maxRaise;

			[Token(Token = "0x4000F55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float minDistanceCompensate;

			[Token(Token = "0x4000F56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float maxDistanceCompensate;

			[Token(Token = "0x6000DC1")]
			[Address(RVA = "0xA74C70", Offset = "0xA74C70", VA = "0xA74C70")]
			public FootMovement()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20002D5")]
		public class Foot
		{
			[Token(Token = "0x4000F57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector2 worldPos;

			[Token(Token = "0x4000F58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float displacementFromCenter;

			[Token(Token = "0x4000F59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float distanceFromCenter;

			[Token(Token = "0x4000F5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x88201C", Offset = "0x88201C")]
			public float lerp;

			[Token(Token = "0x4000F5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector2 worldPosPrev;

			[Token(Token = "0x4000F5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector2 worldPosNext;

			[Token(Token = "0x17000145")]
			public bool IsStepInProgress
			{
				[Token(Token = "0x6000DC2")]
				[Address(RVA = "0xA7455C", Offset = "0xA7455C", VA = "0xA7455C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000146")]
			public bool IsPrettyMuchDoneStepping
			{
				[Token(Token = "0x6000DC3")]
				[Address(RVA = "0xA74570", Offset = "0xA74570", VA = "0xA74570")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6000DC4")]
			[Address(RVA = "0xA744DC", Offset = "0xA744DC", VA = "0xA744DC")]
			public void UpdateDistance(float centerOfGravityX)
			{
			}

			[Token(Token = "0x6000DC5")]
			[Address(RVA = "0xA746E4", Offset = "0xA746E4", VA = "0xA746E4")]
			public void StartNewStep(float newDistance, float centerOfGravityX, float tentativeY, float footRayRaise, RaycastHit2D[] hits, Vector2 footSize)
			{
			}

			[Token(Token = "0x6000DC6")]
			[Address(RVA = "0xA74888", Offset = "0xA74888", VA = "0xA74888")]
			public void UpdateStepProgress(float deltaTime, float stepSpeed, float shuffleDistance, FootMovement forwardMovement, FootMovement backwardMovement)
			{
			}

			[Token(Token = "0x6000DC7")]
			[Address(RVA = "0xA74588", Offset = "0xA74588", VA = "0xA74588")]
			public static float GetNewDisplacement(float otherLegDisplacementFromCenter, float comfyDistance, float minimumFootDistanceX, float maxNewStepDisplacement, FootMovement forwardMovement, FootMovement backwardMovement)
			{
				return default(float);
			}

			[Token(Token = "0x6000DC8")]
			[Address(RVA = "0xA74C68", Offset = "0xA74C68", VA = "0xA74C68")]
			public Foot()
			{
			}
		}

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timeScale;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpineBone", RVA = "0x88001C", Offset = "0x88001C")]
		public string nearBoneName;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpineBone", RVA = "0x880078", Offset = "0x880078")]
		public string farBoneName;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8800D4", Offset = "0x8800D4")]
		public Vector2 footSize;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float footRayRaise;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float comfyDistance;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float centerOfGravityXOffset;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float feetTooFarApartThreshold;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float offBalanceThreshold;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float minimumSpaceBetweenFeet;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float maxNewStepDisplacement;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float shuffleDistance;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float baseLerpSpeed;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public FootMovement forward;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FootMovement backward;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x88010C", Offset = "0x88010C")]
		[SerializeField]
		private float balance;

		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float distanceBetweenFeet;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		protected Foot nearFoot;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		protected Foot farFoot;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Skeleton skeleton;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Bone nearFootBone;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Bone farFootBone;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit2D[] hits;

		[Token(Token = "0x17000064")]
		public float Balance
		{
			[Token(Token = "0x6000849")]
			[Address(RVA = "0xA73A54", Offset = "0xA73A54", VA = "0xA73A54")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600084A")]
		[Address(RVA = "0xA73E04", Offset = "0xA73E04", VA = "0xA73E04")]
		private void Start()
		{
		}

		[Token(Token = "0x600084B")]
		[Address(RVA = "0xA740F4", Offset = "0xA740F4", VA = "0xA740F4")]
		private void UpdateLocal(ISkeletonAnimation animated)
		{
		}

		[Token(Token = "0x600084C")]
		[Address(RVA = "0xA74A90", Offset = "0xA74A90", VA = "0xA74A90")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0xA74BE0", Offset = "0xA74BE0", VA = "0xA74BE0")]
		public SpineboyFootplanter()
		{
		}
	}
	[Token(Token = "0x20001B9")]
	public class SpineboyFreeze : MonoBehaviour
	{
		[Token(Token = "0x20002D6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B854", Offset = "0x87B854")]
		private sealed class <Start>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpineboyFreeze <>4__this;

			[Token(Token = "0x4000F60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AnimationState <state>5__2;

			[Token(Token = "0x17000147")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DCC")]
				[Address(RVA = "0xA751E0", Offset = "0xA751E0", VA = "0xA751E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000148")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DCE")]
				[Address(RVA = "0xA75250", Offset = "0xA75250", VA = "0xA75250", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DC9")]
			[Address(RVA = "0xA74CEC", Offset = "0xA74CEC", VA = "0xA74CEC")]
			[DebuggerHidden]
			public <Start>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6000DCA")]
			[Address(RVA = "0xA74D88", Offset = "0xA74D88", VA = "0xA74D88", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DCB")]
			[Address(RVA = "0xA74D8C", Offset = "0xA74D8C", VA = "0xA74D8C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DCD")]
			[Address(RVA = "0xA751E8", Offset = "0xA751E8", VA = "0xA751E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SkeletonAnimation skeletonAnimation;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationReferenceAsset freeze;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationReferenceAsset idle;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color freezeColor;

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color freezeBlackColor;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ParticleSystem particles;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float freezePoint;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string colorProperty;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string blackTintProperty;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private MaterialPropertyBlock block;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private MeshRenderer meshRenderer;

		[Token(Token = "0x600084E")]
		[Address(RVA = "0xA74C78", Offset = "0xA74C78", VA = "0xA74C78")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x883FC4", Offset = "0x883FC4")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x600084F")]
		[Address(RVA = "0xA74D18", Offset = "0xA74D18", VA = "0xA74D18")]
		public SpineboyFreeze()
		{
		}
	}
	[Token(Token = "0x20001BA")]
	public class SpineboyPole : MonoBehaviour
	{
		[Token(Token = "0x20002D7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B864", Offset = "0x87B864")]
		private sealed class <Start>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SpineboyPole <>4__this;

			[Token(Token = "0x4000F64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private AnimationState <state>5__2;

			[Token(Token = "0x17000149")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DD2")]
				[Address(RVA = "0xA75718", Offset = "0xA75718", VA = "0xA75718", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700014A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DD4")]
				[Address(RVA = "0xA75788", Offset = "0xA75788", VA = "0xA75788", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DCF")]
			[Address(RVA = "0xA752CC", Offset = "0xA752CC", VA = "0xA752CC")]
			[DebuggerHidden]
			public <Start>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6000DD0")]
			[Address(RVA = "0xA75384", Offset = "0xA75384", VA = "0xA75384", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DD1")]
			[Address(RVA = "0xA75388", Offset = "0xA75388", VA = "0xA75388", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DD3")]
			[Address(RVA = "0xA75720", Offset = "0xA75720", VA = "0xA75720", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SkeletonAnimation skeletonAnimation;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SkeletonRenderSeparator separator;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x880188", Offset = "0x880188")]
		public AnimationReferenceAsset run;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationReferenceAsset pole;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float startX;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float endX;

		[Token(Token = "0x40009F7")]
		private const float Speed = 18f;

		[Token(Token = "0x40009F8")]
		private const float RunTimeScale = 1.5f;

		[Token(Token = "0x6000850")]
		[Address(RVA = "0xA75258", Offset = "0xA75258", VA = "0xA75258")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x885028", Offset = "0x885028")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000851")]
		[Address(RVA = "0xA752F8", Offset = "0xA752F8", VA = "0xA752F8")]
		private void SetXPosition(float x)
		{
		}

		[Token(Token = "0x6000852")]
		[Address(RVA = "0xA7537C", Offset = "0xA7537C", VA = "0xA7537C")]
		public SpineboyPole()
		{
		}
	}
	[Token(Token = "0x20001BB")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x87B100", Offset = "0x87B100")]
	public class SpineGauge : MonoBehaviour
	{
		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x88019C", Offset = "0x88019C")]
		public float fillPercent;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationReferenceAsset fillAnimation;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SkeletonRenderer skeletonRenderer;

		[Token(Token = "0x6000853")]
		[Address(RVA = "0xA71E6C", Offset = "0xA71E6C", VA = "0xA71E6C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000854")]
		[Address(RVA = "0xA71EC4", Offset = "0xA71EC4", VA = "0xA71EC4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000855")]
		[Address(RVA = "0xA71ECC", Offset = "0xA71ECC", VA = "0xA71ECC")]
		public void SetGaugePercent(float percent)
		{
		}

		[Token(Token = "0x6000856")]
		[Address(RVA = "0xA71FE8", Offset = "0xA71FE8", VA = "0xA71FE8")]
		public SpineGauge()
		{
		}
	}
}
namespace DigitalRuby.PyroParticles
{
	[Serializable]
	[Token(Token = "0x20001BC")]
	public struct RangeOfIntegers
	{
		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int Minimum;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int Maximum;
	}
	[Serializable]
	[Token(Token = "0x20001BD")]
	public struct RangeOfFloats
	{
		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float Minimum;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float Maximum;
	}
	[Token(Token = "0x20001BE")]
	public class FireBaseScript : MonoBehaviour
	{
		[Token(Token = "0x20002D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B874", Offset = "0x87B874")]
		private sealed class <CleanupEverythingCoRoutine>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FireBaseScript <>4__this;

			[Token(Token = "0x1700014B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DD8")]
				[Address(RVA = "0xA36450", Offset = "0xA36450", VA = "0xA36450", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700014C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DDA")]
				[Address(RVA = "0xA364C0", Offset = "0xA364C0", VA = "0xA364C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DD5")]
			[Address(RVA = "0xA35B90", Offset = "0xA35B90", VA = "0xA35B90")]
			[DebuggerHidden]
			public <CleanupEverythingCoRoutine>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6000DD6")]
			[Address(RVA = "0xA3634C", Offset = "0xA3634C", VA = "0xA3634C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DD7")]
			[Address(RVA = "0xA36350", Offset = "0xA36350", VA = "0xA36350", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DD9")]
			[Address(RVA = "0xA36458", Offset = "0xA36458", VA = "0xA36458", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8801B4", Offset = "0x8801B4")]
		public AudioSource AudioSource;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8801EC", Offset = "0x8801EC")]
		public float StartTime;

		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x880224", Offset = "0x880224")]
		public float StopTime;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88025C", Offset = "0x88025C")]
		public float Duration;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x880294", Offset = "0x880294")]
		public float ForceAmount;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8802CC", Offset = "0x8802CC")]
		public float ForceRadius;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x880304", Offset = "0x880304")]
		public bool IsProjectile;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88033C", Offset = "0x88033C")]
		public ParticleSystem[] ManualParticleSystems;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float startTimeMultiplier;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float startTimeIncrement;

		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float stopTimeMultiplier;

		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float stopTimeIncrement;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880374", Offset = "0x880374")]
		private bool <Starting>k__BackingField;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880384", Offset = "0x880384")]
		private float <StartPercent>k__BackingField;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880394", Offset = "0x880394")]
		private bool <Stopping>k__BackingField;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8803A4", Offset = "0x8803A4")]
		private float <StopPercent>k__BackingField;

		[Token(Token = "0x17000065")]
		public bool Starting
		{
			[Token(Token = "0x600085E")]
			[Address(RVA = "0xA361F8", Offset = "0xA361F8", VA = "0xA361F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8850F0", Offset = "0x8850F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600085F")]
			[Address(RVA = "0xA35E24", Offset = "0xA35E24", VA = "0xA35E24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x885100", Offset = "0x885100")]
			private set
			{
			}
		}

		[Token(Token = "0x17000066")]
		public float StartPercent
		{
			[Token(Token = "0x6000860")]
			[Address(RVA = "0xA36320", Offset = "0xA36320", VA = "0xA36320")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x885110", Offset = "0x885110")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000861")]
			[Address(RVA = "0xA36200", Offset = "0xA36200", VA = "0xA36200")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x885120", Offset = "0x885120")]
			private set
			{
			}
		}

		[Token(Token = "0x17000067")]
		public bool Stopping
		{
			[Token(Token = "0x6000862")]
			[Address(RVA = "0xA361E8", Offset = "0xA361E8", VA = "0xA361E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x885130", Offset = "0x885130")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000863")]
			[Address(RVA = "0xA36314", Offset = "0xA36314", VA = "0xA36314")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x885140", Offset = "0x885140")]
			private set
			{
			}
		}

		[Token(Token = "0x17000068")]
		public float StopPercent
		{
			[Token(Token = "0x6000864")]
			[Address(RVA = "0xA36328", Offset = "0xA36328", VA = "0xA36328")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x885150", Offset = "0x885150")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000865")]
			[Address(RVA = "0xA361F0", Offset = "0xA361F0", VA = "0xA361F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x885160", Offset = "0x885160")]
			private set
			{
			}
		}

		[Token(Token = "0x6000857")]
		[Address(RVA = "0xA35B1C", Offset = "0xA35B1C", VA = "0xA35B1C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88508C", Offset = "0x88508C")]
		private IEnumerator CleanupEverythingCoRoutine()
		{
			return null;
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0xA35BBC", Offset = "0xA35BBC", VA = "0xA35BBC")]
		private void StartParticleSystems()
		{
		}

		[Token(Token = "0x6000859")]
		[Address(RVA = "0xA35DC0", Offset = "0xA35DC0", VA = "0xA35DC0", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600085A")]
		[Address(RVA = "0xA35E30", Offset = "0xA35E30", VA = "0xA35E30", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0xA36118", Offset = "0xA36118", VA = "0xA36118", Slot = "6")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600085C")]
		[Address(RVA = "0xA35FA4", Offset = "0xA35FA4", VA = "0xA35FA4")]
		public static void CreateExplosion(Vector3 pos, float radius, float force)
		{
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0xA36208", Offset = "0xA36208", VA = "0xA36208", Slot = "7")]
		public virtual void Stop()
		{
		}

		[Token(Token = "0x6000866")]
		[Address(RVA = "0xA36330", Offset = "0xA36330", VA = "0xA36330")]
		public FireBaseScript()
		{
		}
	}
	[Token(Token = "0x20001BF")]
	public interface ICollisionHandler
	{
		[Token(Token = "0x6000867")]
		void HandleCollision(GameObject obj, Collision c);
	}
	[Token(Token = "0x20001C0")]
	public class FireCollisionForwardScript : MonoBehaviour
	{
		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ICollisionHandler CollisionHandler;

		[Token(Token = "0x6000868")]
		[Address(RVA = "0xA364C8", Offset = "0xA364C8", VA = "0xA364C8")]
		public void OnCollisionEnter(Collision col)
		{
		}

		[Token(Token = "0x6000869")]
		[Address(RVA = "0xA365A0", Offset = "0xA365A0", VA = "0xA365A0")]
		public FireCollisionForwardScript()
		{
		}
	}
	[Token(Token = "0x20001C1")]
	public class LoopingAudioSource
	{
		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8803B4", Offset = "0x8803B4")]
		private AudioSource <AudioSource>k__BackingField;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8803C4", Offset = "0x8803C4")]
		private float <TargetVolume>k__BackingField;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float startMultiplier;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float stopMultiplier;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float currentMultiplier;

		[Token(Token = "0x17000069")]
		public AudioSource AudioSource
		{
			[Token(Token = "0x600086A")]
			[Address(RVA = "0xA380BC", Offset = "0xA380BC", VA = "0xA380BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x885170", Offset = "0x885170")]
			get
			{
				return null;
			}
			[Token(Token = "0x600086B")]
			[Address(RVA = "0xA380C4", Offset = "0xA380C4", VA = "0xA380C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x885180", Offset = "0x885180")]
			private set
			{
			}
		}

		[Token(Token = "0x1700006A")]
		public float TargetVolume
		{
			[Token(Token = "0x600086C")]
			[Address(RVA = "0xA380CC", Offset = "0xA380CC", VA = "0xA380CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x885190", Offset = "0x885190")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600086D")]
			[Address(RVA = "0xA380D4", Offset = "0xA380D4", VA = "0xA380D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8851A0", Offset = "0x8851A0")]
			private set
			{
			}
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0xA3663C", Offset = "0xA3663C", VA = "0xA3663C")]
		public LoopingAudioSource(MonoBehaviour script, AudioSource audioSource, float startMultiplier, float stopMultiplier)
		{
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0xA36918", Offset = "0xA36918", VA = "0xA36918")]
		public void Play()
		{
		}

		[Token(Token = "0x6000870")]
		[Address(RVA = "0xA380DC", Offset = "0xA380DC", VA = "0xA380DC")]
		public void Play(float targetVolume)
		{
		}

		[Token(Token = "0x6000871")]
		[Address(RVA = "0xA36958", Offset = "0xA36958", VA = "0xA36958")]
		public void Stop()
		{
		}

		[Token(Token = "0x6000872")]
		[Address(RVA = "0xA3677C", Offset = "0xA3677C", VA = "0xA3677C")]
		public void Update()
		{
		}
	}
	[Token(Token = "0x20001C2")]
	public class FireConstantBaseScript : FireBaseScript
	{
		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public LoopingAudioSource LoopingAudioSource;

		[Token(Token = "0x6000873")]
		[Address(RVA = "0xA365A8", Offset = "0xA365A8", VA = "0xA365A8", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000874")]
		[Address(RVA = "0xA36748", Offset = "0xA36748", VA = "0xA36748", Slot = "6")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000875")]
		[Address(RVA = "0xA368E0", Offset = "0xA368E0", VA = "0xA368E0", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000876")]
		[Address(RVA = "0xA36920", Offset = "0xA36920", VA = "0xA36920", Slot = "7")]
		public override void Stop()
		{
		}

		[Token(Token = "0x6000877")]
		[Address(RVA = "0xA369FC", Offset = "0xA369FC", VA = "0xA369FC")]
		public FireConstantBaseScript()
		{
		}
	}
	[Token(Token = "0x20001C3")]
	public class FireLightScript : MonoBehaviour
	{
		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8803E4", Offset = "0x8803E4")]
		public float Seed;

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88041C", Offset = "0x88041C")]
		public float IntensityModifier;

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SingleLineAttribute", RVA = "0x880454", Offset = "0x880454")]
		public RangeOfFloats IntensityMaxRange;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Light firePointLight;

		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float lightIntensity;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float seed;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private FireBaseScript fireBaseScript;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float baseY;

		[Token(Token = "0x6000878")]
		[Address(RVA = "0xA36A18", Offset = "0xA36A18", VA = "0xA36A18")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000879")]
		[Address(RVA = "0xA36B94", Offset = "0xA36B94", VA = "0xA36B94")]
		private void Update()
		{
		}

		[Token(Token = "0x600087A")]
		[Address(RVA = "0xA370C0", Offset = "0xA370C0", VA = "0xA370C0")]
		public FireLightScript()
		{
		}
	}
	[Token(Token = "0x20001C4")]
	public delegate void FireProjectileCollisionDelegate(FireProjectileScript script, Vector3 pos);
	[Token(Token = "0x20001C5")]
	public class FireProjectileScript : FireBaseScript, ICollisionHandler
	{
		[Token(Token = "0x20002D9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B884", Offset = "0x87B884")]
		private sealed class <SendCollisionAfterDelay>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FireProjectileScript <>4__this;

			[Token(Token = "0x1700014D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DDE")]
				[Address(RVA = "0xA38044", Offset = "0xA38044", VA = "0xA38044", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700014E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DE0")]
				[Address(RVA = "0xA380B4", Offset = "0xA380B4", VA = "0xA380B4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DDB")]
			[Address(RVA = "0xA37A1C", Offset = "0xA37A1C", VA = "0xA37A1C")]
			[DebuggerHidden]
			public <SendCollisionAfterDelay>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6000DDC")]
			[Address(RVA = "0xA37E2C", Offset = "0xA37E2C", VA = "0xA37E2C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DDD")]
			[Address(RVA = "0xA37E30", Offset = "0xA37E30", VA = "0xA37E30", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DDF")]
			[Address(RVA = "0xA3804C", Offset = "0xA3804C", VA = "0xA3804C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88048C", Offset = "0x88048C")]
		public GameObject ProjectileColliderObject;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8804C4", Offset = "0x8804C4")]
		public AudioSource ProjectileCollisionSound;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8804FC", Offset = "0x8804FC")]
		public ParticleSystem ProjectileExplosionParticleSystem;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x880534", Offset = "0x880534")]
		public float ProjectileExplosionRadius;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88056C", Offset = "0x88056C")]
		public float ProjectileExplosionForce;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8805A4", Offset = "0x8805A4")]
		public float ProjectileColliderDelay;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8805DC", Offset = "0x8805DC")]
		public float ProjectileColliderSpeed;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x880614", Offset = "0x880614")]
		public Vector3 ProjectileDirection;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88064C", Offset = "0x88064C")]
		public LayerMask ProjectileCollisionLayers;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x880684", Offset = "0x880684")]
		public ParticleSystem[] ProjectileDestroyParticleSystemsOnCollision;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public FireProjectileCollisionDelegate CollisionDelegate;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool collided;

		[Token(Token = "0x600087F")]
		[Address(RVA = "0xA379A8", Offset = "0xA379A8", VA = "0xA379A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8851B0", Offset = "0x8851B0")]
		private IEnumerator SendCollisionAfterDelay()
		{
			return null;
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0xA37A48", Offset = "0xA37A48", VA = "0xA37A48", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000881")]
		[Address(RVA = "0xA37A7C", Offset = "0xA37A7C", VA = "0xA37A7C", Slot = "8")]
		public void HandleCollision(GameObject obj, Collision c)
		{
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0xA37D7C", Offset = "0xA37D7C", VA = "0xA37D7C")]
		public FireProjectileScript()
		{
		}
	}
	[Token(Token = "0x20001C6")]
	public delegate void MeteorSwarmCollisionDelegate(MeteorSwarmScript script, GameObject meteor);
	[Token(Token = "0x20001C7")]
	public class MeteorSwarmScript : FireBaseScript, ICollisionHandler
	{
		[Token(Token = "0x20002DA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B894", Offset = "0x87B894")]
		private sealed class <SpawnMeteor>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MeteorSwarmScript <>4__this;

			[Token(Token = "0x1700014F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DE4")]
				[Address(RVA = "0xA39D34", Offset = "0xA39D34", VA = "0xA39D34", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000150")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DE6")]
				[Address(RVA = "0xA39DA4", Offset = "0xA39DA4", VA = "0xA39DA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DE1")]
			[Address(RVA = "0xA38BE0", Offset = "0xA38BE0", VA = "0xA38BE0")]
			[DebuggerHidden]
			public <SpawnMeteor>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6000DE2")]
			[Address(RVA = "0xA395A4", Offset = "0xA395A4", VA = "0xA395A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DE3")]
			[Address(RVA = "0xA395A8", Offset = "0xA395A8", VA = "0xA395A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DE5")]
			[Address(RVA = "0xA39D3C", Offset = "0xA39D3C", VA = "0xA39D3C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002DB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B8A4", Offset = "0x87B8A4")]
		private sealed class <CleanupMeteor>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4000F71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public GameObject obj;

			[Token(Token = "0x17000151")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DEA")]
				[Address(RVA = "0xA3952C", Offset = "0xA3952C", VA = "0xA3952C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000152")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DEC")]
				[Address(RVA = "0xA3959C", Offset = "0xA3959C", VA = "0xA3959C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DE7")]
			[Address(RVA = "0xA38EEC", Offset = "0xA38EEC", VA = "0xA38EEC")]
			[DebuggerHidden]
			public <CleanupMeteor>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6000DE8")]
			[Address(RVA = "0xA393D8", Offset = "0xA393D8", VA = "0xA393D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DE9")]
			[Address(RVA = "0xA393DC", Offset = "0xA393DC", VA = "0xA393DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DEB")]
			[Address(RVA = "0xA39534", Offset = "0xA39534", VA = "0xA39534", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8806CC", Offset = "0x8806CC")]
		public GameObject MeteorPrefab;

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x880704", Offset = "0x880704")]
		public ParticleSystem MeteorExplosionParticleSystem;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88073C", Offset = "0x88073C")]
		public ParticleSystem MeteorShrapnelParticleSystem;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x880774", Offset = "0x880774")]
		public Material[] MeteorMaterials;

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8807AC", Offset = "0x8807AC")]
		public Mesh[] MeteorMeshes;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8807E4", Offset = "0x8807E4")]
		public float DestinationRadius;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88081C", Offset = "0x88081C")]
		public Vector3 Source;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x880854", Offset = "0x880854")]
		public float SourceRadius;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88088C", Offset = "0x88088C")]
		public float TimeToImpact;

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "SingleLineAttribute", RVA = "0x8808C4", Offset = "0x8808C4")]
		public RangeOfIntegers MeteorsPerSecondRange;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "SingleLineAttribute", RVA = "0x8808FC", Offset = "0x8808FC")]
		public RangeOfFloats ScaleRange;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "SingleLineAttribute", RVA = "0x880934", Offset = "0x880934")]
		public RangeOfFloats MeteorLifeTimeRange;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88096C", Offset = "0x88096C")]
		public AudioClip[] EmissionSounds;

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8809A4", Offset = "0x8809A4")]
		public AudioClip[] ExplosionSounds;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float elapsedSecond;

		[Token(Token = "0x14000019")]
		[HideInInspector]
		public event MeteorSwarmCollisionDelegate CollisionDelegate
		{
			[Token(Token = "0x6000887")]
			[Address(RVA = "0xA38994", Offset = "0xA38994", VA = "0xA38994")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x885214", Offset = "0x885214")]
			add
			{
			}
			[Token(Token = "0x6000888")]
			[Address(RVA = "0xA38A80", Offset = "0xA38A80", VA = "0xA38A80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x885224", Offset = "0x885224")]
			remove
			{
			}
		}

		[Token(Token = "0x6000889")]
		[Address(RVA = "0xA38B6C", Offset = "0xA38B6C", VA = "0xA38B6C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x885234", Offset = "0x885234")]
		private IEnumerator SpawnMeteor()
		{
			return null;
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0xA38C0C", Offset = "0xA38C0C", VA = "0xA38C0C")]
		private void SpawnMeteors()
		{
		}

		[Token(Token = "0x600088B")]
		[Address(RVA = "0xA38C60", Offset = "0xA38C60", VA = "0xA38C60", Slot = "6")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600088C")]
		[Address(RVA = "0xA38CD4", Offset = "0xA38CD4", VA = "0xA38CD4")]
		private void PlayCollisionSound(GameObject obj)
		{
		}

		[Token(Token = "0x600088D")]
		[Address(RVA = "0xA38E54", Offset = "0xA38E54", VA = "0xA38E54")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x885298", Offset = "0x885298")]
		private IEnumerator CleanupMeteor(float delay, GameObject obj)
		{
			return null;
		}

		[Token(Token = "0x600088E")]
		[Address(RVA = "0xA38F18", Offset = "0xA38F18", VA = "0xA38F18", Slot = "8")]
		public void HandleCollision(GameObject obj, Collision col)
		{
		}

		[Token(Token = "0x600088F")]
		[Address(RVA = "0xA39398", Offset = "0xA39398", VA = "0xA39398")]
		public MeteorSwarmScript()
		{
		}
	}
	[Token(Token = "0x20001C8")]
	public class SingleLineAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8809EC", Offset = "0x8809EC")]
		private string <Tooltip>k__BackingField;

		[Token(Token = "0x1700006B")]
		public string Tooltip
		{
			[Token(Token = "0x6000891")]
			[Address(RVA = "0xA39DE0", Offset = "0xA39DE0", VA = "0xA39DE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8852FC", Offset = "0x8852FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000892")]
			[Address(RVA = "0xA39DD8", Offset = "0xA39DD8", VA = "0xA39DD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88530C", Offset = "0x88530C")]
			private set
			{
			}
		}

		[Token(Token = "0x6000890")]
		[Address(RVA = "0xA39DAC", Offset = "0xA39DAC", VA = "0xA39DAC")]
		public SingleLineAttribute(string tooltip)
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x20001C9")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x1700006C")]
		public bool Highlight
		{
			[Token(Token = "0x6000893")]
			[Address(RVA = "0xCB38F8", Offset = "0xCB38F8", VA = "0xCB38F8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000894")]
			[Address(RVA = "0xCB3900", Offset = "0xCB3900", VA = "0xCB3900")]
			set
			{
			}
		}

		[Token(Token = "0x6000895")]
		[Address(RVA = "0xCB390C", Offset = "0xCB390C", VA = "0xCB390C")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x6000896")]
		[Address(RVA = "0xCB3B34", Offset = "0xCB3B34", VA = "0xCB3B34", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6000897")]
		[Address(RVA = "0xCB3B5C", Offset = "0xCB3B5C", VA = "0xCB3B5C", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6000898")]
		[Address(RVA = "0xCB3B84", Offset = "0xCB3B84", VA = "0xCB3B84")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0xCB39D8", Offset = "0xCB39D8", VA = "0xCB39D8")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0xCB3E2C", Offset = "0xCB3E2C", VA = "0xCB3E2C")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x20001CA")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x1700006D")]
		public bool InRange
		{
			[Token(Token = "0x600089C")]
			[Address(RVA = "0xCB4424", Offset = "0xCB4424", VA = "0xCB4424")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600089D")]
			[Address(RVA = "0xCB442C", Offset = "0xCB442C", VA = "0xCB442C")]
			set
			{
			}
		}

		[Token(Token = "0x1700006E")]
		public bool Targeted
		{
			[Token(Token = "0x600089E")]
			[Address(RVA = "0xCB463C", Offset = "0xCB463C", VA = "0xCB463C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600089F")]
			[Address(RVA = "0xCB4644", Offset = "0xCB4644", VA = "0xCB4644")]
			set
			{
			}
		}

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0xCB4650", Offset = "0xCB4650", VA = "0xCB4650", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0xCB4438", Offset = "0xCB4438", VA = "0xCB4438")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0xCB4848", Offset = "0xCB4848", VA = "0xCB4848")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x20001CB")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x87B174", Offset = "0x87B174")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x1700006F")]
		public bool UseSpherecast
		{
			[Token(Token = "0x60008A3")]
			[Address(RVA = "0xCB4850", Offset = "0xCB4850", VA = "0xCB4850")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008A4")]
			[Address(RVA = "0xCB4858", Offset = "0xCB4858", VA = "0xCB4858")]
			set
			{
			}
		}

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0xCB4874", Offset = "0xCB4874", VA = "0xCB4874", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60008A6")]
		[Address(RVA = "0xCB4A9C", Offset = "0xCB4A9C", VA = "0xCB4A9C", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x60008A7")]
		[Address(RVA = "0xCB550C", Offset = "0xCB550C", VA = "0xCB550C", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0xCB5CF0", Offset = "0xCB5CF0", VA = "0xCB5CF0", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x60008A9")]
		[Address(RVA = "0xCB6150", Offset = "0xCB6150", VA = "0xCB6150")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x60008AA")]
		[Address(RVA = "0xCB4D1C", Offset = "0xCB4D1C", VA = "0xCB4D1C")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60008AB")]
		[Address(RVA = "0xCB6248", Offset = "0xCB6248", VA = "0xCB6248")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60008AC")]
		[Address(RVA = "0xCB66E4", Offset = "0xCB66E4", VA = "0xCB66E4", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x60008AD")]
		[Address(RVA = "0xCB66FC", Offset = "0xCB66FC", VA = "0xCB66FC", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x60008AE")]
		[Address(RVA = "0xCB6704", Offset = "0xCB6704", VA = "0xCB6704")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x20001CC")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x20002DC")]
		public enum CrosshairState
		{
			[Token(Token = "0x4000F73")]
			Disabled,
			[Token(Token = "0x4000F74")]
			Enabled,
			[Token(Token = "0x4000F75")]
			Targeted
		}

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x60008AF")]
		[Address(RVA = "0xCB84F4", Offset = "0xCB84F4", VA = "0xCB84F4")]
		private void Start()
		{
		}

		[Token(Token = "0x60008B0")]
		[Address(RVA = "0xCB4774", Offset = "0xCB4774", VA = "0xCB4774")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x60008B1")]
		[Address(RVA = "0xCB8564", Offset = "0xCB8564", VA = "0xCB8564")]
		private void Update()
		{
		}

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0xCB85BC", Offset = "0xCB85BC", VA = "0xCB85BC")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x20001CD")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0xCB8378", Offset = "0xCB8378", VA = "0xCB8378")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0xCB8434", Offset = "0xCB8434", VA = "0xCB8434")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0xCB84EC", Offset = "0xCB84EC", VA = "0xCB84EC")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x20001CE")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x60008B6")]
		[Address(RVA = "0xBB4638", Offset = "0xBB4638", VA = "0xBB4638")]
		private void Start()
		{
		}

		[Token(Token = "0x60008B7")]
		[Address(RVA = "0xBB4704", Offset = "0xBB4704", VA = "0xBB4704")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0xBB4710", Offset = "0xBB4710", VA = "0xBB4710")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0xBB471C", Offset = "0xBB471C", VA = "0xBB471C")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x20001CF")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0xCB241C", Offset = "0xCB241C", VA = "0xCB241C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0xCB247C", Offset = "0xCB247C", VA = "0xCB247C")]
		private void Update()
		{
		}

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0xCB2798", Offset = "0xCB2798", VA = "0xCB2798")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0xCB28B4", Offset = "0xCB28B4", VA = "0xCB28B4")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0xCB2480", Offset = "0xCB2480", VA = "0xCB2480")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0xCB29C8", Offset = "0xCB29C8", VA = "0xCB29C8")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x20001D0")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x20002DD")]
		public enum ContactTest
		{
			[Token(Token = "0x4000F77")]
			PerpenTest,
			[Token(Token = "0x4000F78")]
			BackwardsPress
		}

		[Token(Token = "0x4000A60")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x4000A61")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private InteractableState _currentButtonState;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x17000070")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x60008C0")]
			[Address(RVA = "0xCB2A60", Offset = "0xCB2A60", VA = "0xCB2A60", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000071")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x60008C1")]
			[Address(RVA = "0xCB2A68", Offset = "0xCB2A68", VA = "0xCB2A68")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0xCB2A74", Offset = "0xCB2A74", VA = "0xCB2A74", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60008C3")]
		[Address(RVA = "0xCB2BEC", Offset = "0xCB2BEC", VA = "0xCB2BEC")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x60008C4")]
		[Address(RVA = "0xCB2E0C", Offset = "0xCB2E0C", VA = "0xCB2E0C", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x60008C5")]
		[Address(RVA = "0xCB33F0", Offset = "0xCB33F0", VA = "0xCB33F0")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0xCB3300", Offset = "0xCB3300", VA = "0xCB3300")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60008C7")]
		[Address(RVA = "0xCB349C", Offset = "0xCB349C", VA = "0xCB349C")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60008C8")]
		[Address(RVA = "0xCB3598", Offset = "0xCB3598", VA = "0xCB3598")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60008C9")]
		[Address(RVA = "0xCB36E0", Offset = "0xCB36E0", VA = "0xCB36E0")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x20001D1")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880B2C", Offset = "0x880B2C")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880B3C", Offset = "0x880B3C")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x17000072")]
		public Collider Collider
		{
			[Token(Token = "0x60008CA")]
			[Address(RVA = "0xCB37D4", Offset = "0xCB37D4", VA = "0xCB37D4", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88531C", Offset = "0x88531C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008CB")]
			[Address(RVA = "0xCB37DC", Offset = "0xCB37DC", VA = "0xCB37DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88532C", Offset = "0x88532C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000073")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x60008CC")]
			[Address(RVA = "0xCB28AC", Offset = "0xCB28AC", VA = "0xCB28AC", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88533C", Offset = "0x88533C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008CD")]
			[Address(RVA = "0xCB37E4", Offset = "0xCB37E4", VA = "0xCB37E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88534C", Offset = "0x88534C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000074")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x60008CE")]
			[Address(RVA = "0xCB37EC", Offset = "0xCB37EC", VA = "0xCB37EC", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0xCB3870", Offset = "0xCB3870", VA = "0xCB3870")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0xCB38F0", Offset = "0xCB38F0", VA = "0xCB38F0")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x20001D2")]
	public interface ColliderZone
	{
		[Token(Token = "0x17000075")]
		Collider Collider
		{
			[Token(Token = "0x60008D1")]
			get;
		}

		[Token(Token = "0x17000076")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x60008D2")]
			get;
		}

		[Token(Token = "0x17000077")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x60008D3")]
			get;
		}
	}
	[Token(Token = "0x20001D3")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0xCB2D58", Offset = "0xCB2D58", VA = "0xCB2D58")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x20001D4")]
	public enum InteractionType
	{
		[Token(Token = "0x4000A75")]
		Enter,
		[Token(Token = "0x4000A76")]
		Stay,
		[Token(Token = "0x4000A77")]
		Exit
	}
	[Token(Token = "0x20001D5")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x20002DE")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4000F7A")]
			Mesh,
			[Token(Token = "0x4000F7B")]
			Skeleton,
			[Token(Token = "0x4000F7C")]
			Both
		}

		[Token(Token = "0x20002DF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B8B4", Offset = "0x87B8B4")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x17000153")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DF0")]
				[Address(RVA = "0xCB97B8", Offset = "0xCB97B8", VA = "0xCB97B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000154")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DF2")]
				[Address(RVA = "0xCB9828", Offset = "0xCB9828", VA = "0xCB9828", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DED")]
			[Address(RVA = "0xCB9164", Offset = "0xCB9164", VA = "0xCB9164")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6000DEE")]
			[Address(RVA = "0xCB9554", Offset = "0xCB9554", VA = "0xCB9554", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DEF")]
			[Address(RVA = "0xCB9558", Offset = "0xCB9558", VA = "0xCB9558", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DF1")]
			[Address(RVA = "0xCB97C0", Offset = "0xCB97C0", VA = "0xCB97C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A78")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880B6C", Offset = "0x880B6C")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x17000078")]
		public OVRHand RightHand
		{
			[Token(Token = "0x60008D5")]
			[Address(RVA = "0xCB7320", Offset = "0xCB7320", VA = "0xCB7320")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008D6")]
			[Address(RVA = "0xCB85C4", Offset = "0xCB85C4", VA = "0xCB85C4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000079")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x60008D7")]
			[Address(RVA = "0xCB7F68", Offset = "0xCB7F68", VA = "0xCB7F68")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008D8")]
			[Address(RVA = "0xCB8640", Offset = "0xCB8640", VA = "0xCB8640")]
			private set
			{
			}
		}

		[Token(Token = "0x1700007A")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x60008D9")]
			[Address(RVA = "0xCB86BC", Offset = "0xCB86BC", VA = "0xCB86BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008DA")]
			[Address(RVA = "0xCB8704", Offset = "0xCB8704", VA = "0xCB8704")]
			private set
			{
			}
		}

		[Token(Token = "0x1700007B")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x60008DB")]
			[Address(RVA = "0xCB8780", Offset = "0xCB8780", VA = "0xCB8780")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008DC")]
			[Address(RVA = "0xCB87C8", Offset = "0xCB87C8", VA = "0xCB87C8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700007C")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x60008DD")]
			[Address(RVA = "0xCB8844", Offset = "0xCB8844", VA = "0xCB8844")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008DE")]
			[Address(RVA = "0xCB888C", Offset = "0xCB888C", VA = "0xCB888C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700007D")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x60008DF")]
			[Address(RVA = "0xCB72DC", Offset = "0xCB72DC", VA = "0xCB72DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008E0")]
			[Address(RVA = "0xCB8908", Offset = "0xCB8908", VA = "0xCB8908")]
			private set
			{
			}
		}

		[Token(Token = "0x1700007E")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x60008E1")]
			[Address(RVA = "0xCB7F24", Offset = "0xCB7F24", VA = "0xCB7F24")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008E2")]
			[Address(RVA = "0xCB8980", Offset = "0xCB8980", VA = "0xCB8980")]
			private set
			{
			}
		}

		[Token(Token = "0x1700007F")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x60008E3")]
			[Address(RVA = "0xCB89F8", Offset = "0xCB89F8", VA = "0xCB89F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008E4")]
			[Address(RVA = "0xCB8A3C", Offset = "0xCB8A3C", VA = "0xCB8A3C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000080")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x60008E5")]
			[Address(RVA = "0xCB8AB4", Offset = "0xCB8AB4", VA = "0xCB8AB4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008E6")]
			[Address(RVA = "0xCB8AF8", Offset = "0xCB8AF8", VA = "0xCB8AF8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000081")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x60008E7")]
			[Address(RVA = "0xCB8B70", Offset = "0xCB8B70", VA = "0xCB8B70")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008E8")]
			[Address(RVA = "0xCB8BB4", Offset = "0xCB8BB4", VA = "0xCB8BB4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000082")]
		public static HandsManager Instance
		{
			[Token(Token = "0x60008E9")]
			[Address(RVA = "0xCB41DC", Offset = "0xCB41DC", VA = "0xCB41DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88535C", Offset = "0x88535C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008EA")]
			[Address(RVA = "0xCB8C2C", Offset = "0xCB8C2C", VA = "0xCB8C2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88536C", Offset = "0x88536C")]
			private set
			{
			}
		}

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0xCB8C80", Offset = "0xCB8C80", VA = "0xCB8C80")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0xCB9090", Offset = "0xCB9090", VA = "0xCB9090")]
		private void Update()
		{
		}

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0xCB901C", Offset = "0xCB901C", VA = "0xCB901C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88537C", Offset = "0x88537C")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0xCB422C", Offset = "0xCB422C", VA = "0xCB422C")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0xCB9190", Offset = "0xCB9190", VA = "0xCB9190")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0xCB7FB0", Offset = "0xCB7FB0", VA = "0xCB7FB0")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0xCB7110", Offset = "0xCB7110", VA = "0xCB7110")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0xCB9474", Offset = "0xCB9474", VA = "0xCB9474")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x20001D6")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002E0")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6000DF3")]
			[Address(RVA = "0xCB9F84", Offset = "0xCB9F84", VA = "0xCB9F84")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x17000083")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x60008F3")]
			[Address(RVA = "0xCB2E04", Offset = "0xCB2E04", VA = "0xCB2E04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000084")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x60008F4")]
			[Address(RVA = "0xCB2DFC", Offset = "0xCB2DFC", VA = "0xCB2DFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000085")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x60008F5")]
			[Address(RVA = "0xCB2D50", Offset = "0xCB2D50", VA = "0xCB2D50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000086")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x60008F6")]
			[Address(RVA = "0xCB9830", Offset = "0xCB9830", VA = "0xCB9830", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1400001A")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x60008F7")]
			[Address(RVA = "0xCB9838", Offset = "0xCB9838", VA = "0xCB9838")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8853E0", Offset = "0x8853E0")]
			add
			{
			}
			[Token(Token = "0x60008F8")]
			[Address(RVA = "0xCB9924", Offset = "0xCB9924", VA = "0xCB9924")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8853F0", Offset = "0x8853F0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001B")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x60008FA")]
			[Address(RVA = "0xCB9A84", Offset = "0xCB9A84", VA = "0xCB9A84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x885400", Offset = "0x885400")]
			add
			{
			}
			[Token(Token = "0x60008FB")]
			[Address(RVA = "0xCB9B70", Offset = "0xCB9B70", VA = "0xCB9B70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x885410", Offset = "0x885410")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001C")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x60008FD")]
			[Address(RVA = "0xCB9CD0", Offset = "0xCB9CD0", VA = "0xCB9CD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x885420", Offset = "0x885420")]
			add
			{
			}
			[Token(Token = "0x60008FE")]
			[Address(RVA = "0xCB9DBC", Offset = "0xCB9DBC", VA = "0xCB9DBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x885430", Offset = "0x885430")]
			remove
			{
			}
		}

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0xCB9A10", Offset = "0xCB9A10", VA = "0xCB9A10", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0xCB9C5C", Offset = "0xCB9C5C", VA = "0xCB9C5C", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60008FF")]
		[Address(RVA = "0xCB9EA8", Offset = "0xCB9EA8", VA = "0xCB9EA8", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6000900")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x6000901")]
		[Address(RVA = "0xCB2B84", Offset = "0xCB2B84", VA = "0xCB2B84", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000902")]
		[Address(RVA = "0xCB9F1C", Offset = "0xCB9F1C", VA = "0xCB9F1C", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000903")]
		[Address(RVA = "0xCB37CC", Offset = "0xCB37CC", VA = "0xCB37CC")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x20001D7")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x4000A90")]
		None,
		[Token(Token = "0x4000A91")]
		Proximity,
		[Token(Token = "0x4000A92")]
		Contact,
		[Token(Token = "0x4000A93")]
		Action
	}
	[Token(Token = "0x20001D8")]
	public enum InteractableState
	{
		[Token(Token = "0x4000A95")]
		Default,
		[Token(Token = "0x4000A96")]
		ProximityState,
		[Token(Token = "0x4000A97")]
		ContactState,
		[Token(Token = "0x4000A98")]
		ActionState
	}
	[Token(Token = "0x20001D9")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x6000904")]
		[Address(RVA = "0xBB0180", Offset = "0xBB0180", VA = "0xBB0180")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x20001DA")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x17000087")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x6000905")]
			[Address(RVA = "0xBAFF94", Offset = "0xBAFF94", VA = "0xBAFF94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000906")]
		[Address(RVA = "0xBAFFFC", Offset = "0xBAFFFC", VA = "0xBAFFFC")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000907")]
		[Address(RVA = "0xBB0080", Offset = "0xBB0080", VA = "0xBB0080")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6000908")]
		[Address(RVA = "0xBB0104", Offset = "0xBB0104", VA = "0xBB0104")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x20001DB")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x20002E1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B8C4", Offset = "0x87B8C4")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4000F83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4000F84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4000F85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4000F86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4000F87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4000F88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x17000155")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DF8")]
				[Address(RVA = "0xBB1594", Offset = "0xBB1594", VA = "0xBB1594", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000156")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DFA")]
				[Address(RVA = "0xBB1604", Offset = "0xBB1604", VA = "0xBB1604", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DF4")]
			[Address(RVA = "0xBB0FA8", Offset = "0xBB0FA8", VA = "0xBB0FA8")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6000DF5")]
			[Address(RVA = "0xBB1154", Offset = "0xBB1154", VA = "0xBB1154", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DF6")]
			[Address(RVA = "0xBB11C8", Offset = "0xBB11C8", VA = "0xBB11C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DF7")]
			[Address(RVA = "0xBB1170", Offset = "0xBB1170", VA = "0xBB1170")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6000DF9")]
			[Address(RVA = "0xBB159C", Offset = "0xBB159C", VA = "0xBB159C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x600090A")]
		[Address(RVA = "0xBB0E78", Offset = "0xBB0E78", VA = "0xBB0E78")]
		private void Awake()
		{
		}

		[Token(Token = "0x600090B")]
		[Address(RVA = "0xBB0EF4", Offset = "0xBB0EF4", VA = "0xBB0EF4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x885440", Offset = "0x885440")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x600090C")]
		[Address(RVA = "0xBB0FD4", Offset = "0xBB0FD4", VA = "0xBB0FD4")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x600090D")]
		[Address(RVA = "0xBB114C", Offset = "0xBB114C", VA = "0xBB114C")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x20001DC")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x17000088")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x600090E")]
			[Address(RVA = "0xBB160C", Offset = "0xBB160C", VA = "0xBB160C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600090F")]
		[Address(RVA = "0xBB1794", Offset = "0xBB1794", VA = "0xBB1794")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6000910")]
		[Address(RVA = "0xBB1868", Offset = "0xBB1868", VA = "0xBB1868")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6000911")]
		[Address(RVA = "0xBB193C", Offset = "0xBB193C", VA = "0xBB193C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000912")]
		[Address(RVA = "0xBB1BD0", Offset = "0xBB1BD0", VA = "0xBB1BD0")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6000913")]
		[Address(RVA = "0xBB1C18", Offset = "0xBB1C18", VA = "0xBB1C18")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0xBB1FD4", Offset = "0xBB1FD4", VA = "0xBB1FD4")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x6000915")]
		[Address(RVA = "0xBB2120", Offset = "0xBB2120", VA = "0xBB2120")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x20001DD")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x20002E2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B8D4", Offset = "0x87B8D4")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x17000157")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DFE")]
				[Address(RVA = "0xCB820C", Offset = "0xCB820C", VA = "0xCB820C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000158")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E00")]
				[Address(RVA = "0xCB827C", Offset = "0xCB827C", VA = "0xCB827C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DFB")]
			[Address(RVA = "0xCB6CF4", Offset = "0xCB6CF4", VA = "0xCB6CF4")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6000DFC")]
			[Address(RVA = "0xCB7ACC", Offset = "0xCB7ACC", VA = "0xCB7ACC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DFD")]
			[Address(RVA = "0xCB7AD0", Offset = "0xCB7AD0", VA = "0xCB7AD0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DFF")]
			[Address(RVA = "0xCB8214", Offset = "0xCB8214", VA = "0xCB8214", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000AA8")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x17000089")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000916")]
			[Address(RVA = "0xCB6B14", Offset = "0xCB6B14", VA = "0xCB6B14", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x1700008A")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6000917")]
			[Address(RVA = "0xCB6B1C", Offset = "0xCB6B1C", VA = "0xCB6B1C", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x1700008B")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6000918")]
			[Address(RVA = "0xCB6B24", Offset = "0xCB6B24", VA = "0xCB6B24", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700008C")]
		public override bool EnableState
		{
			[Token(Token = "0x6000919")]
			[Address(RVA = "0xCB6B2C", Offset = "0xCB6B2C", VA = "0xCB6B2C", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600091A")]
			[Address(RVA = "0xCB6B74", Offset = "0xCB6B74", VA = "0xCB6B74", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x600091B")]
		[Address(RVA = "0xCB6BC4", Offset = "0xCB6BC4", VA = "0xCB6BC4", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600091C")]
		[Address(RVA = "0xCB6C80", Offset = "0xCB6C80", VA = "0xCB6C80")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8854A4", Offset = "0x8854A4")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x600091D")]
		[Address(RVA = "0xCB6D20", Offset = "0xCB6D20", VA = "0xCB6D20")]
		private void Update()
		{
		}

		[Token(Token = "0x600091E")]
		[Address(RVA = "0xCB7370", Offset = "0xCB7370", VA = "0xCB7370")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x600091F")]
		[Address(RVA = "0xCB7648", Offset = "0xCB7648", VA = "0xCB7648")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6000920")]
		[Address(RVA = "0xCB77C0", Offset = "0xCB77C0", VA = "0xCB77C0", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6000921")]
		[Address(RVA = "0xCB7AAC", Offset = "0xCB7AAC", VA = "0xCB7AAC", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6000922")]
		[Address(RVA = "0xCB7AB0", Offset = "0xCB7AB0", VA = "0xCB7AB0", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6000923")]
		[Address(RVA = "0xCB7AB4", Offset = "0xCB7AB4", VA = "0xCB7AB4")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x20001DE")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880BFC", Offset = "0x880BFC")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880C0C", Offset = "0x880C0C")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880C1C", Offset = "0x880C1C")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x1700008D")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6000924")]
			[Address(RVA = "0xCB8284", Offset = "0xCB8284", VA = "0xCB8284", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x885508", Offset = "0x885508")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000925")]
			[Address(RVA = "0xCB6C78", Offset = "0xCB6C78", VA = "0xCB6C78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x885518", Offset = "0x885518")]
			set
			{
			}
		}

		[Token(Token = "0x1700008E")]
		public bool EnableState
		{
			[Token(Token = "0x6000926")]
			[Address(RVA = "0xCB828C", Offset = "0xCB828C", VA = "0xCB828C", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000927")]
			[Address(RVA = "0xCB82BC", Offset = "0xCB82BC", VA = "0xCB82BC", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x1700008F")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6000928")]
			[Address(RVA = "0xCB82F4", Offset = "0xCB82F4", VA = "0xCB82F4", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x885528", Offset = "0x885528")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000929")]
			[Address(RVA = "0xCB82FC", Offset = "0xCB82FC", VA = "0xCB82FC", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x885538", Offset = "0x885538")]
			set
			{
			}
		}

		[Token(Token = "0x17000090")]
		public float SphereRadius
		{
			[Token(Token = "0x600092A")]
			[Address(RVA = "0xCB7368", Offset = "0xCB7368", VA = "0xCB7368")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x885548", Offset = "0x885548")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600092B")]
			[Address(RVA = "0xCB8308", Offset = "0xCB8308", VA = "0xCB8308")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x885558", Offset = "0x885558")]
			private set
			{
			}
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0xCB8310", Offset = "0xCB8310", VA = "0xCB8310")]
		private void Awake()
		{
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0xCB836C", Offset = "0xCB836C", VA = "0xCB836C", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x600092E")]
		[Address(RVA = "0xCB8370", Offset = "0xCB8370", VA = "0xCB8370")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x20001DF")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x4000AB8")]
		None = 0,
		[Token(Token = "0x4000AB9")]
		Ray = 1,
		[Token(Token = "0x4000ABA")]
		Poke = 4,
		[Token(Token = "0x4000ABB")]
		All = -1
	}
	[Token(Token = "0x20001E0")]
	public enum ToolInputState
	{
		[Token(Token = "0x4000ABD")]
		Inactive,
		[Token(Token = "0x4000ABE")]
		PrimaryInputDown,
		[Token(Token = "0x4000ABF")]
		PrimaryInputDownStay,
		[Token(Token = "0x4000AC0")]
		PrimaryInputUp
	}
	[Token(Token = "0x20001E1")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x600092F")]
		[Address(RVA = "0xCB7A68", Offset = "0xCB7A68", VA = "0xCB7A68")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x20001E2")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880C2C", Offset = "0x880C2C")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880C3C", Offset = "0x880C3C")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880C4C", Offset = "0x880C4C")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x17000091")]
		public Transform ToolTransform
		{
			[Token(Token = "0x6000930")]
			[Address(RVA = "0xBB0224", Offset = "0xBB0224", VA = "0xBB0224")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000092")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6000931")]
			[Address(RVA = "0xBB022C", Offset = "0xBB022C", VA = "0xBB022C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x885568", Offset = "0x885568")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000932")]
			[Address(RVA = "0xBB0234", Offset = "0xBB0234", VA = "0xBB0234")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x885578", Offset = "0x885578")]
			set
			{
			}
		}

		[Token(Token = "0x17000093")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000933")]
			get;
		}

		[Token(Token = "0x17000094")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x6000934")]
			get;
		}

		[Token(Token = "0x17000095")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x6000935")]
			get;
		}

		[Token(Token = "0x17000096")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6000936")]
			[Address(RVA = "0xBB0240", Offset = "0xBB0240", VA = "0xBB0240")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x885588", Offset = "0x885588")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000937")]
			[Address(RVA = "0xBB024C", Offset = "0xBB024C", VA = "0xBB024C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x885598", Offset = "0x885598")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000097")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x6000938")]
			[Address(RVA = "0xBB0258", Offset = "0xBB0258", VA = "0xBB0258")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8855A8", Offset = "0x8855A8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000939")]
			[Address(RVA = "0xBB0264", Offset = "0xBB0264", VA = "0xBB0264")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8855B8", Offset = "0x8855B8")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000098")]
		public abstract bool EnableState
		{
			[Token(Token = "0x600093E")]
			get;
			[Token(Token = "0x600093F")]
			set;
		}

		[Token(Token = "0x600093A")]
		[Address(RVA = "0xBB0270", Offset = "0xBB0270", VA = "0xBB0270")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x600093B")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x600093C")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x600093D")]
		public abstract void DeFocus();

		[Token(Token = "0x6000940")]
		public abstract void Initialize();

		[Token(Token = "0x6000941")]
		[Address(RVA = "0xBB0278", Offset = "0xBB0278", VA = "0xBB0278")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0xBB02C8", Offset = "0xBB02C8", VA = "0xBB02C8")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6000943")]
		[Address(RVA = "0xBB0328", Offset = "0xBB0328", VA = "0xBB0328", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0xBB05F4", Offset = "0xBB05F4", VA = "0xBB05F4", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x6000945")]
		[Address(RVA = "0xBB0D68", Offset = "0xBB0D68", VA = "0xBB0D68")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x20001E3")]
	public interface InteractableToolView
	{
		[Token(Token = "0x17000099")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x6000946")]
			get;
		}

		[Token(Token = "0x1700009A")]
		bool EnableState
		{
			[Token(Token = "0x6000948")]
			get;
			[Token(Token = "0x6000949")]
			set;
		}

		[Token(Token = "0x1700009B")]
		bool ToolActivateState
		{
			[Token(Token = "0x600094A")]
			get;
			[Token(Token = "0x600094B")]
			set;
		}

		[Token(Token = "0x6000947")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x20001E4")]
	public class PinchStateModule
	{
		[Token(Token = "0x20002E3")]
		private enum PinchState
		{
			[Token(Token = "0x4000F8D")]
			None,
			[Token(Token = "0x4000F8E")]
			PinchDown,
			[Token(Token = "0x4000F8F")]
			PinchStay,
			[Token(Token = "0x4000F90")]
			PinchUp
		}

		[Token(Token = "0x4000ACD")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x1700009C")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x600094C")]
			[Address(RVA = "0xBB4724", Offset = "0xBB4724", VA = "0xBB4724")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700009D")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x600094D")]
			[Address(RVA = "0xBB47B0", Offset = "0xBB47B0", VA = "0xBB47B0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700009E")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x600094E")]
			[Address(RVA = "0xBB483C", Offset = "0xBB483C", VA = "0xBB483C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600094F")]
		[Address(RVA = "0xBB48C8", Offset = "0xBB48C8", VA = "0xBB48C8")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x6000950")]
		[Address(RVA = "0xBB48F4", Offset = "0xBB48F4", VA = "0xBB48F4")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x20001E5")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x4000AD0")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x4000AD1")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x4000AD2")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x4000AD3")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x4000AD4")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x880C6C", Offset = "0x880C6C")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x1700009F")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6000951")]
			[Address(RVA = "0xBB4B9C", Offset = "0xBB4B9C", VA = "0xBB4B9C", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x170000A0")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6000952")]
			[Address(RVA = "0xBB4BA4", Offset = "0xBB4BA4", VA = "0xBB4BA4", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x170000A1")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6000953")]
			[Address(RVA = "0xBB4C2C", Offset = "0xBB4C2C", VA = "0xBB4C2C", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A2")]
		public override bool EnableState
		{
			[Token(Token = "0x6000954")]
			[Address(RVA = "0xBB4C34", Offset = "0xBB4C34", VA = "0xBB4C34", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000955")]
			[Address(RVA = "0xBB4C90", Offset = "0xBB4C90", VA = "0xBB4C90", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0xBB4D44", Offset = "0xBB4D44", VA = "0xBB4D44", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6000957")]
		[Address(RVA = "0xBB4DB4", Offset = "0xBB4DB4", VA = "0xBB4DB4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0xBB4E58", Offset = "0xBB4E58", VA = "0xBB4E58")]
		private void Update()
		{
		}

		[Token(Token = "0x6000959")]
		[Address(RVA = "0xBB51D0", Offset = "0xBB51D0", VA = "0xBB51D0")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0xBB52E0", Offset = "0xBB52E0", VA = "0xBB52E0", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0xBB56A0", Offset = "0xBB56A0", VA = "0xBB56A0")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0xBB5860", Offset = "0xBB5860", VA = "0xBB5860")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0xBB5990", Offset = "0xBB5990", VA = "0xBB5990")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x600095E")]
		[Address(RVA = "0xBB5CF0", Offset = "0xBB5CF0", VA = "0xBB5CF0")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x600095F")]
		[Address(RVA = "0xBB613C", Offset = "0xBB613C", VA = "0xBB613C", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0xBB6228", Offset = "0xBB6228", VA = "0xBB6228", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0xBB6264", Offset = "0xBB6264", VA = "0xBB6264")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x20001E6")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x4000AE0")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x4000AE1")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880CE0", Offset = "0x880CE0")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x170000A3")]
		public bool EnableState
		{
			[Token(Token = "0x6000962")]
			[Address(RVA = "0xBB4C60", Offset = "0xBB4C60", VA = "0xBB4C60", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000963")]
			[Address(RVA = "0xBB4CC4", Offset = "0xBB4CC4", VA = "0xBB4CC4", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x170000A4")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6000964")]
			[Address(RVA = "0xBB631C", Offset = "0xBB631C", VA = "0xBB631C", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000965")]
			[Address(RVA = "0xBB5180", Offset = "0xBB5180", VA = "0xBB5180", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x170000A5")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6000967")]
			[Address(RVA = "0xBB65B4", Offset = "0xBB65B4", VA = "0xBB65B4", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8855C8", Offset = "0x8855C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000968")]
			[Address(RVA = "0xBB4DAC", Offset = "0xBB4DAC", VA = "0xBB4DAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8855D8", Offset = "0x8855D8")]
			set
			{
			}
		}

		[Token(Token = "0x6000966")]
		[Address(RVA = "0xBB6324", Offset = "0xBB6324", VA = "0xBB6324")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000969")]
		[Address(RVA = "0xBB6184", Offset = "0xBB6184", VA = "0xBB6184", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x600096A")]
		[Address(RVA = "0xBB65BC", Offset = "0xBB65BC", VA = "0xBB65BC")]
		private void Update()
		{
		}

		[Token(Token = "0x600096B")]
		[Address(RVA = "0xBB6950", Offset = "0xBB6950", VA = "0xBB6950")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600096C")]
		[Address(RVA = "0xBB6B40", Offset = "0xBB6B40", VA = "0xBB6B40")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x20001E7")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x170000A6")]
		public bool UseSpherecast
		{
			[Token(Token = "0x600096D")]
			[Address(RVA = "0xCB6724", Offset = "0xCB6724", VA = "0xCB6724")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600096E")]
			[Address(RVA = "0xCB672C", Offset = "0xCB672C", VA = "0xCB672C")]
			set
			{
			}
		}

		[Token(Token = "0x170000A7")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x600096F")]
			[Address(RVA = "0xCB67E4", Offset = "0xCB67E4", VA = "0xCB67E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000970")]
			[Address(RVA = "0xCB67EC", Offset = "0xCB67EC", VA = "0xCB67EC")]
			set
			{
			}
		}

		[Token(Token = "0x6000971")]
		[Address(RVA = "0xCB6890", Offset = "0xCB6890", VA = "0xCB6890")]
		private void Start()
		{
		}

		[Token(Token = "0x6000972")]
		[Address(RVA = "0xCB6AEC", Offset = "0xCB6AEC", VA = "0xCB6AEC")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0xCB6AFC", Offset = "0xCB6AFC", VA = "0xCB6AFC")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0xCB6B0C", Offset = "0xCB6B0C", VA = "0xCB6B0C")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x20001E8")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x6000975")]
		[Address(RVA = "0xCB3F28", Offset = "0xCB3F28", VA = "0xCB3F28")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000976")]
		[Address(RVA = "0xCB3F2C", Offset = "0xCB3F2C", VA = "0xCB3F2C")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0xCB3F88", Offset = "0xCB3F88", VA = "0xCB3F88")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000978")]
		[Address(RVA = "0xCB3FE4", Offset = "0xCB3FE4", VA = "0xCB3FE4")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0xCB4040", Offset = "0xCB4040", VA = "0xCB4040")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600097A")]
		[Address(RVA = "0xCB409C", Offset = "0xCB409C", VA = "0xCB409C")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0xCB40F8", Offset = "0xCB40F8", VA = "0xCB40F8")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600097C")]
		[Address(RVA = "0xCB4154", Offset = "0xCB4154", VA = "0xCB4154")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600097D")]
		[Address(RVA = "0xCB4314", Offset = "0xCB4314", VA = "0xCB4314")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600097E")]
		[Address(RVA = "0xCB43BC", Offset = "0xCB43BC", VA = "0xCB43BC")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x20001E9")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x600097F")]
		[Address(RVA = "0xCB43C4", Offset = "0xCB43C4", VA = "0xCB43C4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0xCB43C8", Offset = "0xCB43C8", VA = "0xCB43C8")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0xCB436C", Offset = "0xCB436C", VA = "0xCB436C")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0xCB441C", Offset = "0xCB441C", VA = "0xCB441C")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x20001EA")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x20002E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B8E4", Offset = "0x87B8E4")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000F91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000F92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000F93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4000F94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4000F95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4000F96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x17000159")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E04")]
				[Address(RVA = "0xBB45C0", Offset = "0xBB45C0", VA = "0xBB45C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700015A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E06")]
				[Address(RVA = "0xBB4630", Offset = "0xBB4630", VA = "0xBB4630", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E01")]
			[Address(RVA = "0xBB4250", Offset = "0xBB4250", VA = "0xBB4250")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6000E02")]
			[Address(RVA = "0xBB4334", Offset = "0xBB4334", VA = "0xBB4334", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E03")]
			[Address(RVA = "0xBB4338", Offset = "0xBB4338", VA = "0xBB4338", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E05")]
			[Address(RVA = "0xBB45C8", Offset = "0xBB45C8", VA = "0xBB45C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000AF1")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x4000AF2")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x6000983")]
		[Address(RVA = "0xBB3DDC", Offset = "0xBB3DDC", VA = "0xBB3DDC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000984")]
		[Address(RVA = "0xBB3E7C", Offset = "0xBB3E7C", VA = "0xBB3E7C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000985")]
		[Address(RVA = "0xBB4174", Offset = "0xBB4174", VA = "0xBB4174")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000986")]
		[Address(RVA = "0xBB4100", Offset = "0xBB4100", VA = "0xBB4100")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8855E8", Offset = "0x8855E8")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x6000987")]
		[Address(RVA = "0xBB427C", Offset = "0xBB427C", VA = "0xBB427C")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x20001EB")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x20002E5")]
		public enum SelectionState
		{
			[Token(Token = "0x4000F98")]
			Off,
			[Token(Token = "0x4000F99")]
			Selected,
			[Token(Token = "0x4000F9A")]
			Highlighted
		}

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x170000A8")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x6000988")]
			[Address(RVA = "0xBB6BA0", Offset = "0xBB6BA0", VA = "0xBB6BA0")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x6000989")]
			[Address(RVA = "0xBB6BA8", Offset = "0xBB6BA8", VA = "0xBB6BA8")]
			set
			{
			}
		}

		[Token(Token = "0x600098A")]
		[Address(RVA = "0xBB6DA0", Offset = "0xBB6DA0", VA = "0xBB6DA0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600098B")]
		[Address(RVA = "0xBB6FF8", Offset = "0xBB6FF8", VA = "0xBB6FF8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0xBB6C50", Offset = "0xBB6C50", VA = "0xBB6C50")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x600098D")]
		[Address(RVA = "0xBB70E4", Offset = "0xBB70E4", VA = "0xBB70E4")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x20001EC")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x20002E6")]
		public enum SegmentType
		{
			[Token(Token = "0x4000F9C")]
			Straight,
			[Token(Token = "0x4000F9D")]
			LeftTurn,
			[Token(Token = "0x4000F9E")]
			RightTurn,
			[Token(Token = "0x4000F9F")]
			Switch
		}

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x4000B07")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x4000B08")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880DC0", Offset = "0x880DC0")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x170000A9")]
		public float StartDistance
		{
			[Token(Token = "0x600098F")]
			[Address(RVA = "0xBB7150", Offset = "0xBB7150", VA = "0xBB7150")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88564C", Offset = "0x88564C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000990")]
			[Address(RVA = "0xBB7158", Offset = "0xBB7158", VA = "0xBB7158")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x88565C", Offset = "0x88565C")]
			set
			{
			}
		}

		[Token(Token = "0x170000AA")]
		public float GridSize
		{
			[Token(Token = "0x6000991")]
			[Address(RVA = "0xBB7160", Offset = "0xBB7160", VA = "0xBB7160")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000992")]
			[Address(RVA = "0xBB7168", Offset = "0xBB7168", VA = "0xBB7168")]
			private set
			{
			}
		}

		[Token(Token = "0x170000AB")]
		public int SubDivCount
		{
			[Token(Token = "0x6000993")]
			[Address(RVA = "0xBB7170", Offset = "0xBB7170", VA = "0xBB7170")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000994")]
			[Address(RVA = "0xBB7178", Offset = "0xBB7178", VA = "0xBB7178")]
			set
			{
			}
		}

		[Token(Token = "0x170000AC")]
		public SegmentType Type
		{
			[Token(Token = "0x6000995")]
			[Address(RVA = "0xBB7180", Offset = "0xBB7180", VA = "0xBB7180")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x170000AD")]
		public Pose EndPose
		{
			[Token(Token = "0x6000996")]
			[Address(RVA = "0xBB7188", Offset = "0xBB7188", VA = "0xBB7188")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000AE")]
		public float Radius
		{
			[Token(Token = "0x6000997")]
			[Address(RVA = "0xBB7698", Offset = "0xBB7698", VA = "0xBB7698")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000AF")]
		public float SegmentLength
		{
			[Token(Token = "0x6000999")]
			[Address(RVA = "0xBB71F0", Offset = "0xBB71F0", VA = "0xBB71F0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000998")]
		[Address(RVA = "0xBB76A8", Offset = "0xBB76A8", VA = "0xBB76A8")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x600099A")]
		[Address(RVA = "0xBB76C0", Offset = "0xBB76C0", VA = "0xBB76C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600099B")]
		[Address(RVA = "0xBB7230", Offset = "0xBB7230", VA = "0xBB7230")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x600099C")]
		[Address(RVA = "0xBB76C4", Offset = "0xBB76C4", VA = "0xBB76C4")]
		private void Update()
		{
		}

		[Token(Token = "0x600099D")]
		[Address(RVA = "0xBB76C8", Offset = "0xBB76C8", VA = "0xBB76C8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600099E")]
		[Address(RVA = "0xBB7734", Offset = "0xBB7734", VA = "0xBB7734")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x600099F")]
		[Address(RVA = "0xBB83F8", Offset = "0xBB83F8", VA = "0xBB83F8")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x60009A0")]
		[Address(RVA = "0xBB87A0", Offset = "0xBB87A0", VA = "0xBB87A0")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x20001ED")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x20002E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B8F4", Offset = "0x87B8F4")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4000FA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4000FA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x1700015B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E0A")]
				[Address(RVA = "0xBB95CC", Offset = "0xBB95CC", VA = "0xBB95CC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700015C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E0C")]
				[Address(RVA = "0xBB963C", Offset = "0xBB963C", VA = "0xBB963C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E07")]
			[Address(RVA = "0xBB92AC", Offset = "0xBB92AC", VA = "0xBB92AC")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6000E08")]
			[Address(RVA = "0xBB93A8", Offset = "0xBB93A8", VA = "0xBB93A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E09")]
			[Address(RVA = "0xBB93AC", Offset = "0xBB93AC", VA = "0xBB93AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E0B")]
			[Address(RVA = "0xBB95D4", Offset = "0xBB95D4", VA = "0xBB95D4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B0E")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x4000B0F")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0xBB8844", Offset = "0xBB8844", VA = "0xBB8844")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0xBB8918", Offset = "0xBB8918", VA = "0xBB8918")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0xBB89CC", Offset = "0xBB89CC", VA = "0xBB89CC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0xBB8B1C", Offset = "0xBB8B1C", VA = "0xBB8B1C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60009A5")]
		[Address(RVA = "0xBB8CB0", Offset = "0xBB8CB0", VA = "0xBB8CB0")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x60009A6")]
		[Address(RVA = "0xBB8E90", Offset = "0xBB8E90", VA = "0xBB8E90")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0xBB91B8", Offset = "0xBB91B8", VA = "0xBB91B8")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0xBB9048", Offset = "0xBB9048", VA = "0xBB9048")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0xBB905C", Offset = "0xBB905C", VA = "0xBB905C")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0xBB9238", Offset = "0xBB9238", VA = "0xBB9238")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88566C", Offset = "0x88566C")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0xBB92D8", Offset = "0xBB92D8", VA = "0xBB92D8")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x20001EE")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x170000B0")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x60009AC")]
			[Address(RVA = "0xBB9644", Offset = "0xBB9644", VA = "0xBB9644")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0xBB9654", Offset = "0xBB9654", VA = "0xBB9654", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0xBB965C", Offset = "0xBB965C", VA = "0xBB965C", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0xBB9C28", Offset = "0xBB9C28", VA = "0xBB9C28")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x20001EF")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x4000B22")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x4000B23")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x880EC0", Offset = "0x880EC0")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x170000B1")]
		public float Distance
		{
			[Token(Token = "0x60009B0")]
			[Address(RVA = "0xBB96AC", Offset = "0xBB96AC", VA = "0xBB96AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8856D0", Offset = "0x8856D0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009B1")]
			[Address(RVA = "0xBB96B4", Offset = "0xBB96B4", VA = "0xBB96B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8856E0", Offset = "0x8856E0")]
			protected set
			{
			}
		}

		[Token(Token = "0x170000B2")]
		public float Scale
		{
			[Token(Token = "0x60009B2")]
			[Address(RVA = "0xBB9D20", Offset = "0xBB9D20", VA = "0xBB9D20")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009B3")]
			[Address(RVA = "0xBB9D28", Offset = "0xBB9D28", VA = "0xBB9D28")]
			set
			{
			}
		}

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0xBB9658", Offset = "0xBB9658", VA = "0xBB9658", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0xBB9D30", Offset = "0xBB9D30", VA = "0xBB9D30")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0xBB96BC", Offset = "0xBB96BC", VA = "0xBB96BC")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x60009B7")]
		[Address(RVA = "0xBB9AA8", Offset = "0xBB9AA8", VA = "0xBB9AA8")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x60009B8")]
		public abstract void UpdatePosition();

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0xBB9C98", Offset = "0xBB9C98", VA = "0xBB9C98")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x20001F0")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x20002E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B904", Offset = "0x87B904")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x4000FA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x4000FA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x4000FAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x4000FAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x4000FAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x4000FAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x4000FAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x4000FAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x4000FB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x1700015D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E10")]
				[Address(RVA = "0xBBA960", Offset = "0xBBA960", VA = "0xBBA960", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700015E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E12")]
				[Address(RVA = "0xBBA9D0", Offset = "0xBBA9D0", VA = "0xBBA9D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E0D")]
			[Address(RVA = "0xBBA4A4", Offset = "0xBBA4A4", VA = "0xBBA4A4")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6000E0E")]
			[Address(RVA = "0xBBA68C", Offset = "0xBBA68C", VA = "0xBBA68C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E0F")]
			[Address(RVA = "0xBBA690", Offset = "0xBBA690", VA = "0xBBA690", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E11")]
			[Address(RVA = "0xBBA968", Offset = "0xBBA968", VA = "0xBBA968", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0xBB9FE4", Offset = "0xBB9FE4", VA = "0xBB9FE4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0xBBA040", Offset = "0xBBA040", VA = "0xBBA040")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0xBBA14C", Offset = "0xBBA14C", VA = "0xBBA14C")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0xBBA2FC", Offset = "0xBBA2FC", VA = "0xBBA2FC")]
		private void Update()
		{
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0xBBA1B8", Offset = "0xBBA1B8", VA = "0xBBA1B8")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0xBBA40C", Offset = "0xBBA40C", VA = "0xBBA40C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8856F0", Offset = "0x8856F0")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0xBBA4D0", Offset = "0xBBA4D0", VA = "0xBBA4D0")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0xBBA598", Offset = "0xBBA598", VA = "0xBBA598")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x60009C3")]
		[Address(RVA = "0xBBA62C", Offset = "0xBBA62C", VA = "0xBBA62C")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x20001F1")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x20002E9")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4000FB2")]
			Start,
			[Token(Token = "0x4000FB3")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4000FB4")]
			Stop
		}

		[Token(Token = "0x20002EA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B914", Offset = "0x87B914")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x4000FB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x4000FB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x4000FBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x4000FBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4000FBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x4000FBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x1700015F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E16")]
				[Address(RVA = "0xBBB878", Offset = "0xBBB878", VA = "0xBBB878", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000160")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E18")]
				[Address(RVA = "0xBBB8E8", Offset = "0xBBB8E8", VA = "0xBBB8E8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E13")]
			[Address(RVA = "0xBBAD44", Offset = "0xBBAD44", VA = "0xBBAD44")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6000E14")]
			[Address(RVA = "0xBBB52C", Offset = "0xBBB52C", VA = "0xBBB52C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E15")]
			[Address(RVA = "0xBBB530", Offset = "0xBBB530", VA = "0xBBB530", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E17")]
			[Address(RVA = "0xBBB880", Offset = "0xBBB880", VA = "0xBBB880", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B36")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4000B37")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x4000B38")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x4000B39")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x880F20", Offset = "0x880F20")]
		protected float _initialSpeed;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0xBBA9D8", Offset = "0xBBA9D8", VA = "0xBBA9D8")]
		private void Start()
		{
		}

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0xBBAB70", Offset = "0xBBAB70", VA = "0xBBAB70")]
		private void Update()
		{
		}

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0xBBAB7C", Offset = "0xBBAB7C", VA = "0xBBAB7C", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0xBBACF8", Offset = "0xBBACF8", VA = "0xBBACF8")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x60009C8")]
		[Address(RVA = "0xBBAAD4", Offset = "0xBBAAD4", VA = "0xBBAAD4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x885754", Offset = "0x885754")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x60009C9")]
		[Address(RVA = "0xBBAD70", Offset = "0xBBAD70", VA = "0xBBAD70")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0xBBAC84", Offset = "0xBBAC84", VA = "0xBBAC84")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0xBBAFF4", Offset = "0xBBAFF4", VA = "0xBBAFF4")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0xBBB1B4", Offset = "0xBBB1B4", VA = "0xBBB1B4")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x60009CD")]
		[Address(RVA = "0xBBB0B0", Offset = "0xBBB0B0", VA = "0xBBB0B0")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0xBBB270", Offset = "0xBBB270", VA = "0xBBB270")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0xBBB2F8", Offset = "0xBBB2F8", VA = "0xBBB2F8")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0xBBB3C8", Offset = "0xBBB3C8", VA = "0xBBB3C8")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0xBBB4B0", Offset = "0xBBB4B0", VA = "0xBBB4B0")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0xBBB4C0", Offset = "0xBBB4C0", VA = "0xBBB4C0")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x20001F2")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x170000B3")]
		public float TrackLength
		{
			[Token(Token = "0x60009D3")]
			[Address(RVA = "0xBB9E14", Offset = "0xBB9E14", VA = "0xBB9E14")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60009D4")]
			[Address(RVA = "0xBBB8F0", Offset = "0xBBB8F0", VA = "0xBBB8F0")]
			private set
			{
			}
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0xBBB8F8", Offset = "0xBBB8F8", VA = "0xBBB8F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0xBB9E1C", Offset = "0xBB9E1C", VA = "0xBB9E1C")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0xBBB8FC", Offset = "0xBBB8FC", VA = "0xBBB8FC")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0xBBBB90", Offset = "0xBBBB90", VA = "0xBBBB90")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0xBBBCE4", Offset = "0xBBBCE4", VA = "0xBBBCE4")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x20001F3")]
	public class Pose
	{
		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x60009DA")]
		[Address(RVA = "0xBB4A80", Offset = "0xBB4A80", VA = "0xBB4A80")]
		public Pose()
		{
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0xBB4B2C", Offset = "0xBB4B2C", VA = "0xBB4B2C")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x20001F4")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x20002EB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B924", Offset = "0x87B924")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4000FC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x4000FC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x4000FC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x17000161")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E1C")]
				[Address(RVA = "0xBBC3C0", Offset = "0xBBC3C0", VA = "0xBBC3C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000162")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E1E")]
				[Address(RVA = "0xBBC430", Offset = "0xBBC430", VA = "0xBBC430", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E19")]
			[Address(RVA = "0xBBBFD0", Offset = "0xBBBFD0", VA = "0xBBBFD0")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6000E1A")]
			[Address(RVA = "0xBBC1A0", Offset = "0xBBC1A0", VA = "0xBBC1A0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E1B")]
			[Address(RVA = "0xBBC1A4", Offset = "0xBBC1A4", VA = "0xBBC1A4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E1D")]
			[Address(RVA = "0xBBC3C8", Offset = "0xBBC3C8", VA = "0xBBC3C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B934", Offset = "0x87B934")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4000FC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x4000FC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x4000FC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x17000163")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E22")]
				[Address(RVA = "0xBBC528", Offset = "0xBBC528", VA = "0xBBC528", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000164")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E24")]
				[Address(RVA = "0xBBC598", Offset = "0xBBC598", VA = "0xBBC598", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E1F")]
			[Address(RVA = "0xBBC0C8", Offset = "0xBBC0C8", VA = "0xBBC0C8")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6000E20")]
			[Address(RVA = "0xBBC438", Offset = "0xBBC438", VA = "0xBBC438", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E21")]
			[Address(RVA = "0xBBC43C", Offset = "0xBBC43C", VA = "0xBBC43C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E23")]
			[Address(RVA = "0xBBC530", Offset = "0xBBC530", VA = "0xBBC530", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B5C")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x881108", Offset = "0x881108")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x170000B4")]
		public bool IsMoving
		{
			[Token(Token = "0x60009DC")]
			[Address(RVA = "0xBBBD00", Offset = "0xBBBD00", VA = "0xBBBD00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8857B8", Offset = "0x8857B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009DD")]
			[Address(RVA = "0xBBBD08", Offset = "0xBBBD08", VA = "0xBBBD08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8857C8", Offset = "0x8857C8")]
			private set
			{
			}
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0xBBBD14", Offset = "0xBBBD14", VA = "0xBBBD14")]
		private void Start()
		{
		}

		[Token(Token = "0x60009DF")]
		[Address(RVA = "0xBBBD58", Offset = "0xBBBD58", VA = "0xBBBD58")]
		private void Update()
		{
		}

		[Token(Token = "0x60009E0")]
		[Address(RVA = "0xBBBED0", Offset = "0xBBBED0", VA = "0xBBBED0")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0xBBBF38", Offset = "0xBBBF38", VA = "0xBBBF38")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8857D8", Offset = "0x8857D8")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0xBBBFFC", Offset = "0xBBBFFC", VA = "0xBBBFFC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x88583C", Offset = "0x88583C")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0xBBC0F4", Offset = "0xBBC0F4", VA = "0xBBC0F4")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0xBBC198", Offset = "0xBBC198", VA = "0xBBC198")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x20001F5")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0xBBC5A0", Offset = "0xBBC5A0", VA = "0xBBC5A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0xBBC61C", Offset = "0xBBC61C", VA = "0xBBC61C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0xBBC6EC", Offset = "0xBBC6EC", VA = "0xBBC6EC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0xBBC804", Offset = "0xBBC804", VA = "0xBBC804")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0xBBC8D4", Offset = "0xBBC8D4", VA = "0xBBC8D4")]
		private void Update()
		{
		}

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0xBBC9E4", Offset = "0xBBC9E4", VA = "0xBBC9E4")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x20001F6")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x4000B6D")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4000B6E")]
		EUDT_OverlayQuad,
		[Token(Token = "0x4000B6F")]
		EUDT_None,
		[Token(Token = "0x4000B70")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x20001F7")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x20002ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B944", Offset = "0x87B944")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x17000165")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E28")]
				[Address(RVA = "0xBB3D64", Offset = "0xBB3D64", VA = "0xBB3D64", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000166")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E2A")]
				[Address(RVA = "0xBB3DD4", Offset = "0xBB3DD4", VA = "0xBB3DD4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E25")]
			[Address(RVA = "0xBB3270", Offset = "0xBB3270", VA = "0xBB3270")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6000E26")]
			[Address(RVA = "0xBB3A68", Offset = "0xBB3A68", VA = "0xBB3A68", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E27")]
			[Address(RVA = "0xBB3A6C", Offset = "0xBB3A6C", VA = "0xBB3A6C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E29")]
			[Address(RVA = "0xBB3D6C", Offset = "0xBB3D6C", VA = "0xBB3D6C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x4000B72")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x4000B73")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x4000B74")]
		private const string noneID = "NoneID";

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x881148", Offset = "0x881148")]
		public GameObject mainCamera;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x881180", Offset = "0x881180")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0xBB21E0", Offset = "0xBB21E0", VA = "0xBB21E0")]
		private void Start()
		{
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0xBB2C90", Offset = "0xBB2C90", VA = "0xBB2C90")]
		private void Update()
		{
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0xBB2DEC", Offset = "0xBB2DEC", VA = "0xBB2DEC")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0xBB2F6C", Offset = "0xBB2F6C", VA = "0xBB2F6C")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0xBB30EC", Offset = "0xBB30EC", VA = "0xBB30EC")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0xBB2DC0", Offset = "0xBB2DC0", VA = "0xBB2DC0")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0xBB31FC", Offset = "0xBB31FC", VA = "0xBB31FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8858A0", Offset = "0x8858A0")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0xBB329C", Offset = "0xBB329C", VA = "0xBB329C")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0xBB2600", Offset = "0xBB2600", VA = "0xBB2600")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0xBB3400", Offset = "0xBB3400", VA = "0xBB3400")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0xBB32D8", Offset = "0xBB32D8", VA = "0xBB32D8")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0xBB3820", Offset = "0xBB3820", VA = "0xBB3820")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0xBB38FC", Offset = "0xBB38FC", VA = "0xBB38FC")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0xBB3978", Offset = "0xBB3978", VA = "0xBB3978")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x885904", Offset = "0x885904")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0xBB39C8", Offset = "0xBB39C8", VA = "0xBB39C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x885914", Offset = "0x885914")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0xBB3A18", Offset = "0xBB3A18", VA = "0xBB3A18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x885924", Offset = "0x885924")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x20001F8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x87B1E8", Offset = "0x87B1E8")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20002EE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B954", Offset = "0x87B954")]
		private sealed class <>c
		{
			[Token(Token = "0x4000FCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000FCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6000E2C")]
			[Address(RVA = "0xCA5AB8", Offset = "0xCA5AB8", VA = "0xCA5AB8")]
			public <>c()
			{
			}

			[Token(Token = "0x6000E2D")]
			[Address(RVA = "0xCA5AC0", Offset = "0xCA5AC0", VA = "0xCA5AC0")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000B89")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4000B8A")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4000B8B")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4000B8C")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4000B8D")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4000B8E")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4000B8F")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4000B90")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x4000B91")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x4000B92")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x4000B93")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0xCA4AC0", Offset = "0xCA4AC0", VA = "0xCA4AC0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0xCA4B18", Offset = "0xCA4B18", VA = "0xCA4B18")]
		private void Start()
		{
		}

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0xCA4FC0", Offset = "0xCA4FC0", VA = "0xCA4FC0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0xCA508C", Offset = "0xCA508C", VA = "0xCA508C")]
		private void Update()
		{
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0xCA51AC", Offset = "0xCA51AC", VA = "0xCA51AC")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0xCA558C", Offset = "0xCA558C", VA = "0xCA558C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0xCA5724", Offset = "0xCA5724", VA = "0xCA5724")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0xCA58D4", Offset = "0xCA58D4", VA = "0xCA58D4")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0xCA5248", Offset = "0xCA5248", VA = "0xCA5248")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0xCA52E8", Offset = "0xCA52E8", VA = "0xCA52E8")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0xCA4D84", Offset = "0xCA4D84", VA = "0xCA4D84")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0xCA5A3C", Offset = "0xCA5A3C", VA = "0xCA5A3C")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x20001F9")]
	public enum HandPoseId
	{
		[Token(Token = "0x4000BA6")]
		Default,
		[Token(Token = "0x4000BA7")]
		Generic,
		[Token(Token = "0x4000BA8")]
		PingPongBall,
		[Token(Token = "0x4000BA9")]
		Controller
	}
	[Token(Token = "0x20001FA")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x170000B5")]
		public bool AllowPointing
		{
			[Token(Token = "0x6000A07")]
			[Address(RVA = "0xCA5A2C", Offset = "0xCA5A2C", VA = "0xCA5A2C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000B6")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6000A08")]
			[Address(RVA = "0xCA5A34", Offset = "0xCA5A34", VA = "0xCA5A34")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000B7")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6000A09")]
			[Address(RVA = "0xCA5A24", Offset = "0xCA5A24", VA = "0xCA5A24")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0xCA5AFC", Offset = "0xCA5AFC", VA = "0xCA5AFC")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x20001FB")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0xCA5B04", Offset = "0xCA5B04", VA = "0xCA5B04")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0xCA5DD0", Offset = "0xCA5DD0", VA = "0xCA5DD0")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0xCA5E40", Offset = "0xCA5E40", VA = "0xCA5E40")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0xCA5E90", Offset = "0xCA5E90", VA = "0xCA5E90")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x20001FC")]
	public enum FaceType : uint
	{
		[Token(Token = "0x4000BB1")]
		TRIANGLES,
		[Token(Token = "0x4000BB2")]
		QUADS
	}
	[Token(Token = "0x20001FD")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x4000BB4")]
		ABSORPTION,
		[Token(Token = "0x4000BB5")]
		TRANSMISSION,
		[Token(Token = "0x4000BB6")]
		SCATTERING
	}
	[Token(Token = "0x20001FE")]
	public struct MeshGroup
	{
		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x20001FF")]
	public static class AvatarLogger
	{
		[Token(Token = "0x4000BBB")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x4000BBC")]
		public const string Tab = "    ";

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0xCA8F8C", Offset = "0xCA8F8C", VA = "0xCA8F8C")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x885934", Offset = "0x885934")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x885934", Offset = "0x885934")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0xCA9014", Offset = "0xCA9014", VA = "0xCA9014")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x885994", Offset = "0x885994")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x885994", Offset = "0x885994")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0xCA90AC", Offset = "0xCA90AC", VA = "0xCA90AC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8859F4", Offset = "0x8859F4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8859F4", Offset = "0x8859F4")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0xCA9134", Offset = "0xCA9134", VA = "0xCA9134")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x885A54", Offset = "0x885A54")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x885A54", Offset = "0x885A54")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0xCA91BC", Offset = "0xCA91BC", VA = "0xCA91BC")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x885AB4", Offset = "0x885AB4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x885AB4", Offset = "0x885AB4")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x2000200")]
	public class CAPI
	{
		[Token(Token = "0x20002EF")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x20002F0")]
		public enum Result
		{
			[Token(Token = "0x4000FD0")]
			Success = 0,
			[Token(Token = "0x4000FD1")]
			Failure = -1000,
			[Token(Token = "0x4000FD2")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x4000FD3")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x4000FD4")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x4000FD5")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x4000FD6")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x4000FD7")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x4000FD8")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x20002F1")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x4000FD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x6000E32")]
			[Address(RVA = "0xCB1ABC", Offset = "0xCB1ABC", VA = "0xCB1ABC")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x4000BBD")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x4000BC5")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x6000A14")]
		[Address(RVA = "0xCA92BC", Offset = "0xCA92BC", VA = "0xCA92BC")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0xCA936C", Offset = "0xCA936C", VA = "0xCA936C")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0xCA9530", Offset = "0xCA9530", VA = "0xCA9530")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000A17")]
		[Address(RVA = "0xCA9610", Offset = "0xCA9610", VA = "0xCA9610")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x6000A18")]
		[Address(RVA = "0xCA96A0", Offset = "0xCA96A0", VA = "0xCA96A0")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x6000A19")]
		[Address(RVA = "0xCA9730", Offset = "0xCA9730", VA = "0xCA9730")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0xCA97D0", Offset = "0xCA97D0", VA = "0xCA97D0")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0xCA98C8", Offset = "0xCA98C8", VA = "0xCA98C8")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0xCA9968", Offset = "0xCA9968", VA = "0xCA9968")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0xCA9A60", Offset = "0xCA9A60", VA = "0xCA9A60")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0xCA9B00", Offset = "0xCA9B00", VA = "0xCA9B00")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0xCA9BA0", Offset = "0xCA9BA0", VA = "0xCA9BA0")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000A20")]
		[Address(RVA = "0xCA9C40", Offset = "0xCA9C40", VA = "0xCA9C40")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6000A21")]
		[Address(RVA = "0xCA9CE0", Offset = "0xCA9CE0", VA = "0xCA9CE0")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x6000A22")]
		[Address(RVA = "0xCA9D90", Offset = "0xCA9D90", VA = "0xCA9D90")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6000A23")]
		[Address(RVA = "0xCA9E40", Offset = "0xCA9E40", VA = "0xCA9E40")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6000A24")]
		[Address(RVA = "0xCA9EF0", Offset = "0xCA9EF0", VA = "0xCA9EF0")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6000A25")]
		[Address(RVA = "0xCA9F90", Offset = "0xCA9F90", VA = "0xCA9F90")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6000A26")]
		[Address(RVA = "0xCAA030", Offset = "0xCAA030", VA = "0xCAA030")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6000A27")]
		[Address(RVA = "0xCAA0E0", Offset = "0xCAA0E0", VA = "0xCAA0E0")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x6000A28")]
		[Address(RVA = "0xCAA190", Offset = "0xCAA190", VA = "0xCAA190")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x6000A29")]
		[Address(RVA = "0xCAA240", Offset = "0xCAA240", VA = "0xCAA240")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0xCAA2E0", Offset = "0xCAA2E0", VA = "0xCAA2E0")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0xCAA3A8", Offset = "0xCAA3A8", VA = "0xCAA3A8")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0xCAA42C", Offset = "0xCAA42C", VA = "0xCAA42C")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0xCAA4EC", Offset = "0xCAA4EC", VA = "0xCAA4EC")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0xCAA5CC", Offset = "0xCAA5CC", VA = "0xCAA5CC")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0xCAA6BC", Offset = "0xCAA6BC", VA = "0xCAA6BC")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x6000A30")]
		[Address(RVA = "0xCAA76C", Offset = "0xCAA76C", VA = "0xCAA76C")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000A31")]
		[Address(RVA = "0xCAA81C", Offset = "0xCAA81C", VA = "0xCAA81C")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000A32")]
		[Address(RVA = "0xCAA8CC", Offset = "0xCAA8CC", VA = "0xCAA8CC")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000A33")]
		[Address(RVA = "0xCAA97C", Offset = "0xCAA97C", VA = "0xCAA97C")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6000A34")]
		[Address(RVA = "0xCAAA2C", Offset = "0xCAAA2C", VA = "0xCAAA2C")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0xCAAACC", Offset = "0xCAAACC", VA = "0xCAAACC")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0xCAAC0C", Offset = "0xCAAC0C", VA = "0xCAAC0C")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000A37")]
		[Address(RVA = "0xCAAB5C", Offset = "0xCAAB5C", VA = "0xCAAB5C")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0xCAAE00", Offset = "0xCAAE00", VA = "0xCAAE00")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000A39")]
		[Address(RVA = "0xCAAF38", Offset = "0xCAAF38", VA = "0xCAAF38")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000A3A")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0xCAAFD8", Offset = "0xCAAFD8", VA = "0xCAAFD8")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0xCAB248", Offset = "0xCAB248", VA = "0xCAB248")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0xCAB2E8", Offset = "0xCAB2E8", VA = "0xCAB2E8")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0xCAB420", Offset = "0xCAB420", VA = "0xCAB420")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0xCAB4C0", Offset = "0xCAB4C0", VA = "0xCAB4C0")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000A40")]
		[Address(RVA = "0xCAB5F8", Offset = "0xCAB5F8", VA = "0xCAB5F8")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0xCAB698", Offset = "0xCAB698", VA = "0xCAB698")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000A42")]
		[Address(RVA = "0xCAB7D0", Offset = "0xCAB7D0", VA = "0xCAB7D0")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0xCAB870", Offset = "0xCAB870", VA = "0xCAB870")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000A44")]
		[Address(RVA = "0xCAB9A8", Offset = "0xCAB9A8", VA = "0xCAB9A8")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000A45")]
		[Address(RVA = "0xCABA48", Offset = "0xCABA48", VA = "0xCABA48")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x6000A46")]
		[Address(RVA = "0xCABAE8", Offset = "0xCABAE8", VA = "0xCABAE8")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6000A47")]
		[Address(RVA = "0xCABBA0", Offset = "0xCABBA0", VA = "0xCABBA0")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0xCABC40", Offset = "0xCABC40", VA = "0xCABC40")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0xCABDFC", Offset = "0xCABDFC", VA = "0xCABDFC")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0xCABF18", Offset = "0xCABF18", VA = "0xCABF18")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0xCABD5C", Offset = "0xCABD5C", VA = "0xCABD5C")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0xCABFB8", Offset = "0xCABFB8", VA = "0xCABFB8")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0xCAC058", Offset = "0xCAC058", VA = "0xCAC058")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0xCAC108", Offset = "0xCAC108", VA = "0xCAC108")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0xCAC1A8", Offset = "0xCAC1A8", VA = "0xCAC1A8")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6000A50")]
		[Address(RVA = "0xCAC258", Offset = "0xCAC258", VA = "0xCAC258")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000A51")]
		[Address(RVA = "0xCAC2F8", Offset = "0xCAC2F8", VA = "0xCAC2F8")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0xCAC398", Offset = "0xCAC398", VA = "0xCAC398")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000A53")]
		[Address(RVA = "0xCAC5C4", Offset = "0xCAC5C4", VA = "0xCAC5C4")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x6000A54")]
		[Address(RVA = "0xCAC674", Offset = "0xCAC674", VA = "0xCAC674")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000A55")]
		[Address(RVA = "0xCAC828", Offset = "0xCAC828", VA = "0xCAC828")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0xCAC8E0", Offset = "0xCAC8E0", VA = "0xCAC8E0")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x6000A57")]
		[Address(RVA = "0xCAC9EC", Offset = "0xCAC9EC", VA = "0xCAC9EC")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6000A58")]
		[Address(RVA = "0xCACA8C", Offset = "0xCACA8C", VA = "0xCACA8C")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x6000A59")]
		[Address(RVA = "0xCACB2C", Offset = "0xCACB2C", VA = "0xCACB2C")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0xCACC34", Offset = "0xCACC34", VA = "0xCACC34")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0xCACCD4", Offset = "0xCACCD4", VA = "0xCACCD4")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0xCACDDC", Offset = "0xCACDDC", VA = "0xCACDDC")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0xCACE7C", Offset = "0xCACE7C", VA = "0xCACE7C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0xCACF2C", Offset = "0xCACF2C", VA = "0xCACF2C")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0xCACFDC", Offset = "0xCACFDC", VA = "0xCACFDC")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000A60")]
		[Address(RVA = "0xCAD08C", Offset = "0xCAD08C", VA = "0xCAD08C")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000A61")]
		[Address(RVA = "0xCAD12C", Offset = "0xCAD12C", VA = "0xCAD12C")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000A62")]
		[Address(RVA = "0xCAD1D4", Offset = "0xCAD1D4", VA = "0xCAD1D4")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000A63")]
		[Address(RVA = "0xCAD27C", Offset = "0xCAD27C", VA = "0xCAD27C")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000A64")]
		[Address(RVA = "0xCAD31C", Offset = "0xCAD31C", VA = "0xCAD31C")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000A65")]
		[Address(RVA = "0xCAD3BC", Offset = "0xCAD3BC", VA = "0xCAD3BC")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000A66")]
		[Address(RVA = "0xCAD490", Offset = "0xCAD490", VA = "0xCAD490")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000A67")]
		[Address(RVA = "0xCAD540", Offset = "0xCAD540", VA = "0xCAD540")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000A68")]
		[Address(RVA = "0xCAD5F0", Offset = "0xCAD5F0", VA = "0xCAD5F0")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000A69")]
		[Address(RVA = "0xCAD690", Offset = "0xCAD690", VA = "0xCAD690")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0xCAD730", Offset = "0xCAD730", VA = "0xCAD730")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0xCAD7D0", Offset = "0xCAD7D0", VA = "0xCAD7D0")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0xCAD888", Offset = "0xCAD888", VA = "0xCAD888")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0xCAD938", Offset = "0xCAD938", VA = "0xCAD938")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0xCAD9E8", Offset = "0xCAD9E8", VA = "0xCAD9E8")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0xCADA98", Offset = "0xCADA98", VA = "0xCADA98")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000A70")]
		[Address(RVA = "0xCADB50", Offset = "0xCADB50", VA = "0xCADB50")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6000A71")]
		[Address(RVA = "0xCADC08", Offset = "0xCADC08", VA = "0xCADC08")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000A72")]
		[Address(RVA = "0xCADCA8", Offset = "0xCADCA8", VA = "0xCADCA8")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0xCADD48", Offset = "0xCADD48", VA = "0xCADD48")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x6000A74")]
		[Address(RVA = "0xCADE50", Offset = "0xCADE50", VA = "0xCADE50")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0xCADEF0", Offset = "0xCADEF0", VA = "0xCADEF0")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x6000A76")]
		[Address(RVA = "0xCADFF8", Offset = "0xCADFF8", VA = "0xCADFF8")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0xCAE098", Offset = "0xCAE098", VA = "0xCAE098")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000A78")]
		[Address(RVA = "0xCAE1C0", Offset = "0xCAE1C0", VA = "0xCAE1C0")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0xCAE260", Offset = "0xCAE260", VA = "0xCAE260")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0xCAE408", Offset = "0xCAE408", VA = "0xCAE408")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0xCAE690", Offset = "0xCAE690", VA = "0xCAE690")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0xCAE368", Offset = "0xCAE368", VA = "0xCAE368")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0xCAE740", Offset = "0xCAE740", VA = "0xCAE740")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0xCAE7E0", Offset = "0xCAE7E0", VA = "0xCAE7E0")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0xCAE890", Offset = "0xCAE890", VA = "0xCAE890")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6000A80")]
		[Address(RVA = "0xCAE940", Offset = "0xCAE940", VA = "0xCAE940")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6000A81")]
		[Address(RVA = "0xCAE9F0", Offset = "0xCAE9F0", VA = "0xCAE9F0")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6000A82")]
		[Address(RVA = "0xCAEAB0", Offset = "0xCAEAB0", VA = "0xCAEAB0")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6000A83")]
		[Address(RVA = "0xCAEB70", Offset = "0xCAEB70", VA = "0xCAEB70")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x6000A84")]
		[Address(RVA = "0xCAEC30", Offset = "0xCAEC30", VA = "0xCAEC30")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000A85")]
		[Address(RVA = "0xCAECD0", Offset = "0xCAECD0", VA = "0xCAECD0")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6000A86")]
		[Address(RVA = "0xCAED70", Offset = "0xCAED70", VA = "0xCAED70")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000A87")]
		[Address(RVA = "0xCAEE10", Offset = "0xCAEE10", VA = "0xCAEE10")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000A88")]
		[Address(RVA = "0xCAEEB0", Offset = "0xCAEEB0", VA = "0xCAEEB0")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6000A89")]
		[Address(RVA = "0xCAEF50", Offset = "0xCAEF50", VA = "0xCAEF50")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0xCAF094", Offset = "0xCAF094", VA = "0xCAF094")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0xCAF14C", Offset = "0xCAF14C", VA = "0xCAF14C")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0xCAF1EC", Offset = "0xCAF1EC", VA = "0xCAF1EC")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0xCAF250", Offset = "0xCAF250", VA = "0xCAF250")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0xCAF36C", Offset = "0xCAF36C", VA = "0xCAF36C")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0xCAF41C", Offset = "0xCAF41C", VA = "0xCAF41C")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000A90")]
		[Address(RVA = "0xCAF560", Offset = "0xCAF560", VA = "0xCAF560")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x6000A91")]
		[Address(RVA = "0xCAF610", Offset = "0xCAF610", VA = "0xCAF610")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0xCAF6D8", Offset = "0xCAF6D8", VA = "0xCAF6D8")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000A93")]
		[Address(RVA = "0xCAFB00", Offset = "0xCAFB00", VA = "0xCAFB00")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x6000A94")]
		[Address(RVA = "0xCAFBA0", Offset = "0xCAFBA0", VA = "0xCAFBA0")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0xCAFC58", Offset = "0xCAFC58", VA = "0xCAFC58")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000A96")]
		[Address(RVA = "0xCB05BC", Offset = "0xCB05BC", VA = "0xCB05BC")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x6000A97")]
		[Address(RVA = "0xCB065C", Offset = "0xCB065C", VA = "0xCB065C")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0xCA9254", Offset = "0xCA9254", VA = "0xCA9254")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x885B14", Offset = "0x885B14")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000A99")]
		[Address(RVA = "0xCB0714", Offset = "0xCB0714", VA = "0xCB0714")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0xCB07B8", Offset = "0xCB07B8", VA = "0xCB07B8")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0xCB0858", Offset = "0xCB0858", VA = "0xCB0858")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0xCB08F8", Offset = "0xCB08F8", VA = "0xCB08F8")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0xCB0998", Offset = "0xCB0998", VA = "0xCB0998")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0xCB1608", Offset = "0xCB1608", VA = "0xCB1608")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0xCB16A8", Offset = "0xCB16A8", VA = "0xCB16A8")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0xCB1BB8", Offset = "0xCB1BB8", VA = "0xCB1BB8")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0xCB1A2C", Offset = "0xCB1A2C", VA = "0xCB1A2C")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0xCB1C48", Offset = "0xCB1C48", VA = "0xCB1C48")]
		public CAPI()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x2000201")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0x881238", Offset = "0x881238")]
		public SoundFXRef testSound1;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0x167503C", Offset = "0x167503C", VA = "0x167503C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x1675040", Offset = "0x1675040", VA = "0x1675040")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x1675148", Offset = "0x1675148", VA = "0x1675148")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x2000202")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x881284", Offset = "0x881284")]
		public bool autoRetrigger;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x8812BC", Offset = "0x8812BC")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8812E0", Offset = "0x8812E0")]
		public Transform[] playPositions;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x166A688", Offset = "0x166A688", VA = "0x166A688")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x166A804", Offset = "0x166A804", VA = "0x166A804")]
		private void Update()
		{
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x166AA88", Offset = "0x166AA88", VA = "0x166AA88")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x166A864", Offset = "0x166A864", VA = "0x166A864")]
		public void Play()
		{
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0x166ABF0", Offset = "0x166ABF0", VA = "0x166ABF0")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0x166AD84", Offset = "0x166AD84", VA = "0x166AD84")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x2000203")]
	public enum PreloadSounds
	{
		[Token(Token = "0x4000BD4")]
		Default,
		[Token(Token = "0x4000BD5")]
		Preload,
		[Token(Token = "0x4000BD6")]
		ManualPreload
	}
	[Token(Token = "0x2000204")]
	public enum Fade
	{
		[Token(Token = "0x4000BD8")]
		In,
		[Token(Token = "0x4000BD9")]
		Out
	}
	[Serializable]
	[Token(Token = "0x2000205")]
	public class SoundGroup
	{
		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x881318", Offset = "0x881318")]
		public int maxPlayingSounds;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0x1674F1C", Offset = "0x1674F1C", VA = "0x1674F1C")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x1674FB0", Offset = "0x1674FB0", VA = "0x1674FB0")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x1673710", Offset = "0x1673710", VA = "0x1673710")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x1673848", Offset = "0x1673848", VA = "0x1673848")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x16744D8", Offset = "0x16744D8", VA = "0x16744D8")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000206")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x20002F2")]
		public enum Fade
		{
			[Token(Token = "0x4000FDB")]
			In,
			[Token(Token = "0x4000FDC")]
			Out
		}

		[Token(Token = "0x20002F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B964", Offset = "0x87B964")]
		private sealed class <>c__DisplayClass75_0
		{
			[Token(Token = "0x4000FDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x6000E34")]
			[Address(RVA = "0x166FEA8", Offset = "0x166FEA8", VA = "0x166FEA8")]
			public <>c__DisplayClass75_0()
			{
			}

			[Token(Token = "0x6000E35")]
			[Address(RVA = "0x1673040", Offset = "0x1673040", VA = "0x1673040")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20002F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B974", Offset = "0x87B974")]
		private sealed class <>c
		{
			[Token(Token = "0x4000FDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000FDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__75_1;

			[Token(Token = "0x6000E37")]
			[Address(RVA = "0x1672FA4", Offset = "0x1672FA4", VA = "0x1672FA4")]
			public <>c()
			{
			}

			[Token(Token = "0x6000E38")]
			[Address(RVA = "0x1672FAC", Offset = "0x1672FAC", VA = "0x1672FAC")]
			internal bool <FindFreeEmitter>b__75_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x881344", Offset = "0x881344")]
		public bool makePersistent;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88137C", Offset = "0x88137C")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8813B4", Offset = "0x8813B4")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8813EC", Offset = "0x8813EC")]
		public AudioMixer audioMixer;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x881424", Offset = "0x881424")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88145C", Offset = "0x88145C")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x881494", Offset = "0x881494")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8814CC", Offset = "0x8814CC")]
		public bool verboseLogging;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x881504", Offset = "0x881504")]
		public int maxSoundEmitters;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88153C", Offset = "0x88153C")]
		public float volumeSoundFX;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x881574", Offset = "0x881574")]
		public float soundFxFadeSecs;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x170000B8")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x6000AB2")]
			[Address(RVA = "0x166AE40", Offset = "0x166AE40", VA = "0x166AE40")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000B9")]
		public static AudioManager Instance
		{
			[Token(Token = "0x6000AB3")]
			[Address(RVA = "0x166AF24", Offset = "0x166AF24", VA = "0x166AF24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BA")]
		public static float NearFallOff
		{
			[Token(Token = "0x6000AB4")]
			[Address(RVA = "0x166AF8C", Offset = "0x166AF8C", VA = "0x166AF8C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000BB")]
		public static float FarFallOff
		{
			[Token(Token = "0x6000AB5")]
			[Address(RVA = "0x166B004", Offset = "0x166B004", VA = "0x166B004")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000BC")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x6000AB6")]
			[Address(RVA = "0x166B07C", Offset = "0x166B07C", VA = "0x166B07C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BD")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x6000AB7")]
			[Address(RVA = "0x166B0F4", Offset = "0x166B0F4", VA = "0x166B0F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BE")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x6000AB8")]
			[Address(RVA = "0x166B16C", Offset = "0x166B16C", VA = "0x166B16C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BF")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x6000AC3")]
			[Address(RVA = "0x166D7CC", Offset = "0x166D7CC", VA = "0x166D7CC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x166B1E4", Offset = "0x166B1E4", VA = "0x166B1E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x166B41C", Offset = "0x166B41C", VA = "0x166B41C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x166B1E8", Offset = "0x166B1E8", VA = "0x166B1E8")]
		private void Init()
		{
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x166C5C0", Offset = "0x166C5C0", VA = "0x166C5C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0x166B574", Offset = "0x166B574", VA = "0x166B574")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x166CD54", Offset = "0x166CD54", VA = "0x166CD54")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x166CF04", Offset = "0x166CF04", VA = "0x166CF04")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x166D0BC", Offset = "0x166D0BC", VA = "0x166D0BC")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x166D1C4", Offset = "0x166D1C4", VA = "0x166D1C4")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0x166D288", Offset = "0x166D288", VA = "0x166D288")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x166BD60", Offset = "0x166BD60", VA = "0x166BD60")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x166C5C4", Offset = "0x166C5C4", VA = "0x166C5C4")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0x166DAAC", Offset = "0x166DAAC", VA = "0x166DAAC")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x166DBA8", Offset = "0x166DBA8", VA = "0x166DBA8")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x166DCA8", Offset = "0x166DCA8", VA = "0x166DCA8")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x166D92C", Offset = "0x166D92C", VA = "0x166D92C")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0x166DE88", Offset = "0x166DE88", VA = "0x166DE88")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0x166E010", Offset = "0x166E010", VA = "0x166E010")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0x166E248", Offset = "0x166E248", VA = "0x166E248")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x166AB20", Offset = "0x166AB20", VA = "0x166AB20")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0x166ACB4", Offset = "0x166ACB4", VA = "0x166ACB4")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0x166E424", Offset = "0x166E424", VA = "0x166E424")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x166E508", Offset = "0x166E508", VA = "0x166E508")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x166E5D4", Offset = "0x166E5D4", VA = "0x166E5D4")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x166E700", Offset = "0x166E700", VA = "0x166E700")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0x166E7C0", Offset = "0x166E7C0", VA = "0x166E7C0")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0x166E8D8", Offset = "0x166E8D8", VA = "0x166E8D8")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0x166F6C0", Offset = "0x166F6C0", VA = "0x166F6C0")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0x166FEB0", Offset = "0x166FEB0", VA = "0x166FEB0")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0x167005C", Offset = "0x167005C", VA = "0x167005C")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x1671240", Offset = "0x1671240", VA = "0x1671240")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x166EAAC", Offset = "0x166EAAC", VA = "0x166EAAC")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0x1671364", Offset = "0x1671364", VA = "0x1671364")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0x1671478", Offset = "0x1671478", VA = "0x1671478")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x1671598", Offset = "0x1671598", VA = "0x1671598")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x1671A40", Offset = "0x1671A40", VA = "0x1671A40")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x1671C90", Offset = "0x1671C90", VA = "0x1671C90")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0x1671DBC", Offset = "0x1671DBC", VA = "0x1671DBC")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x1671FAC", Offset = "0x1671FAC", VA = "0x1671FAC")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0x1672088", Offset = "0x1672088", VA = "0x1672088")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0x16721D8", Offset = "0x16721D8", VA = "0x16721D8")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0x1672694", Offset = "0x1672694", VA = "0x1672694")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x2000207")]
	public enum EmitterChannel
	{
		[Token(Token = "0x4000C01")]
		None = -1,
		[Token(Token = "0x4000C02")]
		Reserved,
		[Token(Token = "0x4000C03")]
		Any
	}
	[Serializable]
	[Token(Token = "0x2000208")]
	public class MixerSnapshot
	{
		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0x1673140", Offset = "0x1673140", VA = "0x1673140")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x2000209")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minDefaultVal;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDefaultVal;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float min;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float max;

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0x16730E4", Offset = "0x16730E4", VA = "0x16730E4")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x200020A")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x20002F5")]
		public enum FadeState
		{
			[Token(Token = "0x4000FE1")]
			Null,
			[Token(Token = "0x4000FE2")]
			FadingIn,
			[Token(Token = "0x4000FE3")]
			FadingOut,
			[Token(Token = "0x4000FE4")]
			Ducking
		}

		[Token(Token = "0x20002F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B984", Offset = "0x87B984")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000FE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x4000FE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x4000FEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x17000167")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E3C")]
				[Address(RVA = "0x1673E08", Offset = "0x1673E08", VA = "0x1673E08", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000168")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E3E")]
				[Address(RVA = "0x1673E78", Offset = "0x1673E78", VA = "0x1673E78", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E39")]
			[Address(RVA = "0x1673A44", Offset = "0x1673A44", VA = "0x1673A44")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x6000E3A")]
			[Address(RVA = "0x1673CF0", Offset = "0x1673CF0", VA = "0x1673CF0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E3B")]
			[Address(RVA = "0x1673CF4", Offset = "0x1673CF4", VA = "0x1673CF4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E3D")]
			[Address(RVA = "0x1673E10", Offset = "0x1673E10", VA = "0x1673E10", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002F7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B994", Offset = "0x87B994")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000FEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x4000FEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x4000FF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x4000FF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x4000FF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4000FF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x17000169")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E42")]
				[Address(RVA = "0x1674374", Offset = "0x1674374", VA = "0x1674374", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700016A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E44")]
				[Address(RVA = "0x16743E4", Offset = "0x16743E4", VA = "0x16743E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E3F")]
			[Address(RVA = "0x1673C80", Offset = "0x1673C80", VA = "0x1673C80")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x6000E40")]
			[Address(RVA = "0x16741D0", Offset = "0x16741D0", VA = "0x16741D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E41")]
			[Address(RVA = "0x16741D4", Offset = "0x16741D4", VA = "0x16741D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E43")]
			[Address(RVA = "0x167437C", Offset = "0x167437C", VA = "0x167437C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20002F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x87B9A4", Offset = "0x87B9A4")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000FF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000FF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000FF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x4000FF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x4000FF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x4000FF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4000FFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x4000FFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x4000FFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x4000FFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x4000FFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x4000FFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x1700016B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E48")]
				[Address(RVA = "0x1674158", Offset = "0x1674158", VA = "0x1674158", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700016C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E4A")]
				[Address(RVA = "0x16741C8", Offset = "0x16741C8", VA = "0x16741C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E45")]
			[Address(RVA = "0x1673CAC", Offset = "0x1673CAC", VA = "0x1673CAC")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6000E46")]
			[Address(RVA = "0x1673E80", Offset = "0x1673E80", VA = "0x1673E80", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E47")]
			[Address(RVA = "0x1673E84", Offset = "0x1673E84", VA = "0x1673E84", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E49")]
			[Address(RVA = "0x1674160", Offset = "0x1674160", VA = "0x1674160", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x170000C0")]
		public float volume
		{
			[Token(Token = "0x6000AE7")]
			[Address(RVA = "0x1671210", Offset = "0x1671210", VA = "0x1671210")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AE8")]
			[Address(RVA = "0x16731E0", Offset = "0x16731E0", VA = "0x16731E0")]
			set
			{
			}
		}

		[Token(Token = "0x170000C1")]
		public float pitch
		{
			[Token(Token = "0x6000AE9")]
			[Address(RVA = "0x1673220", Offset = "0x1673220", VA = "0x1673220")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AEA")]
			[Address(RVA = "0x1673250", Offset = "0x1673250", VA = "0x1673250")]
			set
			{
			}
		}

		[Token(Token = "0x170000C2")]
		public AudioClip clip
		{
			[Token(Token = "0x6000AEB")]
			[Address(RVA = "0x1673290", Offset = "0x1673290", VA = "0x1673290")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000AEC")]
			[Address(RVA = "0x16732C0", Offset = "0x16732C0", VA = "0x16732C0")]
			set
			{
			}
		}

		[Token(Token = "0x170000C3")]
		public float time
		{
			[Token(Token = "0x6000AED")]
			[Address(RVA = "0x16732F8", Offset = "0x16732F8", VA = "0x16732F8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000AEE")]
			[Address(RVA = "0x166E898", Offset = "0x166E898", VA = "0x166E898")]
			set
			{
			}
		}

		[Token(Token = "0x170000C4")]
		public float length
		{
			[Token(Token = "0x6000AEF")]
			[Address(RVA = "0x1673328", Offset = "0x1673328", VA = "0x1673328")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000C5")]
		public bool loop
		{
			[Token(Token = "0x6000AF0")]
			[Address(RVA = "0x1673400", Offset = "0x1673400", VA = "0x1673400")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AF1")]
			[Address(RVA = "0x1673430", Offset = "0x1673430", VA = "0x1673430")]
			set
			{
			}
		}

		[Token(Token = "0x170000C6")]
		public bool mute
		{
			[Token(Token = "0x6000AF2")]
			[Address(RVA = "0x1673468", Offset = "0x1673468", VA = "0x1673468")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000AF3")]
			[Address(RVA = "0x1673498", Offset = "0x1673498", VA = "0x1673498")]
			set
			{
			}
		}

		[Token(Token = "0x170000C7")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x6000AF4")]
			[Address(RVA = "0x16734D0", Offset = "0x16734D0", VA = "0x16734D0")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x6000AF5")]
			[Address(RVA = "0x1673500", Offset = "0x1673500", VA = "0x1673500")]
			set
			{
			}
		}

		[Token(Token = "0x170000C8")]
		public bool isPlaying
		{
			[Token(Token = "0x6000AF6")]
			[Address(RVA = "0x1673538", Offset = "0x1673538", VA = "0x1673538")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x1673568", Offset = "0x1673568", VA = "0x1673568")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x16711FC", Offset = "0x16711FC", VA = "0x16711FC")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0x1671470", Offset = "0x1671470", VA = "0x1671470")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0x1671590", Offset = "0x1671590", VA = "0x1671590")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0x166D83C", Offset = "0x166D83C", VA = "0x166D83C")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0x166D834", Offset = "0x166D834", VA = "0x166D834")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0x1671EFC", Offset = "0x1671EFC", VA = "0x1671EFC")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0x166DA44", Offset = "0x166DA44", VA = "0x166DA44")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0x16737A0", Offset = "0x16737A0", VA = "0x16737A0")]
		public void Play()
		{
		}

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0x1673808", Offset = "0x1673808", VA = "0x1673808")]
		public void Pause()
		{
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x166D844", Offset = "0x166D844", VA = "0x166D844")]
		public void Stop()
		{
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0x16738D8", Offset = "0x16738D8", VA = "0x16738D8")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0x1671930", Offset = "0x1671930", VA = "0x1671930")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0x1671BAC", Offset = "0x1671BAC", VA = "0x1671BAC")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0x166DE38", Offset = "0x166DE38", VA = "0x166DE38")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0x167394C", Offset = "0x167394C", VA = "0x167394C")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0x1673978", Offset = "0x1673978", VA = "0x1673978")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x885B78", Offset = "0x885B78")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0x1673A70", Offset = "0x1673A70", VA = "0x1673A70")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0x166E320", Offset = "0x166E320", VA = "0x166E320")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0x166E3A4", Offset = "0x166E3A4", VA = "0x166E3A4")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0x166E19C", Offset = "0x166E19C", VA = "0x166E19C")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0x166DF60", Offset = "0x166DF60", VA = "0x166DF60")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0x1673AE8", Offset = "0x1673AE8", VA = "0x1673AE8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x885BDC", Offset = "0x885BDC")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0x1673B94", Offset = "0x1673B94", VA = "0x1673B94")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x885C40", Offset = "0x885C40")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0x1673CD8", Offset = "0x1673CD8", VA = "0x1673CD8")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x200020B")]
	public enum SoundFXNext
	{
		[Token(Token = "0x4000C1A")]
		Random,
		[Token(Token = "0x4000C1B")]
		Sequential
	}
	[Token(Token = "0x200020C")]
	public enum FreqHint
	{
		[Token(Token = "0x4000C1D")]
		None,
		[Token(Token = "0x4000C1E")]
		Wide,
		[Token(Token = "0x4000C1F")]
		Narrow
	}
	[Token(Token = "0x200020D")]
	public enum SoundPriority
	{
		[Token(Token = "0x4000C21")]
		VeryLow = -2,
		[Token(Token = "0x4000C22")]
		Low,
		[Token(Token = "0x4000C23")]
		Default,
		[Token(Token = "0x4000C24")]
		High,
		[Token(Token = "0x4000C25")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x200020E")]
	public class OSPProps
	{
		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x88165C", Offset = "0x88165C")]
		public bool enableSpatialization;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x881694", Offset = "0x881694")]
		public bool useFastOverride;

		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8816CC", Offset = "0x8816CC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8816CC", Offset = "0x8816CC")]
		public float gain;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x881720", Offset = "0x881720")]
		public bool enableInvSquare;

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x881758", Offset = "0x881758")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x881758", Offset = "0x881758")]
		public float volumetric;

		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8817B0", Offset = "0x8817B0")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x8817B0", Offset = "0x8817B0")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0x1673150", Offset = "0x1673150", VA = "0x1673150")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200020F")]
	public class SoundFX
	{
		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x881810", Offset = "0x881810")]
		public string name;

		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x881848", Offset = "0x881848")]
		public SoundFXNext playback;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x881880", Offset = "0x881880")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x881880", Offset = "0x881880")]
		public float volume;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8818D4", Offset = "0x8818D4")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x8818D4", Offset = "0x8818D4")]
		public Vector2 pitchVariance;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x881930", Offset = "0x881930")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x881930", Offset = "0x881930")]
		public Vector2 falloffDistance;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x881990", Offset = "0x881990")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8819C8", Offset = "0x8819C8")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x881A00", Offset = "0x881A00")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x881A38", Offset = "0x881A38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x881A38", Offset = "0x881A38")]
		public float spread;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x881A90", Offset = "0x881A90")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x881A90", Offset = "0x881A90")]
		public float pctChanceToPlay;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x881AE4", Offset = "0x881AE4")]
		public SoundPriority priority;

		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x881B1C", Offset = "0x881B1C")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x881B1C", Offset = "0x881B1C")]
		public Vector2 delay;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x881B78", Offset = "0x881B78")]
		public bool looping;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x881BB0", Offset = "0x881BB0")]
		public AudioClip[] soundClips;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x170000C9")]
		public int Length
		{
			[Token(Token = "0x6000B12")]
			[Address(RVA = "0x16743EC", Offset = "0x16743EC", VA = "0x16743EC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000CA")]
		public bool IsValid
		{
			[Token(Token = "0x6000B13")]
			[Address(RVA = "0x1674418", Offset = "0x1674418", VA = "0x1674418")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000CB")]
		public SoundGroup Group
		{
			[Token(Token = "0x6000B14")]
			[Address(RVA = "0x16711F4", Offset = "0x16711F4", VA = "0x16711F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B15")]
			[Address(RVA = "0x166CD4C", Offset = "0x166CD4C", VA = "0x166CD4C")]
			set
			{
			}
		}

		[Token(Token = "0x170000CC")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x6000B16")]
			[Address(RVA = "0x16710F8", Offset = "0x16710F8", VA = "0x16710F8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000CD")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x6000B17")]
			[Address(RVA = "0x167112C", Offset = "0x167112C", VA = "0x167112C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0x16729CC", Offset = "0x16729CC", VA = "0x16729CC")]
		public SoundFX()
		{
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x1670F80", Offset = "0x1670F80", VA = "0x1670F80")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x1671150", Offset = "0x1671150", VA = "0x1671150")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x1671104", Offset = "0x1671104", VA = "0x1671104")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x16744F8", Offset = "0x16744F8", VA = "0x16744F8")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x1671144", Offset = "0x1671144", VA = "0x1671144")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0x1674648", Offset = "0x1674648", VA = "0x1674648")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0x1674724", Offset = "0x1674724", VA = "0x1674724")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x1674838", Offset = "0x1674838", VA = "0x1674838")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0x16748C4", Offset = "0x16748C4", VA = "0x16748C4")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0x1674958", Offset = "0x1674958", VA = "0x1674958")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0x16749E4", Offset = "0x16749E4", VA = "0x16749E4")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x1674A70", Offset = "0x1674A70", VA = "0x1674A70")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000210")]
	public class SoundFXRef
	{
		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x170000CE")]
		public SoundFX soundFX
		{
			[Token(Token = "0x6000B24")]
			[Address(RVA = "0x1674AE8", Offset = "0x1674AE8", VA = "0x1674AE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CF")]
		public string name
		{
			[Token(Token = "0x6000B25")]
			[Address(RVA = "0x1674BDC", Offset = "0x1674BDC", VA = "0x1674BDC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B26")]
			[Address(RVA = "0x1674BE4", Offset = "0x1674BE4", VA = "0x1674BE4")]
			set
			{
			}
		}

		[Token(Token = "0x170000D0")]
		public int Length
		{
			[Token(Token = "0x6000B28")]
			[Address(RVA = "0x1674BEC", Offset = "0x1674BEC", VA = "0x1674BEC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000D1")]
		public bool IsValid
		{
			[Token(Token = "0x6000B29")]
			[Address(RVA = "0x1674C3C", Offset = "0x1674C3C", VA = "0x1674C3C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x1674B18", Offset = "0x1674B18", VA = "0x1674B18")]
		private void Init()
		{
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0x1674C7C", Offset = "0x1674C7C", VA = "0x1674C7C")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0x1674CBC", Offset = "0x1674CBC", VA = "0x1674CBC")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0x1674D04", Offset = "0x1674D04", VA = "0x1674D04")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0x166AA98", Offset = "0x166AA98", VA = "0x166AA98")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0x1674D54", Offset = "0x1674D54", VA = "0x1674D54")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0x1674D9C", Offset = "0x1674D9C", VA = "0x1674D9C")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0x1674DF4", Offset = "0x1674DF4", VA = "0x1674DF4")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0x1674E34", Offset = "0x1674E34", VA = "0x1674E34")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0x1674E7C", Offset = "0x1674E7C", VA = "0x1674E7C")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x1674EBC", Offset = "0x1674EBC", VA = "0x1674EBC")]
		public SoundFXRef()
		{
		}
	}
}
namespace TFHC_Shader_Samples
{
	[Token(Token = "0x2000211")]
	public class highlightAnimated : MonoBehaviour
	{
		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Material mat;

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0xA79764", Offset = "0xA79764", VA = "0xA79764")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0xA797D4", Offset = "0xA797D4", VA = "0xA797D4")]
		private void OnMouseEnter()
		{
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0xA7986C", Offset = "0xA7986C", VA = "0xA7986C")]
		private void OnMouseExit()
		{
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0xA797DC", Offset = "0xA797DC", VA = "0xA797DC")]
		private void switchhighlighted(bool highlighted)
		{
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0xA79874", Offset = "0xA79874", VA = "0xA79874")]
		public highlightAnimated()
		{
		}
	}
}
namespace TFHC_ForceShield_Shader_Sample
{
	[Token(Token = "0x2000212")]
	public class ForceShieldDestroyBall : MonoBehaviour
	{
		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float lifetime;

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0xA790DC", Offset = "0xA790DC", VA = "0xA790DC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0xA79168", Offset = "0xA79168", VA = "0xA79168")]
		public ForceShieldDestroyBall()
		{
		}
	}
	[Token(Token = "0x2000213")]
	public class ForceShieldImpactDetection : MonoBehaviour
	{
		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float hitTime;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material mat;

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0xA79178", Offset = "0xA79178", VA = "0xA79178")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0xA791E8", Offset = "0xA791E8", VA = "0xA791E8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0xA79298", Offset = "0xA79298", VA = "0xA79298")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0xA794AC", Offset = "0xA794AC", VA = "0xA794AC")]
		public ForceShieldImpactDetection()
		{
		}
	}
	[Token(Token = "0x2000214")]
	public class ForceShieldShootBall : MonoBehaviour
	{
		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody bullet;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform origshoot;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float speed;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float distance;

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0xA794B4", Offset = "0xA794B4", VA = "0xA794B4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0xA79750", Offset = "0xA79750", VA = "0xA79750")]
		public ForceShieldShootBall()
		{
		}
	}
}
namespace UnityEngine.Timeline
{
	[Token(Token = "0x2000215")]
	public class VideoPlayableBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VideoPlayer videoPlayer;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VideoClip videoClip;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool mute;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool loop;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public double preloadTime;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public double clipInTime;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool playedOnce;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool preparing;

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0xDEE32C", Offset = "0xDEE32C", VA = "0xDEE32C")]
		public void PrepareVideo()
		{
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0xDEE7C0", Offset = "0xDEE7C0", VA = "0xDEE7C0")]
		private void LoopPointReached(VideoPlayer vp)
		{
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0xDEE7D0", Offset = "0xDEE7D0", VA = "0xDEE7D0", Slot = "19")]
		public override void PrepareFrame(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0xDEEB28", Offset = "0xDEEB28", VA = "0xDEEB28", Slot = "17")]
		public override void OnBehaviourPlay(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0xDEEC90", Offset = "0xDEEC90", VA = "0xDEEC90", Slot = "18")]
		public override void OnBehaviourPause(Playable playable, FrameData info)
		{
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0xDEEDCC", Offset = "0xDEEDCC", VA = "0xDEEDCC", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0xDEF034", Offset = "0xDEF034", VA = "0xDEF034", Slot = "13")]
		public override void OnGraphStart(Playable playable)
		{
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0xDEF03C", Offset = "0xDEF03C", VA = "0xDEF03C", Slot = "14")]
		public override void OnGraphStop(Playable playable)
		{
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0xDEF074", Offset = "0xDEF074", VA = "0xDEF074", Slot = "16")]
		public override void OnPlayableDestroy(Playable playable)
		{
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0xDEEBDC", Offset = "0xDEEBDC", VA = "0xDEEBDC")]
		public void PlayVideo()
		{
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0xDEED34", Offset = "0xDEED34", VA = "0xDEED34")]
		public void PauseVideo()
		{
		}

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0xDEE724", Offset = "0xDEE724", VA = "0xDEE724")]
		public void StopVideo()
		{
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0xDEE978", Offset = "0xDEE978", VA = "0xDEE978")]
		private void SyncVideoToPlayable(Playable playable)
		{
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0xDEF078", Offset = "0xDEF078", VA = "0xDEF078")]
		public VideoPlayableBehaviour()
		{
		}
	}
	[Token(Token = "0x2000216")]
	public sealed class VideoSchedulerPlayableBehaviour : PlayableBehaviour
	{
		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IEnumerable<TimelineClip> m_Clips;

		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PlayableDirector m_Director;

		[Token(Token = "0x170000D2")]
		internal PlayableDirector director
		{
			[Token(Token = "0x6000B4F")]
			[Address(RVA = "0xDEF094", Offset = "0xDEF094", VA = "0xDEF094")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B50")]
			[Address(RVA = "0xDEF09C", Offset = "0xDEF09C", VA = "0xDEF09C")]
			set
			{
			}
		}

		[Token(Token = "0x170000D3")]
		internal IEnumerable<TimelineClip> clips
		{
			[Token(Token = "0x6000B51")]
			[Address(RVA = "0xDEF0A4", Offset = "0xDEF0A4", VA = "0xDEF0A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B52")]
			[Address(RVA = "0xDEF0AC", Offset = "0xDEF0AC", VA = "0xDEF0AC")]
			set
			{
			}
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0xDEF0B4", Offset = "0xDEF0B4", VA = "0xDEF0B4", Slot = "20")]
		public override void ProcessFrame(Playable playable, FrameData info, object playerData)
		{
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0xDEF548", Offset = "0xDEF548", VA = "0xDEF548")]
		public VideoSchedulerPlayableBehaviour()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000217")]
	public class VideoScriptPlayableAsset : PlayableAsset
	{
		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ExposedReference<VideoPlayer> videoPlayer;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[NotKeyable]
		public VideoClip videoClip;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[NotKeyable]
		public bool mute;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		[NotKeyable]
		public bool loop;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[NotKeyable]
		public double preloadTime;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[NotKeyable]
		public double clipInTime;

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0xDEF550", Offset = "0xDEF550", VA = "0xDEF550", Slot = "6")]
		public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
		{
			return default(Playable);
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0xDEF6F0", Offset = "0xDEF6F0", VA = "0xDEF6F0")]
		public VideoScriptPlayableAsset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000218")]
	[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0x87B24C", Offset = "0x87B24C")]
	[AttributeAttribute(Name = "TrackMediaType", RVA = "0x87B24C", Offset = "0x87B24C")]
	[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0x87B24C", Offset = "0x87B24C")]
	public class VideoScriptPlayableTrack : TrackAsset
	{
		[Token(Token = "0x6000B57")]
		[Address(RVA = "0xDEF70C", Offset = "0xDEF70C", VA = "0xDEF70C", Slot = "14")]
		public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
		{
			return default(Playable);
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0xDEF848", Offset = "0xDEF848", VA = "0xDEF848")]
		public VideoScriptPlayableTrack()
		{
		}
	}
}
namespace Fauns
{
	[Token(Token = "0x2000219")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x87B2EC", Offset = "0x87B2EC")]
	public class FaunsMaterialPropertyBlock : ScriptableObject
	{
		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<PropertyBlock> propertyBlocks;

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0xA3D710", Offset = "0xA3D710", VA = "0xA3D710")]
		public FaunsMaterialPropertyBlock()
		{
		}
	}
	[Token(Token = "0x200021A")]
	public class MaterialPropertyBlockManager : MonoBehaviour
	{
		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] targets;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FaunsMaterialPropertyBlock PropertyBlocksProfile;

		[Token(Token = "0x4000C5D")]
		private const string IDMPB = "Debug";

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int counterMpb;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int counterObj;

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0xA3D780", Offset = "0xA3D780", VA = "0xA3D780")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x885CA4", Offset = "0x885CA4")]
		public void CreateMPBs()
		{
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0xA3DA08", Offset = "0xA3DA08", VA = "0xA3DA08")]
		private void CreateMPB(GameObject go)
		{
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0xA3E400", Offset = "0xA3E400", VA = "0xA3E400")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x885CDC", Offset = "0x885CDC")]
		public void RemoveMPBs()
		{
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0xA3E680", Offset = "0xA3E680", VA = "0xA3E680")]
		private void RemoveMPB(GameObject go)
		{
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0xA3DF7C", Offset = "0xA3DF7C", VA = "0xA3DF7C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x885D14", Offset = "0x885D14")]
		public void RefreshMPBs()
		{
		}

		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0xA3EC94", Offset = "0xA3EC94", VA = "0xA3EC94")]
		private void RefreshMPB(GameObject go)
		{
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0xA3F000", Offset = "0xA3F000", VA = "0xA3F000")]
		public MaterialPropertyBlockManager()
		{
		}
	}
	[Token(Token = "0x200021B")]
	[ExecuteInEditMode]
	public class MaterialPropertyBlockModifier : MonoBehaviour
	{
		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<PropertyBlock> propertyBlocks;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Renderer _renderer;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MaterialPropertyBlock _propBlock;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int materialIndex;

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string id;

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0xA3F008", Offset = "0xA3F008", VA = "0xA3F008")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0xA3EBC0", Offset = "0xA3EBC0", VA = "0xA3EBC0")]
		public void ClearBlocks()
		{
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0xA3F00C", Offset = "0xA3F00C", VA = "0xA3F00C")]
		public bool CheckForRenderer()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0xA3DFF4", Offset = "0xA3DFF4", VA = "0xA3DFF4")]
		public void ApplyPropertyBlocks()
		{
		}

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0xA3F18C", Offset = "0xA3F18C", VA = "0xA3F18C")]
		public MaterialPropertyBlockModifier()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200021C")]
	public class PropertyBlock
	{
		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string propertyName;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int propertyIndex;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public PropertyBlockType propertyType;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color valueColor;

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float valueFloat;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int valueInt;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Texture valueTexture;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector4 valueVector;

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0xA3F20C", Offset = "0xA3F20C", VA = "0xA3F20C")]
		public PropertyBlock()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200021D")]
	public enum PropertyBlockType
	{
		[Token(Token = "0x4000C6E")]
		Color,
		[Token(Token = "0x4000C6F")]
		Vector,
		[Token(Token = "0x4000C70")]
		Float,
		[Token(Token = "0x4000C71")]
		Texture
	}
}
namespace Fauns.VRLaserPointer
{
	[Token(Token = "0x200021E")]
	public class VRLaserPointer : MonoBehaviour
	{
		[Token(Token = "0x6000B67")]
		[Address(RVA = "0xA3F240", Offset = "0xA3F240", VA = "0xA3F240")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0xA3F2BC", Offset = "0xA3F2BC", VA = "0xA3F2BC")]
		public VRLaserPointer()
		{
		}
	}
}
namespace kiupe
{
	[Token(Token = "0x200021F")]
	public class MessageBus
	{
		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IDictionary<Type, IAbstractDispatcher> subscribers;

		[Token(Token = "0x6000B69")]
		public static void Subscribe<T>(Action<T> callback) where T : Message
		{
		}

		[Token(Token = "0x6000B6A")]
		public static void Send<T>(T param) where T : Message
		{
		}

		[Token(Token = "0x6000B6B")]
		public static void UnSubscribe<T>(Action<T> callback) where T : Message
		{
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0xE03368", Offset = "0xE03368", VA = "0xE03368")]
		public static void UnSubscribeAll()
		{
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0xE036F8", Offset = "0xE036F8", VA = "0xE036F8")]
		public MessageBus()
		{
		}
	}
	[Token(Token = "0x2000220")]
	public abstract class Message
	{
		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0xE03360", Offset = "0xE03360", VA = "0xE03360")]
		protected Message()
		{
		}
	}
	[Token(Token = "0x2000221")]
	public class GenericMessage<T> : Message
	{
		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T value;

		[Token(Token = "0x6000B70")]
		public GenericMessage(T value)
		{
		}
	}
	[Token(Token = "0x2000222")]
	public interface IAbstractDispatcher
	{
		[Token(Token = "0x6000B71")]
		void RemoveAllListeners();
	}
	[Token(Token = "0x2000223")]
	public interface IMessageDispatcher<T> : IAbstractDispatcher
	{
		[Token(Token = "0x6000B72")]
		void Dispatch(T param);

		[Token(Token = "0x6000B73")]
		void AddListener(Action<T> callback);

		[Token(Token = "0x6000B74")]
		void RemoveListener(Action<T> callback);

		[Token(Token = "0x6000B75")]
		new void RemoveAllListeners();
	}
	[Token(Token = "0x2000224")]
	public class MessageDispatcher<T> : IMessageDispatcher<T>, IAbstractDispatcher
	{
		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string type;

		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Action<T> listeners;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public List<Action<T>> listenerReferences;

		[Token(Token = "0x6000B76")]
		public void Dispatch(T param)
		{
		}

		[Token(Token = "0x6000B77")]
		public void AddListener(Action<T> callback)
		{
		}

		[Token(Token = "0x6000B78")]
		public void RemoveListener(Action<T> callback)
		{
		}

		[Token(Token = "0x6000B79")]
		public void RemoveAllListeners()
		{
		}

		[Token(Token = "0x6000B7A")]
		public MessageDispatcher()
		{
		}
	}
}
namespace Capture360
{
	[Serializable]
	[Token(Token = "0x2000225")]
	public class ElemStep
	{
		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isActive;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ChapterStepConfig chapterstep;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int numChapter;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string id;

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool isAudioReady;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string audioPath;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool isVideoReady;

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string videoPath;

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool editor_show;

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0xA29EC8", Offset = "0xA29EC8", VA = "0xA29EC8")]
		public ElemStep()
		{
		}
	}
	[Token(Token = "0x2000226")]
	[ExecuteInEditMode]
	public class CaptureManager : MonoBehaviour
	{
		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0xA29EC0", Offset = "0xA29EC0", VA = "0xA29EC0")]
		public CaptureManager()
		{
		}
	}
}
