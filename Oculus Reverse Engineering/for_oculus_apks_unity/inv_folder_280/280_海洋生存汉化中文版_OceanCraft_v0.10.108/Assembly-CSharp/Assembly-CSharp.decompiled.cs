using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;
using System.Text.RegularExpressions;
using System.Threading;
using BezierSolution;
using CartoonFX;
using CrazyMinnow.SALSA;
using DG.Tweening;
using DG.Tweening.Core;
using DG.Tweening.Plugins.Options;
using DigitalRuby.LightningBolt;
using ExitGames.Client.Photon;
using FlodLab.EscapeThat.RuntimeEditor;
using GoogleSheetsForUnity;
using HeathenEngineering.Events;
using HeathenEngineering.Scriptable;
using Il2CppDummyDll;
using LPWAsset;
using Moments;
using Moments.Encoder;
using OceanCraft;
using Oculus.Spatializer.Propagation;
using Photon.Chat;
using Photon.Pun;
using Photon.Pun.Demo.PunBasics;
using Photon.Realtime;
using Photon.Voice;
using Photon.Voice.PUN;
using Photon.Voice.Unity;
using ShapeFX;
using Smooth;
using TMPro;
using TRS.CaptureTool;
using TRS.CaptureTool.Extras;
using TRS.CaptureTool.Share;
using Twity;
using Twity.DataModels.Core;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Experimental.XR.Interaction;
using UnityEngine.Networking;
using UnityEngine.Rendering;
using UnityEngine.SceneManagement;
using UnityEngine.SpatialTracking;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;
using UnityEngine.XR.Interaction.Toolkit;
using UnityEngine.XR.Interaction.Toolkit.UI;
using VR.BodyLaunguage;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
[ExecuteInEditMode]
public class DemoWarning : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject demoScreen;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BodyLanguageVR bodyLanguageVR;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private InputExample_Code inputExample_Code;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private InputExample_Easy inputExample_Easy;

	[Token(Token = "0x4000005")]
	private const int HEADSHAKE_YES_INDEX = 0;

	[Token(Token = "0x4000006")]
	private const int HEADSHAKE_NO_INDEX = 1;

	[Token(Token = "0x4000007")]
	private const int HANDWAVE_HELLO_INDEX = 2;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0xD84FDC", Offset = "0xD84FDC", VA = "0xD84FDC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0xD85574", Offset = "0xD85574", VA = "0xD85574")]
	public DemoWarning()
	{
	}
}
[Token(Token = "0x2000003")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB14F08", Offset = "0xB14F08")]
public class InputExample_Code : MonoBehaviour
{
	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private BodyLanguageVR bodyLanguageVR;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject headModel;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject handModel;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material defaultLight;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material successLight;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool playAudioForSteps;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool detectYes;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public MeshRenderer headShakeYesMesh;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource yesProgressAudio;

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private BodyLanguageVR.InputMethod inputYes;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float yesTimer;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool resetYes;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int currentHeadShakeYesStep;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool detectNo;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public MeshRenderer headShakeNoMesh;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioSource noProgressAudio;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private BodyLanguageVR.InputMethod inputNo;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float noTimer;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool resetNo;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int currentHeadShakeNoStep;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public bool detectHello;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public MeshRenderer handWaveHelloMesh;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AudioSource helloProgressAudio;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private BodyLanguageVR.InputMethod inputHello;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float helloTimer;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private bool resetHello;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int currentHandWaveHelloStep;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float resetTime;

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xF908F4", Offset = "0xF908F4", VA = "0xF908F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0xF90DD4", Offset = "0xF90DD4", VA = "0xF90DD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0xF90D1C", Offset = "0xF90D1C", VA = "0xF90D1C")]
	private int GetIndexOfMotion(string inputName)
	{
		return default(int);
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xF913FC", Offset = "0xF913FC", VA = "0xF913FC")]
	public void PlayHaptics()
	{
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xF91400", Offset = "0xF91400", VA = "0xF91400")]
	public InputExample_Code()
	{
	}
}
[Token(Token = "0x2000004")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB14F6C", Offset = "0xB14F6C")]
public class InputExample_Easy : MonoBehaviour
{
	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private BodyLanguageVR bodyLanguageVR;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject headModel;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject handModel;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material defaultLight;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material successLight;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool playAudioForSteps;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool detectYes;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public MeshRenderer headShakeYesMesh;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource yesProgressAudio;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private BodyLanguageVR.InputMethod inputYes;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float yesTimer;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool resetYes;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int currentHeadShakeYesStep;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool detectNo;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public MeshRenderer headShakeNoMesh;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioSource noProgressAudio;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private BodyLanguageVR.InputMethod inputNo;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float noTimer;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool resetNo;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int currentHeadShakeNoStep;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public bool detectHello;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public MeshRenderer handWaveHelloMesh;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AudioSource helloProgressAudio;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private BodyLanguageVR.InputMethod inputHello;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float helloTimer;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private bool resetHello;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int currentHandWaveHelloStep;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float resetTime;

	[Token(Token = "0x6000008")]
	[Address(RVA = "0xF91420", Offset = "0xF91420", VA = "0xF91420")]
	private void Start()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0xF91900", Offset = "0xF91900", VA = "0xF91900")]
	private void Update()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xF91848", Offset = "0xF91848", VA = "0xF91848")]
	private int GetIndexOfMotion(string inputName)
	{
		return default(int);
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xF91CC4", Offset = "0xF91CC4", VA = "0xF91CC4")]
	public void YesTriggered()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xF91DC4", Offset = "0xF91DC4", VA = "0xF91DC4")]
	public void NoTriggered()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xF91EC0", Offset = "0xF91EC0", VA = "0xF91EC0")]
	public void HelloTriggered()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xF91DC0", Offset = "0xF91DC0", VA = "0xF91DC0")]
	public void PlayHaptics()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xF91FBC", Offset = "0xF91FBC", VA = "0xF91FBC")]
	public InputExample_Easy()
	{
	}
}
[Token(Token = "0x2000005")]
public class ReflectionProbeCameraMirror : MonoBehaviour
{
	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cameraObject;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 forward;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ReflectionProbe reflectionProbe;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int frameSkip;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int currentFrame;

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xE3F970", Offset = "0xE3F970", VA = "0xE3F970")]
	private void Start()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xE3F9A0", Offset = "0xE3F9A0", VA = "0xE3F9A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0xE3FA98", Offset = "0xE3FA98", VA = "0xE3FA98")]
	private void UpdateProbePosition()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xE3FCF4", Offset = "0xE3FCF4", VA = "0xE3FCF4")]
	public ReflectionProbeCameraMirror()
	{
	}
}
[Serializable]
[Token(Token = "0x2000006")]
public class MinMaxFloatRange
{
	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float min;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float max;

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xE97D50", Offset = "0xE97D50", VA = "0xE97D50")]
	public MinMaxFloatRange()
	{
	}
}
[Token(Token = "0x2000007")]
public class SALSA_Template_EventControllerSubscriber : MonoBehaviour
{
	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string componentEventName;

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xDC74A0", Offset = "0xDC74A0", VA = "0xDC74A0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0xDC75B4", Offset = "0xDC75B4", VA = "0xDC75B4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xDC76C8", Offset = "0xDC76C8", VA = "0xDC76C8")]
	private void OnAnimationStarting(object sender, EventController.EventControllerNotificationArgs e)
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xDC7788", Offset = "0xDC7788", VA = "0xDC7788")]
	private void OnAnimationON(object sender, EventController.EventControllerNotificationArgs e)
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xDC7848", Offset = "0xDC7848", VA = "0xDC7848")]
	private void OnAnimationEnding(object sender, EventController.EventControllerNotificationArgs e)
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xDC7908", Offset = "0xDC7908", VA = "0xDC7908")]
	private void OnAnimationOFF(object sender, EventController.EventControllerNotificationArgs e)
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xDC79C8", Offset = "0xDC79C8", VA = "0xDC79C8")]
	public SALSA_Template_EventControllerSubscriber()
	{
	}
}
[Token(Token = "0x2000008")]
public class SALSA_Template_SalsaEventSubscriber : MonoBehaviour
{
	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Salsa salsa;

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xDC79D0", Offset = "0xDC79D0", VA = "0xDC79D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xDC7A84", Offset = "0xDC7A84", VA = "0xDC7A84")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xDC7B38", Offset = "0xDC7B38", VA = "0xDC7B38")]
	private void OnStoppedSalsaing(object sender, Salsa.SalsaNotificationArgs e)
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xDC7C34", Offset = "0xDC7C34", VA = "0xDC7C34")]
	private void OnStartedSalsaing(object sender, Salsa.SalsaNotificationArgs e)
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xDC7D30", Offset = "0xDC7D30", VA = "0xDC7D30")]
	public SALSA_Template_SalsaEventSubscriber()
	{
	}
}
[Token(Token = "0x2000009")]
public class SALSA_Template_SalsaVisemeTriggerEventSubscriber : MonoBehaviour
{
	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Salsa salsaInstance;

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xDC7D38", Offset = "0xDC7D38", VA = "0xDC7D38")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xDC7DB4", Offset = "0xDC7DB4", VA = "0xDC7DB4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xDC7E30", Offset = "0xDC7E30", VA = "0xDC7E30")]
	private void SalsaOnVisemeTriggered(object sender, Salsa.SalsaNotificationArgs e)
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xDC7F2C", Offset = "0xDC7F2C", VA = "0xDC7F2C")]
	public SALSA_Template_SalsaVisemeTriggerEventSubscriber()
	{
	}
}
[Token(Token = "0x200000A")]
public class CurvedLinePoint : MonoBehaviour
{
	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool showGizmo;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float gizmoSize;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color gizmoColor;

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xD7E988", Offset = "0xD7E988", VA = "0xD7E988")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xD7E9EC", Offset = "0xD7E9EC", VA = "0xD7E9EC")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xD7EAD8", Offset = "0xD7EAD8", VA = "0xD7EAD8")]
	public CurvedLinePoint()
	{
	}
}
[Token(Token = "0x200000B")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB14FD0", Offset = "0xB14FD0")]
public class CurvedLineRenderer : MonoBehaviour
{
	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float lineSegmentSize;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float lineWidth;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool showGizmos;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float gizmoSize;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color gizmoColor;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public CurvedLinePoint[] linePoints;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] linePositions;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3[] linePositionsOld;

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xD7EAB4", Offset = "0xD7EAB4", VA = "0xD7EAB4")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xD7EB44", Offset = "0xD7EB44", VA = "0xD7EB44")]
	private void GetPoints()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xD7EC34", Offset = "0xD7EC34", VA = "0xD7EC34")]
	private void SetPointsToLine()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xD7EE28", Offset = "0xD7EE28", VA = "0xD7EE28")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xD7EE4C", Offset = "0xD7EE4C", VA = "0xD7EE4C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xD7EEE4", Offset = "0xD7EEE4", VA = "0xD7EEE4")]
	public CurvedLineRenderer()
	{
	}
}
[Token(Token = "0x200000C")]
public class LineSmoother : MonoBehaviour
{
	[Token(Token = "0x600002E")]
	[Address(RVA = "0xE8B748", Offset = "0xE8B748", VA = "0xE8B748")]
	public static Vector3[] SmoothLine(Vector3[] inputPoints, float segmentSize)
	{
		return null;
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xE8BC40", Offset = "0xE8BC40", VA = "0xE8BC40")]
	public LineSmoother()
	{
	}
}
[Token(Token = "0x200000D")]
[ExecuteInEditMode]
public class CausticsController : MonoBehaviour
{
	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Texture2D CausticsTex;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Texture2D FlowMapTex;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float GlobalScale;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float FlowMapScale_1;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float FlowMapScale_2;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float FlowMapScale_3;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float CausticsScale_1;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private float CausticsScale_2;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float CausticsScale_3;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float GlobalSpeed;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float CausticsSpeed_1;

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float CausticsSpeed_2;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float CausticsSpeed_3;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private float FlowMapIntensity;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float CausticsIntensity;

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xE84340", Offset = "0xE84340", VA = "0xE84340")]
	private void Update()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xE8455C", Offset = "0xE8455C", VA = "0xE8455C")]
	public CausticsController()
	{
	}
}
[Token(Token = "0x200000E")]
public class DynamicBone : MonoBehaviour
{
	[Token(Token = "0x200000F")]
	public enum UpdateMode
	{
		[Token(Token = "0x4000087")]
		Normal,
		[Token(Token = "0x4000088")]
		AnimatePhysics,
		[Token(Token = "0x4000089")]
		UnscaledTime,
		[Token(Token = "0x400008A")]
		Default
	}

	[Token(Token = "0x2000010")]
	public enum FreezeAxis
	{
		[Token(Token = "0x400008C")]
		None,
		[Token(Token = "0x400008D")]
		X,
		[Token(Token = "0x400008E")]
		Y,
		[Token(Token = "0x400008F")]
		Z
	}

	[Token(Token = "0x2000011")]
	private class Particle
	{
		[Token(Token = "0x4000090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform m_Transform;

		[Token(Token = "0x4000091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int m_ParentIndex;

		[Token(Token = "0x4000092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m_Damping;

		[Token(Token = "0x4000093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_Elasticity;

		[Token(Token = "0x4000094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_Stiffness;

		[Token(Token = "0x4000095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_Inert;

		[Token(Token = "0x4000096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_Friction;

		[Token(Token = "0x4000097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_Radius;

		[Token(Token = "0x4000098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_BoneLength;

		[Token(Token = "0x4000099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool m_isCollide;

		[Token(Token = "0x400009A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 m_Position;

		[Token(Token = "0x400009B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 m_PrevPosition;

		[Token(Token = "0x400009C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 m_EndOffset;

		[Token(Token = "0x400009D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 m_InitLocalPosition;

		[Token(Token = "0x400009E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public Quaternion m_InitLocalRotation;

		[Token(Token = "0x600004A")]
		[Address(RVA = "0xD8AAF4", Offset = "0xD8AAF4", VA = "0xD8AAF4")]
		public Particle()
		{
		}
	}

	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_Root;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_UpdateRate;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public UpdateMode m_UpdateMode;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB17C54", Offset = "0xB17C54")]
	public float m_Damping;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve m_DampingDistrib;

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB17C6C", Offset = "0xB17C6C")]
	public float m_Elasticity;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve m_ElasticityDistrib;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB17C84", Offset = "0xB17C84")]
	public float m_Stiffness;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AnimationCurve m_StiffnessDistrib;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB17C9C", Offset = "0xB17C9C")]
	public float m_Inert;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AnimationCurve m_InertDistrib;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float m_Friction;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AnimationCurve m_FrictionDistrib;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float m_Radius;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AnimationCurve m_RadiusDistrib;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float m_EndLength;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Vector3 m_EndOffset;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Vector3 m_Gravity;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public Vector3 m_Force;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public List<DynamicBoneColliderBase> m_Colliders;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public List<Transform> m_Exclusions;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public FreezeAxis m_FreezeAxis;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public bool m_DistantDisable;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform m_ReferenceObject;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float m_DistanceToObject;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 m_LocalGravity;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3 m_ObjectMove;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private Vector3 m_ObjectPrevPosition;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float m_BoneTotalLength;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float m_ObjectScale;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float m_Time;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float m_Weight;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool m_DistantDisabled;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private List<Particle> m_Particles;

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xD8810C", Offset = "0xD8810C", VA = "0xD8810C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xD8828C", Offset = "0xD8828C", VA = "0xD8828C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xD882E0", Offset = "0xD882E0", VA = "0xD882E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xD88310", Offset = "0xD88310", VA = "0xD88310")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xD882BC", Offset = "0xD882BC", VA = "0xD882BC")]
	private void PreUpdate()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xD88388", Offset = "0xD88388", VA = "0xD88388")]
	private void CheckDistance()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xD88A64", Offset = "0xD88A64", VA = "0xD88A64")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xD88A68", Offset = "0xD88A68", VA = "0xD88A68")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xD88A6C", Offset = "0xD88A6C", VA = "0xD88A6C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xD88B9C", Offset = "0xD88B9C", VA = "0xD88B9C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xD88D40", Offset = "0xD88D40", VA = "0xD88D40")]
	public void SetWeight(float w)
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xD88D9C", Offset = "0xD88D9C", VA = "0xD88D9C")]
	public float GetWeight()
	{
		return default(float);
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xD8858C", Offset = "0xD8858C", VA = "0xD8858C")]
	private void UpdateDynamicBones(float t)
	{
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xD88110", Offset = "0xD88110", VA = "0xD88110")]
	public void SetupParticles()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xD8A1B0", Offset = "0xD8A1B0", VA = "0xD8A1B0")]
	private void AppendParticles(Transform b, int parentIndex, float boneLength)
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xD8A7BC", Offset = "0xD8A7BC", VA = "0xD8A7BC")]
	public void UpdateParameters()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xD88804", Offset = "0xD88804", VA = "0xD88804")]
	private void InitTransforms()
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xD88904", Offset = "0xD88904", VA = "0xD88904")]
	private void ResetParticlesPosition()
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xD88DA4", Offset = "0xD88DA4", VA = "0xD88DA4")]
	private void UpdateParticles1(float timeVar)
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xD890F4", Offset = "0xD890F4", VA = "0xD890F4")]
	private void UpdateParticles2(float timeVar)
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xD898A4", Offset = "0xD898A4", VA = "0xD898A4")]
	private void SkipUpdateParticles()
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xD8ABD4", Offset = "0xD8ABD4", VA = "0xD8ABD4")]
	private static Vector3 MirrorVector(Vector3 v, Vector3 axis)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xD89ED4", Offset = "0xD89ED4", VA = "0xD89ED4")]
	private void ApplyParticlesToTransforms()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xD8ACB4", Offset = "0xD8ACB4", VA = "0xD8ACB4")]
	public DynamicBone()
	{
	}
}
[Token(Token = "0x2000012")]
public class DynamicBoneCollider : DynamicBoneColliderBase
{
	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float m_Radius;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_Height;

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xD8ADD8", Offset = "0xD8ADD8", VA = "0xD8ADD8")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xD8AE70", Offset = "0xD8AE70", VA = "0xD8AE70", Slot = "4")]
	public override bool Collide(ref Vector3 particlePosition, float particleRadius)
	{
		return default(bool);
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xD8B0C8", Offset = "0xD8B0C8", VA = "0xD8B0C8")]
	private static bool OutsideSphere(ref Vector3 particlePosition, float particleRadius, Vector3 sphereCenter, float sphereRadius)
	{
		return default(bool);
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xD8B264", Offset = "0xD8B264", VA = "0xD8B264")]
	private static bool InsideSphere(ref Vector3 particlePosition, float particleRadius, Vector3 sphereCenter, float sphereRadius)
	{
		return default(bool);
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xD8B414", Offset = "0xD8B414", VA = "0xD8B414")]
	private static bool OutsideCapsule(ref Vector3 particlePosition, float particleRadius, Vector3 capsuleP0, Vector3 capsuleP1, float capsuleRadius)
	{
		return default(bool);
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xD8B868", Offset = "0xD8B868", VA = "0xD8B868")]
	private static bool InsideCapsule(ref Vector3 particlePosition, float particleRadius, Vector3 capsuleP0, Vector3 capsuleP1, float capsuleRadius)
	{
		return default(bool);
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xD8BC84", Offset = "0xD8BC84", VA = "0xD8BC84")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xD8BE6C", Offset = "0xD8BE6C", VA = "0xD8BE6C")]
	public DynamicBoneCollider()
	{
	}
}
[Token(Token = "0x2000013")]
public class DynamicBoneColliderBase : MonoBehaviour
{
	[Token(Token = "0x2000014")]
	public enum Direction
	{
		[Token(Token = "0x40000A5")]
		X,
		[Token(Token = "0x40000A6")]
		Y,
		[Token(Token = "0x40000A7")]
		Z
	}

	[Token(Token = "0x2000015")]
	public enum Bound
	{
		[Token(Token = "0x40000A9")]
		Outside,
		[Token(Token = "0x40000AA")]
		Inside
	}

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Direction m_Direction;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 m_Center;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Bound m_Bound;

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xEB6104", Offset = "0xEB6104", VA = "0xEB6104", Slot = "4")]
	public virtual bool Collide(ref Vector3 particlePosition, float particleRadius)
	{
		return default(bool);
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xEB610C", Offset = "0xEB610C", VA = "0xEB610C")]
	public DynamicBoneColliderBase()
	{
	}
}
[Token(Token = "0x2000016")]
public class DynamicBonePlaneCollider : DynamicBoneColliderBase
{
	[Token(Token = "0x6000055")]
	[Address(RVA = "0xEB618C", Offset = "0xEB618C", VA = "0xEB618C", Slot = "4")]
	public override bool Collide(ref Vector3 particlePosition, float particleRadius)
	{
		return default(bool);
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xEB6380", Offset = "0xEB6380", VA = "0xEB6380")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0xEB6544", Offset = "0xEB6544", VA = "0xEB6544")]
	public DynamicBonePlaneCollider()
	{
	}
}
[Token(Token = "0x2000017")]
public class Data
{
	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 pos;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Quaternion rot;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 relativePos;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int x;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int y;

	[Token(Token = "0x17000001")]
	public Matrix4x4 matrix
	{
		[Token(Token = "0x6000058")]
		[Address(RVA = "0xD81998", Offset = "0xD81998", VA = "0xD81998")]
		get
		{
			return default(Matrix4x4);
		}
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xD81A70", Offset = "0xD81A70", VA = "0xD81A70")]
	public Data(Vector3 pos, Vector3 scale, Quaternion rot, int x, int y, Vector3 relativPos)
	{
	}
}
[Token(Token = "0x2000018")]
public class LowPolyCloud : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000019")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15044", Offset = "0xB15044")]
	private sealed class <>c
	{
		[Token(Token = "0x40000BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40000BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Data, Matrix4x4> <>9__20_0;

		[Token(Token = "0x6000065")]
		[Address(RVA = "0xE934F8", Offset = "0xE934F8", VA = "0xE934F8")]
		public <>c()
		{
		}

		[Token(Token = "0x6000066")]
		[Address(RVA = "0xE93500", Offset = "0xE93500", VA = "0xE93500")]
		internal Matrix4x4 <RenderBatch>b__20_0(Data a)
		{
			return default(Matrix4x4);
		}
	}

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh cloudMesh;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material cloudMat;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float cloudSize;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float cloudHight;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxScale;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float minScale;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float speed;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float texScale;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float globalScale;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int batchesToCreate;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Data> batches;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Texture2D texture;

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xE92BF8", Offset = "0xE92BF8", VA = "0xE92BF8")]
	private void Start()
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xE92C68", Offset = "0xE92C68", VA = "0xE92C68")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xE92BFC", Offset = "0xE92BFC", VA = "0xE92BFC")]
	public void CreateCloud()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xE92C6C", Offset = "0xE92C6C", VA = "0xE92C6C")]
	public void DestroyCloud()
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xE92CC4", Offset = "0xE92CC4", VA = "0xE92CC4")]
	private void AddCloud(int x, int y)
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xE92F9C", Offset = "0xE92F9C", VA = "0xE92F9C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xE9300C", Offset = "0xE9300C", VA = "0xE9300C")]
	private void MakeNoise()
	{
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0xE93030", Offset = "0xE93030", VA = "0xE93030")]
	private void UpdateBatch()
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xE932B4", Offset = "0xE932B4", VA = "0xE932B4")]
	public void RenderBatch()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xE93400", Offset = "0xE93400", VA = "0xE93400")]
	public LowPolyCloud()
	{
	}
}
[Token(Token = "0x200001A")]
public class LowPolyCloudGPU : MonoBehaviour
{
	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ComputeShader computeShader;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ComputeBuffer positionsBuffer;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ComputeBuffer renderBuffer;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Mesh cloudMesh;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material cloudMat;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float cloudSize;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float cloudHeight;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float maxScale;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float minScale;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int spawnTrials;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int batchesToCreate;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float moveSpeed;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float scaleAmplitude;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float noiseScale;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly int spawnIterations;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly int sizeMin;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly int sizeMax;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly int cloudspread;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly int heightVariance;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static readonly int inoiseScale;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly int parentPos;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static readonly int amplitude;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly int scaleTime;

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xE9351C", Offset = "0xE9351C", VA = "0xE9351C")]
	public void CreateCloud()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xE937C0", Offset = "0xE937C0", VA = "0xE937C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xE9385C", Offset = "0xE9385C", VA = "0xE9385C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xE938A4", Offset = "0xE938A4", VA = "0xE938A4")]
	private void Update()
	{
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xE938C8", Offset = "0xE938C8", VA = "0xE938C8")]
	private void MakeNoise()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xE938EC", Offset = "0xE938EC", VA = "0xE938EC")]
	private void UpdateBatch()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xE93AFC", Offset = "0xE93AFC", VA = "0xE93AFC")]
	public void RenderBatch()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xE93C7C", Offset = "0xE93C7C", VA = "0xE93C7C")]
	public LowPolyCloudGPU()
	{
	}
}
[Token(Token = "0x200001B")]
public class TreasureChest : MonoBehaviourPun
{
	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ParticleSystem lift;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ParticleSystem reveal;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private AudioSource sound;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RotateToSelector rotator;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private AudioClip clip_lifting;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioClip clip_up;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform chest;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float speed;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private float maxHeight;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool lifting;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool finished;

	[Token(Token = "0x17000002")]
	public bool IsUp
	{
		[Token(Token = "0x6000070")]
		[Address(RVA = "0xE4BD60", Offset = "0xE4BD60", VA = "0xE4BD60")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xE4BD68", Offset = "0xE4BD68", VA = "0xE4BD68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xE4BD88", Offset = "0xE4BD88", VA = "0xE4BD88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xE4BFA0", Offset = "0xE4BFA0", VA = "0xE4BFA0")]
	[PunRPC]
	private void Rpc_OnFinished()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xE4C0C0", Offset = "0xE4C0C0", VA = "0xE4C0C0")]
	public void StartLifting()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xE4C1F8", Offset = "0xE4C1F8", VA = "0xE4C1F8")]
	public void StopLifting()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xE4C330", Offset = "0xE4C330", VA = "0xE4C330")]
	[PunRPC]
	private void Rpc_StartLifting()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xE4C014", Offset = "0xE4C014", VA = "0xE4C014")]
	[PunRPC]
	private void Rpc_StopLifting()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xE4C3F4", Offset = "0xE4C3F4", VA = "0xE4C3F4")]
	public void SetStartHeight()
	{
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xE4C434", Offset = "0xE4C434", VA = "0xE4C434")]
	public TreasureChest()
	{
	}
}
[Token(Token = "0x200001C")]
public class TreasureChestMagentParticle : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ParticleSystem particles;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool sync_play;

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xE4C448", Offset = "0xE4C448", VA = "0xE4C448")]
	public void SetMode(bool play)
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xE4C454", Offset = "0xE4C454", VA = "0xE4C454")]
	private void ToggleParticle(bool play)
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xE4C47C", Offset = "0xE4C47C", VA = "0xE4C47C", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xE4C4BC", Offset = "0xE4C4BC", VA = "0xE4C4BC")]
	public TreasureChestMagentParticle()
	{
	}
}
[Token(Token = "0x200001D")]
public class TreasureChestMagnet : ControllerInput
{
	[Token(Token = "0x200001E")]
	public enum MagnetState
	{
		[Token(Token = "0x40000F0")]
		searching,
		[Token(Token = "0x40000F1")]
		found,
		[Token(Token = "0x40000F2")]
		up
	}

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TreasureChest chest;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float minChestFindDistance;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip clip_found;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioClip clip_wrong;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public TreasureChestMagentParticle particleEffekt;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public XRController controller;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TreasureLineRenderer lineRenderer;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private InputHelpers.Button lockButton;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private InteractionState lockButtonState;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private PlayerObject playerObject;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool locked;

	[Token(Token = "0x40000EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public MagnetState currentState;

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xE4C4C4", Offset = "0xE4C4C4", VA = "0xE4C4C4")]
	private void SetToStateSearching()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xE4C4CC", Offset = "0xE4C4CC", VA = "0xE4C4CC")]
	private void SetToStateFound()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xE4C51C", Offset = "0xE4C51C", VA = "0xE4C51C")]
	private void SetToStateUp()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xE4C5D4", Offset = "0xE4C5D4", VA = "0xE4C5D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xE4C670", Offset = "0xE4C670", VA = "0xE4C670")]
	private void FindCurrentChest()
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xE4C6E4", Offset = "0xE4C6E4", VA = "0xE4C6E4")]
	private void SetNewChest(TreasureChest chest)
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xE4C6F0", Offset = "0xE4C6F0", VA = "0xE4C6F0")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xE4CAF0", Offset = "0xE4CAF0", VA = "0xE4CAF0")]
	private void CheckForChest()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xE4CD90", Offset = "0xE4CD90", VA = "0xE4CD90")]
	public TreasureChestMagnet()
	{
	}
}
[Token(Token = "0x200001F")]
public class TreasureLineRenderer : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x2000020")]
	public enum LineColor
	{
		[Token(Token = "0x4000107")]
		neutral,
		[Token(Token = "0x4000108")]
		notFound,
		[Token(Token = "0x4000109")]
		found,
		[Token(Token = "0x400010A")]
		count
	}

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform startPoint;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 endPoint;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public LayerMask raycastLayers;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float maxDistance;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private Color neutral;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private Color notFound;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private Color found;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 centerPoint;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float sync_height;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB17DA4", Offset = "0xB17DA4")]
	public float curveDistancePercent;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public int numberOfSegments;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float liftHeightSpeed;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject reticle;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool sync_fixedEndPoint;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float startHeight;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Color[] colors;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int sync_linecolorIndex;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public PlayerObject playerObject;

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xE4CE00", Offset = "0xE4CE00", VA = "0xE4CE00")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xE4CF04", Offset = "0xE4CF04", VA = "0xE4CF04")]
	private void Update()
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xE4D13C", Offset = "0xE4D13C", VA = "0xE4D13C")]
	private bool CastRay()
	{
		return default(bool);
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xE4D238", Offset = "0xE4D238", VA = "0xE4D238")]
	private Vector3 CalculateCenterPoint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xE4CAA8", Offset = "0xE4CAA8", VA = "0xE4CAA8")]
	public void FixEndPoint()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xE4C574", Offset = "0xE4C574", VA = "0xE4C574")]
	public void ReleaseEndPoint()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xE4CD2C", Offset = "0xE4CD2C", VA = "0xE4CD2C")]
	public void LiftHeight()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xE4D344", Offset = "0xE4D344", VA = "0xE4D344")]
	private void DrawQuadraticBezierCurve(Vector3 point0, Vector3 point1, Vector3 point2)
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xE4D530", Offset = "0xE4D530", VA = "0xE4D530")]
	private void SetColor(Color col)
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xE4CCA4", Offset = "0xE4CCA4", VA = "0xE4CCA4")]
	public void SetColor(LineColor color)
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xE4D664", Offset = "0xE4D664", VA = "0xE4D664")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xE4D704", Offset = "0xE4D704", VA = "0xE4D704", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xE4D834", Offset = "0xE4D834", VA = "0xE4D834")]
	public TreasureLineRenderer()
	{
	}
}
[Token(Token = "0x2000021")]
public class TreasureSpot : MonoBehaviour
{
	[Token(Token = "0x6000094")]
	[Address(RVA = "0xE4D848", Offset = "0xE4D848", VA = "0xE4D848")]
	public TreasureSpot()
	{
	}
}
[Token(Token = "0x2000022")]
public class CoconutTree : MonoBehaviourPun
{
	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> coconuts;

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xD78B5C", Offset = "0xD78B5C", VA = "0xD78B5C")]
	public void RemoveCoconuts()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xD78BBC", Offset = "0xD78BBC", VA = "0xD78BBC")]
	public CoconutTree()
	{
	}
}
[Token(Token = "0x2000023")]
public abstract class IndicatorState
{
	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Color color;

	[Token(Token = "0x6000097")]
	public abstract void EnterState(Image[] sprite);

	[Token(Token = "0x6000098")]
	public abstract void ExitState(Image[] sprite);

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xF90650", Offset = "0xF90650", VA = "0xF90650")]
	public IndicatorState(Color color)
	{
	}
}
[Token(Token = "0x2000024")]
public class SimpleState : IndicatorState
{
	[Token(Token = "0x600009A")]
	[Address(RVA = "0xDD5E28", Offset = "0xDD5E28", VA = "0xDD5E28", Slot = "4")]
	public override void EnterState(Image[] sprite)
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xDD5EB0", Offset = "0xDD5EB0", VA = "0xDD5EB0", Slot = "5")]
	public override void ExitState(Image[] sprite)
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xDD5EB4", Offset = "0xDD5EB4", VA = "0xDD5EB4")]
	public SimpleState(Color color)
	{
	}
}
[Token(Token = "0x2000025")]
public class BlinkingState : IndicatorState
{
	[Token(Token = "0x2000026")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15054", Offset = "0xB15054")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x400010F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Image[] sprite;

		[Token(Token = "0x4000110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BlinkingState <>4__this;

		[Token(Token = "0x60000A1")]
		[Address(RVA = "0xE78A78", Offset = "0xE78A78", VA = "0xE78A78")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x60000A2")]
		[Address(RVA = "0xE78B0C", Offset = "0xE78B0C", VA = "0xE78B0C")]
		internal void <ExitState>b__0()
		{
		}
	}

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Sequence tween;

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color inactiveColor;

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xE787F8", Offset = "0xE787F8", VA = "0xE787F8", Slot = "4")]
	public override void EnterState(Image[] sprite)
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0xE789A8", Offset = "0xE789A8", VA = "0xE789A8", Slot = "5")]
	public override void ExitState(Image[] sprite)
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xE78A80", Offset = "0xE78A80", VA = "0xE78A80")]
	public BlinkingState(Color color, Color inactive)
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0xE78AF8", Offset = "0xE78AF8", VA = "0xE78AF8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB19F90", Offset = "0xB19F90")]
	private void <EnterState>b__2_0()
	{
	}
}
[Token(Token = "0x2000027")]
public class CraneIndicator
{
	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Image[] sprite;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IndicatorState currentState;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SimpleState inactiveState;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private BlinkingState alertState;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SimpleState warningState;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleState activeState;

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xD7D69C", Offset = "0xD7D69C", VA = "0xD7D69C")]
	public void ChangeState(IndicatorState newState)
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xD7D704", Offset = "0xD7D704", VA = "0xD7D704")]
	public CraneIndicator(Color inactive, Color warning, Color active, Image[] sprite)
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xD7D868", Offset = "0xD7D868", VA = "0xD7D868")]
	public void ChangeToStateInactive()
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xD7D870", Offset = "0xD7D870", VA = "0xD7D870")]
	public void ChangeToStateAlert()
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xD7D878", Offset = "0xD7D878", VA = "0xD7D878")]
	public void ChangeToStateWarning()
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xD7D880", Offset = "0xD7D880", VA = "0xD7D880")]
	public void ChangeToStateActive()
	{
	}
}
[Token(Token = "0x2000028")]
public class CraneSymbols : MonoBehaviour
{
	[Token(Token = "0x2000029")]
	public enum Indicators
	{
		[Token(Token = "0x4000122")]
		top,
		[Token(Token = "0x4000123")]
		up,
		[Token(Token = "0x4000124")]
		down,
		[Token(Token = "0x4000125")]
		bottom,
		[Token(Token = "0x4000126")]
		island,
		[Token(Token = "0x4000127")]
		position
	}

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Color color_inactive;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Color color_active;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Color color_wrong;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Image[] sprite_top;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Image[] sprite_up;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Image[] sprite_down;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Image[] sprite_bottom;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private Image[] sprite_island;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Image[] sprite_position;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<CraneIndicator> allSprites;

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xD7D888", Offset = "0xD7D888", VA = "0xD7D888")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xD7D88C", Offset = "0xD7D88C", VA = "0xD7D88C")]
	private void InitSpriteList()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xD7D20C", Offset = "0xD7D20C", VA = "0xD7D20C")]
	public void SetActive(Indicators spriteToIndicate)
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xD7D18C", Offset = "0xD7D18C", VA = "0xD7D18C")]
	public void SetWrong(Indicators spriteToIndicate)
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xD7D4E4", Offset = "0xD7D4E4", VA = "0xD7D4E4")]
	public void SetInactive(Indicators spriteToIndicate)
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xD7D464", Offset = "0xD7D464", VA = "0xD7D464")]
	public void SetAlert(Indicators spriteToIndicate)
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0xD7DC24", Offset = "0xD7DC24", VA = "0xD7DC24")]
	public CraneSymbols()
	{
	}
}
[Token(Token = "0x200002A")]
public class Fruit : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200002B")]
	public class FruitData
	{
		[Token(Token = "0x400012B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool wasReaped;

		[Token(Token = "0x60000B4")]
		[Address(RVA = "0xEC193C", Offset = "0xEC193C", VA = "0xEC193C")]
		public FruitData()
		{
		}
	}

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FruitData data;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private InventoryItem vegatableItem;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip reapSound;

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0xEC1530", Offset = "0xEC1530", VA = "0xEC1530")]
	public void SetUp(FruitData data)
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0xEC159C", Offset = "0xEC159C", VA = "0xEC159C")]
	public void OnGrab(XRBaseInteractor interactor)
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0xEC154C", Offset = "0xEC154C", VA = "0xEC154C")]
	public void ToggleReap(bool isReaped)
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0xEC1934", Offset = "0xEC1934", VA = "0xEC1934")]
	public Fruit()
	{
	}
}
[Token(Token = "0x200002C")]
public class GeneratorChild : MonoBehaviour
{
	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool pickRange;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int pickAmount;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int pickAmountMax;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool checkOverlap;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
	public bool randomizeColors;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
	public bool generateTreasure;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
	public bool spawn;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int islandId;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<GeneratorChild> childsWithGenerator;

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xEC1A50", Offset = "0xEC1A50", VA = "0xEC1A50")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0xEC1B04", Offset = "0xEC1B04", VA = "0xEC1B04")]
	private void Generate()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xEC1B94", Offset = "0xEC1B94", VA = "0xEC1B94")]
	public void Generate(System.Random randomStream)
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xEC2490", Offset = "0xEC2490", VA = "0xEC2490")]
	public void GenerateTreasure(System.Random randomStream)
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xEC260C", Offset = "0xEC260C", VA = "0xEC260C")]
	public static void GenerateChildren(Transform t, System.Random randomStream)
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xEC2704", Offset = "0xEC2704", VA = "0xEC2704")]
	public static void ActivateChildren(Transform t)
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xEC2828", Offset = "0xEC2828", VA = "0xEC2828")]
	public static int Repeat(int t, int len)
	{
		return default(int);
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xEC28B4", Offset = "0xEC28B4", VA = "0xEC28B4")]
	public GeneratorChild()
	{
	}
}
[Token(Token = "0x200002D")]
public class GeneratorChildColor : MonoBehaviour
{
	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Material> materials;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer toChange;

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xEC2244", Offset = "0xEC2244", VA = "0xEC2244")]
	public void ChooseRandomColor(System.Random randomStream)
	{
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xEC28C4", Offset = "0xEC28C4", VA = "0xEC28C4")]
	public GeneratorChildColor()
	{
	}
}
[Token(Token = "0x200002E")]
public class GeneratorChildIgnore : MonoBehaviour
{
	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xEC28CC", Offset = "0xEC28CC", VA = "0xEC28CC")]
	public GeneratorChildIgnore()
	{
	}
}
[Token(Token = "0x200002F")]
public class GeneratorChildReparent : MonoBehaviourPun, IPunInstantiateMagicCallback
{
	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected PhotonView islandView;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected int islandViewID;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected bool found;

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xEC28D4", Offset = "0xEC28D4", VA = "0xEC28D4", Slot = "5")]
	public virtual void OnPhotonInstantiate(PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xEC2980", Offset = "0xEC2980", VA = "0xEC2980", Slot = "6")]
	protected virtual void SetPosition()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xEC29D8", Offset = "0xEC29D8", VA = "0xEC29D8")]
	protected void Update()
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xEC2A7C", Offset = "0xEC2A7C", VA = "0xEC2A7C")]
	public GeneratorChildReparent()
	{
	}
}
[Token(Token = "0x2000030")]
public class GeneratorChildReparentChest : GeneratorChildReparent
{
	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TreasureChest chest;

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xEC2A84", Offset = "0xEC2A84", VA = "0xEC2A84", Slot = "6")]
	protected override void SetPosition()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xEC2B00", Offset = "0xEC2B00", VA = "0xEC2B00")]
	public GeneratorChildReparentChest()
	{
	}
}
[Token(Token = "0x2000031")]
public class GeneratorChildSpawn : MonoBehaviour
{
	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject objectToSpawn;

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xEC22F4", Offset = "0xEC22F4", VA = "0xEC22F4")]
	public void Spawn(int island)
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xEC2B08", Offset = "0xEC2B08", VA = "0xEC2B08")]
	public GeneratorChildSpawn()
	{
	}
}
[Token(Token = "0x2000032")]
public class GeneratorCollider : MonoBehaviour
{
	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Collider coll;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float size;

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xEC2B10", Offset = "0xEC2B10", VA = "0xEC2B10")]
	public Vector3 GetCenter()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xEC2B34", Offset = "0xEC2B34", VA = "0xEC2B34")]
	public Vector3 GetExtents()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xEC2B88", Offset = "0xEC2B88", VA = "0xEC2B88")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xEC2BC4", Offset = "0xEC2BC4", VA = "0xEC2BC4")]
	public float GetBiggerstPoint()
	{
		return default(float);
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xEC2BCC", Offset = "0xEC2BCC", VA = "0xEC2BCC")]
	public GeneratorCollider()
	{
	}
}
[Token(Token = "0x2000033")]
public class Island : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isFound;

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xEEFF4C", Offset = "0xEEFF4C", VA = "0xEEFF4C", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xEEFF70", Offset = "0xEEFF70", VA = "0xEEFF70")]
	public Island()
	{
	}
}
[Token(Token = "0x2000034")]
public class IslandGenerator : MonoBehaviourPunCallbacks, IPunInstantiateMagicCallback
{
	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int seed;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture generatedMap;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TreasureChest generatedChest;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnderwaterReef reef;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string c_Zufi;

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0xEF15B4", Offset = "0xEF15B4", VA = "0xEF15B4")]
	public void Randomize()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xEF1700", Offset = "0xEF1700", VA = "0xEF1700")]
	private void ReGenerate()
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xEF1704", Offset = "0xEF1704", VA = "0xEF1704")]
	private void ReActivateAll()
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xEF1638", Offset = "0xEF1638", VA = "0xEF1638")]
	public void Generate()
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xEF1720", Offset = "0xEF1720", VA = "0xEF1720")]
	private void generateImage()
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xEF1808", Offset = "0xEF1808", VA = "0xEF1808")]
	public void setChest(TreasureChest chest)
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xEF1810", Offset = "0xEF1810", VA = "0xEF1810", Slot = "54")]
	public void OnPhotonInstantiate(PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0xEF190C", Offset = "0xEF190C", VA = "0xEF190C")]
	public IslandGenerator()
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xEF1978", Offset = "0xEF1978", VA = "0xEF1978")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB19FA0", Offset = "0xB19FA0")]
	private void <generateImage>b__10_0(Texture t)
	{
	}
}
[Token(Token = "0x2000035")]
public class IslandSpawner : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] islands;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Island currentIsland;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IslandGenerator generatedIsland;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private IslandHookPoint hookPoint;

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public IslandWorldPosition worldPositions;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LayerMask mask;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float sync_currentIslandRotationDiff;

	[Token(Token = "0x17000003")]
	public Island CurrentIsland
	{
		[Token(Token = "0x60000D9")]
		[Address(RVA = "0xEF2374", Offset = "0xEF2374", VA = "0xEF2374")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000004")]
	public IslandGenerator GeneratedIsland
	{
		[Token(Token = "0x60000DA")]
		[Address(RVA = "0xEF237C", Offset = "0xEF237C", VA = "0xEF237C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xEF2384", Offset = "0xEF2384", VA = "0xEF2384")]
	private void Start()
	{
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xEF2558", Offset = "0xEF2558", VA = "0xEF2558")]
	public float GetCurrentRotationDiff()
	{
		return default(float);
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xEF2560", Offset = "0xEF2560", VA = "0xEF2560")]
	public void SpawnIsland()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xEF268C", Offset = "0xEF268C", VA = "0xEF268C")]
	[PunRPC]
	private void RpcSpawnIsland()
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xEF2A90", Offset = "0xEF2A90", VA = "0xEF2A90")]
	[PunRPC]
	private void Rpc_SetCurrentIsland(int id)
	{
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xEF2BB0", Offset = "0xEF2BB0", VA = "0xEF2BB0")]
	[PunRPC]
	private void Rpc_RequestCurrentIsland(PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xEF0FC0", Offset = "0xEF0FC0", VA = "0xEF0FC0")]
	internal void DeSpawnIsland()
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xEF2D08", Offset = "0xEF2D08", VA = "0xEF2D08")]
	[PunRPC]
	private void RpcDeSpawnIsland()
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xEF2E08", Offset = "0xEF2E08", VA = "0xEF2E08")]
	public void EditorSpawnIsland()
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0xEF29F8", Offset = "0xEF29F8", VA = "0xEF29F8")]
	public IslandHookPoint GetHookPoint()
	{
		return null;
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xEF0728", Offset = "0xEF0728", VA = "0xEF0728")]
	public void ToggleIslandActive(bool active)
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xEF0100", Offset = "0xEF0100", VA = "0xEF0100")]
	public void SetIslandtoFound()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xEF0188", Offset = "0xEF0188", VA = "0xEF0188")]
	public void SetIslandTransRot(Transform hookPosition)
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xEF30D0", Offset = "0xEF30D0", VA = "0xEF30D0")]
	public void MoveIslandY(Transform hookPosition)
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xEF2E2C", Offset = "0xEF2E2C", VA = "0xEF2E2C")]
	private Vector3 closestPallet(Vector3 hookPosition)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xEF2510", Offset = "0xEF2510", VA = "0xEF2510")]
	private void OnNewIsland()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xEF3254", Offset = "0xEF3254", VA = "0xEF3254", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xEF3278", Offset = "0xEF3278", VA = "0xEF3278")]
	public IslandSpawner()
	{
	}
}
[Token(Token = "0x2000036")]
public class IslandTester : MonoBehaviourPun
{
	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform hook;

	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] islands;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Island currentIsland;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private IslandHookPoint hookPoint;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LayerMask mask;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject DebugCube;

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xEF3280", Offset = "0xEF3280", VA = "0xEF3280")]
	private void NewIsland()
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xEF366C", Offset = "0xEF366C", VA = "0xEF366C")]
	public void Update()
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xEF33A4", Offset = "0xEF33A4", VA = "0xEF33A4")]
	private void RpcSpawnIsland()
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xEF32A4", Offset = "0xEF32A4", VA = "0xEF32A4")]
	private void RpcDeSpawnIsland()
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xEF37D4", Offset = "0xEF37D4", VA = "0xEF37D4")]
	public IslandHookPoint GetHookPoint()
	{
		return null;
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0xEF3C08", Offset = "0xEF3C08", VA = "0xEF3C08")]
	public void ToggleIslandActive(bool active)
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0xEF386C", Offset = "0xEF386C", VA = "0xEF386C")]
	public void SetIslandTransRot(Transform hookPosition)
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xEF3718", Offset = "0xEF3718", VA = "0xEF3718")]
	public void MoveIslandY(float y)
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xEF3CB8", Offset = "0xEF3CB8", VA = "0xEF3CB8")]
	private Vector3 closestPallet(Vector3 hookPosition)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xEF3F40", Offset = "0xEF3F40", VA = "0xEF3F40")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xEF3FCC", Offset = "0xEF3FCC", VA = "0xEF3FCC")]
	public IslandTester()
	{
	}
}
[Token(Token = "0x2000037")]
public class MapImageGenerator : MonoBehaviour
{
	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera cam;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RenderTexture renderTExture;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Texture backGround;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Texture mask;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Shader renderShader;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ShowAll showAll;

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xE959BC", Offset = "0xE959BC", VA = "0xE959BC")]
	public void RenderMap(IslandGenerator islandGenerator, UnityAction<Texture> callbackDone)
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xE959C4", Offset = "0xE959C4", VA = "0xE959C4")]
	private void RenderMaps(UnityAction<Texture> callbackDone)
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0xE95BA4", Offset = "0xE95BA4", VA = "0xE95BA4")]
	public MapImageGenerator()
	{
	}
}
[Token(Token = "0x2000038")]
public class MapViewer : MonoBehaviour
{
	[Token(Token = "0x2000039")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15064", Offset = "0xB15064")]
	private sealed class <Fade>d__10 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400015C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400015D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400015E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool fadeIn;

		[Token(Token = "0x400015F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MapViewer <>4__this;

		[Token(Token = "0x4000160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float <i>5__2;

		[Token(Token = "0x17000005")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000105")]
			[Address(RVA = "0xE95E38", Offset = "0xE95E38", VA = "0xE95E38", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000006")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000107")]
			[Address(RVA = "0xE95EA0", Offset = "0xE95EA0", VA = "0xE95EA0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000102")]
		[Address(RVA = "0xE95C98", Offset = "0xE95C98", VA = "0xE95C98")]
		[DebuggerHidden]
		public <Fade>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6000103")]
		[Address(RVA = "0xE95CCC", Offset = "0xE95CCC", VA = "0xE95CCC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000104")]
		[Address(RVA = "0xE95CD0", Offset = "0xE95CD0", VA = "0xE95CD0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000106")]
		[Address(RVA = "0xE95E40", Offset = "0xE95E40", VA = "0xE95E40", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IslandGenerator island;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Texture defaultMap;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speed;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material mat;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Coroutine fadeRoutine;

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xE95BAC", Offset = "0xE95BAC", VA = "0xE95BAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xE954D8", Offset = "0xE954D8", VA = "0xE954D8")]
	public void Refresh(IslandGenerator generator)
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xE955C0", Offset = "0xE955C0", VA = "0xE955C0")]
	public void SetRotation(float rot)
	{
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xE95698", Offset = "0xE95698", VA = "0xE95698")]
	public void ShowTreasureMap()
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0xE95488", Offset = "0xE95488", VA = "0xE95488")]
	public void HideTreasureMap()
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xE95C14", Offset = "0xE95C14", VA = "0xE95C14")]
	private IEnumerator Fade(bool fadeIn)
	{
		return null;
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0xE95CC4", Offset = "0xE95CC4", VA = "0xE95CC4")]
	public MapViewer()
	{
	}
}
[Token(Token = "0x200003A")]
public class ShowAll : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200003B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15074", Offset = "0xB15074")]
	private sealed class <>c
	{
		[Token(Token = "0x4000167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Renderer, bool> <>9__7_0;

		[Token(Token = "0x600010E")]
		[Address(RVA = "0xDD2280", Offset = "0xDD2280", VA = "0xDD2280")]
		public <>c()
		{
		}

		[Token(Token = "0x600010F")]
		[Address(RVA = "0xDD2288", Offset = "0xDD2288", VA = "0xDD2288")]
		internal bool <GetBoundsWithChildren>b__7_0(Renderer x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float margin;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float zoomAspect;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float screenAspect;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Bounds foundBounds;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 additional;

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xDD1D4C", Offset = "0xDD1D4C", VA = "0xDD1D4C")]
	public void Focus()
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xDD1F30", Offset = "0xDD1F30", VA = "0xDD1F30")]
	public Bounds GetBoundsWithChildren(GameObject gameObject)
	{
		return default(Bounds);
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0xDD1DAC", Offset = "0xDD1DAC", VA = "0xDD1DAC")]
	public void FocusOn(Camera camera, GameObject focusedObject, float marginPercentage)
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0xDD2188", Offset = "0xDD2188", VA = "0xDD2188")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xDD2208", Offset = "0xDD2208", VA = "0xDD2208")]
	public ShowAll()
	{
	}
}
[Token(Token = "0x200003C")]
public class Tree : MonoBehaviourPunCallbacks, IPunInstantiateMagicCallback
{
	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Fruit[] fruits;

	[Token(Token = "0x400016A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TreeData data;

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool executeStart;

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool reactToChanges;

	[Token(Token = "0x6000110")]
	[Address(RVA = "0xE4D850", Offset = "0xE4D850", VA = "0xE4D850")]
	public void SetUp(TreeData data)
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0xE4DAC8", Offset = "0xE4DAC8", VA = "0xE4DAC8")]
	public void InternOnVegetableReaped(int vegetableIndex)
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0xE4DB10", Offset = "0xE4DB10", VA = "0xE4DB10")]
	public void OnVegetableReaped(int vegetableIndex)
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xE4DB14", Offset = "0xE4DB14", VA = "0xE4DB14")]
	internal void PlantReaped(int vegetableIndex)
	{
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xE4DC10", Offset = "0xE4DC10", VA = "0xE4DC10")]
	[PunRPC]
	private void RPC_PlantReaped(int vegetableIndex)
	{
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0xE4DD0C", Offset = "0xE4DD0C", VA = "0xE4DD0C", Slot = "54")]
	public void OnPhotonInstantiate(PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0xE4DE34", Offset = "0xE4DE34", VA = "0xE4DE34")]
	[PunRPC]
	private void RPC_RequestState_Tree(PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0xE4DF28", Offset = "0xE4DF28", VA = "0xE4DF28")]
	[PunRPC]
	private void RPC_SetTree(string data)
	{
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0xE4DFB8", Offset = "0xE4DFB8", VA = "0xE4DFB8")]
	public void LoadData(string data)
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0xE4E038", Offset = "0xE4E038", VA = "0xE4E038")]
	private void Start()
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0xE4E0BC", Offset = "0xE4E0BC", VA = "0xE4E0BC")]
	public void ReapAll()
	{
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0xE4E198", Offset = "0xE4E198", VA = "0xE4E198")]
	public Tree()
	{
	}
}
[Serializable]
[Token(Token = "0x200003D")]
public class TreeData
{
	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Fruit.FruitData[] fruitData;

	[Token(Token = "0x600011C")]
	[Address(RVA = "0xE4E0B4", Offset = "0xE4E0B4", VA = "0xE4E0B4")]
	public TreeData()
	{
	}
}
[Token(Token = "0x200003E")]
[ExecuteInEditMode]
public class TileMaterialByLenght : MonoBehaviour
{
	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float oldLen;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer rend;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float multiplier;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform[] positions;

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xE4AD48", Offset = "0xE4AD48", VA = "0xE4AD48")]
	public void SetPositions(Transform[] pos)
	{
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0xE4AD50", Offset = "0xE4AD50", VA = "0xE4AD50")]
	private void updateTiling()
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0xE4AF1C", Offset = "0xE4AF1C", VA = "0xE4AF1C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0xE4AF20", Offset = "0xE4AF20", VA = "0xE4AF20")]
	public TileMaterialByLenght()
	{
	}
}
[Token(Token = "0x200003F")]
[ExecuteInEditMode]
public class TubeRenderer : MonoBehaviour
{
	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform[] _positions;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int _sides;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float _radiusOne;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float _radiusTwo;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private bool _useWorldSpace;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	[SerializeField]
	private bool _useTwoRadii;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3[] _vertices;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Mesh _mesh;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x17000007")]
	public Material material
	{
		[Token(Token = "0x6000121")]
		[Address(RVA = "0xE4E1A8", Offset = "0xE4E1A8", VA = "0xE4E1A8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000122")]
		[Address(RVA = "0xE4E1C4", Offset = "0xE4E1C4", VA = "0xE4E1C4")]
		set
		{
		}
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0xE4E1E0", Offset = "0xE4E1E0", VA = "0xE4E1E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xE4E33C", Offset = "0xE4E33C", VA = "0xE4E33C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xE4E35C", Offset = "0xE4E35C", VA = "0xE4E35C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xE4E37C", Offset = "0xE4E37C", VA = "0xE4E37C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xE4E690", Offset = "0xE4E690", VA = "0xE4E690")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xE4E708", Offset = "0xE4E708", VA = "0xE4E708")]
	public void SetPositions(Transform[] positions)
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xE4E380", Offset = "0xE4E380", VA = "0xE4E380")]
	private void GenerateMesh()
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xE4E8E8", Offset = "0xE4E8E8", VA = "0xE4E8E8")]
	private Vector2[] GenerateUVs()
	{
		return null;
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0xE4E710", Offset = "0xE4E710", VA = "0xE4E710")]
	private int[] GenerateIndices()
	{
		return null;
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0xE4EA1C", Offset = "0xE4EA1C", VA = "0xE4EA1C")]
	private Vector3[] CalculateCircle(int index)
	{
		return null;
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0xE4EFEC", Offset = "0xE4EFEC", VA = "0xE4EFEC")]
	public TubeRenderer()
	{
	}
}
[Token(Token = "0x2000040")]
public class AddAllItems : MonoBehaviour
{
	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BuildPanel panel;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InventoryCategory initialCategory;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public CraftingCategory craftingItems;

	[Token(Token = "0x600012E")]
	[Address(RVA = "0xE6EA44", Offset = "0xE6EA44", VA = "0xE6EA44")]
	private void Start()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0xE6EC6C", Offset = "0xE6EC6C", VA = "0xE6EC6C")]
	private void UpdateCategory()
	{
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xE6EA4C", Offset = "0xE6EA4C", VA = "0xE6EA4C")]
	public void updateCategory(InventoryCategory initialCategory)
	{
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0xE6EE34", Offset = "0xE6EE34", VA = "0xE6EE34")]
	public AddAllItems()
	{
	}
}
[Token(Token = "0x2000041")]
public class AddAllItemsCreative : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000042")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB150A4", Offset = "0xB150A4")]
	private sealed class <>c
	{
		[Token(Token = "0x4000182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<InventoryItem, string> <>9__2_0;

		[Token(Token = "0x6000135")]
		[Address(RVA = "0xE6F26C", Offset = "0xE6F26C", VA = "0xE6F26C")]
		public <>c()
		{
		}

		[Token(Token = "0x6000136")]
		[Address(RVA = "0xE6F274", Offset = "0xE6F274", VA = "0xE6F274")]
		internal string <Start>b__2_0(InventoryItem a)
		{
			return null;
		}
	}

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform targetParent;

	[Token(Token = "0x6000132")]
	[Address(RVA = "0xE6EE3C", Offset = "0xE6EE3C", VA = "0xE6EE3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0xE6F200", Offset = "0xE6F200", VA = "0xE6F200")]
	public AddAllItemsCreative()
	{
	}
}
[Token(Token = "0x2000043")]
public class AlwaysKinematic : MonoBehaviour
{
	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rb;

	[Token(Token = "0x6000137")]
	[Address(RVA = "0xE6F290", Offset = "0xE6F290", VA = "0xE6F290")]
	private void Start()
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xE6F2E8", Offset = "0xE6F2E8", VA = "0xE6F2E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0xE6F338", Offset = "0xE6F338", VA = "0xE6F338")]
	public AlwaysKinematic()
	{
	}
}
[Token(Token = "0x2000044")]
public abstract class Anchor : MonoBehaviourPun
{
	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	protected PlayerRaft raft;

	[Token(Token = "0x600013A")]
	[Address(RVA = "0xE6F42C", Offset = "0xE6F42C", VA = "0xE6F42C")]
	protected void Start()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0xE6F494", Offset = "0xE6F494", VA = "0xE6F494")]
	protected void OnDestroy()
	{
	}

	[Token(Token = "0x600013C")]
	public abstract bool HasReachedGround();

	[Token(Token = "0x600013D")]
	public abstract bool HasReachedFullUp();

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xE6F4B4", Offset = "0xE6F4B4", VA = "0xE6F4B4")]
	protected Anchor()
	{
	}
}
[Token(Token = "0x2000045")]
public class AnchorComplex : Anchor
{
	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MoveToNormalizedValue mover;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RotateToSelector lever;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool pulled;

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xE6F4BC", Offset = "0xE6F4BC", VA = "0xE6F4BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xE6F634", Offset = "0xE6F634", VA = "0xE6F634")]
	[PunRPC]
	private void RPC_ThrowAnchor()
	{
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xE6F654", Offset = "0xE6F654", VA = "0xE6F654", Slot = "4")]
	public override bool HasReachedGround()
	{
		return default(bool);
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xE6F670", Offset = "0xE6F670", VA = "0xE6F670", Slot = "5")]
	public override bool HasReachedFullUp()
	{
		return default(bool);
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xE6F68C", Offset = "0xE6F68C", VA = "0xE6F68C")]
	public AnchorComplex()
	{
	}
}
[Token(Token = "0x2000046")]
public class AnchorHolder : MonoBehaviour
{
	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Collider coll;

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xE6F694", Offset = "0xE6F694", VA = "0xE6F694")]
	public void ToggleGrabblable(bool canGrab)
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xE6F6B4", Offset = "0xE6F6B4", VA = "0xE6F6B4")]
	public AnchorHolder()
	{
	}
}
[Token(Token = "0x2000047")]
public class AnchorSimple : Anchor, IPunObservable
{
	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool sync_inWater;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxSinkDistance;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Rigidbody physics;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Buildable buildable;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Transform rope;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private NetworkGrabbable grabbable;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private float cooldownTime;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AnchorHolder hold;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float cooldownTimer;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private bool canTouch;

	[Token(Token = "0x6000146")]
	[Address(RVA = "0xE6F6BC", Offset = "0xE6F6BC", VA = "0xE6F6BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0xE6F710", Offset = "0xE6F710", VA = "0xE6F710", Slot = "5")]
	public override bool HasReachedFullUp()
	{
		return default(bool);
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xE6F720", Offset = "0xE6F720", VA = "0xE6F720", Slot = "4")]
	public override bool HasReachedGround()
	{
		return default(bool);
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xE6F728", Offset = "0xE6F728", VA = "0xE6F728")]
	public void SetUnderWater(Vector3 pos)
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xE6F7A0", Offset = "0xE6F7A0", VA = "0xE6F7A0", Slot = "6")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0xE6F89C", Offset = "0xE6F89C", VA = "0xE6F89C")]
	public void Remove()
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0xE6F994", Offset = "0xE6F994", VA = "0xE6F994")]
	[PunRPC]
	private void Rpc_Destroy()
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xE6FA4C", Offset = "0xE6FA4C", VA = "0xE6FA4C")]
	private void Update()
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xE6FAFC", Offset = "0xE6FAFC", VA = "0xE6FAFC")]
	public AnchorSimple()
	{
	}
}
[Serializable]
[Token(Token = "0x2000048")]
public class ArchievementData
{
	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int rodThrownOut;

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int grillFed;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal int plantWatered;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Dictionary<string, int> crafted;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Dictionary<string, int> built;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Dictionary<string, int> cooked;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Dictionary<string, int> consumed;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Dictionary<string, int> fishGrabbedFromRod;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Dictionary<string, int> pickedFromWater;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Dictionary<string, int> sliced;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	internal Dictionary<string, int> planted;

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xE70F7C", Offset = "0xE70F7C", VA = "0xE70F7C")]
	public ArchievementData()
	{
	}
}
[Token(Token = "0x2000049")]
public class Archievements : MonoBehaviour
{
	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Archievements instance;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArchievementData archievementData;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityAction<string> AmountChanged;

	[Token(Token = "0x40001A2")]
	private const string C_ArchievementData = "ArchievementData";

	[Token(Token = "0x17000008")]
	public static Archievements Instance
	{
		[Token(Token = "0x6000150")]
		[Address(RVA = "0xE7109C", Offset = "0xE7109C", VA = "0xE7109C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0xE71168", Offset = "0xE71168", VA = "0xE71168")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xE71210", Offset = "0xE71210", VA = "0xE71210")]
	private static void increment(Dictionary<string, int> dict, string name)
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xE71368", Offset = "0xE71368", VA = "0xE71368")]
	public static void Crafted(InventoryItem item)
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0xE716B4", Offset = "0xE716B4", VA = "0xE716B4")]
	internal static void Built(InventoryItem item)
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xE71B48", Offset = "0xE71B48", VA = "0xE71B48")]
	public string replaceToken(string txt)
	{
		return null;
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xE720AC", Offset = "0xE720AC", VA = "0xE720AC")]
	internal static void Cooked(InventoryItem item)
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xE7215C", Offset = "0xE7215C", VA = "0xE7215C")]
	internal static void SlicedFood(InventoryItem item)
	{
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xE7222C", Offset = "0xE7222C", VA = "0xE7222C")]
	internal static void FishGrabbedFromRod(InventoryItem item)
	{
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xE72360", Offset = "0xE72360", VA = "0xE72360")]
	internal static void RodThrownOut()
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xE723E4", Offset = "0xE723E4", VA = "0xE723E4")]
	internal static void GrillFed()
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xE724D8", Offset = "0xE724D8", VA = "0xE724D8")]
	internal static void HookCollected(InventoryItem item)
	{
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xE728F0", Offset = "0xE728F0", VA = "0xE728F0")]
	internal static void Planted(InventoryItem item)
	{
	}

	[Token(Token = "0x600015D")]
	[Address(RVA = "0xE729C0", Offset = "0xE729C0", VA = "0xE729C0")]
	internal static void PlantWatered()
	{
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xE72A44", Offset = "0xE72A44", VA = "0xE72A44")]
	internal static void Consumed(InventoryItem item)
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xE7116C", Offset = "0xE7116C", VA = "0xE7116C")]
	public void Load()
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xE712E0", Offset = "0xE712E0", VA = "0xE712E0")]
	public void Save()
	{
	}

	[Token(Token = "0x6000161")]
	[Address(RVA = "0xE72BB0", Offset = "0xE72BB0", VA = "0xE72BB0")]
	public Archievements()
	{
	}
}
[Serializable]
[Token(Token = "0x200004A")]
public class AudioClipSettings
{
	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float pitchModifier;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float volume;

	[Token(Token = "0x6000162")]
	[Address(RVA = "0xE738B0", Offset = "0xE738B0", VA = "0xE738B0")]
	public AudioClipSettings()
	{
	}
}
[Token(Token = "0x200004B")]
public class AudioClipManager : MonoBehaviour, IOnEventCallback
{
	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static System.Random rand;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClipNetworkRegistry data;

	[Token(Token = "0x40001A7")]
	public const byte EC_PlayAudioClip = 3;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioMixerGroup audioMixerGroup;

	[Token(Token = "0x6000163")]
	[Address(RVA = "0xE72C14", Offset = "0xE72C14", VA = "0xE72C14")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0xE72E88", Offset = "0xE72E88", VA = "0xE72E88")]
	public void updateClips()
	{
	}

	[Token(Token = "0x6000165")]
	[Address(RVA = "0xE7059C", Offset = "0xE7059C", VA = "0xE7059C")]
	public static void PlayClipAtPoint(AudioClip clip, Vector3 pos, float pitch = 1f, float volume = 1f)
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0xE72EA0", Offset = "0xE72EA0", VA = "0xE72EA0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0xE72F08", Offset = "0xE72F08", VA = "0xE72F08")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0xE72F70", Offset = "0xE72F70", VA = "0xE72F70", Slot = "4")]
	public void OnEvent(ExitGames.Client.Photon.EventData photonEvent)
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0xE73148", Offset = "0xE73148", VA = "0xE73148")]
	public void PlayClipAtPoint_intern(string clipName, Vector3 pos, float pitch, float volume)
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0xE734AC", Offset = "0xE734AC", VA = "0xE734AC")]
	internal static void PlayClipAtPoint(AudioClip[] clips, Vector3 position, AudioClipSettings settings)
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0xE73604", Offset = "0xE73604", VA = "0xE73604")]
	internal static void PlayClipAtPoint(AudioClip clip, Vector3 position, AudioClipSettings settings)
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0xE73744", Offset = "0xE73744", VA = "0xE73744")]
	public AudioClipManager()
	{
	}
}
[Token(Token = "0x200004C")]
public class AudioManager : MonoBehaviour
{
	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string waveVolume;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static string sfxVolume;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static string voiceVolume;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static string param_waves;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static string param_sfx;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string param_voices;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioMixer audioMixer;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static AudioManager m_instance;

	[Token(Token = "0x17000009")]
	public static AudioManager instance
	{
		[Token(Token = "0x600016E")]
		[Address(RVA = "0xE738C4", Offset = "0xE738C4", VA = "0xE738C4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000A")]
	public float WaveVolume
	{
		[Token(Token = "0x6000170")]
		[Address(RVA = "0xE73AD8", Offset = "0xE73AD8", VA = "0xE73AD8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000171")]
		[Address(RVA = "0xE73CA4", Offset = "0xE73CA4", VA = "0xE73CA4")]
		set
		{
		}
	}

	[Token(Token = "0x1700000B")]
	public float VoiceVolume
	{
		[Token(Token = "0x6000172")]
		[Address(RVA = "0xE73BC0", Offset = "0xE73BC0", VA = "0xE73BC0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000173")]
		[Address(RVA = "0xE73D54", Offset = "0xE73D54", VA = "0xE73D54")]
		set
		{
		}
	}

	[Token(Token = "0x1700000C")]
	public float SFXVolume
	{
		[Token(Token = "0x6000174")]
		[Address(RVA = "0xE73C30", Offset = "0xE73C30", VA = "0xE73C30")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000175")]
		[Address(RVA = "0xE73E04", Offset = "0xE73E04", VA = "0xE73E04")]
		set
		{
		}
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0xE739EC", Offset = "0xE739EC", VA = "0xE739EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xE73B48", Offset = "0xE73B48", VA = "0xE73B48")]
	private float CalculateVolume(float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xE73EB4", Offset = "0xE73EB4", VA = "0xE73EB4")]
	public AudioManager()
	{
	}
}
[Token(Token = "0x200004D")]
public class AudioSettingsUI : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200004E")]
	public class AudioSliderSettingUI
	{
		[Token(Token = "0x40001B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Slider slider;

		[Token(Token = "0x40001B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle toggle;

		[Token(Token = "0x40001B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI text;

		[Token(Token = "0x6000182")]
		[Address(RVA = "0xE740FC", Offset = "0xE740FC", VA = "0xE740FC")]
		public void SetValue(float value)
		{
		}

		[Token(Token = "0x6000183")]
		[Address(RVA = "0xE741A4", Offset = "0xE741A4", VA = "0xE741A4")]
		public void CheckToggle(float value)
		{
		}

		[Token(Token = "0x6000184")]
		[Address(RVA = "0xE744C8", Offset = "0xE744C8", VA = "0xE744C8")]
		public AudioSliderSettingUI()
		{
		}
	}

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioSliderSettingUI waves;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioSliderSettingUI voices;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioSliderSettingUI sfx;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioManager manager;

	[Token(Token = "0x1700000D")]
	private AudioManager AudioManager
	{
		[Token(Token = "0x6000179")]
		[Address(RVA = "0xE73F80", Offset = "0xE73F80", VA = "0xE73F80")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0xE74024", Offset = "0xE74024", VA = "0xE74024")]
	private void Start()
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0xE74268", Offset = "0xE74268", VA = "0xE74268")]
	public void ChangeWaves(float value)
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xE742C0", Offset = "0xE742C0", VA = "0xE742C0")]
	public void ChanceVoices(float value)
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xE74318", Offset = "0xE74318", VA = "0xE74318")]
	public void ChangeSFX(float value)
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xE74370", Offset = "0xE74370", VA = "0xE74370")]
	public void ToggleWaves(bool isOn)
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0xE743E0", Offset = "0xE743E0", VA = "0xE743E0")]
	public void ToggleVoices(bool isOn)
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0xE74450", Offset = "0xE74450", VA = "0xE74450")]
	public void ToggleSFX(bool isOn)
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0xE744C0", Offset = "0xE744C0", VA = "0xE744C0")]
	public AudioSettingsUI()
	{
	}
}
[Token(Token = "0x200004F")]
public class DynamicSound : MonoBehaviour
{
	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private NetworkGrabbable grabbable;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RotateToSelector2 rotator;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float creakAng;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float lastAngle;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource audioSrc;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool moving;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float lerpSpeed;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float lerpSpeedPitch;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float pitchMod;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float mouseSpeedMod;

	[Token(Token = "0x6000185")]
	[Address(RVA = "0xEB6548", Offset = "0xEB6548", VA = "0xEB6548")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0xEB6604", Offset = "0xEB6604", VA = "0xEB6604")]
	private void Update()
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0xEB68EC", Offset = "0xEB68EC", VA = "0xEB68EC")]
	public DynamicSound()
	{
	}
}
[Token(Token = "0x2000050")]
public class AudioClipNetworkRegistry : ScriptableObject
{
	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] clips;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<string, AudioClip> dict;

	[Token(Token = "0x1700000E")]
	private static int dictCount
	{
		[Token(Token = "0x6000188")]
		[Address(RVA = "0xE737B8", Offset = "0xE737B8", VA = "0xE737B8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0xE72C54", Offset = "0xE72C54", VA = "0xE72C54")]
	public void init()
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0xE733AC", Offset = "0xE733AC", VA = "0xE733AC")]
	public static AudioClip Find(string name)
	{
		return null;
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0xE72E84", Offset = "0xE72E84", VA = "0xE72E84")]
	public void updateClips()
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0xE73834", Offset = "0xE73834", VA = "0xE73834")]
	public AudioClipNetworkRegistry()
	{
	}
}
[Token(Token = "0x2000051")]
public class AutoressurectCountdown : MonoBehaviour
{
	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocalPlayerHelper lph;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TMP_Text text;

	[Token(Token = "0x600018E")]
	[Address(RVA = "0xE745C8", Offset = "0xE745C8", VA = "0xE745C8")]
	private void Start()
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0xE74638", Offset = "0xE74638", VA = "0xE74638")]
	private void Update()
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0xE746EC", Offset = "0xE746EC", VA = "0xE746EC")]
	public AutoressurectCountdown()
	{
	}
}
[Token(Token = "0x2000052")]
public class BalloonSpawner : MonoBehaviour
{
	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool spawn;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RandomList loot;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int timeBetweenSpawnMin;

	[Token(Token = "0x40001C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int timeBetweenSpawnMax;

	[Token(Token = "0x40001CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float timer;

	[Token(Token = "0x40001CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float distance;

	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float despawnFactor;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform spawnParent;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float max;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float min;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float baloonHeight;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float baloonSpeedMod;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private System.Random rand;

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xE746F4", Offset = "0xE746F4", VA = "0xE746F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0xE7472C", Offset = "0xE7472C", VA = "0xE7472C")]
	protected float getNextTimer()
	{
		return default(float);
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0xE74744", Offset = "0xE74744", VA = "0xE74744")]
	private void Update()
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0xE747C0", Offset = "0xE747C0", VA = "0xE747C0")]
	protected void MasterUpdate()
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xE74938", Offset = "0xE74938", VA = "0xE74938")]
	protected GameObject GetBalloonItem()
	{
		return null;
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xE74958", Offset = "0xE74958", VA = "0xE74958")]
	protected void SpawnBalloon(Vector3 rotation, float horizontal, GameObject item)
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xE74D38", Offset = "0xE74D38", VA = "0xE74D38")]
	protected void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xE74E88", Offset = "0xE74E88", VA = "0xE74E88")]
	protected void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0xE74F10", Offset = "0xE74F10", VA = "0xE74F10")]
	public BalloonSpawner()
	{
	}
}
[Token(Token = "0x2000053")]
public class Baloon : MonoBehaviourPun
{
	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BalloonSpawner balloonSpawner;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RandomListInventory loot;

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xE74FC4", Offset = "0xE74FC4", VA = "0xE74FC4")]
	private void Start()
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xE75174", Offset = "0xE75174", VA = "0xE75174")]
	private void Update()
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xE75434", Offset = "0xE75434", VA = "0xE75434")]
	private void CheckDeletion()
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xE7559C", Offset = "0xE7559C", VA = "0xE7559C")]
	public void WasDestroyed()
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0xE759C0", Offset = "0xE759C0", VA = "0xE759C0")]
	public Baloon()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0xE75A28", Offset = "0xE75A28", VA = "0xE75A28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1A090", Offset = "0xB1A090")]
	private void <WasDestroyed>b__5_0()
	{
	}
}
[Token(Token = "0x2000054")]
public abstract class BaseRotator : MonoBehaviourPun
{
	[Token(Token = "0x60001A0")]
	public abstract float getNormalizedValue();

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0xE75AC8", Offset = "0xE75AC8", VA = "0xE75AC8")]
	protected BaseRotator()
	{
	}
}
[Token(Token = "0x2000055")]
public class Billboard : MonoBehaviour
{
	[Token(Token = "0x2000056")]
	public enum PivotAxis
	{
		[Token(Token = "0x40001DB")]
		Free,
		[Token(Token = "0x40001DC")]
		X,
		[Token(Token = "0x40001DD")]
		Y
	}

	[Token(Token = "0x2000057")]
	public enum LookAtTargetType
	{
		[Token(Token = "0x40001DF")]
		Camera,
		[Token(Token = "0x40001E0")]
		Player,
		[Token(Token = "0x40001E1")]
		Specify
	}

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LookAtTargetType lookAtTargetType;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform lookAtTarget;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float rotationSpeed;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public PivotAxis pivotAxis;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17F6C", Offset = "0xB17F6C")]
	private Quaternion <DefaultRotation>k__BackingField;

	[Token(Token = "0x1700000F")]
	public Vector3 worldScale
	{
		[Token(Token = "0x60001A2")]
		[Address(RVA = "0xE75AD0", Offset = "0xE75AD0", VA = "0xE75AD0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000010")]
	public Quaternion DefaultRotation
	{
		[Token(Token = "0x60001A3")]
		[Address(RVA = "0xE75AF4", Offset = "0xE75AF4", VA = "0xE75AF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1A0A0", Offset = "0xB1A0A0")]
		get
		{
			return default(Quaternion);
		}
		[Token(Token = "0x60001A4")]
		[Address(RVA = "0xE75B00", Offset = "0xE75B00", VA = "0xE75B00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1A0B0", Offset = "0xB1A0B0")]
		private set
		{
		}
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xE75B0C", Offset = "0xE75B0C", VA = "0xE75B0C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xE75B54", Offset = "0xE75B54", VA = "0xE75B54")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xE75F88", Offset = "0xE75F88", VA = "0xE75F88")]
	public Billboard()
	{
	}
}
[Token(Token = "0x2000058")]
public class FruitBlender : MonoBehaviour
{
	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RotateToSelector rotatorLever;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RotateToSelector rotatorTab;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform blade;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Collider colliderFruit;

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xEC1944", Offset = "0xEC1944", VA = "0xEC1944")]
	public FruitBlender()
	{
	}
}
[Token(Token = "0x2000059")]
public class BlenderBlades : MonoBehaviourPun
{
	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float rotationSpeed;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform blades;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool rotate;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource blenderSound;

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xE75F90", Offset = "0xE75F90", VA = "0xE75F90")]
	[PunRPC]
	public void Rpc_StartRotating()
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xE75FB8", Offset = "0xE75FB8", VA = "0xE75FB8")]
	[PunRPC]
	public void Rpc_StopRotating()
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xE75FDC", Offset = "0xE75FDC", VA = "0xE75FDC")]
	public void Update()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xE76018", Offset = "0xE76018", VA = "0xE76018")]
	public BlenderBlades()
	{
	}
}
[Token(Token = "0x200005A")]
public class BlenderFill : MonoBehaviourPun
{
	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Consumeable.GrillableType canGrill;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Collider[] hits;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject checkPoint;

	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 checkRadius;

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xE76020", Offset = "0xE76020", VA = "0xE76020")]
	public void checkForGrill(Color col)
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xE76554", Offset = "0xE76554", VA = "0xE76554")]
	private float getDistance(Collider a)
	{
		return default(float);
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xE76648", Offset = "0xE76648", VA = "0xE76648")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xE766A0", Offset = "0xE766A0", VA = "0xE766A0")]
	public BlenderFill()
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xE76744", Offset = "0xE76744", VA = "0xE76744")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1A0E0", Offset = "0xB1A0E0")]
	private int <checkForGrill>b__4_0(Collider a, Collider b)
	{
		return default(int);
	}
}
[Token(Token = "0x200005B")]
public class BlenderFluid : FillLiquid
{
	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public MeshRenderer rend;

	[Token(Token = "0x40001EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color fluidColor;

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 networkColor;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private InventoryPickup pickup;

	[Token(Token = "0x40001F2")]
	private const int C_FILLCOLOR = 1;

	[Token(Token = "0x17000011")]
	public Color FluidColor
	{
		[Token(Token = "0x60001B2")]
		[Address(RVA = "0xE7678C", Offset = "0xE7678C", VA = "0xE7678C")]
		get
		{
			return default(Color);
		}
	}

	[Token(Token = "0x17000012")]
	public Vector3 FillColor
	{
		[Token(Token = "0x60001BB")]
		[Address(RVA = "0xE76FEC", Offset = "0xE76FEC", VA = "0xE76FEC")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x60001BC")]
		[Address(RVA = "0xE76C3C", Offset = "0xE76C3C", VA = "0xE76C3C")]
		set
		{
		}
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xE76798", Offset = "0xE76798", VA = "0xE76798")]
	private void Start()
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xE767F0", Offset = "0xE767F0", VA = "0xE767F0")]
	[PunRPC]
	public void RPC_Fill(Vector3 col)
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xE76874", Offset = "0xE76874", VA = "0xE76874")]
	private void SetNewColor(Color newColor)
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0xE76A90", Offset = "0xE76A90", VA = "0xE76A90")]
	public void AddColor(Color color)
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xE76940", Offset = "0xE76940", VA = "0xE76940")]
	private void SetColor(Color color)
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xE769D8", Offset = "0xE769D8", VA = "0xE769D8")]
	private void SetNetworkColor(Vector3 color)
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0xE76CDC", Offset = "0xE76CDC", VA = "0xE76CDC", Slot = "5")]
	public override void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0xE76EC0", Offset = "0xE76EC0", VA = "0xE76EC0")]
	public void SetSave()
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0xE77074", Offset = "0xE77074", VA = "0xE77074")]
	public BlenderFluid()
	{
	}
}
[Token(Token = "0x200005C")]
public class BlenderLever : MonoBehaviour
{
	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RotateToSelector rotator;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnReleaseLever;

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnPulledLever;

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private NetworkGrabbable networkGrabbable;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float lastLevelPoint;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool tabPulled;

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0xE770E4", Offset = "0xE770E4", VA = "0xE770E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xE7713C", Offset = "0xE7713C", VA = "0xE7713C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xE771E8", Offset = "0xE771E8", VA = "0xE771E8")]
	public BlenderLever()
	{
	}
}
[Token(Token = "0x200005D")]
public class BlenderMachine : MonoBehaviourPun
{
	[Token(Token = "0x200005E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB150B4", Offset = "0xB150B4")]
	private sealed class <>c__DisplayClass14_0
	{
		[Token(Token = "0x4000204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Consumeable con;

		[Token(Token = "0x60001CF")]
		[Address(RVA = "0xE7792C", Offset = "0xE7792C", VA = "0xE7792C")]
		public <>c__DisplayClass14_0()
		{
		}

		[Token(Token = "0x60001D0")]
		[Address(RVA = "0xE784BC", Offset = "0xE784BC", VA = "0xE784BC")]
		internal void <Update>b__0()
		{
		}
	}

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private BlenderBlades blade;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private BlenderFluid fluid;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private BlenderTab tab;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RotateToSelector lever;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RotateToSelector tabLever;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected BlenderFill fillBottle;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject fruitCheckPoint;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private LayerMask layer;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private bool checkForLever;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
	private bool pullingTab;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<Consumeable> fruit;

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xE771F8", Offset = "0xE771F8", VA = "0xE771F8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xE77330", Offset = "0xE77330", VA = "0xE77330")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xE77440", Offset = "0xE77440", VA = "0xE77440")]
	public void OnPullLever()
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xE775A0", Offset = "0xE775A0", VA = "0xE775A0")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xE77934", Offset = "0xE77934", VA = "0xE77934")]
	public void OnReleaseLever()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xE77A90", Offset = "0xE77A90", VA = "0xE77A90")]
	public void OnPullTab()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xE77C94", Offset = "0xE77C94", VA = "0xE77C94")]
	public void OnReleaseTab()
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xE77DDC", Offset = "0xE77DDC", VA = "0xE77DDC")]
	[PunRPC]
	public void Rpc_Pur()
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xE77F14", Offset = "0xE77F14", VA = "0xE77F14")]
	[PunRPC]
	public void Rpc_StopPur()
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xE77F30", Offset = "0xE77F30", VA = "0xE77F30")]
	private void OnFluidEmpty()
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xE78064", Offset = "0xE78064", VA = "0xE78064")]
	private void OnFluidRemoved()
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xE7828C", Offset = "0xE7828C", VA = "0xE7828C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xE783A0", Offset = "0xE783A0", VA = "0xE783A0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xE784B4", Offset = "0xE784B4", VA = "0xE784B4")]
	public BlenderMachine()
	{
	}
}
[Token(Token = "0x200005F")]
public class BlenderTab : PourDetector
{
	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private RotateToSelector rotator;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEvent OnReleaseLever;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UnityEvent OnPulledLever;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private NetworkGrabbable networkGrabbable;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool tabPulled;

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xE78534", Offset = "0xE78534", VA = "0xE78534")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xE786E0", Offset = "0xE786E0", VA = "0xE786E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xE77E30", Offset = "0xE77E30", VA = "0xE77E30")]
	public void StartPour(Color pourColor)
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xE785AC", Offset = "0xE785AC", VA = "0xE785AC")]
	public Stream CreateStream()
	{
		return null;
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xE78744", Offset = "0xE78744", VA = "0xE78744")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xE787F0", Offset = "0xE787F0", VA = "0xE787F0")]
	public BlenderTab()
	{
	}
}
[Token(Token = "0x2000060")]
public class Bottle : MonoBehaviourPun
{
	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Consumeable consumable;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private BlenderFluid fluid;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private InventoryPickup pickup;

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xE78B90", Offset = "0xE78B90", VA = "0xE78B90")]
	private void Start()
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xE78D30", Offset = "0xE78D30", VA = "0xE78D30")]
	private void OnConsumedDrink()
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xE76410", Offset = "0xE76410", VA = "0xE76410")]
	public void FillBottle(Color newColor)
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xE78C70", Offset = "0xE78C70", VA = "0xE78C70")]
	private void LoadData()
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xE78E5C", Offset = "0xE78E5C", VA = "0xE78E5C")]
	public Bottle()
	{
	}
}
[Token(Token = "0x2000061")]
public class BuildAbleProvider : MonoBehaviour
{
	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InventoryItem toBuild;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private XRInteractableEvent grabbed;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private XRGrabInteractable m_grabInteractable;

	[Token(Token = "0x17000013")]
	private XRGrabInteractable grabInteractable
	{
		[Token(Token = "0x60001DC")]
		[Address(RVA = "0xE78E64", Offset = "0xE78E64", VA = "0xE78E64")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0xE78EFC", Offset = "0xE78EFC", VA = "0xE78EFC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xE78FF4", Offset = "0xE78FF4", VA = "0xE78FF4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xE790EC", Offset = "0xE790EC", VA = "0xE790EC")]
	private void OnSelectEnter(XRBaseInteractor arg0)
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xE791FC", Offset = "0xE791FC", VA = "0xE791FC")]
	private void Build()
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xE79590", Offset = "0xE79590", VA = "0xE79590")]
	private void OnSelectExit(XRBaseInteractor arg0)
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xE7944C", Offset = "0xE7944C", VA = "0xE7944C")]
	private void removeListener(XRBaseInteractor arg0)
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0xE79594", Offset = "0xE79594", VA = "0xE79594")]
	public BuildAbleProvider()
	{
	}
}
[Token(Token = "0x2000062")]
public class BuildCategoryChanger : MonoBehaviour
{
	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AddAllItems itemVisualizer;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InventoryCategory targetCategory;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BuildPanel panel;

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0xE7959C", Offset = "0xE7959C", VA = "0xE7959C")]
	public void ChangeCategory()
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0xE79B90", Offset = "0xE79B90", VA = "0xE79B90")]
	public BuildCategoryChanger()
	{
	}
}
[Serializable]
[Token(Token = "0x2000063")]
public class GoodBadSprite
{
	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Image img;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color good;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color bad;

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0xEC2F8C", Offset = "0xEC2F8C", VA = "0xEC2F8C")]
	public void setGood(bool v)
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xEC2FF0", Offset = "0xEC2FF0", VA = "0xEC2FF0")]
	public GoodBadSprite()
	{
	}
}
[Token(Token = "0x2000064")]
public class BuildCostVisual : MonoBehaviour
{
	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BuildCostVisualItem[] slots;

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0xE79BA8", Offset = "0xE79BA8", VA = "0xE79BA8")]
	public void UpdateBuildCost(InventoryItem craftAble, Inventory inventory)
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0xE7A0F8", Offset = "0xE7A0F8", VA = "0xE7A0F8")]
	private bool isMissing(InventoryItem item, BuildCost[] missing)
	{
		return default(bool);
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0xE7A1DC", Offset = "0xE7A1DC", VA = "0xE7A1DC")]
	public BuildCostVisual()
	{
	}
}
[Token(Token = "0x2000065")]
public class BuildCostVisualItem : MonoBehaviour
{
	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GoodBadSprite[] available;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image icon;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text amountText;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text nameText;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private List<GameObject> graphicElements;

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0xE7A048", Offset = "0xE7A048", VA = "0xE7A048")]
	public void Toggle(bool active)
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0xE7A1E4", Offset = "0xE7A1E4", VA = "0xE7A1E4")]
	public BuildCostVisualItem()
	{
	}
}
[Token(Token = "0x2000066")]
public class BuildPanel : MonoBehaviour
{
	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InventoryItem craftable;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BuildCostVisual costVisual;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Inventory inventory;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image previewIcon;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TMP_Text mainText;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TMP_Text subText;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Button craftButton;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent onBuildPanelChanged;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject demoOverlay;

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0xE7A1EC", Offset = "0xE7A1EC", VA = "0xE7A1EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xE7A3E4", Offset = "0xE7A3E4", VA = "0xE7A3E4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xE7A328", Offset = "0xE7A328", VA = "0xE7A328")]
	private Inventory getInventory()
	{
		return null;
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xE7A4C0", Offset = "0xE7A4C0", VA = "0xE7A4C0")]
	public void SetInventory(Inventory i)
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xE7A5DC", Offset = "0xE7A5DC", VA = "0xE7A5DC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xE7A6B8", Offset = "0xE7A6B8", VA = "0xE7A6B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xE79724", Offset = "0xE79724", VA = "0xE79724")]
	public void changed()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xE7A7EC", Offset = "0xE7A7EC", VA = "0xE7A7EC")]
	public void Build()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xE7A8EC", Offset = "0xE7A8EC", VA = "0xE7A8EC")]
	private void UpdateEditor()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xE7A8F0", Offset = "0xE7A8F0", VA = "0xE7A8F0")]
	public BuildPanel()
	{
	}
}
[Token(Token = "0x2000067")]
public class BuildSelect : MonoBehaviour
{
	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InventoryItem craftable;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BuildPanel buildPanel;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image imagePreview;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text text;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject demoOverlay;

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xE7A8F8", Offset = "0xE7A8F8", VA = "0xE7A8F8")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0xE7A8FC", Offset = "0xE7A8FC", VA = "0xE7A8FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xE6EC74", Offset = "0xE6EC74", VA = "0xE6EC74")]
	public void updateSprite()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xE7A900", Offset = "0xE7A900", VA = "0xE7A900")]
	public void SelectForBuild()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xE7A92C", Offset = "0xE7A92C", VA = "0xE7A92C")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xE7A9B4", Offset = "0xE7A9B4", VA = "0xE7A9B4")]
	public BuildSelect()
	{
	}
}
[Token(Token = "0x2000068")]
public enum DestructionCheckType
{
	[Token(Token = "0x400022B")]
	None,
	[Token(Token = "0x400022C")]
	RayCastCheck,
	[Token(Token = "0x400022D")]
	LastSeaFoundation
}
[Token(Token = "0x2000069")]
public enum BuildableType
{
	[Token(Token = "0x400022F")]
	NothingSpecial,
	[Token(Token = "0x4000230")]
	Floor,
	[Token(Token = "0x4000231")]
	Pillar,
	[Token(Token = "0x4000232")]
	Table,
	[Token(Token = "0x4000233")]
	Wall
}
[Token(Token = "0x200006A")]
public enum PlacementPlace
{
	[Token(Token = "0x4000235")]
	Floor = 1,
	[Token(Token = "0x4000236")]
	Wall
}
[Serializable]
[Token(Token = "0x200006B")]
public class DestructionCheck
{
	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public DestructionCheckType type;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool debug;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 raycastCheckOrigin;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 raycastCheckDirection;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float rayLen;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BuildableType[] requiredTypes;

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xD85974", Offset = "0xD85974", VA = "0xD85974")]
	public bool isInRequiredTypes(BuildableType t)
	{
		return default(bool);
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xD859DC", Offset = "0xD859DC", VA = "0xD859DC")]
	public DestructionCheck()
	{
	}
}
[Token(Token = "0x200006C")]
public class Buildable : MonoBehaviour, IPunInstantiateMagicCallback
{
	[Serializable]
	[Token(Token = "0x200006D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB150C4", Offset = "0xB150C4")]
	private sealed class <>c
	{
		[Token(Token = "0x400024A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x400024B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<GridBuildSlotItem, bool> <>9__22_0;

		[Token(Token = "0x6000210")]
		[Address(RVA = "0xE7B770", Offset = "0xE7B770", VA = "0xE7B770")]
		public <>c()
		{
		}

		[Token(Token = "0x6000211")]
		[Address(RVA = "0xE7B778", Offset = "0xE7B778", VA = "0xE7B778")]
		internal bool <performLastSeaFloorCheck>b__22_0(GridBuildSlotItem a)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BuildableType type;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PlacementPlace place;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool allChecksRequired;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public DestructionCheck[] checks;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 effectPos;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool destroyForbidden;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int id;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool idPublished;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private UpdateRate idPublish;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public InventoryItem dropOnDestroy;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool canBeDiagonal;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform nonDiagonalTransform;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform diagonalTransform;

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xE6F9B8", Offset = "0xE6F9B8", VA = "0xE6F9B8")]
	public bool canDestroy()
	{
		return default(bool);
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0xE7A9BC", Offset = "0xE7A9BC", VA = "0xE7A9BC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0xE7A9D0", Offset = "0xE7A9D0", VA = "0xE7A9D0")]
	private void CheckDiagonal()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xE7AB28", Offset = "0xE7AB28", VA = "0xE7AB28")]
	private bool isAngle(int angle, int check)
	{
		return default(bool);
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0xE6F9C8", Offset = "0xE6F9C8", VA = "0xE6F9C8")]
	internal void Destroy()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0xE7AB48", Offset = "0xE7AB48", VA = "0xE7AB48")]
	private void performCheckEditor()
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xE7AC00", Offset = "0xE7AC00", VA = "0xE7AC00")]
	public bool isValid(Transform transformToCheck)
	{
		return default(bool);
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0xE7AD10", Offset = "0xE7AD10", VA = "0xE7AD10")]
	private void Update()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0xE7ACDC", Offset = "0xE7ACDC", VA = "0xE7ACDC")]
	private bool performcheck(DestructionCheck check, Transform transformToCheck)
	{
		return default(bool);
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xE7ADBC", Offset = "0xE7ADBC", VA = "0xE7ADBC")]
	private bool performLastSeaFloorCheck(DestructionCheck check)
	{
		return default(bool);
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0xE7AEFC", Offset = "0xE7AEFC", VA = "0xE7AEFC")]
	private bool performRayCheck(DestructionCheck check, Transform transformToCheck)
	{
		return default(bool);
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xE7B1E8", Offset = "0xE7B1E8", VA = "0xE7B1E8")]
	public Ray getRay(DestructionCheck check, Transform transformToCheck)
	{
		return default(Ray);
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0xE7B314", Offset = "0xE7B314", VA = "0xE7B314")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0xE7B444", Offset = "0xE7B444", VA = "0xE7B444")]
	private void gizmo(DestructionCheck check)
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xE7B58C", Offset = "0xE7B58C", VA = "0xE7B58C", Slot = "4")]
	public void OnPhotonInstantiate(PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xE7B690", Offset = "0xE7B690", VA = "0xE7B690")]
	public Buildable()
	{
	}
}
[Token(Token = "0x200006E")]
public class BuildableCollider : MonoBehaviour
{
	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Buildable buildable;

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xE7B798", Offset = "0xE7B798", VA = "0xE7B798")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0xE7B84C", Offset = "0xE7B84C", VA = "0xE7B84C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xE7B8DC", Offset = "0xE7B8DC", VA = "0xE7B8DC")]
	public BuildableCollider()
	{
	}
}
[Token(Token = "0x200006F")]
public class BulettThrowable : Bullet
{
	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float destoryTime;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float destoryTimer;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool destroy;

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xE7B8E4", Offset = "0xE7B8E4", VA = "0xE7B8E4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xE7B9EC", Offset = "0xE7B9EC", VA = "0xE7B9EC")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xE7BD9C", Offset = "0xE7BD9C", VA = "0xE7BD9C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0xE7BF18", Offset = "0xE7BF18", VA = "0xE7BF18")]
	private void Update()
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0xE7BFD4", Offset = "0xE7BFD4", VA = "0xE7BFD4", Slot = "4")]
	protected override void hit(Vector3 pos, Quaternion rot, bool sound = true, bool effect = true)
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xE7C1A8", Offset = "0xE7C1A8", VA = "0xE7C1A8")]
	public BulettThrowable()
	{
	}
}
[Token(Token = "0x2000070")]
public class Bullet : MonoBehaviour
{
	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject hitPrefab;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] hitSound;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int ownerActor;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float damage;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected float timeToDestroy;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	protected float timeToLife;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected float initTime;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float timeBeforeFirstImpact;

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xE7C1F8", Offset = "0xE7C1F8", VA = "0xE7C1F8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xE7C324", Offset = "0xE7C324", VA = "0xE7C324")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xE7BBF0", Offset = "0xE7BBF0", VA = "0xE7BBF0")]
	protected void checkHit(Hitable hitable)
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xE7C4A0", Offset = "0xE7C4A0", VA = "0xE7C4A0", Slot = "4")]
	protected virtual void hit(Vector3 pos, Quaternion rot, bool sound = true, bool effect = true)
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0xE7C680", Offset = "0xE7C680", VA = "0xE7C680")]
	internal void setEvaluator(int owner)
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xE7C688", Offset = "0xE7C688", VA = "0xE7C688")]
	private void Update()
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xE7C74C", Offset = "0xE7C74C", VA = "0xE7C74C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xE7B8E8", Offset = "0xE7B8E8", VA = "0xE7B8E8")]
	internal void init()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xE7C1D0", Offset = "0xE7C1D0", VA = "0xE7C1D0")]
	public Bullet()
	{
	}
}
[Token(Token = "0x2000071")]
public class ButtonSound : MonoBehaviour
{
	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip clip;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource source;

	[Token(Token = "0x6000224")]
	[Address(RVA = "0xE7D168", Offset = "0xE7D168", VA = "0xE7D168")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0xE7D228", Offset = "0xE7D228", VA = "0xE7D228")]
	private void Click()
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xE7D268", Offset = "0xE7D268", VA = "0xE7D268")]
	public ButtonSound()
	{
	}
}
[Token(Token = "0x2000072")]
public class BuyUrl : MonoBehaviour
{
	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private string link;

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xE7D270", Offset = "0xE7D270", VA = "0xE7D270")]
	public void OpenUrl()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xE7D27C", Offset = "0xE7D27C", VA = "0xE7D27C")]
	public BuyUrl()
	{
	}
}
[Serializable]
[Token(Token = "0x2000073")]
public class CharacterBaseItems
{
	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public CustomizedSlotType type;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool collectable;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] items;

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xE8497C", Offset = "0xE8497C", VA = "0xE8497C")]
	public CharacterBaseItems()
	{
	}
}
[Token(Token = "0x2000074")]
public class CharacterBase : MonoBehaviour
{
	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CharacterBaseItems[] items;

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xE84694", Offset = "0xE84694", VA = "0xE84694")]
	internal GameObject get(CustomizedSlotType type, string content)
	{
		return null;
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0xE846A0", Offset = "0xE846A0", VA = "0xE846A0")]
	internal GameObject get(CustomizedSlotType type, string content, bool forward, bool cycle = true)
	{
		return null;
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xE84874", Offset = "0xE84874", VA = "0xE84874")]
	internal GameObject getRandom(CustomizedSlotType type)
	{
		return null;
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0xE84974", Offset = "0xE84974", VA = "0xE84974")]
	public CharacterBase()
	{
	}
}
[Token(Token = "0x2000075")]
public class CharacterColorPickerButton : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CharacterItemView view;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip clip;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource source;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color color;

	[Token(Token = "0x600022E")]
	[Address(RVA = "0xE85774", Offset = "0xE85774", VA = "0xE85774")]
	private void Start()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0xE857CC", Offset = "0xE857CC", VA = "0xE857CC", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xE85A8C", Offset = "0xE85A8C", VA = "0xE85A8C")]
	public CharacterColorPickerButton()
	{
	}
}
[Token(Token = "0x2000076")]
public class CharacterItemSlot : MonoBehaviour
{
	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject itemHolder;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject item;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string itemName;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CustomizedSlotType type;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CharacterItemView view;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip[] clips;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static System.Random rand;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Material mat;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AudioSource source;

	[Token(Token = "0x6000231")]
	[Address(RVA = "0xE85A9C", Offset = "0xE85A9C", VA = "0xE85A9C")]
	public void Initialize(CharacterItemView view)
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xE85B04", Offset = "0xE85B04", VA = "0xE85B04")]
	public void SetItem(GameObject item, CustomizedSlotType type, float hight, float rotation, float scale, Color col)
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xE85D40", Offset = "0xE85D40", VA = "0xE85D40")]
	public void SetColor(Color col)
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xE85EB4", Offset = "0xE85EB4", VA = "0xE85EB4")]
	public void EmptySlot()
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0xE86014", Offset = "0xE86014", VA = "0xE86014")]
	public void OnSelect()
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xE862EC", Offset = "0xE862EC", VA = "0xE862EC")]
	public CharacterItemSlot()
	{
	}
}
[Token(Token = "0x2000077")]
public class CharacterItemView : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000078")]
	public struct ItemHight
	{
		[Token(Token = "0x400027D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public CustomizedSlotType type;

		[Token(Token = "0x400027E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float hight;

		[Token(Token = "0x400027F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float rotation;

		[Token(Token = "0x4000280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float scale;
	}

	[Token(Token = "0x2000079")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB150D4", Offset = "0xB150D4")]
	private sealed class <>c__DisplayClass20_0
	{
		[Token(Token = "0x4000281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int i;

		[Token(Token = "0x4000282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CharacterItemView <>4__this;

		[Token(Token = "0x6000247")]
		[Address(RVA = "0xD74E98", Offset = "0xD74E98", VA = "0xD74E98")]
		public <>c__DisplayClass20_0()
		{
		}

		[Token(Token = "0x6000248")]
		[Address(RVA = "0xD74EA0", Offset = "0xD74EA0", VA = "0xD74EA0")]
		internal bool <InitializeItems>b__0(CollectedCustomizable s)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<CharacterItemSlot> slots;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CharacterBase characterBase;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CharacterBase activeAccessories;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public CustomizedCharacter customizedCharacter;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ItemHight> itemPositions;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI pageCount;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ItemHight position;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject colorPickerPanel;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int currentItemNumber;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int currentEndNumber;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int pageNumber;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private CustomizedSlotType activeType;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Color activeColor;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private PlayerObject localPlayer;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private CharacterVisualSynchronizer sync;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public List<CharacterColorPickerButton> buttons;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform poolParent;

	[Token(Token = "0x17000014")]
	private PlayerObject LocalPlayer
	{
		[Token(Token = "0x6000238")]
		[Address(RVA = "0xE86360", Offset = "0xE86360", VA = "0xE86360")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xE86410", Offset = "0xE86410", VA = "0xE86410")]
	private void Start()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xE86528", Offset = "0xE86528", VA = "0xE86528")]
	private void InitializeItems()
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xE870CC", Offset = "0xE870CC", VA = "0xE870CC")]
	public void AddNewItem(CustomizedSlotType type, string name)
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xE86E48", Offset = "0xE86E48", VA = "0xE86E48")]
	public void SetItems(CustomizedSlotType type)
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0xE87408", Offset = "0xE87408", VA = "0xE87408")]
	public void SetItems(int start, int end)
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0xE875C0", Offset = "0xE875C0", VA = "0xE875C0")]
	public void PageForward()
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0xE877C8", Offset = "0xE877C8", VA = "0xE877C8")]
	public void PageBackward()
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0xE8752C", Offset = "0xE8752C", VA = "0xE8752C")]
	public void emptyAllSlots()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0xE86190", Offset = "0xE86190", VA = "0xE86190")]
	public void SelectedItem(string name, CustomizedSlotType type)
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0xE85884", Offset = "0xE85884", VA = "0xE85884")]
	public void SelectedColor(Color col)
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0xE87948", Offset = "0xE87948", VA = "0xE87948")]
	public void SetCreatorColors(float start, float end, Color col)
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0xE87A24", Offset = "0xE87A24", VA = "0xE87A24")]
	internal void randomizeSlot(CustomizedSlotType type)
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xE87BCC", Offset = "0xE87BCC", VA = "0xE87BCC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0xE87C60", Offset = "0xE87C60", VA = "0xE87C60")]
	public CharacterItemView()
	{
	}
}
[Token(Token = "0x200007A")]
public class CharacterItemViewButton : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CharacterItemView view;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CustomizedSlotType type;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string textValue;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text textField;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool activateColors;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool isCollectable;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip clip;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioSource source;

	[Token(Token = "0x6000249")]
	[Address(RVA = "0xD74F08", Offset = "0xD74F08", VA = "0xD74F08")]
	private void Start()
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0xD74F60", Offset = "0xD74F60", VA = "0xD74F60", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0xD75034", Offset = "0xD75034", VA = "0xD75034")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0xD75140", Offset = "0xD75140", VA = "0xD75140")]
	public CharacterItemViewButton()
	{
	}
}
[Token(Token = "0x200007B")]
public class CharacterSlotCycler : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CharacterItemView view;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CustomizedSlotType type;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string textValue;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TMP_Text textField;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool autosave;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CustomizedSlotType[] randomizeSlots;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip clip;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AudioSource source;

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xD75148", Offset = "0xD75148", VA = "0xD75148")]
	private void Start()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0xD751A0", Offset = "0xD751A0", VA = "0xD751A0")]
	public void Cycle(bool forward)
	{
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0xD75538", Offset = "0xD75538", VA = "0xD75538")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xD75540", Offset = "0xD75540", VA = "0xD75540", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0xD75548", Offset = "0xD75548", VA = "0xD75548")]
	public void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0xD75550", Offset = "0xD75550", VA = "0xD75550")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xD7565C", Offset = "0xD7565C", VA = "0xD7565C")]
	public CharacterSlotCycler()
	{
	}
}
[Token(Token = "0x200007C")]
public class CharacterVisualSynchronizer : MonoBehaviour
{
	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CharacterVisualSynchronizer instance;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<CustomizedCharacter> otherCharacters;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<CharacterItemView> otherviews;

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xD75664", Offset = "0xD75664", VA = "0xD75664")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0xD75708", Offset = "0xD75708", VA = "0xD75708")]
	public void AddCharacter(CustomizedCharacter c)
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xD75770", Offset = "0xD75770", VA = "0xD75770")]
	public void RemoveCharacter(CustomizedCharacter c)
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0xD757D8", Offset = "0xD757D8", VA = "0xD757D8")]
	public void AddView(CharacterItemView v)
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0xD75840", Offset = "0xD75840", VA = "0xD75840")]
	public void RemoveView(CharacterItemView v)
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xD758A8", Offset = "0xD758A8", VA = "0xD758A8")]
	public void SetSelectedItem(string name, CustomizedSlotType type, Color c)
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xD75A3C", Offset = "0xD75A3C", VA = "0xD75A3C")]
	public void SetSelectedItem(string name, CustomizedSlotType type)
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xD75AE8", Offset = "0xD75AE8", VA = "0xD75AE8")]
	public void RemoveItem(CustomizedSlotType type)
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0xD75D20", Offset = "0xD75D20", VA = "0xD75D20")]
	public void SetColor(Color c, CustomizedSlotType type)
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0xD75DEC", Offset = "0xD75DEC", VA = "0xD75DEC")]
	public void AddNewItem(CustomizedSlotType type, string name)
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0xD75E9C", Offset = "0xD75E9C", VA = "0xD75E9C")]
	public CharacterVisualSynchronizer()
	{
	}
}
[Token(Token = "0x200007D")]
public class ChildOfPlayerRaft : MonoBehaviour
{
	[Token(Token = "0x600025F")]
	[Address(RVA = "0xD78ACC", Offset = "0xD78ACC", VA = "0xD78ACC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0xD78B54", Offset = "0xD78B54", VA = "0xD78B54")]
	public ChildOfPlayerRaft()
	{
	}
}
[Token(Token = "0x200007E")]
public class CollissionForwarder : MonoBehaviour
{
	[Token(Token = "0x6000261")]
	[Address(RVA = "0xD78BCC", Offset = "0xD78BCC", VA = "0xD78BCC")]
	public CollissionForwarder()
	{
	}
}
[Token(Token = "0x200007F")]
public class ConfigProvider : ScriptableObject
{
	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int MainVersion;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int SubVersion;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int Build;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ConfigProvider m_current;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject sploshPrefab;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject destroyEffect;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<GameObject> spawnViaPool;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CFXR_Effect.ClearBehavior requiredBehavior;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ShFX_EffectHandler.EndAction requiredBehavior2;

	[Token(Token = "0x17000015")]
	public static ConfigProvider current
	{
		[Token(Token = "0x6000262")]
		[Address(RVA = "0xD78BD4", Offset = "0xD78BD4", VA = "0xD78BD4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0xD78C8C", Offset = "0xD78C8C", VA = "0xD78C8C")]
	public string getVersion()
	{
		return null;
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xD78E80", Offset = "0xD78E80", VA = "0xD78E80")]
	public bool isPoolSpawn(GameObject go)
	{
		return default(bool);
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0xD78EE8", Offset = "0xD78EE8", VA = "0xD78EE8")]
	public static string getPlayerId()
	{
		return null;
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xD78F40", Offset = "0xD78F40", VA = "0xD78F40")]
	public static string getPlayerName()
	{
		return null;
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xD78F98", Offset = "0xD78F98", VA = "0xD78F98")]
	public ConfigProvider()
	{
	}
}
[Token(Token = "0x2000080")]
public class Consumeable : MonoBehaviourPun, IPunObservable, IPunInstantiateMagicCallback
{
	[Token(Token = "0x2000081")]
	public enum ConsumeAbleState
	{
		[Token(Token = "0x40002B5")]
		Initial,
		[Token(Token = "0x40002B6")]
		Prepared,
		[Token(Token = "0x40002B7")]
		Cooked
	}

	[Token(Token = "0x2000082")]
	public enum GrillableType
	{
		[Token(Token = "0x40002B9")]
		Food = 0,
		[Token(Token = "0x40002BA")]
		Water = 1,
		[Token(Token = "0x40002BB")]
		Nothing = 99
	}

	[Serializable]
	[Token(Token = "0x2000083")]
	public class ConsumeAbleStateContent
	{
		[Token(Token = "0x40002BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject visual;

		[Token(Token = "0x40002BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InventoryItem pickupItem;

		[Token(Token = "0x40002BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool consumeAble;

		[Token(Token = "0x40002BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool canGrill;

		[Token(Token = "0x6000282")]
		[Address(RVA = "0xD7A43C", Offset = "0xD7A43C", VA = "0xD7A43C")]
		public ConsumeAbleStateContent()
		{
		}
	}

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool destroyOnConsume;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ConsumeAbleState currentState;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GrillableType type;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool setStateWhenconsumed;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ConsumeAbleState stateWhenConsumed;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ConsumeAbleStateContent initial;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ConsumeAbleStateContent prepared;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ConsumeAbleStateContent cooked;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject sliceEffect;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject grillEffect;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB180AC", Offset = "0xB180AC")]
	public float SideProgressA;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private InventoryPickup pickup;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float resetConsumeTimeout;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float consumeTimeout;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float consumeProgress;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float consumeDuration;

	[Token(Token = "0x40002AF")]
	public const string C_SourceState = "ConsumableState";

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioClip[] consumeClips;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioClipSettings consumeClipSettings;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Stream stream;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public UnityEvent onConsumed;

	[Token(Token = "0x6000268")]
	[Address(RVA = "0xD78FB0", Offset = "0xD78FB0", VA = "0xD78FB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xD79008", Offset = "0xD79008", VA = "0xD79008")]
	internal bool canSlice()
	{
		return default(bool);
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0xD79018", Offset = "0xD79018", VA = "0xD79018")]
	[PunRPC]
	private void RPC_RequestState_ConsumeAble(PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0xD79124", Offset = "0xD79124", VA = "0xD79124")]
	public void ChangeState(ConsumeAbleState newState)
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0xD79220", Offset = "0xD79220", VA = "0xD79220")]
	[PunRPC]
	public void RPC_ChangeState(int newStateInt)
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xD79224", Offset = "0xD79224", VA = "0xD79224")]
	public void intern_changestate(ConsumeAbleState newState)
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xD794A8", Offset = "0xD794A8", VA = "0xD794A8")]
	internal bool isGrillable()
	{
		return default(bool);
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0xD7950C", Offset = "0xD7950C", VA = "0xD7950C")]
	internal void slice()
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0xD79610", Offset = "0xD79610", VA = "0xD79610")]
	[PunRPC]
	private void RPC_Slice()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0xD796D8", Offset = "0xD796D8", VA = "0xD796D8")]
	public void grilled(float interval)
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0xD797DC", Offset = "0xD797DC", VA = "0xD797DC")]
	[PunRPC]
	public void RPC_setProgress(int value)
	{
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0xD797E8", Offset = "0xD797E8", VA = "0xD797E8")]
	[PunRPC]
	private void RPC_Grilled(float interval)
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0xD799D0", Offset = "0xD799D0", VA = "0xD799D0")]
	[PunRPC]
	private void RPC_GrillDoneEffect()
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0xD79ABC", Offset = "0xD79ABC", VA = "0xD79ABC")]
	public bool isGrillDoneNext(float invervall)
	{
		return default(bool);
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0xD799BC", Offset = "0xD799BC", VA = "0xD799BC")]
	public bool isGrillDone()
	{
		return default(bool);
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0xD79B18", Offset = "0xD79B18", VA = "0xD79B18")]
	internal void ConsumedBy(Mouth mouth, PlayerObject playerObject, bool water)
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0xD79F18", Offset = "0xD79F18", VA = "0xD79F18")]
	private void Update()
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0xD79CD4", Offset = "0xD79CD4", VA = "0xD79CD4")]
	internal void Consumed(float v, [Optional] PlayerObject playerObject)
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0xD79F54", Offset = "0xD79F54", VA = "0xD79F54")]
	public void heal(PlayerObject playerObject)
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0xD79C70", Offset = "0xD79C70", VA = "0xD79C70")]
	private bool canConsume()
	{
		return default(bool);
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0xD7A08C", Offset = "0xD7A08C", VA = "0xD7A08C")]
	internal bool isCooked()
	{
		return default(bool);
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0xD7A09C", Offset = "0xD7A09C", VA = "0xD7A09C", Slot = "5")]
	public void OnPhotonInstantiate(PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0xD7A248", Offset = "0xD7A248", VA = "0xD7A248", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0xD7A3AC", Offset = "0xD7A3AC", VA = "0xD7A3AC")]
	public float getConsumeProgress()
	{
		return default(float);
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0xD7A3B4", Offset = "0xD7A3B4", VA = "0xD7A3B4")]
	public Color GetBlendColor()
	{
		return default(Color);
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0xD7A41C", Offset = "0xD7A41C", VA = "0xD7A41C")]
	public Consumeable()
	{
	}
}
[Token(Token = "0x2000084")]
public class ControllerAdditionalRotation : MonoBehaviour
{
	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 additionalStandalone;

	[Token(Token = "0x6000283")]
	[Address(RVA = "0xD7A44C", Offset = "0xD7A44C", VA = "0xD7A44C")]
	public ControllerAdditionalRotation()
	{
	}
}
[Token(Token = "0x2000085")]
public class ControllerConfiguration : MonoBehaviour
{
	[Token(Token = "0x2000086")]
	public enum ConfigurationAction
	{
		[Token(Token = "0x40002D0")]
		None,
		[Token(Token = "0x40002D1")]
		Menu,
		[Token(Token = "0x40002D2")]
		Teleport,
		[Token(Token = "0x40002D3")]
		Locomotion,
		[Token(Token = "0x40002D4")]
		ToolSelection,
		[Token(Token = "0x40002D5")]
		Grip,
		[Token(Token = "0x40002D6")]
		Use
	}

	[Token(Token = "0x2000087")]
	public class InputDeviceInfo
	{
		[Token(Token = "0x40002D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private XRNode node;

		[Token(Token = "0x40002D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private InputDevice m_inputDevice;

		[Token(Token = "0x40002D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private InputDevice lastInputDevice;

		[Token(Token = "0x17000017")]
		public InputDevice inputDevice
		{
			[Token(Token = "0x6000299")]
			[Address(RVA = "0xD7A9A4", Offset = "0xD7A9A4", VA = "0xD7A9A4")]
			get
			{
				return default(InputDevice);
			}
		}

		[Token(Token = "0x600029A")]
		[Address(RVA = "0xD7B714", Offset = "0xD7B714", VA = "0xD7B714")]
		public InputDeviceInfo(XRNode node)
		{
		}

		[Token(Token = "0x600029B")]
		[Address(RVA = "0xD7AF80", Offset = "0xD7AF80", VA = "0xD7AF80")]
		internal bool changed()
		{
			return default(bool);
		}

		[Token(Token = "0x600029C")]
		[Address(RVA = "0xD7B18C", Offset = "0xD7B18C", VA = "0xD7B18C")]
		internal bool changedwithoutanalytics()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ControllerConfiguration instance;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<ControllerConfigurationData> data;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int currentConfigurationIndex;

	[Token(Token = "0x40002C4")]
	public const string C_CONTROLLER_CONFIGURATION = "Controller_Configuration_Setting";

	[Token(Token = "0x40002C5")]
	public const string C_CONTROLLER_MOVESPEED = "Configuration_Setting_MoveSpeed";

	[Token(Token = "0x40002C6")]
	public const string C_CONTROLLER_DOMINANT_HAND = "Configuration_Settings_DominandHand";

	[Token(Token = "0x40002C7")]
	public const string C_CONTROLLER_ROTATIONSPEED = "Configuration_Setting_RotationSpeed";

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityAction onConfigurationChanged;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private InputDeviceInfo head;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private InputDeviceInfo left;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private InputDeviceInfo right;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool dominantRight;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	internal float moveSpeed;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	internal float rotationSpeed;

	[Token(Token = "0x17000016")]
	public static ControllerConfiguration Instance
	{
		[Token(Token = "0x600028E")]
		[Address(RVA = "0xD7AA94", Offset = "0xD7AA94", VA = "0xD7AA94")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0xD7A454", Offset = "0xD7A454", VA = "0xD7A454")]
	internal void setMoveSpeed(float value)
	{
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0xD7A4EC", Offset = "0xD7A4EC", VA = "0xD7A4EC")]
	internal void setRotationSpeed(float value)
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0xD7A570", Offset = "0xD7A570", VA = "0xD7A570")]
	private void Start()
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0xD7A660", Offset = "0xD7A660", VA = "0xD7A660")]
	internal InputHelpers.Button getUsage(ConfigurationAction configurationAction, XRNode controllerNode)
	{
		return default(InputHelpers.Button);
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0xD7A798", Offset = "0xD7A798", VA = "0xD7A798")]
	internal bool requiresAxisClick(ConfigurationAction configurationAction, bool left)
	{
		return default(bool);
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0xD7A8B0", Offset = "0xD7A8B0", VA = "0xD7A8B0")]
	internal bool requiresAxisClick(ConfigurationAction configurationAction, XRNode controllerNode)
	{
		return default(bool);
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0xD7A7C8", Offset = "0xD7A7C8", VA = "0xD7A7C8")]
	private bool getNeedsClick(bool dominantHand, ConfigurationAction configurationAction)
	{
		return default(bool);
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0xD7A6B0", Offset = "0xD7A6B0", VA = "0xD7A6B0")]
	private InputHelpers.Button getUsage(bool dominantHand, ConfigurationAction configurationAction)
	{
		return default(InputHelpers.Button);
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0xD7AA58", Offset = "0xD7AA58", VA = "0xD7AA58")]
	public bool isVive()
	{
		return default(bool);
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0xD7A970", Offset = "0xD7A970", VA = "0xD7A970")]
	public InputDeviceInfo getInputDevice(bool dominantHand)
	{
		return null;
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0xD7A900", Offset = "0xD7A900", VA = "0xD7A900")]
	public ControllerConfigurationData currentConfig()
	{
		return null;
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0xD7AB60", Offset = "0xD7AB60", VA = "0xD7AB60")]
	public void ChangeDominantHand(bool right)
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0xD7AC58", Offset = "0xD7AC58", VA = "0xD7AC58")]
	public void ChangeConfiguration(bool forward)
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0xD7AD28", Offset = "0xD7AD28", VA = "0xD7AD28")]
	public XRInputRemapper.ControllerType getControllerType()
	{
		return default(XRInputRemapper.ControllerType);
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0xD7AD90", Offset = "0xD7AD90", VA = "0xD7AD90")]
	private void Update()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0xD7A4D8", Offset = "0xD7A4D8", VA = "0xD7A4D8")]
	public void Changed()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0xD7B21C", Offset = "0xD7B21C", VA = "0xD7B21C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB1A180", Offset = "0xB1A180")]
	public void toggleDominantHand()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xD7B22C", Offset = "0xD7B22C", VA = "0xD7B22C")]
	public string replaceButtonToken(string txt)
	{
		return null;
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0xD7B3A8", Offset = "0xD7B3A8", VA = "0xD7B3A8")]
	private string getTranslatedUsageName(ConfigurationAction action)
	{
		return null;
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xD7B654", Offset = "0xD7B654", VA = "0xD7B654")]
	public ControllerConfiguration()
	{
	}
}
[Token(Token = "0x2000088")]
public class ControllerConfigurationData : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x2000089")]
	public class ControllerInputButton
	{
		[Token(Token = "0x40002DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float buttonOculusAxisPressTreshold;

		[Token(Token = "0x40002DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public InputHelpers.Button buttonOculus;

		[Token(Token = "0x40002DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float buttonKnucklesAxisPressTreshold;

		[Token(Token = "0x40002E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public InputHelpers.Button buttonKnuckles;

		[Token(Token = "0x40002E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float buttonViveAxisPressTreshold;

		[Token(Token = "0x40002E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public InputHelpers.Button buttonVive;

		[Token(Token = "0x40002E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool requireAxisClickVive;

		[Token(Token = "0x40002E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool individualAxisTreshold;

		[Token(Token = "0x60002A0")]
		[Address(RVA = "0xD7B7C8", Offset = "0xD7B7C8", VA = "0xD7B7C8")]
		internal InputHelpers.Button controllerButton()
		{
			return default(InputHelpers.Button);
		}

		[Token(Token = "0x60002A1")]
		[Address(RVA = "0xD7A9E8", Offset = "0xD7A9E8", VA = "0xD7A9E8")]
		internal InputHelpers.Button controllerButton(ControllerConfiguration.InputDeviceInfo inputDeviceInfo)
		{
			return default(InputHelpers.Button);
		}

		[Token(Token = "0x60002A2")]
		[Address(RVA = "0xD7B80C", Offset = "0xD7B80C", VA = "0xD7B80C")]
		public ControllerInputButton()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200008A")]
	public class HandSetting
	{
		[Token(Token = "0x40002E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool canMove;

		[Token(Token = "0x40002E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool canSnapTurn;

		[Token(Token = "0x40002E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool snapTurnClickVive;

		[Token(Token = "0x40002E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool canSmoothTurn;

		[Token(Token = "0x40002E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool canTeleport;

		[Token(Token = "0x40002EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool canOpenMenu;

		[Token(Token = "0x40002EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ControllerInputButton teleportButton;

		[Token(Token = "0x40002EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ControllerInputButton buttonMenu;

		[Token(Token = "0x60002A3")]
		[Address(RVA = "0xD7B828", Offset = "0xD7B828", VA = "0xD7B828")]
		public HandSetting()
		{
		}
	}

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControllerInputButton buttonSwitchTool;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HandSetting dominant;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HandSetting nonDominant;

	[Token(Token = "0x600029D")]
	[Address(RVA = "0xD7B740", Offset = "0xD7B740", VA = "0xD7B740")]
	public HandSetting getLeftSetting()
	{
		return null;
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0xD7B780", Offset = "0xD7B780", VA = "0xD7B780")]
	public HandSetting getRightSetting()
	{
		return null;
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0xD7B7C0", Offset = "0xD7B7C0", VA = "0xD7B7C0")]
	public ControllerConfigurationData()
	{
	}
}
[Token(Token = "0x200008B")]
public class ControllerConfigurationReceiver : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200008C")]
	public class ControllerConfigurationReceiverTarget
	{
		[Token(Token = "0x40002EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Component receiver;

		[Token(Token = "0x40002EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ControllerConfiguration.ConfigurationAction configurationAction;

		[Token(Token = "0x60002A8")]
		[Address(RVA = "0xD7BC18", Offset = "0xD7BC18", VA = "0xD7BC18")]
		public ControllerConfigurationReceiverTarget()
		{
		}
	}

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<ControllerConfigurationReceiverTarget> targets;

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0xD7B830", Offset = "0xD7B830", VA = "0xD7B830")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0xD7B8EC", Offset = "0xD7B8EC", VA = "0xD7B8EC")]
	private void Changed()
	{
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0xD7B9D4", Offset = "0xD7B9D4", VA = "0xD7B9D4")]
	private void Changed(ControllerConfigurationReceiverTarget config)
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0xD7BC10", Offset = "0xD7BC10", VA = "0xD7BC10")]
	public ControllerConfigurationReceiver()
	{
	}
}
[Token(Token = "0x200008D")]
public class ControllerDependent : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200008E")]
	public class WhenControllerType
	{
		[Token(Token = "0x40002F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public XRInputRemapper.ControllerType when;

		[Token(Token = "0x40002F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] then;

		[Token(Token = "0x60002AE")]
		[Address(RVA = "0xD7BF58", Offset = "0xD7BF58", VA = "0xD7BF58")]
		public WhenControllerType()
		{
		}
	}

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WhenControllerType[] configurations;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public XRController controller;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private InputDevice m_InputDevice;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private InputDevice lastDevice;

	[Token(Token = "0x17000018")]
	public InputDevice inputDevice
	{
		[Token(Token = "0x60002AA")]
		[Address(RVA = "0xD7BE74", Offset = "0xD7BE74", VA = "0xD7BE74")]
		get
		{
			return default(InputDevice);
		}
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0xD7BC20", Offset = "0xD7BC20", VA = "0xD7BC20")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0xD7BEC4", Offset = "0xD7BEC4", VA = "0xD7BEC4")]
	private void Update()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xD7BC24", Offset = "0xD7BC24", VA = "0xD7BC24")]
	public void showStuff()
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xD7BF50", Offset = "0xD7BF50", VA = "0xD7BF50")]
	public ControllerDependent()
	{
	}
}
[Token(Token = "0x200008F")]
public class ControllerInput : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000090")]
	public class ControllerInputButton
	{
		[Token(Token = "0x40002F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InputHelpers.Button button;

		[Token(Token = "0x40002FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractionState state;

		[Token(Token = "0x60002B9")]
		[Address(RVA = "0xD7C434", Offset = "0xD7C434", VA = "0xD7C434")]
		public ControllerInputButton(InputHelpers.Button button)
		{
		}
	}

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private XRNode m_ControllerNode;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private InputDeviceWrapper m_InputDevice;

	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float axisToPressThreshold;

	[Token(Token = "0x17000019")]
	public XRNode controllerNode
	{
		[Token(Token = "0x60002AF")]
		[Address(RVA = "0xD7BF60", Offset = "0xD7BF60", VA = "0xD7BF60")]
		get
		{
			return default(XRNode);
		}
		[Token(Token = "0x60002B0")]
		[Address(RVA = "0xD7BF68", Offset = "0xD7BF68", VA = "0xD7BF68")]
		set
		{
		}
	}

	[Token(Token = "0x1700001A")]
	public InputDeviceWrapper inputDevice
	{
		[Token(Token = "0x60002B1")]
		[Address(RVA = "0xD7BF70", Offset = "0xD7BF70", VA = "0xD7BF70")]
		get
		{
			return default(InputDeviceWrapper);
		}
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0xD7C000", Offset = "0xD7C000", VA = "0xD7C000")]
	public static void UpdateButton(InputDeviceWrapper inptuDevice, ControllerInputButton btn, float axisToPressThreshold)
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0xD7C1E8", Offset = "0xD7C1E8", VA = "0xD7C1E8")]
	protected void UpdateInteractionAction(InputHelpers.Button button, ref InteractionState interactionState, bool requiresAxisClicked = false)
	{
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xD7C05C", Offset = "0xD7C05C", VA = "0xD7C05C")]
	public static void UpdateInteractionAction(InputDeviceWrapper inputDevice, InputHelpers.Button button, ref InteractionState interactionState, float axisToPressThreshold, bool requiresAxisClicked = false)
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0xD7C240", Offset = "0xD7C240", VA = "0xD7C240")]
	public void TriggerPulse(uint channel, float amplitude, float duration)
	{
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0xD7C290", Offset = "0xD7C290", VA = "0xD7C290")]
	public static void TriggerPulse(InputDeviceWrapper inputDevice, uint channel, float amplitude, float duration)
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xD7C308", Offset = "0xD7C308", VA = "0xD7C308")]
	public static void TriggerPulse(XRBaseInteractor inputDevice, uint channel, float amplitude, float duration)
	{
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0xD7C420", Offset = "0xD7C420", VA = "0xD7C420")]
	public ControllerInput()
	{
	}
}
[Token(Token = "0x2000091")]
public class CopyLocalPose : MonoBehaviour
{
	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform receiver;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool pos;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool rot;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool x;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool y;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool z;

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0xD7C8EC", Offset = "0xD7C8EC", VA = "0xD7C8EC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0xD7C9A0", Offset = "0xD7C9A0", VA = "0xD7C9A0")]
	public CopyLocalPose()
	{
	}
}
[Token(Token = "0x2000092")]
public class CopyLocalPoseFrom : MonoBehaviour
{
	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform origin;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform origin_observer;

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0xD7C9A8", Offset = "0xD7C9A8", VA = "0xD7C9A8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0xD7CB38", Offset = "0xD7CB38", VA = "0xD7CB38")]
	public CopyLocalPoseFrom()
	{
	}
}
[Token(Token = "0x2000093")]
public class CopyPosition : MonoBehaviour
{
	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform from;

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0xD7CB40", Offset = "0xD7CB40", VA = "0xD7CB40")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB1A1B8", Offset = "0xB1A1B8")]
	private void Update()
	{
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0xD7CBC4", Offset = "0xD7CBC4", VA = "0xD7CBC4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0xD7CBC8", Offset = "0xD7CBC8", VA = "0xD7CBC8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0xD7CB44", Offset = "0xD7CB44", VA = "0xD7CB44")]
	private void updatePose()
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0xD7CBCC", Offset = "0xD7CBCC", VA = "0xD7CBCC")]
	public CopyPosition()
	{
	}
}
[Token(Token = "0x2000094")]
public class CopyRotationFrom : MonoBehaviour
{
	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform from;

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0xD7CBD4", Offset = "0xD7CBD4", VA = "0xD7CBD4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0xD7CC20", Offset = "0xD7CC20", VA = "0xD7CC20")]
	public CopyRotationFrom()
	{
	}
}
[Token(Token = "0x2000095")]
public class CraftingTableOwnership : MonoBehaviourPun, IOnPhotonViewOwnerChange, IPhotonViewCallback
{
	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private PhotonView lever;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private CraftingStation craftingStation;

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0xD7CC28", Offset = "0xD7CC28", VA = "0xD7CC28")]
	private void Start()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0xD7CC5C", Offset = "0xD7CC5C", VA = "0xD7CC5C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0xD7CC90", Offset = "0xD7CC90", VA = "0xD7CC90", Slot = "4")]
	public void OnOwnerChange(Player newOwner, Player previousOwner)
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0xD7CDA0", Offset = "0xD7CDA0", VA = "0xD7CDA0")]
	public CraftingTableOwnership()
	{
	}
}
[Token(Token = "0x2000096")]
[ExecuteInEditMode]
public class LiftTable : MonoBehaviour
{
	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float minScale;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float maxScale;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private SlideToSelector reference;

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0xE897A0", Offset = "0xE897A0", VA = "0xE897A0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xE897D4", Offset = "0xE897D4", VA = "0xE897D4")]
	public void SetPos(float percent)
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xE898A0", Offset = "0xE898A0", VA = "0xE898A0")]
	private float GetRelativeDistance(float percent)
	{
		return default(float);
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xE898BC", Offset = "0xE898BC", VA = "0xE898BC")]
	public LiftTable()
	{
	}
}
[Token(Token = "0x2000097")]
public class RenderCanvasImage : MonoBehaviour
{
	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RawImage image;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Canvas realPanel;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Camera renderCam;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private int width;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private int heigth;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private int debth;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private DeactivateUIWithDistance uiRenderer;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isFake;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture currentRT;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RenderCanvasManager manager;

	[Token(Token = "0x1700001B")]
	public bool IsFake
	{
		[Token(Token = "0x60002CD")]
		[Address(RVA = "0xDC2BB4", Offset = "0xDC2BB4", VA = "0xDC2BB4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700001C")]
	private RenderCanvasManager Manager
	{
		[Token(Token = "0x60002CE")]
		[Address(RVA = "0xDC2BBC", Offset = "0xDC2BBC", VA = "0xDC2BBC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0xDC2C50", Offset = "0xDC2C50", VA = "0xDC2C50")]
	public void ActivateRenderImage()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0xDC2CA0", Offset = "0xDC2CA0", VA = "0xDC2CA0")]
	public void DeactivateRenderImage()
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0xDC2CEC", Offset = "0xDC2CEC", VA = "0xDC2CEC")]
	public void Awake()
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xDC2D98", Offset = "0xDC2D98", VA = "0xDC2D98")]
	public void RegistrateForRender()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0xDC2E2C", Offset = "0xDC2E2C", VA = "0xDC2E2C")]
	public void RenderImage()
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xDC2F80", Offset = "0xDC2F80", VA = "0xDC2F80")]
	public RenderCanvasImage()
	{
	}
}
[Token(Token = "0x2000098")]
public class RenderCanvasManager : MonoBehaviour
{
	[Token(Token = "0x2000099")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB150F4", Offset = "0xB150F4")]
	private sealed class <renderImages>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RenderCanvasManager <>4__this;

		[Token(Token = "0x400031A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x1700001D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60002DE")]
			[Address(RVA = "0xDC3234", Offset = "0xDC3234", VA = "0xDC3234", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60002E0")]
			[Address(RVA = "0xDC329C", Offset = "0xDC329C", VA = "0xDC329C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002DB")]
		[Address(RVA = "0xDC3074", Offset = "0xDC3074", VA = "0xDC3074")]
		[DebuggerHidden]
		public <renderImages>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60002DC")]
		[Address(RVA = "0xDC3120", Offset = "0xDC3120", VA = "0xDC3120", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60002DD")]
		[Address(RVA = "0xDC3124", Offset = "0xDC3124", VA = "0xDC3124", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60002DF")]
		[Address(RVA = "0xDC323C", Offset = "0xDC323C", VA = "0xDC323C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<RenderCanvasImage> renderCanvases;

	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static RenderCanvasManager instance;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Coroutine renderAllImages;

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0xDC2F88", Offset = "0xDC2F88", VA = "0xDC2F88")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0xDC2DC4", Offset = "0xDC2DC4", VA = "0xDC2DC4")]
	public void AddRenderCanvas(RenderCanvasImage render)
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0xDC2F18", Offset = "0xDC2F18", VA = "0xDC2F18")]
	public void RemoveRenderCanvas(RenderCanvasImage render)
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0xDC3004", Offset = "0xDC3004", VA = "0xDC3004")]
	private IEnumerator renderImages()
	{
		return null;
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0xDC30A0", Offset = "0xDC30A0", VA = "0xDC30A0")]
	public void Update()
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0xDC3118", Offset = "0xDC3118", VA = "0xDC3118")]
	public RenderCanvasManager()
	{
	}
}
[Token(Token = "0x200009A")]
public class RenderCanvasWithDistance : MonoBehaviour
{
	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float renderDistance;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RenderCanvasImage render;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float distanceToPlayer;

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xDC32A4", Offset = "0xDC32A4", VA = "0xDC32A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0xDC333C", Offset = "0xDC333C", VA = "0xDC333C")]
	public RenderCanvasWithDistance()
	{
	}
}
[Token(Token = "0x200009B")]
public class RenderWithDistance : MonoBehaviour
{
	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ToggleChildRenderers toggleRenderers;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float renderDistance;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float distanceToPlayer;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isRendering;

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0xDC3344", Offset = "0xDC3344", VA = "0xDC3344")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0xDC33E0", Offset = "0xDC33E0", VA = "0xDC33E0")]
	public RenderWithDistance()
	{
	}
}
[Token(Token = "0x200009C")]
public class Crane : MonoBehaviour
{
	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform arm;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float minHookPosIsland;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minHookPoseEmpty;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MoveToNormalizedValue mover;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private IslandFinder islandFinder;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LayerMask mask;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RotateToSelector rotator;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public CraneSymbols indicators;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float indicatorUpdateTime;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float timer;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool valid;

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0xD7CDA8", Offset = "0xD7CDA8", VA = "0xD7CDA8")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xD7CE54", Offset = "0xD7CE54", VA = "0xD7CE54")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xD7CE74", Offset = "0xD7CE74", VA = "0xD7CE74")]
	public Vector3 GetHookPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0xD7CEA8", Offset = "0xD7CEA8", VA = "0xD7CEA8")]
	public Quaternion GetArmRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xD7CED4", Offset = "0xD7CED4", VA = "0xD7CED4")]
	public Transform GetHook()
	{
		return null;
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xD7CEFC", Offset = "0xD7CEFC", VA = "0xD7CEFC")]
	public void SetHookingIsland(bool hooking)
	{
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xD7CF50", Offset = "0xD7CF50", VA = "0xD7CF50")]
	public bool HasReachedGround()
	{
		return default(bool);
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0xD7CF6C", Offset = "0xD7CF6C", VA = "0xD7CF6C")]
	public bool HasReachedFullUp()
	{
		return default(bool);
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0xD7CF88", Offset = "0xD7CF88", VA = "0xD7CF88")]
	public bool IsValid()
	{
		return default(bool);
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0xD7CF90", Offset = "0xD7CF90", VA = "0xD7CF90")]
	public void Validate()
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0xD7D28C", Offset = "0xD7D28C", VA = "0xD7D28C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xD7D428", Offset = "0xD7D428", VA = "0xD7D428")]
	public void IndicateUp()
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xD7D564", Offset = "0xD7D564", VA = "0xD7D564")]
	public void IndicateDown()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0xD7D5A0", Offset = "0xD7D5A0", VA = "0xD7D5A0")]
	public void IndicateDeactivatePos()
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0xD7D5DC", Offset = "0xD7D5DC", VA = "0xD7D5DC")]
	public void IndicateIsland()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0xD7D5F8", Offset = "0xD7D5F8", VA = "0xD7D5F8")]
	public void IndicateIslandDeactivate()
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0xD7D614", Offset = "0xD7D614", VA = "0xD7D614")]
	public void Update()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0xD7D68C", Offset = "0xD7D68C", VA = "0xD7D68C")]
	public Crane()
	{
	}
}
[Token(Token = "0x200009D")]
public enum CustomizedSlotType
{
	[Token(Token = "0x400032E")]
	Head,
	[Token(Token = "0x400032F")]
	Face,
	[Token(Token = "0x4000330")]
	Beard,
	[Token(Token = "0x4000331")]
	Top,
	[Token(Token = "0x4000332")]
	Bottom,
	[Token(Token = "0x4000333")]
	Hair,
	[Token(Token = "0x4000334")]
	HeadWear,
	[Token(Token = "0x4000335")]
	Glasses,
	[Token(Token = "0x4000336")]
	Scarf
}
[Serializable]
[Token(Token = "0x200009E")]
public class CustomizedSlot
{
	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public CustomizedSlotType type;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string content;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject instantiatedGo;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color color;

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xD80980", Offset = "0xD80980", VA = "0xD80980")]
	public CustomizedSlot()
	{
	}
}
[Serializable]
[Token(Token = "0x200009F")]
public class CollectedCustomizable
{
	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<string> content;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CustomizedSlotType type;

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xD78BC4", Offset = "0xD78BC4", VA = "0xD78BC4")]
	public CollectedCustomizable()
	{
	}
}
[Serializable]
[Token(Token = "0x20000A0")]
public class CharacterCustomData
{
	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public CustomizedSlot[] slots;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CollectedCustomizable[] collectables;

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0xE85A94", Offset = "0xE85A94", VA = "0xE85A94")]
	public CharacterCustomData()
	{
	}
}
[Token(Token = "0x20000A1")]
public class CustomizedCharacter : MonoBehaviour, ISaveAble
{
	[Token(Token = "0x20000A2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15104", Offset = "0xB15104")]
	private sealed class <>c__DisplayClass25_0
	{
		[Token(Token = "0x4000354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CustomizedSlotType type;

		[Token(Token = "0x6000314")]
		[Address(RVA = "0xD7FA34", Offset = "0xD7FA34", VA = "0xD7FA34")]
		public <>c__DisplayClass25_0()
		{
		}

		[Token(Token = "0x6000315")]
		[Address(RVA = "0xD808CC", Offset = "0xD808CC", VA = "0xD808CC")]
		internal bool <cycle>b__0(CustomizedSlot s)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20000A3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15114", Offset = "0xB15114")]
	private sealed class <>c__DisplayClass26_0
	{
		[Token(Token = "0x4000355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CustomizedSlotType type;

		[Token(Token = "0x6000316")]
		[Address(RVA = "0xD80238", Offset = "0xD80238", VA = "0xD80238")]
		public <>c__DisplayClass26_0()
		{
		}

		[Token(Token = "0x6000317")]
		[Address(RVA = "0xD808F0", Offset = "0xD808F0", VA = "0xD808F0")]
		internal bool <setColor>b__0(CustomizedSlot s)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20000A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15124", Offset = "0xB15124")]
	private sealed class <>c__DisplayClass27_0
	{
		[Token(Token = "0x4000356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CustomizedSlotType type;

		[Token(Token = "0x6000318")]
		[Address(RVA = "0xD80240", Offset = "0xD80240", VA = "0xD80240")]
		public <>c__DisplayClass27_0()
		{
		}

		[Token(Token = "0x6000319")]
		[Address(RVA = "0xD80914", Offset = "0xD80914", VA = "0xD80914")]
		internal bool <setSlot>b__0(CustomizedSlot s)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20000A5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15134", Offset = "0xB15134")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x4000357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CustomizedSlotType type;

		[Token(Token = "0x600031A")]
		[Address(RVA = "0xD8059C", Offset = "0xD8059C", VA = "0xD8059C")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x600031B")]
		[Address(RVA = "0xD80938", Offset = "0xD80938", VA = "0xD80938")]
		internal bool <AddCollectable>b__0(CollectedCustomizable s)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20000A6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15144", Offset = "0xB15144")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x4000358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CustomizedSlotType type;

		[Token(Token = "0x600031C")]
		[Address(RVA = "0xD805A4", Offset = "0xD805A4", VA = "0xD805A4")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x600031D")]
		[Address(RVA = "0xD8095C", Offset = "0xD8095C", VA = "0xD8095C")]
		internal bool <RemoveItem>b__0(CustomizedSlot s)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400033F")]
	public const string C_charactercreaterinfo = "charactercreaterinfo";

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CharacterBase baseChar;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform headTransform;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform topTransform;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform bottomtransform;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform handTransform_L;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform handTransform_R;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform upperFace;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform lowerFace;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<Material> handTans;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject observer;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject deadFace;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject normalFace;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Renderer handLeft;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Renderer handRight;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private PlayerObject playerObject;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public CharacterCustomData data;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool ingameCreator;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private CharacterVisualSynchronizer sync;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public string asJson;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public CustomizedSlotType type;

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0xD7F430", Offset = "0xD7F430", VA = "0xD7F430")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0xD7F7B0", Offset = "0xD7F7B0", VA = "0xD7F7B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0xD7F600", Offset = "0xD7F600", VA = "0xD7F600")]
	public void Refresh()
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0xD7FA2C", Offset = "0xD7FA2C", VA = "0xD7FA2C")]
	public void cycle(CustomizedSlotType type)
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0xD75338", Offset = "0xD75338", VA = "0xD75338")]
	public void cycle(CustomizedSlotType type, bool forward)
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0xD8007C", Offset = "0xD8007C", VA = "0xD8007C")]
	private void setColor(CustomizedSlotType type, Color col)
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0xD7FA3C", Offset = "0xD7FA3C", VA = "0xD7FA3C")]
	private void setSlot(CustomizedSlotType type, GameObject go)
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0xD8027C", Offset = "0xD8027C", VA = "0xD8027C")]
	private void prev()
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0xD80288", Offset = "0xD80288", VA = "0xD80288")]
	private void next()
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0xD80294", Offset = "0xD80294", VA = "0xD80294")]
	private void TestJson()
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0xD802CC", Offset = "0xD802CC", VA = "0xD802CC")]
	private void getprefs()
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0xD80248", Offset = "0xD80248", VA = "0xD80248")]
	private Transform getTarget(CustomizedSlotType type)
	{
		return null;
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0xD802C0", Offset = "0xD802C0", VA = "0xD802C0", Slot = "4")]
	public string SaveData()
	{
		return null;
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0xD754D4", Offset = "0xD754D4", VA = "0xD754D4")]
	public void SaveDataToPrefs()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xD7F8D4", Offset = "0xD7F8D4", VA = "0xD7F8D4", Slot = "5")]
	public void LoadCharacterData(string data)
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xD80494", Offset = "0xD80494", VA = "0xD80494")]
	public void RefreshCharacterData(string data)
	{
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0xD80324", Offset = "0xD80324", VA = "0xD80324")]
	public void AddCollectable(CustomizedSlotType type, string name)
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0xD759F0", Offset = "0xD759F0", VA = "0xD759F0")]
	public void SetSelected(string name, CustomizedSlotType type)
	{
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0xD75A38", Offset = "0xD75A38", VA = "0xD75A38")]
	public void SetSelectedColor(Color col, CustomizedSlotType type)
	{
	}

	[Token(Token = "0x600030D")]
	[Address(RVA = "0xD75B84", Offset = "0xD75B84", VA = "0xD75B84")]
	public void RemoveItem(CustomizedSlotType type)
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0xD805AC", Offset = "0xD805AC", VA = "0xD805AC")]
	internal void setObserver(bool v)
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0xD80690", Offset = "0xD80690", VA = "0xD80690")]
	internal void randomizeAll()
	{
	}

	[Token(Token = "0x6000310")]
	[Address(RVA = "0xD80730", Offset = "0xD80730", VA = "0xD80730")]
	internal void setDead(bool v)
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0xD80810", Offset = "0xD80810", VA = "0xD80810")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0xD808A0", Offset = "0xD808A0", VA = "0xD808A0")]
	public CustomizedCharacter()
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0xD808A8", Offset = "0xD808A8", VA = "0xD808A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1A240", Offset = "0xB1A240")]
	private bool <setDead>b__43_0(CustomizedSlot s)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000A7")]
public class DOTweenHelper : MonoBehaviour
{
	[Token(Token = "0x600031E")]
	[Address(RVA = "0xD80990", Offset = "0xD80990", VA = "0xD80990")]
	public void DOTWEEN_ShakePosition(float duration)
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0xD809D4", Offset = "0xD809D4", VA = "0xD809D4")]
	public void DOTWEEN_DOPunchScale(float duration)
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0xD80A80", Offset = "0xD80A80", VA = "0xD80A80")]
	public DOTweenHelper()
	{
	}
}
[Token(Token = "0x20000A8")]
[ExecuteInEditMode]
public class DayNightCycle : MonoBehaviour
{
	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float progress;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float shiftedProgress;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float evaluatedProgress;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve dayNightBalance;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform sunMoonRotator;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material _skyMaterial;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material _starMaterial;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AnimationCurve starVisibility;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material _sunMaterial;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AnimationCurve sunVisibility;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material _moonMaterial;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AnimationCurve moonVisibility;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Light sun;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Color starColor;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool manualSkyShift;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	public bool fixedTime;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float shift;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB181D4", Offset = "0xB181D4")]
	public float notConnectedProgress;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AnimationCurve sunIntensity;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Gradient sky;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Gradient horizon;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Gradient ground;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float sunIntensityModifier;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float ambientIntensityModifier;

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xD81B14", Offset = "0xD81B14", VA = "0xD81B14")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0xD81B20", Offset = "0xD81B20", VA = "0xD81B20")]
	public void Update()
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0xD81F08", Offset = "0xD81F08", VA = "0xD81F08")]
	public DayNightCycle()
	{
	}
}
[Token(Token = "0x20000A9")]
public class Deform : MonoBehaviour
{
	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float maxScale;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float duration;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AnimationCurve curve;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material dynamicMat;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool bIsBouncing;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float timer;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 direction;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 dampingVector;

	[Token(Token = "0x6000324")]
	[Address(RVA = "0xD849B0", Offset = "0xD849B0", VA = "0xD849B0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0xD84A18", Offset = "0xD84A18", VA = "0xD84A18")]
	private void Update()
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0xD84A28", Offset = "0xD84A28", VA = "0xD84A28")]
	private void BounceActor()
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0xD84BD4", Offset = "0xD84BD4", VA = "0xD84BD4")]
	public void addBounce(Vector3 pos, Vector3 dir)
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0xD84D08", Offset = "0xD84D08", VA = "0xD84D08")]
	public Deform()
	{
	}
}
[Token(Token = "0x20000AA")]
public class DespawnWithPool : MonoBehaviour
{
	[Token(Token = "0x6000329")]
	[Address(RVA = "0xD856A4", Offset = "0xD856A4", VA = "0xD856A4")]
	public DespawnWithPool()
	{
	}
}
[Token(Token = "0x20000AB")]
public class DestroyWithMe : MonoBehaviour
{
	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform other;

	[Token(Token = "0x600032A")]
	[Address(RVA = "0xD856AC", Offset = "0xD856AC", VA = "0xD856AC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0xD8582C", Offset = "0xD8582C", VA = "0xD8582C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0xD858CC", Offset = "0xD858CC", VA = "0xD858CC")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0xD8596C", Offset = "0xD8596C", VA = "0xD8596C")]
	public DestroyWithMe()
	{
	}
}
[Serializable]
[Token(Token = "0x20000AC")]
public class DevKey
{
	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public KeyCode key;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject toggleGameObject;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent action;

	[Token(Token = "0x600032E")]
	[Address(RVA = "0xD85AD8", Offset = "0xD85AD8", VA = "0xD85AD8")]
	public void Execute()
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0xD85B94", Offset = "0xD85B94", VA = "0xD85B94")]
	public DevKey()
	{
	}
}
[Token(Token = "0x20000AD")]
public class DevKeys : MonoBehaviour
{
	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DevKey[] devKeys;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DevKeys instance;

	[Token(Token = "0x6000330")]
	[Address(RVA = "0xD85B9C", Offset = "0xD85B9C", VA = "0xD85B9C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0xD85BF0", Offset = "0xD85BF0", VA = "0xD85BF0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0xD85C7C", Offset = "0xD85C7C", VA = "0xD85C7C")]
	public static bool GetKeyDown(KeyCode k)
	{
		return default(bool);
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0xD85CE0", Offset = "0xD85CE0", VA = "0xD85CE0")]
	public static bool GetKeyUp(KeyCode k)
	{
		return default(bool);
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0xD85D44", Offset = "0xD85D44", VA = "0xD85D44")]
	public static bool GetKey(KeyCode k)
	{
		return default(bool);
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xD85C74", Offset = "0xD85C74", VA = "0xD85C74")]
	private bool isDevMode()
	{
		return default(bool);
	}

	[Token(Token = "0x6000336")]
	[Address(RVA = "0xD85DA8", Offset = "0xD85DA8", VA = "0xD85DA8")]
	public DevKeys()
	{
	}
}
[Token(Token = "0x20000AE")]
public class DisableOnStart : MonoBehaviour
{
	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool setactive;

	[Token(Token = "0x6000337")]
	[Address(RVA = "0xD86F04", Offset = "0xD86F04", VA = "0xD86F04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0xD86F38", Offset = "0xD86F38", VA = "0xD86F38")]
	public DisableOnStart()
	{
	}
}
[Token(Token = "0x20000AF")]
public class DistanceGrabSelection : ControllerInput
{
	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform cursor;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public XRDirectInteractor interactor;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private XRBaseInteractable current;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private XRBaseInteractable prev;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private InputHelpers.Button grab;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private InteractionState grabState;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool canInteract;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	public bool currentOverInventory;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
	public bool prevOverInventory;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject dontGrabWhenActive;

	[Token(Token = "0x6000339")]
	[Address(RVA = "0xD86F40", Offset = "0xD86F40", VA = "0xD86F40")]
	private void Awake()
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xD86F98", Offset = "0xD86F98", VA = "0xD86F98")]
	private void Start()
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xD86FB8", Offset = "0xD86FB8", VA = "0xD86FB8")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xD8728C", Offset = "0xD8728C", VA = "0xD8728C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xD87360", Offset = "0xD87360", VA = "0xD87360")]
	private void Update()
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0xD87670", Offset = "0xD87670", VA = "0xD87670")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0xD87688", Offset = "0xD87688", VA = "0xD87688")]
	public DistanceGrabSelection()
	{
	}
}
[Token(Token = "0x20000B0")]
public static class DistanceToPlayer
{
	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PlayerObject player;

	[Token(Token = "0x1700001F")]
	private static PlayerObject Player
	{
		[Token(Token = "0x6000340")]
		[Address(RVA = "0xD87714", Offset = "0xD87714", VA = "0xD87714")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xD81FE0", Offset = "0xD81FE0", VA = "0xD81FE0")]
	public static float GetDistance(Vector3 pos)
	{
		return default(float);
	}
}
[Token(Token = "0x20000B1")]
public class DummyCupVisualizer : MonoBehaviour
{
	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool hadThisFrame;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject dummy;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InventoryItem itemToPlace;

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xD87D60", Offset = "0xD87D60", VA = "0xD87D60")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xD87D68", Offset = "0xD87D68", VA = "0xD87D68")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0xD87DD0", Offset = "0xD87DD0", VA = "0xD87DD0")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xD87F28", Offset = "0xD87F28", VA = "0xD87F28")]
	public DummyCupVisualizer()
	{
	}
}
[Token(Token = "0x20000B2")]
public class DummyDragHandler : MonoBehaviour, IDragHandler, IEventSystemHandler
{
	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Canvas parentCanvasOfImageToMove;

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xD87F30", Offset = "0xD87F30", VA = "0xD87F30")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xD87F88", Offset = "0xD87F88", VA = "0xD87F88", Slot = "4")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xD88104", Offset = "0xD88104", VA = "0xD88104")]
	public DummyDragHandler()
	{
	}
}
[Token(Token = "0x20000B3")]
public class Effect : MonoBehaviourPun
{
	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] clips;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject effectPrefab;

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xEB6908", Offset = "0xEB6908", VA = "0xEB6908")]
	public void Invoke()
	{
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xEB6A0C", Offset = "0xEB6A0C", VA = "0xEB6A0C")]
	[PunRPC]
	private void RPC_Invoke()
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xEB6B84", Offset = "0xEB6B84", VA = "0xEB6B84")]
	public Effect()
	{
	}
}
[Token(Token = "0x20000B4")]
public class EnableInPlayMode : MonoBehaviour
{
	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MonoBehaviour component;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool requirePhotonConnection;

	[Token(Token = "0x600034C")]
	[Address(RVA = "0xEB6C24", Offset = "0xEB6C24", VA = "0xEB6C24")]
	private void Awake()
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0xEB6CB0", Offset = "0xEB6CB0", VA = "0xEB6CB0")]
	public EnableInPlayMode()
	{
	}
}
[Token(Token = "0x20000B5")]
public class Cannon : MonoBehaviourPun
{
	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject cannonBallprefab;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform target;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioSource source;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip fire;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int attackradius;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 center;

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xE81CFC", Offset = "0xE81CFC", VA = "0xE81CFC")]
	public void SetAttackStats(int attackradius, Vector3 center)
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0xE81D0C", Offset = "0xE81D0C", VA = "0xE81D0C")]
	public void Attack()
	{
	}

	[Token(Token = "0x6000350")]
	[Address(RVA = "0xE82004", Offset = "0xE82004", VA = "0xE82004")]
	[PunRPC]
	private void Rpc_SpawnBall(Vector3 targetPos, int attackradius)
	{
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0xE822F4", Offset = "0xE822F4", VA = "0xE822F4")]
	public void ToogleTarget(bool active)
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0xE82330", Offset = "0xE82330", VA = "0xE82330")]
	public Cannon()
	{
	}
}
[Token(Token = "0x20000B6")]
public class Cannonball : MonoBehaviour
{
	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform TargetObjectTF;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB1821C", Offset = "0xB1821C")]
	public float TargetRadius;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB18234", Offset = "0xB18234")]
	public float LaunchAngle;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB18250", Offset = "0xB18250")]
	public float TargetHeightOffsetFromGround;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool RandomizeHeightOffset;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	private bool bTargetReady;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
	private bool bTouchingGround;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody rigid;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 initialPosition;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion initialRotation;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 center;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float initTime;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float timeBeforeFirstImpact;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float timeBetweenImpacts;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject hitPrefab;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public AudioClip[] hitSound;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float timeOfLastImpact;

	[Token(Token = "0x6000353")]
	[Address(RVA = "0xE82338", Offset = "0xE82338", VA = "0xE82338")]
	private void Start()
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0xE823F8", Offset = "0xE823F8", VA = "0xE823F8")]
	private void ResetToInitialState()
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xE82704", Offset = "0xE82704", VA = "0xE82704")]
	private void Update()
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0xE827FC", Offset = "0xE827FC", VA = "0xE827FC")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xE82C98", Offset = "0xE82C98", VA = "0xE82C98")]
	private void OnCollisionExit()
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xE82CA0", Offset = "0xE82CA0", VA = "0xE82CA0")]
	private float GetPlatformOffset()
	{
		return default(float);
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xE824A8", Offset = "0xE824A8", VA = "0xE824A8")]
	private void Launch()
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0xE81FEC", Offset = "0xE81FEC", VA = "0xE81FEC")]
	public void SetTarget(Transform t, int radius, Vector3 center)
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0xE8220C", Offset = "0xE8220C", VA = "0xE8220C")]
	public void SetTarget(Transform t, Vector3 pos, int radius)
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xE82D94", Offset = "0xE82D94", VA = "0xE82D94")]
	private void SetNewTarget()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0xE83054", Offset = "0xE83054", VA = "0xE83054")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0xE82924", Offset = "0xE82924", VA = "0xE82924")]
	private void checkHit(GameObject floorHit)
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0xE83218", Offset = "0xE83218", VA = "0xE83218")]
	private void hit(Vector3 pos, Quaternion rot, bool sound = true, bool effect = true)
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0xE83420", Offset = "0xE83420", VA = "0xE83420")]
	public Cannonball()
	{
	}
}
[Token(Token = "0x20000B7")]
public abstract class Enemy : MonoBehaviourPun
{
	[Token(Token = "0x20000B8")]
	public enum State
	{
		[Token(Token = "0x40003B2")]
		inactive,
		[Token(Token = "0x40003B3")]
		announcing,
		[Token(Token = "0x40003B4")]
		appearing,
		[Token(Token = "0x40003B5")]
		idling,
		[Token(Token = "0x40003B6")]
		attacking,
		[Token(Token = "0x40003B7")]
		disappearing
	}

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float timeToAttack;

	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timer;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxAliveTime;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float aliveTimer;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float timeToAppearance;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float appearTimer;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public State myState;

	[Token(Token = "0x6000361")]
	[Address(RVA = "0xEB6CC0", Offset = "0xEB6CC0", VA = "0xEB6CC0")]
	public void Start()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0xEB6CC8", Offset = "0xEB6CC8", VA = "0xEB6CC8", Slot = "4")]
	public virtual void ChangeToStateAnnouncing()
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0xEB6CD8", Offset = "0xEB6CD8", VA = "0xEB6CD8", Slot = "5")]
	public virtual void ChangeToStateAppearing()
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0xEB6CE4", Offset = "0xEB6CE4", VA = "0xEB6CE4", Slot = "6")]
	public virtual void ChangeToStateIdling()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0xEB6CF4", Offset = "0xEB6CF4", VA = "0xEB6CF4", Slot = "7")]
	public virtual void ChangeToStateAttacking()
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xEB6D00", Offset = "0xEB6D00", VA = "0xEB6D00", Slot = "8")]
	public virtual void ChangeToStateDisappearing()
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0xEB6D0C", Offset = "0xEB6D0C", VA = "0xEB6D0C", Slot = "9")]
	public virtual void ChangeToStateInactive()
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0xEB6D14", Offset = "0xEB6D14", VA = "0xEB6D14", Slot = "10")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0xEB6E4C", Offset = "0xEB6E4C", VA = "0xEB6E4C")]
	protected Enemy()
	{
	}
}
[Token(Token = "0x20000B9")]
public class EnemyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000BA")]
	public class EnemySaveData
	{
		[Token(Token = "0x40003BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int enemyCount;

		[Token(Token = "0x6000374")]
		[Address(RVA = "0xEB7290", Offset = "0xEB7290", VA = "0xEB7290")]
		public EnemySaveData()
		{
		}
	}

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static EnemyManager instance;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minTimeToEnemy;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxTimeToEnemy;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float timer;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timeToNextEnemy;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RandomListEnemy allEnemies;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RandomListEnemy activeEnemies;

	[Token(Token = "0x600036A")]
	[Address(RVA = "0xEB6E54", Offset = "0xEB6E54", VA = "0xEB6E54")]
	private void Awake()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0xEB6EA8", Offset = "0xEB6EA8", VA = "0xEB6EA8")]
	private void Start()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0xEB6F58", Offset = "0xEB6F58", VA = "0xEB6F58")]
	public void ActivateEnemies(int count)
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0xEB6F90", Offset = "0xEB6F90", VA = "0xEB6F90")]
	private void AddEnemyToActiveList(int enemy)
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0xEB709C", Offset = "0xEB709C", VA = "0xEB709C")]
	private void SpawnRandomEnemy()
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0xEB6F28", Offset = "0xEB6F28", VA = "0xEB6F28")]
	private void SetNextEnemyTime()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0xEB70D0", Offset = "0xEB70D0", VA = "0xEB70D0")]
	private bool CheckIfEnemieActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0xEB7184", Offset = "0xEB7184", VA = "0xEB7184")]
	public void SpawnKakamora()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0xEB7208", Offset = "0xEB7208", VA = "0xEB7208")]
	public void SpawnLightning()
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0xEB7288", Offset = "0xEB7288", VA = "0xEB7288")]
	public EnemyManager()
	{
	}
}
[Token(Token = "0x20000BB")]
public class FirePalett : MonoBehaviourPun
{
	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float timeToSpread;

	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float timeToDestroy;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem particles;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float spreadTimer;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float awakeTimer;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioClip extinguishClip;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Buildable palett;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool extinguish;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float extinguishTimer;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public FireReciever reciever;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool init;

	[Token(Token = "0x6000375")]
	[Address(RVA = "0xEB8444", Offset = "0xEB8444", VA = "0xEB8444")]
	public void Init(Buildable palett, FireReciever reciever)
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xEB84F4", Offset = "0xEB84F4", VA = "0xEB84F4")]
	public void Extinguish()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0xEB86E0", Offset = "0xEB86E0", VA = "0xEB86E0")]
	[PunRPC]
	private void RPC_Extinguish()
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0xEB86FC", Offset = "0xEB86FC", VA = "0xEB86FC")]
	public void Spread()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0xEB8B00", Offset = "0xEB8B00", VA = "0xEB8B00")]
	public void Destroy()
	{
	}

	[Token(Token = "0x600037A")]
	[Address(RVA = "0xEB8B1C", Offset = "0xEB8B1C", VA = "0xEB8B1C")]
	public void Update()
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0xEB8700", Offset = "0xEB8700", VA = "0xEB8700")]
	public void GetNextBurnablePlattform()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0xEB8D30", Offset = "0xEB8D30", VA = "0xEB8D30")]
	public FirePalett()
	{
	}
}
[Token(Token = "0x20000BC")]
public class FireReciever : MonoBehaviour
{
	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool hasFire;

	[Token(Token = "0x17000020")]
	public bool IsBurning
	{
		[Token(Token = "0x600037D")]
		[Address(RVA = "0xEB8D38", Offset = "0xEB8D38", VA = "0xEB8D38")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600037E")]
		[Address(RVA = "0xEB8D40", Offset = "0xEB8D40", VA = "0xEB8D40")]
		set
		{
		}
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0xEB8D4C", Offset = "0xEB8D4C", VA = "0xEB8D4C")]
	public FireReciever()
	{
	}
}
[Token(Token = "0x20000BD")]
public class FollowPath : MonoBehaviour
{
	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Vector3> points;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Vector3> path;

	[Token(Token = "0x6000380")]
	[Address(RVA = "0xEBEE74", Offset = "0xEBEE74", VA = "0xEBEE74")]
	private void Start()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0xEBEF90", Offset = "0xEBEF90", VA = "0xEBEF90")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0xEBEE78", Offset = "0xEBEE78", VA = "0xEBEE78")]
	private void CreateNewPath()
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xEBF4E8", Offset = "0xEBF4E8", VA = "0xEBF4E8")]
	private bool FindRestOfPoints()
	{
		return default(bool);
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0xEBF318", Offset = "0xEBF318", VA = "0xEBF318")]
	private Vector3 FindSecondPoint(Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0xEBF610", Offset = "0xEBF610", VA = "0xEBF610")]
	private Vector3 FindNextPoint()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0xEBF1D8", Offset = "0xEBF1D8", VA = "0xEBF1D8")]
	private void GetNewPoints()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0xEBF904", Offset = "0xEBF904", VA = "0xEBF904")]
	private bool CheckIfPointAlreadyUsed(Vector3 point)
	{
		return default(bool);
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0xEBFA1C", Offset = "0xEBFA1C", VA = "0xEBFA1C")]
	private bool CheckIfPlatformInWay(Vector3 point, Vector3 path)
	{
		return default(bool);
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0xEBFB44", Offset = "0xEBFB44", VA = "0xEBFB44")]
	public FollowPath()
	{
	}
}
[Token(Token = "0x20000BE")]
public class Jump : MonoBehaviour
{
	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minTimeToJump;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxTimeToJump;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float timer;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float timeToNextJump;

	[Token(Token = "0x600038A")]
	[Address(RVA = "0xEF5B10", Offset = "0xEF5B10", VA = "0xEF5B10")]
	private void Start()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0xEF5B40", Offset = "0xEF5B40", VA = "0xEF5B40")]
	private void Update()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0xEF5BAC", Offset = "0xEF5BAC", VA = "0xEF5BAC")]
	private void DoJump()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0xEF5C50", Offset = "0xEF5C50", VA = "0xEF5C50")]
	public Jump()
	{
	}
}
[Token(Token = "0x20000BF")]
public class Kakamora : MonoBehaviourPun
{
	[Token(Token = "0x20000C0")]
	public enum State
	{
		[Token(Token = "0x40003E3")]
		inactive,
		[Token(Token = "0x40003E4")]
		appearing,
		[Token(Token = "0x40003E5")]
		idling,
		[Token(Token = "0x40003E6")]
		attacking,
		[Token(Token = "0x40003E7")]
		disappearing,
		[Token(Token = "0x40003E8")]
		dying,
		[Token(Token = "0x40003E9")]
		gone
	}

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float ellipseSpeed;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Animator anim;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float a;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float b;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector2 center;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float timeSinceBeginning;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Cannon cannon;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private GameObject hitreaction;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AudioSource audioSource;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AudioClip hitClip;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private AudioClip dieClip;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private AudioClip appearClip;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private AudioClip dissapearclip;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private RandomListInventory loot;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private int lootAmount;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public State myState;

	[Token(Token = "0x600038E")]
	[Address(RVA = "0xEF5C58", Offset = "0xEF5C58", VA = "0xEF5C58")]
	private void Awake()
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0xEF5C5C", Offset = "0xEF5C5C", VA = "0xEF5C5C")]
	public void ChangeToStateAppearing()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0xEF5CB0", Offset = "0xEF5CB0", VA = "0xEF5CB0")]
	public void ChangeToStateIdling()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0xEF5CBC", Offset = "0xEF5CBC", VA = "0xEF5CBC")]
	public void ChangeToStateAttacking()
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0xEF5CFC", Offset = "0xEF5CFC", VA = "0xEF5CFC")]
	public void ChangeToStateDissapearing()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0xEF5E08", Offset = "0xEF5E08", VA = "0xEF5E08")]
	public void ChangeToStateGone()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0xEF5E14", Offset = "0xEF5E14", VA = "0xEF5E14")]
	public void Die()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0xEF62A8", Offset = "0xEF62A8", VA = "0xEF62A8")]
	public void SetCircleCoordinates(Vector2 center, float radiusX, float radiusY, int number, int amount)
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0xEF6384", Offset = "0xEF6384", VA = "0xEF6384")]
	public void Update()
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0xEF6504", Offset = "0xEF6504", VA = "0xEF6504")]
	public Vector2 LerpEllipse(float horizontalAxis, float verticalAxis, float time, Vector2 center, float duration)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0xEF65EC", Offset = "0xEF65EC", VA = "0xEF65EC")]
	public void OnHit()
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0xEF66F0", Offset = "0xEF66F0", VA = "0xEF66F0")]
	[PunRPC]
	private void Rpc_Disapearing()
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0xEF679C", Offset = "0xEF679C", VA = "0xEF679C")]
	[PunRPC]
	private void Rpc_Hit()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0xEF67FC", Offset = "0xEF67FC", VA = "0xEF67FC")]
	[PunRPC]
	private void Rpc_Dying()
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0xEF6920", Offset = "0xEF6920", VA = "0xEF6920")]
	public Kakamora()
	{
	}
}
[Token(Token = "0x20000C1")]
public class Kakamoras : Enemy
{
	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<Kakamora> activeKakamora;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject kakamoraPrefab;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float addedSpawnDistance;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float timeBetweenAttacksPerShip;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float attackTimer;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float timeBetweenAttacks;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioSource backgroundAudioSource;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int baseSpawnAmount;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int addedSpawnAmountPerPlayer;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int activeShootingKakamora;

	[Token(Token = "0x600039D")]
	[Address(RVA = "0xEF6998", Offset = "0xEF6998", VA = "0xEF6998", Slot = "9")]
	public override void ChangeToStateInactive()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0xEF6AA8", Offset = "0xEF6AA8", VA = "0xEF6AA8", Slot = "4")]
	public override void ChangeToStateAnnouncing()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0xEF6BB8", Offset = "0xEF6BB8", VA = "0xEF6BB8", Slot = "5")]
	public override void ChangeToStateAppearing()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0xEF6ED0", Offset = "0xEF6ED0", VA = "0xEF6ED0", Slot = "6")]
	public override void ChangeToStateIdling()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0xEF6ED8", Offset = "0xEF6ED8", VA = "0xEF6ED8", Slot = "7")]
	public override void ChangeToStateAttacking()
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0xEF6F04", Offset = "0xEF6F04", VA = "0xEF6F04", Slot = "8")]
	public override void ChangeToStateDisappearing()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0xEF6BE0", Offset = "0xEF6BE0", VA = "0xEF6BE0")]
	private void SpawnKakamoras()
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0xEF70D4", Offset = "0xEF70D4", VA = "0xEF70D4", Slot = "10")]
	public override void Update()
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0xEF729C", Offset = "0xEF729C", VA = "0xEF729C")]
	private void CheckForDeath()
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0xEF7234", Offset = "0xEF7234", VA = "0xEF7234")]
	private void SetNextShootingKakamora()
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0xEF7404", Offset = "0xEF7404", VA = "0xEF7404")]
	[PunRPC]
	private void Rpc_Announce()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0xEF745C", Offset = "0xEF745C", VA = "0xEF745C")]
	[PunRPC]
	private void Rpc_FadeAudio()
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0xEF7504", Offset = "0xEF7504", VA = "0xEF7504")]
	public Kakamoras()
	{
	}
}
[Token(Token = "0x20000C2")]
public class Lightning : Enemy, IPunObservable
{
	[Token(Token = "0x20000C3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15164", Offset = "0xB15164")]
	private sealed class <Attack>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Lightning <>4__this;

		[Token(Token = "0x4000404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <target>5__2;

		[Token(Token = "0x17000021")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60003BD")]
			[Address(RVA = "0xE8B434", Offset = "0xE8B434", VA = "0xE8B434", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000022")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60003BF")]
			[Address(RVA = "0xE8B49C", Offset = "0xE8B49C", VA = "0xE8B49C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60003BA")]
		[Address(RVA = "0xE89FCC", Offset = "0xE89FCC", VA = "0xE89FCC")]
		[DebuggerHidden]
		public <Attack>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60003BB")]
		[Address(RVA = "0xE8AEF0", Offset = "0xE8AEF0", VA = "0xE8AEF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60003BC")]
		[Address(RVA = "0xE8AEF4", Offset = "0xE8AEF4", VA = "0xE8AEF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60003BE")]
		[Address(RVA = "0xE8B43C", Offset = "0xE8B43C", VA = "0xE8B43C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject cloudPrefab;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject cloudGPUPrefab;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public LightningBoltScript lightning;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public DayNightCycle environment;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public AudioSource thunder;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AudioSource rainSound;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float startDistance;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float cloudSpeed;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float minCloudReachedDistance;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 centerOfRaft;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 toCenter;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject cloud;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private bool canRunComputeShader;

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0xE89B44", Offset = "0xE89B44", VA = "0xE89B44")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0xE89B94", Offset = "0xE89B94", VA = "0xE89B94", Slot = "4")]
	public override void ChangeToStateAnnouncing()
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0xE89BD8", Offset = "0xE89BD8", VA = "0xE89BD8", Slot = "5")]
	public override void ChangeToStateAppearing()
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0xE89F1C", Offset = "0xE89F1C", VA = "0xE89F1C", Slot = "6")]
	public override void ChangeToStateIdling()
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0xE89F24", Offset = "0xE89F24", VA = "0xE89F24", Slot = "7")]
	public override void ChangeToStateAttacking()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xE89F5C", Offset = "0xE89F5C", VA = "0xE89F5C")]
	private IEnumerator Attack()
	{
		return null;
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0xE89FF8", Offset = "0xE89FF8", VA = "0xE89FF8", Slot = "8")]
	public override void ChangeToStateDisappearing()
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0xE8A030", Offset = "0xE8A030", VA = "0xE8A030", Slot = "9")]
	public override void ChangeToStateInactive()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0xE8A19C", Offset = "0xE8A19C", VA = "0xE8A19C", Slot = "10")]
	public override void Update()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0xE8AAEC", Offset = "0xE8AAEC", VA = "0xE8AAEC")]
	private GameObject FindLightningTarget()
	{
		return null;
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0xE8A884", Offset = "0xE8A884", VA = "0xE8A884")]
	private void WaterAllPlantSpots()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0xE8AC04", Offset = "0xE8AC04", VA = "0xE8AC04", Slot = "11")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0xE8AE0C", Offset = "0xE8AE0C", VA = "0xE8AE0C")]
	[PunRPC]
	private void Rpc_ToogleRain(bool on)
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0xE8AE34", Offset = "0xE8AE34", VA = "0xE8AE34")]
	[PunRPC]
	private void Rpc_Lightning(Vector3 startPoint, Vector3 endPoint)
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0xE8AEB8", Offset = "0xE8AEB8", VA = "0xE8AEB8")]
	[PunRPC]
	private void Rpc_StopLightning()
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0xE8AEE8", Offset = "0xE8AEE8", VA = "0xE8AEE8")]
	public Lightning()
	{
	}
}
[Token(Token = "0x20000C4")]
public class PirateCharacters : MonoBehaviourPun
{
	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> pirates;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<int> validCharacterIDs;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int minAmount;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int maxAmount;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int characterToUse;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<int> usedCharacters;

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0xDF2BCC", Offset = "0xDF2BCC", VA = "0xDF2BCC")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0xDF2C48", Offset = "0xDF2C48", VA = "0xDF2C48")]
	private void InitPirates()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0xDF2EF8", Offset = "0xDF2EF8", VA = "0xDF2EF8")]
	private void FindUnusedCharacter()
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0xDF2F90", Offset = "0xDF2F90", VA = "0xDF2F90")]
	[PunRPC]
	private void Rpc_SetPirate(int pirateNumber, int characterNumber, int rotation, int randomAnimaton)
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0xDF3178", Offset = "0xDF3178", VA = "0xDF3178")]
	public PirateCharacters()
	{
	}
}
[Token(Token = "0x20000C5")]
public class PlayRandomSounds : MonoBehaviour
{
	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] waveFiles;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource thisAudioSource;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float volMin;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float volMax;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float pitchMin;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float pitchMax;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool playOnAwake;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int minTimeToNextSound;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int maxTimeToNextSound;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float timeToNextSound;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float timer;

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0xE27C68", Offset = "0xE27C68", VA = "0xE27C68")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0xE27DF0", Offset = "0xE27DF0", VA = "0xE27DF0")]
	private void SetNextSoundTime()
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0xE27E28", Offset = "0xE27E28", VA = "0xE27E28")]
	private void Update()
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0xE27CEC", Offset = "0xE27CEC", VA = "0xE27CEC")]
	public void Play()
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0xE27E90", Offset = "0xE27E90", VA = "0xE27E90")]
	public void Pause()
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0xE27F24", Offset = "0xE27F24", VA = "0xE27F24")]
	public void UnPause()
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0xE27FB8", Offset = "0xE27FB8", VA = "0xE27FB8")]
	public PlayRandomSounds()
	{
	}
}
[Token(Token = "0x20000C6")]
public class SteeringBehaviourObject : MonoBehaviour
{
	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 velocity;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 acceleration;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float radius;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float maxforce;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float maxspeed;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private FishSpawnPoint[] path;

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0xEA4AE0", Offset = "0xEA4AE0", VA = "0xEA4AE0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0xEA4BA0", Offset = "0xEA4BA0", VA = "0xEA4BA0")]
	public void Update()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0xEA4BC8", Offset = "0xEA4BC8", VA = "0xEA4BC8")]
	private void follow(FishSpawnPoint[] p)
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0xEA50BC", Offset = "0xEA50BC", VA = "0xEA50BC")]
	private Vector3 getNormalPoint(Vector3 p, Vector3 a, Vector3 b)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0xEA4F38", Offset = "0xEA4F38", VA = "0xEA4F38")]
	private void seek(Vector3 target)
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xEA5238", Offset = "0xEA5238", VA = "0xEA5238")]
	private void applyForce(Vector3 force)
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xEA4E34", Offset = "0xEA4E34", VA = "0xEA4E34")]
	private void UpdatePosition()
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0xEA52EC", Offset = "0xEA52EC", VA = "0xEA52EC")]
	public SteeringBehaviourObject()
	{
	}
}
[Token(Token = "0x20000C7")]
public class EnvironmentSettings : MonoBehaviour
{
	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Slider dayShift;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TextMeshProUGUI text_dayShiftValue;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Button button_pirates;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Button button_lightning;

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0xEB7298", Offset = "0xEB7298", VA = "0xEB7298")]
	private void Start()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0xEB73B0", Offset = "0xEB73B0", VA = "0xEB73B0")]
	public void ChangeDayShift(float value)
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0xEB7414", Offset = "0xEB7414", VA = "0xEB7414")]
	private void SpawnTinyPirates()
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0xEB746C", Offset = "0xEB746C", VA = "0xEB746C")]
	public void SpawnLightning()
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0xEB74C4", Offset = "0xEB74C4", VA = "0xEB74C4")]
	public EnvironmentSettings()
	{
	}
}
[Token(Token = "0x20000C8")]
public class FillLiquid : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float minScaleY;

	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxScaleY;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int oneFillAmount;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int oneRemoveAmount;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float fillSpeed;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float emptySpeed;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected int fillHeight;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	protected bool first;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform fluidTransform;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Action fluidEmpty;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Action fluidRemoved;

	[Token(Token = "0x17000023")]
	public int FillHeight
	{
		[Token(Token = "0x60003D9")]
		[Address(RVA = "0xEB782C", Offset = "0xEB782C", VA = "0xEB782C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000024")]
	public bool IsFull
	{
		[Token(Token = "0x60003DA")]
		[Address(RVA = "0xEB7834", Offset = "0xEB7834", VA = "0xEB7834")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000025")]
	public bool IsEmpty
	{
		[Token(Token = "0x60003DB")]
		[Address(RVA = "0xEB7844", Offset = "0xEB7844", VA = "0xEB7844")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0xEB7854", Offset = "0xEB7854", VA = "0xEB7854")]
	[PunRPC]
	public void RPC_Fill()
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0xEB7954", Offset = "0xEB7954", VA = "0xEB7954")]
	[PunRPC]
	public void RPC_Fill(int amounts)
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0xEB79A4", Offset = "0xEB79A4", VA = "0xEB79A4")]
	[PunRPC]
	public void RPC_Remove()
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0xEB79EC", Offset = "0xEB79EC", VA = "0xEB79EC")]
	protected float GetRelativeDistance(float percent)
	{
		return default(float);
	}

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0xEB78A4", Offset = "0xEB78A4", VA = "0xEB78A4")]
	public int getNormalizedValue()
	{
		return default(int);
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0xEB7A08", Offset = "0xEB7A08", VA = "0xEB7A08")]
	private void Update()
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0xEB7C24", Offset = "0xEB7C24", VA = "0xEB7C24", Slot = "5")]
	public virtual void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0xEB7DA8", Offset = "0xEB7DA8", VA = "0xEB7DA8")]
	public FillLiquid()
	{
	}
}
[Token(Token = "0x20000C9")]
public class FillWaterLevel : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform waterLevel;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float fillSpeed;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float removeSpeed;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float minFill;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private float maxFill;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private GameObject stream;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int waterHeight;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float streamTimer;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float timeToStream;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AudioSource source;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool first;

	[Token(Token = "0x17000026")]
	public int WaterHeight
	{
		[Token(Token = "0x60003E4")]
		[Address(RVA = "0xEB7DB8", Offset = "0xEB7DB8", VA = "0xEB7DB8")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000027")]
	public bool IsFull
	{
		[Token(Token = "0x60003E5")]
		[Address(RVA = "0xEB7DC0", Offset = "0xEB7DC0", VA = "0xEB7DC0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000028")]
	public bool IsEmpty
	{
		[Token(Token = "0x60003E6")]
		[Address(RVA = "0xEB7DD0", Offset = "0xEB7DD0", VA = "0xEB7DD0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0xEB7DE0", Offset = "0xEB7DE0", VA = "0xEB7DE0")]
	public void SetSavedWaterLevel(int waterlevel)
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0xEB7EC8", Offset = "0xEB7EC8", VA = "0xEB7EC8")]
	[PunRPC]
	public void Rpc_Fill(int amount)
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0xEB7EE4", Offset = "0xEB7EE4", VA = "0xEB7EE4")]
	[PunRPC]
	public void Rpc_Remove(int percent)
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xEB7EAC", Offset = "0xEB7EAC", VA = "0xEB7EAC")]
	private float GetRelativeDistance(float percent)
	{
		return default(float);
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0xEB7F74", Offset = "0xEB7F74", VA = "0xEB7F74")]
	public int getNormalizedValue()
	{
		return default(int);
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0xEB8024", Offset = "0xEB8024", VA = "0xEB8024")]
	private void Update()
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0xEB82A0", Offset = "0xEB82A0", VA = "0xEB82A0", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0xEB8428", Offset = "0xEB8428", VA = "0xEB8428")]
	public FillWaterLevel()
	{
	}
}
[Token(Token = "0x20000CA")]
public class FishSpawnPoint : MonoBehaviour
{
	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask toCheck;

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xEBB0BC", Offset = "0xEBB0BC", VA = "0xEBB0BC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0xEBB120", Offset = "0xEBB120", VA = "0xEBB120")]
	public bool checkValid()
	{
		return default(bool);
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xEBB1A4", Offset = "0xEBB1A4", VA = "0xEBB1A4")]
	public FishSpawnPoint()
	{
	}
}
[Token(Token = "0x20000CB")]
public class Aquarium : MonoBehaviourPunCallbacks, ISaveAble, IPunInstantiateMagicCallback
{
	[Serializable]
	[Token(Token = "0x20000CC")]
	public class AquariumData
	{
		[Token(Token = "0x400043D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AquariumFishSpot.AquariumFishSpotData[] fishSpotData;

		[Token(Token = "0x60003FD")]
		[Address(RVA = "0xE70220", Offset = "0xE70220", VA = "0xE70220")]
		public AquariumData()
		{
		}
	}

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AquariumData aquariumData;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AquariumFishSpot[] fishSpots;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool executeStart;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioClip fishPlaceSound;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool reactToChanges;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string lastAquariumData;

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xE6FBC8", Offset = "0xE6FBC8", VA = "0xE6FBC8", Slot = "56")]
	public void OnPhotonInstantiate(PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xE6FCF0", Offset = "0xE6FCF0", VA = "0xE6FCF0")]
	[PunRPC]
	private void RPC_RequestState_Aquarium(PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0xE6FDE4", Offset = "0xE6FDE4", VA = "0xE6FDE4")]
	[PunRPC]
	private void RPC_SetAquarium(string data)
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0xE6FEF8", Offset = "0xE6FEF8", VA = "0xE6FEF8", Slot = "54")]
	public string SaveData()
	{
		return null;
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0xE6FE74", Offset = "0xE6FE74", VA = "0xE6FE74", Slot = "55")]
	public void LoadCharacterData(string data)
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0xE70078", Offset = "0xE70078", VA = "0xE70078")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0xE701A4", Offset = "0xE701A4", VA = "0xE701A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0xE6FF04", Offset = "0xE6FF04", VA = "0xE6FF04")]
	public void SetUp(AquariumData data)
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0xE70374", Offset = "0xE70374", VA = "0xE70374")]
	internal void PlaceFish(AquariumFishSpot fishSpot, string fishToPlace)
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0xE70810", Offset = "0xE70810", VA = "0xE70810")]
	[PunRPC]
	private void RPC_PlaceFish(int spot, string fishToPlace)
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0xE70A14", Offset = "0xE70A14", VA = "0xE70A14")]
	public Aquarium()
	{
	}
}
[Token(Token = "0x20000CD")]
public class AquariumFishSpot : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000CE")]
	public class AquariumFishSpotData
	{
		[Token(Token = "0x4000443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string fish;

		[Token(Token = "0x6000407")]
		[Address(RVA = "0xE70228", Offset = "0xE70228", VA = "0xE70228")]
		public AquariumFishSpotData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000CF")]
	public class FishDictionary
	{
		[Token(Token = "0x4000444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InventoryItem fishID;

		[Token(Token = "0x4000445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject fish;

		[Token(Token = "0x6000408")]
		[Address(RVA = "0xE70F74", Offset = "0xE70F74", VA = "0xE70F74")]
		public FishDictionary()
		{
		}
	}

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject activeFish;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AquariumFishSpotData data;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FishDictionary[] fishList;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<string, GameObject> fishes;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isInitialized;

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0xE70A78", Offset = "0xE70A78", VA = "0xE70A78")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0xE70A7C", Offset = "0xE70A7C", VA = "0xE70A7C")]
	private void initIfNeeded()
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0xE70230", Offset = "0xE70230", VA = "0xE70230")]
	public void SetUp(AquariumFishSpotData data)
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0xE70BEC", Offset = "0xE70BEC", VA = "0xE70BEC")]
	public void PlaceButton(string fishToPlace)
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0xE70854", Offset = "0xE70854", VA = "0xE70854")]
	public void InternPlaceFish(string fishToPlace)
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0xE70C5C", Offset = "0xE70C5C", VA = "0xE70C5C")]
	private bool isPlacable(string fish)
	{
		return default(bool);
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0xE70CC4", Offset = "0xE70CC4", VA = "0xE70CC4")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0xE70B9C", Offset = "0xE70B9C", VA = "0xE70B9C")]
	public void KillFish()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0xE70F0C", Offset = "0xE70F0C", VA = "0xE70F0C")]
	public AquariumFishSpot()
	{
	}
}
[Token(Token = "0x20000D0")]
public class DolphinRotating : MonoBehaviourPun
{
	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float minTimeToAction;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxTimeToAction;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float timeToAction;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float actionTimer;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animator anim;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float swimmSpeed;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	public ParticleSystem sphlash;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	public AudioClip splashClip;

	[Token(Token = "0x6000409")]
	[Address(RVA = "0xD877E0", Offset = "0xD877E0", VA = "0xD877E0")]
	private void Start()
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0xD8787C", Offset = "0xD8787C", VA = "0xD8787C")]
	public void Update()
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0xD87B58", Offset = "0xD87B58", VA = "0xD87B58")]
	[PunRPC]
	private void Rpc_Dive()
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0xD87BB4", Offset = "0xD87BB4", VA = "0xD87BB4")]
	[PunRPC]
	private void Rpc_Jump()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xD87C20", Offset = "0xD87C20", VA = "0xD87C20")]
	public DolphinRotating()
	{
	}
}
[Token(Token = "0x20000D1")]
public class DolphineIdle : MonoBehaviour
{
	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minTimeToDive;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxTimeToDive;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float timeToDive;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float diveTimer;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animator anim;

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xD87C28", Offset = "0xD87C28", VA = "0xD87C28")]
	private void Start()
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xD87CBC", Offset = "0xD87CBC", VA = "0xD87CBC")]
	public void Update()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xD87C90", Offset = "0xD87C90", VA = "0xD87C90")]
	private void CalculateNewTimeToDive()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xD87D58", Offset = "0xD87D58", VA = "0xD87D58")]
	public DolphineIdle()
	{
	}
}
[Token(Token = "0x20000D2")]
public enum FishKIState
{
	[Token(Token = "0x4000454")]
	InOcean,
	[Token(Token = "0x4000455")]
	Grabbed,
	[Token(Token = "0x4000456")]
	Hooked,
	[Token(Token = "0x4000457")]
	Dropped
}
[Token(Token = "0x20000D3")]
public class FishKI : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x20000D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15174", Offset = "0xB15174")]
	private sealed class <Spawn>d__55 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400047A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400047B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400047C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FishKI <>4__this;

		[Token(Token = "0x400047D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <spawnTimer>5__2;

		[Token(Token = "0x17000029")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000434")]
			[Address(RVA = "0xEBAF70", Offset = "0xEBAF70", VA = "0xEBAF70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000436")]
			[Address(RVA = "0xEBAFD8", Offset = "0xEBAFD8", VA = "0xEBAFD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000431")]
		[Address(RVA = "0xEBA6B8", Offset = "0xEBA6B8", VA = "0xEBA6B8")]
		[DebuggerHidden]
		public <Spawn>d__55(int <>1__state)
		{
		}

		[Token(Token = "0x6000432")]
		[Address(RVA = "0xEBAD48", Offset = "0xEBAD48", VA = "0xEBAD48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000433")]
		[Address(RVA = "0xEBAD4C", Offset = "0xEBAD4C", VA = "0xEBAD4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000435")]
		[Address(RVA = "0xEBAF78", Offset = "0xEBAF78", VA = "0xEBAF78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000D5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15184", Offset = "0xB15184")]
	private sealed class <Despawn>d__57 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400047E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400047F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FishKI <>4__this;

		[Token(Token = "0x4000481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <spawnTimer>5__2;

		[Token(Token = "0x1700002B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600043A")]
			[Address(RVA = "0xEBACD8", Offset = "0xEBACD8", VA = "0xEBACD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600043C")]
			[Address(RVA = "0xEBAD40", Offset = "0xEBAD40", VA = "0xEBAD40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000437")]
		[Address(RVA = "0xEBA780", Offset = "0xEBA780", VA = "0xEBA780")]
		[DebuggerHidden]
		public <Despawn>d__57(int <>1__state)
		{
		}

		[Token(Token = "0x6000438")]
		[Address(RVA = "0xEBAAB0", Offset = "0xEBAAB0", VA = "0xEBAAB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000439")]
		[Address(RVA = "0xEBAAB4", Offset = "0xEBAAB4", VA = "0xEBAAB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600043B")]
		[Address(RVA = "0xEBACE0", Offset = "0xEBACE0", VA = "0xEBACE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FishKIState currentState;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxSpeed;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float acceleration;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float idleAcceleration;

	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float scanInterval;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float scanRadius;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float swimRadius;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float randomSwimInterval;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float spawnSpeed;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float mass;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float maxAvoidanceForce;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float animationmultiplier;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float baitingDistance;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float findingDistance;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int maxBites;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float maxForce;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Animator animation;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float swimSpeed;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float scanTime;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float randomSwimTime;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool isInFishingRodRange;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	private bool hasFoundFishingRod;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 randomSwimPoint;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 lastFoundFishingRodPosition;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Vector3 standPosition;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Vector3 velocity;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Vector3 avoidance;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private bool back;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private int randomBites;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public bool wantsToBiteNow;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float biteTimeout;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float biteTimeoutTime;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public PhotonView hookedBy;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public UnityEvent onGrabEvent;

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xEB8D54", Offset = "0xEB8D54", VA = "0xEB8D54")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0xEB8E3C", Offset = "0xEB8E3C", VA = "0xEB8E3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0xEB8EE4", Offset = "0xEB8EE4", VA = "0xEB8EE4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0xEB8F4C", Offset = "0xEB8F4C", VA = "0xEB8F4C")]
	private void AuthorityUpdate()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0xEB9224", Offset = "0xEB9224", VA = "0xEB9224")]
	private void updateHooked()
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0xEB917C", Offset = "0xEB917C", VA = "0xEB917C")]
	private void updateInOcean()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xEB94A8", Offset = "0xEB94A8", VA = "0xEB94A8")]
	private void Baiting()
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0xEB9B90", Offset = "0xEB9B90", VA = "0xEB9B90")]
	private void Bite()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0xEBA128", Offset = "0xEBA128", VA = "0xEBA128")]
	public void HookFish(PhotonView hook)
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0xEBA22C", Offset = "0xEBA22C", VA = "0xEBA22C")]
	[PunRPC]
	private void RPC_HookFish(int viewId)
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0xEBA2D0", Offset = "0xEBA2D0", VA = "0xEBA2D0")]
	public void OnGrab(XRBaseInteractor interactor)
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0xEB972C", Offset = "0xEB972C", VA = "0xEB972C")]
	private void SwimToFishingRod()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0xEB9A24", Offset = "0xEB9A24", VA = "0xEB9A24")]
	private void SwimAround()
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0xEB9BB0", Offset = "0xEB9BB0", VA = "0xEB9BB0")]
	private void SwimTowards(Vector3 point, float swimAcceleration, bool arrival)
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0xEB9740", Offset = "0xEB9740", VA = "0xEB9740")]
	public void Avoid()
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0xEBA590", Offset = "0xEBA590", VA = "0xEBA590")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0xEB9374", Offset = "0xEB9374", VA = "0xEB9374")]
	private void ScanForFishingRod()
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0xEBA608", Offset = "0xEBA608", VA = "0xEBA608")]
	private void CheckFishingRod(bool found)
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0xEBA640", Offset = "0xEBA640", VA = "0xEBA640")]
	private void LostFishingRod()
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0xEBA634", Offset = "0xEBA634", VA = "0xEBA634")]
	private void FoundFishingRod()
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0xEB8E10", Offset = "0xEB8E10", VA = "0xEB8E10")]
	public void SpawnFish()
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0xEBA648", Offset = "0xEBA648", VA = "0xEBA648")]
	private IEnumerator Spawn()
	{
		return null;
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0xEBA6E4", Offset = "0xEBA6E4", VA = "0xEBA6E4")]
	public void DespawnFish()
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0xEBA710", Offset = "0xEBA710", VA = "0xEBA710")]
	private IEnumerator Despawn()
	{
		return null;
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0xEBA7AC", Offset = "0xEBA7AC", VA = "0xEBA7AC", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0xEBA8A4", Offset = "0xEBA8A4", VA = "0xEBA8A4")]
	private void receivedNewState(FishKIState newState)
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0xEBAA14", Offset = "0xEBAA14", VA = "0xEBAA14")]
	public bool canBeHooked()
	{
		return default(bool);
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0xEBAA24", Offset = "0xEBAA24", VA = "0xEBAA24")]
	public bool canBeGrabbed()
	{
		return default(bool);
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0xEBAA60", Offset = "0xEBAA60", VA = "0xEBAA60")]
	internal bool hasBittenNow()
	{
		return default(bool);
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0xEB913C", Offset = "0xEB913C", VA = "0xEB913C")]
	private void changeState(FishKIState newState)
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0xEBAA68", Offset = "0xEBAA68", VA = "0xEBAA68")]
	public FishKI()
	{
	}
}
[Token(Token = "0x20000D6")]
public class FishSpawner : MonoBehaviour
{
	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> fishPrefabs;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxAmountOfFish;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float spawnTime;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool spawn;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<Vector3> spawnPositions;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float spawnTimer;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<FishKI> fishes;

	[Token(Token = "0x600043D")]
	[Address(RVA = "0xEBB1AC", Offset = "0xEBB1AC", VA = "0xEBB1AC")]
	private void Start()
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0xEBB214", Offset = "0xEBB214", VA = "0xEBB214")]
	private void GetSpawnPoints()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0xEBB2D0", Offset = "0xEBB2D0", VA = "0xEBB2D0")]
	private void MasterUpdate()
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0xEBB768", Offset = "0xEBB768", VA = "0xEBB768")]
	private void Update()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0xEBB460", Offset = "0xEBB460", VA = "0xEBB460")]
	public void SpawnFish()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0xEBB840", Offset = "0xEBB840", VA = "0xEBB840")]
	public FishSpawner()
	{
	}
}
[Token(Token = "0x20000D7")]
[ExecuteInEditMode]
public class RodBender : MonoBehaviour
{
	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform start;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform end;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve curve;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float len;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int debugSteps;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform[] bones;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool debugDraw;

	[Token(Token = "0x6000443")]
	[Address(RVA = "0xDC3AD0", Offset = "0xDC3AD0", VA = "0xDC3AD0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0xDC41CC", Offset = "0xDC41CC", VA = "0xDC41CC")]
	private Vector3 getPoint(float i)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0xDC43D4", Offset = "0xDC43D4", VA = "0xDC43D4")]
	private Vector3 getPointOnNormal(float i)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0xDC4510", Offset = "0xDC4510", VA = "0xDC4510")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0xDC452C", Offset = "0xDC452C", VA = "0xDC452C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0xDC42A4", Offset = "0xDC42A4", VA = "0xDC42A4")]
	private Vector3 getTarget()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0xDC3D74", Offset = "0xDC3D74", VA = "0xDC3D74")]
	private Vector3[] calculateLerped(out float lerpedLength)
	{
		return null;
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0xDC3F88", Offset = "0xDC3F88", VA = "0xDC3F88")]
	private Vector3 FindPoint(Vector3[] vectors, float length, float p)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0xDC4974", Offset = "0xDC4974", VA = "0xDC4974")]
	public RodBender()
	{
	}
}
[Token(Token = "0x20000D8")]
public class SharkKI : MonoBehaviour
{
	[Token(Token = "0x20000D9")]
	public enum SharkKIState
	{
		[Token(Token = "0x40004A5")]
		Swimming,
		[Token(Token = "0x40004A6")]
		Attacking,
		[Token(Token = "0x40004A7")]
		Avoiding
	}

	[Token(Token = "0x20000DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB151A4", Offset = "0xB151A4")]
	private sealed class <Spawn>d__31 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SharkKI <>4__this;

		[Token(Token = "0x40004AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <spawnTimer>5__2;

		[Token(Token = "0x1700002D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600045D")]
			[Address(RVA = "0xDD1CDC", Offset = "0xDD1CDC", VA = "0xDD1CDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600045F")]
			[Address(RVA = "0xDD1D44", Offset = "0xDD1D44", VA = "0xDD1D44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600045A")]
		[Address(RVA = "0xDD16E4", Offset = "0xDD16E4", VA = "0xDD16E4")]
		[DebuggerHidden]
		public <Spawn>d__31(int <>1__state)
		{
		}

		[Token(Token = "0x600045B")]
		[Address(RVA = "0xDD1AB4", Offset = "0xDD1AB4", VA = "0xDD1AB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600045C")]
		[Address(RVA = "0xDD1AB8", Offset = "0xDD1AB8", VA = "0xDD1AB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600045E")]
		[Address(RVA = "0xDD1CE4", Offset = "0xDD1CE4", VA = "0xDD1CE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20000DB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB151B4", Offset = "0xB151B4")]
	private sealed class <Despawn>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40004AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40004AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40004AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SharkKI <>4__this;

		[Token(Token = "0x40004AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <spawnTimer>5__2;

		[Token(Token = "0x1700002F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000463")]
			[Address(RVA = "0xDD1A44", Offset = "0xDD1A44", VA = "0xDD1A44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000030")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000465")]
			[Address(RVA = "0xDD1AAC", Offset = "0xDD1AAC", VA = "0xDD1AAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000460")]
		[Address(RVA = "0xDD17AC", Offset = "0xDD17AC", VA = "0xDD17AC")]
		[DebuggerHidden]
		public <Despawn>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6000461")]
		[Address(RVA = "0xDD181C", Offset = "0xDD181C", VA = "0xDD181C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000462")]
		[Address(RVA = "0xDD1820", Offset = "0xDD1820", VA = "0xDD1820", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000464")]
		[Address(RVA = "0xDD1A4C", Offset = "0xDD1A4C", VA = "0xDD1A4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SharkKIState currentState;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxSpeed;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float acceleration;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float idleAcceleration;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float randomSwimInterval;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float spawnSpeed;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float mass;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float maxAvoidanceForce;

	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float animationmultiplier;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float collisionAvoidanceRadius;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float maxForce;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float mayDepth;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Animator animation;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float swimSpeed;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float randomSwimTime;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 randomSwimPoint;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float swimRadius;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 standPosition;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 velocity;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 avoidance;

	[Token(Token = "0x600044C")]
	[Address(RVA = "0xDD0AB0", Offset = "0xDD0AB0", VA = "0xDD0AB0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0xDD0B30", Offset = "0xDD0B30", VA = "0xDD0B30")]
	private void Start()
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0xDD0BF8", Offset = "0xDD0BF8", VA = "0xDD0BF8")]
	private void Update()
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0xDD0C60", Offset = "0xDD0C60", VA = "0xDD0C60")]
	private void AuthorityUpdate()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0xDD0C90", Offset = "0xDD0C90", VA = "0xDD0C90")]
	private void UpdateSwimming()
	{
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0xDD0CB4", Offset = "0xDD0CB4", VA = "0xDD0CB4")]
	private void SwimAround()
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0xDD1088", Offset = "0xDD1088", VA = "0xDD1088")]
	private void SwimTowards(Vector3 point, float swimAcceleration, bool arrival)
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0xDD0DF8", Offset = "0xDD0DF8", VA = "0xDD0DF8")]
	public void Avoid()
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0xDD1658", Offset = "0xDD1658", VA = "0xDD1658")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0xDD0BCC", Offset = "0xDD0BCC", VA = "0xDD0BCC")]
	public void SpawnShark()
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0xDD1674", Offset = "0xDD1674", VA = "0xDD1674")]
	private IEnumerator Spawn()
	{
		return null;
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0xDD1710", Offset = "0xDD1710", VA = "0xDD1710")]
	public void DespawnShark()
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0xDD173C", Offset = "0xDD173C", VA = "0xDD173C")]
	private IEnumerator Despawn()
	{
		return null;
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0xDD17D8", Offset = "0xDD17D8", VA = "0xDD17D8")]
	public SharkKI()
	{
	}
}
[Token(Token = "0x20000DC")]
public class FishingRod : ControllerInput
{
	[Serializable]
	[Token(Token = "0x20000DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB151C4", Offset = "0xB151C4")]
	private sealed class <>c
	{
		[Token(Token = "0x40004C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40004C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<float, float> <>9__28_0;

		[Token(Token = "0x6000471")]
		[Address(RVA = "0xEBC960", Offset = "0xEBC960", VA = "0xEBC960")]
		public <>c()
		{
		}

		[Token(Token = "0x6000472")]
		[Address(RVA = "0xEBC968", Offset = "0xEBC968", VA = "0xEBC968")]
		internal float <throwOut>b__28_0(float i)
		{
			return default(float);
		}
	}

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private InputHelpers.Button throwButton;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private InteractionState throwButtonState;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private InputHelpers.Button fastInButton;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private InteractionState fastInButtonState;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform rodTipTransform;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float minSpeed;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float throwSpeed;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float retractSpeed;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public FishingRodHook bait;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform forwardRerference;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float nextPulse;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float pulseInterval;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool isOutside;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
	private bool showingFish;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioClip throwOutSound;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioClipSettings throwOutSoundSettings;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private PlayerObject playerObject;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float velocity;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 prevTipPosition;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private List<float> magnitudes;

	[Token(Token = "0x6000466")]
	[Address(RVA = "0xEBB848", Offset = "0xEBB848", VA = "0xEBB848")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0xEBB8A0", Offset = "0xEBB8A0", VA = "0xEBB8A0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0xEBC4F8", Offset = "0xEBC4F8", VA = "0xEBC4F8")]
	internal void bitten()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0xEBC50C", Offset = "0xEBC50C", VA = "0xEBC50C")]
	internal void nibbeld()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0xEBC588", Offset = "0xEBC588", VA = "0xEBC588")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0xEBC5C8", Offset = "0xEBC5C8", VA = "0xEBC5C8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0xEBBC48", Offset = "0xEBBC48", VA = "0xEBBC48")]
	public void turnIn()
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0xEBC708", Offset = "0xEBC708", VA = "0xEBC708")]
	public void showFish()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0xEBBE1C", Offset = "0xEBBE1C", VA = "0xEBBE1C")]
	private void throwOut()
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0xEBC818", Offset = "0xEBC818", VA = "0xEBC818")]
	public FishingRod()
	{
	}
}
[Token(Token = "0x20000DE")]
public class FishingRodHook : MonoBehaviourPun
{
	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FishingRod rod;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Collider coll;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Rigidbody hook;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public FishKI bittenFish;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform realHook;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform insideParent;

	[Token(Token = "0x6000473")]
	[Address(RVA = "0xEBC96C", Offset = "0xEBC96C", VA = "0xEBC96C")]
	internal void EnteredOcean(float height)
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0xEBCB88", Offset = "0xEBCB88", VA = "0xEBCB88")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0xEBCE68", Offset = "0xEBCE68", VA = "0xEBCE68")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000476")]
	[Address(RVA = "0xEBC1CC", Offset = "0xEBC1CC", VA = "0xEBC1CC")]
	public void Retract()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0xEBC60C", Offset = "0xEBC60C", VA = "0xEBC60C")]
	public void setParented(bool b)
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0xEBCF24", Offset = "0xEBCF24", VA = "0xEBCF24")]
	[PunRPC]
	public void RPC_setParented(bool b)
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0xEBCF94", Offset = "0xEBCF94", VA = "0xEBCF94")]
	public FishingRodHook()
	{
	}
}
[Token(Token = "0x20000DF")]
public enum FloatableStatus
{
	[Token(Token = "0x40004CD")]
	Dropped,
	[Token(Token = "0x40004CE")]
	Grabbed,
	[Token(Token = "0x40004CF")]
	Hooked,
	[Token(Token = "0x40004D0")]
	InOcean,
	[Token(Token = "0x40004D1")]
	InNet
}
[Token(Token = "0x20000E0")]
public class Floatable : MonoBehaviourPunCallbacks, IPunObservable
{
	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private NetworkGrabbable interactable;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FloatableStatus currentState;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PhotonView hookedBy;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool nonHookable;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private LootSpawner lootSpawner;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Rigidbody rb;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SmoothSyncPUN2 smoothSync;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Tweener tween;

	[Token(Token = "0x600047A")]
	[Address(RVA = "0xEBCF9C", Offset = "0xEBCF9C", VA = "0xEBCF9C", Slot = "28")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0xEBD178", Offset = "0xEBD178", VA = "0xEBD178", Slot = "29")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0xEBD310", Offset = "0xEBD310", VA = "0xEBD310")]
	private void OnSelectExit(XRBaseInteractor arg0)
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0xEBD524", Offset = "0xEBD524", VA = "0xEBD524")]
	private void OnSelectEnter()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0xEBD52C", Offset = "0xEBD52C", VA = "0xEBD52C")]
	internal void unhook()
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0xEBD57C", Offset = "0xEBD57C", VA = "0xEBD57C")]
	internal void EnteredOcean()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0xEBD318", Offset = "0xEBD318", VA = "0xEBD318")]
	private void changeState(FloatableStatus newState)
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0xEBD658", Offset = "0xEBD658", VA = "0xEBD658")]
	private void Update()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0xEBD5C0", Offset = "0xEBD5C0", VA = "0xEBD5C0")]
	private bool isGrabbed()
	{
		return default(bool);
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0xEBD8A0", Offset = "0xEBD8A0", VA = "0xEBD8A0")]
	private void CheckDeletion()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0xEBDC20", Offset = "0xEBDC20", VA = "0xEBDC20", Slot = "54")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0xEBDCF8", Offset = "0xEBDCF8", VA = "0xEBDCF8")]
	private void receivedNewState(FloatableStatus newState)
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0xEBDE00", Offset = "0xEBDE00", VA = "0xEBDE00")]
	internal void setHooked(HookCollector collector)
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0xEBDE78", Offset = "0xEBDE78", VA = "0xEBDE78")]
	internal void setHookedByNet(Vector3 netPosition)
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0xEBD554", Offset = "0xEBD554", VA = "0xEBD554")]
	internal void setUnHooked()
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0xEBDF60", Offset = "0xEBDF60", VA = "0xEBDF60")]
	public bool canBeGrabbed()
	{
		return default(bool);
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0xEBDF80", Offset = "0xEBDF80", VA = "0xEBDF80")]
	public bool canBeHooked()
	{
		return default(bool);
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0xEBDFA4", Offset = "0xEBDFA4", VA = "0xEBDFA4")]
	public Floatable()
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0xEBDFAC", Offset = "0xEBDFAC", VA = "0xEBDFAC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1A560", Offset = "0xB1A560")]
	private void <setHookedByNet>b__21_0()
	{
	}
}
[Token(Token = "0x20000E1")]
public static class AudioUtils
{
	[Token(Token = "0x600048D")]
	[Address(RVA = "0xE744D0", Offset = "0xE744D0", VA = "0xE744D0")]
	public static void PlayClipAtPoint(AudioClip[] clips, Vector3 position)
	{
	}
}
[Token(Token = "0x20000E2")]
public static class FlodExtensions
{
	[Token(Token = "0x600048E")]
	[Address(RVA = "0xEBDFB4", Offset = "0xEBDFB4", VA = "0xEBDFB4")]
	public static bool Includes(this LayerMask mask, int layer)
	{
		return default(bool);
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0xEBDFF0", Offset = "0xEBDFF0", VA = "0xEBDFF0")]
	public static void RemoveAllChildTransform(this Transform t)
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0xEBCDB4", Offset = "0xEBCDB4", VA = "0xEBCDB4")]
	public static bool hasAuthority(this MonoBehaviourPun m)
	{
		return default(bool);
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0xEBE0E8", Offset = "0xEBE0E8", VA = "0xEBE0E8")]
	public static void RpcToOwner(this PhotonView photonView, string rpcName, params object[] parameter)
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0xEBE16C", Offset = "0xEBE16C", VA = "0xEBE16C")]
	public static float NextFloat(this System.Random r, float min, float max)
	{
		return default(float);
	}
}
[Token(Token = "0x20000E3")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB151E4", Offset = "0xB151E4")]
public class FpsBasedCamera : MonoBehaviour
{
	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int cameraCount;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int fps;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float elapsed;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Camera cam;

	[Token(Token = "0x6000493")]
	[Address(RVA = "0xEBFB4C", Offset = "0xEBFB4C", VA = "0xEBFB4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0xEBFBD4", Offset = "0xEBFBD4", VA = "0xEBFBD4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0xEBFC2C", Offset = "0xEBFC2C", VA = "0xEBFC2C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0xEBFD14", Offset = "0xEBFD14", VA = "0xEBFD14")]
	public FpsBasedCamera()
	{
	}
}
[Token(Token = "0x20000E4")]
public class GenericPickup : MonoBehaviourPun, IPunInstantiateMagicCallback
{
	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image rend;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text text;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image textBg;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private UpdateRate updateRate;

	[Token(Token = "0x40004E2")]
	public const string C_ITEM_NAME = "ITEM_NAME";

	[Token(Token = "0x6000497")]
	[Address(RVA = "0xEC2BD4", Offset = "0xEC2BD4", VA = "0xEC2BD4", Slot = "4")]
	public void OnPhotonInstantiate(PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0xEC2E88", Offset = "0xEC2E88", VA = "0xEC2E88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0xEC2D58", Offset = "0xEC2D58", VA = "0xEC2D58")]
	public void updateAmount()
	{
	}

	[Token(Token = "0x600049A")]
	[Address(RVA = "0xEC2D3C", Offset = "0xEC2D3C", VA = "0xEC2D3C")]
	public void setSprite(Sprite sprite)
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0xEC2ECC", Offset = "0xEC2ECC", VA = "0xEC2ECC")]
	public GenericPickup()
	{
	}
}
[Token(Token = "0x20000E5")]
public class GlitterHighlight : MonoBehaviourPun
{
	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private ParticleSystem glitter;

	[Token(Token = "0x600049C")]
	[Address(RVA = "0xEC2F38", Offset = "0xEC2F38", VA = "0xEC2F38")]
	[PunRPC]
	public void Rpc_ActivateGlitter()
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0xEC2F84", Offset = "0xEC2F84", VA = "0xEC2F84")]
	public GlitterHighlight()
	{
	}
}
[Token(Token = "0x20000E6")]
public class GrabWhenRecentlyUngrabbed : ControllerInput
{
	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float ungrabTollerance;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private XRDirectInteractor interactor;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public InputHelpers.Button grabButton;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public InteractionState grabButtonState;

	[Token(Token = "0x600049E")]
	[Address(RVA = "0xECE7A8", Offset = "0xECE7A8", VA = "0xECE7A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0xECE800", Offset = "0xECE800", VA = "0xECE800")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0xECE83C", Offset = "0xECE83C", VA = "0xECE83C")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0xECE9C8", Offset = "0xECE9C8", VA = "0xECE9C8")]
	public GrabWhenRecentlyUngrabbed()
	{
	}
}
[Token(Token = "0x20000E7")]
public enum GridBuildSlotType
{
	[Token(Token = "0x40004E9")]
	None,
	[Token(Token = "0x40004EA")]
	SeaFoundation,
	[Token(Token = "0x40004EB")]
	Pillar,
	[Token(Token = "0x40004EC")]
	Floor,
	[Token(Token = "0x40004ED")]
	Wall
}
[Token(Token = "0x20000E8")]
public class GridBuildSlot : MonoBehaviour
{
	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GridBuildSlotType[] accepts;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GridBuildSlotType[] tolleratesSamePosition;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isAvailable;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool debug;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool allowRotation;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool useIdentityRotation;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform checkPosOverride;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Collider colliderOverride;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float checkRadius;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool isDiagonal;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public bool debugThis;

	[Token(Token = "0x17000031")]
	private Collider coll
	{
		[Token(Token = "0x60004A2")]
		[Address(RVA = "0xECE9DC", Offset = "0xECE9DC", VA = "0xECE9DC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0xECEA74", Offset = "0xECEA74", VA = "0xECEA74")]
	private void Start()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0xECEA78", Offset = "0xECEA78", VA = "0xECEA78")]
	public bool checkOverLap()
	{
		return default(bool);
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0xECF130", Offset = "0xECF130", VA = "0xECF130")]
	private Vector3 getCheckPos()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0xECF370", Offset = "0xECF370", VA = "0xECF370")]
	internal bool isOk(GridBuildSlotType slotType)
	{
		return default(bool);
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0xECF1C4", Offset = "0xECF1C4", VA = "0xECF1C4")]
	internal bool tollerates(GridBuildSlotType slotType)
	{
		return default(bool);
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0xECF22C", Offset = "0xECF22C", VA = "0xECF22C")]
	private void setSlotState(bool active)
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0xECF3D8", Offset = "0xECF3D8", VA = "0xECF3D8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0xECF428", Offset = "0xECF428", VA = "0xECF428")]
	public GridBuildSlot()
	{
	}
}
[Token(Token = "0x20000E9")]
public class GridBuildSlotItem : MonoBehaviour
{
	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GridBuildSlotType itemType;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool canRotate;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool onlyOnGroundLevel;

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0xF436B0", Offset = "0xF436B0", VA = "0xF436B0")]
	public GridBuildSlotItem()
	{
	}
}
[Serializable]
[Token(Token = "0x20000EA")]
public class GrillData
{
	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int fuel;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int waterLevel;

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0xF4478C", Offset = "0xF4478C", VA = "0xF4478C")]
	public GrillData()
	{
	}
}
[Token(Token = "0x20000EB")]
public class Grill : MonoBehaviourPun, IPunObservable, ISaveAble
{
	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GrillData data;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int maxFuel;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Consumeable.GrillableType canGrill;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isFlaming;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float flamingCooldownMax;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float flamingCooldown;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ParticleSystem particles;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioSource fireAudio;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject[] logs;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float checkInterval;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float checkCooldown;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Collider[] hits;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject checkPoint;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector3 checkRadius;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public int maxGrillAmount;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool grillNextWhenOneFinished;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public FillWaterLevel water;

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0xF436B8", Offset = "0xF436B8", VA = "0xF436B8")]
	private void checkFuel()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0xF43900", Offset = "0xF43900", VA = "0xF43900")]
	private void toggleLightEffect(bool v)
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0xF439D8", Offset = "0xF439D8", VA = "0xF439D8")]
	private void Update()
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0xF43B04", Offset = "0xF43B04", VA = "0xF43B04")]
	private void checkForGrill()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0xF43FF8", Offset = "0xF43FF8", VA = "0xF43FF8")]
	private float getDistance(Collider a)
	{
		return default(float);
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0xF43F84", Offset = "0xF43F84", VA = "0xF43F84")]
	internal bool hasFuel()
	{
		return default(bool);
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0xF43FA8", Offset = "0xF43FA8", VA = "0xF43FA8")]
	private bool ConsumeFire()
	{
		return default(bool);
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0xF440EC", Offset = "0xF440EC", VA = "0xF440EC")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0xF4443C", Offset = "0xF4443C", VA = "0xF4443C")]
	[PunRPC]
	private void RPC_FuelUp()
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0xF44480", Offset = "0xF44480", VA = "0xF44480")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0xF43AB0", Offset = "0xF43AB0", VA = "0xF43AB0")]
	private bool shouldCheck()
	{
		return default(bool);
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0xF444D8", Offset = "0xF444D8", VA = "0xF444D8", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0xF44524", Offset = "0xF44524", VA = "0xF44524", Slot = "5")]
	public string SaveData()
	{
		return null;
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0xF445BC", Offset = "0xF445BC", VA = "0xF445BC", Slot = "6")]
	public void LoadCharacterData(string dataToLoad)
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0xF44684", Offset = "0xF44684", VA = "0xF44684")]
	public Grill()
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0xF44744", Offset = "0xF44744", VA = "0xF44744")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1A5E0", Offset = "0xB1A5E0")]
	private int <checkForGrill>b__21_0(Collider a, Collider b)
	{
		return default(int);
	}
}
[Token(Token = "0x20000EC")]
public class GrillSideReactorGradient : MonoBehaviour
{
	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Consumeable grillable;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Gradient gradient;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Renderer rend;

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0xF44794", Offset = "0xF44794", VA = "0xF44794")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0xF44804", Offset = "0xF44804", VA = "0xF44804")]
	private void Update()
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0xF448D0", Offset = "0xF448D0", VA = "0xF448D0")]
	public GrillSideReactorGradient()
	{
	}
}
[Token(Token = "0x20000ED")]
public class GrillSideReactorTexture : MonoBehaviour
{
	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Consumeable grillable;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Renderer rend;

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0xF448D8", Offset = "0xF448D8", VA = "0xF448D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0xF44948", Offset = "0xF44948", VA = "0xF44948")]
	private void Update()
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0xF44A10", Offset = "0xF44A10", VA = "0xF44A10")]
	public GrillSideReactorTexture()
	{
	}
}
[Token(Token = "0x20000EE")]
public class GrillSurface : MonoBehaviour
{
	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Grill grill;

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0xF44A18", Offset = "0xF44A18", VA = "0xF44A18")]
	public GrillSurface()
	{
	}
}
[Token(Token = "0x20000EF")]
public class Hammer : ControllerInput
{
	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private LineRenderer lineRend;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LayerMask mask;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float rayLen;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public InputHelpers.Button hammerButton;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public InteractionState hammerButtonState;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private RaycastHit[] hits;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform startPoint;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject lastHit;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float pressProgress;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float pressTime;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Image destroyProgressImage;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Gradient destroyProgressGradient;

	[Token(Token = "0x4000521")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private PlayerObject playerObject;

	[Token(Token = "0x4000522")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Buildable lastToDestroy;

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0xF44A20", Offset = "0xF44A20", VA = "0xF44A20")]
	private void Start()
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0xF44AC0", Offset = "0xF44AC0", VA = "0xF44AC0")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0xF44C10", Offset = "0xF44C10", VA = "0xF44C10")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0xF4517C", Offset = "0xF4517C", VA = "0xF4517C")]
	private void tryDestroy(Buildable toDestroy)
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0xF452A0", Offset = "0xF452A0", VA = "0xF452A0")]
	public Hammer()
	{
	}
}
[Token(Token = "0x20000F0")]
public class HandPoser : ControllerInput
{
	[Token(Token = "0x4000523")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public InputHelpers.Button grabButton;

	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public InputHelpers.Button triggerButton;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Animator anim;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public string anim_idle;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string anim_point;

	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string anim_grab;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string anim_thumbsUp;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public string anim_Zero;

	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float idleGrab;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool trigger;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB183E8", Offset = "0xB183E8")]
	public float grab;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float speed;

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0xF45310", Offset = "0xF45310", VA = "0xF45310")]
	private void Update()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0xF45534", Offset = "0xF45534", VA = "0xF45534")]
	public HandPoser()
	{
	}
}
[Token(Token = "0x20000F1")]
public class HandPump : MonoBehaviour
{
	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FillWaterLevel waterLevel;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RotateToSelector handle;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PumpStick stick;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float minPumpSpeed;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int fillPerPump;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float lastValue;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float value;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool pumped;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private AudioClip pumpClip;

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0xF455E0", Offset = "0xF455E0", VA = "0xF455E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0xF45600", Offset = "0xF45600", VA = "0xF45600")]
	private void Update()
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0xF45854", Offset = "0xF45854", VA = "0xF45854")]
	public HandPump()
	{
	}
}
[Token(Token = "0x20000F2")]
public enum HandToolType
{
	[Token(Token = "0x4000539")]
	None,
	[Token(Token = "0x400053A")]
	Hook,
	[Token(Token = "0x400053B")]
	FishingRod,
	[Token(Token = "0x400053C")]
	Hammer,
	[Token(Token = "0x400053D")]
	SlingShot,
	[Token(Token = "0x400053E")]
	WaterPistol,
	[Token(Token = "0x400053F")]
	Spyglass,
	[Token(Token = "0x4000540")]
	Hook2,
	[Token(Token = "0x4000541")]
	Magnet,
	[Token(Token = "0x4000542")]
	Count
}
[Serializable]
[Token(Token = "0x20000F3")]
public class HandToolItem
{
	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public HandToolType type;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject visual;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite icon;

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0xF45868", Offset = "0xF45868", VA = "0xF45868")]
	public HandToolItem()
	{
	}
}
[Token(Token = "0x20000F4")]
public class HandTools : MonoBehaviour
{
	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject hand;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HandToolItem[] tools;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public HandToolType[] currentTools;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public HandPoser handPoser;

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0xF45870", Offset = "0xF45870", VA = "0xF45870")]
	internal void setToolSlot(int slot)
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0xF4599C", Offset = "0xF4599C", VA = "0xF4599C")]
	internal HandToolType getItemAtSlot(int index)
	{
		return default(HandToolType);
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0xF45A00", Offset = "0xF45A00", VA = "0xF45A00")]
	public void setItemAtSlot(int index, HandToolType type)
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0xF45A60", Offset = "0xF45A60", VA = "0xF45A60")]
	public void setHandVisible(bool v)
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0xF45B1C", Offset = "0xF45B1C", VA = "0xF45B1C")]
	internal Sprite getIconFor(HandToolType type)
	{
		return null;
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0xF45B8C", Offset = "0xF45B8C", VA = "0xF45B8C")]
	internal Sprite getIconForIndex(int i)
	{
		return null;
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0xF45C0C", Offset = "0xF45C0C", VA = "0xF45C0C")]
	internal void OnPhotonSerializeView(PhotonStream stream)
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0xF45D4C", Offset = "0xF45D4C", VA = "0xF45D4C")]
	public HandTools()
	{
	}
}
[Token(Token = "0x20000F5")]
public class HealthDisplay : MonoBehaviour
{
	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlayerHealth m_health;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Image img;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Color origColor;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color low;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color crit;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool showHealth;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool showHunger;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool showThrist;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	public bool getLocalPlayer;

	[Token(Token = "0x17000032")]
	private PlayerHealth health
	{
		[Token(Token = "0x60004D7")]
		[Address(RVA = "0xF45F40", Offset = "0xF45F40", VA = "0xF45F40")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0xF46028", Offset = "0xF46028", VA = "0xF46028")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0xF460CC", Offset = "0xF460CC", VA = "0xF460CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0xF462B4", Offset = "0xF462B4", VA = "0xF462B4")]
	public HealthDisplay()
	{
	}
}
[Token(Token = "0x20000F6")]
public class HealthNotifier : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000F7")]
	public class NotificationData
	{
		[Token(Token = "0x4000558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int health;

		[Token(Token = "0x4000559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float amplitude;

		[Token(Token = "0x400055A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float duration;

		[Token(Token = "0x400055B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float waittime;

		[Token(Token = "0x400055C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UpdateRate updateRate;

		[Token(Token = "0x400055D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip clip;

		[Token(Token = "0x400055E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float audioVolume;

		[Token(Token = "0x60004E2")]
		[Address(RVA = "0xF468D8", Offset = "0xF468D8", VA = "0xF468D8")]
		public NotificationData()
		{
		}
	}

	[Token(Token = "0x20000F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15248", Offset = "0xB15248")]
	private sealed class <cr_execute>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400055F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HealthNotifier <>4__this;

		[Token(Token = "0x4000562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NotificationData notification;

		[Token(Token = "0x17000035")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60004E6")]
			[Address(RVA = "0xF46868", Offset = "0xF46868", VA = "0xF46868", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000036")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60004E8")]
			[Address(RVA = "0xF468D0", Offset = "0xF468D0", VA = "0xF468D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004E3")]
		[Address(RVA = "0xF466B0", Offset = "0xF466B0", VA = "0xF466B0")]
		[DebuggerHidden]
		public <cr_execute>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60004E4")]
		[Address(RVA = "0xF466E4", Offset = "0xF466E4", VA = "0xF466E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60004E5")]
		[Address(RVA = "0xF466E8", Offset = "0xF466E8", VA = "0xF466E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60004E7")]
		[Address(RVA = "0xF46870", Offset = "0xF46870", VA = "0xF46870", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource aSrc;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private InputDeviceWrapper m_InputDevice1;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private InputDeviceWrapper m_InputDevice2;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public NotificationData[] data;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Coroutine currentCR;

	[Token(Token = "0x17000033")]
	public InputDeviceWrapper inputDevice1
	{
		[Token(Token = "0x60004DC")]
		[Address(RVA = "0xF46314", Offset = "0xF46314", VA = "0xF46314")]
		get
		{
			return default(InputDeviceWrapper);
		}
	}

	[Token(Token = "0x17000034")]
	public InputDeviceWrapper inputDevice2
	{
		[Token(Token = "0x60004DD")]
		[Address(RVA = "0xF46398", Offset = "0xF46398", VA = "0xF46398")]
		get
		{
			return default(InputDeviceWrapper);
		}
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0xF462BC", Offset = "0xF462BC", VA = "0xF462BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0xF4641C", Offset = "0xF4641C", VA = "0xF4641C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0xF465E4", Offset = "0xF465E4", VA = "0xF465E4")]
	public void execute(NotificationData notification)
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0xF46634", Offset = "0xF46634", VA = "0xF46634")]
	private IEnumerator cr_execute(NotificationData notification)
	{
		return null;
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0xF466DC", Offset = "0xF466DC", VA = "0xF466DC")]
	public HealthNotifier()
	{
	}
}
[Token(Token = "0x20000F9")]
public class HighFiveAction : MonoBehaviour
{
	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayerObject player;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayerPartPosition playerPartPosition;

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0xF47B5C", Offset = "0xF47B5C", VA = "0xF47B5C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0xF47C20", Offset = "0xF47C20", VA = "0xF47C20")]
	private void OnTriggerEnter(Collider otherCollider)
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0xF47DAC", Offset = "0xF47DAC", VA = "0xF47DAC")]
	public HighFiveAction()
	{
	}
}
[Token(Token = "0x20000FA")]
public class HighFiveManager : MonoBehaviourPun
{
	[Token(Token = "0x20000FB")]
	public class HighFiveData
	{
		[Token(Token = "0x4000569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float lastLeft;

		[Token(Token = "0x400056A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float lastRight;

		[Token(Token = "0x60004F3")]
		[Address(RVA = "0xF4833C", Offset = "0xF4833C", VA = "0xF4833C")]
		public HighFiveData()
		{
		}
	}

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<int, HighFiveData> lastHighFives;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip higFiveClip;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject effectPrefab;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static HighFiveManager instance;

	[Token(Token = "0x17000037")]
	public static HighFiveManager Instance
	{
		[Token(Token = "0x60004EC")]
		[Address(RVA = "0xF47CDC", Offset = "0xF47CDC", VA = "0xF47CDC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0xF47DA8", Offset = "0xF47DA8", VA = "0xF47DA8")]
	public void HandleHighFive(PlayerObject p1, bool p1Left, PlayerObject p2, bool p2Left)
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0xF47DB4", Offset = "0xF47DB4", VA = "0xF47DB4")]
	[PunRPC]
	private void Rpc_HighFive(Player p1, bool p1Left, Player p2, bool p2Left)
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0xF4823C", Offset = "0xF4823C", VA = "0xF4823C")]
	[PunRPC]
	private void RPC_ClientClap(Vector3 pos)
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0xF48134", Offset = "0xF48134", VA = "0xF48134")]
	private void setHighFive(Player p, bool left)
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0xF48074", Offset = "0xF48074", VA = "0xF48074")]
	private bool canClap(Player p, bool left)
	{
		return default(bool);
	}

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0xF48344", Offset = "0xF48344", VA = "0xF48344")]
	public HighFiveManager()
	{
	}
}
[Token(Token = "0x20000FC")]
public class Hitable : MonoBehaviourPun
{
	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent WhenHit;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent WhenDead;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool instaKill;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool killed;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float health;

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0xF48C9C", Offset = "0xF48C9C", VA = "0xF48C9C")]
	internal void hit(int ownerActor, Bullet bullet)
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0xF48DE8", Offset = "0xF48DE8", VA = "0xF48DE8")]
	[PunRPC]
	private void RPC_hit(int ownerActor, float damage)
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0xF48E68", Offset = "0xF48E68", VA = "0xF48E68")]
	private void peformKilled(int ownerActor)
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0xF48E88", Offset = "0xF48E88", VA = "0xF48E88")]
	public Hitable()
	{
	}
}
[Token(Token = "0x20000FD")]
public class Hook : ControllerInput
{
	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float step;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB18410", Offset = "0xB18410")]
	public float testPos;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float testStrength;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Rigidbody hook;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform hookZero;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float retractSpeed;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public bool isOutside;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private InputHelpers.Button throwButton;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private InteractionState throwButtonState;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private InputHelpers.Button fastInButton;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private InteractionState fastInButtonState;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private PlayerObject playerObject;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public List<Floatable> hookedObjects;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private ItemPickupVisualizer visualizer;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioClip throwOutClip;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private HookCollector hookCollector;

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0xF48E98", Offset = "0xF48E98", VA = "0xF48E98")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0xF48F2C", Offset = "0xF48F2C", VA = "0xF48F2C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0xF491D0", Offset = "0xF491D0", VA = "0xF491D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0xF49200", Offset = "0xF49200", VA = "0xF49200")]
	public Vector3 getHookPosition(float t, float strength)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0xF4932C", Offset = "0xF4932C", VA = "0xF4932C")]
	public Vector3 PlotTrajectoryAtTime(Vector3 start, Vector3 startVelocity, float time)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0xF49450", Offset = "0xF49450", VA = "0xF49450")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0xF499EC", Offset = "0xF499EC", VA = "0xF499EC")]
	private void Retract()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0xF49C30", Offset = "0xF49C30", VA = "0xF49C30")]
	private void Collect()
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0xF49FE8", Offset = "0xF49FE8", VA = "0xF49FE8")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0xF49834", Offset = "0xF49834", VA = "0xF49834")]
	public void Launch()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0xF48FC4", Offset = "0xF48FC4", VA = "0xF48FC4")]
	private void ResetHook()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0xF4A20C", Offset = "0xF4A20C", VA = "0xF4A20C")]
	internal void Touched(Collider other, HookCollector hookCollector)
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0xF4A3E4", Offset = "0xF4A3E4", VA = "0xF4A3E4")]
	public Hook()
	{
	}
}
[Token(Token = "0x20000FE")]
public class HookCollector : MonoBehaviourPun
{
	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Hook hook;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform insideParent;

	[Token(Token = "0x6000505")]
	[Address(RVA = "0xF4A490", Offset = "0xF4A490", VA = "0xF4A490")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0xF4A110", Offset = "0xF4A110", VA = "0xF4A110")]
	public void setParented(bool b)
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0xF4A4AC", Offset = "0xF4A4AC", VA = "0xF4A4AC")]
	[PunRPC]
	public void RPC_setParented(bool b)
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0xF4A51C", Offset = "0xF4A51C", VA = "0xF4A51C")]
	public HookCollector()
	{
	}
}
[Token(Token = "0x20000FF")]
public interface IHealth
{
}
[Token(Token = "0x2000100")]
public interface ISaveAble
{
	[Token(Token = "0x6000509")]
	string SaveData();

	[Token(Token = "0x600050A")]
	void LoadCharacterData(string data);
}
[Token(Token = "0x2000101")]
[ExecuteInEditMode]
public class ImportSplineFromTween : MonoBehaviour
{
	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private BezierSpline spline;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private DOTweenPath path;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private BezierPoint point0;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private BezierPoint point1;

	[Token(Token = "0x600050B")]
	[Address(RVA = "0xF904AC", Offset = "0xF904AC", VA = "0xF904AC")]
	public void ImportPath()
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0xF905F4", Offset = "0xF905F4", VA = "0xF905F4")]
	public void AddPoint(int index, Vector3 pos)
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0xF905D8", Offset = "0xF905D8", VA = "0xF905D8")]
	public void SetPoint(Vector3 pos, ref BezierPoint s)
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0xF90648", Offset = "0xF90648", VA = "0xF90648")]
	public ImportSplineFromTween()
	{
	}
}
[Serializable]
[Token(Token = "0x2000102")]
public class InventoryContent
{
	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public InventoryItem item;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int amount;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int useAmount;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public object[] data;

	[Token(Token = "0x17000038")]
	public bool isToolSlot
	{
		[Token(Token = "0x600050F")]
		[Address(RVA = "0xEE9270", Offset = "0xEE9270", VA = "0xEE9270")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0xEE991C", Offset = "0xEE991C", VA = "0xEE991C")]
	public object[] serialize()
	{
		return null;
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0xEE9AE0", Offset = "0xEE9AE0", VA = "0xEE9AE0")]
	public static InventoryContent deserialize(object[] values)
	{
		return null;
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0xEEB050", Offset = "0xEEB050", VA = "0xEEB050")]
	public static void setDataValue(ref object[] data, int index, object value)
	{
	}

	[Token(Token = "0x6000513")]
	public static T getValue<T>(object[] data, int index, T defaultValue)
	{
		return (T)null;
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0xEEAFE8", Offset = "0xEEAFE8", VA = "0xEEAFE8")]
	public InventoryContent()
	{
	}
}
[Serializable]
[Token(Token = "0x2000103")]
public class InventorySaveData
{
	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public InventoryContentSaveData[] content;

	[Token(Token = "0x6000515")]
	[Address(RVA = "0xEEA554", Offset = "0xEEA554", VA = "0xEEA554")]
	public InventorySaveData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000104")]
public class InventoryContentSaveData
{
	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string itemName;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int amount;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int useAmount;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public byte[] data;

	[Token(Token = "0x6000516")]
	[Address(RVA = "0xEEA55C", Offset = "0xEEA55C", VA = "0xEEA55C")]
	public InventoryContentSaveData()
	{
	}
}
[Token(Token = "0x2000105")]
public class Inventory : MonoBehaviourPunCallbacks, ISaveAble
{
	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform dropOutPoint;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<InventoryContent> items;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent OnChanged;

	[Token(Token = "0x4000592")]
	public const string C_Health = "ITEM_HEALTH";

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityAction whenRightsChanged;

	[Token(Token = "0x17000039")]
	public bool isPublic
	{
		[Token(Token = "0x6000517")]
		[Address(RVA = "0xEE6E9C", Offset = "0xEE6E9C", VA = "0xEE6E9C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0xEE6F04", Offset = "0xEE6F04", VA = "0xEE6F04")]
	private void Start()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0xEE7010", Offset = "0xEE7010", VA = "0xEE7010")]
	public void setPublic(bool b)
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0xEE6F08", Offset = "0xEE6F08", VA = "0xEE6F08")]
	public void UpdateInventory()
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0xEE7088", Offset = "0xEE7088", VA = "0xEE7088")]
	internal int getTotal(InventoryItem item)
	{
		return default(int);
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0xEE71A8", Offset = "0xEE71A8", VA = "0xEE71A8")]
	internal void dropOutItem(InventoryItem item, bool inhand, int useAmount, object[] data, [Optional] Transform dropPos, bool generic = false, int amount = 1)
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0xEE7730", Offset = "0xEE7730", VA = "0xEE7730")]
	internal static void dropOutItemInHand(InventoryItem item)
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0xEE7A68", Offset = "0xEE7A68", VA = "0xEE7A68")]
	internal bool canBuild(BuildCost[] toBuild)
	{
		return default(bool);
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0xEE7A90", Offset = "0xEE7A90", VA = "0xEE7A90")]
	public bool canBuild(BuildCost[] costs, out BuildCost[] missing)
	{
		return default(bool);
	}

	[Token(Token = "0x6000520")]
	[Address(RVA = "0xEE7D1C", Offset = "0xEE7D1C", VA = "0xEE7D1C", Slot = "46")]
	public override void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0xEE7E1C", Offset = "0xEE7E1C", VA = "0xEE7E1C", Slot = "47")]
	public override void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x6000522")]
	[Address(RVA = "0xEE7F54", Offset = "0xEE7F54", VA = "0xEE7F54")]
	internal void removeCraftCosts(string toCraft)
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0xEE8104", Offset = "0xEE8104", VA = "0xEE8104")]
	private void intern_removeCraftCosts(string item_toBuild)
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0xEE8590", Offset = "0xEE8590", VA = "0xEE8590")]
	internal void setItem(int index, InventoryContent tmp)
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0xEE8944", Offset = "0xEE8944", VA = "0xEE8944")]
	internal void removeAmount(InventoryItem item, int amount)
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0xEE8C14", Offset = "0xEE8C14", VA = "0xEE8C14")]
	[PunRPC]
	private void RPC_RemoveAmount(string itemName, int amount)
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0xEE8AA0", Offset = "0xEE8AA0", VA = "0xEE8AA0")]
	private void intern_removeAmount(InventoryItem item, int amount)
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0xEE8C48", Offset = "0xEE8C48", VA = "0xEE8C48")]
	[PunRPC]
	private void RPC_SetItem(int index, string item, int amount, int useAmount, object[] data)
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0xEE880C", Offset = "0xEE880C", VA = "0xEE880C")]
	private void intern_setItem(int index, InventoryItem item, int amount, int useAmount, object[] data)
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0xEE8CA4", Offset = "0xEE8CA4", VA = "0xEE8CA4")]
	[PunRPC]
	private void RPC_RemoveCraftCosts(string toBuild)
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0xEE8CA8", Offset = "0xEE8CA8", VA = "0xEE8CA8", Slot = "42")]
	public override void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0xEE8CDC", Offset = "0xEE8CDC", VA = "0xEE8CDC")]
	public void addItem(InventoryItem item, int useAmount, object[] data, int amount = 1)
	{
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0xEE9224", Offset = "0xEE9224", VA = "0xEE9224")]
	[PunRPC]
	private void RPC_AddItem(string item, int useAmount, object[] data, int amount = 1)
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0xEE8EDC", Offset = "0xEE8EDC", VA = "0xEE8EDC")]
	private void intern_addItem(InventoryItem item, int useAmount, object[] data, int amount = 1)
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0xEE8054", Offset = "0xEE8054", VA = "0xEE8054")]
	private bool isMineOrNoOwnerAndMaster()
	{
		return default(bool);
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0xEE9278", Offset = "0xEE9278", VA = "0xEE9278")]
	public void removeItemFromSlot(int slot, int amount)
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0xEE94E8", Offset = "0xEE94E8", VA = "0xEE94E8")]
	[PunRPC]
	private void RPC_RemoveItemFromSlot(int slot, int amount)
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0xEE93D4", Offset = "0xEE93D4", VA = "0xEE93D4")]
	private void intern_removeItemFromSlot(int slot, int amount)
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0xEE8514", Offset = "0xEE8514", VA = "0xEE8514")]
	private void RefreshViaRpc()
	{
	}

	[Token(Token = "0x6000534")]
	[Address(RVA = "0xEE95F4", Offset = "0xEE95F4", VA = "0xEE95F4")]
	public void RefreshInventory()
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0xEE9628", Offset = "0xEE9628", VA = "0xEE9628")]
	[PunRPC]
	private void RPC_UpdateInventory(object[] str)
	{
	}

	[Token(Token = "0x6000536")]
	[Address(RVA = "0xEE94EC", Offset = "0xEE94EC", VA = "0xEE94EC")]
	public object[] serializeInventory()
	{
		return null;
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0xEE97E8", Offset = "0xEE97E8", VA = "0xEE97E8")]
	private InventoryContent[] deSerializeInventory(object[] data)
	{
		return null;
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0xEE9C54", Offset = "0xEE9C54", VA = "0xEE9C54")]
	public void Swap(int index1, int index2)
	{
	}

	[Token(Token = "0x6000539")]
	[Address(RVA = "0xEEA1D4", Offset = "0xEEA1D4", VA = "0xEEA1D4")]
	[PunRPC]
	internal void RPC_Swap(int index1, int index2)
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0xEE9DB0", Offset = "0xEE9DB0", VA = "0xEE9DB0")]
	private void intern_Swap(int index1, int index2)
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0xEEA1D8", Offset = "0xEEA1D8", VA = "0xEEA1D8", Slot = "54")]
	public string SaveData()
	{
		return null;
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0xEEA56C", Offset = "0xEEA56C", VA = "0xEEA56C")]
	internal void forceSet(string inventory)
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0xEEA664", Offset = "0xEEA664", VA = "0xEEA664")]
	[PunRPC]
	private void RPC_forceSet(string inventory)
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0xEEA668", Offset = "0xEEA668", VA = "0xEEA668", Slot = "55")]
	public void LoadCharacterData(string data)
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0xEEABD8", Offset = "0xEEABD8", VA = "0xEEABD8")]
	internal bool canPickup(InventoryItem item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0xEEAE20", Offset = "0xEEAE20", VA = "0xEEAE20")]
	public bool hasItem(InventoryItem item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0xEEAF78", Offset = "0xEEAF78", VA = "0xEEAF78")]
	public Inventory()
	{
	}
}
[Token(Token = "0x2000106")]
public class InventoryDragHandler : MonoBehaviour, IDragHandler, IEventSystemHandler, IEndDragHandler, IBeginDragHandler, IPointerExitHandler, IPointerEnterHandler
{
	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Canvas parentCanvasOfImageToMove;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform origParent;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool leftDrag;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static InventoryDragHandler currentDragging;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public InventoryVisualItem inv;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isDragging;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool isOverInventory;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool touchingInventory;

	[Token(Token = "0x6000542")]
	[Address(RVA = "0xEEB17C", Offset = "0xEEB17C", VA = "0xEEB17C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0xEEB20C", Offset = "0xEEB20C", VA = "0xEEB20C", Slot = "4")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000544")]
	[Address(RVA = "0xEEB5E4", Offset = "0xEEB5E4", VA = "0xEEB5E4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0xEEB5F4", Offset = "0xEEB5F4", VA = "0xEEB5F4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0xEEB5F8", Offset = "0xEEB5F8", VA = "0xEEB5F8")]
	private bool isleft(PointerEventData eventData)
	{
		return default(bool);
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0xEEB4E4", Offset = "0xEEB4E4", VA = "0xEEB4E4", Slot = "5")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0xEEB618", Offset = "0xEEB618", VA = "0xEEB618", Slot = "6")]
	public void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0xEEB898", Offset = "0xEEB898", VA = "0xEEB898", Slot = "7")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0xEEB940", Offset = "0xEEB940", VA = "0xEEB940", Slot = "8")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0xEEB9F0", Offset = "0xEEB9F0", VA = "0xEEB9F0")]
	public InventoryDragHandler()
	{
	}
}
[Token(Token = "0x2000107")]
public class InventoryDropHandler : MonoBehaviour, IDropHandler, IEventSystemHandler
{
	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Canvas parentCanvasOfImageToMove;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform origParent;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform rect;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private InventoryVisual inventory;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip defaultDropSound;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AudioSource source;

	[Token(Token = "0x600054C")]
	[Address(RVA = "0xEEB9F8", Offset = "0xEEB9F8", VA = "0xEEB9F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600054D")]
	[Address(RVA = "0xEEBAB8", Offset = "0xEEBAB8", VA = "0xEEBAB8", Slot = "4")]
	public void OnDrop(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0xEEBF9C", Offset = "0xEEBF9C", VA = "0xEEBF9C")]
	private void PlayDropSound(InventoryVisualItem item)
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0xEEC0F0", Offset = "0xEEC0F0", VA = "0xEEC0F0")]
	public InventoryDropHandler()
	{
	}
}
[Token(Token = "0x2000108")]
public class InventoryDropZone : MonoBehaviour
{
	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Inventory inventory;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InventoryVisual visualInventory;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ungrabTollerance;

	[Token(Token = "0x6000550")]
	[Address(RVA = "0xEEC0F8", Offset = "0xEEC0F8", VA = "0xEEC0F8")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000551")]
	[Address(RVA = "0xEEC504", Offset = "0xEEC504", VA = "0xEEC504")]
	public InventoryDropZone()
	{
	}
}
[Token(Token = "0x2000109")]
public class InventoryFill : MonoBehaviour
{
	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Inventory inv;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int randomItemCountMin;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int randomItemCountMax;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RandomListInventory randomItems;

	[Token(Token = "0x6000552")]
	[Address(RVA = "0xEEC518", Offset = "0xEEC518", VA = "0xEEC518")]
	private void Start()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0xEEC658", Offset = "0xEEC658", VA = "0xEEC658")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0xEEC698", Offset = "0xEEC698", VA = "0xEEC698")]
	public InventoryFill()
	{
	}
}
[Token(Token = "0x200010A")]
public enum InventoryCategory
{
	[Token(Token = "0x40005AA")]
	All = -999,
	[Token(Token = "0x40005AB")]
	None = 0,
	[Token(Token = "0x40005AC")]
	Food = 1,
	[Token(Token = "0x40005AD")]
	Structures = 2,
	[Token(Token = "0x40005AE")]
	Tools = 3,
	[Token(Token = "0x40005AF")]
	Deco = 4,
	[Token(Token = "0x40005B0")]
	Resources = 5,
	[Token(Token = "0x40005B1")]
	Wall = 6,
	[Token(Token = "0x40005B2")]
	Accessories = 7,
	[Token(Token = "0x40005B3")]
	Seasonal = 8,
	[Token(Token = "0x40005B4")]
	Usables = 9,
	[Token(Token = "0x40005B5")]
	Fence = 10
}
[Token(Token = "0x200010B")]
public enum CraftingCategory
{
	[Token(Token = "0x40005B7")]
	All = -999,
	[Token(Token = "0x40005B8")]
	None = 0,
	[Token(Token = "0x40005B9")]
	Basic = 1,
	[Token(Token = "0x40005BA")]
	Workbench = 2,
	[Token(Token = "0x40005BB")]
	Choppingblock = 3,
	[Token(Token = "0x40005BC")]
	Craftingtable = 4,
	[Token(Token = "0x40005BD")]
	Laboratory = 5,
	[Token(Token = "0x40005BE")]
	NotInDemo = 6
}
[Token(Token = "0x200010C")]
public enum InventoryFuelType
{
	[Token(Token = "0x40005C0")]
	None,
	[Token(Token = "0x40005C1")]
	Wood
}
[Serializable]
[Token(Token = "0x200010D")]
public class BuildCost
{
	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public InventoryItem item;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int amount;

	[Token(Token = "0x6000555")]
	[Address(RVA = "0xE79B98", Offset = "0xE79B98", VA = "0xE79B98")]
	public BuildCost()
	{
	}
}
[Token(Token = "0x200010E")]
public class InventoryItem : ScriptableObject
{
	[Token(Token = "0x200010F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15268", Offset = "0xB15268")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x40005E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InventoryCategory cat;

		[Token(Token = "0x40005E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Func<InventoryItem, bool> <>9__0;

		[Token(Token = "0x6000567")]
		[Address(RVA = "0xEED084", Offset = "0xEED084", VA = "0xEED084")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6000568")]
		[Address(RVA = "0xEEDFF0", Offset = "0xEEDFF0", VA = "0xEEDFF0")]
		internal bool <FindAll>b__0(InventoryItem i)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000110")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15278", Offset = "0xB15278")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x40005E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CraftingCategory cat;

		[Token(Token = "0x40005E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Func<InventoryItem, bool> <>9__0;

		[Token(Token = "0x6000569")]
		[Address(RVA = "0xEED4EC", Offset = "0xEED4EC", VA = "0xEED4EC")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x600056A")]
		[Address(RVA = "0xEEE014", Offset = "0xEEE014", VA = "0xEEE014")]
		internal bool <FindAll>b__0(InventoryItem i)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000111")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15288", Offset = "0xB15288")]
	private sealed class <>c__DisplayClass42_0
	{
		[Token(Token = "0x40005E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CraftingCategory cat;

		[Token(Token = "0x40005E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public InventoryCategory inv;

		[Token(Token = "0x40005E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Func<InventoryItem, bool> <>9__0;

		[Token(Token = "0x600056B")]
		[Address(RVA = "0xEED964", Offset = "0xEED964", VA = "0xEED964")]
		public <>c__DisplayClass42_0()
		{
		}

		[Token(Token = "0x600056C")]
		[Address(RVA = "0xEEE038", Offset = "0xEEE038", VA = "0xEEE038")]
		internal bool <FindAll>b__0(InventoryItem i)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<string, InventoryItem> dict;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Sprite icon;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InventoryCategory category;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool inDemo;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public NetworkGrabbable grabbablePrefab;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool showMultipleAsGeneric;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public NetworkGrabbable genericGrabbablePrefab;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool inCreativeAvailable;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool craftable;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool buildsStuff;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	public bool isTool;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public HandToolType toolType;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public InventoryFuelType fuelType;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public bool isStackable;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject buildable_toBuild;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PreviewInfo buildable_preview;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public BuildCost[] craftingCosts;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public CraftingCategory craftingCategory;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int buildAmount;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Consumeable.ConsumeAbleState consumableState;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float cookDuration;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float healAmount;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float hungerReduce;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float thirstReduce;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public Color blendcolor;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioClip dropSound;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AudioClip buildSound;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public bool useMulitpleTimes;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public int maxUseAmount;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public int startAmount;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public List<Sprite> icons;

	[Token(Token = "0x1700003A")]
	public string displayName
	{
		[Token(Token = "0x6000557")]
		[Address(RVA = "0xEEC794", Offset = "0xEEC794", VA = "0xEEC794")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003B")]
	public string displayDesc
	{
		[Token(Token = "0x6000558")]
		[Address(RVA = "0xEEC838", Offset = "0xEEC838", VA = "0xEEC838")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003C")]
	private bool canHeal
	{
		[Token(Token = "0x6000561")]
		[Address(RVA = "0xEEDAC0", Offset = "0xEEDAC0", VA = "0xEEDAC0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0xEEC70C", Offset = "0xEEC70C", VA = "0xEEC70C")]
	public Sprite getIcon(int useAmount)
	{
		return null;
	}

	[Token(Token = "0x6000559")]
	[Address(RVA = "0xEEC8F0", Offset = "0xEEC8F0", VA = "0xEEC8F0")]
	private void AddToInventory()
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0xEEC994", Offset = "0xEEC994", VA = "0xEEC994")]
	public static void ResetDict()
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0xEE8328", Offset = "0xEE8328", VA = "0xEE8328")]
	public static InventoryItem Find(string name)
	{
		return null;
	}

	[Token(Token = "0x600055C")]
	[Address(RVA = "0xEEC9E4", Offset = "0xEEC9E4", VA = "0xEEC9E4")]
	internal static List<InventoryItem> FindAll()
	{
		return null;
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0xEECC24", Offset = "0xEECC24", VA = "0xEECC24")]
	internal static List<InventoryItem> FindAll(InventoryCategory cat)
	{
		return null;
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0xEED08C", Offset = "0xEED08C", VA = "0xEED08C")]
	internal static List<InventoryItem> FindAll(CraftingCategory cat)
	{
		return null;
	}

	[Token(Token = "0x600055F")]
	[Address(RVA = "0xEED4F4", Offset = "0xEED4F4", VA = "0xEED4F4")]
	internal static List<InventoryItem> FindAll(CraftingCategory cat, InventoryCategory inv)
	{
		return null;
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0xEED96C", Offset = "0xEED96C", VA = "0xEED96C")]
	private bool hasKeys()
	{
		return default(bool);
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0xEEDB98", Offset = "0xEEDB98", VA = "0xEEDB98")]
	private bool isSliceable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0xEEDC70", Offset = "0xEEDC70", VA = "0xEEDC70")]
	public void createKeys()
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xEEDF88", Offset = "0xEEDF88", VA = "0xEEDF88")]
	private bool checkBuildable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0xEEDF90", Offset = "0xEEDF90", VA = "0xEEDF90")]
	private bool checkBuildablePreview()
	{
		return default(bool);
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0xEEDF98", Offset = "0xEEDF98", VA = "0xEEDF98")]
	public InventoryItem()
	{
	}
}
[Token(Token = "0x2000112")]
public class InventoryPickup : MonoBehaviourPun, IPunInstantiateMagicCallback, IPunObservable
{
	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InventoryItem item;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool randomItem;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int amount;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int useAmount;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public object[] data;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int randomItemCountMin;

	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int randomItemCountMax;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RandomListInventory randomItems;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip hitSound;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool putToInventoryOnPickup;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool destroyOnPickup;

	[Token(Token = "0x40005F5")]
	public const string c_putToInventoryOnPickup = "putToInventoryOnPickup";

	[Token(Token = "0x40005F6")]
	public const string c_destroyOnPickup = "destroyOnPickup";

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool pickupOnSelect;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5B")]
	public bool autoDespawn;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float despawnTime;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float timeSinceDropped;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool dropped;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	public bool saveOutsideInventory;

	[Token(Token = "0x600056D")]
	[Address(RVA = "0xEEE084", Offset = "0xEEE084", VA = "0xEEE084")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0xEEE1E0", Offset = "0xEEE1E0", VA = "0xEEE1E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0xEEE330", Offset = "0xEEE330", VA = "0xEEE330")]
	private void OnSelectExit(XRBaseInteractor arg0)
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0xEEE340", Offset = "0xEEE340", VA = "0xEEE340")]
	private void OnSelectEnter(XRBaseInteractor arg0)
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0xEEE620", Offset = "0xEEE620", VA = "0xEEE620")]
	private void Update()
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0xEEE6F8", Offset = "0xEEE6F8", VA = "0xEEE6F8")]
	public List<InventoryItem> PickedUp(bool byHook = false)
	{
		return null;
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0xEEE358", Offset = "0xEEE358", VA = "0xEEE358")]
	public List<InventoryItem> PickedUp(XRBaseInteractor arg0, bool byHook = false)
	{
		return null;
	}

	[Token(Token = "0x6000574")]
	public T getDataValue<T>(int index, T defaultValue)
	{
		return (T)null;
	}

	[Token(Token = "0x6000575")]
	[Address(RVA = "0xEEE704", Offset = "0xEEE704", VA = "0xEEE704")]
	public void setDataValue(int index, object value)
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0xEEE70C", Offset = "0xEEE70C", VA = "0xEEE70C", Slot = "4")]
	public void OnPhotonInstantiate(PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0xEEE904", Offset = "0xEEE904", VA = "0xEEE904", Slot = "5")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0xEE762C", Offset = "0xEE762C", VA = "0xEE762C")]
	internal void updateAmount()
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0xEEE948", Offset = "0xEEE948", VA = "0xEEE948")]
	[PunRPC]
	internal void RPC_UpdateAmount()
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0xEEE9F0", Offset = "0xEEE9F0", VA = "0xEEE9F0")]
	public InventoryPickup()
	{
	}
}
[Token(Token = "0x2000113")]
public class InventoryRightToggle : MonoBehaviour
{
	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Inventory inventory;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Image image_public;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Image image_private;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Image image_overlayprivate;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TextMeshProUGUI text_mode;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Color color_public;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Color color_private;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private Image image_rightsbutton;

	[Token(Token = "0x600057B")]
	[Address(RVA = "0xEEEA9C", Offset = "0xEEEA9C", VA = "0xEEEA9C")]
	private void Start()
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0xEEEB24", Offset = "0xEEEB24", VA = "0xEEEB24")]
	private void bindInventory()
	{
	}

	[Token(Token = "0x600057D")]
	[Address(RVA = "0xEEEF48", Offset = "0xEEEF48", VA = "0xEEEF48")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0xEEED00", Offset = "0xEEED00", VA = "0xEEED00")]
	private void Changed()
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0xEEF09C", Offset = "0xEEF09C", VA = "0xEEF09C")]
	public void Change()
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0xEEF134", Offset = "0xEEF134", VA = "0xEEF134")]
	public InventoryRightToggle()
	{
	}
}
[Token(Token = "0x2000114")]
public class InventoryVisual : MonoBehaviour
{
	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InventoryVisualItem[] slots;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Inventory inventory;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float openTime;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool wasOnceDeactivated;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool tutorialDone;

	[Token(Token = "0x6000581")]
	[Address(RVA = "0xEEF13C", Offset = "0xEEF13C", VA = "0xEEF13C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0xEEF3B0", Offset = "0xEEF3B0", VA = "0xEEF3B0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0xEEF458", Offset = "0xEEF458", VA = "0xEEF458")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0xEEF328", Offset = "0xEEF328", VA = "0xEEF328")]
	public void UpdateVisual()
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0xEEF798", Offset = "0xEEF798", VA = "0xEEF798")]
	public InventoryVisual()
	{
	}
}
[Token(Token = "0x2000115")]
public class InventoryVisualItem : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image visual;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text amount;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image toolslotBg;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Image healthSlider;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject healthGo;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public InventoryVisual m_inventory;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int index;

	[Token(Token = "0x1700003D")]
	public InventoryVisual inventory
	{
		[Token(Token = "0x6000586")]
		[Address(RVA = "0xEEB44C", Offset = "0xEEB44C", VA = "0xEEB44C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0xEEF540", Offset = "0xEEF540", VA = "0xEEF540")]
	public void UpdateVisual()
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0xEEF7A0", Offset = "0xEEF7A0", VA = "0xEEF7A0")]
	private bool isAvailable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0xEEBE40", Offset = "0xEEBE40", VA = "0xEEBE40")]
	internal InventoryContent getcontent()
	{
		return null;
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0xEEF8AC", Offset = "0xEEF8AC", VA = "0xEEF8AC")]
	public void HandGrab()
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0xEEF99C", Offset = "0xEEF99C", VA = "0xEEF99C", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0xEEFAD8", Offset = "0xEEFAD8", VA = "0xEEFAD8")]
	public InventoryVisualItem()
	{
	}
}
[Token(Token = "0x2000116")]
public class InventoryVisualItemCreative : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image visual;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text desc;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image toolslotBg;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public InventoryItem item;

	[Token(Token = "0x600058D")]
	[Address(RVA = "0xEEFAE8", Offset = "0xEEFAE8", VA = "0xEEFAE8")]
	public void UpdateVisual()
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0xEEFC78", Offset = "0xEEFC78", VA = "0xEEFC78")]
	public void HandGrab()
	{
	}

	[Token(Token = "0x600058F")]
	[Address(RVA = "0xEEFD48", Offset = "0xEEFD48", VA = "0xEEFD48", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0xEEFF3C", Offset = "0xEEFF3C", VA = "0xEEFF3C")]
	public InventoryVisualItemCreative()
	{
	}
}
[Token(Token = "0x2000117")]
public class IslandMover : MonoBehaviour
{
	[Token(Token = "0x6000591")]
	[Address(RVA = "0xEF1988", Offset = "0xEF1988", VA = "0xEF1988")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0xEF1B00", Offset = "0xEF1B00", VA = "0xEF1B00")]
	public IslandMover()
	{
	}
}
[Token(Token = "0x2000118")]
public class IslandFinder : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x2000119")]
	public enum FindState
	{
		[Token(Token = "0x400061D")]
		searching,
		[Token(Token = "0x400061E")]
		found,
		[Token(Token = "0x400061F")]
		hookedIsland
	}

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float minIslandHookedDistance;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private FindState state;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Crane> cranes;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Crane activeCrane;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private IslandShine activeShine;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private IslandHookPoint spawnedIsland;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<IslandShine> activeIslands;

	[Token(Token = "0x6000593")]
	[Address(RVA = "0xEEFF78", Offset = "0xEEFF78", VA = "0xEEFF78")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0xEEFFE0", Offset = "0xEEFFE0", VA = "0xEEFFE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0xEF0054", Offset = "0xEF0054", VA = "0xEF0054")]
	private void SetToStateSearching()
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0xEF0060", Offset = "0xEF0060", VA = "0xEF0060")]
	private void SetToStateFound()
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0xEF06A0", Offset = "0xEF06A0", VA = "0xEF06A0")]
	private void EditorSetToStateFound(Crane activeCrane, IslandShine activeShine)
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0xEF0858", Offset = "0xEF0858", VA = "0xEF0858")]
	private void SetToStateHookedIsland()
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0xEF0864", Offset = "0xEF0864", VA = "0xEF0864")]
	private void CheckForHook(IslandShine island)
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0xEF0BBC", Offset = "0xEF0BBC", VA = "0xEF0BBC")]
	private Crane FindClosestCrane(IslandShine island)
	{
		return null;
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0xEF0DF0", Offset = "0xEF0DF0", VA = "0xEF0DF0")]
	private void HookingIsland()
	{
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0xEF0EAC", Offset = "0xEF0EAC", VA = "0xEF0EAC")]
	private void UnHookingIsland()
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0xEF10B8", Offset = "0xEF10B8", VA = "0xEF10B8")]
	public FindState GetFinderState()
	{
		return default(FindState);
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0xEF10C0", Offset = "0xEF10C0", VA = "0xEF10C0")]
	public void AddCrane(Crane newCrane)
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0xEF1158", Offset = "0xEF1158", VA = "0xEF1158")]
	public void RemoveCrane(Crane craneToRemove)
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0xEF11C0", Offset = "0xEF11C0", VA = "0xEF11C0", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0xEF12A4", Offset = "0xEF12A4", VA = "0xEF12A4")]
	private void SetToState()
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0xEF14DC", Offset = "0xEF14DC", VA = "0xEF14DC")]
	public void AddIslandToList(IslandShine island)
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0xEF1544", Offset = "0xEF1544", VA = "0xEF1544")]
	public IslandFinder()
	{
	}
}
[Token(Token = "0x200011A")]
public class IslandHookPoint : MonoBehaviour
{
	[Token(Token = "0x60005A4")]
	[Address(RVA = "0xEF1980", Offset = "0xEF1980", VA = "0xEF1980")]
	public IslandHookPoint()
	{
	}
}
[Token(Token = "0x200011B")]
public class IslandShine : MonoBehaviour
{
	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 virtualIslandPositionInWorld;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem islandParticles;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected GameObject islandSymbol;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float minParticleDistance;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	protected IslandFinder finder;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IslandWorldPosition islandPosition;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected Vector3 realPositionInWorld;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	protected float raftDistanceToIsland;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public IslandSpawner spawner;

	[Token(Token = "0x1700003E")]
	public Vector3 RealPos
	{
		[Token(Token = "0x60005A5")]
		[Address(RVA = "0xEF1B08", Offset = "0xEF1B08", VA = "0xEF1B08")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700003F")]
	public float RaftDistanceToIsland
	{
		[Token(Token = "0x60005A6")]
		[Address(RVA = "0xEF1B14", Offset = "0xEF1B14", VA = "0xEF1B14")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0xEF1B1C", Offset = "0xEF1B1C", VA = "0xEF1B1C")]
	public void Init(IslandWorldPosition coordinateSystem, IslandSpawner spawner)
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0xEF1B28", Offset = "0xEF1B28", VA = "0xEF1B28", Slot = "4")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0xEF1BB8", Offset = "0xEF1BB8", VA = "0xEF1BB8")]
	public void InitIslandShine()
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0xEF1BFC", Offset = "0xEF1BFC", VA = "0xEF1BFC", Slot = "5")]
	public virtual void SetPos(Vector3 position)
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0xEF1C08", Offset = "0xEF1C08", VA = "0xEF1C08")]
	public void SyncPos(Vector3 position)
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0xEF1C14", Offset = "0xEF1C14", VA = "0xEF1C14", Slot = "6")]
	public virtual void UpdateParticles()
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0xEF07D8", Offset = "0xEF07D8", VA = "0xEF07D8")]
	public void StopVisual()
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0xEF1DDC", Offset = "0xEF1DDC", VA = "0xEF1DDC")]
	public void UpdateParticlePosition()
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0xEF1E68", Offset = "0xEF1E68", VA = "0xEF1E68")]
	public IslandShine()
	{
	}
}
[Token(Token = "0x200011C")]
public class IslandShineTiny : IslandShine
{
	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private float maxShineDistance;

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0xEF1E70", Offset = "0xEF1E70", VA = "0xEF1E70")]
	private void Update()
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0xEF20A0", Offset = "0xEF20A0", VA = "0xEF20A0", Slot = "4")]
	public override void Start()
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0xEF1EEC", Offset = "0xEF1EEC", VA = "0xEF1EEC")]
	private void UpdateShinePosition()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0xEF2184", Offset = "0xEF2184", VA = "0xEF2184", Slot = "5")]
	public override void SetPos(Vector3 position)
	{
	}

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0xEF21EC", Offset = "0xEF21EC", VA = "0xEF21EC", Slot = "6")]
	public override void UpdateParticles()
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0xEF236C", Offset = "0xEF236C", VA = "0xEF236C")]
	public IslandShineTiny()
	{
	}
}
[Token(Token = "0x200011D")]
public class IslandWorldPosition : MonoBehaviourPun, IPunObservable
{
	[Serializable]
	[Token(Token = "0x200011E")]
	public class IslandPositionData
	{
		[Token(Token = "0x4000635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 currentRaftPositionInWorld;

		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 currentIslandPositionInWorld;

		[Token(Token = "0x4000637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int currentIslandID;

		[Token(Token = "0x60005CE")]
		[Address(RVA = "0xEF41D4", Offset = "0xEF41D4", VA = "0xEF41D4")]
		public IslandPositionData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200011F")]
	public class IslandUnlockData
	{
		[Token(Token = "0x4000638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sync_isUnlocked;

		[Token(Token = "0x60005CF")]
		[Address(RVA = "0xEF40A8", Offset = "0xEF40A8", VA = "0xEF40A8")]
		public IslandUnlockData()
		{
		}
	}

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxDistance;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minDistance;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Vector3 maxRaftSwimDistance;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected PlayerRaft playerRaft;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent onCreatedNewIsland;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent onFoundCurrentIsland;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public IslandShine currentIsland;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public IslandSpawner spawner;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected bool mapCurrentlyActive;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private IslandPositionData data;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	protected IslandUnlockData unlockData;

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0xEF3FD4", Offset = "0xEF3FD4", VA = "0xEF3FD4")]
	public IslandPositionData GetData()
	{
		return null;
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0xEF3FDC", Offset = "0xEF3FDC", VA = "0xEF3FDC")]
	public IslandUnlockData GetUnlockData()
	{
		return null;
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0xEF3FE4", Offset = "0xEF3FE4", VA = "0xEF3FE4")]
	public bool IsUnlocked()
	{
		return default(bool);
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0xEF4008", Offset = "0xEF4008", VA = "0xEF4008")]
	public void SetUnlockData(IslandUnlockData data)
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0xEF40B0", Offset = "0xEF40B0", VA = "0xEF40B0")]
	public void UnlockIslandMaster()
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0xEF40D8", Offset = "0xEF40D8", VA = "0xEF40D8", Slot = "5")]
	protected virtual void UnlockIsland()
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0xEF40DC", Offset = "0xEF40DC", VA = "0xEF40DC")]
	public void SetData(IslandPositionData islandData)
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0xEF41E4", Offset = "0xEF41E4", VA = "0xEF41E4")]
	private void Start()
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0xEF42B0", Offset = "0xEF42B0", VA = "0xEF42B0")]
	public Quaternion GetDrivingDirection()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0xEF4338", Offset = "0xEF4338", VA = "0xEF4338", Slot = "6")]
	public virtual Vector3 GetCurrentRaftPositionInWorld()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0xEF4358", Offset = "0xEF4358", VA = "0xEF4358")]
	public Vector3 GetCurrentIslandPositionInWorld()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0xEF4378", Offset = "0xEF4378", VA = "0xEF4378", Slot = "7")]
	protected virtual void UpdateRaftPosition()
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0xEF4494", Offset = "0xEF4494", VA = "0xEF4494")]
	private Vector3 ClampMaxDistanceToIsland(Vector3 distance)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0xEF4548", Offset = "0xEF4548", VA = "0xEF4548")]
	private void Update()
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0xEF45D4", Offset = "0xEF45D4", VA = "0xEF45D4", Slot = "8")]
	public virtual Vector3 GetIslandPositionInWorld(Vector3 currentPositionInWorld)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0xEF4680", Offset = "0xEF4680", VA = "0xEF4680", Slot = "9")]
	public virtual void HasFoundIsland()
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0xEF469C", Offset = "0xEF469C", VA = "0xEF469C", Slot = "10")]
	public virtual void CreateNewIsland(IslandShine lastIsland)
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0xEF4880", Offset = "0xEF4880", VA = "0xEF4880", Slot = "11")]
	public virtual void SetNewPosition(IslandShine island)
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0xEF4884", Offset = "0xEF4884", VA = "0xEF4884")]
	public int GetCurrentIslandId()
	{
		return default(int);
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0xEF48A0", Offset = "0xEF48A0", VA = "0xEF48A0")]
	public bool HasIsland()
	{
		return default(bool);
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0xEF48A8", Offset = "0xEF48A8", VA = "0xEF48A8")]
	public IslandGenerator GetCurrentIslandGenerator()
	{
		return null;
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0xEF48C4", Offset = "0xEF48C4", VA = "0xEF48C4")]
	public TreasureChest GetCurrentTreasureChest()
	{
		return null;
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0xEF4954", Offset = "0xEF4954", VA = "0xEF4954", Slot = "12")]
	public virtual void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0xEF4C00", Offset = "0xEF4C00", VA = "0xEF4C00")]
	public IslandWorldPosition()
	{
	}
}
[Token(Token = "0x2000120")]
public class Map : MonoBehaviourPun, IPunInstantiateMagicCallback
{
	[Token(Token = "0x2000121")]
	public enum MapState
	{
		[Token(Token = "0x400064D")]
		active,
		[Token(Token = "0x400064E")]
		treasure,
		[Token(Token = "0x400064F")]
		finished
	}

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MapViewer treasureMap;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MapState currentState;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform directionArrow;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform raft;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform cross;

	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SpriteRenderer tick;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshPro text_pos;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float speed;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float visualizedWorldSizeX;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float visualizedWorldSizeY;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB18518", Offset = "0xB18518")]
	public float paddingNormalizedX;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB18530", Offset = "0xB18530")]
	public float paddingNormalizedY;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Collider mapBounds;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float mapDimentionX;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float mapDimentionY;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private IslandWorldPosition positionManager;

	[Token(Token = "0x4000649")]
	private const int C_MAP_ID = 0;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[SerializeField]
	private InventoryPickup pickup;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool isSet;

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0xE943C8", Offset = "0xE943C8", VA = "0xE943C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0xE9442C", Offset = "0xE9442C", VA = "0xE9442C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0xE947D4", Offset = "0xE947D4", VA = "0xE947D4")]
	private void EditorCheckMap()
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0xE94684", Offset = "0xE94684", VA = "0xE94684")]
	private void ReCheckMap()
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0xE94930", Offset = "0xE94930", VA = "0xE94930")]
	private int CheckMapId()
	{
		return default(int);
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0xE94A68", Offset = "0xE94A68", VA = "0xE94A68")]
	[PunRPC]
	private void RPC_ToggleCurrent(int currentMapState, int mapID)
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0xE947D0", Offset = "0xE947D0", VA = "0xE947D0")]
	private void Init()
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0xE94CE0", Offset = "0xE94CE0", VA = "0xE94CE0")]
	public void SetFirstPosition()
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0xE94DEC", Offset = "0xE94DEC", VA = "0xE94DEC")]
	public void Update()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0xE94E1C", Offset = "0xE94E1C", VA = "0xE94E1C")]
	private void SetArrowRotation()
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0xE94F2C", Offset = "0xE94F2C", VA = "0xE94F2C")]
	public void VisualizeRaftPosition()
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0xE94DA8", Offset = "0xE94DA8", VA = "0xE94DA8")]
	private Vector3 calculateInMapSpace(Vector3 normalizedPos)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0xE94D44", Offset = "0xE94D44", VA = "0xE94D44")]
	private Vector3 normalizeWorldPos(Vector3 worldSpaceCoordinates)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0xE95060", Offset = "0xE95060", VA = "0xE95060")]
	private Vector3 clampPosition(Vector3 normalizedCoordinates)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0xE9512C", Offset = "0xE9512C", VA = "0xE9512C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0xE94B38", Offset = "0xE94B38", VA = "0xE94B38")]
	private void SetToStateFinished()
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0xE94C24", Offset = "0xE94C24", VA = "0xE94C24")]
	private void SetToStateTreasure()
	{
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0xE94BB4", Offset = "0xE94BB4", VA = "0xE94BB4")]
	private void SetToStateActive()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0xE956E8", Offset = "0xE956E8", VA = "0xE956E8", Slot = "4")]
	public void OnPhotonInstantiate(PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0xE9584C", Offset = "0xE9584C", VA = "0xE9584C")]
	[PunRPC]
	private void RPC_RequestState_Map(PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0xE959B0", Offset = "0xE959B0", VA = "0xE959B0")]
	[PunRPC]
	private void RPC_RequestState_MapAll(PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0xE959B4", Offset = "0xE959B4", VA = "0xE959B4")]
	public Map()
	{
	}
}
[Token(Token = "0x2000122")]
public class PreviewIsland : MonoBehaviour
{
	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject islandMesh;

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0xE3C9D0", Offset = "0xE3C9D0", VA = "0xE3C9D0")]
	private void Start()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0xE3C9F4", Offset = "0xE3C9F4", VA = "0xE3C9F4")]
	public void ShowIsland(int angle)
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0xE3C9D4", Offset = "0xE3C9D4", VA = "0xE3C9D4")]
	public void HideIsland()
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0xE3CAAC", Offset = "0xE3CAAC", VA = "0xE3CAAC")]
	public PreviewIsland()
	{
	}
}
[Token(Token = "0x2000123")]
public class RandomPreviewIslands : MonoBehaviour
{
	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<PreviewIsland> islands;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float minTimeToNextIsland;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxTimeToNextIsland;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float minShowIslandTime;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxShowIslandTime;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float showIslandTime;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float timeToNextIsland;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PreviewIsland currentIsland;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isShowingIsland;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float timer;

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0xE3EBE0", Offset = "0xE3EBE0", VA = "0xE3EBE0")]
	private void Start()
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0xE3EC5C", Offset = "0xE3EC5C", VA = "0xE3EC5C")]
	private void SetNewTimes()
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0xE3ECA0", Offset = "0xE3ECA0", VA = "0xE3ECA0")]
	private void Update()
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0xE3EDA8", Offset = "0xE3EDA8", VA = "0xE3EDA8")]
	private void ShowNextIsland()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0xE3ED90", Offset = "0xE3ED90", VA = "0xE3ED90")]
	private void HideIsland()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0xE3EE88", Offset = "0xE3EE88", VA = "0xE3EE88")]
	public RandomPreviewIslands()
	{
	}
}
[Token(Token = "0x2000124")]
public class TinyIslandsWorldPosition : IslandWorldPosition
{
	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private float newSpawnDistance;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	private int saveAmount;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private int maxIslandAmount;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<IslandShine> activeIslands;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject islandPrefab;

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0xE4AF38", Offset = "0xE4AF38", VA = "0xE4AF38", Slot = "5")]
	[PunRPC]
	protected override void UnlockIsland()
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0xE4AF3C", Offset = "0xE4AF3C", VA = "0xE4AF3C")]
	public void InitiateIslands()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0xE4B420", Offset = "0xE4B420", VA = "0xE4B420", Slot = "7")]
	protected override void UpdateRaftPosition()
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0xE4B424", Offset = "0xE4B424", VA = "0xE4B424", Slot = "10")]
	public override void CreateNewIsland(IslandShine lastIsland)
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0xE4B6A0", Offset = "0xE4B6A0", VA = "0xE4B6A0", Slot = "11")]
	public override void SetNewPosition(IslandShine island)
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0xE4B18C", Offset = "0xE4B18C", VA = "0xE4B18C")]
	private void SetNewPositionInRaftDirection(IslandShine island)
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0xE4B78C", Offset = "0xE4B78C", VA = "0xE4B78C", Slot = "12")]
	public override void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0xE4B8A4", Offset = "0xE4B8A4", VA = "0xE4B8A4")]
	public TinyIslandsWorldPosition()
	{
	}
}
[Token(Token = "0x2000125")]
public class compass : MonoBehaviour
{
	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform needle;

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0xE23414", Offset = "0xE23414", VA = "0xE23414")]
	private void Update()
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0xE234D8", Offset = "0xE234D8", VA = "0xE234D8")]
	public compass()
	{
	}
}
[Token(Token = "0x2000126")]
public class ItemPickupVisualizer : MonoBehaviour
{
	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<ItemPickupVisualizerItem> items;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Queue<ItemPickupVisualizerItem> pool;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Queue<Sprite> queue;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float minwait;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float spawnCooldown;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Sprite tmpSprite;

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0xEF524C", Offset = "0xEF524C", VA = "0xEF524C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0xEF5390", Offset = "0xEF5390", VA = "0xEF5390")]
	public void add(Sprite s)
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0xEF53F8", Offset = "0xEF53F8", VA = "0xEF53F8")]
	private void Update()
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0xEF5650", Offset = "0xEF5650", VA = "0xEF5650")]
	private void AddEditor()
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0xEF56AC", Offset = "0xEF56AC", VA = "0xEF56AC")]
	public ItemPickupVisualizer()
	{
	}
}
[Token(Token = "0x2000127")]
public class ItemPickupVisualizerItem : MonoBehaviour
{
	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform origParent;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 origSIze;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 origSIzeWorld;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image img;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float progress;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool initialized;

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0xEF5778", Offset = "0xEF5778", VA = "0xEF5778")]
	private void Init()
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0xEF54E8", Offset = "0xEF54E8", VA = "0xEF54E8")]
	public void Spawn(Sprite icon)
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0xEF57F8", Offset = "0xEF57F8", VA = "0xEF57F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0xEF5A40", Offset = "0xEF5A40", VA = "0xEF5A40")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0xEF5A74", Offset = "0xEF5A74", VA = "0xEF5A74")]
	public ItemPickupVisualizerItem()
	{
	}
}
[Token(Token = "0x2000128")]
public static class JsonHelper
{
	[Serializable]
	[Token(Token = "0x2000129")]
	private class Wrapper<T>
	{
		[Token(Token = "0x400066D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T[] Items;

		[Token(Token = "0x6000607")]
		public Wrapper()
		{
		}
	}

	[Token(Token = "0x6000604")]
	public static T[] FromJson<T>(string json)
	{
		return null;
	}

	[Token(Token = "0x6000605")]
	public static string ToJson<T>(T[] array)
	{
		return null;
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0xEF5A7C", Offset = "0xEF5A7C", VA = "0xEF5A7C")]
	public static string ArrayToObject(string arrayString)
	{
		return null;
	}
}
[Token(Token = "0x200012A")]
public class Knife : MonoBehaviourPun
{
	[Serializable]
	[Token(Token = "0x200012B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15298", Offset = "0xB15298")]
	private sealed class <>c
	{
		[Token(Token = "0x4000674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<float, float> <>9__8_0;

		[Token(Token = "0x600060D")]
		[Address(RVA = "0xEF8440", Offset = "0xEF8440", VA = "0xEF8440")]
		public <>c()
		{
		}

		[Token(Token = "0x600060E")]
		[Address(RVA = "0xEF8448", Offset = "0xEF8448", VA = "0xEF8448")]
		internal float <hasEnoughSpeed>b__8_0(float i)
		{
			return default(float);
		}
	}

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NetworkGrabbable networkGrabbable;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody rb;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<float> magnitudes;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform knifeHitPoint;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float minSpeed;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float lastAverage;

	[Token(Token = "0x6000608")]
	[Address(RVA = "0xEF80FC", Offset = "0xEF80FC", VA = "0xEF80FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0xEF816C", Offset = "0xEF816C", VA = "0xEF816C")]
	private void Update()
	{
	}

	[Token(Token = "0x600060A")]
	[Address(RVA = "0xEF823C", Offset = "0xEF823C", VA = "0xEF823C")]
	public bool hasEnoughSpeed()
	{
		return default(bool);
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0xEF8364", Offset = "0xEF8364", VA = "0xEF8364")]
	public Knife()
	{
	}
}
[Token(Token = "0x200012C")]
public class KnifeSliceAble : MonoBehaviourPun
{
	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int sliceTimes;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int sliced;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float sliceTimeout;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float sliceTimeoutCurrent;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float nextSlice;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float timeBetweenSlices;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip sliceClip;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClipSettings sliceClipSettings;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip sliceDoneClip;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Deform deform;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Consumeable consumeable;

	[Token(Token = "0x600060F")]
	[Address(RVA = "0xEF844C", Offset = "0xEF844C", VA = "0xEF844C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0xEF84A4", Offset = "0xEF84A4", VA = "0xEF84A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0xEF8514", Offset = "0xEF8514", VA = "0xEF8514")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0xEF8888", Offset = "0xEF8888", VA = "0xEF8888")]
	[PunRPC]
	private void RPC_Bounce(Vector3 pos)
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0xEF8938", Offset = "0xEF8938", VA = "0xEF8938")]
	public KnifeSliceAble()
	{
	}
}
[Token(Token = "0x200012D")]
public class Lightningrod : MonoBehaviour
{
	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject tip;

	[Token(Token = "0x6000614")]
	[Address(RVA = "0xE8B4A4", Offset = "0xE8B4A4", VA = "0xE8B4A4")]
	public Lightningrod()
	{
	}
}
[Token(Token = "0x200012E")]
[ExecuteInEditMode]
public class LinePosition : MonoBehaviour
{
	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform[] points;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LineRenderer lineRend;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool keepUpdating;

	[Token(Token = "0x6000615")]
	[Address(RVA = "0xE8B4AC", Offset = "0xE8B4AC", VA = "0xE8B4AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0xE8B4B0", Offset = "0xE8B4B0", VA = "0xE8B4B0")]
	private void UpdatePoints()
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0xE8B584", Offset = "0xE8B584", VA = "0xE8B584")]
	public LinePosition()
	{
	}
}
[Token(Token = "0x200012F")]
[ExecuteInEditMode]
public class LineRendPos : MonoBehaviour
{
	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform start;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform end;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LineRenderer lineRend;

	[Token(Token = "0x6000618")]
	[Address(RVA = "0xE8B594", Offset = "0xE8B594", VA = "0xE8B594")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0xE8B5EC", Offset = "0xE8B5EC", VA = "0xE8B5EC")]
	private void Update()
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0xE8B624", Offset = "0xE8B624", VA = "0xE8B624")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0xE8B6E4", Offset = "0xE8B6E4", VA = "0xE8B6E4")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB1A760", Offset = "0xB1A760")]
	private void UpdateLineRenderer()
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0xE8B740", Offset = "0xE8B740", VA = "0xE8B740")]
	public LineRendPos()
	{
	}
}
[Token(Token = "0x2000130")]
public class LiquidSloshEffect : MonoBehaviour
{
	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject object_Liquid;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject object_LiquidMesh;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform cup;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int sloshSpeed;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int rotateSpeed;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int difference;

	[Token(Token = "0x600061D")]
	[Address(RVA = "0xE8BC48", Offset = "0xE8BC48", VA = "0xE8BC48")]
	private void Update()
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0xE8BD30", Offset = "0xE8BD30", VA = "0xE8BD30")]
	private void Slosh()
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0xE8BEE4", Offset = "0xE8BEE4", VA = "0xE8BEE4")]
	private float ClampRotationValue(float value, float difference)
	{
		return default(float);
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0xE8BF94", Offset = "0xE8BF94", VA = "0xE8BF94")]
	public LiquidSloshEffect()
	{
	}
}
[Token(Token = "0x2000131")]
public class LocalPlayerEnabler : MonoBehaviour
{
	[Token(Token = "0x6000621")]
	[Address(RVA = "0xE8BFB0", Offset = "0xE8BFB0", VA = "0xE8BFB0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0xE8C078", Offset = "0xE8C078", VA = "0xE8C078")]
	public LocalPlayerEnabler()
	{
	}
}
[Token(Token = "0x2000132")]
public class LocalPlayerHelper : MonoBehaviour, IInRoomCallbacks
{
	[Token(Token = "0x2000133")]
	public enum InventoryModifierButton
	{
		[Token(Token = "0x40006A6")]
		None,
		[Token(Token = "0x40006A7")]
		Up,
		[Token(Token = "0x40006A8")]
		Down,
		[Token(Token = "0x40006A9")]
		Trigger
	}

	[Serializable]
	[Token(Token = "0x2000134")]
	public class ControllerData
	{
		[Token(Token = "0x40006AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public XRRayInteractor grabber;

		[Token(Token = "0x40006AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public XRInteractorLineVisual visualUiPointer;

		[Token(Token = "0x40006AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public XRDirectInteractor directGrabber;

		[Token(Token = "0x40006AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public DistanceGrabSelection distanceGrabber;

		[Token(Token = "0x40006AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public XRController controller;

		[Token(Token = "0x40006AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public XRController directController;

		[Token(Token = "0x40006B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool visible;

		[Token(Token = "0x6000647")]
		[Address(RVA = "0xE8C270", Offset = "0xE8C270", VA = "0xE8C270")]
		public void init()
		{
		}

		[Token(Token = "0x6000648")]
		[Address(RVA = "0xE8E7E8", Offset = "0xE8E7E8", VA = "0xE8E7E8")]
		public ControllerData()
		{
		}
	}

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LocalPlayerHelper instance;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControllerData left;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ControllerData right;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private TweenerCore<float, float, FloatOptions> tweener;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public InventoryVisual localPlayerInventory;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve deathBwCurve;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<MonoBehaviour> toggleWithAlive;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<GameObject> deactivateWhenDead;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private XRController[] allControllers;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private PlayerObject localPlayer;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject[] adminMenu;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject createiveMenu;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject deadUi;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float deadTime;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float autoressurectAfter;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private DeviceBasedContinuousMoveProvider moveProvider;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private DeviceBasedContinuousTurnProvider smoothTurnProvider;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private SnapTurnProviderAdvanced snapTurnProvider;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private CharacterController cc;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public PlacementLaser leftPlacer;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public PlacementLaser rightPlacer;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private XRRig xrRig;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float lastWave;

	[Token(Token = "0x17000040")]
	public static LocalPlayerHelper Instance
	{
		[Token(Token = "0x6000623")]
		[Address(RVA = "0xE8C080", Offset = "0xE8C080", VA = "0xE8C080")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000041")]
	public bool IsPointingAtUI
	{
		[Token(Token = "0x6000645")]
		[Address(RVA = "0xE8C9C4", Offset = "0xE8C9C4", VA = "0xE8C9C4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0xE8C14C", Offset = "0xE8C14C", VA = "0xE8C14C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0xE8C344", Offset = "0xE8C344", VA = "0xE8C344")]
	private void Start()
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0xE8C578", Offset = "0xE8C578", VA = "0xE8C578")]
	private void ConfigurationChagned()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0xE8C758", Offset = "0xE8C758", VA = "0xE8C758")]
	private List<XRController> createArray(bool leftEnabled, bool rightEnabled)
	{
		return null;
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0xE8C4F4", Offset = "0xE8C4F4", VA = "0xE8C4F4")]
	public void adminChanged()
	{
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0xE8C824", Offset = "0xE8C824", VA = "0xE8C824")]
	public void toggleCreativeMenu()
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0xE8C864", Offset = "0xE8C864", VA = "0xE8C864")]
	internal bool canMove()
	{
		return default(bool);
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0xE8CA24", Offset = "0xE8CA24", VA = "0xE8CA24")]
	private void Update()
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0xE8D038", Offset = "0xE8D038", VA = "0xE8D038")]
	private void updateVisuals(PlayerObject player)
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0xE8CB74", Offset = "0xE8CB74", VA = "0xE8CB74")]
	private void updateControllerStuff(PlayerObject player)
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0xE8D0F0", Offset = "0xE8D0F0", VA = "0xE8D0F0")]
	public void setAlive(bool b)
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0xE8D2FC", Offset = "0xE8D2FC", VA = "0xE8D2FC")]
	public void ResetHandInteraction(bool isLeft)
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0xE8D260", Offset = "0xE8D260", VA = "0xE8D260")]
	private void stopInteracting(XRBaseControllerInteractor interactor)
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0xE8D358", Offset = "0xE8D358", VA = "0xE8D358")]
	internal void init()
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0xE8D4A4", Offset = "0xE8D4A4", VA = "0xE8D4A4")]
	private void Resurected()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0xE8D510", Offset = "0xE8D510", VA = "0xE8D510")]
	private void Death()
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0xE8D03C", Offset = "0xE8D03C", VA = "0xE8D03C")]
	private void updateGrabber(XRBaseControllerInteractor grabber, bool active)
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0xE8D57C", Offset = "0xE8D57C", VA = "0xE8D57C")]
	public void BackToMenu()
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0xE8D658", Offset = "0xE8D658", VA = "0xE8D658")]
	public void QuitApp()
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0xE8D6D8", Offset = "0xE8D6D8", VA = "0xE8D6D8")]
	public void MenuOpen(bool v)
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0xE8D6DC", Offset = "0xE8D6DC", VA = "0xE8D6DC")]
	public void MakeHandsFree()
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0xE8D78C", Offset = "0xE8D78C", VA = "0xE8D78C")]
	public void SpawnCamera()
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0xE8D8B8", Offset = "0xE8D8B8", VA = "0xE8D8B8")]
	internal bool sendButton(InventoryModifierButton btn, bool isLeft)
	{
		return default(bool);
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0xE8E2F4", Offset = "0xE8E2F4", VA = "0xE8E2F4")]
	private InventoryPickup getPickup(ControllerData data)
	{
		return null;
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0xE8C340", Offset = "0xE8C340", VA = "0xE8C340")]
	internal void fade(bool fadeout)
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0xE8E46C", Offset = "0xE8E46C", VA = "0xE8E46C")]
	public void WaveTriggered()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0xE8E494", Offset = "0xE8E494", VA = "0xE8E494")]
	public bool HasWaved()
	{
		return default(bool);
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0xE8E51C", Offset = "0xE8E51C", VA = "0xE8E51C")]
	internal bool isFacing(Transform target, float tollerance)
	{
		return default(bool);
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0xE8E6AC", Offset = "0xE8E6AC", VA = "0xE8E6AC", Slot = "4")]
	public void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0xE8E6B0", Offset = "0xE8E6B0", VA = "0xE8E6B0", Slot = "5")]
	public void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0xE8E6B4", Offset = "0xE8E6B4", VA = "0xE8E6B4", Slot = "6")]
	public void OnRoomPropertiesUpdate(ExitGames.Client.Photon.Hashtable propertiesThatChanged)
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0xE8E6B8", Offset = "0xE8E6B8", VA = "0xE8E6B8", Slot = "7")]
	public void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0xE8E7D4", Offset = "0xE8E7D4", VA = "0xE8E7D4", Slot = "8")]
	public void OnMasterClientSwitched(Player newMasterClient)
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0xE8E7D8", Offset = "0xE8E7D8", VA = "0xE8E7D8")]
	public LocalPlayerHelper()
	{
	}
}
[Token(Token = "0x2000135")]
public class LocomotionSettings : MonoBehaviour
{
	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image dominantLeft;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image dominantRight;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text currentMovementType;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LocomotionSettingsPreview defaultOculus;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public LocomotionSettingsPreview vive;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionSettingsPreview knuckles;

	[Token(Token = "0x6000649")]
	[Address(RVA = "0xE8E8A4", Offset = "0xE8E8A4", VA = "0xE8E8A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0xE8EBE4", Offset = "0xE8EBE4", VA = "0xE8EBE4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0xE8E968", Offset = "0xE8E968", VA = "0xE8E968")]
	private void Changed()
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0xE8ED00", Offset = "0xE8ED00", VA = "0xE8ED00")]
	public void SetDominant(bool left)
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0xE8ED34", Offset = "0xE8ED34", VA = "0xE8ED34")]
	public void ToggleConf(bool forward)
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0xE8ED68", Offset = "0xE8ED68", VA = "0xE8ED68")]
	public LocomotionSettings()
	{
	}
}
[Token(Token = "0x2000136")]
public class LocomotionSettingsPreview : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000137")]
	public class ImageAndText
	{
		[Token(Token = "0x40006C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Image image;

		[Token(Token = "0x40006C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TMP_Text text;

		[Token(Token = "0x17000042")]
		public bool isPresent
		{
			[Token(Token = "0x6000654")]
			[Address(RVA = "0xE8F19C", Offset = "0xE8F19C", VA = "0xE8F19C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000652")]
		[Address(RVA = "0xE8F374", Offset = "0xE8F374", VA = "0xE8F374")]
		public void clear()
		{
		}

		[Token(Token = "0x6000653")]
		[Address(RVA = "0xE8F07C", Offset = "0xE8F07C", VA = "0xE8F07C")]
		public void init(string str)
		{
		}

		[Token(Token = "0x6000655")]
		[Address(RVA = "0xE8F524", Offset = "0xE8F524", VA = "0xE8F524")]
		public ImageAndText()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000138")]
	public class ControllerPreview
	{
		[Token(Token = "0x40006C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ImageAndText primaryButton;

		[Token(Token = "0x40006C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ImageAndText secondaryButton;

		[Token(Token = "0x40006C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ImageAndText grip;

		[Token(Token = "0x40006C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ImageAndText trigger;

		[Token(Token = "0x40006C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ImageAndText stickCenter;

		[Token(Token = "0x40006C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ImageAndText stickUp;

		[Token(Token = "0x40006C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ImageAndText stickDown;

		[Token(Token = "0x40006C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ImageAndText stickLeft;

		[Token(Token = "0x40006CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ImageAndText stickRight;

		[Token(Token = "0x6000656")]
		[Address(RVA = "0xE8EFF4", Offset = "0xE8EFF4", VA = "0xE8EFF4")]
		public void clearAll()
		{
		}

		[Token(Token = "0x6000657")]
		[Address(RVA = "0xE8F474", Offset = "0xE8F474", VA = "0xE8F474")]
		public bool isAxis(ImageAndText btn)
		{
			return default(bool);
		}

		[Token(Token = "0x6000658")]
		[Address(RVA = "0xE8F20C", Offset = "0xE8F20C", VA = "0xE8F20C")]
		internal void Init(InputHelpers.Button button, string i2Key)
		{
		}

		[Token(Token = "0x6000659")]
		[Address(RVA = "0xE8F4B0", Offset = "0xE8F4B0", VA = "0xE8F4B0")]
		private ImageAndText getTarget(InputHelpers.Button button)
		{
			return null;
		}

		[Token(Token = "0x600065A")]
		[Address(RVA = "0xE8F51C", Offset = "0xE8F51C", VA = "0xE8F51C")]
		public ControllerPreview()
		{
		}
	}

	[Token(Token = "0x40006B7")]
	public const string C_I2_MOVE = "controller/Move";

	[Token(Token = "0x40006B8")]
	public const string C_I2_TURN = "controller/Turn";

	[Token(Token = "0x40006B9")]
	public const string C_I2_TELEPORT = "controller/Teleport";

	[Token(Token = "0x40006BA")]
	public const string C_I2_MENU = "controller/Menu";

	[Token(Token = "0x40006BB")]
	public const string C_I2_GRIP = "controller/Grip";

	[Token(Token = "0x40006BC")]
	public const string C_I2_USE = "controller/Use";

	[Token(Token = "0x40006BD")]
	public const string C_I2_TOOL_SELECT = "controller/ToolSelect";

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ControllerPreview left;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ControllerPreview right;

	[Token(Token = "0x600064F")]
	[Address(RVA = "0xE8ECA4", Offset = "0xE8ECA4", VA = "0xE8ECA4")]
	internal void applyConfig(ControllerConfigurationData controllerConfigurationData)
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0xE8ED70", Offset = "0xE8ED70", VA = "0xE8ED70")]
	private void applyConfig(ControllerConfigurationData.HandSetting setting, ControllerPreview hand, ControllerConfigurationData controllerConfigurationData)
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0xE8F36C", Offset = "0xE8F36C", VA = "0xE8F36C")]
	public LocomotionSettingsPreview()
	{
	}
}
[Token(Token = "0x2000139")]
public class LookAtPlayer : MonoBehaviour
{
	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform target;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool onlyY;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 oldRot;

	[Token(Token = "0x600065B")]
	[Address(RVA = "0xE91DC8", Offset = "0xE91DC8", VA = "0xE91DC8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0xE91E24", Offset = "0xE91E24", VA = "0xE91E24")]
	private void Update()
	{
	}

	[Token(Token = "0x600065D")]
	[Address(RVA = "0xE91FF0", Offset = "0xE91FF0", VA = "0xE91FF0")]
	public LookAtPlayer()
	{
	}
}
[Token(Token = "0x200013A")]
public class LootSpawner : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200013B")]
	public class LootSpawnerSaveData
	{
		[Token(Token = "0x40006DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int unlockCount;

		[Token(Token = "0x6000668")]
		[Address(RVA = "0xE92BF0", Offset = "0xE92BF0", VA = "0xE92BF0")]
		public LootSpawnerSaveData()
		{
		}
	}

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool spawn;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RandomList loot;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RandomList unlockableLoot;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int timeBetweenSpawn;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float timer;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float distance;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float despawnFactor;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform spawnParent;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float max;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float min;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float addedX;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float addedZ;

	[Token(Token = "0x600065E")]
	[Address(RVA = "0xE91FF8", Offset = "0xE91FF8", VA = "0xE91FF8")]
	private void Start()
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0xE920CC", Offset = "0xE920CC", VA = "0xE920CC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0xE92194", Offset = "0xE92194", VA = "0xE92194")]
	private void Update()
	{
	}

	[Token(Token = "0x6000661")]
	[Address(RVA = "0xE92210", Offset = "0xE92210", VA = "0xE92210")]
	private void MasterUpdate()
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0xE92790", Offset = "0xE92790", VA = "0xE92790")]
	private void RecalculateAddedDistance()
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0xE92828", Offset = "0xE92828", VA = "0xE92828")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0xE92978", Offset = "0xE92978", VA = "0xE92978")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000665")]
	[Address(RVA = "0xE92A00", Offset = "0xE92A00", VA = "0xE92A00")]
	public void ActivateLoot(int count)
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0xE92A38", Offset = "0xE92A38", VA = "0xE92A38")]
	private void AddLootToActiveList(int number)
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0xE92B44", Offset = "0xE92B44", VA = "0xE92B44")]
	public LootSpawner()
	{
	}
}
[Token(Token = "0x200013C")]
public class MenuLighting : MonoBehaviour
{
	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light light_android;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color lightColor_android;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float lightRange_android;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float lightIntensity_android;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Light light;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Color lightColor;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float lightRange;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float lightIntensity;

	[Token(Token = "0x6000669")]
	[Address(RVA = "0xE97788", Offset = "0xE97788", VA = "0xE97788")]
	private void Start()
	{
	}

	[Token(Token = "0x600066A")]
	[Address(RVA = "0xE97824", Offset = "0xE97824", VA = "0xE97824")]
	public MenuLighting()
	{
	}
}
[Token(Token = "0x200013D")]
public class MenuManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200013E")]
	public class MenuPage
	{
		[Token(Token = "0x40006EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject panel;

		[Token(Token = "0x40006EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject backPanel;

		[Token(Token = "0x40006EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject offlineBackPanel;

		[Token(Token = "0x40006ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent onEnter;

		[Token(Token = "0x6000670")]
		[Address(RVA = "0xE97BDC", Offset = "0xE97BDC", VA = "0xE97BDC")]
		public MenuPage()
		{
		}
	}

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NetworkLauncher launcher;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MenuPage[] menus;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject startMenu;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject mainMenu;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PopUpPanel popUp;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Button backButton;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MenuPage currentMenu;

	[Token(Token = "0x600066B")]
	[Address(RVA = "0xE9782C", Offset = "0xE9782C", VA = "0xE9782C")]
	private void OnBackButtonClick()
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0xE979E8", Offset = "0xE979E8", VA = "0xE979E8")]
	private void Start()
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0xE978E0", Offset = "0xE978E0", VA = "0xE978E0")]
	public void showMenu(GameObject go)
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0xE97AF4", Offset = "0xE97AF4", VA = "0xE97AF4")]
	private MenuPage getMenu(GameObject go)
	{
		return null;
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0xE97BD4", Offset = "0xE97BD4", VA = "0xE97BD4")]
	public MenuManager()
	{
	}
}
[Token(Token = "0x200013F")]
public class MenuToggler : MonoBehaviour
{
	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] menuItems;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject categories;

	[Token(Token = "0x6000671")]
	[Address(RVA = "0xE97BE4", Offset = "0xE97BE4", VA = "0xE97BE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0xE97C88", Offset = "0xE97C88", VA = "0xE97C88")]
	public void changeTo(GameObject go)
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0xE97CA8", Offset = "0xE97CA8", VA = "0xE97CA8")]
	public void showCategories()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0xE97CD8", Offset = "0xE97CD8", VA = "0xE97CD8")]
	public MenuToggler()
	{
	}
}
[Token(Token = "0x2000140")]
public class MicrophoneRequest : MonoBehaviour
{
	[Token(Token = "0x6000675")]
	[Address(RVA = "0xE97CE0", Offset = "0xE97CE0", VA = "0xE97CE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0xE97D48", Offset = "0xE97D48", VA = "0xE97D48")]
	public MicrophoneRequest()
	{
	}
}
[Token(Token = "0x2000141")]
public class Mouth : MonoBehaviour
{
	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayerObject playerObject;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject consumeEffectFood;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject consumeEffectDrink;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	internal bool isConsumingFood;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	internal bool isConsumingWater;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	private bool wasConsumingFoodLastFrame;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	private bool wasConsumingWaterLastFrame;

	[Token(Token = "0x6000677")]
	[Address(RVA = "0xD8DB58", Offset = "0xD8DB58", VA = "0xD8DB58")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0xD8DBDC", Offset = "0xD8DBDC", VA = "0xD8DBDC")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0xD8DD50", Offset = "0xD8DD50", VA = "0xD8DD50")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0xD8DE18", Offset = "0xD8DE18", VA = "0xD8DE18")]
	public Mouth()
	{
	}
}
[Token(Token = "0x2000142")]
public class MoveProvider : DeviceBasedContinuousMoveProvider
{
	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool attemptedCharacterController;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private CharacterController characterCtrl;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 verticalVelocity;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public LayerMask floorLayers;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float timeNotOverFloor;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float nonFloorTimeout;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool isOnFloor;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
	public bool isOverFloor;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
	public bool grounded;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Dictionary<XRController, Vector2> initialTouch;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Dictionary<XRController, bool> isTouched;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private float checkWidthOnFloor;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private float checkWidthOnFloorExtended;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float checkWidth;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private RaycastHit[] hits;

	[Token(Token = "0x600067B")]
	[Address(RVA = "0xD8DE20", Offset = "0xD8DE20", VA = "0xD8DE20", Slot = "6")]
	protected override Vector2 ReadInput()
	{
		return default(Vector2);
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0xD8E40C", Offset = "0xD8E40C", VA = "0xD8E40C")]
	private Vector2 getInitialTouch(XRController controller)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0xD8E258", Offset = "0xD8E258", VA = "0xD8E258")]
	private void setInitialTouch(XRController controller, Vector2 controllerInput)
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0xD8E124", Offset = "0xD8E124", VA = "0xD8E124")]
	private bool isCurrentlyTouched(XRController controller)
	{
		return default(bool);
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0xD8E32C", Offset = "0xD8E32C", VA = "0xD8E32C")]
	private void setTouched(XRController controller, bool touched)
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0xD8E1E0", Offset = "0xD8E1E0", VA = "0xD8E1E0")]
	private bool wasTouched(XRController controller)
	{
		return default(bool);
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0xD8E3E8", Offset = "0xD8E3E8", VA = "0xD8E3E8")]
	private bool hasTouchPad()
	{
		return default(bool);
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0xD8E4B0", Offset = "0xD8E4B0", VA = "0xD8E4B0", Slot = "8")]
	protected override void MoveRig(Vector3 translationInWorldSpace)
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0xD8EFF8", Offset = "0xD8EFF8", VA = "0xD8EFF8")]
	private void checkUnderWater()
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0xD8ED4C", Offset = "0xD8ED4C", VA = "0xD8ED4C")]
	private bool onFloor(bool extendedCheck)
	{
		return default(bool);
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0xD8EE74", Offset = "0xD8EE74", VA = "0xD8EE74")]
	private bool overFloor()
	{
		return default(bool);
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0xD8EC60", Offset = "0xD8EC60", VA = "0xD8EC60")]
	private void FindCharacterController()
	{
	}

	[Token(Token = "0x6000687")]
	[Address(RVA = "0xD8F168", Offset = "0xD8F168", VA = "0xD8F168")]
	public MoveProvider()
	{
	}
}
[Token(Token = "0x2000143")]
public class MoveSpeedUi : MonoBehaviour
{
	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Slider slider;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI text_value;

	[Token(Token = "0x6000688")]
	[Address(RVA = "0xD8F258", Offset = "0xD8F258", VA = "0xD8F258")]
	private void Start()
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0xD8F3A4", Offset = "0xD8F3A4", VA = "0xD8F3A4")]
	private void Changed()
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0xD8F504", Offset = "0xD8F504", VA = "0xD8F504")]
	public void SpeedChanged(float value)
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0xD8F538", Offset = "0xD8F538", VA = "0xD8F538")]
	public MoveSpeedUi()
	{
	}
}
[Token(Token = "0x2000144")]
public class MoveToNormalizedValue : MonoBehaviourPun
{
	[Token(Token = "0x2000145")]
	public enum RotationMode
	{
		[Token(Token = "0x4000714")]
		hand,
		[Token(Token = "0x4000715")]
		fall
	}

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RotateToSelector2 rotator;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float lastNormalizedValue;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float currentNormalizedValue;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<MeshRenderer> rope;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float ropeSpeed;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float fallSpeed;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float minPos;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float maxPos;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform ropeEnd;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public RotationMode mode;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool movedByMasterClient;

	[Token(Token = "0x600068C")]
	[Address(RVA = "0xD8F540", Offset = "0xD8F540", VA = "0xD8F540")]
	private void Start()
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0xD8F57C", Offset = "0xD8F57C", VA = "0xD8F57C")]
	private void Update()
	{
	}

	[Token(Token = "0x600068E")]
	[Address(RVA = "0xD8F6BC", Offset = "0xD8F6BC", VA = "0xD8F6BC")]
	private void Move(float currentNormalizedValue)
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0xD8F954", Offset = "0xD8F954", VA = "0xD8F954")]
	public void OnHookDown()
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0xD8F8F8", Offset = "0xD8F8F8", VA = "0xD8F8F8")]
	public bool HasReachedGround()
	{
		return default(bool);
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0xD8F93C", Offset = "0xD8F93C", VA = "0xD8F93C")]
	public bool HasReachedFullUp()
	{
		return default(bool);
	}

	[Token(Token = "0x6000692")]
	[Address(RVA = "0xD8FA44", Offset = "0xD8FA44", VA = "0xD8FA44")]
	private float GetRelativeDistance(float percent)
	{
		return default(float);
	}

	[Token(Token = "0x6000693")]
	[Address(RVA = "0xD8F910", Offset = "0xD8F910", VA = "0xD8F910")]
	public void ChangeRotationMode(RotationMode newMode)
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0xD8FA60", Offset = "0xD8FA60", VA = "0xD8FA60")]
	public MoveToNormalizedValue()
	{
	}
}
[Token(Token = "0x2000146")]
public class MugWaterLevel : MonoBehaviour
{
	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Consumeable consumeable;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool updatePosition;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 targetPosition;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float oldAmount;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 origPos;

	[Token(Token = "0x6000695")]
	[Address(RVA = "0xD927D4", Offset = "0xD927D4", VA = "0xD927D4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000696")]
	[Address(RVA = "0xD92850", Offset = "0xD92850", VA = "0xD92850")]
	private void Update()
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0xD92954", Offset = "0xD92954", VA = "0xD92954")]
	public MugWaterLevel()
	{
	}
}
[Token(Token = "0x2000147")]
public class NetCollector : MonoBehaviour
{
	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 extends;

	[Token(Token = "0x6000698")]
	[Address(RVA = "0xD930EC", Offset = "0xD930EC", VA = "0xD930EC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000699")]
	[Address(RVA = "0xD930F0", Offset = "0xD930F0", VA = "0xD930F0")]
	private void Touched(Collider other)
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0xD9323C", Offset = "0xD9323C", VA = "0xD9323C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0xD933DC", Offset = "0xD933DC", VA = "0xD933DC")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600069C")]
	[Address(RVA = "0xD9341C", Offset = "0xD9341C", VA = "0xD9341C")]
	public NetCollector()
	{
	}
}
[Token(Token = "0x2000148")]
public class NetStats : MonoBehaviour
{
	[Token(Token = "0x600069D")]
	[Address(RVA = "0xD93424", Offset = "0xD93424", VA = "0xD93424")]
	public NetStats()
	{
	}
}
[Token(Token = "0x2000149")]
public class DamageMaster : MonoBehaviourPun
{
	[Serializable]
	[Token(Token = "0x200014A")]
	public class HitData
	{
		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 pos;

		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float radius;

		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color color;

		[Token(Token = "0x60006A9")]
		[Address(RVA = "0xD81638", Offset = "0xD81638", VA = "0xD81638")]
		public HitData()
		{
		}
	}

	[Token(Token = "0x200014B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB152C8", Offset = "0xB152C8")]
	private sealed class <respawnIn>d__9 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float t;

		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayerObject po;

		[Token(Token = "0x17000043")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006AD")]
			[Address(RVA = "0xD81928", Offset = "0xD81928", VA = "0xD81928", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000044")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006AF")]
			[Address(RVA = "0xD81990", Offset = "0xD81990", VA = "0xD81990", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006AA")]
		[Address(RVA = "0xD81048", Offset = "0xD81048", VA = "0xD81048")]
		[DebuggerHidden]
		public <respawnIn>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x60006AB")]
		[Address(RVA = "0xD817DC", Offset = "0xD817DC", VA = "0xD817DC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006AC")]
		[Address(RVA = "0xD817E0", Offset = "0xD817E0", VA = "0xD817E0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006AE")]
		[Address(RVA = "0xD81930", Offset = "0xD81930", VA = "0xD81930", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DamageMaster instance;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Collider[] hits;

	[Token(Token = "0x400071E")]
	public const string C_DAMAGE_DEFAULT = "default";

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<HitData> hitDebug;

	[Token(Token = "0x600069E")]
	[Address(RVA = "0xD80A88", Offset = "0xD80A88", VA = "0xD80A88")]
	private void Start()
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0xD80ADC", Offset = "0xD80ADC", VA = "0xD80ADC")]
	public void perfromImpact(HitInfoData hi)
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0xD80B6C", Offset = "0xD80B6C", VA = "0xD80B6C")]
	[PunRPC]
	public void RPC_VisualHit(float damage, int photnViewID, string category)
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0xD80C20", Offset = "0xD80C20", VA = "0xD80C20")]
	public void perfromKill(int photonViewKilled, int photonViewKilledBy)
	{
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0xD80D64", Offset = "0xD80D64", VA = "0xD80D64")]
	[PunRPC]
	private void Rpc_Killed(int photonViewKilled, int photonViewKilledBy)
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0xD80EA4", Offset = "0xD80EA4", VA = "0xD80EA4")]
	private void MakeScore(int photonViewKilledBy, int photonViewKilled)
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0xD80FC8", Offset = "0xD80FC8", VA = "0xD80FC8")]
	private IEnumerator respawnIn(float t, PlayerObject po)
	{
		return null;
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0xD81074", Offset = "0xD81074", VA = "0xD81074")]
	[PunRPC]
	private void Rpc_Hit(object[] data)
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0xD8156C", Offset = "0xD8156C", VA = "0xD8156C")]
	internal void addHit(Vector3 position, float radius, Color color)
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0xD81640", Offset = "0xD81640", VA = "0xD81640")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0xD81754", Offset = "0xD81754", VA = "0xD81754")]
	public DamageMaster()
	{
	}
}
[Token(Token = "0x200014C")]
public class FlodUtils
{
	[Token(Token = "0x60006B0")]
	[Address(RVA = "0xEBA440", Offset = "0xEBA440", VA = "0xEBA440")]
	public static void SendAnalytics(string eventName, Dictionary<string, object> data)
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0xEBEA58", Offset = "0xEBEA58", VA = "0xEBEA58")]
	internal static void SendAnalytics(string eventName)
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0xEBEB94", Offset = "0xEBEB94", VA = "0xEBEB94")]
	internal static bool getDataFromInstantiation(PhotonMessageInfo info, string c_key, ref object output)
	{
		return default(bool);
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0xEBED2C", Offset = "0xEBED2C", VA = "0xEBED2C")]
	public static double Repeat(double t, double len)
	{
		return default(double);
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0xEBB7E4", Offset = "0xEBB7E4", VA = "0xEBB7E4")]
	internal static ExitGames.Client.Photon.Hashtable CreateHashTable()
	{
		return null;
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0xEBEDA8", Offset = "0xEBEDA8", VA = "0xEBEDA8")]
	internal static void setPlayerProp(Player owner, string key, object value)
	{
	}
}
[Serializable]
[Token(Token = "0x200014D")]
public class UpdateRate
{
	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float updateInterval;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float lastUpdate;

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0xE1733C", Offset = "0xE1733C", VA = "0xE1733C")]
	public UpdateRate(float interval)
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0xE17378", Offset = "0xE17378", VA = "0xE17378")]
	public UpdateRate()
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0xE17388", Offset = "0xE17388", VA = "0xE17388")]
	public bool shouldUpdate()
	{
		return default(bool);
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0xE173DC", Offset = "0xE173DC", VA = "0xE173DC")]
	internal void manuallyTriggered()
	{
	}
}
[Token(Token = "0x200014E")]
public class HitFlash : MonoBehaviour
{
	[Token(Token = "0x200014F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB152D8", Offset = "0xB152D8")]
	private sealed class <CR_Hit>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400072D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400072E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400072F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HitFlash <>4__this;

		[Token(Token = "0x4000730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <time>5__2;

		[Token(Token = "0x4000731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <progress>5__3;

		[Token(Token = "0x17000045")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60006C1")]
			[Address(RVA = "0xF486F4", Offset = "0xF486F4", VA = "0xF486F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000046")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60006C3")]
			[Address(RVA = "0xF4875C", Offset = "0xF4875C", VA = "0xF4875C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006BE")]
		[Address(RVA = "0xF48508", Offset = "0xF48508", VA = "0xF48508")]
		[DebuggerHidden]
		public <CR_Hit>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60006BF")]
		[Address(RVA = "0xF48568", Offset = "0xF48568", VA = "0xF48568", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60006C0")]
		[Address(RVA = "0xF4856C", Offset = "0xF4856C", VA = "0xF4856C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0xF486FC", Offset = "0xF486FC", VA = "0xF486FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Color origColor;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color targetColor;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Coroutine cr;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Renderer rend;

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0xF483B4", Offset = "0xF483B4", VA = "0xF483B4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0xF48430", Offset = "0xF48430", VA = "0xF48430")]
	public void Hit()
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0xF48498", Offset = "0xF48498", VA = "0xF48498")]
	private IEnumerator CR_Hit()
	{
		return null;
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0xF48534", Offset = "0xF48534", VA = "0xF48534")]
	public HitFlash()
	{
	}
}
[Serializable]
[Token(Token = "0x2000150")]
public class HitInfoData
{
	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float damage;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float impactRange;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string shotByName;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int viewId;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 position;

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0xF48874", Offset = "0xF48874", VA = "0xF48874")]
	public HitInfoData(float damage, float impactRange, string shotByName, int actorNr, Vector3 position)
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0xF488F0", Offset = "0xF488F0", VA = "0xF488F0")]
	public object[] toParam()
	{
		return null;
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0xF48AC4", Offset = "0xF48AC4", VA = "0xF48AC4")]
	public static HitInfoData fromParam(object[] data)
	{
		return null;
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0xF48864", Offset = "0xF48864", VA = "0xF48864")]
	public HitInfoData()
	{
	}
}
[Token(Token = "0x2000151")]
public class HitInfo : MonoBehaviour
{
	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HitInfoData hitData;

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0xF48764", Offset = "0xF48764", VA = "0xF48764")]
	public void PerformHit(Vector3 pos)
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0xF487F4", Offset = "0xF487F4", VA = "0xF487F4")]
	public HitInfo()
	{
	}
}
[Token(Token = "0x2000152")]
public interface IHitReceiver
{
	[Token(Token = "0x60006CA")]
	void ReceiveHit(HitInfoData hitInfo);

	[Token(Token = "0x60006CB")]
	bool canHit(HitInfoData hitInfo);
}
[Token(Token = "0x2000153")]
public class NetworkEventExecutor : MonoBehaviourPun
{
	[Token(Token = "0x2000154")]
	public enum ExcecutionScope
	{
		[Token(Token = "0x400073A")]
		All,
		[Token(Token = "0x400073B")]
		Owner,
		[Token(Token = "0x400073C")]
		MasterClient
	}

	[Serializable]
	[Token(Token = "0x2000155")]
	public class NetworkEvent
	{
		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string description;

		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ExcecutionScope scope;

		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent toExecute;

		[Token(Token = "0x60006CF")]
		[Address(RVA = "0xD9372C", Offset = "0xD9372C", VA = "0xD9372C")]
		public NetworkEvent()
		{
		}
	}

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<NetworkEvent> events;

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0xD9342C", Offset = "0xD9342C", VA = "0xD9342C")]
	public void Invoke(int id)
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0xD9368C", Offset = "0xD9368C", VA = "0xD9368C")]
	[PunRPC]
	private void RPC_Invoke(int id)
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0xD93724", Offset = "0xD93724", VA = "0xD93724")]
	public NetworkEventExecutor()
	{
	}
}
[Token(Token = "0x2000156")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB152E8", Offset = "0xB152E8")]
public class NetworkGrabbable : MonoBehaviourPunCallbacks, IPunObservable
{
	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isNetworkGrabbed;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool old_isNetworkGrabbed;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool precissionGrab;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool allowDistanceGrab;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnSelectEnterEvent;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float ungrabTime;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public XRGrabInteractable grabInteractable;

	[Token(Token = "0x17000047")]
	internal bool isMine
	{
		[Token(Token = "0x60006D0")]
		[Address(RVA = "0xD93734", Offset = "0xD93734", VA = "0xD93734")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000048")]
	internal bool isUnderMyControl
	{
		[Token(Token = "0x60006D1")]
		[Address(RVA = "0xD93758", Offset = "0xD93758", VA = "0xD93758")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0xD93808", Offset = "0xD93808", VA = "0xD93808", Slot = "28")]
	public override void OnEnable()
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0xD93A90", Offset = "0xD93A90", VA = "0xD93A90")]
	private void OnSelectExit(XRBaseInteractor arg0)
	{
	}

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0xD93AB8", Offset = "0xD93AB8", VA = "0xD93AB8", Slot = "29")]
	public override void OnDisable()
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0xD93BBC", Offset = "0xD93BBC", VA = "0xD93BBC")]
	private void OnSelectEnter(XRBaseInteractor arg0)
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0xD93CA0", Offset = "0xD93CA0", VA = "0xD93CA0")]
	private void Update()
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0xD93D7C", Offset = "0xD93D7C", VA = "0xD93D7C")]
	internal void RemoveAuthority()
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0xD93C88", Offset = "0xD93C88", VA = "0xD93C88")]
	public void ChangeAuthority()
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0xD93DE8", Offset = "0xD93DE8", VA = "0xD93DE8")]
	public static void ChangeAuthority(PhotonView photonView)
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0xD93F04", Offset = "0xD93F04", VA = "0xD93F04")]
	public static void ChangeAuthority(PhotonView photonView, Player newOwner)
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0xD9400C", Offset = "0xD9400C", VA = "0xD9400C", Slot = "54")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0xD94030", Offset = "0xD94030", VA = "0xD94030")]
	private void convert()
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0xD939B8", Offset = "0xD939B8", VA = "0xD939B8")]
	private bool hasNoXRGrabInteractableNetwork()
	{
		return default(bool);
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0xD9415C", Offset = "0xD9415C", VA = "0xD9415C")]
	public NetworkGrabbable()
	{
	}
}
[Token(Token = "0x2000157")]
public class NetworkKickManager : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string debugMachineId;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Dictionary<string, float> kicked;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityAction whenPlayerListChanged;

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0xD9416C", Offset = "0xD9416C", VA = "0xD9416C")]
	public void kick(PlayerObject po)
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0xD94430", Offset = "0xD94430", VA = "0xD94430")]
	internal void checkKick(string identifier, Player player)
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0xD944E8", Offset = "0xD944E8", VA = "0xD944E8", Slot = "42")]
	public override void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0xD944FC", Offset = "0xD944FC", VA = "0xD944FC", Slot = "43")]
	public override void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0xD94510", Offset = "0xD94510", VA = "0xD94510")]
	public NetworkKickManager()
	{
	}
}
[Serializable]
[Token(Token = "0x2000158")]
public class RetryInfo
{
	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool retry;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string room;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool privateGame;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool create;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float lastRetry;

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0xDC3AC0", Offset = "0xDC3AC0", VA = "0xDC3AC0")]
	public RetryInfo()
	{
	}
}
[Token(Token = "0x2000159")]
public class NetworkLauncher : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x200015A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1534C", Offset = "0xB1534C")]
	private sealed class <>c__DisplayClass25_0
	{
		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NetworkLauncher <>4__this;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string room;

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool create;

		[Token(Token = "0x60006FD")]
		[Address(RVA = "0xD94C4C", Offset = "0xD94C4C", VA = "0xD94C4C")]
		public <>c__DisplayClass25_0()
		{
		}

		[Token(Token = "0x60006FE")]
		[Address(RVA = "0xD95FEC", Offset = "0xD95FEC", VA = "0xD95FEC")]
		internal void <Connect2>b__0()
		{
		}
	}

	[Token(Token = "0x200015B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1535C", Offset = "0xB1535C")]
	private sealed class <>c__DisplayClass26_0
	{
		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnityAction OnComplete;

		[Token(Token = "0x60006FF")]
		[Address(RVA = "0xD94E08", Offset = "0xD94E08", VA = "0xD94E08")]
		public <>c__DisplayClass26_0()
		{
		}

		[Token(Token = "0x6000700")]
		[Address(RVA = "0xD96010", Offset = "0xD96010", VA = "0xD96010")]
		internal void <fade>b__0()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200015C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1536C", Offset = "0xB1536C")]
	private sealed class <>c
	{
		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static UnityAction <>9__33_0;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static UnityAction <>9__34_0;

		[Token(Token = "0x6000702")]
		[Address(RVA = "0xD95FDC", Offset = "0xD95FDC", VA = "0xD95FDC")]
		public <>c()
		{
		}

		[Token(Token = "0x6000703")]
		[Address(RVA = "0xD95FE4", Offset = "0xD95FE4", VA = "0xD95FE4")]
		internal void <OnJoinRoomFailed>b__33_0()
		{
		}

		[Token(Token = "0x6000704")]
		[Address(RVA = "0xD95FE8", Offset = "0xD95FE8", VA = "0xD95FE8")]
		internal void <OnDisconnected>b__34_0()
		{
		}
	}

	[Token(Token = "0x200015D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1537C", Offset = "0xB1537C")]
	private sealed class <Restart>d__35 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NetworkLauncher <>4__this;

		[Token(Token = "0x17000049")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000708")]
			[Address(RVA = "0xD96110", Offset = "0xD96110", VA = "0xD96110", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600070A")]
			[Address(RVA = "0xD96178", Offset = "0xD96178", VA = "0xD96178", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000705")]
		[Address(RVA = "0xD95BA0", Offset = "0xD95BA0", VA = "0xD95BA0")]
		[DebuggerHidden]
		public <Restart>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x6000706")]
		[Address(RVA = "0xD9602C", Offset = "0xD9602C", VA = "0xD9602C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000707")]
		[Address(RVA = "0xD96030", Offset = "0xD96030", VA = "0xD96030", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000709")]
		[Address(RVA = "0xD96118", Offset = "0xD96118", VA = "0xD96118", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject[] controlPanel;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Text feedbackText;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private byte maxPlayersPerRoom;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private LoaderAnime loaderAnime;

	[Token(Token = "0x4000753")]
	public const string C_RoomMainInfo = "RoomMainInfo";

	[Token(Token = "0x4000754")]
	public const string C_RoomSubInfo = "RoomSubInfo";

	[Token(Token = "0x4000755")]
	public const string C_RoomReady = "RoomReady";

	[Token(Token = "0x4000756")]
	public const string C_Kicked = "KickedPlayers";

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<GameObject> activeWhenInLobby;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isConnecting;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string gameVersion;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool privateGame;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static RetryInfo retryInfo;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int roomCodeRetries;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material fadeMat;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Tween tween;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject LoadingScreen;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool onlineGame;

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0xD94580", Offset = "0xD94580", VA = "0xD94580")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0xD94658", Offset = "0xD94658", VA = "0xD94658")]
	public void SetOnline(bool online)
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0xD94664", Offset = "0xD94664", VA = "0xD94664")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0xD94688", Offset = "0xD94688", VA = "0xD94688")]
	private void InitName()
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0xD94720", Offset = "0xD94720", VA = "0xD94720")]
	public void InitNetwork()
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0xD9483C", Offset = "0xD9483C", VA = "0xD9483C")]
	private void updateLobbyItems(bool v)
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0xD94A5C", Offset = "0xD94A5C", VA = "0xD94A5C")]
	public void Connect(string room, bool create)
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0xD94B5C", Offset = "0xD94B5C", VA = "0xD94B5C")]
	public void Connect2(string room, bool create)
	{
	}

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0xD94C54", Offset = "0xD94C54", VA = "0xD94C54")]
	internal void fade(bool fadeout, float duration, UnityAction OnComplete)
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0xD94E10", Offset = "0xD94E10", VA = "0xD94E10")]
	public void ConnectNow(string room, bool create)
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0xD95440", Offset = "0xD95440", VA = "0xD95440", Slot = "33")]
	public override void OnCreateRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0xD954DC", Offset = "0xD954DC", VA = "0xD954DC")]
	public void setPrivateGame(bool b)
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0xD9536C", Offset = "0xD9536C", VA = "0xD9536C")]
	private string createRandomRooCode()
	{
		return null;
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0xD94948", Offset = "0xD94948", VA = "0xD94948")]
	private void LogFeedback(string message, bool clear = false)
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0xD95590", Offset = "0xD95590", VA = "0xD95590", Slot = "45")]
	public override void OnConnectedToMaster()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0xD95678", Offset = "0xD95678", VA = "0xD95678", Slot = "34")]
	public override void OnJoinRoomFailed(short returnCode, string message)
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0xD95830", Offset = "0xD95830", VA = "0xD95830", Slot = "38")]
	public override void OnDisconnected(DisconnectCause cause)
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0xD95B30", Offset = "0xD95B30", VA = "0xD95B30")]
	private IEnumerator Restart()
	{
		return null;
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0xD95BCC", Offset = "0xD95BCC", VA = "0xD95BCC", Slot = "41")]
	public override void OnJoinedRoom()
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0xD95CE8", Offset = "0xD95CE8", VA = "0xD95CE8", Slot = "37")]
	public override void OnLeftLobby()
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0xD95D20", Offset = "0xD95D20", VA = "0xD95D20", Slot = "36")]
	public override void OnJoinedLobby()
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0xD95E94", Offset = "0xD95E94", VA = "0xD95E94")]
	public NetworkLauncher()
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0xD95F6C", Offset = "0xD95F6C", VA = "0xD95F6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1A878", Offset = "0xB1A878")]
	private void <OnDisconnected>b__34_1()
	{
	}
}
[Token(Token = "0x200015E")]
public class NetworkManager : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x200015F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1538C", Offset = "0xB1538C")]
	private sealed class <LoadScene>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int index;

		[Token(Token = "0x1700004B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600071D")]
			[Address(RVA = "0xD96DAC", Offset = "0xD96DAC", VA = "0xD96DAC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600071F")]
			[Address(RVA = "0xD96E14", Offset = "0xD96E14", VA = "0xD96E14", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600071A")]
		[Address(RVA = "0xD96B44", Offset = "0xD96B44", VA = "0xD96B44")]
		[DebuggerHidden]
		public <LoadScene>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x600071B")]
		[Address(RVA = "0xD96D08", Offset = "0xD96D08", VA = "0xD96D08", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600071C")]
		[Address(RVA = "0xD96D0C", Offset = "0xD96D0C", VA = "0xD96D0C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600071E")]
		[Address(RVA = "0xD96DB4", Offset = "0xD96DB4", VA = "0xD96DB4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static NetworkManager Instance;

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool isQuitting;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject instance;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private PlayerObject playerPrefab;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject loadingScreen;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject menu;

	[Token(Token = "0x600070B")]
	[Address(RVA = "0xD96180", Offset = "0xD96180", VA = "0xD96180")]
	private void Awake()
	{
	}

	[Token(Token = "0x600070C")]
	[Address(RVA = "0xD961C4", Offset = "0xD961C4", VA = "0xD961C4")]
	private void Start()
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0xD965E8", Offset = "0xD965E8", VA = "0xD965E8", Slot = "42")]
	public override void OnPlayerEnteredRoom(Player other)
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0xD96780", Offset = "0xD96780", VA = "0xD96780", Slot = "43")]
	public override void OnPlayerLeftRoom(Player other)
	{
	}

	[Token(Token = "0x600070F")]
	[Address(RVA = "0xD96810", Offset = "0xD96810", VA = "0xD96810", Slot = "38")]
	public override void OnDisconnected(DisconnectCause cause)
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0xD969F8", Offset = "0xD969F8", VA = "0xD969F8")]
	private bool CanRecoverFromDisconnect(DisconnectCause cause)
	{
		return default(bool);
	}

	[Token(Token = "0x6000711")]
	[Address(RVA = "0xD96A08", Offset = "0xD96A08", VA = "0xD96A08", Slot = "31")]
	public override void OnLeftRoom()
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0xD96A0C", Offset = "0xD96A0C", VA = "0xD96A0C")]
	private void LoadMenu()
	{
	}

	[Token(Token = "0x6000713")]
	[Address(RVA = "0xD96578", Offset = "0xD96578", VA = "0xD96578")]
	private IEnumerator LoadScene(int index)
	{
		return null;
	}

	[Token(Token = "0x6000714")]
	[Address(RVA = "0xD96B70", Offset = "0xD96B70", VA = "0xD96B70", Slot = "32")]
	public override void OnMasterClientSwitched(Player newMasterClient)
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0xD96B74", Offset = "0xD96B74", VA = "0xD96B74")]
	public void LeaveRoom()
	{
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0xD96C38", Offset = "0xD96C38", VA = "0xD96C38")]
	public void QuitApplication()
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0xD96C40", Offset = "0xD96C40", VA = "0xD96C40")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000718")]
	[Address(RVA = "0xD96CAC", Offset = "0xD96CAC", VA = "0xD96CAC")]
	public NetworkManager()
	{
	}
}
[Token(Token = "0x2000160")]
public class NetworkRadioPlayer : MonoBehaviourPunCallbacks, IPunObservable, IPunInstantiateMagicCallback
{
	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip[] clips;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int current;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource aSrc;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float timeStarted;

	[Token(Token = "0x6000720")]
	[Address(RVA = "0xD96E1C", Offset = "0xD96E1C", VA = "0xD96E1C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0xD96E74", Offset = "0xD96E74", VA = "0xD96E74")]
	public void Play()
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0xD96F78", Offset = "0xD96F78", VA = "0xD96F78")]
	[PunRPC]
	private void Rpc_Play()
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0xD97094", Offset = "0xD97094", VA = "0xD97094")]
	private float getPhotonTimeFloat()
	{
		return default(float);
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0xD9710C", Offset = "0xD9710C", VA = "0xD9710C", Slot = "54")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0xD97150", Offset = "0xD97150", VA = "0xD97150", Slot = "55")]
	public void OnPhotonInstantiate(PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0xD971F4", Offset = "0xD971F4", VA = "0xD971F4")]
	public NetworkRadioPlayer()
	{
	}
}
[Token(Token = "0x2000161")]
public class PlayerHealth : MonoBehaviourPun, IHitReceiver, IPunObservable
{
	[Token(Token = "0x2000162")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1539C", Offset = "0xB1539C")]
	private sealed class <DestroyAfter>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float f;

		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayerHealth <>4__this;

		[Token(Token = "0x1700004D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000741")]
			[Address(RVA = "0xE29FE4", Offset = "0xE29FE4", VA = "0xE29FE4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700004E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000743")]
			[Address(RVA = "0xE2A04C", Offset = "0xE2A04C", VA = "0xE2A04C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600073E")]
		[Address(RVA = "0xE29C9C", Offset = "0xE29C9C", VA = "0xE29C9C")]
		[DebuggerHidden]
		public <DestroyAfter>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x600073F")]
		[Address(RVA = "0xE29E68", Offset = "0xE29E68", VA = "0xE29E68", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000740")]
		[Address(RVA = "0xE29E6C", Offset = "0xE29E6C", VA = "0xE29E6C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000742")]
		[Address(RVA = "0xE29FEC", Offset = "0xE29FEC", VA = "0xE29FEC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isHittable;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxValue;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float health;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float thirst;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float hunger;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool canHurtSelf;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PlayerObject po;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityAction<Vector3, Quaternion> PreDestroy;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private HitFlash[] flashs;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float autoHeal;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float autoHunger;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float autoThirst;

	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityAction OnDeath;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public UnityAction OnResurected;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float old_health;

	[Token(Token = "0x6000727")]
	[Address(RVA = "0xE290C0", Offset = "0xE290C0", VA = "0xE290C0", Slot = "6")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0xE29114", Offset = "0xE29114", VA = "0xE29114")]
	internal float getHealth()
	{
		return default(float);
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0xE2911C", Offset = "0xE2911C", VA = "0xE2911C")]
	internal float getThirst()
	{
		return default(float);
	}

	[Token(Token = "0x600072A")]
	[Address(RVA = "0xE29124", Offset = "0xE29124", VA = "0xE29124")]
	internal float getHunger()
	{
		return default(float);
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0xE2912C", Offset = "0xE2912C", VA = "0xE2912C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600072C")]
	[Address(RVA = "0xE291A8", Offset = "0xE291A8", VA = "0xE291A8")]
	private void Update()
	{
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0xE293B8", Offset = "0xE293B8", VA = "0xE293B8")]
	private void PerformDeath()
	{
	}

	[Token(Token = "0x600072E")]
	[Address(RVA = "0xE29424", Offset = "0xE29424", VA = "0xE29424")]
	private void PerformResurect()
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0xE29450", Offset = "0xE29450", VA = "0xE29450")]
	internal void visualHit()
	{
	}

	[Token(Token = "0x6000730")]
	[Address(RVA = "0xE294BC", Offset = "0xE294BC", VA = "0xE294BC")]
	internal void heal(float healAmount, float thirstReduce, float hungerReduce)
	{
	}

	[Token(Token = "0x6000731")]
	[Address(RVA = "0xE29588", Offset = "0xE29588", VA = "0xE29588")]
	[PunRPC]
	private void RPC_ReceiveHit(object[] data)
	{
	}

	[Token(Token = "0x6000732")]
	[Address(RVA = "0xE29874", Offset = "0xE29874", VA = "0xE29874")]
	private void Start()
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0xE29948", Offset = "0xE29948", VA = "0xE29948")]
	internal string getName()
	{
		return null;
	}

	[Token(Token = "0x6000734")]
	[Address(RVA = "0xE29A58", Offset = "0xE29A58", VA = "0xE29A58", Slot = "5")]
	public bool canHit(HitInfoData hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000735")]
	[Address(RVA = "0xE295B8", Offset = "0xE295B8", VA = "0xE295B8", Slot = "4")]
	public void ReceiveHit(HitInfoData hitInfo)
	{
	}

	[Token(Token = "0x6000736")]
	[Address(RVA = "0xE29AC8", Offset = "0xE29AC8", VA = "0xE29AC8")]
	internal void setHealth(int v)
	{
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0xE29C10", Offset = "0xE29C10", VA = "0xE29C10")]
	[PunRPC]
	private void RPC_SetHealth(int v)
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0xE293A4", Offset = "0xE293A4", VA = "0xE293A4")]
	public bool isAlive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0xE29C1C", Offset = "0xE29C1C", VA = "0xE29C1C")]
	private IEnumerator DestroyAfter(float f)
	{
		return null;
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0xE29CC8", Offset = "0xE29CC8", VA = "0xE29CC8")]
	public void respawn()
	{
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0xE29D2C", Offset = "0xE29D2C", VA = "0xE29D2C")]
	private void criticalHealth()
	{
	}

	[Token(Token = "0x600073C")]
	[Address(RVA = "0xE29E24", Offset = "0xE29E24", VA = "0xE29E24")]
	[PunRPC]
	private void RPC_CriticalHealth()
	{
	}

	[Token(Token = "0x600073D")]
	[Address(RVA = "0xE29E38", Offset = "0xE29E38", VA = "0xE29E38")]
	public PlayerHealth()
	{
	}
}
[Serializable]
[Token(Token = "0x2000163")]
public class ControllerState
{
	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool isTeleportButtonActive;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool tutorialDone;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public InputHelpers.Button button;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal bool reqiresClick;

	[Token(Token = "0x6000744")]
	[Address(RVA = "0xD7C6E4", Offset = "0xD7C6E4", VA = "0xD7C6E4")]
	public void OnPhotonSerializeView(PhotonStream stream)
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0xD7C708", Offset = "0xD7C708", VA = "0xD7C708")]
	internal void UpdateWithLocal(bool left, XRController controller)
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0xD7C8D4", Offset = "0xD7C8D4", VA = "0xD7C8D4")]
	public bool getTeleportState()
	{
		return default(bool);
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0xD7C8DC", Offset = "0xD7C8DC", VA = "0xD7C8DC")]
	public ControllerState()
	{
	}
}
[Token(Token = "0x2000164")]
public class PlayerInput : MonoBehaviourPun, IPunObservable
{
	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ControllerState leftState;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ControllerState rightState;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public XRController leftTp;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public XRController rightTp;

	[Token(Token = "0x1700004F")]
	public Vector3 mousePosition
	{
		[Token(Token = "0x600074A")]
		[Address(RVA = "0xE2A134", Offset = "0xE2A134", VA = "0xE2A134")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0xE2A054", Offset = "0xE2A054", VA = "0xE2A054")]
	private void Update()
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0xE2A0C4", Offset = "0xE2A0C4", VA = "0xE2A0C4")]
	public bool getButtonSTate(bool left, InputHelpers.Button button, bool requiresClick)
	{
		return default(bool);
	}

	[Token(Token = "0x600074B")]
	[Address(RVA = "0xE2A13C", Offset = "0xE2A13C", VA = "0xE2A13C")]
	internal float GetAxisRaw(string axis)
	{
		return default(float);
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0xE2A148", Offset = "0xE2A148", VA = "0xE2A148")]
	internal bool GetMouseButton(int v)
	{
		return default(bool);
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0xE2A154", Offset = "0xE2A154", VA = "0xE2A154")]
	internal bool FireButton()
	{
		return default(bool);
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0xE2A1A0", Offset = "0xE2A1A0", VA = "0xE2A1A0")]
	internal bool UseButton()
	{
		return default(bool);
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0xE2A1EC", Offset = "0xE2A1EC", VA = "0xE2A1EC")]
	internal bool CancelButton()
	{
		return default(bool);
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0xE2A238", Offset = "0xE2A238", VA = "0xE2A238", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0xE2A27C", Offset = "0xE2A27C", VA = "0xE2A27C")]
	public PlayerInput()
	{
	}
}
[Token(Token = "0x2000165")]
public class PlayerInteractable : MonoBehaviour
{
	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnInteractionStart;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnInteractionEnd;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool holdToActivate;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool instantStopInteracting;

	[Token(Token = "0x6000752")]
	[Address(RVA = "0xE2A284", Offset = "0xE2A284", VA = "0xE2A284")]
	private void Start()
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0xE2A2AC", Offset = "0xE2A2AC", VA = "0xE2A2AC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000754")]
	[Address(RVA = "0xE2A3C8", Offset = "0xE2A3C8", VA = "0xE2A3C8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0xE2A514", Offset = "0xE2A514", VA = "0xE2A514")]
	internal void Interact(PlayerInteractor playerInteractor)
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0xE2A298", Offset = "0xE2A298", VA = "0xE2A298")]
	internal void StopInteract([Optional] PlayerInteractor playerInteractor)
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0xE2A684", Offset = "0xE2A684", VA = "0xE2A684")]
	public PlayerInteractable()
	{
	}
}
[Token(Token = "0x2000166")]
public class PlayerInteractor : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x2000167")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB153AC", Offset = "0xB153AC")]
	private sealed class <StopInteractingCR>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float time;

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayerInteractor <>4__this;

		[Token(Token = "0x17000050")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000766")]
			[Address(RVA = "0xE2AD34", Offset = "0xE2AD34", VA = "0xE2AD34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000051")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000768")]
			[Address(RVA = "0xE2AD9C", Offset = "0xE2AD9C", VA = "0xE2AD9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000763")]
		[Address(RVA = "0xE2AC4C", Offset = "0xE2AC4C", VA = "0xE2AC4C")]
		[DebuggerHidden]
		public <StopInteractingCR>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6000764")]
		[Address(RVA = "0xE2AC80", Offset = "0xE2AC80", VA = "0xE2AC80", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000765")]
		[Address(RVA = "0xE2AC84", Offset = "0xE2AC84", VA = "0xE2AC84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000767")]
		[Address(RVA = "0xE2AD3C", Offset = "0xE2AD3C", VA = "0xE2AD3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform interactorSign;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image holdImage;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PlayerObject playerObject;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PlayerInteractable currentInteractible;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PlayerInteractable nearInteractable;

	[Token(Token = "0x6000758")]
	[Address(RVA = "0xE2A68C", Offset = "0xE2A68C", VA = "0xE2A68C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0xE2A6E4", Offset = "0xE2A6E4", VA = "0xE2A6E4")]
	public bool isInteracting()
	{
		return default(bool);
	}

	[Token(Token = "0x600075A")]
	[Address(RVA = "0xE2A754", Offset = "0xE2A754", VA = "0xE2A754")]
	public void Update()
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0xE2AB84", Offset = "0xE2AB84", VA = "0xE2AB84")]
	internal void setCurrentInteractible(PlayerInteractable i)
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0xE2AB8C", Offset = "0xE2AB8C", VA = "0xE2AB8C")]
	internal PlayerInteractable getCurrentInteractible()
	{
		return null;
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0xE2A3A0", Offset = "0xE2A3A0", VA = "0xE2A3A0")]
	internal void setNearInteractable(PlayerInteractable i)
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0xE2AB94", Offset = "0xE2AB94", VA = "0xE2AB94")]
	internal PlayerInteractable getNearInteractable()
	{
		return null;
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0xE2A5EC", Offset = "0xE2A5EC", VA = "0xE2A5EC")]
	public void stopInteracting()
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0xE2AB9C", Offset = "0xE2AB9C", VA = "0xE2AB9C")]
	internal void stopInteracting(int v)
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0xE2ABCC", Offset = "0xE2ABCC", VA = "0xE2ABCC")]
	private IEnumerator StopInteractingCR(float time)
	{
		return null;
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0xE2AC78", Offset = "0xE2AC78", VA = "0xE2AC78")]
	public PlayerInteractor()
	{
	}
}
[Serializable]
[Token(Token = "0x2000168")]
public class TeleportationEffect
{
	[Token(Token = "0x2000169")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB153BC", Offset = "0xB153BC")]
	private sealed class <Cr_Teleport>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportationEffect <>4__this;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 pos;

		[Token(Token = "0x17000052")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600076E")]
			[Address(RVA = "0xE49F50", Offset = "0xE49F50", VA = "0xE49F50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000053")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000770")]
			[Address(RVA = "0xE49FB8", Offset = "0xE49FB8", VA = "0xE49FB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600076B")]
		[Address(RVA = "0xE49D1C", Offset = "0xE49D1C", VA = "0xE49D1C")]
		[DebuggerHidden]
		public <Cr_Teleport>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600076C")]
		[Address(RVA = "0xE49D50", Offset = "0xE49D50", VA = "0xE49D50", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600076D")]
		[Address(RVA = "0xE49D54", Offset = "0xE49D54", VA = "0xE49D54", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600076F")]
		[Address(RVA = "0xE49F58", Offset = "0xE49F58", VA = "0xE49F58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float waitbefore;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float waitAfter;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float destroyTime;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject prefab;

	[Token(Token = "0x6000769")]
	[Address(RVA = "0xE49C88", Offset = "0xE49C88", VA = "0xE49C88")]
	public IEnumerator Cr_Teleport(Vector3 pos, Quaternion rot)
	{
		return null;
	}

	[Token(Token = "0x600076A")]
	[Address(RVA = "0xE49D48", Offset = "0xE49D48", VA = "0xE49D48")]
	public TeleportationEffect()
	{
	}
}
[Token(Token = "0x200016A")]
public class PlayerMovement : MonoBehaviourPunCallbacks, IPunObservable
{
	[Token(Token = "0x200016B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB153CC", Offset = "0xB153CC")]
	private sealed class <Cr_Teleport>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerMovement <>4__this;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool away;

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 pos;

		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Quaternion rot;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool there;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool toVoid;

		[Token(Token = "0x17000054")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000782")]
			[Address(RVA = "0xE2C780", Offset = "0xE2C780", VA = "0xE2C780", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000055")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000784")]
			[Address(RVA = "0xE2C7E8", Offset = "0xE2C7E8", VA = "0xE2C7E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600077F")]
		[Address(RVA = "0xE2C380", Offset = "0xE2C380", VA = "0xE2C380")]
		[DebuggerHidden]
		public <Cr_Teleport>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6000780")]
		[Address(RVA = "0xE2C3D8", Offset = "0xE2C3D8", VA = "0xE2C3D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000781")]
		[Address(RVA = "0xE2C3DC", Offset = "0xE2C3DC", VA = "0xE2C3DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000783")]
		[Address(RVA = "0xE2C788", Offset = "0xE2C788", VA = "0xE2C788", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float speed;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float turnSmoothing;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float turnsmoothVelocity;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 velocity;

	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private float gravity;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float maxFallTime;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float currentFallTime;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool isGrounded;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float groundDistance;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public LayerMask groundMask;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 marker;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 marker2;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Camera cam;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float diff;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float currentSpeed;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private PlayerObject playerObject;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public UnityEvent OnTeleport;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public TeleportationEffect OnTeleportAway;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TeleportationEffect OnTeleportLand;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool isTeleporting;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Coroutine cr;

	[Token(Token = "0x6000771")]
	[Address(RVA = "0xE2B724", Offset = "0xE2B724", VA = "0xE2B724")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000772")]
	[Address(RVA = "0xE2B788", Offset = "0xE2B788", VA = "0xE2B788")]
	private void Update()
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0xE2B81C", Offset = "0xE2B81C", VA = "0xE2B81C")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000774")]
	[Address(RVA = "0xE2B7D0", Offset = "0xE2B7D0", VA = "0xE2B7D0")]
	private void LocalPlayerUpdate()
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0xE2B86C", Offset = "0xE2B86C", VA = "0xE2B86C")]
	private Vector3 getMouseLookDirection()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000776")]
	[Address(RVA = "0xE2BAD8", Offset = "0xE2BAD8", VA = "0xE2BAD8")]
	private Vector3 getOffset()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000777")]
	[Address(RVA = "0xE2BB38", Offset = "0xE2BB38", VA = "0xE2BB38")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0xE2BEB4", Offset = "0xE2BEB4", VA = "0xE2BEB4")]
	private Vector3 getWeaponForward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000779")]
	[Address(RVA = "0xE2BED8", Offset = "0xE2BED8", VA = "0xE2BED8", Slot = "54")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600077A")]
	[Address(RVA = "0xE2BEFC", Offset = "0xE2BEFC", VA = "0xE2BEFC")]
	public void teleportToVoid(Vector3 pos, Quaternion rot, bool away = true, bool there = true)
	{
	}

	[Token(Token = "0x600077B")]
	[Address(RVA = "0xE2BF0C", Offset = "0xE2BF0C", VA = "0xE2BF0C")]
	public void teleport(Vector3 pos, Quaternion rot, bool away = true, bool there = true, bool toVoid = false)
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0xE2C16C", Offset = "0xE2C16C", VA = "0xE2C16C")]
	[PunRPC]
	private void RPC_Teleport(Vector3 pos, Quaternion rot, bool away, bool there, bool toVoid)
	{
	}

	[Token(Token = "0x600077D")]
	[Address(RVA = "0xE2C290", Offset = "0xE2C290", VA = "0xE2C290")]
	private IEnumerator Cr_Teleport(Vector3 pos, Quaternion rot, bool away, bool there, bool toVoid)
	{
		return null;
	}

	[Token(Token = "0x600077E")]
	[Address(RVA = "0xE2C3AC", Offset = "0xE2C3AC", VA = "0xE2C3AC")]
	public PlayerMovement()
	{
	}
}
[Serializable]
[Token(Token = "0x200016C")]
public class PlayerData
{
	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxHealth;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float currentHealth;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool leftHandVisible;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool rightHandVisible;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float leftGrip;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float rightGrip;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool leftTrigger;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool rightTrigger;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string machineId;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool isObserver;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool UiActive;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int ping;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool tutorialDone;

	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public short tool_left;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public short tool_right;

	[Token(Token = "0x6000785")]
	[Address(RVA = "0xE28F58", Offset = "0xE28F58", VA = "0xE28F58")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000786")]
	[Address(RVA = "0xE2904C", Offset = "0xE2904C", VA = "0xE2904C")]
	public PlayerData()
	{
	}
}
[Token(Token = "0x200016D")]
public class PlayerObject : MonoBehaviourPunCallbacks, IPunObservable, IPunInstantiateMagicCallback
{
	[Token(Token = "0x200016E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB153DC", Offset = "0xB153DC")]
	private sealed class <WaitForSpawnPointAndSpawn>d__56 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40007EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Spawnpoint <spawnPoint>5__2;

		[Token(Token = "0x17000062")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60007CA")]
			[Address(RVA = "0xE30774", Offset = "0xE30774", VA = "0xE30774", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000063")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60007CC")]
			[Address(RVA = "0xE307DC", Offset = "0xE307DC", VA = "0xE307DC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0xE2E24C", Offset = "0xE2E24C", VA = "0xE2E24C")]
		[DebuggerHidden]
		public <WaitForSpawnPointAndSpawn>d__56(int <>1__state)
		{
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0xE30634", Offset = "0xE30634", VA = "0xE30634", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0xE30638", Offset = "0xE30638", VA = "0xE30638", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0xE3077C", Offset = "0xE3077C", VA = "0xE3077C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlayerData playerData;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlayerMovement movement;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PlayerHealth health;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PlayerInteractor interactor;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PlayerInput input;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HandTools leftTools;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public HandTools rightTools;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<PlayerObject> players;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static PlayerObject LocalPlayerInstance;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	internal bool lastGrabSideLeft;

	[Token(Token = "0x40007DF")]
	private const string C_SCORE = "SCORE";

	[Token(Token = "0x40007E0")]
	private const string C_OBSERVER = "OBSERVER";

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public LocalPlayerHelper localPlayerHelper;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public CustomizedCharacter character;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Inventory inventory;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Resurector resurector;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool muted;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float volume;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Sprite portrait;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public TMP_Text playernameText;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private UpdateRate pingUpdateRate;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private UpdateRate tutorialUpdateRate;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private int m_dontShowLayer;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private int showLayer;

	[Token(Token = "0x17000056")]
	public bool right_GrabThings
	{
		[Token(Token = "0x6000787")]
		[Address(RVA = "0xE2C7F0", Offset = "0xE2C7F0", VA = "0xE2C7F0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000057")]
	public bool right_BuildStuff
	{
		[Token(Token = "0x6000788")]
		[Address(RVA = "0xE2C9F8", Offset = "0xE2C9F8", VA = "0xE2C9F8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000058")]
	public bool right_UsePublicChests
	{
		[Token(Token = "0x6000789")]
		[Address(RVA = "0xE2CA84", Offset = "0xE2CA84", VA = "0xE2CA84")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000059")]
	public bool right_UseHammer
	{
		[Token(Token = "0x600078A")]
		[Address(RVA = "0xE2CB10", Offset = "0xE2CB10", VA = "0xE2CB10")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700005A")]
	public bool defaultright_GrabThings
	{
		[Token(Token = "0x600078B")]
		[Address(RVA = "0xE2CB9C", Offset = "0xE2CB9C", VA = "0xE2CB9C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700005B")]
	public bool defaultright_BuildStuff
	{
		[Token(Token = "0x600078C")]
		[Address(RVA = "0xE2CDFC", Offset = "0xE2CDFC", VA = "0xE2CDFC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700005C")]
	public bool defaultright_UsePublicChests
	{
		[Token(Token = "0x600078D")]
		[Address(RVA = "0xE2CE5C", Offset = "0xE2CE5C", VA = "0xE2CE5C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700005D")]
	public bool defaultright_UseHammer
	{
		[Token(Token = "0x600078E")]
		[Address(RVA = "0xE2CEBC", Offset = "0xE2CEBC", VA = "0xE2CEBC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700005E")]
	private int dontShowLayer
	{
		[Token(Token = "0x600078F")]
		[Address(RVA = "0xE2CF1C", Offset = "0xE2CF1C", VA = "0xE2CF1C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700005F")]
	public Player Owner
	{
		[Token(Token = "0x6000790")]
		[Address(RVA = "0xE2CF7C", Offset = "0xE2CF7C", VA = "0xE2CF7C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000060")]
	internal bool isMine
	{
		[Token(Token = "0x6000791")]
		[Address(RVA = "0xE2CFA0", Offset = "0xE2CFA0", VA = "0xE2CFA0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000061")]
	private bool isAdmin
	{
		[Token(Token = "0x60007AA")]
		[Address(RVA = "0xE2ED80", Offset = "0xE2ED80", VA = "0xE2ED80")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000792")]
	[Address(RVA = "0xE2CFC4", Offset = "0xE2CFC4", VA = "0xE2CFC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0xE2D174", Offset = "0xE2D174", VA = "0xE2D174")]
	[PunRPC]
	private void RpcCheckKicked(string identifier, Player player)
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0xE2D204", Offset = "0xE2D204", VA = "0xE2D204", Slot = "55")]
	public void OnPhotonInstantiate(PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0xE2D808", Offset = "0xE2D808", VA = "0xE2D808")]
	public string saveGameIdentifier()
	{
		return null;
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0xE28A08", Offset = "0xE28A08", VA = "0xE28A08")]
	public void RefreshChar()
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0xE2DC18", Offset = "0xE2DC18", VA = "0xE2DC18")]
	private void onDeath()
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0xE2DF68", Offset = "0xE2DF68", VA = "0xE2DF68")]
	private void onResurected()
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0xE2E0E8", Offset = "0xE2E0E8", VA = "0xE2E0E8")]
	internal short getToolIndex(HandToolType handToolType)
	{
		return default(short);
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0xE2DBEC", Offset = "0xE2DBEC", VA = "0xE2DBEC")]
	internal void ResetPosition()
	{
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0xE2E1EC", Offset = "0xE2E1EC", VA = "0xE2E1EC")]
	private IEnumerator WaitForSpawnPointAndSpawn()
	{
		return null;
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0xE2E278", Offset = "0xE2E278", VA = "0xE2E278", Slot = "54")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0xE2E368", Offset = "0xE2E368", VA = "0xE2E368")]
	public void ModifyScore(int mod)
	{
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0xE2E404", Offset = "0xE2E404", VA = "0xE2E404")]
	internal Sprite getIconForToolSlot(int i)
	{
		return null;
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0xE2E420", Offset = "0xE2E420", VA = "0xE2E420")]
	internal Sprite getIconForTool(HandToolType type)
	{
		return null;
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0xE2E43C", Offset = "0xE2E43C", VA = "0xE2E43C")]
	internal bool isToolActiveAtSlot(int index)
	{
		return default(bool);
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0xE2E3F8", Offset = "0xE2E3F8", VA = "0xE2E3F8")]
	public static int getScore(Player p)
	{
		return default(int);
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0xE2E400", Offset = "0xE2E400", VA = "0xE2E400")]
	private static void setScore(Player p, int score)
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0xE2E51C", Offset = "0xE2E51C", VA = "0xE2E51C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0xE2D92C", Offset = "0xE2D92C", VA = "0xE2D92C")]
	private void updateCharacter(ExitGames.Client.Photon.Hashtable table)
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0xE2DE3C", Offset = "0xE2DE3C", VA = "0xE2DE3C")]
	public void updateCharacterLayerS(bool isMine)
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0xE2E630", Offset = "0xE2E630", VA = "0xE2E630")]
	private void Update()
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0xE2E918", Offset = "0xE2E918", VA = "0xE2E918")]
	private void maintainPlayerList()
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0xE2EACC", Offset = "0xE2EACC", VA = "0xE2EACC")]
	internal void Respawn(bool resetHealth = true)
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0xE2ECB4", Offset = "0xE2ECB4", VA = "0xE2ECB4")]
	internal void ResetPosition(bool toShip)
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0xE2ED88", Offset = "0xE2ED88", VA = "0xE2ED88")]
	internal void SetAdmin()
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0xE2EE7C", Offset = "0xE2EE7C", VA = "0xE2EE7C")]
	internal void SetNoAdmin()
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0xE2EF6C", Offset = "0xE2EF6C", VA = "0xE2EF6C")]
	[PunRPC]
	private void RpcSetAdmin(bool isAdmin)
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0xE2EFF0", Offset = "0xE2EFF0", VA = "0xE2EFF0")]
	internal void Resurect()
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0xE2F23C", Offset = "0xE2F23C", VA = "0xE2F23C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB1AAD8", Offset = "0xB1AAD8")]
	public void RespawnViaMenu()
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0xE2F244", Offset = "0xE2F244", VA = "0xE2F244")]
	public void Respawn(Vector3 pos, Quaternion rot, bool resetHealth)
	{
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0xE2F414", Offset = "0xE2F414", VA = "0xE2F414")]
	[PunRPC]
	private void RPC_Respawn(Vector3 pos, Quaternion rot, bool resetHealth)
	{
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0xE2E914", Offset = "0xE2E914", VA = "0xE2E914")]
	private void UpdateAnimator()
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0xE2F578", Offset = "0xE2F578", VA = "0xE2F578")]
	internal static IEnumerable<PlayerObject> getAllPlayerObjects()
	{
		return null;
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0xE2F5E0", Offset = "0xE2F5E0", VA = "0xE2F5E0", Slot = "47")]
	public override void OnPlayerPropertiesUpdate(Player targetPlayer, ExitGames.Client.Photon.Hashtable changedProps)
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0xE2E314", Offset = "0xE2E314", VA = "0xE2E314")]
	private void toolsChanged()
	{
	}

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0xE2F8E0", Offset = "0xE2F8E0", VA = "0xE2F8E0")]
	internal void setObserver(bool v)
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0xE2F990", Offset = "0xE2F990", VA = "0xE2F990")]
	public HandToolType getSelectedTool(bool left)
	{
		return default(HandToolType);
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0xE2D6AC", Offset = "0xE2D6AC", VA = "0xE2D6AC")]
	internal short getSelectedToolSlot(bool left)
	{
		return default(short);
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0xE2D6D8", Offset = "0xE2D6D8", VA = "0xE2D6D8")]
	internal void setSelectedToolSlot(bool left, short value)
	{
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0xE2D7B8", Offset = "0xE2D7B8", VA = "0xE2D7B8")]
	private void InventoryChanged()
	{
	}

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0xE2F9DC", Offset = "0xE2F9DC", VA = "0xE2F9DC")]
	private void updateTool(HandTools tools, short currrentItem, bool left)
	{
	}

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0xE2FB2C", Offset = "0xE2FB2C", VA = "0xE2FB2C")]
	internal int getPing()
	{
		return default(int);
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0xE2FB48", Offset = "0xE2FB48", VA = "0xE2FB48")]
	internal static PlayerObject GetFor(Player p1)
	{
		return null;
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0xE2FE9C", Offset = "0xE2FE9C", VA = "0xE2FE9C")]
	internal Transform getHighFiveHand(bool left)
	{
		return null;
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0xE2FED4", Offset = "0xE2FED4", VA = "0xE2FED4")]
	public void FadeOut()
	{
	}

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0xE2FFC8", Offset = "0xE2FFC8", VA = "0xE2FFC8")]
	public void FadeIn()
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0xE300B8", Offset = "0xE300B8", VA = "0xE300B8")]
	[PunRPC]
	private void RpcFade(bool fadeout)
	{
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0xE300EC", Offset = "0xE300EC", VA = "0xE300EC")]
	public void setPlayerRight(PlayerRights.PlayerRight right, bool targetValue)
	{
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0xE30284", Offset = "0xE30284", VA = "0xE30284")]
	public void setDefaultRight(PlayerRights.PlayerRight right, bool targetValue)
	{
	}

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0xE3050C", Offset = "0xE3050C", VA = "0xE3050C")]
	public PlayerObject()
	{
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0xE3062C", Offset = "0xE3062C", VA = "0xE3062C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1AB30", Offset = "0xB1AB30")]
	private void <updateCharacter>b__65_0(Sprite img)
	{
	}
}
[Token(Token = "0x200016F")]
public enum PlayerPart
{
	[Token(Token = "0x40007F1")]
	Head,
	[Token(Token = "0x40007F2")]
	HandL,
	[Token(Token = "0x40007F3")]
	HandR
}
[Token(Token = "0x2000170")]
public class PlayerPartPosition : MonoBehaviourPun
{
	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool send;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public PlayerPart part;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlayerPartPosition counterPart;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PlayerObject po;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject deadGo;

	[Token(Token = "0x60007CD")]
	[Address(RVA = "0xE307E4", Offset = "0xE307E4", VA = "0xE307E4")]
	private void Start()
	{
	}

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0xE3083C", Offset = "0xE3083C", VA = "0xE3083C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0xE30B10", Offset = "0xE30B10", VA = "0xE30B10")]
	private PlayerPartPosition FindCounterPart()
	{
		return null;
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0xE30BE4", Offset = "0xE30BE4", VA = "0xE30BE4")]
	public PlayerPartPosition()
	{
	}
}
[Token(Token = "0x2000171")]
public class PlayerVisibility : MonoBehaviourPunCallbacks, IPunObservable
{
	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PlayerObject playerObject;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool visible;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject[] activeWhenVisible;

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0xE3A484", Offset = "0xE3A484", VA = "0xE3A484")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0xE3A4DC", Offset = "0xE3A4DC", VA = "0xE3A4DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0xE3A554", Offset = "0xE3A554", VA = "0xE3A554")]
	private void updateVisibility(GameObject tmp)
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0xE3A618", Offset = "0xE3A618", VA = "0xE3A618", Slot = "54")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0xE3A63C", Offset = "0xE3A63C", VA = "0xE3A63C")]
	internal void setVisible(bool v)
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0xE3A760", Offset = "0xE3A760", VA = "0xE3A760")]
	[PunRPC]
	private void RPC_setVisible(bool v)
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0xE3A76C", Offset = "0xE3A76C", VA = "0xE3A76C")]
	public PlayerVisibility()
	{
	}
}
[Token(Token = "0x2000172")]
public class RegionSelection : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, string> dict;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Dropdown dropdown;

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0xE3FCFC", Offset = "0xE3FCFC", VA = "0xE3FCFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0xE3FE54", Offset = "0xE3FE54", VA = "0xE3FE54")]
	private void changed(int arg0)
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0xE40008", Offset = "0xE40008", VA = "0xE40008", Slot = "45")]
	public override void OnConnectedToMaster()
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0xE40244", Offset = "0xE40244", VA = "0xE40244")]
	private void changeDropdownSelection(string key)
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0xE3FF74", Offset = "0xE3FF74", VA = "0xE3FF74")]
	private void ChangeRegions(string region)
	{
	}

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0xE40338", Offset = "0xE40338", VA = "0xE40338")]
	public RegionSelection()
	{
	}
}
[Token(Token = "0x2000173")]
public class ScoreForKill : MonoBehaviour
{
	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int Score;

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0xDCA604", Offset = "0xDCA604", VA = "0xDCA604")]
	public ScoreForKill()
	{
	}
}
[Token(Token = "0x2000174")]
public class Spawnpoint : MonoBehaviour, IOnEventCallback
{
	[Token(Token = "0x2000175")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB153EC", Offset = "0xB153EC")]
	private sealed class <>c__DisplayClass11_0
	{
		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool onPlayerShip;

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0xEA2EE4", Offset = "0xEA2EE4", VA = "0xEA2EE4")]
		public <>c__DisplayClass11_0()
		{
		}

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0xEA33DC", Offset = "0xEA33DC", VA = "0xEA33DC")]
		internal bool <getBestSpawnPoint>b__0(Spawnpoint a)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x2000176")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB153FC", Offset = "0xB153FC")]
	private sealed class <>c
	{
		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Spawnpoint, bool> <>9__12_0;

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0xEA33BC", Offset = "0xEA33BC", VA = "0xEA33BC")]
		public <>c()
		{
		}

		[Token(Token = "0x60007ED")]
		[Address(RVA = "0xEA33C4", Offset = "0xEA33C4", VA = "0xEA33C4")]
		internal bool <getBedSpawnPoint>b__12_0(Spawnpoint a)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isOnPlayerShip;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool isBed;

	[Token(Token = "0x4000801")]
	public const byte EV_ReserveSpawnpoint = 2;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float reservationTime;

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0xEA24C8", Offset = "0xEA24C8", VA = "0xEA24C8")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0xEA2574", Offset = "0xEA2574", VA = "0xEA2574")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0xEA25DC", Offset = "0xEA25DC", VA = "0xEA25DC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0xEA2644", Offset = "0xEA2644", VA = "0xEA2644", Slot = "4")]
	public void OnEvent(ExitGames.Client.Photon.EventData photonEvent)
	{
	}

	[Token(Token = "0x60007E3")]
	[Address(RVA = "0xEA27CC", Offset = "0xEA27CC", VA = "0xEA27CC")]
	public bool isReserved()
	{
		return default(bool);
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0xEA2804", Offset = "0xEA2804", VA = "0xEA2804")]
	public void reservePoint()
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0xEA2978", Offset = "0xEA2978", VA = "0xEA2978")]
	public void TeleportHere()
	{
	}

	[Token(Token = "0x60007E6")]
	[Address(RVA = "0xEA2ABC", Offset = "0xEA2ABC", VA = "0xEA2ABC")]
	internal static Spawnpoint getBestSpawnPoint(bool onPlayerShip = true)
	{
		return null;
	}

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0xEA2EEC", Offset = "0xEA2EEC", VA = "0xEA2EEC")]
	internal static Spawnpoint getBedSpawnPoint()
	{
		return null;
	}

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0xEA3348", Offset = "0xEA3348", VA = "0xEA3348")]
	public Spawnpoint()
	{
	}
}
[Token(Token = "0x2000177")]
public class SyncWithButtonState : MonoBehaviour
{
	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool left;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public InputHelpers.Button button;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MonoBehaviour target;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PlayerInput input;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PlayerObject player;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool isActive;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private XRController xrc;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool lifeDependant;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	internal bool requiresAxisClick;

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0xEA64B4", Offset = "0xEA64B4", VA = "0xEA64B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0xEA653C", Offset = "0xEA653C", VA = "0xEA653C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0xEA6670", Offset = "0xEA6670", VA = "0xEA6670")]
	public SyncWithButtonState()
	{
	}
}
[Token(Token = "0x2000178")]
public class NullPoseProvider : BasePoseProvider
{
	[Token(Token = "0x60007F1")]
	[Address(RVA = "0xD971FC", Offset = "0xD971FC", VA = "0xD971FC", Slot = "4")]
	public override PoseDataFlags GetPoseFromProvider(out Pose output)
	{
		return default(PoseDataFlags);
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0xD972A0", Offset = "0xD972A0", VA = "0xD972A0")]
	public NullPoseProvider()
	{
	}
}
[Token(Token = "0x2000179")]
public class OceanTrigger : MonoBehaviour
{
	[Token(Token = "0x200017A")]
	public enum WaterType
	{
		[Token(Token = "0x4000814")]
		Ocean,
		[Token(Token = "0x4000815")]
		Pond
	}

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip[] waterSploshClips;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private System.Random rand;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LootSpawner lootSpawner;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public WaterType waterType;

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0xDEA810", Offset = "0xDEA810", VA = "0xDEA810")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0xDEA8A4", Offset = "0xDEA8A4", VA = "0xDEA8A4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60007F5")]
	[Address(RVA = "0xDEAC6C", Offset = "0xDEAC6C", VA = "0xDEAC6C")]
	private void addSplosh(Vector3 position)
	{
	}

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0xDEAF14", Offset = "0xDEAF14", VA = "0xDEAF14")]
	public OceanTrigger()
	{
	}
}
[Token(Token = "0x200017B")]
[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0xB1540C", Offset = "0xB1540C")]
public class PhotoCamera : MonoBehaviourPun
{
	[Token(Token = "0x200017C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15420", Offset = "0xB15420")]
	private sealed class <CrTakePicture>d__33 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PhotoCamera <>4__this;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int beeps;

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private LowPolyCloud <cloud>5__2;

		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private LowPolyCloudGPU <cloudGPU>5__3;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <i>5__4;

		[Token(Token = "0x17000064")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000808")]
			[Address(RVA = "0xDF1648", Offset = "0xDF1648", VA = "0xDF1648", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000065")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600080A")]
			[Address(RVA = "0xDF16B0", Offset = "0xDF16B0", VA = "0xDF16B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000805")]
		[Address(RVA = "0xDF0784", Offset = "0xDF0784", VA = "0xDF0784")]
		[DebuggerHidden]
		public <CrTakePicture>d__33(int <>1__state)
		{
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0xDF10C0", Offset = "0xDF10C0", VA = "0xDF10C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000807")]
		[Address(RVA = "0xDF10C4", Offset = "0xDF10C4", VA = "0xDF10C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000809")]
		[Address(RVA = "0xDF1650", Offset = "0xDF1650", VA = "0xDF1650", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200017D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15430", Offset = "0xB15430")]
	private sealed class <>c
	{
		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static NativeGallery.MediaSaveCallback <>9__37_0;

		[Token(Token = "0x600080C")]
		[Address(RVA = "0xDF1038", Offset = "0xDF1038", VA = "0xDF1038")]
		public <>c()
		{
		}

		[Token(Token = "0x600080D")]
		[Address(RVA = "0xDF1040", Offset = "0xDF1040", VA = "0xDF1040")]
		internal void <SaveImage>b__37_0(bool success, string path)
		{
		}
	}

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Camera cam;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int resWidth;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int resHeight;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Texture2D previewTexture;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioClip beep;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip takePhoto;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject flash;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float flashDuration;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float beepTime;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public RenderTexture originalRt;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RenderTexture duplicatedRt;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private RenderTexture rt;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public TrackedDeviceGraphicRaycaster raycaster;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public RawImage[] rawImages;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public TextMeshProUGUI countdownText;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject[] saveButtons;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject[] takeButtons;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Animator animator;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private UpdateRate frontBackCheck;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private UpdateRate waveCheck;

	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Coroutine crTakePicture;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool facing;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
	public bool waving;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float faceTollerance;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private AudioSource source;

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0xDEFFD4", Offset = "0xDEFFD4", VA = "0xDEFFD4")]
	protected void Start()
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0xDF0320", Offset = "0xDF0320", VA = "0xDF0320")]
	private void Update()
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0xDF0224", Offset = "0xDF0224", VA = "0xDF0224")]
	private void showButtons(int v1, int v2)
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0xDF03CC", Offset = "0xDF03CC", VA = "0xDF03CC")]
	public void takePicture()
	{
	}

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0xDF04C8", Offset = "0xDF04C8", VA = "0xDF04C8")]
	public void takePictureNow()
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0xDF05C0", Offset = "0xDF05C0", VA = "0xDF05C0")]
	[PunRPC]
	private void RpcTakePicture(int beeps)
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0xDF0680", Offset = "0xDF0680", VA = "0xDF0680")]
	public void SaveImage()
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0xDF0600", Offset = "0xDF0600", VA = "0xDF0600")]
	private IEnumerator CrTakePicture(int beeps)
	{
		return null;
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0xDF07B0", Offset = "0xDF07B0", VA = "0xDF07B0")]
	private void setNamesVisible(bool v)
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0xDF0AE4", Offset = "0xDF0AE4", VA = "0xDF0AE4")]
	private void TakePhotoSound()
	{
	}

	[Token(Token = "0x6000801")]
	[Address(RVA = "0xDF0B88", Offset = "0xDF0B88", VA = "0xDF0B88")]
	private void BeepSound()
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0xDF0C2C", Offset = "0xDF0C2C", VA = "0xDF0C2C")]
	public void SaveImage(bool doSave = true)
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0xDF0E94", Offset = "0xDF0E94", VA = "0xDF0E94")]
	[PunRPC]
	private void RPC_SetToPreview()
	{
	}

	[Token(Token = "0x6000804")]
	[Address(RVA = "0xDF0F1C", Offset = "0xDF0F1C", VA = "0xDF0F1C")]
	public PhotoCamera()
	{
	}
}
[Token(Token = "0x200017E")]
public class PhotonSceneLoadingProgress : MonoBehaviour
{
	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image img;

	[Token(Token = "0x600080E")]
	[Address(RVA = "0xDF27DC", Offset = "0xDF27DC", VA = "0xDF27DC")]
	private void Update()
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0xDF2858", Offset = "0xDF2858", VA = "0xDF2858")]
	public PhotonSceneLoadingProgress()
	{
	}
}
[Token(Token = "0x200017F")]
public class PhotonStatistics : MonoBehaviour
{
	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private UpdateRate statisticUpdate;

	[Token(Token = "0x6000810")]
	[Address(RVA = "0xDF2860", Offset = "0xDF2860", VA = "0xDF2860")]
	public PhotonStatistics()
	{
	}
}
[Token(Token = "0x2000180")]
public class PickupItem : MonoBehaviour
{
	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private InventoryItem item;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AudioClip collectSound;

	[Token(Token = "0x6000811")]
	[Address(RVA = "0xDF28CC", Offset = "0xDF28CC", VA = "0xDF28CC")]
	public void OnGrab(XRBaseInteractor interactor)
	{
	}

	[Token(Token = "0x6000812")]
	[Address(RVA = "0xDF2BC4", Offset = "0xDF2BC4", VA = "0xDF2BC4")]
	public PickupItem()
	{
	}
}
[Token(Token = "0x2000181")]
public class PlacementLaser : ControllerInput
{
	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private LineRenderer lineRend;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LayerMask mask;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float rayLen;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform placePoint;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float additionalRotationItems;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float additionalRotationGrid;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float roationSpeed;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float roationSpeedGrid;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public InputHelpers.Button buildButton;

	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public InteractionState buildButtonState;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private InventoryItem buildAble;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private PreviewInfo buildPreview;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Material buildMat;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float degreesnap;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public UnityAction OnBuild;

	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private RaycastHit[] hitsUnsorted;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private UpdateRate updateRate;

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public float hitangle;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	public float hitAngleTolleracne;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool IsValidating;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private List<RaycastHit> hitsSorted;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool wantsBuild;

	[Token(Token = "0x6000813")]
	[Address(RVA = "0xDF3180", Offset = "0xDF3180", VA = "0xDF3180")]
	private void Start()
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0xDF35C8", Offset = "0xDF35C8", VA = "0xDF35C8")]
	public void setBuildable(InventoryItem b)
	{
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0xDF3200", Offset = "0xDF3200", VA = "0xDF3200")]
	private void updatePreview()
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0xDF36D0", Offset = "0xDF36D0", VA = "0xDF36D0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000817")]
	[Address(RVA = "0xDF4EE8", Offset = "0xDF4EE8", VA = "0xDF4EE8")]
	public bool wantsToBuild()
	{
		return default(bool);
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0xDF35D0", Offset = "0xDF35D0", VA = "0xDF35D0")]
	public bool hasBuildable()
	{
		return default(bool);
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0xDF4AC4", Offset = "0xDF4AC4", VA = "0xDF4AC4")]
	private float Grid(float x)
	{
		return default(float);
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0xDF4CB8", Offset = "0xDF4CB8", VA = "0xDF4CB8")]
	private void Build()
	{
	}

	[Token(Token = "0x600081B")]
	[Address(RVA = "0xDF4BB0", Offset = "0xDF4BB0", VA = "0xDF4BB0")]
	private void updateAxis()
	{
	}

	[Token(Token = "0x600081C")]
	[Address(RVA = "0xDF4F20", Offset = "0xDF4F20", VA = "0xDF4F20")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600081D")]
	[Address(RVA = "0xDF5080", Offset = "0xDF5080", VA = "0xDF5080")]
	public PlacementLaser()
	{
	}

	[Token(Token = "0x600081E")]
	[Address(RVA = "0xDF5160", Offset = "0xDF5160", VA = "0xDF5160")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1AC10", Offset = "0xB1AC10")]
	private float <FixedUpdate>b__25_0(RaycastHit i)
	{
		return default(float);
	}
}
[Token(Token = "0x2000182")]
public class Plant : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000183")]
	public class PlantData
	{
		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int activePlantStage;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool isFinished;

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool isWatered;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double waterTime;

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vegetable.VegetableData[] vegetableData;

		[Token(Token = "0x600082A")]
		[Address(RVA = "0xDF5A2C", Offset = "0xDF5A2C", VA = "0xDF5A2C")]
		public PlantData()
		{
		}
	}

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlantStage[] plantStages;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vegetable[] vegetables;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PlantData data;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string PlantID;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private double timefornextgrow;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PlantPot pot;

	[Token(Token = "0x17000066")]
	private double timeTillGrow
	{
		[Token(Token = "0x6000821")]
		[Address(RVA = "0xDF5350", Offset = "0xDF5350", VA = "0xDF5350")]
		get
		{
			return default(double);
		}
	}

	[Token(Token = "0x600081F")]
	[Address(RVA = "0xDF5240", Offset = "0xDF5240", VA = "0xDF5240")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000820")]
	[Address(RVA = "0xDF5298", Offset = "0xDF5298", VA = "0xDF5298")]
	private void SetNextGrowTime()
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0xDF53C8", Offset = "0xDF53C8", VA = "0xDF53C8")]
	private bool isNextGrowTime()
	{
		return default(bool);
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0xDF5444", Offset = "0xDF5444", VA = "0xDF5444")]
	public void SetUp(PlantData data)
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0xDF5814", Offset = "0xDF5814", VA = "0xDF5814")]
	private void Grow()
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0xDF56D4", Offset = "0xDF56D4", VA = "0xDF56D4")]
	private void ActivatePlantStage(int newStage)
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0xDF5840", Offset = "0xDF5840", VA = "0xDF5840")]
	public void PlantPlant()
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0xDF5940", Offset = "0xDF5940", VA = "0xDF5940")]
	public void Water()
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0xDF59CC", Offset = "0xDF59CC", VA = "0xDF59CC")]
	public void Update()
	{
	}

	[Token(Token = "0x6000829")]
	[Address(RVA = "0xDF5A24", Offset = "0xDF5A24", VA = "0xDF5A24")]
	public Plant()
	{
	}
}
[Serializable]
[Token(Token = "0x2000184")]
public class PlantStage
{
	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject plant;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int TimeToGrow;

	[Token(Token = "0x600082B")]
	[Address(RVA = "0xE27C60", Offset = "0xE27C60", VA = "0xE27C60")]
	public PlantStage()
	{
	}
}
[Token(Token = "0x2000185")]
public class PlantPot : MonoBehaviourPunCallbacks, ISaveAble, IPunInstantiateMagicCallback
{
	[Serializable]
	[Token(Token = "0x2000186")]
	public class PlantPotData
	{
		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlantSpot.PlantSpotData[] plantSpotData;

		[Token(Token = "0x600083B")]
		[Address(RVA = "0xDF608C", Offset = "0xDF608C", VA = "0xDF608C")]
		public PlantPotData()
		{
		}
	}

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PlantSpot[] spots;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PlantPotData plantPotData;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool executeStart;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioClip plantSound;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool reactToChanges;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string lastPlantData;

	[Token(Token = "0x600082C")]
	[Address(RVA = "0xDF5A34", Offset = "0xDF5A34", VA = "0xDF5A34", Slot = "56")]
	public void OnPhotonInstantiate(PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0xDF5B5C", Offset = "0xDF5B5C", VA = "0xDF5B5C")]
	[PunRPC]
	private void RPC_RequestState_PlantPot(PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0xDF5C50", Offset = "0xDF5C50", VA = "0xDF5C50")]
	[PunRPC]
	private void RPC_SetPlantPot(string data)
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0xDF5D64", Offset = "0xDF5D64", VA = "0xDF5D64", Slot = "54")]
	public string SaveData()
	{
		return null;
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0xDF5CE0", Offset = "0xDF5CE0", VA = "0xDF5CE0", Slot = "55")]
	public void LoadCharacterData(string data)
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0xDF5EE4", Offset = "0xDF5EE4", VA = "0xDF5EE4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0xDF6010", Offset = "0xDF6010", VA = "0xDF6010")]
	private void Start()
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0xDF5D70", Offset = "0xDF5D70", VA = "0xDF5D70")]
	public void SetUp(PlantPotData data)
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0xDF622C", Offset = "0xDF622C", VA = "0xDF622C")]
	internal void Water(PlantSpot plantSpot, bool isWatering)
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0xDF63EC", Offset = "0xDF63EC", VA = "0xDF63EC")]
	[PunRPC]
	private void RPC_Water(int spot, bool isWatering)
	{
	}

	[Token(Token = "0x6000836")]
	[Address(RVA = "0xDF6504", Offset = "0xDF6504", VA = "0xDF6504")]
	internal void Plant(PlantSpot plantSpot, string plantToPlant)
	{
	}

	[Token(Token = "0x6000837")]
	[Address(RVA = "0xDF6714", Offset = "0xDF6714", VA = "0xDF6714")]
	[PunRPC]
	private void RPC_Plant(int spot, string plantToPlant)
	{
	}

	[Token(Token = "0x6000838")]
	[Address(RVA = "0xDF6884", Offset = "0xDF6884", VA = "0xDF6884")]
	internal void PlantReaped(PlantSpot plantSpot, int plantIndex, int vegetableIndex)
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0xDF6A80", Offset = "0xDF6A80", VA = "0xDF6A80")]
	[PunRPC]
	private void RPC_PlantReaped(int spotIndex, int plantIndex, int vegetableIndex)
	{
	}

	[Token(Token = "0x600083A")]
	[Address(RVA = "0xDF6BB0", Offset = "0xDF6BB0", VA = "0xDF6BB0")]
	public PlantPot()
	{
	}
}
[Token(Token = "0x2000187")]
public class PlantSpot : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000188")]
	public class PlantSpotData
	{
		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isWatered;

		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string plant;

		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Plant.PlantData plantdata;

		[Token(Token = "0x600084A")]
		[Address(RVA = "0xE27C58", Offset = "0xE27C58", VA = "0xE27C58")]
		public PlantSpotData()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000189")]
	public class PlantDictionary
	{
		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InventoryItem plantID;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Plant plant;

		[Token(Token = "0x600084B")]
		[Address(RVA = "0xE27C50", Offset = "0xE27C50", VA = "0xE27C50")]
		public PlantDictionary()
		{
		}
	}

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material mat;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Plant activePlant;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color wateredColor;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PlantSpotData data;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PlantDictionary[] plantList;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Dictionary<string, Plant> plants;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool isInitialized;

	[Token(Token = "0x600083C")]
	[Address(RVA = "0xDF6C14", Offset = "0xDF6C14", VA = "0xDF6C14")]
	private void Awake()
	{
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0xDF6C18", Offset = "0xDF6C18", VA = "0xDF6C18")]
	private void initIfNeeded()
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0xDF6094", Offset = "0xDF6094", VA = "0xDF6094")]
	public void SetUp(PlantSpotData data)
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0xDF6DBC", Offset = "0xDF6DBC", VA = "0xDF6DBC")]
	public void WaterButton(bool isWatering)
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0xDF6430", Offset = "0xDF6430", VA = "0xDF6430")]
	public void InternWater(bool isWatering)
	{
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0xDF6E2C", Offset = "0xDF6E2C", VA = "0xDF6E2C")]
	private void Dry()
	{
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0xDF6E74", Offset = "0xDF6E74", VA = "0xDF6E74")]
	public void PlantButton(string plantToPlant)
	{
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0xDF6758", Offset = "0xDF6758", VA = "0xDF6758")]
	public void InternPlant(string plantToPlant)
	{
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0xDF6EE4", Offset = "0xDF6EE4", VA = "0xDF6EE4")]
	private bool isPlantable(string plant)
	{
		return default(bool);
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0xDF6AC8", Offset = "0xDF6AC8", VA = "0xDF6AC8")]
	public void InternOnVegetableReaped(int plantIndex, int vegetableIndex)
	{
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0xDF6F4C", Offset = "0xDF6F4C", VA = "0xDF6F4C")]
	public void OnVegetableReaped(Vegetable v, Plant plant, int vegetableIndex)
	{
	}

	[Token(Token = "0x6000847")]
	[Address(RVA = "0xDF704C", Offset = "0xDF704C", VA = "0xDF704C")]
	private void OnCollisionStay(Collision other)
	{
	}

	[Token(Token = "0x6000848")]
	[Address(RVA = "0xDF6D5C", Offset = "0xDF6D5C", VA = "0xDF6D5C")]
	public void KillPlant()
	{
	}

	[Token(Token = "0x6000849")]
	[Address(RVA = "0xDF7368", Offset = "0xDF7368", VA = "0xDF7368")]
	public PlantSpot()
	{
	}
}
[Token(Token = "0x200018A")]
public class Vegetable : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200018B")]
	public class VegetableData
	{
		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool wasReaped;

		[Token(Token = "0x6000851")]
		[Address(RVA = "0xE1BC70", Offset = "0xE1BC70", VA = "0xE1BC70")]
		public VegetableData()
		{
		}
	}

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VegetableData data;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private InventoryItem vegatableItem;

	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private AudioClip reapSound;

	[Token(Token = "0x600084C")]
	[Address(RVA = "0xE1B830", Offset = "0xE1B830", VA = "0xE1B830")]
	public void SetUp(VegetableData data)
	{
	}

	[Token(Token = "0x600084D")]
	[Address(RVA = "0xE1B89C", Offset = "0xE1B89C", VA = "0xE1B89C")]
	public void Plant()
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0xE1B8A4", Offset = "0xE1B8A4", VA = "0xE1B8A4")]
	public void OnGrab(XRBaseInteractor interactor)
	{
	}

	[Token(Token = "0x600084F")]
	[Address(RVA = "0xE1B84C", Offset = "0xE1B84C", VA = "0xE1B84C")]
	public void ToggleReap(bool isReaped)
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0xE1BC68", Offset = "0xE1BC68", VA = "0xE1BC68")]
	public Vegetable()
	{
	}
}
[Token(Token = "0x200018C")]
public class PlaySoundOnEnable : MonoBehaviour
{
	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioClip clip;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource audiosrc;

	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float pitchVariation;

	[Token(Token = "0x6000852")]
	[Address(RVA = "0xE27FC0", Offset = "0xE27FC0", VA = "0xE27FC0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0xE27FC4", Offset = "0xE27FC4", VA = "0xE27FC4")]
	private void PlayClip()
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0xE2809C", Offset = "0xE2809C", VA = "0xE2809C")]
	private void initializeIfNeeded()
	{
	}

	[Token(Token = "0x6000855")]
	[Address(RVA = "0xE281BC", Offset = "0xE281BC", VA = "0xE281BC")]
	public PlaySoundOnEnable()
	{
	}
}
[Token(Token = "0x200018D")]
public class PlayerAccessory : MonoBehaviour
{
	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject accessoryObject;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CustomizedSlotType type;

	[Token(Token = "0x6000856")]
	[Address(RVA = "0xE281D0", Offset = "0xE281D0", VA = "0xE281D0")]
	public void DestroyOnPlayerWearing()
	{
	}

	[Token(Token = "0x6000857")]
	[Address(RVA = "0xE285CC", Offset = "0xE285CC", VA = "0xE285CC")]
	public PlayerAccessory()
	{
	}
}
[Token(Token = "0x200018E")]
public class PlayerAccessorySlot : MonoBehaviour
{
	[Token(Token = "0x200018F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15440", Offset = "0xB15440")]
	private sealed class <>c__DisplayClass6_0
	{
		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlayerAccessorySlot <>4__this;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CustomizedSlot slot;

		[Token(Token = "0x600085E")]
		[Address(RVA = "0xE28E4C", Offset = "0xE28E4C", VA = "0xE28E4C")]
		public <>c__DisplayClass6_0()
		{
		}

		[Token(Token = "0x600085F")]
		[Address(RVA = "0xE28E80", Offset = "0xE28E80", VA = "0xE28E80")]
		internal bool <OnGrab>b__0(CustomizedSlot s)
		{
			return default(bool);
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0xE28EB0", Offset = "0xE28EB0", VA = "0xE28EB0")]
		internal bool <OnGrab>b__1(InventoryItem i)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CustomizedSlotType type;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CustomizedCharacter customizedCharacter;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PlayerObject player;

	[Token(Token = "0x6000858")]
	[Address(RVA = "0xE285D4", Offset = "0xE285D4", VA = "0xE285D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0xE2862C", Offset = "0xE2862C", VA = "0xE2862C")]
	public void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x600085A")]
	[Address(RVA = "0xE28914", Offset = "0xE28914", VA = "0xE28914")]
	private bool IsPlayerWearingItem()
	{
		return default(bool);
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0xE28ADC", Offset = "0xE28ADC", VA = "0xE28ADC")]
	public void OnGrab(XRBaseInteractor interactor)
	{
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0xE28E54", Offset = "0xE28E54", VA = "0xE28E54")]
	public PlayerAccessorySlot()
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0xE28E5C", Offset = "0xE28E5C", VA = "0xE28E5C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1AC70", Offset = "0xB1AC70")]
	private bool <IsPlayerWearingItem>b__5_0(CustomizedSlot s)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000190")]
public class PlayerAttachment : MonoBehaviour
{
	[Token(Token = "0x6000861")]
	[Address(RVA = "0xE28EF4", Offset = "0xE28EF4", VA = "0xE28EF4")]
	public PlayerAttachment()
	{
	}
}
[Serializable]
[Token(Token = "0x2000191")]
public class PlayerBuilt
{
	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int ID;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string buildableName;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 position;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Quaternion rotation;

	[NonSerialized]
	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject instantiated;

	[Token(Token = "0x17000067")]
	public bool canDestroy
	{
		[Token(Token = "0x6000862")]
		[Address(RVA = "0xE28EFC", Offset = "0xE28EFC", VA = "0xE28EFC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0xE28F50", Offset = "0xE28F50", VA = "0xE28F50")]
	public PlayerBuilt()
	{
	}
}
[Token(Token = "0x2000192")]
public class PlayerList : MonoBehaviour
{
	[Token(Token = "0x2000193")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15450", Offset = "0xB15450")]
	private sealed class <cr_refreshList>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerList <>4__this;

		[Token(Token = "0x17000068")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600086C")]
			[Address(RVA = "0xE2B6B4", Offset = "0xE2B6B4", VA = "0xE2B6B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000069")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600086E")]
			[Address(RVA = "0xE2B71C", Offset = "0xE2B71C", VA = "0xE2B71C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000869")]
		[Address(RVA = "0xE2AF44", Offset = "0xE2AF44", VA = "0xE2AF44")]
		[DebuggerHidden]
		public <cr_refreshList>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0xE2B0C8", Offset = "0xE2B0C8", VA = "0xE2B0C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0xE2B0CC", Offset = "0xE2B0CC", VA = "0xE2B0CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0xE2B6BC", Offset = "0xE2B6BC", VA = "0xE2B6BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<SettingsForPlayer> list;

	[Token(Token = "0x6000864")]
	[Address(RVA = "0xE2ADAC", Offset = "0xE2ADAC", VA = "0xE2ADAC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000865")]
	[Address(RVA = "0xE2AEA8", Offset = "0xE2AEA8", VA = "0xE2AEA8")]
	private void refreshList()
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0xE2AED4", Offset = "0xE2AED4", VA = "0xE2AED4")]
	private IEnumerator cr_refreshList()
	{
		return null;
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0xE2AF70", Offset = "0xE2AF70", VA = "0xE2AF70")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0xE2B058", Offset = "0xE2B058", VA = "0xE2B058")]
	public PlayerList()
	{
	}
}
[Serializable]
[Token(Token = "0x2000194")]
public class RaftSaveData
{
	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public PlayerBuilt[] builtStuff;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayerInventorySave[] playerInventories;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InventoryItemAtPosition[] items;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public EnemyManager.EnemySaveData enemyUnlocks;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LootSpawner.LootSpawnerSaveData lootUnlocks;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public IslandWorldPosition.IslandPositionData islandPosSaveData;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public IslandWorldPosition.IslandUnlockData islandUnlockSave;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IslandWorldPosition.IslandUnlockData tinyIslandUnlockSave;

	[Token(Token = "0x600086F")]
	[Address(RVA = "0xE35DEC", Offset = "0xE35DEC", VA = "0xE35DEC")]
	public RaftSaveData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000195")]
public class InventoryItemAtPosition
{
	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string item_name;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 pos;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 rot;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int useAmount;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public byte[] data;

	[Token(Token = "0x6000870")]
	[Address(RVA = "0xEEE074", Offset = "0xEEE074", VA = "0xEEE074")]
	public InventoryItemAtPosition()
	{
	}
}
[Token(Token = "0x2000196")]
public class ItemOverTake
{
	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private InventoryItem toCreate;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 pos;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Quaternion rot;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private ExitGames.Client.Photon.Hashtable hashTable;

	[Token(Token = "0x6000871")]
	[Address(RVA = "0xEF4C08", Offset = "0xEF4C08", VA = "0xEF4C08")]
	public void beforeDestroy(GameObject arg0)
	{
	}

	[Token(Token = "0x6000872")]
	[Address(RVA = "0xEF4EE0", Offset = "0xEF4EE0", VA = "0xEF4EE0")]
	public void afterDestroy()
	{
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0xEF5244", Offset = "0xEF5244", VA = "0xEF5244")]
	public ItemOverTake()
	{
	}
}
[Token(Token = "0x2000197")]
public class PlayerRaft : MonoBehaviourPunCallbacks, IInRoomCallbacks, ISaveAble, IPunObservable
{
	[Serializable]
	[Token(Token = "0x2000198")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15460", Offset = "0xB15460")]
	private sealed class <>c
	{
		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<FishSpawnPoint, bool> <>9__43_0;

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0xE376B8", Offset = "0xE376B8", VA = "0xE376B8")]
		public <>c()
		{
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0xE376C0", Offset = "0xE376C0", VA = "0xE376C0")]
		internal bool <getFishSpawnPositions>b__43_0(FishSpawnPoint i)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000199")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15470", Offset = "0xB15470")]
	private sealed class <>c__DisplayClass52_0
	{
		[Token(Token = "0x40008C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int ID;

		[Token(Token = "0x40008C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Func<Buildable, bool> <>9__0;

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0xE32B30", Offset = "0xE32B30", VA = "0xE32B30")]
		public <>c__DisplayClass52_0()
		{
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0xE376DC", Offset = "0xE376DC", VA = "0xE376DC")]
		internal bool <RPC_DestroyBuildViaMaster>b__0(Buildable a)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200019A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15480", Offset = "0xB15480")]
	private sealed class <spawnDrop>d__55 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InventoryItem item;

		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 pos;

		[Token(Token = "0x1700006B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008B9")]
			[Address(RVA = "0xE3992C", Offset = "0xE3992C", VA = "0xE3992C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008BB")]
			[Address(RVA = "0xE39994", Offset = "0xE39994", VA = "0xE39994", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0xE32CC8", Offset = "0xE32CC8", VA = "0xE32CC8")]
		[DebuggerHidden]
		public <spawnDrop>d__55(int <>1__state)
		{
		}

		[Token(Token = "0x60008B7")]
		[Address(RVA = "0xE3968C", Offset = "0xE3968C", VA = "0xE3968C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0xE39690", Offset = "0xE39690", VA = "0xE39690", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0xE39934", Offset = "0xE39934", VA = "0xE39934", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200019B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15490", Offset = "0xB15490")]
	private sealed class <>c__DisplayClass58_0
	{
		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string nickname;

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0xE33570", Offset = "0xE33570", VA = "0xE33570")]
		public <>c__DisplayClass58_0()
		{
		}

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0xE37700", Offset = "0xE37700", VA = "0xE37700")]
		internal bool <RPC_Joined>b__0(PlayerObject p)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200019C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB154A0", Offset = "0xB154A0")]
	private sealed class <CR_BuildSpotCheck>d__61 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerRaft <>4__this;

		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <totalCounter>5__2;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<PlayerBuilt>.Enumerator <>7__wrap2;

		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GridBuildSlot[] <>7__wrap3;

		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int <>7__wrap4;

		[Token(Token = "0x1700006D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008C2")]
			[Address(RVA = "0xE37A70", Offset = "0xE37A70", VA = "0xE37A70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700006E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008C4")]
			[Address(RVA = "0xE37AD8", Offset = "0xE37AD8", VA = "0xE37AD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0xE34638", Offset = "0xE34638", VA = "0xE34638")]
		[DebuggerHidden]
		public <CR_BuildSpotCheck>d__61(int <>1__state)
		{
		}

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0xE3774C", Offset = "0xE3774C", VA = "0xE3774C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0xE377C0", Offset = "0xE377C0", VA = "0xE377C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008C1")]
		[Address(RVA = "0xE37768", Offset = "0xE37768", VA = "0xE37768")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60008C3")]
		[Address(RVA = "0xE37A78", Offset = "0xE37A78", VA = "0xE37A78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200019D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB154B0", Offset = "0xB154B0")]
	private sealed class <ValidateBuilt>d__70 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerRaft <>4__this;

		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <destructed>5__2;

		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool <doAgain>5__3;

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<Buildable> <toDestroy>5__4;

		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<PlayerBuilt>.Enumerator <>7__wrap4;

		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Buildable <buildable>5__6;

		[Token(Token = "0x1700006F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008C9")]
			[Address(RVA = "0xE3961C", Offset = "0xE3961C", VA = "0xE3961C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000070")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008CB")]
			[Address(RVA = "0xE39684", Offset = "0xE39684", VA = "0xE39684", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008C5")]
		[Address(RVA = "0xE34980", Offset = "0xE34980", VA = "0xE34980")]
		[DebuggerHidden]
		public <ValidateBuilt>d__70(int <>1__state)
		{
		}

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0xE39084", Offset = "0xE39084", VA = "0xE39084", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008C7")]
		[Address(RVA = "0xE390F8", Offset = "0xE390F8", VA = "0xE390F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008C8")]
		[Address(RVA = "0xE390A0", Offset = "0xE390A0", VA = "0xE390A0")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60008CA")]
		[Address(RVA = "0xE39624", Offset = "0xE39624", VA = "0xE39624", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200019E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB154C0", Offset = "0xB154C0")]
	private sealed class <CR_Load>d__89 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlayerRaft <>4__this;

		[Token(Token = "0x40008DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string data;

		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string[] placeAbleData;

		[Token(Token = "0x17000071")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008CF")]
			[Address(RVA = "0xE39014", Offset = "0xE39014", VA = "0xE39014", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000072")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008D1")]
			[Address(RVA = "0xE3907C", Offset = "0xE3907C", VA = "0xE3907C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0xE36D18", Offset = "0xE36D18", VA = "0xE36D18")]
		[DebuggerHidden]
		public <CR_Load>d__89(int <>1__state)
		{
		}

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0xE37AE0", Offset = "0xE37AE0", VA = "0xE37AE0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0xE37AE4", Offset = "0xE37AE4", VA = "0xE37AE4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0xE3901C", Offset = "0xE3901C", VA = "0xE3901C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform sealevel;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PlayerRaft instance;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<PlayerBuilt> builtStuff;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<PlayerBuilt> builtEmpty;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<PlayerInventorySave> playerInventories;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<InventoryContent> defaultInv;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int lastBuildId;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float windDirection;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float windDamping;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector3 windVelocity;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float currentRaftFloatinDirection;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float targetRaftFloatinDirection;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float directionDamping;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float speed;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float maxSpeedWater;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float maxSailSPeed;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float speedDamping;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool buildSpotsDirty;

	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Coroutine validationCoroutine;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Coroutine buildSpotCheckCoroutine;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public List<UpdateSail> sails;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<Anchor> anchors;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private ItemOverTake itemOverTake;

	[Token(Token = "0x40008B1")]
	public const string C_BuildID = "BUILD_ID";

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Action OnBuildGridChanged;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public EnemyManager.EnemySaveData enemyUnlocks;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public LootSpawner.LootSpawnerSaveData lootUnlocks;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private IslandFinder islandFinder;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[SerializeField]
	public IslandWorldPosition mapIslandPositions;

	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	public TinyIslandsWorldPosition tinyIslandPositions;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public LootSpawner lootSpawner;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public bool leavingGame;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float buildSpotCheckInterval;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float buildSpotCheckTimer;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public float windDirectionReset;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Vector3 rotationVelocity;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public float speedVelocity;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Vector3 debug_gloablSailDir;

	[Token(Token = "0x1700006A")]
	public static float Winddirection
	{
		[Token(Token = "0x6000874")]
		[Address(RVA = "0xE30BEC", Offset = "0xE30BEC", VA = "0xE30BEC")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0xE30C90", Offset = "0xE30C90", VA = "0xE30C90")]
	public void updateBuildspots()
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0xE30C9C", Offset = "0xE30C9C", VA = "0xE30C9C")]
	[PunRPC]
	internal void RPC_setBuildSpotsDirty()
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0xE30CA8", Offset = "0xE30CA8", VA = "0xE30CA8")]
	internal void setBuildSpotsDirty()
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0xE30DAC", Offset = "0xE30DAC", VA = "0xE30DAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0xE30F28", Offset = "0xE30F28", VA = "0xE30F28")]
	private void Start()
	{
	}

	[Token(Token = "0x600087A")]
	[Address(RVA = "0xE30FC0", Offset = "0xE30FC0", VA = "0xE30FC0")]
	public void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0xE31304", Offset = "0xE31304", VA = "0xE31304")]
	public Vector3[] getFishSpawnPositions()
	{
		return null;
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0xE31944", Offset = "0xE31944", VA = "0xE31944")]
	internal bool LateUpdateBuild(int id, Transform transform)
	{
		return default(bool);
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0xE31A78", Offset = "0xE31A78", VA = "0xE31A78")]
	public Vector3[] getAllPlattformPoints()
	{
		return null;
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0xE31D64", Offset = "0xE31D64", VA = "0xE31D64")]
	public GridBuildSlotItem[] getAllFloors()
	{
		return null;
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0xE31FA8", Offset = "0xE31FA8", VA = "0xE31FA8")]
	public GridBuildSlotItem getHighestFireFloor()
	{
		return null;
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0xE322D8", Offset = "0xE322D8", VA = "0xE322D8")]
	internal void LogError(string v)
	{
	}

	[Token(Token = "0x6000881")]
	[Address(RVA = "0xE323B4", Offset = "0xE323B4", VA = "0xE323B4")]
	[PunRPC]
	private void RPC_LogError(string msg)
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0xE3241C", Offset = "0xE3241C", VA = "0xE3241C")]
	internal float getFishY()
	{
		return default(float);
	}

	[Token(Token = "0x6000883")]
	[Address(RVA = "0xE3244C", Offset = "0xE3244C", VA = "0xE3244C")]
	[PunRPC]
	private void RPC_DestroyBuild(int ID)
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0xE3268C", Offset = "0xE3268C", VA = "0xE3268C")]
	[PunRPC]
	private void RPC_DestroyBuildViaMaster(int ID)
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0xE32BCC", Offset = "0xE32BCC", VA = "0xE32BCC")]
	internal void DestroyBuild(int id)
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0xE28240", Offset = "0xE28240", VA = "0xE28240")]
	internal void DestroyItem(GameObject go)
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0xE32B38", Offset = "0xE32B38", VA = "0xE32B38")]
	private IEnumerator spawnDrop(InventoryItem item, Vector3 pos)
	{
		return null;
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0xE32CF4", Offset = "0xE32CF4", VA = "0xE32CF4", Slot = "42")]
	public override void OnPlayerEnteredRoom(Player newPlayer)
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0xE2D824", Offset = "0xE2D824", VA = "0xE2D824")]
	public void joined(string nickname, string identifier)
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0xE33030", Offset = "0xE33030", VA = "0xE33030")]
	[PunRPC]
	private void RPC_Joined(string nickname, string identifier)
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0xE33578", Offset = "0xE33578", VA = "0xE33578")]
	private bool SameIdentifier(string playerIdentifier, string identifier)
	{
		return default(bool);
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0xE33C70", Offset = "0xE33C70", VA = "0xE33C70")]
	private void Update()
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0xE34558", Offset = "0xE34558", VA = "0xE34558")]
	private IEnumerator CR_BuildSpotCheck()
	{
		return null;
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0xE34664", Offset = "0xE34664", VA = "0xE34664")]
	internal Vector3 getDirecionalSpeed()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0xE33DA8", Offset = "0xE33DA8", VA = "0xE33DA8")]
	private void updateDirectionAndSpeed()
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0xE348D4", Offset = "0xE348D4", VA = "0xE348D4")]
	private bool IsAnchorDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0xE34750", Offset = "0xE34750", VA = "0xE34750")]
	private UpdateSail getBestSail()
	{
		return null;
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0xE345C8", Offset = "0xE345C8", VA = "0xE345C8")]
	private IEnumerator ValidateBuilt()
	{
		return null;
	}

	[Token(Token = "0x6000893")]
	[Address(RVA = "0xE349AC", Offset = "0xE349AC", VA = "0xE349AC")]
	internal void Craft(PlayerObject playerObject, InventoryItem toCraft)
	{
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0xE34BDC", Offset = "0xE34BDC", VA = "0xE34BDC")]
	internal void CraftInventory(Inventory inventory, InventoryItem toCraft)
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0xE34E08", Offset = "0xE34E08", VA = "0xE34E08")]
	[PunRPC]
	private void RPC_DestroyObject(int viewId)
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0xE34F80", Offset = "0xE34F80", VA = "0xE34F80")]
	[PunRPC]
	private void RPC_Ungrab(int viewId)
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0xE350A8", Offset = "0xE350A8", VA = "0xE350A8")]
	internal void Build(InventoryItem toBuild, Vector3 position, Quaternion rotation)
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0xE35274", Offset = "0xE35274", VA = "0xE35274")]
	[PunRPC]
	private void RPC_BuildMaster(string toBuild, Vector3 position, Quaternion rotation)
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0xE35740", Offset = "0xE35740", VA = "0xE35740")]
	[PunRPC]
	private void RPC_BuildAddClient(int id, string toBuild, Vector3 position, Quaternion rotation)
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0xE35764", Offset = "0xE35764", VA = "0xE35764")]
	private void LocalBuildAdd(int id, string toBuild, Vector3 position, Quaternion rotation)
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0xE35AAC", Offset = "0xE35AAC", VA = "0xE35AAC")]
	[PunRPC]
	private void RPC_CraftMaster(string toCraft, int photonViewId)
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0xE35BE4", Offset = "0xE35BE4", VA = "0xE35BE4")]
	[PunRPC]
	private void RPC_CraftMasterByInventory(string toCraft, int photonViewId)
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0xE354D4", Offset = "0xE354D4", VA = "0xE354D4")]
	private void CheckBuildObject(string item, bool checkGridBuild = true)
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0xE35D0C", Offset = "0xE35D0C", VA = "0xE35D0C", Slot = "54")]
	public string SaveData()
	{
		return null;
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0xE36848", Offset = "0xE36848", VA = "0xE36848")]
	private InventoryItemAtPosition[] getSaveItems()
	{
		return null;
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0xE366A4", Offset = "0xE366A4", VA = "0xE366A4")]
	private PlayerInventorySave[] getPlayerInventories()
	{
		return null;
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0xE36B48", Offset = "0xE36B48", VA = "0xE36B48", Slot = "43")]
	public override void OnPlayerLeftRoom(Player otherPlayer)
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0xE35EA4", Offset = "0xE35EA4", VA = "0xE35EA4")]
	public void updatePlayerInventories()
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0xE36BFC", Offset = "0xE36BFC", VA = "0xE36BFC", Slot = "55")]
	public void LoadCharacterData(string data)
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0xE36C68", Offset = "0xE36C68", VA = "0xE36C68")]
	public void LoadData(string data, string[] placeAbleData)
	{
	}

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0xE36C94", Offset = "0xE36C94", VA = "0xE36C94")]
	private IEnumerator CR_Load(string data, string[] placeAbleData)
	{
		return null;
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0xE36D44", Offset = "0xE36D44", VA = "0xE36D44")]
	private void CheckUnlocks()
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0xE335D4", Offset = "0xE335D4", VA = "0xE335D4")]
	private void setPlayerInventory(string playername, string identifier, string inventory)
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0xE36DE4", Offset = "0xE36DE4", VA = "0xE36DE4")]
	public void DestroyAllBuilt()
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0xE36F8C", Offset = "0xE36F8C", VA = "0xE36F8C")]
	[PunRPC]
	private void Rpc_RequestServerSave(PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0xE370AC", Offset = "0xE370AC", VA = "0xE370AC")]
	[PunRPC]
	private void Rpc_ReceiveServerSave(string saveData)
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0xE3712C", Offset = "0xE3712C", VA = "0xE3712C")]
	public void AddAnchor(Anchor newAnchor)
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0xE371C4", Offset = "0xE371C4", VA = "0xE371C4")]
	public void RemoveAnchor(Anchor anchorToRemove)
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0xE3722C", Offset = "0xE3722C", VA = "0xE3722C")]
	public Vector2 CalculateRaftSize()
	{
		return default(Vector2);
	}

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0xE373C4", Offset = "0xE373C4", VA = "0xE373C4")]
	public Vector2 CalculateCenterPoint()
	{
		return default(Vector2);
	}

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0xE3749C", Offset = "0xE3749C", VA = "0xE3749C", Slot = "56")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0xE374F0", Offset = "0xE374F0", VA = "0xE374F0")]
	public PlayerRaft()
	{
	}
}
[Token(Token = "0x200019F")]
public class PlayerRights : MonoBehaviour
{
	[Token(Token = "0x20001A0")]
	public enum PlayerRight
	{
		[Token(Token = "0x40008E1")]
		GrabThings,
		[Token(Token = "0x40008E2")]
		UseAllChests,
		[Token(Token = "0x40008E3")]
		UsePublicChests,
		[Token(Token = "0x40008E4")]
		UseHammer,
		[Token(Token = "0x40008E5")]
		BuildStuff
	}

	[Token(Token = "0x40008DD")]
	private const string C_RIGHT_PREFIX = "PlayerRight_";

	[Token(Token = "0x40008DE")]
	private const string C_RIGHT_InventoryPublic = "InventoryPublic_";

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Dictionary<PlayerRight, bool> prepRoomRights;

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0xE3999C", Offset = "0xE3999C", VA = "0xE3999C")]
	public static bool hasRight(PlayerRight right)
	{
		return default(bool);
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0xE2C87C", Offset = "0xE2C87C", VA = "0xE2C87C")]
	public static bool hasRight(Player player, PlayerRight right)
	{
		return default(bool);
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0xE3018C", Offset = "0xE3018C", VA = "0xE3018C")]
	public static void setRight(Player player, PlayerRight right, bool value)
	{
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0xE39A34", Offset = "0xE39A34", VA = "0xE39A34")]
	internal static object getKey(PlayerRight right)
	{
		return null;
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0xE39AD4", Offset = "0xE39AD4", VA = "0xE39AD4")]
	internal static string getKey(Inventory inventory)
	{
		return null;
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0xE39B6C", Offset = "0xE39B6C", VA = "0xE39B6C")]
	internal static void setInventoryPublic(Inventory inventory, bool isPublic)
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0xE39C80", Offset = "0xE39C80", VA = "0xE39C80")]
	internal static bool isInventoryPublic(Inventory inventory)
	{
		return default(bool);
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0xE39E28", Offset = "0xE39E28", VA = "0xE39E28")]
	internal static bool hasRightOnInventory(Inventory inventory)
	{
		return default(bool);
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0xE39EC0", Offset = "0xE39EC0", VA = "0xE39EC0")]
	internal static bool hasRightOnInventory(Inventory inventory, Player player)
	{
		return default(bool);
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0xE2CBFC", Offset = "0xE2CBFC", VA = "0xE2CBFC")]
	public static bool getDefaultRight(PlayerRight right)
	{
		return default(bool);
	}

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0xE302F8", Offset = "0xE302F8", VA = "0xE302F8")]
	public static void setDefaultRight(PlayerRight right, bool defaultValue)
	{
	}

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0xE39FEC", Offset = "0xE39FEC", VA = "0xE39FEC")]
	internal static void ApplyPrepProps()
	{
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0xE3A124", Offset = "0xE3A124", VA = "0xE3A124")]
	public PlayerRights()
	{
	}
}
[Token(Token = "0x20001A1")]
public class PlayerprefsDebug : MonoBehaviourPun
{
	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string prefs;

	[Token(Token = "0x60008E0")]
	[Address(RVA = "0xE3A77C", Offset = "0xE3A77C", VA = "0xE3A77C")]
	private void Update()
	{
	}

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0xE3AB24", Offset = "0xE3AB24", VA = "0xE3AB24")]
	public PlayerprefsDebug()
	{
	}
}
[Token(Token = "0x20001A2")]
public class PortraitProvider : MonoBehaviour
{
	[Token(Token = "0x20001A3")]
	public class PhotoSession
	{
		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnityAction<Sprite> callbackDone;

		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlayerObject player;

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0xE3B31C", Offset = "0xE3B31C", VA = "0xE3B31C")]
		public PhotoSession()
		{
		}
	}

	[Token(Token = "0x20001A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB154D0", Offset = "0xB154D0")]
	private sealed class <RenderChar>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40008F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PortraitProvider <>4__this;

		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PlayerObject player;

		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityAction<Sprite> callbackDone;

		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RenderTexture <portrait_RT>5__2;

		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Color <oldEquator>5__3;

		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Color <oldGround>5__4;

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Color <oldSky>5__5;

		[Token(Token = "0x17000073")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60008EB")]
			[Address(RVA = "0xE3B8F8", Offset = "0xE3B8F8", VA = "0xE3B8F8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000074")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60008ED")]
			[Address(RVA = "0xE3B960", Offset = "0xE3B960", VA = "0xE3B960", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0xE3B43C", Offset = "0xE3B43C", VA = "0xE3B43C")]
		[DebuggerHidden]
		public <RenderChar>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0xE3B4E0", Offset = "0xE3B4E0", VA = "0xE3B4E0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0xE3B4E4", Offset = "0xE3B4E4", VA = "0xE3B4E4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0xE3B900", Offset = "0xE3B900", VA = "0xE3B900", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Queue<PhotoSession> photoSessions;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int size;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Camera photocam;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject photoBoothRig;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CustomizedCharacter photoChar;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Coroutine runningSession;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static PortraitProvider instance;

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0xE3B280", Offset = "0xE3B280", VA = "0xE3B280")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0xE2E5A0", Offset = "0xE2E5A0", VA = "0xE2E5A0")]
	public void createPortrait(UnityAction<Sprite> callbackDone, PlayerObject player)
	{
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0xE3B324", Offset = "0xE3B324", VA = "0xE3B324")]
	private void Update()
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0xE3B3B8", Offset = "0xE3B3B8", VA = "0xE3B3B8")]
	private IEnumerator RenderChar(UnityAction<Sprite> callbackDone, PlayerObject player)
	{
		return null;
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0xE3B468", Offset = "0xE3B468", VA = "0xE3B468")]
	public PortraitProvider()
	{
	}
}
[Token(Token = "0x20001A5")]
public class PositionAt : MonoBehaviour
{
	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform positionFrom;

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0xE3B968", Offset = "0xE3B968", VA = "0xE3B968")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0xE3B9E8", Offset = "0xE3B9E8", VA = "0xE3B9E8")]
	public PositionAt()
	{
	}
}
[Token(Token = "0x20001A6")]
public class PreviewImageProvider : MonoBehaviour
{
	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 cameraPosition;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float camDistance;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float camUp;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 rotation;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture sprite;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 lightRot0;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 lightRot1;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector3 pos;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public Color lightColor0;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lightIntensity0;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Color lightColor1;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float lightIntensity1;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Color clearColor;

	[Token(Token = "0x60008F0")]
	[Address(RVA = "0xE3BDCC", Offset = "0xE3BDCC", VA = "0xE3BDCC")]
	public PreviewImageProvider()
	{
	}
}
[Token(Token = "0x20001A7")]
public class PreviewInfo : MonoBehaviour
{
	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Collider, bool> collidedLastUpdate;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Collider> currentlyColliding;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool lastTimeColliding;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public LayerMask layerMask;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LayerMask layerMaskNoBuild;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Renderer rend;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Renderer[] additionalRenderers;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool onValidSpot;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Buildable buildable;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	internal GridBuildSlotType slotType;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal bool onlyGroundFloor;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GridBuildSlot gbs;

	[Token(Token = "0x60008F1")]
	[Address(RVA = "0xE3BEFC", Offset = "0xE3BEFC", VA = "0xE3BEFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0xE3BF8C", Offset = "0xE3BF8C", VA = "0xE3BF8C")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0xE3C194", Offset = "0xE3C194", VA = "0xE3C194")]
	public bool canBeBuildOnDiagonal()
	{
		return default(bool);
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0xE3C22C", Offset = "0xE3C22C", VA = "0xE3C22C")]
	private void Update()
	{
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0xE3C3C8", Offset = "0xE3C3C8", VA = "0xE3C3C8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0xE3C34C", Offset = "0xE3C34C", VA = "0xE3C34C")]
	internal bool isColliding()
	{
		return default(bool);
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0xE3C884", Offset = "0xE3C884", VA = "0xE3C884")]
	internal void setGridBuildSlot(GridBuildSlot gridSlot)
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0xE3C760", Offset = "0xE3C760", VA = "0xE3C760")]
	internal bool canBuild()
	{
		return default(bool);
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0xE3C88C", Offset = "0xE3C88C", VA = "0xE3C88C")]
	private bool check()
	{
		return default(bool);
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0xE3C938", Offset = "0xE3C938", VA = "0xE3C938")]
	public PreviewInfo()
	{
	}
}
[Token(Token = "0x20001A8")]
public class PumpStick : MonoBehaviour
{
	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float minStickPos;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float maxStickPos;

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0xE3CAB4", Offset = "0xE3CAB4", VA = "0xE3CAB4")]
	public void SetPos(float percent)
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0xE3CB48", Offset = "0xE3CB48", VA = "0xE3CB48")]
	private float GetRelativeDistance(float percent)
	{
		return default(float);
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0xE3CB64", Offset = "0xE3CB64", VA = "0xE3CB64")]
	public PumpStick()
	{
	}
}
[Token(Token = "0x20001A9")]
public class TimeSave
{
	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int daysSpent;

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0xE4AF30", Offset = "0xE4AF30", VA = "0xE4AF30")]
	public TimeSave()
	{
	}
}
[Serializable]
[Token(Token = "0x20001AA")]
public class MyIntEvent : UnityEvent<int>
{
	[Token(Token = "0x60008FF")]
	[Address(RVA = "0xD92964", Offset = "0xD92964", VA = "0xD92964")]
	public MyIntEvent()
	{
	}
}
[Token(Token = "0x20001AB")]
public class RaftTime : MonoBehaviourPunCallbacks, IPunObservable, ISaveAble
{
	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private int daysSpent;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float lastProgress;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float dayTimeShift;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	public float dayLengthInMinutes2;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MyIntEvent onDayChanged;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static RaftTime m_instance;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	internal double gameStartTime;

	[Token(Token = "0x17000075")]
	private float dayProgressVisual
	{
		[Token(Token = "0x6000900")]
		[Address(RVA = "0xE3DD04", Offset = "0xE3DD04", VA = "0xE3DD04")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000076")]
	public float dayProgress
	{
		[Token(Token = "0x6000901")]
		[Address(RVA = "0xE3DE48", Offset = "0xE3DE48", VA = "0xE3DE48")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000077")]
	public static RaftTime instance
	{
		[Token(Token = "0x6000902")]
		[Address(RVA = "0xE3DE4C", Offset = "0xE3DE4C", VA = "0xE3DE4C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0xE3DF18", Offset = "0xE3DF18", VA = "0xE3DF18")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0xE3DD84", Offset = "0xE3DD84", VA = "0xE3DD84")]
	public static float getDayProgress()
	{
		return default(float);
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0xE3DF84", Offset = "0xE3DF84", VA = "0xE3DF84")]
	public static double getTime()
	{
		return default(double);
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0xE3E068", Offset = "0xE3E068", VA = "0xE3E068")]
	private void Update()
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0xE3E0AC", Offset = "0xE3E0AC", VA = "0xE3E0AC")]
	private void DayChanged()
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0xE3E110", Offset = "0xE3E110", VA = "0xE3E110")]
	public int DaysSpent()
	{
		return default(int);
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0xE3E1A4", Offset = "0xE3E1A4", VA = "0xE3E1A4", Slot = "54")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0xE3E234", Offset = "0xE3E234", VA = "0xE3E234", Slot = "55")]
	public string SaveData()
	{
		return null;
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0xE3E2A8", Offset = "0xE3E2A8", VA = "0xE3E2A8", Slot = "56")]
	public void LoadCharacterData(string data)
	{
	}

	[Token(Token = "0x600090C")]
	[Address(RVA = "0xE3E33C", Offset = "0xE3E33C", VA = "0xE3E33C")]
	public void ShiftTime(float value)
	{
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0xE3E448", Offset = "0xE3E448", VA = "0xE3E448")]
	[PunRPC]
	private void Rpc_ShiftTime(float value)
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0xE3E450", Offset = "0xE3E450", VA = "0xE3E450")]
	public RaftTime()
	{
	}
}
[Serializable]
[Token(Token = "0x20001AC")]
public abstract class RandomListEntryBase
{
	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float weight;

	[Token(Token = "0x600090F")]
	[Address(RVA = "0xE3E934", Offset = "0xE3E934", VA = "0xE3E934")]
	protected RandomListEntryBase()
	{
	}
}
[Serializable]
[Token(Token = "0x20001AD")]
public class RandomListEntryString : RandomListEntryBase
{
	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string item;

	[Token(Token = "0x6000910")]
	[Address(RVA = "0xE3E974", Offset = "0xE3E974", VA = "0xE3E974")]
	public RandomListEntryString()
	{
	}
}
[Serializable]
[Token(Token = "0x20001AE")]
public class RandomListEntryGameObject : RandomListEntryBase
{
	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject item;

	[Token(Token = "0x6000911")]
	[Address(RVA = "0xE3E954", Offset = "0xE3E954", VA = "0xE3E954")]
	public RandomListEntryGameObject()
	{
	}
}
[Serializable]
[Token(Token = "0x20001AF")]
public class RandomListEntryInventory : RandomListEntryBase
{
	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InventoryItem item;

	[Token(Token = "0x6000912")]
	[Address(RVA = "0xE3E964", Offset = "0xE3E964", VA = "0xE3E964")]
	public RandomListEntryInventory()
	{
	}
}
[Serializable]
[Token(Token = "0x20001B0")]
public class RandomListEntryEnemy : RandomListEntryBase
{
	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Enemy item;

	[Token(Token = "0x6000913")]
	[Address(RVA = "0xE3E944", Offset = "0xE3E944", VA = "0xE3E944")]
	public RandomListEntryEnemy()
	{
	}
}
[Serializable]
[Token(Token = "0x20001B1")]
public class RandomListString : RandomListBase
{
	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<RandomListEntryString> list;

	[Token(Token = "0x6000914")]
	[Address(RVA = "0xE3EAF4", Offset = "0xE3EAF4", VA = "0xE3EAF4", Slot = "4")]
	public override float[] getWeights()
	{
		return null;
	}

	[Token(Token = "0x6000915")]
	[Address(RVA = "0xE3EBD8", Offset = "0xE3EBD8", VA = "0xE3EBD8")]
	public RandomListString()
	{
	}
}
[Serializable]
[Token(Token = "0x20001B2")]
public class RandomList : RandomListBase
{
	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<RandomListEntryGameObject> list;

	[Token(Token = "0x6000916")]
	[Address(RVA = "0xE3E460", Offset = "0xE3E460", VA = "0xE3E460", Slot = "4")]
	public override float[] getWeights()
	{
		return null;
	}

	[Token(Token = "0x6000917")]
	[Address(RVA = "0xE3E544", Offset = "0xE3E544", VA = "0xE3E544")]
	public GameObject getRandomEntry([Optional] System.Random randomStream)
	{
		return null;
	}

	[Token(Token = "0x6000918")]
	[Address(RVA = "0xE3E6B8", Offset = "0xE3E6B8", VA = "0xE3E6B8")]
	public RandomList()
	{
	}
}
[Serializable]
[Token(Token = "0x20001B3")]
public class RandomListInventory : RandomListBase
{
	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<RandomListEntryInventory> list;

	[Token(Token = "0x6000919")]
	[Address(RVA = "0xE3E984", Offset = "0xE3E984", VA = "0xE3E984", Slot = "4")]
	public override float[] getWeights()
	{
		return null;
	}

	[Token(Token = "0x600091A")]
	[Address(RVA = "0xE3EA68", Offset = "0xE3EA68", VA = "0xE3EA68")]
	public InventoryItem getRandomEntry([Optional] System.Random randomStream)
	{
		return null;
	}

	[Token(Token = "0x600091B")]
	[Address(RVA = "0xE3EAEC", Offset = "0xE3EAEC", VA = "0xE3EAEC")]
	public RandomListInventory()
	{
	}
}
[Serializable]
[Token(Token = "0x20001B4")]
public class RandomListEnemy : RandomListBase
{
	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<RandomListEntryEnemy> list;

	[Token(Token = "0x600091C")]
	[Address(RVA = "0xE3E7C4", Offset = "0xE3E7C4", VA = "0xE3E7C4", Slot = "4")]
	public override float[] getWeights()
	{
		return null;
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0xE3E8A8", Offset = "0xE3E8A8", VA = "0xE3E8A8")]
	public Enemy getRandomEntry([Optional] System.Random randomStream)
	{
		return null;
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0xE3E92C", Offset = "0xE3E92C", VA = "0xE3E92C")]
	public RandomListEnemy()
	{
	}
}
[Serializable]
[Token(Token = "0x20001B5")]
public abstract class RandomListBase
{
	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static System.Random m_defaultStream;

	[Token(Token = "0x17000078")]
	private static System.Random defaultStream
	{
		[Token(Token = "0x6000920")]
		[Address(RVA = "0xE3E6C8", Offset = "0xE3E6C8", VA = "0xE3E6C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000079")]
	public float accumulatedWeight
	{
		[Token(Token = "0x6000921")]
		[Address(RVA = "0xE3E750", Offset = "0xE3E750", VA = "0xE3E750")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x600091F")]
	public abstract float[] getWeights();

	[Token(Token = "0x6000922")]
	[Address(RVA = "0xE3E5C8", Offset = "0xE3E5C8", VA = "0xE3E5C8")]
	public int getRandomItemIndex([Optional] System.Random randomStream)
	{
		return default(int);
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0xE3E6C0", Offset = "0xE3E6C0", VA = "0xE3E6C0")]
	protected RandomListBase()
	{
	}
}
[Token(Token = "0x20001B6")]
public class ResurectionZone : MonoBehaviour
{
	[Token(Token = "0x20001B7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB154E0", Offset = "0xB154E0")]
	private sealed class <>c__DisplayClass0_0
	{
		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Resurector res;

		[Token(Token = "0x6000926")]
		[Address(RVA = "0xDC3990", Offset = "0xDC3990", VA = "0xDC3990")]
		public <>c__DisplayClass0_0()
		{
		}

		[Token(Token = "0x6000927")]
		[Address(RVA = "0xDC39A0", Offset = "0xDC39A0", VA = "0xDC39A0")]
		internal bool <OnTriggerStay>b__0(PlayerObject p)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0xDC3628", Offset = "0xDC3628", VA = "0xDC3628")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0xDC3998", Offset = "0xDC3998", VA = "0xDC3998")]
	public ResurectionZone()
	{
	}
}
[Token(Token = "0x20001B8")]
public class Resurector : MonoBehaviourPun, IPunInstantiateMagicCallback
{
	[Token(Token = "0x4000928")]
	public const string C_Player = "PlayerIdentifier";

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int viewId;

	[Token(Token = "0x6000928")]
	[Address(RVA = "0xDC39EC", Offset = "0xDC39EC", VA = "0xDC39EC", Slot = "4")]
	public void OnPhotonInstantiate(PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0xDC3AB0", Offset = "0xDC3AB0", VA = "0xDC3AB0")]
	public Resurector()
	{
	}
}
[Token(Token = "0x20001B9")]
public class RotateByPump : MonoBehaviour
{
	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float speed;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Waterwheel pump;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform wheel;

	[Token(Token = "0x600092A")]
	[Address(RVA = "0xDC4988", Offset = "0xDC4988", VA = "0xDC4988")]
	private void Update()
	{
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0xDC49E8", Offset = "0xDC49E8", VA = "0xDC49E8")]
	public RotateByPump()
	{
	}
}
[Token(Token = "0x20001BA")]
[ExecuteInEditMode]
public class RotateToNormailzedValue : MonoBehaviour
{
	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 axis;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float multiplicator;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BaseRotator valueProvider;

	[Token(Token = "0x600092C")]
	[Address(RVA = "0xDC49F0", Offset = "0xDC49F0", VA = "0xDC49F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0xDC4ABC", Offset = "0xDC4ABC", VA = "0xDC4ABC")]
	private void Update()
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0xDC4BA8", Offset = "0xDC4BA8", VA = "0xDC4BA8")]
	public RotateToNormailzedValue()
	{
	}
}
[Token(Token = "0x20001BB")]
public class RotationSpeedUI : MonoBehaviour
{
	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Slider slider;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI text_value;

	[Token(Token = "0x600092F")]
	[Address(RVA = "0xDC687C", Offset = "0xDC687C", VA = "0xDC687C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0xDC69C0", Offset = "0xDC69C0", VA = "0xDC69C0")]
	private void Changed()
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0xDC6B18", Offset = "0xDC6B18", VA = "0xDC6B18")]
	public void SpeedChanged(float value)
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0xDC6B4C", Offset = "0xDC6B4C", VA = "0xDC6B4C")]
	public RotationSpeedUI()
	{
	}
}
[Token(Token = "0x20001BC")]
public class Rotator : MonoBehaviour
{
	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x6000933")]
	[Address(RVA = "0xDC6B54", Offset = "0xDC6B54", VA = "0xDC6B54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0xDC6C68", Offset = "0xDC6C68", VA = "0xDC6C68")]
	public Rotator()
	{
	}
}
[Token(Token = "0x20001BD")]
public class RotatorEllipse : MonoBehaviour
{
	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float ellipseSpeed;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float swimmspeed;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float steerStrength;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float a;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float b;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector2 center;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float addedDistance;

	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float timeSinceBeginning;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 velocity;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 ellipsePoint;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool first;

	[Token(Token = "0x6000935")]
	[Address(RVA = "0xDC6C78", Offset = "0xDC6C78", VA = "0xDC6C78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0xDC6D80", Offset = "0xDC6D80", VA = "0xDC6D80")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0xDC6E74", Offset = "0xDC6E74", VA = "0xDC6E74")]
	private void SetCircleCoordinates()
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0xDC7080", Offset = "0xDC7080", VA = "0xDC7080")]
	public void Update()
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0xDC6F98", Offset = "0xDC6F98", VA = "0xDC6F98")]
	public Vector2 LerpEllipse(float horizontalAxis, float verticalAxis, float time, Vector2 center, float duration)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0xDC73C8", Offset = "0xDC73C8", VA = "0xDC73C8")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600093B")]
	[Address(RVA = "0xDC7408", Offset = "0xDC7408", VA = "0xDC7408")]
	public RotatorEllipse()
	{
	}
}
[Serializable]
[Token(Token = "0x20001BE")]
public class PlayerInventorySave
{
	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string playername;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string playerIdentifier;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string inventory;

	[Token(Token = "0x600093C")]
	[Address(RVA = "0xE2ADA4", Offset = "0xE2ADA4", VA = "0xE2ADA4")]
	public PlayerInventorySave()
	{
	}
}
[Serializable]
[Token(Token = "0x20001BF")]
public class SaveData
{
	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string mainInfo;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string subInfo;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string raftData;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string raftTime;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string[] placeAbleData;

	[Token(Token = "0x600093D")]
	[Address(RVA = "0xDC81AC", Offset = "0xDC81AC", VA = "0xDC81AC")]
	public SaveData()
	{
	}
}
[Token(Token = "0x20001C0")]
public class SaveManager : MonoBehaviour
{
	[Token(Token = "0x20001C1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15500", Offset = "0xB15500")]
	private sealed class <>c__DisplayClass23_0
	{
		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int index;

		[Token(Token = "0x600094E")]
		[Address(RVA = "0xDC9404", Offset = "0xDC9404", VA = "0xDC9404")]
		public <>c__DisplayClass23_0()
		{
		}

		[Token(Token = "0x600094F")]
		[Address(RVA = "0xDC9F60", Offset = "0xDC9F60", VA = "0xDC9F60")]
		internal bool <EreaseSave>b__0(SaveData val, int idx)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string MainInfo;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string DetailInfo;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayerRaft raft;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RaftTime raftTime;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SaveData[] saveData;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int activeSaveGame;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public static bool createNewSave;

	[Token(Token = "0x400094D")]
	private const string C_SaveGame = "SAVEGAME";

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float nextSave;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float autoSaveInterval;

	[Token(Token = "0x600093E")]
	[Address(RVA = "0xDC81B4", Offset = "0xDC81B4", VA = "0xDC81B4")]
	public static SaveData[] getAllSaveGames()
	{
		return null;
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0xDC8290", Offset = "0xDC8290", VA = "0xDC8290")]
	private void Start()
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0xDC863C", Offset = "0xDC863C", VA = "0xDC863C")]
	private void FetchPlayerPrefs()
	{
	}

	[Token(Token = "0x6000941")]
	[Address(RVA = "0xDC86A4", Offset = "0xDC86A4", VA = "0xDC86A4")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000942")]
	[Address(RVA = "0xDC8B98", Offset = "0xDC8B98", VA = "0xDC8B98")]
	private void OnApplicationPause(bool pause)
	{
	}

	[Token(Token = "0x6000943")]
	[Address(RVA = "0xDC8730", Offset = "0xDC8730", VA = "0xDC8730")]
	public void Save()
	{
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0xDC8C44", Offset = "0xDC8C44", VA = "0xDC8C44")]
	private bool BuildStuffStillThere()
	{
		return default(bool);
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0xDC8548", Offset = "0xDC8548", VA = "0xDC8548")]
	private void Load(SaveData saveGame)
	{
	}

	[Token(Token = "0x6000946")]
	[Address(RVA = "0xDC8D5C", Offset = "0xDC8D5C", VA = "0xDC8D5C")]
	private void RequestServerSave()
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0xDC8E70", Offset = "0xDC8E70", VA = "0xDC8E70")]
	internal void saveSeverSave(string receivedSave)
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0xDC91F8", Offset = "0xDC91F8", VA = "0xDC91F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0xDC92E4", Offset = "0xDC92E4", VA = "0xDC92E4")]
	internal static void EreaseSave(int index)
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0xDC940C", Offset = "0xDC940C", VA = "0xDC940C")]
	public static string getRandomName()
	{
		return null;
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0xDC9E28", Offset = "0xDC9E28", VA = "0xDC9E28")]
	internal string getActiveSave()
	{
		return null;
	}

	[Token(Token = "0x600094C")]
	[Address(RVA = "0xDC9ECC", Offset = "0xDC9ECC", VA = "0xDC9ECC")]
	public SaveManager()
	{
	}
}
[Token(Token = "0x20001C2")]
[ExecuteInEditMode]
public class ScaleToNormailzedValue : MonoBehaviour
{
	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 passiveAxises;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 activeaxis;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float minValue;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float maxValue;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BaseRotator valueProvider;

	[Token(Token = "0x6000950")]
	[Address(RVA = "0xDCA36C", Offset = "0xDCA36C", VA = "0xDCA36C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0xDCA438", Offset = "0xDCA438", VA = "0xDCA438")]
	private void Update()
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0xDCA574", Offset = "0xDCA574", VA = "0xDCA574")]
	public ScaleToNormailzedValue()
	{
	}
}
[Token(Token = "0x20001C3")]
public class GameTime : MonoBehaviour
{
	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameTime Instance;

	[Token(Token = "0x1700007A")]
	public DateTime RealTime
	{
		[Token(Token = "0x6000953")]
		[Address(RVA = "0xEC194C", Offset = "0xEC194C", VA = "0xEC194C")]
		get
		{
			return default(DateTime);
		}
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0xEC19AC", Offset = "0xEC19AC", VA = "0xEC19AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000955")]
	[Address(RVA = "0xEC1A48", Offset = "0xEC1A48", VA = "0xEC1A48")]
	public GameTime()
	{
	}
}
[Serializable]
[Token(Token = "0x20001C4")]
public class Season
{
	[Serializable]
	[Token(Token = "0x20001C5")]
	public class MyDate
	{
		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int day;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int month;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DateTime Date;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private GameTime gameTime;

		[Token(Token = "0x6000959")]
		[Address(RVA = "0xDCA69C", Offset = "0xDCA69C", VA = "0xDCA69C")]
		public void Init()
		{
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0xDCA800", Offset = "0xDCA800", VA = "0xDCA800")]
		private void CreateDate()
		{
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0xDCA8A4", Offset = "0xDCA8A4", VA = "0xDCA8A4")]
		public MyDate()
		{
		}
	}

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MyDate startDate;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MyDate endDate;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool spawnSeasonBalloon;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<RandomListEntryGameObject> balloons;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool spawnFloatable;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<RandomListEntryGameObject> floatables;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool weatherConditions;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ParticleSystem weather;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private GameTime gameTime;

	[Token(Token = "0x6000956")]
	[Address(RVA = "0xDCA614", Offset = "0xDCA614", VA = "0xDCA614")]
	public void Init()
	{
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0xDCA6F8", Offset = "0xDCA6F8", VA = "0xDCA6F8")]
	public bool IsSeasonRunning()
	{
		return default(bool);
	}

	[Token(Token = "0x6000958")]
	[Address(RVA = "0xDCA7F8", Offset = "0xDCA7F8", VA = "0xDCA7F8")]
	public Season()
	{
	}
}
[Token(Token = "0x20001C6")]
public abstract class SeasonAction : MonoBehaviour
{
	[Token(Token = "0x600095C")]
	public abstract void Activate();

	[Token(Token = "0x600095D")]
	[Address(RVA = "0xDCA8AC", Offset = "0xDCA8AC", VA = "0xDCA8AC")]
	protected SeasonAction()
	{
	}
}
[Token(Token = "0x20001C7")]
public class SeasonActionGameObject : SeasonAction
{
	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject seasonObject;

	[Token(Token = "0x600095E")]
	[Address(RVA = "0xDCA8B4", Offset = "0xDCA8B4", VA = "0xDCA8B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0xDCA8D4", Offset = "0xDCA8D4", VA = "0xDCA8D4", Slot = "4")]
	public override void Activate()
	{
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0xDCA8F4", Offset = "0xDCA8F4", VA = "0xDCA8F4")]
	public SeasonActionGameObject()
	{
	}
}
[Token(Token = "0x20001C8")]
public class SeasonActionGameObjectSwap : SeasonAction
{
	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject seasonObject;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject normalObject;

	[Token(Token = "0x6000961")]
	[Address(RVA = "0xDCA8FC", Offset = "0xDCA8FC", VA = "0xDCA8FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000962")]
	[Address(RVA = "0xDCA940", Offset = "0xDCA940", VA = "0xDCA940", Slot = "4")]
	public override void Activate()
	{
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0xDCA984", Offset = "0xDCA984", VA = "0xDCA984")]
	public SeasonActionGameObjectSwap()
	{
	}
}
[Token(Token = "0x20001C9")]
public class SeasonManager : MonoBehaviour
{
	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Season> seasons;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button craftingCaterorySeasons;

	[Token(Token = "0x6000964")]
	[Address(RVA = "0xDCA98C", Offset = "0xDCA98C", VA = "0xDCA98C")]
	public void Start()
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0xDCAA24", Offset = "0xDCAA24", VA = "0xDCAA24")]
	private void CheckSeasons()
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0xDCAAA0", Offset = "0xDCAAA0", VA = "0xDCAAA0")]
	public Season GetSeasonByName(string name)
	{
		return null;
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0xDCABCC", Offset = "0xDCABCC", VA = "0xDCABCC")]
	public bool IsSeasonRunning(string name)
	{
		return default(bool);
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0xDCABE8", Offset = "0xDCABE8", VA = "0xDCABE8")]
	public SeasonManager()
	{
	}
}
[Token(Token = "0x20001CA")]
public class SeasonModification : MonoBehaviour
{
	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string season;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<SeasonAction> seasonActions;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SeasonManager manager;

	[Token(Token = "0x6000969")]
	[Address(RVA = "0xDCABF0", Offset = "0xDCABF0", VA = "0xDCABF0")]
	private void Start()
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0xDCAC88", Offset = "0xDCAC88", VA = "0xDCAC88")]
	private void ActivateActions()
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0xDCAD24", Offset = "0xDCAD24", VA = "0xDCAD24")]
	public SeasonModification()
	{
	}
}
[Token(Token = "0x20001CB")]
public class UserSettingsStore : MonoBehaviour
{
	[Token(Token = "0x600096C")]
	[Address(RVA = "0xE17B60", Offset = "0xE17B60", VA = "0xE17B60")]
	public UserSettingsStore()
	{
	}
}
[Token(Token = "0x20001CC")]
public class SettingsForPlayer : MonoBehaviour
{
	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayerObject player;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text playername;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text ping;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Toggle mute;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Slider volumeSlider;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Image portrait;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<GameObject> masterButtons;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private UpdateRate pingUpdate;

	[Token(Token = "0x600096D")]
	[Address(RVA = "0xDCAD2C", Offset = "0xDCAD2C", VA = "0xDCAD2C")]
	public void setPlayer(PlayerObject player)
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0xDCAF8C", Offset = "0xDCAF8C", VA = "0xDCAF8C")]
	private void SetMasterButtons(bool active)
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0xDCAEF0", Offset = "0xDCAEF0", VA = "0xDCAEF0")]
	private bool isSelf()
	{
		return default(bool);
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0xDCB048", Offset = "0xDCB048", VA = "0xDCB048")]
	private void Update()
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0xDCB13C", Offset = "0xDCB13C", VA = "0xDCB13C")]
	public void SetMute(bool b)
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0xDCB248", Offset = "0xDCB248", VA = "0xDCB248")]
	public void setVolume(float volume)
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0xDCB2F0", Offset = "0xDCB2F0", VA = "0xDCB2F0")]
	public void Kick()
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0xDCB370", Offset = "0xDCB370", VA = "0xDCB370")]
	public SettingsForPlayer()
	{
	}
}
[Token(Token = "0x20001CD")]
public class ShowHideEffect : MonoBehaviour
{
	[Token(Token = "0x20001CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15520", Offset = "0xB15520")]
	private sealed class <showHide>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool show;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ShowHideEffect <>4__this;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AnimationCurve <curve>5__2;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 <startSize>5__3;

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 <endSize>5__4;

		[Token(Token = "0x1700007B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600097E")]
			[Address(RVA = "0xDD2764", Offset = "0xDD2764", VA = "0xDD2764", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700007C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000980")]
			[Address(RVA = "0xDD27CC", Offset = "0xDD27CC", VA = "0xDD27CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0xDD2404", Offset = "0xDD2404", VA = "0xDD2404")]
		[DebuggerHidden]
		public <showHide>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x600097C")]
		[Address(RVA = "0xDD2440", Offset = "0xDD2440", VA = "0xDD2440", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600097D")]
		[Address(RVA = "0xDD2444", Offset = "0xDD2444", VA = "0xDD2444", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600097F")]
		[Address(RVA = "0xDD276C", Offset = "0xDD276C", VA = "0xDD276C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float progress;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float showHideDuration;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool startedHide;

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool startedShow;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve showCurve;

	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve hideCurve;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Coroutine cr;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip showSound;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip hideSound;

	[Token(Token = "0x6000975")]
	[Address(RVA = "0xDD22A4", Offset = "0xDD22A4", VA = "0xDD22A4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0xDD22FC", Offset = "0xDD22FC", VA = "0xDD22FC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000977")]
	[Address(RVA = "0xDD22AC", Offset = "0xDD22AC", VA = "0xDD22AC")]
	public void show()
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0xDD23B4", Offset = "0xDD23B4", VA = "0xDD23B4")]
	public void hide()
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0xDD2330", Offset = "0xDD2330", VA = "0xDD2330")]
	private IEnumerator showHide(bool show)
	{
		return null;
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0xDD2430", Offset = "0xDD2430", VA = "0xDD2430")]
	public ShowHideEffect()
	{
	}
}
[Token(Token = "0x20001CF")]
public class ShowMenu : ControllerInput
{
	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public InputHelpers.Button menuButton;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public InteractionState menuButtonState;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject menu;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public CopyLocalPose poser;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	internal bool requiresAxisClick;

	[Token(Token = "0x6000981")]
	[Address(RVA = "0xDD27D4", Offset = "0xDD27D4", VA = "0xDD27D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0xDD2A08", Offset = "0xDD2A08", VA = "0xDD2A08")]
	public ShowMenu()
	{
	}
}
[Token(Token = "0x20001D0")]
public class SlingShot : MonoBehaviourPun
{
	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform pocket;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform forwardTarget;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 pullDistance;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool isPulled;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float MaxDistance;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private XRController controller;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 origPos;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float dist;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float bulletSpeed;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Bullet bulletPrefab;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public AudioClip shootClip;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public InventoryItem ammo;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform ammoInPocketVisual;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public PlayerObject player;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float pullVibration;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform ammoVisual;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private AudioSource source;

	[Token(Token = "0x6000983")]
	[Address(RVA = "0xDD6830", Offset = "0xDD6830", VA = "0xDD6830")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000984")]
	[Address(RVA = "0xDD68BC", Offset = "0xDD68BC", VA = "0xDD68BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0xDD691C", Offset = "0xDD691C", VA = "0xDD691C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0xDD6AB8", Offset = "0xDD6AB8", VA = "0xDD6AB8")]
	internal void pulled(XRBaseInteractor arg0)
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0xDD6C00", Offset = "0xDD6C00", VA = "0xDD6C00")]
	[PunRPC]
	private void RPC_SetAmmo(bool b)
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0xDD6C3C", Offset = "0xDD6C3C", VA = "0xDD6C3C")]
	internal void released()
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0xDD6DE8", Offset = "0xDD6DE8", VA = "0xDD6DE8")]
	private void shoot()
	{
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0xDD70D8", Offset = "0xDD70D8", VA = "0xDD70D8")]
	[PunRPC]
	private void RPC_SpawnBullet(Vector3 pos, Quaternion dir, float force, int owner)
	{
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0xDD7288", Offset = "0xDD7288", VA = "0xDD7288")]
	public SlingShot()
	{
	}
}
[Token(Token = "0x20001D1")]
public class SlingShotPuller : MonoBehaviour
{
	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PlayerObject playerObject;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SlingShot slingShot;

	[Token(Token = "0x600098C")]
	[Address(RVA = "0xDD72AC", Offset = "0xDD72AC", VA = "0xDD72AC")]
	private void Start()
	{
	}

	[Token(Token = "0x600098D")]
	[Address(RVA = "0xDD73E4", Offset = "0xDD73E4", VA = "0xDD73E4")]
	private void UnSelect(XRBaseInteractor arg0)
	{
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0xDD742C", Offset = "0xDD742C", VA = "0xDD742C")]
	private void Select(XRBaseInteractor arg0)
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0xDD747C", Offset = "0xDD747C", VA = "0xDD747C")]
	public SlingShotPuller()
	{
	}
}
[Token(Token = "0x20001D2")]
public class SlowFill : MonoBehaviour
{
	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float minFill;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float maxFill;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float fillSpeed;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float emptySpeed;

	[Token(Token = "0x6000990")]
	[Address(RVA = "0xDD7484", Offset = "0xDD7484", VA = "0xDD7484")]
	public void Fill()
	{
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0xDD7508", Offset = "0xDD7508", VA = "0xDD7508")]
	public void Empty()
	{
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0xDD7594", Offset = "0xDD7594", VA = "0xDD7594")]
	public SlowFill()
	{
	}
}
[Token(Token = "0x20001D3")]
public class SmoothTurnProvider : DeviceBasedContinuousTurnProvider
{
	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Dictionary<XRController, Vector2> initialTouch;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Dictionary<XRController, bool> isTouched;

	[Token(Token = "0x6000993")]
	[Address(RVA = "0xEA0E38", Offset = "0xEA0E38", VA = "0xEA0E38", Slot = "5")]
	protected override Vector2 ReadInput()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0xEA14C8", Offset = "0xEA14C8", VA = "0xEA14C8")]
	private Vector2 getInitialTouch(XRController controller)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0xEA1314", Offset = "0xEA1314", VA = "0xEA1314")]
	private void setInitialTouch(XRController controller, Vector2 controllerInput)
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0xEA11E0", Offset = "0xEA11E0", VA = "0xEA11E0")]
	private bool isCurrentlyTouched(XRController controller)
	{
		return default(bool);
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0xEA13E8", Offset = "0xEA13E8", VA = "0xEA13E8")]
	private void setTouched(XRController controller, bool touched)
	{
	}

	[Token(Token = "0x6000998")]
	[Address(RVA = "0xEA129C", Offset = "0xEA129C", VA = "0xEA129C")]
	private bool wasTouched(XRController controller)
	{
		return default(bool);
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0xEA14A4", Offset = "0xEA14A4", VA = "0xEA14A4")]
	private bool hasTouchPad()
	{
		return default(bool);
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0xEA156C", Offset = "0xEA156C", VA = "0xEA156C")]
	public SmoothTurnProvider()
	{
	}
}
[Token(Token = "0x20001D4")]
public class SnapTurnProviderAdvanced : LocomotionProvider
{
	[Token(Token = "0x20001D5")]
	public enum InputAxes
	{
		[Token(Token = "0x40009AE")]
		Primary2DAxis,
		[Token(Token = "0x40009AF")]
		Secondary2DAxis
	}

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool requiresClick;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly InputFeatureUsage<Vector2>[] m_Vec2UsageList;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private InputAxes m_TurnUsage;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private List<XRController> m_Controllers;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private float m_TurnAmount;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float m_DebounceTime;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float m_DeadZone;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float m_CurrentTurnAmount;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float m_TimeStarted;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<bool> m_ControllersWereActive;

	[Token(Token = "0x1700007D")]
	public InputAxes turnUsage
	{
		[Token(Token = "0x600099B")]
		[Address(RVA = "0xEA1624", Offset = "0xEA1624", VA = "0xEA1624")]
		get
		{
			return default(InputAxes);
		}
		[Token(Token = "0x600099C")]
		[Address(RVA = "0xEA162C", Offset = "0xEA162C", VA = "0xEA162C")]
		set
		{
		}
	}

	[Token(Token = "0x1700007E")]
	public List<XRController> controllers
	{
		[Token(Token = "0x600099D")]
		[Address(RVA = "0xEA1634", Offset = "0xEA1634", VA = "0xEA1634")]
		get
		{
			return null;
		}
		[Token(Token = "0x600099E")]
		[Address(RVA = "0xEA163C", Offset = "0xEA163C", VA = "0xEA163C")]
		set
		{
		}
	}

	[Token(Token = "0x1700007F")]
	public float turnAmount
	{
		[Token(Token = "0x600099F")]
		[Address(RVA = "0xEA1644", Offset = "0xEA1644", VA = "0xEA1644")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60009A0")]
		[Address(RVA = "0xEA164C", Offset = "0xEA164C", VA = "0xEA164C")]
		set
		{
		}
	}

	[Token(Token = "0x17000080")]
	public float debounceTime
	{
		[Token(Token = "0x60009A1")]
		[Address(RVA = "0xEA1654", Offset = "0xEA1654", VA = "0xEA1654")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60009A2")]
		[Address(RVA = "0xEA165C", Offset = "0xEA165C", VA = "0xEA165C")]
		set
		{
		}
	}

	[Token(Token = "0x17000081")]
	public float deadZone
	{
		[Token(Token = "0x60009A3")]
		[Address(RVA = "0xEA1664", Offset = "0xEA1664", VA = "0xEA1664")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60009A4")]
		[Address(RVA = "0xEA166C", Offset = "0xEA166C", VA = "0xEA166C")]
		set
		{
		}
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0xEA1674", Offset = "0xEA1674", VA = "0xEA1674")]
	private void Update()
	{
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0xEA1A74", Offset = "0xEA1A74", VA = "0xEA1A74")]
	private void EnsureControllerDataListSize()
	{
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0xEA1B94", Offset = "0xEA1B94", VA = "0xEA1B94")]
	internal void FakeStartTurn(bool isLeft)
	{
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0xEA1B48", Offset = "0xEA1B48", VA = "0xEA1B48")]
	private void StartTurn(float amount)
	{
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0xEA1BB8", Offset = "0xEA1BB8", VA = "0xEA1BB8")]
	public SnapTurnProviderAdvanced()
	{
	}
}
[Token(Token = "0x20001D6")]
public class SpawnLootOnHit : MonoBehaviourPun
{
	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RandomListInventory loot;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int lootAmount;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform spawnPoint;

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0xEA20D0", Offset = "0xEA20D0", VA = "0xEA20D0")]
	public void WasDestroyed()
	{
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0xEA2460", Offset = "0xEA2460", VA = "0xEA2460")]
	public SpawnLootOnHit()
	{
	}
}
[Token(Token = "0x20001D7")]
public class SpriteFitter : MonoBehaviour
{
	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector2 size;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SpriteRenderer m_spriteRenderer;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool preserveAspect;

	[Token(Token = "0x17000082")]
	private SpriteRenderer spriteRenderer
	{
		[Token(Token = "0x60009AD")]
		[Address(RVA = "0xEA3424", Offset = "0xEA3424", VA = "0xEA3424")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0xEA34BC", Offset = "0xEA34BC", VA = "0xEA34BC")]
	public void FitSprite()
	{
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0xEA3540", Offset = "0xEA3540", VA = "0xEA3540")]
	private Vector2 getNewScale()
	{
		return default(Vector2);
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0xEA3774", Offset = "0xEA3774", VA = "0xEA3774")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0xEA377C", Offset = "0xEA377C", VA = "0xEA377C")]
	private void drawRect(Vector2 inputSize)
	{
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0xEA3A5C", Offset = "0xEA3A5C", VA = "0xEA3A5C")]
	public SpriteFitter()
	{
	}
}
[Token(Token = "0x20001D8")]
public class SpriteSequence : MonoBehaviour
{
	[Token(Token = "0x20001D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15530", Offset = "0xB15530")]
	private sealed class <play>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpriteSequence <>4__this;

		[Token(Token = "0x17000083")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009C0")]
			[Address(RVA = "0xEA3FD8", Offset = "0xEA3FD8", VA = "0xEA3FD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000084")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009C2")]
			[Address(RVA = "0xEA4040", Offset = "0xEA4040", VA = "0xEA4040", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0xEA3EB8", Offset = "0xEA3EB8", VA = "0xEA3EB8")]
		[DebuggerHidden]
		public <play>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0xEA3EFC", Offset = "0xEA3EFC", VA = "0xEA3EFC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0xEA3F00", Offset = "0xEA3F00", VA = "0xEA3F00", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0xEA3FE0", Offset = "0xEA3FE0", VA = "0xEA3FE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image img;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite[] sprites;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int current;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float framerate;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool clearOnEmpty;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public SpriteSequence copyCurrentFrom;

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0xEA3A6C", Offset = "0xEA3A6C", VA = "0xEA3A6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0xEA3AC4", Offset = "0xEA3AC4", VA = "0xEA3AC4")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0xEA3C78", Offset = "0xEA3C78", VA = "0xEA3C78")]
	private void prevFrame()
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0xEA3CBC", Offset = "0xEA3CBC", VA = "0xEA3CBC")]
	private void nextFrame()
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0xEA3D00", Offset = "0xEA3D00", VA = "0xEA3D00")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0xEA3D08", Offset = "0xEA3D08", VA = "0xEA3D08")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0xEA3E14", Offset = "0xEA3E14", VA = "0xEA3E14")]
	private void Update()
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0xEA3DA4", Offset = "0xEA3DA4", VA = "0xEA3DA4")]
	private IEnumerator play()
	{
		return null;
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0xEA3AC8", Offset = "0xEA3AC8", VA = "0xEA3AC8")]
	public void updateSprite()
	{
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0xEA3EE4", Offset = "0xEA3EE4", VA = "0xEA3EE4")]
	public SpriteSequence()
	{
	}
}
[Token(Token = "0x20001DA")]
public class SpriteSequenceIndex : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001DB")]
	public class WhenControllerType
	{
		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public XRInputRemapper.ControllerType when;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool flipImage;

		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite[] spriteValues;

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0xEA4988", Offset = "0xEA4988", VA = "0xEA4988")]
		public WhenControllerType()
		{
		}
	}

	[Token(Token = "0x20001DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15540", Offset = "0xB15540")]
	private sealed class <play>d__26 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpriteSequenceIndex <>4__this;

		[Token(Token = "0x17000086")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60009D4")]
			[Address(RVA = "0xEA4918", Offset = "0xEA4918", VA = "0xEA4918", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000087")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60009D6")]
			[Address(RVA = "0xEA4980", Offset = "0xEA4980", VA = "0xEA4980", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0xEA4680", Offset = "0xEA4680", VA = "0xEA4680")]
		[DebuggerHidden]
		public <play>d__26(int <>1__state)
		{
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0xEA483C", Offset = "0xEA483C", VA = "0xEA483C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0xEA4840", Offset = "0xEA4840", VA = "0xEA4840", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0xEA4920", Offset = "0xEA4920", VA = "0xEA4920", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image img;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool controllerDependent;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool specifyNode;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public XRController controller;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public XRNode node;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public XRInputRemapper.ControllerType testValue;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int[] indexes;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Sprite[] spriteValues;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public WhenControllerType[] configurations;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private InputDevice m_InputDevice;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private InputDevice lastDevice;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int current;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float framerate;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public bool clearOnEmpty;

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public SpriteSequence copyCurrentFrom;

	[Token(Token = "0x17000085")]
	public InputDevice inputDevice
	{
		[Token(Token = "0x60009C3")]
		[Address(RVA = "0xEA4048", Offset = "0xEA4048", VA = "0xEA4048")]
		get
		{
			return default(InputDevice);
		}
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0xEA40AC", Offset = "0xEA40AC", VA = "0xEA40AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0xEA4104", Offset = "0xEA4104", VA = "0xEA4104")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0xEA43F0", Offset = "0xEA43F0", VA = "0xEA43F0")]
	private void first()
	{
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0xEA442C", Offset = "0xEA442C", VA = "0xEA442C")]
	private void prevFrame()
	{
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0xEA4470", Offset = "0xEA4470", VA = "0xEA4470")]
	private void nextFrame()
	{
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0xEA44B4", Offset = "0xEA44B4", VA = "0xEA44B4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0xEA44BC", Offset = "0xEA44BC", VA = "0xEA44BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0xEA45C8", Offset = "0xEA45C8", VA = "0xEA45C8")]
	private void Update()
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0xEA4558", Offset = "0xEA4558", VA = "0xEA4558")]
	private IEnumerator play()
	{
		return null;
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0xEA4160", Offset = "0xEA4160", VA = "0xEA4160")]
	private void updateSprite()
	{
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0xEA46AC", Offset = "0xEA46AC", VA = "0xEA46AC")]
	private Sprite getSpriteForController(int current, ref bool flipped)
	{
		return null;
	}

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0xEA47CC", Offset = "0xEA47CC", VA = "0xEA47CC")]
	public SpriteSequenceIndex()
	{
	}
}
[Token(Token = "0x20001DD")]
public class StatisticsBoard : MonoBehaviour
{
	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private TextMeshPro text;

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0xEA4990", Offset = "0xEA4990", VA = "0xEA4990")]
	private void Start()
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0xEA4A7C", Offset = "0xEA4A7C", VA = "0xEA4A7C")]
	public void UpdateText(int days)
	{
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0xEA4AC8", Offset = "0xEA4AC8", VA = "0xEA4AC8")]
	public StatisticsBoard()
	{
	}
}
[Token(Token = "0x20001DE")]
public class StickMoveProvider : LocomotionProvider
{
	[Token(Token = "0x60009DA")]
	[Address(RVA = "0xEA52FC", Offset = "0xEA52FC", VA = "0xEA52FC")]
	public StickMoveProvider()
	{
	}
}
[Serializable]
[Token(Token = "0x20001DF")]
public class LanguageTerm
{
	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private string TermPrefix;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string TermKey;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string text;

	[Token(Token = "0x17000088")]
	public string completeKey
	{
		[Token(Token = "0x60009DB")]
		[Address(RVA = "0xE88E2C", Offset = "0xE88E2C", VA = "0xE88E2C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0xE88E3C", Offset = "0xE88E3C", VA = "0xE88E3C")]
	public void setKey(string prefix, string key)
	{
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0xE88EB4", Offset = "0xE88EB4", VA = "0xE88EB4")]
	public LanguageTerm()
	{
	}
}
[Token(Token = "0x20001E0")]
public class RandomSound : MonoBehaviourPun
{
	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource audioSource;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<AudioClip> clips;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float minTimeBetweenSounds;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float maxTimeBetweenSounds;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float timer;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float timeForNextSound;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AudioClip nextSoundClip;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private TutorialDolphin dolphin;

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0xE3EE90", Offset = "0xE3EE90", VA = "0xE3EE90")]
	private void Start()
	{
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0xE3EEF4", Offset = "0xE3EEF4", VA = "0xE3EEF4")]
	private void CalculateNextSound()
	{
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0xE3EF90", Offset = "0xE3EF90", VA = "0xE3EF90")]
	private void Update()
	{
	}

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0xE3F100", Offset = "0xE3F100", VA = "0xE3F100")]
	[PunRPC]
	private void Rpc_PlaySound(string clipName)
	{
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0xE3F264", Offset = "0xE3F264", VA = "0xE3F264")]
	public RandomSound()
	{
	}
}
[Serializable]
[Token(Token = "0x20001E1")]
public class TaskboardTodo
{
	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string task;

	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string key;

	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LanguageTerm title;

	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LanguageTerm description;

	[Token(Token = "0x17000089")]
	public bool isComplete
	{
		[Token(Token = "0x60009E4")]
		[Address(RVA = "0xE43090", Offset = "0xE43090", VA = "0xE43090")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0xE43C58", Offset = "0xE43C58", VA = "0xE43C58")]
	public string getCompleteKey()
	{
		return null;
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0xE42968", Offset = "0xE42968", VA = "0xE42968")]
	public void init()
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0xE42F38", Offset = "0xE42F38", VA = "0xE42F38")]
	internal string getTitle()
	{
		return null;
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0xE42FE4", Offset = "0xE42FE4", VA = "0xE42FE4")]
	internal string getDescription()
	{
		return null;
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0xE44118", Offset = "0xE44118", VA = "0xE44118")]
	public TaskboardTodo()
	{
	}
}
[Token(Token = "0x20001E2")]
public class TaskData : ScriptableObject
{
	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int order;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LanguageTerm titleTerm;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<TaskboardTodo> todos;

	[Token(Token = "0x1700008A")]
	private string TaskTitle
	{
		[Token(Token = "0x60009E9")]
		[Address(RVA = "0xE425D0", Offset = "0xE425D0", VA = "0xE425D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700008B")]
	public bool isComplete
	{
		[Token(Token = "0x60009EA")]
		[Address(RVA = "0xE42688", Offset = "0xE42688", VA = "0xE42688")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0xE42820", Offset = "0xE42820", VA = "0xE42820")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0xE42964", Offset = "0xE42964", VA = "0xE42964")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0xE42824", Offset = "0xE42824", VA = "0xE42824")]
	private void init()
	{
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0xE42A00", Offset = "0xE42A00", VA = "0xE42A00")]
	private void ToggleLanguageDE()
	{
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0xE42A6C", Offset = "0xE42A6C", VA = "0xE42A6C")]
	private void ToggleLanguageEN()
	{
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0xE42AD8", Offset = "0xE42AD8", VA = "0xE42AD8")]
	private bool isEn()
	{
		return default(bool);
	}

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0xE42B4C", Offset = "0xE42B4C", VA = "0xE42B4C")]
	private bool isDe()
	{
		return default(bool);
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0xE42BC0", Offset = "0xE42BC0", VA = "0xE42BC0")]
	internal string getTitle()
	{
		return null;
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0xE42CBC", Offset = "0xE42CBC", VA = "0xE42CBC")]
	public TaskData()
	{
	}
}
[Token(Token = "0x20001E3")]
public class TaskListEntryUI : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image doneImage;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI title;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string taskKey;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject selected;

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0xE42D54", Offset = "0xE42D54", VA = "0xE42D54", Slot = "4")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0xE42E10", Offset = "0xE42E10", VA = "0xE42E10")]
	internal void Init(TaskData tmp)
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0xE42E94", Offset = "0xE42E94", VA = "0xE42E94")]
	public TaskListEntryUI()
	{
	}
}
[Token(Token = "0x20001E4")]
public class TaskTodoUI : MonoBehaviour
{
	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image doneImage;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI title;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshProUGUI description;

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0xE42E9C", Offset = "0xE42E9C", VA = "0xE42E9C")]
	internal void init(TaskboardTodo tmp)
	{
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0xE430CC", Offset = "0xE430CC", VA = "0xE430CC")]
	public TaskTodoUI()
	{
	}
}
[Token(Token = "0x20001E5")]
public class TaskUI : MonoBehaviour
{
	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI title;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform taskTodoParent;

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0xE430D4", Offset = "0xE430D4", VA = "0xE430D4")]
	public TaskUI()
	{
	}
}
[Token(Token = "0x20001E6")]
public enum TaskStatus
{
	[Token(Token = "0x40009F1")]
	Hidden,
	[Token(Token = "0x40009F2")]
	Incomplete,
	[Token(Token = "0x40009F3")]
	Completed
}
[Serializable]
[Token(Token = "0x20001E7")]
public class TaskBoardData
{
	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Dictionary<string, TaskStatus> taskStatus;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Dictionary<string, bool> taskTodoStatus;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string currentSelectedTask;

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0xE42538", Offset = "0xE42538", VA = "0xE42538")]
	public TaskBoardData()
	{
	}
}
[Token(Token = "0x20001E8")]
public class TaskboardSystem : MonoBehaviour
{
	[Token(Token = "0x40009F7")]
	public const string C_TaskboardStatus = "TaskboardStatus";

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static TaskboardSystem instance;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TaskBoardData taskBoardData;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityAction<string> OnTaskUnlocked;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityAction<string> OnTaskCompleted;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityAction<string> OnTaskTodoCompleted;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Dictionary<string, TaskData> allTasks;

	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject dolphin;

	[Token(Token = "0x1700008C")]
	public static TaskboardSystem Instance
	{
		[Token(Token = "0x60009FB")]
		[Address(RVA = "0xE426C0", Offset = "0xE426C0", VA = "0xE426C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0xE430DC", Offset = "0xE430DC", VA = "0xE430DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0xE43184", Offset = "0xE43184", VA = "0xE43184")]
	private void Start()
	{
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0xE434DC", Offset = "0xE434DC", VA = "0xE434DC")]
	public void ResetAll()
	{
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0xE430E0", Offset = "0xE430E0", VA = "0xE430E0")]
	public void Load()
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0xE43658", Offset = "0xE43658", VA = "0xE43658")]
	public void Save()
	{
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0xE436E0", Offset = "0xE436E0", VA = "0xE436E0")]
	public TaskData FindTask(string task)
	{
		return null;
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0xE42C6C", Offset = "0xE42C6C", VA = "0xE42C6C")]
	public static string ReplaceTokens(string txt)
	{
		return null;
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0xE43858", Offset = "0xE43858", VA = "0xE43858")]
	internal List<TaskData> getTasks(TaskStatus status)
	{
		return null;
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0xE43300", Offset = "0xE43300", VA = "0xE43300")]
	public void UnlockTask(string task)
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0xE43DF4", Offset = "0xE43DF4", VA = "0xE43DF4")]
	public void TaskTodoComplete(string taskTodo)
	{
	}

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0xE43A0C", Offset = "0xE43A0C", VA = "0xE43A0C")]
	private bool allTaskTodosCompleted(TaskData td)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0xE43CAC", Offset = "0xE43CAC", VA = "0xE43CAC")]
	public bool isTaskTodoComplete(string completeKey)
	{
		return default(bool);
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0xE43D2C", Offset = "0xE43D2C", VA = "0xE43D2C")]
	private void setTaskTodoComplete(string completeKey, bool status)
	{
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0xE43E80", Offset = "0xE43E80", VA = "0xE43E80")]
	private void checkTasksComplete()
	{
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0xE43FC0", Offset = "0xE43FC0", VA = "0xE43FC0")]
	private void TaskCompleted(TaskData td)
	{
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0xE43B6C", Offset = "0xE43B6C", VA = "0xE43B6C")]
	private void setStatus(TaskData td, TaskStatus status)
	{
	}

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0xE4405C", Offset = "0xE4405C", VA = "0xE4405C")]
	public TaskStatus getStatus(string task)
	{
		return default(TaskStatus);
	}

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0xE4278C", Offset = "0xE4278C", VA = "0xE4278C")]
	public TaskStatus getStatus(TaskData td)
	{
		return default(TaskStatus);
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0xE44084", Offset = "0xE44084", VA = "0xE44084")]
	public void testAddTask(string task)
	{
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0xE44088", Offset = "0xE44088", VA = "0xE44088")]
	public void testCompleteTaskTodo(string taskTodo)
	{
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0xE4408C", Offset = "0xE4408C", VA = "0xE4408C")]
	public TaskboardSystem()
	{
	}
}
[Token(Token = "0x20001E9")]
public class TaskboardUI : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20001EA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15550", Offset = "0xB15550")]
	private sealed class <>c
	{
		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<TaskData, int> <>9__13_0;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<TaskData, int> <>9__13_1;

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0xE45570", Offset = "0xE45570", VA = "0xE45570")]
		public <>c()
		{
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0xE45578", Offset = "0xE45578", VA = "0xE45578")]
		internal int <Rebuild>b__13_0(TaskData item)
		{
			return default(int);
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0xE45590", Offset = "0xE45590", VA = "0xE45590")]
		internal int <Rebuild>b__13_1(TaskData item)
		{
			return default(int);
		}
	}

	[Token(Token = "0x20001EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15560", Offset = "0xB15560")]
	private sealed class <LateRebuild>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TaskboardUI <>4__this;

		[Token(Token = "0x1700008D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A24")]
			[Address(RVA = "0xE45604", Offset = "0xE45604", VA = "0xE45604", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700008E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A26")]
			[Address(RVA = "0xE4566C", Offset = "0xE4566C", VA = "0xE4566C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0xE454D8", Offset = "0xE454D8", VA = "0xE454D8")]
		[DebuggerHidden]
		public <LateRebuild>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0xE455A8", Offset = "0xE455A8", VA = "0xE455A8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0xE455AC", Offset = "0xE455AC", VA = "0xE455AC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0xE4560C", Offset = "0xE4560C", VA = "0xE4560C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI title;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TaskListEntryUI taskPrefab;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TaskTodoUI taskTodoPrefab;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform taskList;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform todoList;

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0xE441A0", Offset = "0xE441A0", VA = "0xE441A0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0xE44C70", Offset = "0xE44C70", VA = "0xE44C70")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0xE44EAC", Offset = "0xE44EAC", VA = "0xE44EAC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0xE45174", Offset = "0xE45174", VA = "0xE45174")]
	private void TaskComplete(string arg0)
	{
	}

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0xE451B0", Offset = "0xE451B0", VA = "0xE451B0")]
	private void ChangedFull()
	{
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0xE451B8", Offset = "0xE451B8", VA = "0xE451B8")]
	private void ChangedFull(string arg0)
	{
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0xE451C0", Offset = "0xE451C0", VA = "0xE451C0")]
	private void Changed(string arg0)
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0xE441A8", Offset = "0xE441A8", VA = "0xE441A8")]
	private void Rebuild(bool fullRebuild)
	{
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0xE451C8", Offset = "0xE451C8", VA = "0xE451C8")]
	private void rebuildTodo(string currentSelectedTask, bool fullRebuild)
	{
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0xE42DB4", Offset = "0xE42DB4", VA = "0xE42DB4")]
	public void changeSelection(string taskKey)
	{
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0xE45468", Offset = "0xE45468", VA = "0xE45468")]
	private IEnumerator LateRebuild()
	{
		return null;
	}

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0xE45504", Offset = "0xE45504", VA = "0xE45504")]
	public TaskboardUI()
	{
	}
}
[Token(Token = "0x20001EC")]
public class TutorialDolphin : MonoBehaviourPunCallbacks, IPunObservable
{
	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject dolphinVisual;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject canvas;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 pos;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 rot;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool showDolphin;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private UpdateRate updateRate;

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0xE4EFFC", Offset = "0xE4EFFC", VA = "0xE4EFFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0xE4F09C", Offset = "0xE4F09C", VA = "0xE4F09C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0xE4F544", Offset = "0xE4F544", VA = "0xE4F544")]
	public void Spawn()
	{
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0xE4F94C", Offset = "0xE4F94C", VA = "0xE4F94C")]
	public void Despawn()
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0xE4F990", Offset = "0xE4F990", VA = "0xE4F990", Slot = "54")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0xE4F9E4", Offset = "0xE4F9E4", VA = "0xE4F9E4")]
	public TutorialDolphin()
	{
	}
}
[Token(Token = "0x20001ED")]
public class TeleportHelper : MonoBehaviour
{
	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0xE464F0", Offset = "0xE464F0", VA = "0xE464F0", Slot = "4")]
	public virtual void TeleportToAnchor()
	{
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0xE4665C", Offset = "0xE4665C", VA = "0xE4665C")]
	public TeleportHelper()
	{
	}
}
[Serializable]
[Token(Token = "0x20001EE")]
public class RandomTestResult
{
	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int value;

	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int amount;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float weight;

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0xE3F26C", Offset = "0xE3F26C", VA = "0xE3F26C")]
	public RandomTestResult()
	{
	}
}
[Token(Token = "0x20001EF")]
public class WeightedRandomListTester : MonoBehaviour
{
	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RandomListString list;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int testAmount;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RandomTestResult[] resultList;

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0xE2016C", Offset = "0xE2016C", VA = "0xE2016C")]
	private void TestIt()
	{
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0xE20454", Offset = "0xE20454", VA = "0xE20454")]
	public WeightedRandomListTester()
	{
	}
}
[Token(Token = "0x20001F0")]
public class ThisPoseProvider : BasePoseProvider
{
	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform relativeTransform;

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0xE4A92C", Offset = "0xE4A92C", VA = "0xE4A92C", Slot = "4")]
	public override PoseDataFlags GetPoseFromProvider(out Pose output)
	{
		return default(PoseDataFlags);
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0xE4AA80", Offset = "0xE4AA80", VA = "0xE4AA80")]
	public ThisPoseProvider()
	{
	}
}
[Token(Token = "0x20001F1")]
public class TileByLength : MonoBehaviour
{
	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float oldLen;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer rend;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float multiplier;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform targetPos;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform lookAtPos;

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0xE4AA88", Offset = "0xE4AA88", VA = "0xE4AA88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0xE4AB34", Offset = "0xE4AB34", VA = "0xE4AB34")]
	private void updatePos()
	{
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0xE4AD34", Offset = "0xE4AD34", VA = "0xE4AD34")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0xE4AD38", Offset = "0xE4AD38", VA = "0xE4AD38")]
	public TileByLength()
	{
	}
}
[Token(Token = "0x20001F2")]
public class ToggleRoomCode : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Sprite eyeOn;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite eyeOff;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image buttonImage;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VersionInfoText versionInfo;

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0xE4BCD8", Offset = "0xE4BCD8", VA = "0xE4BCD8", Slot = "4")]
	public void OnPointerClick(PointerEventData pointerEventData)
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0xE4BD50", Offset = "0xE4BD50", VA = "0xE4BD50")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0xE4BCFC", Offset = "0xE4BCFC", VA = "0xE4BCFC")]
	private void toggle(bool v)
	{
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0xE4BD58", Offset = "0xE4BD58", VA = "0xE4BD58")]
	public ToggleRoomCode()
	{
	}
}
[Token(Token = "0x20001F3")]
public class TutorialVisual : MonoBehaviour
{
	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0xE4FA50", Offset = "0xE4FA50", VA = "0xE4FA50")]
	public TutorialVisual()
	{
	}
}
[Token(Token = "0x20001F4")]
public enum Button3dState
{
	[Token(Token = "0x4000A21")]
	Normal,
	[Token(Token = "0x4000A22")]
	Highlighted,
	[Token(Token = "0x4000A23")]
	Pressed,
	[Token(Token = "0x4000A24")]
	Selected,
	[Token(Token = "0x4000A25")]
	Disabled
}
[Token(Token = "0x20001F5")]
public class Button3D : MonoBehaviour
{
	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Image image;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text text;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Renderer button;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int matIndex;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool m_interactable;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color colorNormal;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Color colorHighlight;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Color colorPressed;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Color colorSelected;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Color colorDisabled;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Color targetColor;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float transitionSpeed;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float transitionProgress;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Vector3 sizePressed;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Vector3 targetSize;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public UnityEvent OnPressed;

	[Token(Token = "0x1700008F")]
	public bool interactable
	{
		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0xE7C750", Offset = "0xE7C750", VA = "0xE7C750")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0xE7C758", Offset = "0xE7C758", VA = "0xE7C758")]
		set
		{
		}
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0xE7C88C", Offset = "0xE7C88C", VA = "0xE7C88C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0xE7C780", Offset = "0xE7C780", VA = "0xE7C780")]
	internal void setState(Button3dState newState)
	{
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0xE7CB6C", Offset = "0xE7CB6C", VA = "0xE7CB6C")]
	private void ExecuteEvent()
	{
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0xE7CAB0", Offset = "0xE7CAB0", VA = "0xE7CAB0")]
	public void setColor(Color value)
	{
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0xE7CB88", Offset = "0xE7CB88", VA = "0xE7CB88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0xE7C8D0", Offset = "0xE7C8D0", VA = "0xE7C8D0")]
	private void updateProgress()
	{
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0xE7CBE8", Offset = "0xE7CBE8", VA = "0xE7CBE8")]
	public Button3D()
	{
	}
}
[Token(Token = "0x20001F6")]
public class Button3dEvent : MonoBehaviour
{
	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool near;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool touch;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Button3D button;

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0xE7CD84", Offset = "0xE7CD84", VA = "0xE7CD84")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0xE7CDDC", Offset = "0xE7CDDC", VA = "0xE7CDDC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0xE7CEE0", Offset = "0xE7CEE0", VA = "0xE7CEE0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0xE7CFE4", Offset = "0xE7CFE4", VA = "0xE7CFE4")]
	public Button3dEvent()
	{
	}
}
[Token(Token = "0x20001F7")]
public class Button3dPointer : MonoBehaviour
{
	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0xE7CFF4", Offset = "0xE7CFF4", VA = "0xE7CFF4")]
	public Button3dPointer()
	{
	}
}
[Token(Token = "0x20001F8")]
public class DefaultPlayerRightsButton : MonoBehaviour
{
	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Image image_inactive;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Image image_buttonColor;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Button button;

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Color active;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Color inactive;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PlayerRights.PlayerRight right;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool defaultOfflineRight;

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0xD846C0", Offset = "0xD846C0", VA = "0xD846C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0xD847E8", Offset = "0xD847E8", VA = "0xD847E8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0xD848A4", Offset = "0xD848A4", VA = "0xD848A4")]
	public void ToggleSettingsColor(bool deactivate)
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0xD84884", Offset = "0xD84884", VA = "0xD84884")]
	public void ToggleSettingImage(bool deactivate)
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0xD848F0", Offset = "0xD848F0", VA = "0xD848F0")]
	public void ToggleRight()
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0xD84740", Offset = "0xD84740", VA = "0xD84740")]
	public void ToggleRight(bool hasRight)
	{
	}

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0xD849A0", Offset = "0xD849A0", VA = "0xD849A0")]
	public DefaultPlayerRightsButton()
	{
	}
}
[Token(Token = "0x20001F9")]
public class EventSystem3D : MonoBehaviour
{
	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static EventSystem3D current;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Button3D lastSeleted;

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0xEB74CC", Offset = "0xEB74CC", VA = "0xEB74CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0xEB7520", Offset = "0xEB7520", VA = "0xEB7520")]
	internal void NearTouched(Button3D newElement)
	{
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0xEB7634", Offset = "0xEB7634", VA = "0xEB7634")]
	internal void Touched(Button3D newElement)
	{
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0xEB7748", Offset = "0xEB7748", VA = "0xEB7748")]
	internal void UnTouched(Button3D element)
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0xEB7820", Offset = "0xEB7820", VA = "0xEB7820")]
	internal void NearUnTouched(Button3D element)
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0xEB7824", Offset = "0xEB7824", VA = "0xEB7824")]
	public EventSystem3D()
	{
	}
}
[Token(Token = "0x20001FA")]
public class HideRightsOffline : MonoBehaviour
{
	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool onlyShowMasterclient;

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0xF47A44", Offset = "0xF47A44", VA = "0xF47A44")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0xF47B50", Offset = "0xF47B50", VA = "0xF47B50")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0xF47A48", Offset = "0xF47A48", VA = "0xF47A48")]
	private void HideGraphic()
	{
	}

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0xF47B54", Offset = "0xF47B54", VA = "0xF47B54")]
	public HideRightsOffline()
	{
	}
}
[Token(Token = "0x20001FB")]
[ExecuteInEditMode]
public class KeepActiveSync : MonoBehaviour
{
	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject source;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject target;

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0xEF7514", Offset = "0xEF7514", VA = "0xEF7514")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0xEF7594", Offset = "0xEF7594", VA = "0xEF7594")]
	public KeepActiveSync()
	{
	}
}
[Token(Token = "0x20001FC")]
public class LanguageManager : MonoBehaviour
{
	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnLanguageSwitched;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LanguageManager instance;

	[Token(Token = "0x17000090")]
	public static LanguageManager Instance
	{
		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0xE88C70", Offset = "0xE88C70", VA = "0xE88C70")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0xE88D40", Offset = "0xE88D40", VA = "0xE88D40")]
	public void SwitchLanguage()
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0xE88E24", Offset = "0xE88E24", VA = "0xE88E24")]
	public LanguageManager()
	{
	}
}
[Token(Token = "0x20001FD")]
public class MenuButton : MonoBehaviour
{
	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Color Selected;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color Normal;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color NotAvailable;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public RectTransform rectTransform;

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Image backgroundImage;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Image iconImage;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RectTransform IconRectTransform;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform hand;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public InputDeviceWrapper inputDevice;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool isHovering;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public int index;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform ring;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public HandToolType type;

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0xE97408", Offset = "0xE97408", VA = "0xE97408")]
	public void Pulse()
	{
	}

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0xE97540", Offset = "0xE97540", VA = "0xE97540")]
	public void StopPulse()
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0xE9758C", Offset = "0xE9758C", VA = "0xE9758C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0xE9771C", Offset = "0xE9771C", VA = "0xE9771C")]
	public void SetBackgroundImageColor(bool normal)
	{
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0xE97780", Offset = "0xE97780", VA = "0xE97780")]
	public MenuButton()
	{
	}
}
[Token(Token = "0x20001FE")]
public class OnEnableActions : MonoBehaviour
{
	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnEnableTodo;

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0xDEFFB8", Offset = "0xDEFFB8", VA = "0xDEFFB8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0xDEFFCC", Offset = "0xDEFFCC", VA = "0xDEFFCC")]
	public OnEnableActions()
	{
	}
}
[Token(Token = "0x20001FF")]
public class PlayerRightsButton : MonoBehaviour
{
	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Image image_inactive;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Image image_buttonColor;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Button button;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Color active;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Color inactive;

	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public PlayerRights.PlayerRight right;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private SettingsForPlayer settings;

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0xE3A1A0", Offset = "0xE3A1A0", VA = "0xE3A1A0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0xE3A1F8", Offset = "0xE3A1F8", VA = "0xE3A1F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0xE3A350", Offset = "0xE3A350", VA = "0xE3A350")]
	public void ToggleSettingsColor(bool deactivate)
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0xE3A330", Offset = "0xE3A330", VA = "0xE3A330")]
	public void ToggleSettingImage(bool deactivate)
	{
	}

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0xE3A39C", Offset = "0xE3A39C", VA = "0xE3A39C", Slot = "4")]
	public virtual void ToggleRight()
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0xE3A47C", Offset = "0xE3A47C", VA = "0xE3A47C")]
	public PlayerRightsButton()
	{
	}
}
[Token(Token = "0x2000200")]
public class PopUpPanel : MonoBehaviour
{
	[Token(Token = "0x2000201")]
	public delegate void onAccept();

	[Token(Token = "0x2000202")]
	public delegate void onDecline();

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	protected Button button_accept;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	protected Button button_decline;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	protected TextMeshProUGUI text_accept;

	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	protected TextMeshProUGUI text_decline;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	protected TextMeshProUGUI text_description;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	protected GameObject panel;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	protected GameObject shade;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private onAccept OnAccept;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private onDecline OnDecline;

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0xE3AB2C", Offset = "0xE3AB2C", VA = "0xE3AB2C")]
	private void OnButtonAcceptPress()
	{
	}

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0xE3ADAC", Offset = "0xE3ADAC", VA = "0xE3ADAC")]
	private void OnButtonDeclinePress()
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0xE3AFE8", Offset = "0xE3AFE8", VA = "0xE3AFE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0xE3B0C8", Offset = "0xE3B0C8", VA = "0xE3B0C8")]
	public void Show(onAccept acceptAction, onDecline declineAction)
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0xE3B124", Offset = "0xE3B124", VA = "0xE3B124")]
	public void Show(string description, onAccept acceptAction, string acceptText, onDecline declineAction, string declineText)
	{
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0xE3AD68", Offset = "0xE3AD68", VA = "0xE3AD68")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0xE3B1E8", Offset = "0xE3B1E8", VA = "0xE3B1E8")]
	public PopUpPanel()
	{
	}
}
[Token(Token = "0x2000203")]
public class QuickSlotMenu : MonoBehaviour
{
	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MenuButton[] buttons;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int cachedIndex;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform leftHandParent;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform rightHandParent;

	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float resizeSpeed;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float progress;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 fullScale;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float holdTime;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool axis;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool showing;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private InputDeviceWrapper leftHand;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private InputDeviceWrapper rightHand;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int lastToolIndex;

	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public InputHelpers.Button toggleButton;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public InteractionState toggleStateLeft;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public InteractionState toggleStateRight;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private InputHelpers.Button[] inputButtons;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public InteractionState[] states;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public bool anyPressed;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Transform parent;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool left;

	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float timer;

	[Token(Token = "0x6000A7D")]
	[Address(RVA = "0xE3CB6C", Offset = "0xE3CB6C", VA = "0xE3CB6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A7E")]
	[Address(RVA = "0xE3CD84", Offset = "0xE3CD84", VA = "0xE3CD84")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A7F")]
	[Address(RVA = "0xE3CFD8", Offset = "0xE3CFD8", VA = "0xE3CFD8")]
	private void CheckToggleState(InteractionState state, InputDeviceWrapper hand, Transform handParent, bool left)
	{
	}

	[Token(Token = "0x6000A80")]
	[Address(RVA = "0xE3D8A4", Offset = "0xE3D8A4", VA = "0xE3D8A4")]
	private void SetLastTool()
	{
	}

	[Token(Token = "0x6000A81")]
	[Address(RVA = "0xE3D6DC", Offset = "0xE3D6DC", VA = "0xE3D6DC")]
	private void ToggleTool()
	{
	}

	[Token(Token = "0x6000A82")]
	[Address(RVA = "0xE3D3B8", Offset = "0xE3D3B8", VA = "0xE3D3B8")]
	private void refresh(Transform hand, InputDeviceWrapper inputDevice)
	{
	}

	[Token(Token = "0x6000A83")]
	[Address(RVA = "0xE3D994", Offset = "0xE3D994", VA = "0xE3D994")]
	public QuickSlotMenu()
	{
	}
}
[Token(Token = "0x2000204")]
[ExecuteInEditMode]
public class Quickslotbuilder : MonoBehaviour
{
	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int innerCircleCount;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> buttons;

	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform slotPositionhelper;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform rotationhelper;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float distance;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float offset;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float rotationOffset;

	[Token(Token = "0x6000A84")]
	[Address(RVA = "0xE3DA8C", Offset = "0xE3DA8C", VA = "0xE3DA8C")]
	public void Build()
	{
	}

	[Token(Token = "0x6000A85")]
	[Address(RVA = "0xE3DCEC", Offset = "0xE3DCEC", VA = "0xE3DCEC")]
	public Quickslotbuilder()
	{
	}
}
[Token(Token = "0x2000205")]
public class ReplaceTokens : MonoBehaviour
{
	[Token(Token = "0x2000206")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15590", Offset = "0xB15590")]
	private sealed class <ReplaceCR>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ReplaceTokens <>4__this;

		[Token(Token = "0x17000091")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000A8D")]
			[Address(RVA = "0xDC35B8", Offset = "0xDC35B8", VA = "0xDC35B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000092")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000A8F")]
			[Address(RVA = "0xDC3620", Offset = "0xDC3620", VA = "0xDC3620", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0xDC34C0", Offset = "0xDC34C0", VA = "0xDC34C0")]
		[DebuggerHidden]
		public <ReplaceCR>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0xDC34F4", Offset = "0xDC34F4", VA = "0xDC34F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0xDC34F8", Offset = "0xDC34F8", VA = "0xDC34F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0xDC35C0", Offset = "0xDC35C0", VA = "0xDC35C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0xDC33F8", Offset = "0xDC33F8", VA = "0xDC33F8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0xDC3424", Offset = "0xDC3424", VA = "0xDC3424")]
	public void replace()
	{
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0xDC3450", Offset = "0xDC3450", VA = "0xDC3450")]
	private IEnumerator ReplaceCR()
	{
		return null;
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0xDC34EC", Offset = "0xDC34EC", VA = "0xDC34EC")]
	public ReplaceTokens()
	{
	}
}
[Token(Token = "0x2000207")]
public class SwitchLanguage : MonoBehaviour
{
	[Token(Token = "0x6000A90")]
	[Address(RVA = "0xEA6488", Offset = "0xEA6488", VA = "0xEA6488")]
	public void switchLanguage()
	{
	}

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0xEA64AC", Offset = "0xEA64AC", VA = "0xEA64AC")]
	public SwitchLanguage()
	{
	}
}
[Token(Token = "0x2000208")]
[ExecuteInEditMode]
public class VersionInfoText : MonoBehaviour
{
	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private TMP_Text text;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool showPlayerName;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool showRoomCode;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool showRegion;

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0xE1BC78", Offset = "0xE1BC78", VA = "0xE1BC78")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0xE1BF50", Offset = "0xE1BF50", VA = "0xE1BF50")]
	public void Update()
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0xE1BC7C", Offset = "0xE1BC7C", VA = "0xE1BC7C")]
	private void updateText()
	{
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0xE1BF54", Offset = "0xE1BF54", VA = "0xE1BF54")]
	public VersionInfoText()
	{
	}
}
[Token(Token = "0x2000209")]
public class WavingHand : MonoBehaviour
{
	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float distance;

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0xE1FFCC", Offset = "0xE1FFCC", VA = "0xE1FFCC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0xE200F4", Offset = "0xE200F4", VA = "0xE200F4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0xE20158", Offset = "0xE20158", VA = "0xE20158")]
	public WavingHand()
	{
	}
}
[Token(Token = "0x200020A")]
public class UngrabbedItemReturn : MonoBehaviourPun
{
	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject returnPosition;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isHome;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float returnTime;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float cooldown;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private NetworkGrabbable networkGrabbable;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 returnPos;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion returnRot;

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0xE53350", Offset = "0xE53350", VA = "0xE53350")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0xE53420", Offset = "0xE53420", VA = "0xE53420")]
	public void SetHome(bool home)
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0xE5342C", Offset = "0xE5342C", VA = "0xE5342C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0xE535D0", Offset = "0xE535D0", VA = "0xE535D0")]
	public UngrabbedItemReturn()
	{
	}
}
[Token(Token = "0x200020B")]
public class UpAndDown : ControllerInput
{
	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private InputHelpers.Button up;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private InteractionState upState;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private InputHelpers.Button down;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private InteractionState downState;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private InputHelpers.Button trigger;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private InteractionState triggerState;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float updateRate;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float currentUpdateRate;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float cooldown;

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0xE16E0C", Offset = "0xE16E0C", VA = "0xE16E0C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0xE16F08", Offset = "0xE16F08", VA = "0xE16F08")]
	private void pressCheck(InteractionState state, bool initial, LocalPlayerHelper.InventoryModifierButton buttonToSend)
	{
	}

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0xE170BC", Offset = "0xE170BC", VA = "0xE170BC")]
	public UpAndDown()
	{
	}
}
[Token(Token = "0x200020C")]
public class UpdateCcCenter : MonoBehaviour
{
	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController cc;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform playerHead;

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0xE1717C", Offset = "0xE1717C", VA = "0xE1717C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0xE171D4", Offset = "0xE171D4", VA = "0xE171D4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0xE17248", Offset = "0xE17248", VA = "0xE17248")]
	public UpdateCcCenter()
	{
	}
}
[Token(Token = "0x200020D")]
[ExecuteInEditMode]
public class UpdatePosition : MonoBehaviour
{
	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform source;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool x;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool y;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool z;

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0xE17250", Offset = "0xE17250", VA = "0xE17250")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0xE17334", Offset = "0xE17334", VA = "0xE17334")]
	public UpdatePosition()
	{
	}
}
[Token(Token = "0x200020E")]
public class UpdateSail : MonoBehaviour
{
	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform p1;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform p2;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform p3;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform p4;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB18978", Offset = "0xB18978")]
	public float sailWindTake;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB18990", Offset = "0xB18990")]
	public float sailOut;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 baseValue;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float maxWindValue;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float minMagnitude;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float maxMagnitude;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public BaseRotator sailUpNormalizedValue;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private MeshRenderer rend;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float winddir;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float saildir;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float delta;

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0xE17404", Offset = "0xE17404", VA = "0xE17404")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0xE17494", Offset = "0xE17494", VA = "0xE17494")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0xE1755C", Offset = "0xE1755C", VA = "0xE1755C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0xE176FC", Offset = "0xE176FC", VA = "0xE176FC")]
	private void updatePos(Material material)
	{
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0xE179A0", Offset = "0xE179A0", VA = "0xE179A0")]
	public UpdateSail()
	{
	}
}
[Token(Token = "0x200020F")]
public class UpdateSailWaterwheel : UpdateSail
{
	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private Waterwheel wheel;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float maxSpeedWater;

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0xE17A1C", Offset = "0xE17A1C", VA = "0xE17A1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0xE17AF4", Offset = "0xE17AF4", VA = "0xE17AF4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0xE17A20", Offset = "0xE17A20", VA = "0xE17A20")]
	private void updatePos()
	{
	}

	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0xE17B5C", Offset = "0xE17B5C", VA = "0xE17B5C")]
	public UpdateSailWaterwheel()
	{
	}
}
[Token(Token = "0x2000210")]
[ExecuteInEditMode]
public class VRHead : MonoBehaviour
{
	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform head;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform headBodyPos;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform body;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PlayerObject po;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform ReferenceUp;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float HeadOffset;

	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0xE19EB8", Offset = "0xE19EB8", VA = "0xE19EB8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0xE19F10", Offset = "0xE19F10", VA = "0xE19F10")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0xE1A34C", Offset = "0xE1A34C", VA = "0xE1A34C")]
	public VRHead()
	{
	}
}
[Token(Token = "0x2000211")]
public class VRModeToggle : MonoBehaviour
{
	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MonoBehaviour[] whenVr;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MonoBehaviour[] whenNonVr;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ThisPoseProvider left;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ThisPoseProvider right;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public XRController[] controllersLeft;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public XRController[] controllersRight;

	[Token(Token = "0x4000ABE")]
	private const string c_VR = "VRMODE";

	[Token(Token = "0x17000093")]
	public static bool isVR
	{
		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0xE1B260", Offset = "0xE1B260", VA = "0xE1B260")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0xE1B2D0", Offset = "0xE1B2D0", VA = "0xE1B2D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0xE1B2F8", Offset = "0xE1B2F8", VA = "0xE1B2F8")]
	private void setVr(bool v)
	{
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0xE1B508", Offset = "0xE1B508", VA = "0xE1B508")]
	private void updateControllers(XRController[] conntrollers, ThisPoseProvider pose, bool vr)
	{
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0xE1B548", Offset = "0xE1B548", VA = "0xE1B548")]
	public void Toggle()
	{
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0xE1B574", Offset = "0xE1B574", VA = "0xE1B574")]
	public VRModeToggle()
	{
	}
}
[Token(Token = "0x2000212")]
public class VR_TmpDropdown : TMP_Dropdown
{
	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0xE1B63C", Offset = "0xE1B63C", VA = "0xE1B63C", Slot = "45")]
	protected override GameObject CreateBlocker(Canvas rootCanvas)
	{
		return null;
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0xE1B6B8", Offset = "0xE1B6B8", VA = "0xE1B6B8", Slot = "47")]
	protected override GameObject CreateDropdownList(GameObject template)
	{
		return null;
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0xE1B734", Offset = "0xE1B734", VA = "0xE1B734")]
	public VR_TmpDropdown()
	{
	}
}
[Token(Token = "0x2000213")]
public class VisualGameListEntry : MonoBehaviour
{
	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int index;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text textFieldMainInfo;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text textFieldSubInfo;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string roomcode;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool outDated;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TMP_Text buttonText;

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0xE1BF64", Offset = "0xE1BF64", VA = "0xE1BF64")]
	public void refreshRandomName()
	{
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0xE1BFEC", Offset = "0xE1BFEC", VA = "0xE1BFEC")]
	public void StartLoadedGame()
	{
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0xE1C070", Offset = "0xE1C070", VA = "0xE1C070")]
	public VisualGameListEntry()
	{
	}
}
[Token(Token = "0x2000214")]
public class VisualGameListPanel : MonoBehaviourPunCallbacks
{
	[Serializable]
	[Token(Token = "0x2000215")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB155D0", Offset = "0xB155D0")]
	private sealed class <>c
	{
		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<VisualGameListEntry, bool> <>9__5_0;

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0xE1CB34", Offset = "0xE1CB34", VA = "0xE1CB34")]
		public <>c()
		{
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0xE1CB3C", Offset = "0xE1CB3C", VA = "0xE1CB3C")]
		internal bool <OnRoomListUpdate>b__5_0(VisualGameListEntry e)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VisualGameListEntry prefab;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<VisualGameListEntry> entries;

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0xE1C080", Offset = "0xE1C080", VA = "0xE1C080")]
	private void Start()
	{
	}

	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0xE1C0F8", Offset = "0xE1C0F8", VA = "0xE1C0F8", Slot = "36")]
	public override void OnJoinedLobby()
	{
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0xE1C1A4", Offset = "0xE1C1A4", VA = "0xE1C1A4", Slot = "40")]
	public override void OnRoomListUpdate(List<RoomInfo> roomList)
	{
	}

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0xE1C830", Offset = "0xE1C830", VA = "0xE1C830")]
	private void addButton(string roomCode, string mainInof, string subInfo)
	{
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0xE1CA60", Offset = "0xE1CA60", VA = "0xE1CA60")]
	public VisualGameListPanel()
	{
	}
}
[Token(Token = "0x2000216")]
public class VisualSaveGame : MonoBehaviour
{
	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int index;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool isNewGame;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_Text textFieldMainInfo;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_Text textFieldSubInfo;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject whenNew;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject whenNotNew;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject internalNameField;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text internalNameFieldText;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TMP_Text buttonText;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private VisualSaveGamePanel visualSaveGames;

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0xE1CB54", Offset = "0xE1CB54", VA = "0xE1CB54")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0xE1CBAC", Offset = "0xE1CBAC", VA = "0xE1CBAC")]
	public void refreshRandomName()
	{
	}

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0xE1CC34", Offset = "0xE1CC34", VA = "0xE1CC34")]
	public void InputInternalName(string value)
	{
	}

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0xE1CCE8", Offset = "0xE1CCE8", VA = "0xE1CCE8")]
	public void SetActive()
	{
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0xE1CE04", Offset = "0xE1CE04", VA = "0xE1CE04")]
	private void ReallyErase()
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0xE1CFE8", Offset = "0xE1CFE8", VA = "0xE1CFE8")]
	public void EreaseSave()
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0xE1D0AC", Offset = "0xE1D0AC", VA = "0xE1D0AC")]
	private void StartLoadedGame()
	{
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0xE1D138", Offset = "0xE1D138", VA = "0xE1D138")]
	public void ChooseSaveFile()
	{
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0xE1D22C", Offset = "0xE1D22C", VA = "0xE1D22C")]
	public VisualSaveGame()
	{
	}
}
[Token(Token = "0x2000217")]
public class VisualSaveGamePanel : MonoBehaviour
{
	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VisualSaveGame prefab;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public PopUpPanel popUpDelete;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public PopUpPanel popUpGameSettings;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public NetworkLauncher launcher;

	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0xE1D23C", Offset = "0xE1D23C", VA = "0xE1D23C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0xE1CE80", Offset = "0xE1CE80", VA = "0xE1CE80")]
	public void refresh()
	{
	}

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0xE1D240", Offset = "0xE1D240", VA = "0xE1D240")]
	private void addButton(int index, string v1, string v2)
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0xE1D410", Offset = "0xE1D410", VA = "0xE1D410")]
	public VisualSaveGamePanel()
	{
	}
}
[Token(Token = "0x2000218")]
public class WaterLevelTrigger : MonoBehaviour
{
	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FillWaterLevel waterLevel;

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0xE1D418", Offset = "0xE1D418", VA = "0xE1D418")]
	public bool IsEmpty()
	{
		return default(bool);
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0xE1D434", Offset = "0xE1D434", VA = "0xE1D434")]
	public WaterLevelTrigger()
	{
	}
}
[Token(Token = "0x2000219")]
public class WaterParticleCollision : MonoBehaviour
{
	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ParticleSystem waterDrops;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool FirePalett;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool PlantSpot;

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0xE1D43C", Offset = "0xE1D43C", VA = "0xE1D43C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0xE1D494", Offset = "0xE1D494", VA = "0xE1D494")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0xE1D644", Offset = "0xE1D644", VA = "0xE1D644")]
	public WaterParticleCollision()
	{
	}
}
[Token(Token = "0x200021A")]
public class WaterPistol : MonoBehaviourPun
{
	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SlideToSelector handle;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ParticleSystem water;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LayerMask hits;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float hitDistance;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool empty;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private SlowFill waterLine;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float lastPull;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float pull;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AudioSource sound;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AudioClip collectWater;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AudioClip shoot;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private LineRenderer line;

	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0xE1D64C", Offset = "0xE1D64C", VA = "0xE1D64C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0xE1D6E4", Offset = "0xE1D6E4", VA = "0xE1D6E4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0xE1D7B8", Offset = "0xE1D7B8", VA = "0xE1D7B8")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0xE1DB74", Offset = "0xE1DB74", VA = "0xE1DB74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0xE1DCC0", Offset = "0xE1DCC0", VA = "0xE1DCC0")]
	[PunRPC]
	private void Rpc_Fill()
	{
	}

	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0xE1DD24", Offset = "0xE1DD24", VA = "0xE1DD24")]
	[PunRPC]
	private void Rpc_Empty()
	{
	}

	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0xE1DDF0", Offset = "0xE1DDF0", VA = "0xE1DDF0")]
	private void MasterClient_CheckForFireHit()
	{
	}

	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0xE1E04C", Offset = "0xE1E04C", VA = "0xE1E04C")]
	public WaterPistol()
	{
	}
}
[Token(Token = "0x200021B")]
public class Waterwheel : MonoBehaviour
{
	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float resistance;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speedMultiplicator;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float lastValue;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float value;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RotateToSelector lever;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float speed;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private AudioSource sound;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private ParticleSystem particles;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool playing;

	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0xE1FE54", Offset = "0xE1FE54", VA = "0xE1FE54")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0xE1FE7C", Offset = "0xE1FE7C", VA = "0xE1FE7C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0xE1FFBC", Offset = "0xE1FFBC", VA = "0xE1FFBC")]
	public float Speed()
	{
		return default(float);
	}

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0xE1FFC4", Offset = "0xE1FFC4", VA = "0xE1FFC4")]
	public Waterwheel()
	{
	}
}
[Token(Token = "0x200021C")]
public class WindDirection : MonoBehaviour
{
	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float additionalRotation;

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0xE204C4", Offset = "0xE204C4", VA = "0xE204C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0xE20504", Offset = "0xE20504", VA = "0xE20504")]
	private Quaternion getRotation()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0xE205D0", Offset = "0xE205D0", VA = "0xE205D0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0xE2074C", Offset = "0xE2074C", VA = "0xE2074C")]
	public WindDirection()
	{
	}
}
[Token(Token = "0x200021D")]
[ExecuteInEditMode]
public class RotateToSelector : BaseRotator
{
	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform editorTarget;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool clampAngle;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxAngle;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform relative;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private NetworkGrabbable networkGrabbable;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float gizmoRadius;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float normalValue;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float snapValue;

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0xDC4C28", Offset = "0xDC4C28", VA = "0xDC4C28")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0xDC4C80", Offset = "0xDC4C80", VA = "0xDC4C80")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0xDC4D74", Offset = "0xDC4D74", VA = "0xDC4D74")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0xDC4EB0", Offset = "0xDC4EB0", VA = "0xDC4EB0")]
	private void rotateTowards(Transform target)
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0xDC5024", Offset = "0xDC5024", VA = "0xDC5024")]
	private void clampAngles()
	{
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0xDC51A8", Offset = "0xDC51A8", VA = "0xDC51A8")]
	public float SnapTo(float a, float snap)
	{
		return default(float);
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0xDC53D8", Offset = "0xDC53D8", VA = "0xDC53D8", Slot = "4")]
	public override float getNormalizedValue()
	{
		return default(float);
	}

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0xDC5290", Offset = "0xDC5290", VA = "0xDC5290")]
	public static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0xDC54E0", Offset = "0xDC54E0", VA = "0xDC54E0")]
	public RotateToSelector()
	{
	}
}
[Token(Token = "0x200021E")]
public class RotateToSelector2 : BaseRotator, IPunObservable
{
	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform editorTarget;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool clampAngleBeyond360;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxAngle;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform relative;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private NetworkGrabbable networkGrabbable;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float gizmoRadius;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float normalValue;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float snapValue;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float snapThreshold;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool rotate;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float currentRotationTotal;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float prevControllerAngle;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float delta;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private XRController controller;

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0xDC5500", Offset = "0xDC5500", VA = "0xDC5500")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0xDC5558", Offset = "0xDC5558", VA = "0xDC5558")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0xDC5658", Offset = "0xDC5658", VA = "0xDC5658")]
	private void OnSelectEnter(XRBaseInteractor arg0)
	{
	}

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0xDC5A2C", Offset = "0xDC5A2C", VA = "0xDC5A2C")]
	private void OnSelectExit(XRBaseInteractor arg0)
	{
	}

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0xDC5A34", Offset = "0xDC5A34", VA = "0xDC5A34")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0xDC5B28", Offset = "0xDC5B28", VA = "0xDC5B28")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0xDC5C14", Offset = "0xDC5C14", VA = "0xDC5C14")]
	private void rotateTowards(Transform target)
	{
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0xDC56E0", Offset = "0xDC56E0", VA = "0xDC56E0")]
	private float getControllerAngle(Transform m_GrabbingInteractor)
	{
		return default(float);
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0xDC5E54", Offset = "0xDC5E54", VA = "0xDC5E54")]
	public Vector3 getOtherAxis()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0xDC5EB4", Offset = "0xDC5EB4", VA = "0xDC5EB4")]
	public float SnapTo(float a, float snap)
	{
		return default(float);
	}

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0xDC5FB8", Offset = "0xDC5FB8", VA = "0xDC5FB8", Slot = "4")]
	public override float getNormalizedValue()
	{
		return default(float);
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0xDC6094", Offset = "0xDC6094", VA = "0xDC6094")]
	public static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0xDC61DC", Offset = "0xDC61DC", VA = "0xDC61DC")]
	public void ToggleRotation(bool on)
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0xDC61E8", Offset = "0xDC61E8", VA = "0xDC61E8", Slot = "5")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0xDC620C", Offset = "0xDC620C", VA = "0xDC620C")]
	public XRController GetGrabbingHand()
	{
		return null;
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0xDC6214", Offset = "0xDC6214", VA = "0xDC6214")]
	public RotateToSelector2()
	{
	}
}
[Token(Token = "0x200021F")]
[ExecuteInEditMode]
public class RotateToSelectorMultipleTimes : BaseRotator, IPunObservable
{
	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform editorTarget;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform relative;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private NetworkGrabbable networkGrabbable;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float gizmoRadius;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float normalValue;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float snapValue;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float rotationSum;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float rotationMax;

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0xDC623C", Offset = "0xDC623C", VA = "0xDC623C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0xDC6294", Offset = "0xDC6294", VA = "0xDC6294")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0xDC6388", Offset = "0xDC6388", VA = "0xDC6388")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0xDC64C0", Offset = "0xDC64C0", VA = "0xDC64C0")]
	private void rotateTowards(Transform target)
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0xDC67CC", Offset = "0xDC67CC", VA = "0xDC67CC", Slot = "5")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0xDC67F0", Offset = "0xDC67F0", VA = "0xDC67F0", Slot = "4")]
	public override float getNormalizedValue()
	{
		return default(float);
	}

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0xDC686C", Offset = "0xDC686C", VA = "0xDC686C")]
	public RotateToSelectorMultipleTimes()
	{
	}
}
[Token(Token = "0x2000220")]
public class SimpleInteractableNetwork : XRSimpleInteractable
{
	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public bool allowDistanceGrab;

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0xDD3420", Offset = "0xDD3420", VA = "0xDD3420", Slot = "7")]
	public override bool IsHoverableBy(XRBaseInteractor interactor)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0xDD35A8", Offset = "0xDD35A8", VA = "0xDD35A8")]
	public SimpleInteractableNetwork()
	{
	}
}
[Token(Token = "0x2000221")]
[ExecuteInEditMode]
public class SlideToSelector : MonoBehaviourPun
{
	[Token(Token = "0x2000222")]
	public enum Axis
	{
		[Token(Token = "0x4000B1F")]
		x,
		[Token(Token = "0x4000B20")]
		y,
		[Token(Token = "0x4000B21")]
		z
	}

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform editorTarget;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform objectToMove;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool limitMovement;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float maxDistance;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float minDistance;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform relative;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NetworkGrabbable networkGrabbable;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float normalValue;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float snapValue;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool snapToEndPoints;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float endPointThreshold;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Axis slideAxis;

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0xDD5F00", Offset = "0xDD5F00", VA = "0xDD5F00")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0xDD5F9C", Offset = "0xDD5F9C", VA = "0xDD5F9C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0xDD6090", Offset = "0xDD6090", VA = "0xDD6090")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0xDD61C4", Offset = "0xDD61C4", VA = "0xDD61C4")]
	private void slideTowards(Transform target)
	{
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0xDD6308", Offset = "0xDD6308", VA = "0xDD6308")]
	private void LimitMovement()
	{
	}

	[Token(Token = "0x6000B0E")]
	[Address(RVA = "0xDD6780", Offset = "0xDD6780", VA = "0xDD6780")]
	public float SnapTo(float a, float snap)
	{
		return default(float);
	}

	[Token(Token = "0x6000B0F")]
	[Address(RVA = "0xDD67BC", Offset = "0xDD67BC", VA = "0xDD67BC")]
	public float SnapToEndPoints(float distance)
	{
		return default(float);
	}

	[Token(Token = "0x6000B10")]
	[Address(RVA = "0xDD66A8", Offset = "0xDD66A8", VA = "0xDD66A8")]
	public float getNormalizedValue()
	{
		return default(float);
	}

	[Token(Token = "0x6000B11")]
	[Address(RVA = "0xDD67EC", Offset = "0xDD67EC", VA = "0xDD67EC")]
	public float ClampDistance(float distance, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x6000B12")]
	[Address(RVA = "0xDD6808", Offset = "0xDD6808", VA = "0xDD6808")]
	public SlideToSelector()
	{
	}
}
[Token(Token = "0x2000223")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB15610", Offset = "0xB15610")]
public class SocketTarget : MonoBehaviour
{
	[Token(Token = "0x2000224")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15674", Offset = "0xB15674")]
	private sealed class <DisableSocketDelayed>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public XRExclusiveSocketInteractor interactor;

		[Token(Token = "0x17000094")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B1A")]
			[Address(RVA = "0xEA2060", Offset = "0xEA2060", VA = "0xEA2060", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000095")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B1C")]
			[Address(RVA = "0xEA20C8", Offset = "0xEA20C8", VA = "0xEA20C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0xEA1F7C", Offset = "0xEA1F7C", VA = "0xEA1F7C")]
		[DebuggerHidden]
		public <DisableSocketDelayed>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0xEA1FB0", Offset = "0xEA1FB0", VA = "0xEA1FB0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0xEA1FB4", Offset = "0xEA1FB4", VA = "0xEA1FB4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0xEA2068", Offset = "0xEA2068", VA = "0xEA2068", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string SocketType;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public XRInteractableEvent SocketedEvent;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool DisableSocketOnSocketed;

	[Token(Token = "0x6000B13")]
	[Address(RVA = "0xEA1D34", Offset = "0xEA1D34", VA = "0xEA1D34")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B14")]
	[Address(RVA = "0xEA1DE8", Offset = "0xEA1DE8", VA = "0xEA1DE8")]
	public void SelectedSwitch(XRBaseInteractor interactor)
	{
	}

	[Token(Token = "0x6000B15")]
	[Address(RVA = "0xEA1F0C", Offset = "0xEA1F0C", VA = "0xEA1F0C")]
	private IEnumerator DisableSocketDelayed(XRExclusiveSocketInteractor interactor)
	{
		return null;
	}

	[Token(Token = "0x6000B16")]
	[Address(RVA = "0xEA1FA8", Offset = "0xEA1FA8", VA = "0xEA1FA8")]
	public SocketTarget()
	{
	}
}
[Token(Token = "0x2000225")]
public class TeleportationAreaWorldUp : BaseTeleportationInteractable
{
	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0xE49BA4", Offset = "0xE49BA4", VA = "0xE49BA4", Slot = "18")]
	protected override bool GenerateTeleportRequest(XRBaseInteractor interactor, RaycastHit raycastHit, ref TeleportRequest teleportRequest)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0xE49C80", Offset = "0xE49C80", VA = "0xE49C80")]
	public TeleportationAreaWorldUp()
	{
	}
}
[Token(Token = "0x2000226")]
public class VRUIButton : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent buttonpressevent;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip clip;

	[Token(Token = "0x6000B1F")]
	[Address(RVA = "0xE1B57C", Offset = "0xE1B57C", VA = "0xE1B57C", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000B20")]
	[Address(RVA = "0xE1B634", Offset = "0xE1B634", VA = "0xE1B634")]
	public VRUIButton()
	{
	}
}
[Token(Token = "0x2000227")]
public class XRExclusiveSocketInteractor : XRSocketInteractor
{
	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public string AcceptedType;

	[Token(Token = "0x6000B21")]
	[Address(RVA = "0xE21F48", Offset = "0xE21F48", VA = "0xE21F48", Slot = "12")]
	public override bool CanSelect(XRBaseInteractable interactable)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B22")]
	[Address(RVA = "0xE22024", Offset = "0xE22024", VA = "0xE22024", Slot = "11")]
	public override bool CanHover(XRBaseInteractable interactable)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B23")]
	[Address(RVA = "0xE22030", Offset = "0xE22030", VA = "0xE22030")]
	public XRExclusiveSocketInteractor()
	{
	}
}
[Token(Token = "0x2000228")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB15684", Offset = "0xB15684")]
public class XRGrabInteractableNetwork : XRGrabInteractable
{
	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private NetworkGrabbable networkGrabbable;

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private Rigidbody m_Rb;

	[Token(Token = "0x6000B24")]
	[Address(RVA = "0xE22038", Offset = "0xE22038", VA = "0xE22038", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000B25")]
	[Address(RVA = "0xE220B4", Offset = "0xE220B4", VA = "0xE220B4", Slot = "11")]
	protected override void OnSelectEnter(XRBaseInteractor interactor)
	{
	}

	[Token(Token = "0x6000B26")]
	[Address(RVA = "0xE220BC", Offset = "0xE220BC", VA = "0xE220BC")]
	internal void OnSelectEnter(XRBaseInteractor interactor, bool distanceGrab)
	{
	}

	[Token(Token = "0x6000B27")]
	[Address(RVA = "0xE22218", Offset = "0xE22218", VA = "0xE22218", Slot = "12")]
	protected override void OnSelectExit(XRBaseInteractor interactor)
	{
	}

	[Token(Token = "0x6000B28")]
	[Address(RVA = "0xE22334", Offset = "0xE22334", VA = "0xE22334")]
	private new void OnDestroy()
	{
	}

	[Token(Token = "0x6000B29")]
	[Address(RVA = "0xE223C8", Offset = "0xE223C8", VA = "0xE223C8", Slot = "8")]
	public override bool IsSelectableBy(XRBaseInteractor interactor)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B2A")]
	[Address(RVA = "0xE2257C", Offset = "0xE2257C", VA = "0xE2257C")]
	public XRGrabInteractableNetwork()
	{
	}
}
[Token(Token = "0x2000229")]
public class XRButton : XRBaseInteractable
{
	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Axis axis;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Transform visual;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float upDistance;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	public float slideLength;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[SerializeField]
	private Bounds bounds;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private XRBaseInteractor hoverInteractor;

	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private XRBaseInteractor lastHoverInteractor;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool previousPress;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public UnityEvent OnUp;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public UnityEvent OnDown;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private AudioSource audioSource;

	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public AudioClip downSound;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public AudioClip upSound;

	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public bool hasBeenDown;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
	public bool hasBeenUp;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	public float currentProgress;

	[Token(Token = "0x6000B2B")]
	[Address(RVA = "0xE20754", Offset = "0xE20754", VA = "0xE20754", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6000B2C")]
	[Address(RVA = "0xE20858", Offset = "0xE20858", VA = "0xE20858", Slot = "6")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6000B2D")]
	[Address(RVA = "0xE20944", Offset = "0xE20944", VA = "0xE20944")]
	private void StartPress(XRBaseInteractor arg0)
	{
	}

	[Token(Token = "0x6000B2E")]
	[Address(RVA = "0xE2094C", Offset = "0xE2094C", VA = "0xE2094C")]
	private void EndPress(XRBaseInteractor arg0)
	{
	}

	[Token(Token = "0x6000B2F")]
	[Address(RVA = "0xE20B64", Offset = "0xE20B64", VA = "0xE20B64")]
	internal bool hasHoverer()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B30")]
	[Address(RVA = "0xE20BD4", Offset = "0xE20BD4", VA = "0xE20BD4")]
	public void EndHover()
	{
	}

	[Token(Token = "0x6000B31")]
	[Address(RVA = "0xE2095C", Offset = "0xE2095C", VA = "0xE2095C")]
	private void updateVisual(float progress)
	{
	}

	[Token(Token = "0x6000B32")]
	[Address(RVA = "0xE20C28", Offset = "0xE20C28", VA = "0xE20C28")]
	private void ButtonDown()
	{
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0xE20C14", Offset = "0xE20C14", VA = "0xE20C14")]
	private void ButtonUp()
	{
	}

	[Token(Token = "0x6000B34")]
	[Address(RVA = "0xE20C3C", Offset = "0xE20C3C", VA = "0xE20C3C")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB1B170", Offset = "0xB1B170")]
	private void recalculateSize()
	{
	}

	[Token(Token = "0x6000B35")]
	[Address(RVA = "0xE20C7C", Offset = "0xE20C7C", VA = "0xE20C7C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000B36")]
	[Address(RVA = "0xE20C80", Offset = "0xE20C80", VA = "0xE20C80")]
	private void initBounds()
	{
	}

	[Token(Token = "0x6000B37")]
	[Address(RVA = "0xE20CD0", Offset = "0xE20CD0", VA = "0xE20CD0")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000B38")]
	[Address(RVA = "0xE212A4", Offset = "0xE212A4", VA = "0xE212A4", Slot = "17")]
	public override void ProcessInteractable(XRInteractionUpdateOrder.UpdatePhase updatePhase)
	{
	}

	[Token(Token = "0x6000B39")]
	[Address(RVA = "0xE215FC", Offset = "0xE215FC", VA = "0xE215FC")]
	private float getProcess(Vector3 vector3)
	{
		return default(float);
	}

	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0xE2180C", Offset = "0xE2180C", VA = "0xE2180C")]
	internal void PlayUpSound()
	{
	}

	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0xE218A0", Offset = "0xE218A0", VA = "0xE218A0")]
	internal void PlayDownSound()
	{
	}

	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0xE21934", Offset = "0xE21934", VA = "0xE21934")]
	public bool isDown()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0xE20BE4", Offset = "0xE20BE4", VA = "0xE20BE4")]
	public bool isDown(float progress)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0xE21950", Offset = "0xE21950", VA = "0xE21950")]
	public bool isUp()
	{
		return default(bool);
	}

	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0xE20BFC", Offset = "0xE20BFC", VA = "0xE20BFC")]
	public bool isUp(float progress)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B40")]
	[Address(RVA = "0xE216DC", Offset = "0xE216DC", VA = "0xE216DC")]
	public static float InverseLerp(Vector3 a, Vector3 b, Vector3 value)
	{
		return default(float);
	}

	[Token(Token = "0x6000B41")]
	[Address(RVA = "0xE211C0", Offset = "0xE211C0", VA = "0xE211C0")]
	private Vector3 getDownPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B42")]
	[Address(RVA = "0xE21120", Offset = "0xE21120", VA = "0xE21120")]
	private Vector3 getUpPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B43")]
	[Address(RVA = "0xE2137C", Offset = "0xE2137C", VA = "0xE2137C")]
	private Vector3 getOnAxis(Vector3 position, bool clamp = true)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000B44")]
	[Address(RVA = "0xE2196C", Offset = "0xE2196C", VA = "0xE2196C")]
	public XRButton()
	{
	}
}
[Serializable]
[Token(Token = "0x200022A")]
public class InteractionState
{
	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool active;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool activatedThisFrame;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
	public bool deActivatedThisFrame;

	[Token(Token = "0x6000B45")]
	[Address(RVA = "0xEE6E94", Offset = "0xEE6E94", VA = "0xEE6E94")]
	public InteractionState()
	{
	}
}
[Serializable]
[Token(Token = "0x200022B")]
public class ButtonEvent
{
	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public InputHelpers.Button button;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool OnActivatedThisFrame;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool OnDeactivatedThisFrame;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnEvent;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InteractionState state;

	[Token(Token = "0x6000B46")]
	[Address(RVA = "0xE7D160", Offset = "0xE7D160", VA = "0xE7D160")]
	public ButtonEvent()
	{
	}
}
[Token(Token = "0x200022C")]
public class XRButtonEvents : MonoBehaviour
{
	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float m_AxisToPressThreshold;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private XRNode m_ControllerNode;

	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private InputDevice m_InputDevice;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<ButtonEvent> myEvents;

	[Token(Token = "0x17000096")]
	public XRNode controllerNode
	{
		[Token(Token = "0x6000B47")]
		[Address(RVA = "0xE2197C", Offset = "0xE2197C", VA = "0xE2197C")]
		get
		{
			return default(XRNode);
		}
		[Token(Token = "0x6000B48")]
		[Address(RVA = "0xE21984", Offset = "0xE21984", VA = "0xE21984")]
		set
		{
		}
	}

	[Token(Token = "0x17000097")]
	public InputDevice inputDevice
	{
		[Token(Token = "0x6000B49")]
		[Address(RVA = "0xE2198C", Offset = "0xE2198C", VA = "0xE2198C")]
		get
		{
			return default(InputDevice);
		}
	}

	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0xE219D0", Offset = "0xE219D0", VA = "0xE219D0")]
	private void HandleInteractionAction(XRNode node, InputHelpers.Button button, ref InteractionState interactionState)
	{
	}

	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0xE21AC8", Offset = "0xE21AC8", VA = "0xE21AC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0xE21BB4", Offset = "0xE21BB4", VA = "0xE21BB4")]
	private void HandleEvent(ButtonEvent tmp)
	{
	}

	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0xE21C4C", Offset = "0xE21C4C", VA = "0xE21C4C")]
	public XRButtonEvents()
	{
	}
}
[Token(Token = "0x200022D")]
public class XRDirectInteractorNetwork : XRDirectInteractor
{
	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public bool hasSelection;

	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0xE21C60", Offset = "0xE21C60", VA = "0xE21C60", Slot = "18")]
	protected override void OnSelectEnter(XRBaseInteractable interactable)
	{
	}

	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0xE21D40", Offset = "0xE21D40", VA = "0xE21D40", Slot = "19")]
	protected override void OnSelectExit(XRBaseInteractable interactable)
	{
	}

	[Token(Token = "0x6000B50")]
	[Address(RVA = "0xE21D68", Offset = "0xE21D68", VA = "0xE21D68", Slot = "11")]
	public override bool CanHover(XRBaseInteractable interactable)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B51")]
	[Address(RVA = "0xE21E04", Offset = "0xE21E04", VA = "0xE21E04", Slot = "12")]
	public override bool CanSelect(XRBaseInteractable interactable)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B52")]
	[Address(RVA = "0xE21EA0", Offset = "0xE21EA0", VA = "0xE21EA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B53")]
	[Address(RVA = "0xE21F40", Offset = "0xE21F40", VA = "0xE21F40")]
	public XRDirectInteractorNetwork()
	{
	}
}
[Token(Token = "0x200022E")]
public class XRHelper : MonoBehaviour
{
	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static MethodInfo mi;

	[Token(Token = "0x6000B54")]
	[Address(RVA = "0xE22584", Offset = "0xE22584", VA = "0xE22584")]
	internal static void Reflected_ForceSelect(XRInteractionManager interactionManager, XRBaseInteractor interactor, XRBaseInteractable interactable)
	{
	}

	[Token(Token = "0x6000B55")]
	[Address(RVA = "0xE226A0", Offset = "0xE226A0", VA = "0xE226A0")]
	public XRHelper()
	{
	}
}
[Token(Token = "0x200022F")]
public class XRInputDebug : ControllerInput
{
	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private TextMeshProUGUI text;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private InputHelpers.Button triggerButton;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private InteractionState triggerState;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private InputHelpers.Button gripButton;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private InteractionState gripState;

	[Token(Token = "0x6000B57")]
	[Address(RVA = "0xE22750", Offset = "0xE22750", VA = "0xE22750")]
	private void Start()
	{
	}

	[Token(Token = "0x6000B58")]
	[Address(RVA = "0xE227A8", Offset = "0xE227A8", VA = "0xE227A8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B59")]
	[Address(RVA = "0xE2294C", Offset = "0xE2294C", VA = "0xE2294C")]
	public XRInputDebug()
	{
	}
}
[Token(Token = "0x2000230")]
public class XRInputRemapper : MonoBehaviour
{
	[Token(Token = "0x2000231")]
	public enum ControllerType
	{
		[Token(Token = "0x4000B55")]
		None,
		[Token(Token = "0x4000B56")]
		Oculus,
		[Token(Token = "0x4000B57")]
		Vive,
		[Token(Token = "0x4000B58")]
		ValveIndex
	}

	[Serializable]
	[Token(Token = "0x2000232")]
	public class Configuration
	{
		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MonoBehaviour target;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool remapSelect;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool remapActivate;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool remapUiPress;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool remapUiPressSecond;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool remapMenu;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool remapButton;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		public bool remapTreshold;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ConfigurationController defaultMapping;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ConfigurationController[] mappings;

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0xE233E8", Offset = "0xE233E8", VA = "0xE233E8")]
		public Configuration()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000233")]
	public class ConfigurationController
	{
		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ControllerType type;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public InputHelpers.Button selectUsage;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InputHelpers.Button activateUsage;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public InputHelpers.Button uiPressUsage;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InputHelpers.Button uiPressUsageSecond;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public InputHelpers.Button menuButton;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InputHelpers.Button buttonUsage;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float axisToPressThreshold;

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Configuration conf;

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0xE230E0", Offset = "0xE230E0", VA = "0xE230E0")]
		public string getDisplayName()
		{
			return null;
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0xE233F0", Offset = "0xE233F0", VA = "0xE233F0")]
		public ConfigurationController()
		{
		}
	}

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public XRNode m_ControllerNode;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Configuration[] configurations;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private InputDevice m_InputDevice;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private InputDevice lastDevice;

	[Token(Token = "0x17000098")]
	public InputDevice inputDevice
	{
		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0xE22B8C", Offset = "0xE22B8C", VA = "0xE22B8C")]
		get
		{
			return default(InputDevice);
		}
	}

	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0xE229E4", Offset = "0xE229E4", VA = "0xE229E4")]
	public static string[] getIdentifier(ControllerType type)
	{
		return null;
	}

	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0xE22BD0", Offset = "0xE22BD0", VA = "0xE22BD0")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0xE22D20", Offset = "0xE22D20", VA = "0xE22D20")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0xE23044", Offset = "0xE23044", VA = "0xE23044")]
	private void testChange()
	{
	}

	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0xE22ED0", Offset = "0xE22ED0", VA = "0xE22ED0")]
	private void ChangedDeviceTo(InputDevice inputDevice)
	{
	}

	[Token(Token = "0x6000B60")]
	[Address(RVA = "0xE23078", Offset = "0xE23078", VA = "0xE23078")]
	public static bool isDevice(InputDevice inputDevice, ControllerType tmp)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B61")]
	[Address(RVA = "0xE23324", Offset = "0xE23324", VA = "0xE23324")]
	private static bool matches(string name, string[] v)
	{
		return default(bool);
	}

	[Token(Token = "0x6000B62")]
	[Address(RVA = "0xE23140", Offset = "0xE23140", VA = "0xE23140")]
	private void applyConfiguration(Configuration config, ConfigurationController mapping)
	{
	}

	[Token(Token = "0x6000B63")]
	[Address(RVA = "0xE233E0", Offset = "0xE233E0", VA = "0xE233E0")]
	public XRInputRemapper()
	{
	}
}
[Token(Token = "0x2000234")]
public class DeactivateUIWithDistance : MonoBehaviour
{
	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float startFadeoutDistance;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float endFadeoutDistance;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Canvas canvas;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RawImage image;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private CanvasGroup group;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isRendering;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float distanceToPlayer;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color col;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float alphaValue;

	[Token(Token = "0x17000099")]
	public bool IsRendering
	{
		[Token(Token = "0x6000B67")]
		[Address(RVA = "0xD81F58", Offset = "0xD81F58", VA = "0xD81F58")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000B68")]
	[Address(RVA = "0xD81F60", Offset = "0xD81F60", VA = "0xD81F60")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B69")]
	[Address(RVA = "0xD820A8", Offset = "0xD820A8", VA = "0xD820A8")]
	public void Toggle(bool active)
	{
	}

	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0xD820E4", Offset = "0xD820E4", VA = "0xD820E4")]
	private void SetAlpha(float value)
	{
	}

	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0xD821F8", Offset = "0xD821F8", VA = "0xD821F8")]
	private void Fade(float distance)
	{
	}

	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0xD82294", Offset = "0xD82294", VA = "0xD82294")]
	public DeactivateUIWithDistance()
	{
	}
}
[Token(Token = "0x2000235")]
public class ReefLadder : MonoBehaviour
{
	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UnderwaterReef reef;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private TeleportHelperRiff reefTeleport;

	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0xE3F948", Offset = "0xE3F948", VA = "0xE3F948")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0xE3F968", Offset = "0xE3F968", VA = "0xE3F968")]
	public ReefLadder()
	{
	}
}
[Token(Token = "0x2000236")]
public class TeleportHelperRiff : TeleportHelper
{
	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool toRiff;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private UnderwaterSpawner underwaterManager;

	[Token(Token = "0x1700009A")]
	private UnderwaterSpawner UnderwaterManager
	{
		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0xE46664", Offset = "0xE46664", VA = "0xE46664")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B70")]
	[Address(RVA = "0xE467C0", Offset = "0xE467C0", VA = "0xE467C0", Slot = "4")]
	public override void TeleportToAnchor()
	{
	}

	[Token(Token = "0x6000B71")]
	[Address(RVA = "0xE467E4", Offset = "0xE467E4", VA = "0xE467E4")]
	private void ActivateSetting()
	{
	}

	[Token(Token = "0x6000B72")]
	[Address(RVA = "0xE46960", Offset = "0xE46960", VA = "0xE46960")]
	public TeleportHelperRiff()
	{
	}
}
[Token(Token = "0x2000237")]
public class ToggleChildRenderers : MonoBehaviour
{
	[Token(Token = "0x6000B73")]
	[Address(RVA = "0xE4B8B8", Offset = "0xE4B8B8", VA = "0xE4B8B8")]
	public void ToggleAllRenderers(bool activate)
	{
	}

	[Token(Token = "0x6000B74")]
	[Address(RVA = "0xE4B8EC", Offset = "0xE4B8EC", VA = "0xE4B8EC")]
	private void GetChildrenRecursive(GameObject obj, bool activate)
	{
	}

	[Token(Token = "0x6000B75")]
	[Address(RVA = "0xE4BC64", Offset = "0xE4BC64", VA = "0xE4BC64")]
	public ToggleChildRenderers()
	{
	}
}
[Token(Token = "0x2000238")]
public class TweenInitializer : MonoBehaviour
{
	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private BezierWalkerWithSpeed path;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float pathLenght;

	[Token(Token = "0x6000B76")]
	[Address(RVA = "0xE4FA58", Offset = "0xE4FA58", VA = "0xE4FA58")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000B77")]
	[Address(RVA = "0xE4FAB0", Offset = "0xE4FAB0", VA = "0xE4FAB0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B78")]
	[Address(RVA = "0xE4FB6C", Offset = "0xE4FB6C", VA = "0xE4FB6C")]
	private float getNormalized()
	{
		return default(float);
	}

	[Token(Token = "0x6000B79")]
	[Address(RVA = "0xE4FC48", Offset = "0xE4FC48", VA = "0xE4FC48")]
	public TweenInitializer()
	{
	}
}
[Token(Token = "0x2000239")]
public class UnderwaterReef : MonoBehaviour
{
	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Light underwaterLight;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource audioSource;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ToggleChildRenderers islandRenderers;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private TeleportHelperRiff toRaft;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private TeleportHelperRiff toReef;

	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0xE531E8", Offset = "0xE531E8", VA = "0xE531E8")]
	public void SetTeleportPointToRaft(TeleportHelperRiff raftHelper)
	{
	}

	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0xE531F0", Offset = "0xE531F0", VA = "0xE531F0")]
	public void TeleportToReef()
	{
	}

	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0xE53210", Offset = "0xE53210", VA = "0xE53210")]
	public void TeleportToRaft()
	{
	}

	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0xE53230", Offset = "0xE53230", VA = "0xE53230")]
	public UnderwaterReef()
	{
	}
}
[Token(Token = "0x200023A")]
public class UnderwaterSpawner : MonoBehaviourPun
{
	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light lightScene;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioSource waves;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ToggleChildRenderers raftRenderes;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool IsUnderWater;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static UnderwaterSpawner instance;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private IslandSpawner islandSpawner;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject water;

	[Token(Token = "0x1700009B")]
	public Light lightRiff
	{
		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0xE53238", Offset = "0xE53238", VA = "0xE53238")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700009C")]
	public ToggleChildRenderers islandRenderes
	{
		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0xE53268", Offset = "0xE53268", VA = "0xE53268")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700009D")]
	public AudioSource underwater
	{
		[Token(Token = "0x6000B80")]
		[Address(RVA = "0xE53298", Offset = "0xE53298", VA = "0xE53298")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700009E")]
	public UnderwaterReef reef
	{
		[Token(Token = "0x6000B81")]
		[Address(RVA = "0xE532C8", Offset = "0xE532C8", VA = "0xE532C8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700009F")]
	public static UnderwaterSpawner Instance
	{
		[Token(Token = "0x6000B82")]
		[Address(RVA = "0xE466EC", Offset = "0xE466EC", VA = "0xE466EC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000B83")]
	[Address(RVA = "0xE532F0", Offset = "0xE532F0", VA = "0xE532F0")]
	private void SetUnderwater(bool active)
	{
	}

	[Token(Token = "0x6000B84")]
	[Address(RVA = "0xE46810", Offset = "0xE46810", VA = "0xE46810")]
	public void ChangeSettings(bool toRiff)
	{
	}

	[Token(Token = "0x6000B85")]
	[Address(RVA = "0xE53348", Offset = "0xE53348", VA = "0xE53348")]
	public UnderwaterSpawner()
	{
	}
}
[Token(Token = "0x200023B")]
public class CustomInputField : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private InputField inputField;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string inputFIeldText;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Outline selectedOutline;

	[Token(Token = "0x6000B86")]
	[Address(RVA = "0xD7EFC0", Offset = "0xD7EFC0", VA = "0xD7EFC0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000B87")]
	[Address(RVA = "0xD7F078", Offset = "0xD7F078", VA = "0xD7F078")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000B88")]
	[Address(RVA = "0xD7F130", Offset = "0xD7F130", VA = "0xD7F130")]
	private void Changed(string arg0)
	{
	}

	[Token(Token = "0x6000B89")]
	[Address(RVA = "0xD7F150", Offset = "0xD7F150", VA = "0xD7F150")]
	internal void doAppend(string currentValue)
	{
	}

	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0xD7F180", Offset = "0xD7F180", VA = "0xD7F180")]
	private void updateInputField()
	{
	}

	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0xD7F218", Offset = "0xD7F218", VA = "0xD7F218")]
	internal void Backspace()
	{
	}

	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0xD7F260", Offset = "0xD7F260", VA = "0xD7F260")]
	public void selected(bool v)
	{
	}

	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0xD7F304", Offset = "0xD7F304", VA = "0xD7F304", Slot = "4")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0xD7F3D8", Offset = "0xD7F3D8", VA = "0xD7F3D8")]
	public CustomInputField()
	{
	}
}
[Token(Token = "0x200023C")]
public class Deselect : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0xD8557C", Offset = "0xD8557C", VA = "0xD8557C", Slot = "4")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000B90")]
	[Address(RVA = "0xD8569C", Offset = "0xD8569C", VA = "0xD8569C")]
	public Deselect()
	{
	}
}
[Token(Token = "0x200023D")]
public class InputClickHandler : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerClickHandler
{
	[Token(Token = "0x200023E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB156E8", Offset = "0xB156E8")]
	private sealed class <PointerDown>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PointerEventData eventData;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InputClickHandler <>4__this;

		[Token(Token = "0x170000A0")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000B98")]
			[Address(RVA = "0xF90884", Offset = "0xF90884", VA = "0xF90884", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000B9A")]
			[Address(RVA = "0xF908EC", Offset = "0xF908EC", VA = "0xF908EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0xF90770", Offset = "0xF90770", VA = "0xF90770")]
		[DebuggerHidden]
		public <PointerDown>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0xF907A4", Offset = "0xF907A4", VA = "0xF907A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0xF907A8", Offset = "0xF907A8", VA = "0xF907A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0xF9088C", Offset = "0xF9088C", VA = "0xF9088C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InputField inf;

	[Token(Token = "0x6000B91")]
	[Address(RVA = "0xF9069C", Offset = "0xF9069C", VA = "0xF9069C", Slot = "5")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000B92")]
	[Address(RVA = "0xF90744", Offset = "0xF90744", VA = "0xF90744", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000B93")]
	[Address(RVA = "0xF906C8", Offset = "0xF906C8", VA = "0xF906C8")]
	private IEnumerator PointerDown(PointerEventData eventData)
	{
		return null;
	}

	[Token(Token = "0x6000B94")]
	[Address(RVA = "0xF9079C", Offset = "0xF9079C", VA = "0xF9079C")]
	public InputClickHandler()
	{
	}
}
[Token(Token = "0x200023F")]
public class WaterPlacer : MonoBehaviour
{
	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int x;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int z;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private LowPolyWaterScript lpw;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int scale;

	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0xE1E05C", Offset = "0xE1E05C", VA = "0xE1E05C")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0xE1E060", Offset = "0xE1E060", VA = "0xE1E060")]
	private void revalidate()
	{
	}

	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0xE1E254", Offset = "0xE1E254", VA = "0xE1E254")]
	public WaterPlacer()
	{
	}
}
[Token(Token = "0x2000240")]
public class ToggleGameObjectEnable : MonoBehaviour
{
	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _go;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _enabled;

	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0xE4BC6C", Offset = "0xE4BC6C", VA = "0xE4BC6C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0xE4BCC8", Offset = "0xE4BCC8", VA = "0xE4BCC8")]
	public ToggleGameObjectEnable()
	{
	}
}
[Token(Token = "0x2000241")]
public class ControllerInputData : ControllerInput
{
	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ControllerInputButton primary;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ControllerInputButton secondary;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private InputHelpers.Button axis_x;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private InputHelpers.Button axis_y;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private InputHelpers.Button trigger;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float axis_x_value;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float axis_y_value;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float trigger_value;

	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0xD7C4B8", Offset = "0xD7C4B8", VA = "0xD7C4B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0xD7C63C", Offset = "0xD7C63C", VA = "0xD7C63C")]
	public ControllerInputData()
	{
	}
}
[Token(Token = "0x2000242")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB156F8", Offset = "0xB156F8")]
public class FreeFlyCamera : MonoBehaviour
{
	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool _active;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	private bool _enableRotation;

	[Token(Token = "0x4000B9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float _mouseSense;

	[Token(Token = "0x4000BA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool _enableTranslation;

	[Token(Token = "0x4000BA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float _translationSpeed;

	[Token(Token = "0x4000BA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool _enableMovement;

	[Token(Token = "0x4000BA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float _movementSpeed;

	[Token(Token = "0x4000BA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float _boostedSpeed;

	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private KeyCode _boostSpeed;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private KeyCode _moveUp;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private KeyCode _moveDown;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private bool _enableSpeedAcceleration;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private float _speedAccelerationFactor;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private KeyCode _initPositonButton;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private CursorLockMode _wantedMode;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _currentIncrease;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float _currentIncreaseMem;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 _initPosition;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 _initRotation;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float currentHorizontal;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float velocityHorizontal;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float currentVertical;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float velocityVertical;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float dampTimeMove;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float dampTimeLook;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float currentPitch;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float currentRoll;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float currentPitchVelocity;

	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private float currentRollVelocity;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float currentElevate;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float currentElevateVelocity;

	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0xEBFD24", Offset = "0xEBFD24", VA = "0xEBFD24")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0xEBFD80", Offset = "0xEBFD80", VA = "0xEBFD80")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0xEBFD94", Offset = "0xEBFD94", VA = "0xEBFD94")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0xEBFDA4", Offset = "0xEBFDA4", VA = "0xEBFDA4")]
	private void SetCursorState()
	{
	}

	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0xEBFE48", Offset = "0xEBFE48", VA = "0xEBFE48")]
	private void CalculateCurrentIncrease(bool moving)
	{
	}

	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0xEBFF34", Offset = "0xEBFF34", VA = "0xEBFF34")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0xEC085C", Offset = "0xEC085C", VA = "0xEC085C")]
	public FreeFlyCamera()
	{
	}
}
[Token(Token = "0x2000243")]
public class FreeFlyCameraDrone : MonoBehaviourPun, IPunObservable
{
	[Serializable]
	[Token(Token = "0x2000244")]
	public class flightMode
	{
		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool leftForward;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool leftTurn;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool leftThrottle;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool leftStrafe;

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0xEC0F28", Offset = "0xEC0F28", VA = "0xEC0F28")]
		public ControllerInputData getForward(ControllerInputData left, ControllerInputData right)
		{
			return null;
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0xEC0F58", Offset = "0xEC0F58", VA = "0xEC0F58")]
		public ControllerInputData getTurn(ControllerInputData left, ControllerInputData right)
		{
			return null;
		}

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0xEC0F48", Offset = "0xEC0F48", VA = "0xEC0F48")]
		public ControllerInputData getThrottle(ControllerInputData left, ControllerInputData right)
		{
			return null;
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0xEC0F38", Offset = "0xEC0F38", VA = "0xEC0F38")]
		public ControllerInputData getStrafe(ControllerInputData left, ControllerInputData right)
		{
			return null;
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0xEC133C", Offset = "0xEC133C", VA = "0xEC133C")]
		public flightMode()
		{
		}
	}

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public flightMode mode1;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public flightMode mode2;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public flightMode mode3;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public flightMode mode4;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int currentMode;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool currentState;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	[SerializeField]
	private bool _active;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	[SerializeField]
	private bool _enableRotation;

	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private float _mouseSense;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[SerializeField]
	private float _translationSpeed;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private bool _enableMovement;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[SerializeField]
	private float _movementSpeed;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private float _boostedSpeed;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[SerializeField]
	private KeyCode _boostSpeed;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private KeyCode _moveUp;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private KeyCode _moveDown;

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private bool _enableSpeedAcceleration;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private float _speedAccelerationFactor;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ControllerInputData left;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ControllerInputData right;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float _currentIncrease;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float _currentIncreaseMem;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 _initPosition;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 _initRotation;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public FpsBasedCamera fpsCam;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Renderer droneRenderer;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject preview;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject overlayCanvas;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject overlayCamera;

	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0xEC08D8", Offset = "0xEC08D8", VA = "0xEC08D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0xEC0928", Offset = "0xEC0928", VA = "0xEC0928")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0xEC0984", Offset = "0xEC0984", VA = "0xEC0984")]
	private void CalculateCurrentIncrease(bool moving)
	{
	}

	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0xEC0A70", Offset = "0xEC0A70", VA = "0xEC0A70")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0xEC0F68", Offset = "0xEC0F68", VA = "0xEC0F68")]
	public void toggleDrone()
	{
	}

	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0xEC0FE0", Offset = "0xEC0FE0", VA = "0xEC0FE0")]
	private void ToggleDrone(bool targetState, bool droneState = true)
	{
	}

	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0xEC1128", Offset = "0xEC1128", VA = "0xEC1128")]
	[PunRPC]
	private void RPC_ToggleDrone(bool targetState, bool droneState)
	{
	}

	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0xEC11B8", Offset = "0xEC11B8", VA = "0xEC11B8", Slot = "4")]
	public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
	{
	}

	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0xEC11DC", Offset = "0xEC11DC", VA = "0xEC11DC")]
	public FreeFlyCameraDrone()
	{
	}
}
[Token(Token = "0x2000245")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB1575C", Offset = "0xB1575C")]
public class CFX_AutoStopLoopedEffect : MonoBehaviour
{
	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float effectDuration;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float d;

	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0xE7D688", Offset = "0xE7D688", VA = "0xE7D688")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0xE7D694", Offset = "0xE7D694", VA = "0xE7D694")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0xE7D7A4", Offset = "0xE7D7A4", VA = "0xE7D7A4")]
	public CFX_AutoStopLoopedEffect()
	{
	}
}
[Token(Token = "0x2000246")]
public class CFX_Demo : MonoBehaviour
{
	[Token(Token = "0x2000247")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB157C0", Offset = "0xB157C0")]
	private sealed class <RandomSpawnsCoroutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CFX_Demo <>4__this;

		[Token(Token = "0x170000A2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BC5")]
			[Address(RVA = "0xE7EE04", Offset = "0xE7EE04", VA = "0xE7EE04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BC7")]
			[Address(RVA = "0xE7EE6C", Offset = "0xE7EE6C", VA = "0xE7EE6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0xE7E750", Offset = "0xE7E750", VA = "0xE7E750")]
		[DebuggerHidden]
		public <RandomSpawnsCoroutine>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0xE7EB58", Offset = "0xE7EB58", VA = "0xE7EB58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0xE7EB5C", Offset = "0xE7EB5C", VA = "0xE7EB5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0xE7EE0C", Offset = "0xE7EE0C", VA = "0xE7EE0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool orderedSpawns;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float step;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float range;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float order;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material groundMat;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material waterMat;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] ParticleExamples;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Dictionary<string, float> ParticlesYOffsetD;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int exampleIndex;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string randomSpawnsDelay;

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool randomSpawns;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool slowMo;

	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0xE7D864", Offset = "0xE7D864", VA = "0xE7D864")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0xE7D9FC", Offset = "0xE7D9FC", VA = "0xE7D9FC")]
	private GameObject spawnParticle()
	{
		return null;
	}

	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0xE7DC60", Offset = "0xE7DC60", VA = "0xE7DC60")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0xE7E6E0", Offset = "0xE7E6E0", VA = "0xE7E6E0")]
	private IEnumerator RandomSpawnsCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0xE7E77C", Offset = "0xE7E77C", VA = "0xE7E77C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0xE7E3E4", Offset = "0xE7E3E4", VA = "0xE7E3E4")]
	private void prevParticle()
	{
	}

	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0xE7E564", Offset = "0xE7E564", VA = "0xE7E564")]
	private void nextParticle()
	{
	}

	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0xE7E7D8", Offset = "0xE7E7D8", VA = "0xE7E7D8")]
	public CFX_Demo()
	{
	}
}
[Token(Token = "0x2000248")]
public class CFX_Demo_New : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000249")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB157D0", Offset = "0xB157D0")]
	private sealed class <>c
	{
		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Comparison<GameObject> <>9__16_0;

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0xE7FC90", Offset = "0xE7FC90", VA = "0xE7FC90")]
		public <>c()
		{
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0xE7FC98", Offset = "0xE7FC98", VA = "0xE7FC98")]
		internal int <Awake>b__16_0(GameObject o1, GameObject o2)
		{
			return default(int);
		}
	}

	[Token(Token = "0x200024A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB157E0", Offset = "0xB157E0")]
	private sealed class <CheckForDeletedParticles>d__25 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CFX_Demo_New <>4__this;

		[Token(Token = "0x170000A4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BDC")]
			[Address(RVA = "0xE7FE4C", Offset = "0xE7FE4C", VA = "0xE7FE4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BDE")]
			[Address(RVA = "0xE7FEB4", Offset = "0xE7FEB4", VA = "0xE7FEB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0xE7FB90", Offset = "0xE7FB90", VA = "0xE7FB90")]
		[DebuggerHidden]
		public <CheckForDeletedParticles>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0xE7FCEC", Offset = "0xE7FCEC", VA = "0xE7FCEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0xE7FCF0", Offset = "0xE7FCF0", VA = "0xE7FCF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0xE7FE54", Offset = "0xE7FE54", VA = "0xE7FE54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer groundRenderer;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Collider groundCollider;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image slowMoBtn;

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text slowMoLabel;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image camRotBtn;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text camRotLabel;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Image groundBtn;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text groundLabel;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text EffectLabel;

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Text EffectIndexLabel;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject[] ParticleExamples;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int exampleIndex;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private bool slowMo;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 defaultCamPosition;

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Quaternion defaultCamRotation;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private List<GameObject> onScreenParticles;

	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0xE7EE74", Offset = "0xE7EE74", VA = "0xE7EE74")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0xE7F1C4", Offset = "0xE7F1C4", VA = "0xE7F1C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0xE7F864", Offset = "0xE7F864", VA = "0xE7F864")]
	public void OnToggleGround()
	{
	}

	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0xE7F944", Offset = "0xE7F944", VA = "0xE7F944")]
	public void OnToggleCamera()
	{
	}

	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0xE7FA4C", Offset = "0xE7FA4C", VA = "0xE7FA4C")]
	public void OnToggleSlowMo()
	{
	}

	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0xE7FB18", Offset = "0xE7FB18", VA = "0xE7FB18")]
	public void OnPreviousEffect()
	{
	}

	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0xE7FB1C", Offset = "0xE7FB1C", VA = "0xE7FB1C")]
	public void OnNextEffect()
	{
	}

	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0xE7F094", Offset = "0xE7F094", VA = "0xE7F094")]
	private void UpdateUI()
	{
	}

	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0xE7F690", Offset = "0xE7F690", VA = "0xE7F690")]
	private GameObject spawnParticle()
	{
		return null;
	}

	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0xE7FB20", Offset = "0xE7FB20", VA = "0xE7FB20")]
	private IEnumerator CheckForDeletedParticles()
	{
		return null;
	}

	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0xE7F4DC", Offset = "0xE7F4DC", VA = "0xE7F4DC")]
	private void prevParticle()
	{
	}

	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0xE7F514", Offset = "0xE7F514", VA = "0xE7F514")]
	private void nextParticle()
	{
	}

	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0xE7F548", Offset = "0xE7F548", VA = "0xE7F548")]
	private void destroyParticles()
	{
	}

	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0xE7FBBC", Offset = "0xE7FBBC", VA = "0xE7FBBC")]
	public CFX_Demo_New()
	{
	}
}
[Token(Token = "0x200024B")]
public class CFX_Demo_RandomDir : MonoBehaviour
{
	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 min;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 max;

	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0xE7FEBC", Offset = "0xE7FEBC", VA = "0xE7FEBC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0xE7FF70", Offset = "0xE7FF70", VA = "0xE7FF70")]
	public CFX_Demo_RandomDir()
	{
	}
}
[Token(Token = "0x200024C")]
public class CFX_Demo_RandomDirectionTranslate : MonoBehaviour
{
	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 baseDir;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 axis;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool gravity;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 dir;

	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0xE80004", Offset = "0xE80004", VA = "0xE80004")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0xE80168", Offset = "0xE80168", VA = "0xE80168")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0xE802E4", Offset = "0xE802E4", VA = "0xE802E4")]
	public CFX_Demo_RandomDirectionTranslate()
	{
	}
}
[Token(Token = "0x200024D")]
public class CFX_Demo_RotateCamera : MonoBehaviour
{
	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static bool rotating;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform rotationCenter;

	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0xE80374", Offset = "0xE80374", VA = "0xE80374")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0xE804BC", Offset = "0xE804BC", VA = "0xE804BC")]
	public CFX_Demo_RotateCamera()
	{
	}
}
[Token(Token = "0x200024E")]
public class CFX_Demo_Translate : MonoBehaviour
{
	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 rotation;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 axis;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool gravity;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 dir;

	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0xE80520", Offset = "0xE80520", VA = "0xE80520")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0xE805FC", Offset = "0xE805FC", VA = "0xE805FC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0xE806E4", Offset = "0xE806E4", VA = "0xE806E4")]
	public CFX_Demo_Translate()
	{
	}
}
[Token(Token = "0x200024F")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB157F0", Offset = "0xB157F0")]
public class CFX_AutoDestructShuriken : MonoBehaviour
{
	[Token(Token = "0x2000250")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15854", Offset = "0xB15854")]
	private sealed class <CheckIfAlive>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CFX_AutoDestructShuriken <>4__this;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ParticleSystem <ps>5__2;

		[Token(Token = "0x170000A6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000BF0")]
			[Address(RVA = "0xE7D548", Offset = "0xE7D548", VA = "0xE7D548", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000BF2")]
			[Address(RVA = "0xE7D5B0", Offset = "0xE7D5B0", VA = "0xE7D5B0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0xE7D398", Offset = "0xE7D398", VA = "0xE7D398")]
		[DebuggerHidden]
		public <CheckIfAlive>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0xE7D3CC", Offset = "0xE7D3CC", VA = "0xE7D3CC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0xE7D3D0", Offset = "0xE7D3D0", VA = "0xE7D3D0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0xE7D550", Offset = "0xE7D550", VA = "0xE7D550", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool OnlyDeactivate;

	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0xE7D2D4", Offset = "0xE7D2D4", VA = "0xE7D2D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0xE7D328", Offset = "0xE7D328", VA = "0xE7D328")]
	private IEnumerator CheckIfAlive()
	{
		return null;
	}

	[Token(Token = "0x6000BEC")]
	[Address(RVA = "0xE7D3C4", Offset = "0xE7D3C4", VA = "0xE7D3C4")]
	public CFX_AutoDestructShuriken()
	{
	}
}
[Token(Token = "0x2000251")]
public class CFX_AutoRotate : MonoBehaviour
{
	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotation;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Space space;

	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0xE7D5B8", Offset = "0xE7D5B8", VA = "0xE7D5B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0xE7D678", Offset = "0xE7D678", VA = "0xE7D678")]
	public CFX_AutoRotate()
	{
	}
}
[Token(Token = "0x2000252")]
public class CFX_AutodestructWhenNoChildren : MonoBehaviour
{
	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0xE7D7B4", Offset = "0xE7D7B4", VA = "0xE7D7B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0xE7D85C", Offset = "0xE7D85C", VA = "0xE7D85C")]
	public CFX_AutodestructWhenNoChildren()
	{
	}
}
[Token(Token = "0x2000253")]
public class CFX_InspectorHelp : MonoBehaviour
{
	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool Locked;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string Title;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string HelpText;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int MsgType;

	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0xE80774", Offset = "0xE80774", VA = "0xE80774")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB1B2F8", Offset = "0xB1B2F8")]
	private void Unlock()
	{
	}

	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0xE8077C", Offset = "0xE8077C", VA = "0xE8077C")]
	public CFX_InspectorHelp()
	{
	}
}
[Token(Token = "0x2000254")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB15864", Offset = "0xB15864")]
public class CFX_LightIntensityFade : MonoBehaviour
{
	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float duration;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float delay;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float finalIntensity;

	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float baseIntensity;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool autodestruct;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float p_lifetime;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float p_delay;

	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0xE80784", Offset = "0xE80784", VA = "0xE80784")]
	private void Start()
	{
	}

	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0xE807EC", Offset = "0xE807EC", VA = "0xE807EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0xE80870", Offset = "0xE80870", VA = "0xE80870")]
	private void Update()
	{
	}

	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0xE80A10", Offset = "0xE80A10", VA = "0xE80A10")]
	public CFX_LightIntensityFade()
	{
	}
}
[Token(Token = "0x2000255")]
public class CFX_ShurikenThreadFix : MonoBehaviour
{
	[Token(Token = "0x2000256")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB158C8", Offset = "0xB158C8")]
	private sealed class <WaitFrame>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CFX_ShurikenThreadFix <>4__this;

		[Token(Token = "0x170000A8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C03")]
			[Address(RVA = "0xE80C50", Offset = "0xE80C50", VA = "0xE80C50", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C05")]
			[Address(RVA = "0xE80CB8", Offset = "0xE80CB8", VA = "0xE80CB8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0xE80B70", Offset = "0xE80B70", VA = "0xE80B70")]
		[DebuggerHidden]
		public <WaitFrame>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0xE80BA4", Offset = "0xE80BA4", VA = "0xE80BA4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0xE80BA8", Offset = "0xE80BA8", VA = "0xE80BA8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0xE80C58", Offset = "0xE80C58", VA = "0xE80C58", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem[] systems;

	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0xE80A20", Offset = "0xE80A20", VA = "0xE80A20")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0xE80B00", Offset = "0xE80B00", VA = "0xE80B00")]
	private IEnumerator WaitFrame()
	{
		return null;
	}

	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0xE80B9C", Offset = "0xE80B9C", VA = "0xE80B9C")]
	public CFX_ShurikenThreadFix()
	{
	}
}
[Token(Token = "0x2000257")]
public class CFX_SpawnSystem : MonoBehaviour
{
	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static CFX_SpawnSystem instance;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] objectsToPreload;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int[] objectsToPreloadTimes;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool hideObjectsInHierarchy;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool spawnAsChildren;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool onlyGetInactiveObjects;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
	public bool instantiateIfNeeded;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool allObjectsLoaded;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<int, List<GameObject>> instantiatedObjects;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<int, int> poolCursors;

	[Token(Token = "0x170000AA")]
	public static bool AllObjectsLoaded
	{
		[Token(Token = "0x6000C09")]
		[Address(RVA = "0xE81A5C", Offset = "0xE81A5C", VA = "0xE81A5C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000C06")]
	[Address(RVA = "0xE80CC0", Offset = "0xE80CC0", VA = "0xE80CC0")]
	public static GameObject GetNextObject(GameObject sourceObj, bool activateObject = true)
	{
		return null;
	}

	[Token(Token = "0x6000C07")]
	[Address(RVA = "0xE81388", Offset = "0xE81388", VA = "0xE81388")]
	public static void PreloadObject(GameObject sourceObj, int poolSize = 1)
	{
	}

	[Token(Token = "0x6000C08")]
	[Address(RVA = "0xE816A0", Offset = "0xE816A0", VA = "0xE816A0")]
	public static void UnloadObjects(GameObject sourceObj)
	{
	}

	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0xE813F8", Offset = "0xE813F8", VA = "0xE813F8")]
	private void addObjectToPool(GameObject sourceObject, int number)
	{
	}

	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0xE81700", Offset = "0xE81700", VA = "0xE81700")]
	private void removeObjectsFromPool(GameObject sourceObject)
	{
	}

	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0xE81244", Offset = "0xE81244", VA = "0xE81244")]
	private void increasePoolCursor(int uniqueId)
	{
	}

	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0xE81AB8", Offset = "0xE81AB8", VA = "0xE81AB8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0xE81BA0", Offset = "0xE81BA0", VA = "0xE81BA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0xE81C2C", Offset = "0xE81C2C", VA = "0xE81C2C")]
	public CFX_SpawnSystem()
	{
	}
}
[Token(Token = "0x2000258")]
public class FishSize : MonoBehaviour
{
	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Unit unit;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float size;

	[Token(Token = "0x6000C10")]
	[Address(RVA = "0xEBAFE0", Offset = "0xEBAFE0", VA = "0xEBAFE0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C11")]
	[Address(RVA = "0xEBB0A8", Offset = "0xEBB0A8", VA = "0xEBB0A8")]
	public FishSize()
	{
	}
}
[Token(Token = "0x2000259")]
public enum Unit
{
	[Token(Token = "0x4000C35")]
	Metre = 1,
	[Token(Token = "0x4000C36")]
	Centimetre
}
[Token(Token = "0x200025A")]
[ExecuteInEditMode]
public class InverseKid : MonoBehaviour
{
	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform kid;

	[Token(Token = "0x6000C12")]
	[Address(RVA = "0xEEFF44", Offset = "0xEEFF44", VA = "0xEEFF44")]
	public InverseKid()
	{
	}
}
[Token(Token = "0x200025B")]
public class LPWWaterChunk : MonoBehaviour
{
	[Token(Token = "0x6000C13")]
	[Address(RVA = "0xE88C68", Offset = "0xE88C68", VA = "0xE88C68")]
	public LPWWaterChunk()
	{
	}
}
[Token(Token = "0x200025C")]
public class MoveUpDown : MonoBehaviour
{
	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float height;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float speed;

	[Token(Token = "0x6000C14")]
	[Address(RVA = "0xD8FA7C", Offset = "0xD8FA7C", VA = "0xD8FA7C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C15")]
	[Address(RVA = "0xD8FB70", Offset = "0xD8FB70", VA = "0xD8FB70")]
	public MoveUpDown()
	{
	}
}
[Token(Token = "0x200025D")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xB158E8", Offset = "0xB158E8")]
public class FastList<T>
{
	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x170000AB")]
	public int Count
	{
		[Token(Token = "0x6000C17")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170000AC")]
	public T Item
	{
		[Token(Token = "0x6000C18")]
		get
		{
			return (T)null;
		}
	}

	[Token(Token = "0x6000C16")]
	public FastList()
	{
	}

	[Token(Token = "0x6000C19")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x6000C1A")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x6000C1B")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C1C")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x6000C1D")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C1E")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x6000C1F")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x6000C20")]
	private void Allocate()
	{
	}

	[Token(Token = "0x6000C21")]
	private void Trim()
	{
	}

	[Token(Token = "0x6000C22")]
	public void Clear()
	{
	}
}
[Token(Token = "0x200025E")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x200025F")]
	public delegate void OnClick();

	[Token(Token = "0x2000260")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x2000261")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x2000262")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15920", Offset = "0xB15920")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0xD83330", Offset = "0xD83330", VA = "0xD83330")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0xD83CD0", Offset = "0xD83CD0", VA = "0xD83CD0")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x2000263")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15930", Offset = "0xB15930")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0xD835A4", Offset = "0xD835A4", VA = "0xD835A4")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0xD83EF4", Offset = "0xD83EF4", VA = "0xD83EF4")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x2000264")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15940", Offset = "0xB15940")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0xD837BC", Offset = "0xD837BC", VA = "0xD837BC")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0xD84178", Offset = "0xD84178", VA = "0xD84178")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000265")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15950", Offset = "0xB15950")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0xD83950", Offset = "0xD83950", VA = "0xD83950")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0xD84550", Offset = "0xD84550", VA = "0xD84550")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x2000266")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15960", Offset = "0xB15960")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0xD83BA8", Offset = "0xD83BA8", VA = "0xD83BA8")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0xD84570", Offset = "0xD84570", VA = "0xD84570")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x4000C3C")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x4000C3D")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x4000C3E")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] reEnable;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x4000C4B")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x4000C4C")]
	private const float marginH = 16f;

	[Token(Token = "0x4000C4D")]
	private const float marginV = 16f;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2[] insertPositions;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 menuOffset;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private OVRCameraRig rig;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private LaserPointer lp;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LineRenderer lr;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x6000C23")]
	[Address(RVA = "0xD822DC", Offset = "0xD822DC", VA = "0xD822DC")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000C24")]
	[Address(RVA = "0xD826E0", Offset = "0xD826E0", VA = "0xD826E0")]
	public void Show()
	{
	}

	[Token(Token = "0x6000C25")]
	[Address(RVA = "0xD82CAC", Offset = "0xD82CAC", VA = "0xD82CAC")]
	public void Hide()
	{
	}

	[Token(Token = "0x6000C26")]
	[Address(RVA = "0xD82A58", Offset = "0xD82A58", VA = "0xD82A58")]
	private void Relayout()
	{
	}

	[Token(Token = "0x6000C27")]
	[Address(RVA = "0xD82E54", Offset = "0xD82E54", VA = "0xD82E54")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x6000C28")]
	[Address(RVA = "0xD83108", Offset = "0xD83108", VA = "0xD83108")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000C29")]
	[Address(RVA = "0xD83338", Offset = "0xD83338", VA = "0xD83338")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0xD8341C", Offset = "0xD8341C", VA = "0xD8341C")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0xD835AC", Offset = "0xD835AC", VA = "0xD835AC")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0xD83648", Offset = "0xD83648", VA = "0xD83648")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0xD837C4", Offset = "0xD837C4", VA = "0xD837C4")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0xD83958", Offset = "0xD83958", VA = "0xD83958")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0xD83BB0", Offset = "0xD83BB0", VA = "0xD83BB0")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x6000C30")]
	[Address(RVA = "0xD83C60", Offset = "0xD83C60", VA = "0xD83C60")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x2000267")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x6000C47")]
	[Address(RVA = "0xF45DAC", Offset = "0xF45DAC", VA = "0xF45DAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C48")]
	[Address(RVA = "0xF45E34", Offset = "0xF45E34", VA = "0xF45E34")]
	private void Update()
	{
	}

	[Token(Token = "0x6000C49")]
	[Address(RVA = "0xF45EFC", Offset = "0xF45EFC", VA = "0xF45EFC")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0xF45F38", Offset = "0xF45F38", VA = "0xF45F38")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x2000268")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x2000269")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4000C6A")]
		On,
		[Token(Token = "0x4000C6B")]
		Off,
		[Token(Token = "0x4000C6C")]
		OnWhenHitTarget
	}

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x170000AD")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0xE88F50", Offset = "0xE88F50", VA = "0xE88F50")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0xE88F0C", Offset = "0xE88F0C", VA = "0xE88F0C")]
		set
		{
		}
	}

	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0xE88F58", Offset = "0xE88F58", VA = "0xE88F58")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0xE88FB0", Offset = "0xE88FB0", VA = "0xE88FB0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0xE890C8", Offset = "0xE890C8", VA = "0xE890C8", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x6000C50")]
	[Address(RVA = "0xE890E4", Offset = "0xE890E4", VA = "0xE890E4", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x6000C51")]
	[Address(RVA = "0xE89138", Offset = "0xE89138", VA = "0xE89138")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000C52")]
	[Address(RVA = "0xE89394", Offset = "0xE89394", VA = "0xE89394")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6000C53")]
	[Address(RVA = "0xE894A8", Offset = "0xE894A8", VA = "0xE894A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C54")]
	[Address(RVA = "0xE8953C", Offset = "0xE8953C", VA = "0xE8953C")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x6000C55")]
	[Address(RVA = "0xE8960C", Offset = "0xE8960C", VA = "0xE8960C")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x6000C56")]
	[Address(RVA = "0xE896C4", Offset = "0xE896C4", VA = "0xE896C4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000C57")]
	[Address(RVA = "0xE89790", Offset = "0xE89790", VA = "0xE89790")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x200026A")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x4000C6D")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x4000C6E")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x4000C6F")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask CollideLayers;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float HeightOffset;

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float MinimumHeight;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float MaximumHeight;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x6000C58")]
	[Address(RVA = "0xE84984", Offset = "0xE84984", VA = "0xE84984")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x6000C59")]
	[Address(RVA = "0xE8498C", Offset = "0xE8498C", VA = "0xE8498C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0xE849FC", Offset = "0xE849FC", VA = "0xE849FC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0xE84A88", Offset = "0xE84A88", VA = "0xE84A88")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0xE84B14", Offset = "0xE84B14", VA = "0xE84B14")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0xE84F1C", Offset = "0xE84F1C", VA = "0xE84F1C")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0xE851C4", Offset = "0xE851C4", VA = "0xE851C4")]
	private bool CheckCameraNearClipping(out float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x200026B")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0xE8E7F0", Offset = "0xE8E7F0", VA = "0xE8E7F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000C60")]
	[Address(RVA = "0xE8E89C", Offset = "0xE8E89C", VA = "0xE8E89C")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x200026C")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x200026D")]
	public enum States
	{
		[Token(Token = "0x4000C9D")]
		Ready,
		[Token(Token = "0x4000C9E")]
		Aim,
		[Token(Token = "0x4000C9F")]
		CancelAim,
		[Token(Token = "0x4000CA0")]
		PreTeleport,
		[Token(Token = "0x4000CA1")]
		CancelTeleport,
		[Token(Token = "0x4000CA2")]
		Teleporting,
		[Token(Token = "0x4000CA3")]
		PostTeleport
	}

	[Token(Token = "0x200026E")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x4000CA5")]
		None,
		[Token(Token = "0x4000CA6")]
		Aim,
		[Token(Token = "0x4000CA7")]
		PreTeleport,
		[Token(Token = "0x4000CA8")]
		Teleport
	}

	[Token(Token = "0x200026F")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4000CAA")]
		Point,
		[Token(Token = "0x4000CAB")]
		Sphere,
		[Token(Token = "0x4000CAC")]
		Capsule
	}

	[Token(Token = "0x2000270")]
	public class AimData
	{
		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB18E08", Offset = "0xB18E08")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x170000B1")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6000C96")]
			[Address(RVA = "0xE91D54", Offset = "0xE91D54", VA = "0xE91D54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B520", Offset = "0xB1B520")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C97")]
			[Address(RVA = "0xE91D5C", Offset = "0xE91D5C", VA = "0xE91D5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B530", Offset = "0xB1B530")]
			private set
			{
			}
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0xE91CE0", Offset = "0xE91CE0", VA = "0xE91CE0")]
		public AimData()
		{
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0xE91D64", Offset = "0xE91D64", VA = "0xE91D64")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000271")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15970", Offset = "0xB15970")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000B2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000C9C")]
			[Address(RVA = "0xE91B2C", Offset = "0xE91B2C", VA = "0xE91B2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000C9E")]
			[Address(RVA = "0xE91B94", Offset = "0xE91B94", VA = "0xE91B94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0xE90030", Offset = "0xE90030", VA = "0xE90030")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0xE91A44", Offset = "0xE91A44", VA = "0xE91A44", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0xE91A48", Offset = "0xE91A48", VA = "0xE91A48", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0xE91B34", Offset = "0xE91B34", VA = "0xE91B34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000272")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15980", Offset = "0xB15980")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000B4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CA2")]
			[Address(RVA = "0xE9150C", Offset = "0xE9150C", VA = "0xE9150C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CA4")]
			[Address(RVA = "0xE91574", Offset = "0xE91574", VA = "0xE91574", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0xE90518", Offset = "0xE90518", VA = "0xE90518")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0xE913D4", Offset = "0xE913D4", VA = "0xE913D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0xE913D8", Offset = "0xE913D8", VA = "0xE913D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0xE91514", Offset = "0xE91514", VA = "0xE91514", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000273")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15990", Offset = "0xB15990")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000B6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CA8")]
			[Address(RVA = "0xE91620", Offset = "0xE91620", VA = "0xE91620", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CAA")]
			[Address(RVA = "0xE91688", Offset = "0xE91688", VA = "0xE91688", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0xE906FC", Offset = "0xE906FC", VA = "0xE906FC")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0xE9157C", Offset = "0xE9157C", VA = "0xE9157C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0xE91580", Offset = "0xE91580", VA = "0xE91580", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0xE91628", Offset = "0xE91628", VA = "0xE91628", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000274")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB159A0", Offset = "0xB159A0")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000B8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CAE")]
			[Address(RVA = "0xE919D4", Offset = "0xE919D4", VA = "0xE919D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CB0")]
			[Address(RVA = "0xE91A3C", Offset = "0xE91A3C", VA = "0xE91A3C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0xE908E0", Offset = "0xE908E0", VA = "0xE908E0")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0xE918FC", Offset = "0xE918FC", VA = "0xE918FC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0xE91900", Offset = "0xE91900", VA = "0xE91900", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0xE919DC", Offset = "0xE919DC", VA = "0xE919DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000275")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB159B0", Offset = "0xB159B0")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000BA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CB4")]
			[Address(RVA = "0xE91734", Offset = "0xE91734", VA = "0xE91734", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CB6")]
			[Address(RVA = "0xE9179C", Offset = "0xE9179C", VA = "0xE9179C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0xE90AC4", Offset = "0xE90AC4", VA = "0xE90AC4")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0xE91690", Offset = "0xE91690", VA = "0xE91690", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0xE91694", Offset = "0xE91694", VA = "0xE91694", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0xE9173C", Offset = "0xE9173C", VA = "0xE9173C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000276")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB159C0", Offset = "0xB159C0")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000BC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CBA")]
			[Address(RVA = "0xE91C70", Offset = "0xE91C70", VA = "0xE91C70", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CBC")]
			[Address(RVA = "0xE91CD8", Offset = "0xE91CD8", VA = "0xE91CD8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0xE90CA8", Offset = "0xE90CA8", VA = "0xE90CA8")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0xE91B9C", Offset = "0xE91B9C", VA = "0xE91B9C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0xE91BA0", Offset = "0xE91BA0", VA = "0xE91BA0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0xE91C78", Offset = "0xE91C78", VA = "0xE91C78", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000277")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB159D0", Offset = "0xB159D0")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170000BE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CC0")]
			[Address(RVA = "0xE9188C", Offset = "0xE9188C", VA = "0xE9188C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CC2")]
			[Address(RVA = "0xE918F4", Offset = "0xE918F4", VA = "0xE918F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0xE90E8C", Offset = "0xE90E8C", VA = "0xE90E8C")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0xE917A4", Offset = "0xE917A4", VA = "0xE917A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0xE917A8", Offset = "0xE917A8", VA = "0xE917A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0xE91894", Offset = "0xE91894", VA = "0xE91894", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB18D38", Offset = "0xB18D38")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB18D58", Offset = "0xB18D58")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float AimCollisionRadius;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float AimCollisionHeight;

	[Token(Token = "0x170000AE")]
	public States CurrentState
	{
		[Token(Token = "0x6000C63")]
		[Address(RVA = "0xE8F574", Offset = "0xE8F574", VA = "0xE8F574")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B380", Offset = "0xB1B380")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x6000C64")]
		[Address(RVA = "0xE8F57C", Offset = "0xE8F57C", VA = "0xE8F57C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B390", Offset = "0xB1B390")]
		private set
		{
		}
	}

	[Token(Token = "0x170000AF")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x6000C68")]
		[Address(RVA = "0xE8F7AC", Offset = "0xE8F7AC", VA = "0xE8F7AC")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x170000B0")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x6000C69")]
		[Address(RVA = "0xE8F7D4", Offset = "0xE8F7D4", VA = "0xE8F7D4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B3C0", Offset = "0xB1B3C0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0xE8F7DC", Offset = "0xE8F7DC", VA = "0xE8F7DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B3D0", Offset = "0xB1B3D0")]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x6000C65")]
		[Address(RVA = "0xE8F584", Offset = "0xE8F584", VA = "0xE8F584")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B3A0", Offset = "0xB1B3A0")]
		add
		{
		}
		[Token(Token = "0x6000C66")]
		[Address(RVA = "0xE8F628", Offset = "0xE8F628", VA = "0xE8F628")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B3B0", Offset = "0xB1B3B0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x6000C74")]
		[Address(RVA = "0xE8FEE8", Offset = "0xE8FEE8", VA = "0xE8FEE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B3E0", Offset = "0xB1B3E0")]
		add
		{
		}
		[Token(Token = "0x6000C75")]
		[Address(RVA = "0xE8FF8C", Offset = "0xE8FF8C", VA = "0xE8FF8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B3F0", Offset = "0xB1B3F0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x6000C77")]
		[Address(RVA = "0xE9005C", Offset = "0xE9005C", VA = "0xE9005C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B400", Offset = "0xB1B400")]
		add
		{
		}
		[Token(Token = "0x6000C78")]
		[Address(RVA = "0xE90100", Offset = "0xE90100", VA = "0xE90100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B410", Offset = "0xB1B410")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x6000C79")]
		[Address(RVA = "0xE901A4", Offset = "0xE901A4", VA = "0xE901A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B420", Offset = "0xB1B420")]
		add
		{
		}
		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0xE90248", Offset = "0xE90248", VA = "0xE90248")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B430", Offset = "0xB1B430")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0xE90360", Offset = "0xE90360", VA = "0xE90360")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B440", Offset = "0xB1B440")]
		add
		{
		}
		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0xE90404", Offset = "0xE90404", VA = "0xE90404")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B450", Offset = "0xB1B450")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0xE90544", Offset = "0xE90544", VA = "0xE90544")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B460", Offset = "0xB1B460")]
		add
		{
		}
		[Token(Token = "0x6000C80")]
		[Address(RVA = "0xE905E8", Offset = "0xE905E8", VA = "0xE905E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B470", Offset = "0xB1B470")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x6000C82")]
		[Address(RVA = "0xE90728", Offset = "0xE90728", VA = "0xE90728")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B480", Offset = "0xB1B480")]
		add
		{
		}
		[Token(Token = "0x6000C83")]
		[Address(RVA = "0xE907CC", Offset = "0xE907CC", VA = "0xE907CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B490", Offset = "0xB1B490")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x6000C85")]
		[Address(RVA = "0xE9090C", Offset = "0xE9090C", VA = "0xE9090C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B4A0", Offset = "0xB1B4A0")]
		add
		{
		}
		[Token(Token = "0x6000C86")]
		[Address(RVA = "0xE909B0", Offset = "0xE909B0", VA = "0xE909B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B4B0", Offset = "0xB1B4B0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x6000C88")]
		[Address(RVA = "0xE90AF0", Offset = "0xE90AF0", VA = "0xE90AF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B4C0", Offset = "0xB1B4C0")]
		add
		{
		}
		[Token(Token = "0x6000C89")]
		[Address(RVA = "0xE90B94", Offset = "0xE90B94", VA = "0xE90B94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B4D0", Offset = "0xB1B4D0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0xE90CD4", Offset = "0xE90CD4", VA = "0xE90CD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B4E0", Offset = "0xB1B4E0")]
		add
		{
		}
		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0xE90D78", Offset = "0xE90D78", VA = "0xE90D78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B4F0", Offset = "0xB1B4F0")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0xE90EB8", Offset = "0xE90EB8", VA = "0xE90EB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B500", Offset = "0xB1B500")]
		add
		{
		}
		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0xE90F5C", Offset = "0xE90F5C", VA = "0xE90F5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B510", Offset = "0xB1B510")]
		remove
		{
		}
	}

	[Token(Token = "0x6000C61")]
	[Address(RVA = "0xE8F52C", Offset = "0xE8F52C", VA = "0xE8F52C")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000C62")]
	[Address(RVA = "0xE8F550", Offset = "0xE8F550", VA = "0xE8F550")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000C67")]
	[Address(RVA = "0xE8F6CC", Offset = "0xE8F6CC", VA = "0xE8F6CC")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0xE8F7E4", Offset = "0xE8F7E4", VA = "0xE8F7E4")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0xE8FB3C", Offset = "0xE8FB3C", VA = "0xE8FB3C")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0xE8FBF4", Offset = "0xE8FBF4", VA = "0xE8FBF4")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0xE8FCBC", Offset = "0xE8FCBC", VA = "0xE8FCBC")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0xE8FCD8", Offset = "0xE8FCD8", VA = "0xE8FCD8")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x6000C70")]
	[Address(RVA = "0xE8FDA0", Offset = "0xE8FDA0", VA = "0xE8FDA0")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x6000C71")]
	[Address(RVA = "0xE8FDE4", Offset = "0xE8FDE4", VA = "0xE8FDE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000C72")]
	[Address(RVA = "0xE8FE40", Offset = "0xE8FE40", VA = "0xE8FE40", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000C73")]
	[Address(RVA = "0xE8FEE0", Offset = "0xE8FEE0", VA = "0xE8FEE0", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000C76")]
	[Address(RVA = "0xE8FE70", Offset = "0xE8FE70", VA = "0xE8FE70")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0xE902EC", Offset = "0xE902EC", VA = "0xE902EC")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0xE904A8", Offset = "0xE904A8", VA = "0xE904A8")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000C81")]
	[Address(RVA = "0xE9068C", Offset = "0xE9068C", VA = "0xE9068C")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000C84")]
	[Address(RVA = "0xE90870", Offset = "0xE90870", VA = "0xE90870")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000C87")]
	[Address(RVA = "0xE90A54", Offset = "0xE90A54", VA = "0xE90A54")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0xE90C38", Offset = "0xE90C38", VA = "0xE90C38")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0xE90E1C", Offset = "0xE90E1C", VA = "0xE90E1C")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000C90")]
	[Address(RVA = "0xE91000", Offset = "0xE91000", VA = "0xE91000")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x6000C91")]
	[Address(RVA = "0xE91144", Offset = "0xE91144", VA = "0xE91144")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000C92")]
	[Address(RVA = "0xE91178", Offset = "0xE91178", VA = "0xE91178")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000C93")]
	[Address(RVA = "0xE91298", Offset = "0xE91298", VA = "0xE91298")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x6000C94")]
	[Address(RVA = "0xE913C4", Offset = "0xE913C4", VA = "0xE913C4")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x2000278")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000C")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0xDD2A10", Offset = "0xDD2A10", VA = "0xDD2A10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B770", Offset = "0xB1B770")]
		add
		{
		}
		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0xDD2AB4", Offset = "0xDD2AB4", VA = "0xDD2AB4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B780", Offset = "0xB1B780")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0xDD2B58", Offset = "0xDD2B58", VA = "0xDD2B58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B790", Offset = "0xB1B790")]
		add
		{
		}
		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0xDD2BFC", Offset = "0xDD2BFC", VA = "0xDD2BFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B7A0", Offset = "0xB1B7A0")]
		remove
		{
		}
	}

	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0xDD2CA0", Offset = "0xDD2CA0", VA = "0xDD2CA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0xDD2D48", Offset = "0xDD2D48", VA = "0xDD2D48")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0xDD2DBC", Offset = "0xDD2DBC", VA = "0xDD2DBC")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0xDD2F2C", Offset = "0xDD2F2C", VA = "0xDD2F2C")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0xDD3210", Offset = "0xDD3210", VA = "0xDD3210")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0xDD3400", Offset = "0xDD3400", VA = "0xDD3400")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x2000279")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0xE45674", Offset = "0xE45674", VA = "0xE45674", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0xE45708", Offset = "0xE45708", VA = "0xE45708", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x6000CCF")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0xE457D8", Offset = "0xE457D8", VA = "0xE457D8")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x200027A")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Range;

	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0xE457E8", Offset = "0xE457E8", VA = "0xE457E8", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0xE45944", Offset = "0xE45944", VA = "0xE45944")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x200027B")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Range;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float MinimumElevation;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float Gravity;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB18E38", Offset = "0xB18E38")]
	public float AimVelocity;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB18E58", Offset = "0xB18E58")]
	public float AimStep;

	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0xE45954", Offset = "0xE45954", VA = "0xE45954", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0xE45BA0", Offset = "0xE45BA0", VA = "0xE45BA0")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x200027C")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0xE45BB4", Offset = "0xE45BB4", VA = "0xE45BB4")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0xE45C98", Offset = "0xE45C98", VA = "0xE45C98")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0xE45CC8", Offset = "0xE45CC8", VA = "0xE45CC8")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0xE45CF8", Offset = "0xE45CF8", VA = "0xE45CF8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0xE45D98", Offset = "0xE45D98", VA = "0xE45D98", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0xE45E04", Offset = "0xE45E04", VA = "0xE45E04", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0xE45E6C", Offset = "0xE45E6C", VA = "0xE45E6C")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x200027D")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB18E74", Offset = "0xB18E74")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform PositionIndicator;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform OrientationIndicator;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x170000C0")]
	public bool IsValidDestination
	{
		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0xE45F88", Offset = "0xE45F88", VA = "0xE45F88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B7B0", Offset = "0xB1B7B0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0xE45F90", Offset = "0xE45F90", VA = "0xE45F90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B7C0", Offset = "0xB1B7C0")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0xE46140", Offset = "0xE46140", VA = "0xE46140")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B7D0", Offset = "0xB1B7D0")]
		add
		{
		}
		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0xE461E4", Offset = "0xE461E4", VA = "0xE461E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B7E0", Offset = "0xB1B7E0")]
		remove
		{
		}
	}

	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0xE45F9C", Offset = "0xE45F9C", VA = "0xE45F9C")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0xE46024", Offset = "0xE46024", VA = "0xE46024")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0xE460FC", Offset = "0xE460FC", VA = "0xE460FC")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0xE4613C", Offset = "0xE4613C", VA = "0xE4613C")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0xE46288", Offset = "0xE46288", VA = "0xE46288")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0xE462F0", Offset = "0xE462F0", VA = "0xE462F0")]
	public void Recycle()
	{
	}

	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0xE46310", Offset = "0xE46310", VA = "0xE46310", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x200027E")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x200027F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB159E0", Offset = "0xB159E0")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x170000C1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CF3")]
			[Address(RVA = "0xE46E4C", Offset = "0xE46E4C", VA = "0xE46E4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CF5")]
			[Address(RVA = "0xE46EB4", Offset = "0xE46EB4", VA = "0xE46EB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0xE46B98", Offset = "0xE46B98", VA = "0xE46B98")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0xE46DBC", Offset = "0xE46DBC", VA = "0xE46DBC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0xE46DC0", Offset = "0xE46DC0", VA = "0xE46DC0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0xE46E54", Offset = "0xE46E54", VA = "0xE46E54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000280")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB159F0", Offset = "0xB159F0")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x170000C3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000CF9")]
			[Address(RVA = "0xE46D4C", Offset = "0xE46D4C", VA = "0xE46D4C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000CFB")]
			[Address(RVA = "0xE46DB4", Offset = "0xE46DB4", VA = "0xE46DB4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0xE46C34", Offset = "0xE46C34", VA = "0xE46C34")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0xE46CB8", Offset = "0xE46CB8", VA = "0xE46CB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0xE46CBC", Offset = "0xE46CBC", VA = "0xE46CBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0xE46D54", Offset = "0xE46D54", VA = "0xE46D54", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0xE46968", Offset = "0xE46968", VA = "0xE46968")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0xE46A14", Offset = "0xE46A14", VA = "0xE46A14", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0xE46A6C", Offset = "0xE46A6C", VA = "0xE46A6C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0xE46B28", Offset = "0xE46B28", VA = "0xE46B28")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0xE46BC4", Offset = "0xE46BC4", VA = "0xE46BC4")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000CEC")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x6000CED")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0xE46C60", Offset = "0xE46C60", VA = "0xE46C60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B7F0", Offset = "0xB1B7F0")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0xE46C8C", Offset = "0xE46C8C", VA = "0xE46C8C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B800", Offset = "0xB1B800")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x2000281")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB18E94", Offset = "0xB18E94")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool FastTeleport;

	[Token(Token = "0x170000C5")]
	public Transform Pointer
	{
		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0xE46EBC", Offset = "0xE46EBC", VA = "0xE46EBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B8B0", Offset = "0xB1B8B0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0xE46EC4", Offset = "0xE46EC4", VA = "0xE46EC4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B8C0", Offset = "0xB1B8C0")]
		private set
		{
		}
	}

	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0xE46ECC", Offset = "0xE46ECC", VA = "0xE46ECC", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0xE47028", Offset = "0xE47028", VA = "0xE47028", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000D00")]
	[Address(RVA = "0xE470E0", Offset = "0xE470E0", VA = "0xE470E0")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x2000282")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x2000283")]
	public enum InputModes
	{
		[Token(Token = "0x4000CFD")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4000CFE")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4000CFF")]
		ThumbstickTeleport,
		[Token(Token = "0x4000D00")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x2000284")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4000D02")]
		A,
		[Token(Token = "0x4000D03")]
		B,
		[Token(Token = "0x4000D04")]
		LeftTrigger,
		[Token(Token = "0x4000D05")]
		LeftThumbstick,
		[Token(Token = "0x4000D06")]
		RightTrigger,
		[Token(Token = "0x4000D07")]
		RightThumbstick,
		[Token(Token = "0x4000D08")]
		X,
		[Token(Token = "0x4000D09")]
		Y
	}

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public InputModes InputMode;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6000D01")]
	[Address(RVA = "0xE470E4", Offset = "0xE470E4", VA = "0xE470E4", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000D02")]
	[Address(RVA = "0xE4752C", Offset = "0xE4752C", VA = "0xE4752C", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x6000D03")]
	[Address(RVA = "0xE475EC", Offset = "0xE475EC", VA = "0xE475EC")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x2000285")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x2000286")]
	public enum OrientationModes
	{
		[Token(Token = "0x4000D0E")]
		HeadRelative,
		[Token(Token = "0x4000D0F")]
		ForwardFacing
	}

	[Token(Token = "0x2000287")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15A00", Offset = "0xB15A00")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x170000C6")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D10")]
			[Address(RVA = "0xE47A7C", Offset = "0xE47A7C", VA = "0xE47A7C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C7")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D12")]
			[Address(RVA = "0xE47AE4", Offset = "0xE47AE4", VA = "0xE47AE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0xE47858", Offset = "0xE47858", VA = "0xE47858")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0xE479D4", Offset = "0xE479D4", VA = "0xE479D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0xE479D8", Offset = "0xE479D8", VA = "0xE479D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0xE47A84", Offset = "0xE47A84", VA = "0xE47A84", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x6000D04")]
	[Address(RVA = "0xE47698", Offset = "0xE47698", VA = "0xE47698")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x6000D05")]
	[Address(RVA = "0xE4774C", Offset = "0xE4774C", VA = "0xE4774C")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x6000D06")]
	[Address(RVA = "0xE47754", Offset = "0xE47754", VA = "0xE47754", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000D07")]
	[Address(RVA = "0xE477A0", Offset = "0xE477A0", VA = "0xE477A0", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000D08")]
	[Address(RVA = "0xE477E8", Offset = "0xE477E8", VA = "0xE477E8")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000D09")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x6000D0A")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0xE47884", Offset = "0xE47884", VA = "0xE47884")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0xE479A8", Offset = "0xE479A8", VA = "0xE479A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B8D0", Offset = "0xB1B8D0")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000288")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x6000D13")]
	[Address(RVA = "0xE47AEC", Offset = "0xE47AEC", VA = "0xE47AEC", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000D14")]
	[Address(RVA = "0xE47AF0", Offset = "0xE47AF0", VA = "0xE47AF0", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000D15")]
	[Address(RVA = "0xE47B6C", Offset = "0xE47B6C", VA = "0xE47B6C")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x2000289")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float AimDistanceThreshold;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x6000D16")]
	[Address(RVA = "0xE47B70", Offset = "0xE47B70", VA = "0xE47B70", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000D17")]
	[Address(RVA = "0xE47BE0", Offset = "0xE47BE0", VA = "0xE47BE0", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000D18")]
	[Address(RVA = "0xE48058", Offset = "0xE48058", VA = "0xE48058")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x200028A")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float RotateStickThreshold;

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x6000D19")]
	[Address(RVA = "0xE4805C", Offset = "0xE4805C", VA = "0xE4805C", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0xE480A0", Offset = "0xE480A0", VA = "0xE480A0", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0xE48510", Offset = "0xE48510", VA = "0xE48510")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x200028B")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0xE48520", Offset = "0xE48520", VA = "0xE48520")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0xE48528", Offset = "0xE48528", VA = "0xE48528")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0xE48610", Offset = "0xE48610", VA = "0xE48610")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0xE48638", Offset = "0xE48638", VA = "0xE48638")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x200028C")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB18EA4", Offset = "0xB18EA4")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x170000C8")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x6000D20")]
		[Address(RVA = "0xE48650", Offset = "0xE48650", VA = "0xE48650")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B930", Offset = "0xB1B930")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000D21")]
		[Address(RVA = "0xE48658", Offset = "0xE48658", VA = "0xE48658")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B940", Offset = "0xB1B940")]
		private set
		{
		}
	}

	[Token(Token = "0x6000D22")]
	[Address(RVA = "0xE456A4", Offset = "0xE456A4", VA = "0xE456A4", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000D23")]
	[Address(RVA = "0xE457AC", Offset = "0xE457AC", VA = "0xE457AC", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000D24")]
	[Address(RVA = "0xE48660", Offset = "0xE48660", VA = "0xE48660")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x6000D25")]
	[Address(RVA = "0xE45DF8", Offset = "0xE45DF8", VA = "0xE45DF8", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000D26")]
	[Address(RVA = "0xE45E64", Offset = "0xE45E64", VA = "0xE45E64", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000D27")]
	[Address(RVA = "0xE457E0", Offset = "0xE457E0", VA = "0xE457E0")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x200028D")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x200028E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15A10", Offset = "0xB15A10")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x170000C9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D33")]
			[Address(RVA = "0xE48CB4", Offset = "0xE48CB4", VA = "0xE48CB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D35")]
			[Address(RVA = "0xE48D1C", Offset = "0xE48D1C", VA = "0xE48D1C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0xE488B0", Offset = "0xE488B0", VA = "0xE488B0")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0xE48A48", Offset = "0xE48A48", VA = "0xE48A48", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0xE48A4C", Offset = "0xE48A4C", VA = "0xE48A4C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0xE48CBC", Offset = "0xE48CBC", VA = "0xE48CBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x4000D29")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x6000D28")]
	[Address(RVA = "0xE48728", Offset = "0xE48728", VA = "0xE48728")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x6000D29")]
	[Address(RVA = "0xE487EC", Offset = "0xE487EC", VA = "0xE487EC", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0xE48818", Offset = "0xE48818", VA = "0xE48818", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0xE48840", Offset = "0xE48840", VA = "0xE48840")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0xE488DC", Offset = "0xE488DC", VA = "0xE488DC", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x6000D2D")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0xE488F8", Offset = "0xE488F8", VA = "0xE488F8", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0xE48A1C", Offset = "0xE48A1C", VA = "0xE48A1C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1B950", Offset = "0xB1B950")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x200028F")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x6000D36")]
	[Address(RVA = "0xE48D24", Offset = "0xE48D24", VA = "0xE48D24")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D37")]
	[Address(RVA = "0xE48D84", Offset = "0xE48D84", VA = "0xE48D84", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D38")]
	[Address(RVA = "0xE48F08", Offset = "0xE48F08", VA = "0xE48F08", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x6000D39")]
	[Address(RVA = "0xE48FF8", Offset = "0xE48FF8", VA = "0xE48FF8")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x2000290")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float LOSOffset;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0xE49004", Offset = "0xE49004", VA = "0xE49004", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0xE49234", Offset = "0xE49234", VA = "0xE49234")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x2000291")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0xE49240", Offset = "0xE49240", VA = "0xE49240", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0xE493C4", Offset = "0xE493C4", VA = "0xE493C4")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x2000292")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0xE493C8", Offset = "0xE493C8", VA = "0xE493C8", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0xE49460", Offset = "0xE49460", VA = "0xE49460", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000D40")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x6000D41")]
	[Address(RVA = "0xE494F4", Offset = "0xE494F4", VA = "0xE494F4")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x2000293")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x2000294")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15A20", Offset = "0xB15A20")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x170000CB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D48")]
			[Address(RVA = "0xE4985C", Offset = "0xE4985C", VA = "0xE4985C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D4A")]
			[Address(RVA = "0xE498C4", Offset = "0xE498C4", VA = "0xE498C4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0xE49598", Offset = "0xE49598", VA = "0xE49598")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0xE4975C", Offset = "0xE4975C", VA = "0xE4975C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0xE49760", Offset = "0xE49760", VA = "0xE49760", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0xE49864", Offset = "0xE49864", VA = "0xE49864", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB18EB4", Offset = "0xB18EB4")]
	public float TransitionDuration;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB18ED0", Offset = "0xB18ED0")]
	public float TeleportDelay;

	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x6000D42")]
	[Address(RVA = "0xE494FC", Offset = "0xE494FC", VA = "0xE494FC", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000D43")]
	[Address(RVA = "0xE49528", Offset = "0xE49528", VA = "0xE49528")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000D44")]
	[Address(RVA = "0xE495C4", Offset = "0xE495C4", VA = "0xE495C4")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x2000295")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0xE498CC", Offset = "0xE498CC", VA = "0xE498CC", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0xE498E8", Offset = "0xE498E8", VA = "0xE498E8")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x2000296")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x2000297")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15A30", Offset = "0xB15A30")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x170000CD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D53")]
			[Address(RVA = "0xE49B34", Offset = "0xE49B34", VA = "0xE49B34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000CE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D55")]
			[Address(RVA = "0xE49B9C", Offset = "0xE49B9C", VA = "0xE49B9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0xE4998C", Offset = "0xE4998C", VA = "0xE4998C")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0xE49A00", Offset = "0xE49A00", VA = "0xE49A00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0xE49A04", Offset = "0xE49A04", VA = "0xE49A04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0xE49B3C", Offset = "0xE49B3C", VA = "0xE49B3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB18EE8", Offset = "0xB18EE8")]
	public float TransitionDuration;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0xE498F0", Offset = "0xE498F0", VA = "0xE498F0", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0xE4991C", Offset = "0xE4991C", VA = "0xE4991C")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0xE499B8", Offset = "0xE499B8", VA = "0xE499B8")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x2000298")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x170000CF")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x6000D56")]
		[Address(RVA = "0xD92B88", Offset = "0xD92B88", VA = "0xD92B88")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x170000D0")]
	private static IntPtr Activity
	{
		[Token(Token = "0x6000D57")]
		[Address(RVA = "0xD92E44", Offset = "0xD92E44", VA = "0xD92E44")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x170000D1")]
	public static bool IsAvailable
	{
		[Token(Token = "0x6000D58")]
		[Address(RVA = "0xD8FDC4", Offset = "0xD8FDC4", VA = "0xD8FDC4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000D2")]
	public static bool IsPlaying
	{
		[Token(Token = "0x6000D59")]
		[Address(RVA = "0xD9102C", Offset = "0xD9102C", VA = "0xD9102C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170000D3")]
	public static long Duration
	{
		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0xD91210", Offset = "0xD91210", VA = "0xD91210")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x170000D4")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0xD9111C", Offset = "0xD9111C", VA = "0xD9111C")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0xD907F0", Offset = "0xD907F0", VA = "0xD907F0")]
		set
		{
		}
	}

	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0xD91870", Offset = "0xD91870", VA = "0xD91870")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0xD915B4", Offset = "0xD915B4", VA = "0xD915B4")]
	public static void Stop()
	{
	}

	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0xD90480", Offset = "0xD90480", VA = "0xD90480")]
	public static void Play()
	{
	}

	[Token(Token = "0x6000D60")]
	[Address(RVA = "0xD90604", Offset = "0xD90604", VA = "0xD90604")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000D61")]
	[Address(RVA = "0xD913DC", Offset = "0xD913DC", VA = "0xD913DC")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000D62")]
	[Address(RVA = "0xD91A64", Offset = "0xD91A64", VA = "0xD91A64")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x6000D63")]
	[Address(RVA = "0xD90E70", Offset = "0xD90E70", VA = "0xD90E70")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x2000299")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x1400000F")]
	public event Action onButtonDown
	{
		[Token(Token = "0x6000D65")]
		[Address(RVA = "0xE7CFFC", Offset = "0xE7CFFC", VA = "0xE7CFFC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BA50", Offset = "0xB1BA50")]
		add
		{
		}
		[Token(Token = "0x6000D66")]
		[Address(RVA = "0xE7D0A0", Offset = "0xE7D0A0", VA = "0xE7D0A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BA60", Offset = "0xB1BA60")]
		remove
		{
		}
	}

	[Token(Token = "0x6000D67")]
	[Address(RVA = "0xE7D144", Offset = "0xE7D144", VA = "0xE7D144", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000D68")]
	[Address(RVA = "0xE7D158", Offset = "0xE7D158", VA = "0xE7D158")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x200029A")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x200029B")]
	public enum ButtonType
	{
		[Token(Token = "0x4000D57")]
		Play,
		[Token(Token = "0x4000D58")]
		Pause,
		[Token(Token = "0x4000D59")]
		FastForward,
		[Token(Token = "0x4000D5A")]
		Rewind,
		[Token(Token = "0x4000D5B")]
		SkipForward,
		[Token(Token = "0x4000D5C")]
		SkipBack,
		[Token(Token = "0x4000D5D")]
		Stop
	}

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x170000D5")]
	public ButtonType buttonType
	{
		[Token(Token = "0x6000D69")]
		[Address(RVA = "0xE95EA8", Offset = "0xE95EA8", VA = "0xE95EA8")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0xE95EB0", Offset = "0xE95EB0", VA = "0xE95EB0")]
		set
		{
		}
	}

	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0xE95ED4", Offset = "0xE95ED4", VA = "0xE95ED4", Slot = "43")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0xE973A0", Offset = "0xE973A0", VA = "0xE973A0")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x200029C")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x200029D")]
	public enum VideoShape
	{
		[Token(Token = "0x4000D71")]
		_360,
		[Token(Token = "0x4000D72")]
		_180,
		[Token(Token = "0x4000D73")]
		Quad
	}

	[Token(Token = "0x200029E")]
	public enum VideoStereo
	{
		[Token(Token = "0x4000D75")]
		Mono,
		[Token(Token = "0x4000D76")]
		TopBottom,
		[Token(Token = "0x4000D77")]
		LeftRight,
		[Token(Token = "0x4000D78")]
		BottomTop
	}

	[Token(Token = "0x200029F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15A40", Offset = "0xB15A40")]
	private sealed class <Start>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x170000D9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D83")]
			[Address(RVA = "0xD91D2C", Offset = "0xD91D2C", VA = "0xD91D2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000DA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D85")]
			[Address(RVA = "0xD91D94", Offset = "0xD91D94", VA = "0xD91D94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0xD9017C", Offset = "0xD9017C", VA = "0xD9017C")]
		[DebuggerHidden]
		public <Start>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0xD91BA8", Offset = "0xD91BA8", VA = "0xD91BA8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0xD91BAC", Offset = "0xD91BAC", VA = "0xD91BAC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0xD91D34", Offset = "0xD91D34", VA = "0xD91D34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002A0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15A50", Offset = "0xB15A50")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0xD903E4", Offset = "0xD903E4", VA = "0xD903E4")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0xD9179C", Offset = "0xD9179C", VA = "0xD9179C")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB18F24", Offset = "0xB18F24")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB18F34", Offset = "0xB18F34")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB18F44", Offset = "0xB18F44")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool DisplayMono;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x170000D6")]
	public bool IsPlaying
	{
		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0xD8FB78", Offset = "0xD8FB78", VA = "0xD8FB78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BA70", Offset = "0xB1BA70")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0xD8FB80", Offset = "0xD8FB80", VA = "0xD8FB80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BA80", Offset = "0xB1BA80")]
		private set
		{
		}
	}

	[Token(Token = "0x170000D7")]
	public long Duration
	{
		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0xD8FB8C", Offset = "0xD8FB8C", VA = "0xD8FB8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BA90", Offset = "0xB1BA90")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000D70")]
		[Address(RVA = "0xD8FB94", Offset = "0xD8FB94", VA = "0xD8FB94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BAA0", Offset = "0xB1BAA0")]
		private set
		{
		}
	}

	[Token(Token = "0x170000D8")]
	public long PlaybackPosition
	{
		[Token(Token = "0x6000D71")]
		[Address(RVA = "0xD8FB9C", Offset = "0xD8FB9C", VA = "0xD8FB9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BAB0", Offset = "0xB1BAB0")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000D72")]
		[Address(RVA = "0xD8FBA4", Offset = "0xD8FBA4", VA = "0xD8FBA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BAC0", Offset = "0xB1BAC0")]
		private set
		{
		}
	}

	[Token(Token = "0x6000D73")]
	[Address(RVA = "0xD8FBAC", Offset = "0xD8FBAC", VA = "0xD8FBAC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000D74")]
	[Address(RVA = "0xD8FE2C", Offset = "0xD8FE2C", VA = "0xD8FE2C")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000D75")]
	[Address(RVA = "0xD8FE94", Offset = "0xD8FE94", VA = "0xD8FE94")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x6000D76")]
	[Address(RVA = "0xD9010C", Offset = "0xD9010C", VA = "0xD9010C")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000D77")]
	[Address(RVA = "0xD901A8", Offset = "0xD901A8", VA = "0xD901A8")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x6000D78")]
	[Address(RVA = "0xD903EC", Offset = "0xD903EC", VA = "0xD903EC")]
	public void Play()
	{
	}

	[Token(Token = "0x6000D79")]
	[Address(RVA = "0xD90574", Offset = "0xD90574", VA = "0xD90574")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0xD906F8", Offset = "0xD906F8", VA = "0xD906F8")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0xD90930", Offset = "0xD90930", VA = "0xD90930")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0xD91304", Offset = "0xD91304", VA = "0xD91304")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0xD91524", Offset = "0xD91524", VA = "0xD91524")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0xD916A8", Offset = "0xD916A8", VA = "0xD916A8")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0xD9178C", Offset = "0xD9178C", VA = "0xD9178C")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x20002A1")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x20002A2")]
	private enum PlaybackState
	{
		[Token(Token = "0x4000D95")]
		Playing,
		[Token(Token = "0x4000D96")]
		Paused,
		[Token(Token = "0x4000D97")]
		Rewinding,
		[Token(Token = "0x4000D98")]
		FastForwarding
	}

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x6000D88")]
	[Address(RVA = "0xD91D9C", Offset = "0xD91D9C", VA = "0xD91D9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D89")]
	[Address(RVA = "0xD92050", Offset = "0xD92050", VA = "0xD92050")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0xD9217C", Offset = "0xD9217C", VA = "0xD9217C")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0xD92288", Offset = "0xD92288", VA = "0xD92288")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0xD92368", Offset = "0xD92368", VA = "0xD92368")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0xD9225C", Offset = "0xD9225C", VA = "0xD9225C")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0xD92430", Offset = "0xD92430", VA = "0xD92430")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0xD91F44", Offset = "0xD91F44", VA = "0xD91F44")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x6000D90")]
	[Address(RVA = "0xD927C4", Offset = "0xD927C4", VA = "0xD927C4")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x20002A3")]
public static class VectorUtil
{
	[Token(Token = "0x6000D91")]
	[Address(RVA = "0xE1B79C", Offset = "0xE1B79C", VA = "0xE1B79C")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x20002A4")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x20002A5")]
	public enum RotationAxes
	{
		[Token(Token = "0x4000DA2")]
		MouseXAndY,
		[Token(Token = "0x4000DA3")]
		MouseX,
		[Token(Token = "0x4000DA4")]
		MouseY
	}

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x6000D92")]
	[Address(RVA = "0xD8D818", Offset = "0xD8D818", VA = "0xD8D818")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D93")]
	[Address(RVA = "0xD8DA78", Offset = "0xD8DA78", VA = "0xD8DA78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000D94")]
	[Address(RVA = "0xD8DB38", Offset = "0xD8DB38", VA = "0xD8DB38")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x20002A6")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x20002A7")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x4000DAC")]
		Uninitialized = -1,
		[Token(Token = "0x4000DAD")]
		NotEnabled,
		[Token(Token = "0x4000DAE")]
		Success,
		[Token(Token = "0x4000DAF")]
		StreamError,
		[Token(Token = "0x4000DB0")]
		ProcessError,
		[Token(Token = "0x4000DB1")]
		MaxStatValue
	}

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource source;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x170000DB")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x6000D95")]
		[Address(RVA = "0xD972A8", Offset = "0xD972A8", VA = "0xD972A8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D96")]
		[Address(RVA = "0xD972B0", Offset = "0xD972B0", VA = "0xD972B0")]
		set
		{
		}
	}

	[Token(Token = "0x6000D97")]
	[Address(RVA = "0xD972BC", Offset = "0xD972BC", VA = "0xD972BC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000D98")]
	[Address(RVA = "0xD974F0", Offset = "0xD974F0", VA = "0xD974F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000D99")]
	[Address(RVA = "0xD97740", Offset = "0xD97740", VA = "0xD97740")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x20002A8")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x4000DB2")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x170000DC")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0xD9799C", Offset = "0xD9799C", VA = "0xD9799C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0xD979A4", Offset = "0xD979A4", VA = "0xD979A4")]
		set
		{
		}
	}

	[Token(Token = "0x170000DD")]
	public float Gain
	{
		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0xD979B0", Offset = "0xD979B0", VA = "0xD979B0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0xD979B8", Offset = "0xD979B8", VA = "0xD979B8")]
		set
		{
		}
	}

	[Token(Token = "0x170000DE")]
	public bool UseInvSqr
	{
		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0xD97A3C", Offset = "0xD97A3C", VA = "0xD97A3C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0xD97A44", Offset = "0xD97A44", VA = "0xD97A44")]
		set
		{
		}
	}

	[Token(Token = "0x170000DF")]
	public float Near
	{
		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0xD97A50", Offset = "0xD97A50", VA = "0xD97A50")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0xD97A58", Offset = "0xD97A58", VA = "0xD97A58")]
		set
		{
		}
	}

	[Token(Token = "0x170000E0")]
	public float Far
	{
		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0xD97AE0", Offset = "0xD97AE0", VA = "0xD97AE0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0xD97AE8", Offset = "0xD97AE8", VA = "0xD97AE8")]
		set
		{
		}
	}

	[Token(Token = "0x170000E1")]
	public float VolumetricRadius
	{
		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0xD97B70", Offset = "0xD97B70", VA = "0xD97B70")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0xD97B78", Offset = "0xD97B78", VA = "0xD97B78")]
		set
		{
		}
	}

	[Token(Token = "0x170000E2")]
	public float ReverbSend
	{
		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0xD97C00", Offset = "0xD97C00", VA = "0xD97C00")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0xD97C08", Offset = "0xD97C08", VA = "0xD97C08")]
		set
		{
		}
	}

	[Token(Token = "0x170000E3")]
	public bool EnableRfl
	{
		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0xD97C90", Offset = "0xD97C90", VA = "0xD97C90")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0xD97C98", Offset = "0xD97C98", VA = "0xD97C98")]
		set
		{
		}
	}

	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0xD977C4", Offset = "0xD977C4", VA = "0xD977C4")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xB1BB30", Offset = "0xB1BB30")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0xD978BC", Offset = "0xD978BC", VA = "0xD978BC")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0xD97CA4", Offset = "0xD97CA4", VA = "0xD97CA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0xD97E18", Offset = "0xD97E18", VA = "0xD97E18")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0xD97E1C", Offset = "0xD97E1C", VA = "0xD97E1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0xD97D10", Offset = "0xD97D10", VA = "0xD97D10")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0xD97EE4", Offset = "0xD97EE4", VA = "0xD97EE4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0xD98344", Offset = "0xD98344", VA = "0xD98344")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0xD9783C", Offset = "0xD9783C", VA = "0xD9783C")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0xD98414", Offset = "0xD98414", VA = "0xD98414")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x20002A9")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x4000DBD")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x4000DBF")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0xD98434", Offset = "0xD98434", VA = "0xD98434")]
	private void Start()
	{
	}

	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0xD98440", Offset = "0xD98440", VA = "0xD98440")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0xD984F8", Offset = "0xD984F8", VA = "0xD984F8")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x6000DB9")]
	[Address(RVA = "0xD98478", Offset = "0xD98478", VA = "0xD98478")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0xD98578", Offset = "0xD98578", VA = "0xD98578")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x20002AA")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x20002AB")]
	private struct MeshMaterial
	{
		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x20002AC")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x4000DC6")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x170000E4")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0xD9A5D0", Offset = "0xD9A5D0", VA = "0xD9A5D0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170000E5")]
	public string filePath
	{
		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0xD9A65C", Offset = "0xD9A65C", VA = "0xD9A65C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0xD9A6D4", Offset = "0xD9A6D4", VA = "0xD9A6D4")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0xD9A81C", Offset = "0xD9A81C", VA = "0xD9A81C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0xD9A820", Offset = "0xD9A820", VA = "0xD9A820")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0xD9AD80", Offset = "0xD9AD80", VA = "0xD9AD80")]
	private void Update()
	{
	}

	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0xD9B118", Offset = "0xD9B118", VA = "0xD9B118")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0xD9B274", Offset = "0xD9B274", VA = "0xD9B274")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0xD9B95C", Offset = "0xD9B95C", VA = "0xD9B95C")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0xD9B998", Offset = "0xD9B998", VA = "0xD9B998")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0xD9D1B4", Offset = "0xD9D1B4", VA = "0xD9D1B4")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0xD9D08C", Offset = "0xD9D08C", VA = "0xD9D08C")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0xD9ABB8", Offset = "0xD9ABB8", VA = "0xD9ABB8")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0xD9A9EC", Offset = "0xD9A9EC", VA = "0xD9A9EC")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0xD9D7C8", Offset = "0xD9D7C8", VA = "0xD9D7C8")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0xD9DC04", Offset = "0xD9DC04", VA = "0xD9DC04")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x20002AD")]
internal class ONSPPropagation
{
	[Token(Token = "0x20002AE")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x4000DCF")]
		Int8,
		[Token(Token = "0x4000DD0")]
		UInt8,
		[Token(Token = "0x4000DD1")]
		Int16,
		[Token(Token = "0x4000DD2")]
		UInt16,
		[Token(Token = "0x4000DD3")]
		Int32,
		[Token(Token = "0x4000DD4")]
		UInt32,
		[Token(Token = "0x4000DD5")]
		Int64,
		[Token(Token = "0x4000DD6")]
		UInt64,
		[Token(Token = "0x4000DD7")]
		Float16,
		[Token(Token = "0x4000DD8")]
		Float32,
		[Token(Token = "0x4000DD9")]
		Float64
	}

	[Token(Token = "0x20002AF")]
	public interface PropagationInterface
	{
		[Token(Token = "0x6000DCE")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x6000DCF")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x6000DD0")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000DD1")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x6000DD2")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000DD3")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000DD4")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000DD5")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x6000DD6")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000DD7")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000DD8")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x20002B0")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x170000E7")]
		private IntPtr context
		{
			[Token(Token = "0x6000DD9")]
			[Address(RVA = "0xD99330", Offset = "0xD99330", VA = "0xD99330")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0xD99394", Offset = "0xD99394", VA = "0xD99394")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0xD99424", Offset = "0xD99424", VA = "0xD99424")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0xD994B4", Offset = "0xD994B4", VA = "0xD994B4", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0xD994D8", Offset = "0xD994D8", VA = "0xD994D8")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0xD99564", Offset = "0xD99564", VA = "0xD99564", Slot = "5")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0xD99588", Offset = "0xD99588", VA = "0xD99588")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0xD99608", Offset = "0xD99608", VA = "0xD99608", Slot = "6")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0xD99610", Offset = "0xD99610", VA = "0xD99610")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0xD99730", Offset = "0xD99730", VA = "0xD99730", Slot = "7")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0xD99828", Offset = "0xD99828", VA = "0xD99828")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0xD998C0", Offset = "0xD998C0", VA = "0xD998C0", Slot = "8")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0xD998CC", Offset = "0xD998CC", VA = "0xD998CC")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0xD99978", Offset = "0xD99978", VA = "0xD99978", Slot = "9")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0xD99984", Offset = "0xD99984", VA = "0xD99984")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0xD99A30", Offset = "0xD99A30", VA = "0xD99A30", Slot = "10")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0xD99A3C", Offset = "0xD99A3C", VA = "0xD99A3C")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0xD99AC8", Offset = "0xD99AC8", VA = "0xD99AC8", Slot = "11")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0xD99AEC", Offset = "0xD99AEC", VA = "0xD99AEC")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0xD99B6C", Offset = "0xD99B6C", VA = "0xD99B6C", Slot = "12")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DED")]
		[Address(RVA = "0xD99B74", Offset = "0xD99B74", VA = "0xD99B74")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0xD99C1C", Offset = "0xD99C1C", VA = "0xD99C1C", Slot = "13")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0xD99C28", Offset = "0xD99C28", VA = "0xD99C28")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0xD99CB8", Offset = "0xD99CB8", VA = "0xD99CB8", Slot = "14")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0xD989D8", Offset = "0xD989D8", VA = "0xD989D8")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x20002B1")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x170000E8")]
		private IntPtr context
		{
			[Token(Token = "0x6000DF2")]
			[Address(RVA = "0xD99CC4", Offset = "0xD99CC4", VA = "0xD99CC4")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0xD98820", Offset = "0xD98820", VA = "0xD98820")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0xD99D28", Offset = "0xD99D28", VA = "0xD99D28")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0xD99DB8", Offset = "0xD99DB8", VA = "0xD99DB8", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0xD99DDC", Offset = "0xD99DDC", VA = "0xD99DDC")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0xD99E6C", Offset = "0xD99E6C", VA = "0xD99E6C", Slot = "5")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0xD99E90", Offset = "0xD99E90", VA = "0xD99E90")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0xD99F10", Offset = "0xD99F10", VA = "0xD99F10", Slot = "6")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0xD99F18", Offset = "0xD99F18", VA = "0xD99F18")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0xD9A038", Offset = "0xD9A038", VA = "0xD9A038", Slot = "7")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0xD9A130", Offset = "0xD9A130", VA = "0xD9A130")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0xD9A1C8", Offset = "0xD9A1C8", VA = "0xD9A1C8", Slot = "8")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0xD9A1D4", Offset = "0xD9A1D4", VA = "0xD9A1D4")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0xD9A280", Offset = "0xD9A280", VA = "0xD9A280", Slot = "9")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E00")]
		[Address(RVA = "0xD9A28C", Offset = "0xD9A28C", VA = "0xD9A28C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0xD9A338", Offset = "0xD9A338", VA = "0xD9A338", Slot = "10")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E02")]
		[Address(RVA = "0xD9A344", Offset = "0xD9A344", VA = "0xD9A344")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0xD9A3D4", Offset = "0xD9A3D4", VA = "0xD9A3D4", Slot = "11")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E04")]
		[Address(RVA = "0xD9A3F8", Offset = "0xD9A3F8", VA = "0xD9A3F8")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0xD9A478", Offset = "0xD9A478", VA = "0xD9A478", Slot = "12")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E06")]
		[Address(RVA = "0xD9A480", Offset = "0xD9A480", VA = "0xD9A480")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0xD9A528", Offset = "0xD9A528", VA = "0xD9A528", Slot = "13")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E08")]
		[Address(RVA = "0xD9A534", Offset = "0xD9A534", VA = "0xD9A534")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0xD9A5C4", Offset = "0xD9A5C4", VA = "0xD9A5C4", Slot = "14")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0xD988B0", Offset = "0xD988B0", VA = "0xD988B0")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x20002B2")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x170000E9")]
		private IntPtr context
		{
			[Token(Token = "0x6000E0B")]
			[Address(RVA = "0xD98A24", Offset = "0xD98A24", VA = "0xD98A24")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0xD988FC", Offset = "0xD988FC", VA = "0xD988FC")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0xD98A88", Offset = "0xD98A88", VA = "0xD98A88")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0xD98B18", Offset = "0xD98B18", VA = "0xD98B18", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0xD98B3C", Offset = "0xD98B3C", VA = "0xD98B3C")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0xD98BCC", Offset = "0xD98BCC", VA = "0xD98BCC", Slot = "5")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E11")]
		[Address(RVA = "0xD98BF0", Offset = "0xD98BF0", VA = "0xD98BF0")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0xD98C70", Offset = "0xD98C70", VA = "0xD98C70", Slot = "6")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E13")]
		[Address(RVA = "0xD98C78", Offset = "0xD98C78", VA = "0xD98C78")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0xD98D98", Offset = "0xD98D98", VA = "0xD98D98", Slot = "7")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E15")]
		[Address(RVA = "0xD98E90", Offset = "0xD98E90", VA = "0xD98E90")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0xD98F28", Offset = "0xD98F28", VA = "0xD98F28", Slot = "8")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E17")]
		[Address(RVA = "0xD98F34", Offset = "0xD98F34", VA = "0xD98F34")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0xD98FE0", Offset = "0xD98FE0", VA = "0xD98FE0", Slot = "9")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E19")]
		[Address(RVA = "0xD98FEC", Offset = "0xD98FEC", VA = "0xD98FEC")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0xD99098", Offset = "0xD99098", VA = "0xD99098", Slot = "10")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0xD990A4", Offset = "0xD990A4", VA = "0xD990A4")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0xD99134", Offset = "0xD99134", VA = "0xD99134", Slot = "11")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0xD99158", Offset = "0xD99158", VA = "0xD99158")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0xD991D8", Offset = "0xD991D8", VA = "0xD991D8", Slot = "12")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0xD991E0", Offset = "0xD991E0", VA = "0xD991E0")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0xD99288", Offset = "0xD99288", VA = "0xD99288", Slot = "13")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6000E21")]
		[Address(RVA = "0xD99294", Offset = "0xD99294", VA = "0xD99294")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0xD99324", Offset = "0xD99324", VA = "0xD99324", Slot = "14")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0xD9898C", Offset = "0xD9898C", VA = "0xD9898C")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x170000E6")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0xD98588", Offset = "0xD98588", VA = "0xD98588")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0xD985F8", Offset = "0xD985F8", VA = "0xD985F8")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}
}
[Token(Token = "0x20002B3")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x20002B4")]
	public enum Preset
	{
		[Token(Token = "0x4000DE3")]
		Custom,
		[Token(Token = "0x4000DE4")]
		AcousticTile,
		[Token(Token = "0x4000DE5")]
		Brick,
		[Token(Token = "0x4000DE6")]
		BrickPainted,
		[Token(Token = "0x4000DE7")]
		Carpet,
		[Token(Token = "0x4000DE8")]
		CarpetHeavy,
		[Token(Token = "0x4000DE9")]
		CarpetHeavyPadded,
		[Token(Token = "0x4000DEA")]
		CeramicTile,
		[Token(Token = "0x4000DEB")]
		Concrete,
		[Token(Token = "0x4000DEC")]
		ConcreteRough,
		[Token(Token = "0x4000DED")]
		ConcreteBlock,
		[Token(Token = "0x4000DEE")]
		ConcreteBlockPainted,
		[Token(Token = "0x4000DEF")]
		Curtain,
		[Token(Token = "0x4000DF0")]
		Foliage,
		[Token(Token = "0x4000DF1")]
		Glass,
		[Token(Token = "0x4000DF2")]
		GlassHeavy,
		[Token(Token = "0x4000DF3")]
		Grass,
		[Token(Token = "0x4000DF4")]
		Gravel,
		[Token(Token = "0x4000DF5")]
		GypsumBoard,
		[Token(Token = "0x4000DF6")]
		PlasterOnBrick,
		[Token(Token = "0x4000DF7")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x4000DF8")]
		Soil,
		[Token(Token = "0x4000DF9")]
		SoundProof,
		[Token(Token = "0x4000DFA")]
		Snow,
		[Token(Token = "0x4000DFB")]
		Steel,
		[Token(Token = "0x4000DFC")]
		Water,
		[Token(Token = "0x4000DFD")]
		WoodThin,
		[Token(Token = "0x4000DFE")]
		WoodThick,
		[Token(Token = "0x4000DFF")]
		WoodFloor,
		[Token(Token = "0x4000E00")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x20002B5")]
	public sealed class Point
	{
		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0xDDF230", Offset = "0xDDF230", VA = "0xDDF230")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20002B6")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xB15A70", Offset = "0xB15A70")]
	public sealed class Spectrum
	{
		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0xDDF268", Offset = "0xDDF268", VA = "0xDDF268")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Spectrum absorption;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Spectrum transmission;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Spectrum scattering;

	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x170000EA")]
	public Preset preset
	{
		[Token(Token = "0x6000E24")]
		[Address(RVA = "0xD9DCDC", Offset = "0xD9DCDC", VA = "0xD9DCDC")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x6000E25")]
		[Address(RVA = "0xD9DCE4", Offset = "0xD9DCE4", VA = "0xD9DCE4")]
		set
		{
		}
	}

	[Token(Token = "0x6000E26")]
	[Address(RVA = "0xD9DD0C", Offset = "0xD9DD0C", VA = "0xD9DD0C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E27")]
	[Address(RVA = "0xD9D65C", Offset = "0xD9D65C", VA = "0xD9D65C")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x6000E28")]
	[Address(RVA = "0xD9E2F0", Offset = "0xD9E2F0", VA = "0xD9E2F0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E29")]
	[Address(RVA = "0xD9E2F4", Offset = "0xD9E2F4", VA = "0xD9E2F4")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0xD9DD10", Offset = "0xD9DD10", VA = "0xD9DD10")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0xD9CEF8", Offset = "0xD9CEF8", VA = "0xD9CEF8")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0xD9E3D8", Offset = "0xD9E3D8", VA = "0xD9E3D8")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0xD9E878", Offset = "0xD9E878", VA = "0xD9E878")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0xD9ED1C", Offset = "0xD9ED1C", VA = "0xD9ED1C")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0xD9F1BC", Offset = "0xD9F1BC", VA = "0xD9F1BC")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E30")]
	[Address(RVA = "0xD9F670", Offset = "0xD9F670", VA = "0xD9F670")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E31")]
	[Address(RVA = "0xD9FB10", Offset = "0xD9FB10", VA = "0xD9FB10")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E32")]
	[Address(RVA = "0xD9FFB0", Offset = "0xD9FFB0", VA = "0xD9FFB0")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E33")]
	[Address(RVA = "0xDA0458", Offset = "0xDA0458", VA = "0xDA0458")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E34")]
	[Address(RVA = "0xDA0900", Offset = "0xDA0900", VA = "0xDA0900")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E35")]
	[Address(RVA = "0xDA0DAC", Offset = "0xDA0DAC", VA = "0xDA0DAC")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E36")]
	[Address(RVA = "0xDA1254", Offset = "0xDA1254", VA = "0xDA1254")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E37")]
	[Address(RVA = "0xDA1704", Offset = "0xDA1704", VA = "0xDA1704")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E38")]
	[Address(RVA = "0xDA1BA4", Offset = "0xDA1BA4", VA = "0xDA1BA4")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E39")]
	[Address(RVA = "0xDA2050", Offset = "0xDA2050", VA = "0xDA2050")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0xDA24E0", Offset = "0xDA24E0", VA = "0xDA24E0")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0xDA297C", Offset = "0xDA297C", VA = "0xDA297C")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0xDA2D04", Offset = "0xDA2D04", VA = "0xDA2D04")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0xDA3084", Offset = "0xDA3084", VA = "0xDA3084")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0xDA3534", Offset = "0xDA3534", VA = "0xDA3534")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0xDA39E0", Offset = "0xDA39E0", VA = "0xDA39E0")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E40")]
	[Address(RVA = "0xDA3E84", Offset = "0xDA3E84", VA = "0xDA3E84")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E41")]
	[Address(RVA = "0xDA4210", Offset = "0xDA4210", VA = "0xDA4210")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E42")]
	[Address(RVA = "0xDA4374", Offset = "0xDA4374", VA = "0xDA4374")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E43")]
	[Address(RVA = "0xDA46F0", Offset = "0xDA46F0", VA = "0xDA46F0")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E44")]
	[Address(RVA = "0xDA4B80", Offset = "0xDA4B80", VA = "0xDA4B80")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E45")]
	[Address(RVA = "0xDA5024", Offset = "0xDA5024", VA = "0xDA5024")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E46")]
	[Address(RVA = "0xDA54BC", Offset = "0xDA54BC", VA = "0xDA54BC")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E47")]
	[Address(RVA = "0xDA595C", Offset = "0xDA595C", VA = "0xDA595C")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E48")]
	[Address(RVA = "0xDA5E04", Offset = "0xDA5E04", VA = "0xDA5E04")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000E49")]
	[Address(RVA = "0xDA62A8", Offset = "0xDA62A8", VA = "0xDA62A8")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x20002B7")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0xDDF2E0", Offset = "0xDDF2E0", VA = "0xDDF2E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0xDDF3B4", Offset = "0xDDF3B4", VA = "0xDDF3B4")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x20002B8")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x170000EB")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0xDDF968", Offset = "0xDDF968", VA = "0xDDF968")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0xDDFA7C", Offset = "0xDDFA7C", VA = "0xDDFA7C")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x20002B9")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x4000E08")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x6000E50")]
	[Address(RVA = "0xDDFA8C", Offset = "0xDDFA8C", VA = "0xDDFA8C")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x6000E51")]
	[Address(RVA = "0xDDFB24", Offset = "0xDDFB24", VA = "0xDDFB24")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000E52")]
	[Address(RVA = "0xDDFC30", Offset = "0xDDFC30", VA = "0xDDFC30")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x20002BA")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x20002BB")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float particleSize;

	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float particleOffset;

	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject room;

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] dims;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] coefs;

	[Token(Token = "0x4000E17")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] points;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] normals;

	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem sys;

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x4000E1D")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000E53")]
	[Address(RVA = "0xDED6E0", Offset = "0xDED6E0", VA = "0xDED6E0")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000E54")]
	[Address(RVA = "0xDED510", Offset = "0xDED510", VA = "0xDED510")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xB1BB44", Offset = "0xB1BB44")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x6000E55")]
	[Address(RVA = "0xDED718", Offset = "0xDED718", VA = "0xDED718")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E56")]
	[Address(RVA = "0xDED84C", Offset = "0xDED84C", VA = "0xDED84C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E57")]
	[Address(RVA = "0xDED940", Offset = "0xDED940", VA = "0xDED940")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E58")]
	[Address(RVA = "0xDEE2F8", Offset = "0xDEE2F8", VA = "0xDEE2F8")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000E59")]
	[Address(RVA = "0xDED7B8", Offset = "0xDED7B8", VA = "0xDED7B8")]
	private static extern int OSP_Unity_AssignRaycastCallback(AudioRaycastCallback callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0xDED8B0", Offset = "0xDED8B0", VA = "0xDED8B0")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0xDEE060", Offset = "0xDEE060", VA = "0xDEE060")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0xDEE0E0", Offset = "0xDEE0E0", VA = "0xDEE0E0")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0xDEE168", Offset = "0xDEE168", VA = "0xDEE168")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0xDEE1F0", Offset = "0xDEE1F0", VA = "0xDEE1F0")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0xDEE270", Offset = "0xDEE270", VA = "0xDEE270")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x6000E60")]
	[Address(RVA = "0xDEF130", Offset = "0xDEF130", VA = "0xDEF130")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x6000E61")]
	[Address(RVA = "0xDEF1D8", Offset = "0xDEF1D8", VA = "0xDEF1D8")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x6000E62")]
	[Address(RVA = "0xDEF280", Offset = "0xDEF280", VA = "0xDEF280")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x20002BC")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x20002BD")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x6000E68")]
	[Address(RVA = "0xDDF3C4", Offset = "0xDDF3C4", VA = "0xDDF3C4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000E69")]
	[Address(RVA = "0xDDF52C", Offset = "0xDDF52C", VA = "0xDDF52C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0xDDF410", Offset = "0xDDF410", VA = "0xDDF410")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0xDDF4A0", Offset = "0xDDF4A0", VA = "0xDDF4A0")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0xDDF578", Offset = "0xDDF578", VA = "0xDDF578")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0xDDF610", Offset = "0xDDF610", VA = "0xDDF610")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0xDDF778", Offset = "0xDDF778", VA = "0xDDF778")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0xDDF8E0", Offset = "0xDDF8E0", VA = "0xDDF8E0")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x20002BE")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB15AA8", Offset = "0xB15AA8")]
public class OmniShadeAnimateTexture : MonoBehaviour
{
	[Token(Token = "0x20002BF")]
	public enum OmniShadeTexture
	{
		[Token(Token = "0x4000E27")]
		MainTexture,
		[Token(Token = "0x4000E28")]
		SpecularMap,
		[Token(Token = "0x4000E29")]
		EmissiveMap,
		[Token(Token = "0x4000E2A")]
		DetailMap,
		[Token(Token = "0x4000E2B")]
		LightmapTex,
		[Token(Token = "0x4000E2C")]
		MatCapTexture,
		[Token(Token = "0x4000E2D")]
		NormalMap,
		[Token(Token = "0x4000E2E")]
		Layer1Texture,
		[Token(Token = "0x4000E2F")]
		Layer2Texture,
		[Token(Token = "0x4000E30")]
		Layer3Texture,
		[Token(Token = "0x4000E31")]
		TransparencyMaskText,
		[Token(Token = "0x4000E32")]
		HeightColorsTex,
		[Token(Token = "0x4000E33")]
		ShadowOverlayTex,
		[Token(Token = "0x4000E34")]
		TopTex,
		[Token(Token = "0x4000E35")]
		NormalTopTex
	}

	[Serializable]
	[Token(Token = "0x20002C0")]
	public class AnimatedTexture
	{
		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int matIndex;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public OmniShadeTexture texture;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector2 speed;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool pingPong;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB19004", Offset = "0xB19004")]
		public float frequency;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB19020", Offset = "0xB19020")]
		public int FPS;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Texture2D[] frames;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool isTriplanar;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int textureID;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector2 currentUV;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int currentFrame;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float currentFrameTime;

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0xDEFFB0", Offset = "0xDEFFB0", VA = "0xDEFFB0")]
		public AnimatedTexture()
		{
		}
	}

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<AnimatedTexture> texturesToAnimate;

	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material[] mats;

	[Token(Token = "0x6000E71")]
	[Address(RVA = "0xDEF86C", Offset = "0xDEF86C", VA = "0xDEF86C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E72")]
	[Address(RVA = "0xDEFC98", Offset = "0xDEFC98", VA = "0xDEFC98")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E73")]
	[Address(RVA = "0xDEFBB0", Offset = "0xDEFBB0", VA = "0xDEFBB0")]
	private string GetTextureName(OmniShadeTexture texture)
	{
		return null;
	}

	[Token(Token = "0x6000E74")]
	[Address(RVA = "0xDEFFA8", Offset = "0xDEFFA8", VA = "0xDEFFA8")]
	public OmniShadeAnimateTexture()
	{
	}
}
[Token(Token = "0x20002C1")]
public class LightFlickerEffect : MonoBehaviour
{
	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material light;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float minIntensity;

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxIntensity;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB1903C", Offset = "0xB1903C")]
	public int smoothing;

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color emissionColor;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Queue<float> smoothQueue;

	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float lastSum;

	[Token(Token = "0x6000E76")]
	[Address(RVA = "0xE898C4", Offset = "0xE898C4", VA = "0xE898C4")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000E77")]
	[Address(RVA = "0xE89924", Offset = "0xE89924", VA = "0xE89924")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E78")]
	[Address(RVA = "0xE899EC", Offset = "0xE899EC", VA = "0xE899EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E79")]
	[Address(RVA = "0xE89B30", Offset = "0xE89B30", VA = "0xE89B30")]
	public LightFlickerEffect()
	{
	}
}
[Token(Token = "0x20002C2")]
public class TextureScale
{
	[Token(Token = "0x20002C3")]
	public class ThreadData
	{
		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int start;

		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int end;

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0xE4A3C4", Offset = "0xE4A3C4", VA = "0xE4A3C4")]
		public ThreadData(int s, int e)
		{
		}
	}

	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Color[] texColors;

	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Color[] newColors;

	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static int w;

	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private static float ratioX;

	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static float ratioY;

	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private static int w2;

	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static int finishCount;

	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static Mutex mutex;

	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0xE49FC0", Offset = "0xE49FC0", VA = "0xE49FC0")]
	public static void Bilinear(Texture2D tex, int newWidth, int newHeight, bool apply = true)
	{
	}

	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0xE49FCC", Offset = "0xE49FCC", VA = "0xE49FCC")]
	private static void ThreadedScale(Texture2D tex, int newWidth, int newHeight, bool useBilinear, bool apply = true)
	{
	}

	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0xE4A3FC", Offset = "0xE4A3FC", VA = "0xE4A3FC")]
	public static void BilinearScale(object obj)
	{
	}

	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0xE4A730", Offset = "0xE4A730", VA = "0xE4A730")]
	public static void PointScale(object obj)
	{
	}

	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0xE4A8C8", Offset = "0xE4A8C8", VA = "0xE4A8C8")]
	private static Color ColorLerpUnclamped(Color c1, Color c2, float value)
	{
		return default(Color);
	}
}
[Token(Token = "0x20002C4")]
public class CutoutGraphicScript : MonoBehaviour
{
	[Token(Token = "0x6000E80")]
	[Address(RVA = "0xD80988", Offset = "0xD80988", VA = "0xD80988")]
	public CutoutGraphicScript()
	{
	}
}
[Token(Token = "0x20002C5")]
public class CubeKiller : MonoBehaviour
{
	[Token(Token = "0x6000E81")]
	[Address(RVA = "0xD7E5C0", Offset = "0xD7E5C0", VA = "0xD7E5C0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000E82")]
	[Address(RVA = "0xD7E644", Offset = "0xD7E644", VA = "0xD7E644")]
	public CubeKiller()
	{
	}
}
[Token(Token = "0x20002C6")]
public class CubeSpawner : MonoBehaviour
{
	[Token(Token = "0x20002C7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15B0C", Offset = "0xB15B0C")]
	private sealed class <SpawnCube>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CubeSpawner <>4__this;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <timer>5__2;

		[Token(Token = "0x170000EC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000E89")]
			[Address(RVA = "0xD7E918", Offset = "0xD7E918", VA = "0xD7E918", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000ED")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000E8B")]
			[Address(RVA = "0xD7E980", Offset = "0xD7E980", VA = "0xD7E980", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0xD7E754", Offset = "0xD7E754", VA = "0xD7E754")]
		[DebuggerHidden]
		public <SpawnCube>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0xD7E790", Offset = "0xD7E790", VA = "0xD7E790", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0xD7E794", Offset = "0xD7E794", VA = "0xD7E794", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0xD7E920", Offset = "0xD7E920", VA = "0xD7E920", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform CubePrefab;

	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Interval;

	[Token(Token = "0x6000E83")]
	[Address(RVA = "0xD7E64C", Offset = "0xD7E64C", VA = "0xD7E64C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E84")]
	[Address(RVA = "0xD7E6E4", Offset = "0xD7E6E4", VA = "0xD7E6E4")]
	private IEnumerator SpawnCube()
	{
		return null;
	}

	[Token(Token = "0x6000E85")]
	[Address(RVA = "0xD7E780", Offset = "0xD7E780", VA = "0xD7E780")]
	public CubeSpawner()
	{
	}
}
[Token(Token = "0x20002C8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB15B1C", Offset = "0xB15B1C")]
public class Record : MonoBehaviour
{
	[Token(Token = "0x4000E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Recorder m_Recorder;

	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float m_Progress;

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string m_LastFile;

	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool m_IsSaving;

	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0xE3F274", Offset = "0xE3F274", VA = "0xE3F274")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0xE3F39C", Offset = "0xE3F39C", VA = "0xE3F39C")]
	private void OnProcessingDone()
	{
	}

	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0xE3F3A8", Offset = "0xE3F3A8", VA = "0xE3F3A8")]
	private void OnFileSaveProgress(int id, float percent)
	{
	}

	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0xE3F3BC", Offset = "0xE3F3BC", VA = "0xE3F3BC")]
	private void OnFileSaved(int id, string filepath)
	{
	}

	[Token(Token = "0x6000E90")]
	[Address(RVA = "0xE3F3E4", Offset = "0xE3F3E4", VA = "0xE3F3E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E91")]
	[Address(RVA = "0xE3F428", Offset = "0xE3F428", VA = "0xE3F428")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000E92")]
	[Address(RVA = "0xE3F8F0", Offset = "0xE3F8F0", VA = "0xE3F8F0")]
	public Record()
	{
	}
}
[Token(Token = "0x20002C9")]
public class UniGifImage : MonoBehaviour
{
	[Token(Token = "0x20002CA")]
	public enum State
	{
		[Token(Token = "0x4000E6F")]
		None,
		[Token(Token = "0x4000E70")]
		Loading,
		[Token(Token = "0x4000E71")]
		Ready,
		[Token(Token = "0x4000E72")]
		Playing,
		[Token(Token = "0x4000E73")]
		Pause
	}

	[Token(Token = "0x20002CB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15B80", Offset = "0xB15B80")]
	private sealed class <>c__DisplayClass34_0
	{
		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UniGifImage <>4__this;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool autoPlay;

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0xE155E8", Offset = "0xE155E8", VA = "0xE155E8")]
		public <>c__DisplayClass34_0()
		{
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0xE155F0", Offset = "0xE155F0", VA = "0xE155F0")]
		internal void <SetGifFromUrlCoroutine>b__0(List<UniGif.GifTexture> gifTexList, int loopCount, int width, int height)
		{
		}
	}

	[Token(Token = "0x20002CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15B90", Offset = "0xB15B90")]
	private sealed class <SetGifFromUrlCoroutine>d__34 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UniGifImage <>4__this;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool autoPlay;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string url;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private <>c__DisplayClass34_0 <>8__1;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WWW <www>5__2;

		[Token(Token = "0x170000F2")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EAC")]
			[Address(RVA = "0xE15D5C", Offset = "0xE15D5C", VA = "0xE15D5C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F3")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EAE")]
			[Address(RVA = "0xE15DC4", Offset = "0xE15DC4", VA = "0xE15DC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0xE152DC", Offset = "0xE152DC", VA = "0xE152DC")]
		[DebuggerHidden]
		public <SetGifFromUrlCoroutine>d__34(int <>1__state)
		{
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0xE15848", Offset = "0xE15848", VA = "0xE15848", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0xE15934", Offset = "0xE15934", VA = "0xE15934", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0xE15874", Offset = "0xE15874", VA = "0xE15874")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0xE15D64", Offset = "0xE15D64", VA = "0xE15D64", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RawImage m_rawImage;

	[Token(Token = "0x4000E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AspectFitScript aspectFitScript;

	[Token(Token = "0x4000E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private UniGifImageAspectController m_imgAspectCtrl;

	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private FilterMode m_filterMode;

	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private TextureWrapMode m_wrapMode;

	[Token(Token = "0x4000E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private bool m_loadOnStart;

	[Token(Token = "0x4000E63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private string m_loadOnStartUrl;

	[Token(Token = "0x4000E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool m_rotateOnLoading;

	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[SerializeField]
	private bool m_outputDebugLog;

	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<UniGif.GifTexture> m_gifTextureList;

	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float m_delayTime;

	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int m_gifTextureIndex;

	[Token(Token = "0x4000E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int m_nowLoopCount;

	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB190E8", Offset = "0xB190E8")]
	private State <nowState>k__BackingField;

	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB190F8", Offset = "0xB190F8")]
	private int <loopCount>k__BackingField;

	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB19108", Offset = "0xB19108")]
	private int <width>k__BackingField;

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB19118", Offset = "0xB19118")]
	private int <height>k__BackingField;

	[Token(Token = "0x170000EE")]
	public State nowState
	{
		[Token(Token = "0x6000E93")]
		[Address(RVA = "0xE14BF0", Offset = "0xE14BF0", VA = "0xE14BF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BBF8", Offset = "0xB1BBF8")]
		get
		{
			return default(State);
		}
		[Token(Token = "0x6000E94")]
		[Address(RVA = "0xE14BF8", Offset = "0xE14BF8", VA = "0xE14BF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BC08", Offset = "0xB1BC08")]
		private set
		{
		}
	}

	[Token(Token = "0x170000EF")]
	public int loopCount
	{
		[Token(Token = "0x6000E95")]
		[Address(RVA = "0xE14C00", Offset = "0xE14C00", VA = "0xE14C00")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BC18", Offset = "0xB1BC18")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000E96")]
		[Address(RVA = "0xE14C08", Offset = "0xE14C08", VA = "0xE14C08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BC28", Offset = "0xB1BC28")]
		private set
		{
		}
	}

	[Token(Token = "0x170000F0")]
	public int width
	{
		[Token(Token = "0x6000E97")]
		[Address(RVA = "0xE14C10", Offset = "0xE14C10", VA = "0xE14C10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BC38", Offset = "0xB1BC38")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000E98")]
		[Address(RVA = "0xE14C18", Offset = "0xE14C18", VA = "0xE14C18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BC48", Offset = "0xB1BC48")]
		private set
		{
		}
	}

	[Token(Token = "0x170000F1")]
	public int height
	{
		[Token(Token = "0x6000E99")]
		[Address(RVA = "0xE14C20", Offset = "0xE14C20", VA = "0xE14C20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BC58", Offset = "0xB1BC58")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0xE14C28", Offset = "0xE14C28", VA = "0xE14C28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BC68", Offset = "0xB1BC68")]
		private set
		{
		}
	}

	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0xE14C30", Offset = "0xE14C30", VA = "0xE14C30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0xE14DBC", Offset = "0xE14DBC", VA = "0xE14DBC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0xE14FB8", Offset = "0xE14FB8", VA = "0xE14FB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0xE14D8C", Offset = "0xE14D8C", VA = "0xE14D8C")]
	public void SetGifFromUrl(string url, bool autoPlay = true)
	{
	}

	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0xE15250", Offset = "0xE15250", VA = "0xE15250")]
	public IEnumerator SetGifFromUrlCoroutine(string url, bool autoPlay = true)
	{
		return null;
	}

	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0xE14DC0", Offset = "0xE14DC0", VA = "0xE14DC0")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000EA1")]
	[Address(RVA = "0xE15308", Offset = "0xE15308", VA = "0xE15308")]
	public void Play()
	{
	}

	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0xE151BC", Offset = "0xE151BC", VA = "0xE151BC")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0xE154B8", Offset = "0xE154B8", VA = "0xE154B8")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0xE15548", Offset = "0xE15548", VA = "0xE15548")]
	public void Resume()
	{
	}

	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0xE155D8", Offset = "0xE155D8", VA = "0xE155D8")]
	public UniGifImage()
	{
	}
}
[Token(Token = "0x20002CD")]
public class UniGifTest : MonoBehaviour
{
	[Token(Token = "0x20002CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15BA0", Offset = "0xB15BA0")]
	private sealed class <ViewGifCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UniGifTest <>4__this;

		[Token(Token = "0x170000F4")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EB5")]
			[Address(RVA = "0xE163DC", Offset = "0xE163DC", VA = "0xE163DC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F5")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EB7")]
			[Address(RVA = "0xE16444", Offset = "0xE16444", VA = "0xE16444", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0xE16300", Offset = "0xE16300", VA = "0xE16300")]
		[DebuggerHidden]
		public <ViewGifCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0xE16334", Offset = "0xE16334", VA = "0xE16334", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0xE16338", Offset = "0xE16338", VA = "0xE16338", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0xE163E4", Offset = "0xE163E4", VA = "0xE163E4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private InputField m_inputField;

	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private UniGifImage m_uniGifImage;

	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_mutex;

	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0xE161CC", Offset = "0xE161CC", VA = "0xE161CC")]
	public void OnButtonClicked()
	{
	}

	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0xE16290", Offset = "0xE16290", VA = "0xE16290")]
	private IEnumerator ViewGifCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0xE1632C", Offset = "0xE1632C", VA = "0xE1632C")]
	public UniGifTest()
	{
	}
}
[Token(Token = "0x20002CF")]
[ExecuteInEditMode]
public class UniGifImageAspectController : MonoBehaviour
{
	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_originalWidth;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int m_originalHeight;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_fixOnUpdate;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector2 m_lastSize;

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector2 m_newSize;

	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform m_rectTransform;

	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool m_stayInBounds;

	[Token(Token = "0x4000E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector2 m_originalBounds;

	[Token(Token = "0x170000F6")]
	public RectTransform rectTransform
	{
		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0xE15DCC", Offset = "0xE15DCC", VA = "0xE15DCC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000EB9")]
	[Address(RVA = "0xE15E64", Offset = "0xE15E64", VA = "0xE15E64")]
	private void Start()
	{
	}

	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0xE15E98", Offset = "0xE15E98", VA = "0xE15E98")]
	private void Update()
	{
	}

	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0xE15828", Offset = "0xE15828", VA = "0xE15828")]
	public void FixAspectRatio(int originalWidth = -1, int originalHeight = -1)
	{
	}

	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0xE15FC4", Offset = "0xE15FC4", VA = "0xE15FC4")]
	public void FixAspectRatioByScaling(int originalWidth = -1, int originalHeight = -1)
	{
	}

	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0xE15EA8", Offset = "0xE15EA8", VA = "0xE15EA8")]
	public void FixAspectRatioWithinBounds(int originalWidth = -1, int originalHeight = -1)
	{
	}

	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0xE16138", Offset = "0xE16138", VA = "0xE16138")]
	public UniGifImageAspectController()
	{
	}
}
[Token(Token = "0x20002D0")]
public static class UniGif
{
	[Token(Token = "0x20002D1")]
	public class GifTexture
	{
		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D m_texture2d;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_delaySec;

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0xE13EC8", Offset = "0xE13EC8", VA = "0xE13EC8")]
		public GifTexture(Texture2D texture2d, float delaySec)
		{
		}
	}

	[Token(Token = "0x20002D2")]
	private struct GifData
	{
		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte m_sig0;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public byte m_sig1;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public byte m_sig2;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public byte m_ver0;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public byte m_ver1;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public byte m_ver2;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public ushort m_logicalScreenWidth;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ushort m_logicalScreenHeight;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		public bool m_globalColorTableFlag;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int m_colorResolution;

		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool m_sortFlag;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int m_sizeOfGlobalColorTable;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public byte m_bgColorIndex;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public byte m_pixelAspectRatio;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<byte[]> m_globalColorTable;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<ImageBlock> m_imageBlockList;

		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<GraphicControlExtension> m_graphicCtrlExList;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<CommentExtension> m_commentExList;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<PlainTextExtension> m_plainTextExList;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ApplicationExtension m_appEx;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public byte m_trailer;

		[Token(Token = "0x170000F7")]
		public string signature
		{
			[Token(Token = "0x6000ED5")]
			[Address(RVA = "0xBC9CC4", Offset = "0xBC9CC4", VA = "0xBC9CC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000F8")]
		public string version
		{
			[Token(Token = "0x6000ED6")]
			[Address(RVA = "0xBC9CCC", Offset = "0xBC9CCC", VA = "0xBC9CCC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0xBC9CD4", Offset = "0xBC9CD4", VA = "0xBC9CD4")]
		public void Dump()
		{
		}
	}

	[Token(Token = "0x20002D3")]
	private struct ImageBlock
	{
		[Token(Token = "0x20002D4")]
		public struct ImageDataBlock
		{
			[Token(Token = "0x4000EAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public byte m_blockSize;

			[Token(Token = "0x4000EAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public byte[] m_imageData;
		}

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte m_imageSeparator;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public ushort m_imageLeftPosition;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ushort m_imageTopPosition;

		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public ushort m_imageWidth;

		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ushort m_imageHeight;

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		public bool m_localColorTableFlag;

		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB")]
		public bool m_interlaceFlag;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool m_sortFlag;

		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int m_sizeOfLocalColorTable;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<byte[]> m_localColorTable;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public byte m_lzwMinimumCodeSize;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<ImageDataBlock> m_imageDataList;
	}

	[Token(Token = "0x20002D5")]
	private struct GraphicControlExtension
	{
		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte m_extensionIntroducer;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public byte m_graphicControlLabel;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public byte m_blockSize;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ushort m_disposalMethod;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public bool m_transparentColorFlag;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ushort m_delayTime;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		public byte m_transparentColorIndex;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB")]
		public byte m_blockTerminator;
	}

	[Token(Token = "0x20002D6")]
	private struct CommentExtension
	{
		[Token(Token = "0x20002D7")]
		public struct CommentDataBlock
		{
			[Token(Token = "0x4000EBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public byte m_blockSize;

			[Token(Token = "0x4000EBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public byte[] m_commentData;
		}

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte m_extensionIntroducer;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public byte m_commentLabel;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public List<CommentDataBlock> m_commentDataList;
	}

	[Token(Token = "0x20002D8")]
	private struct PlainTextExtension
	{
		[Token(Token = "0x20002D9")]
		public struct PlainTextDataBlock
		{
			[Token(Token = "0x4000EC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public byte m_blockSize;

			[Token(Token = "0x4000EC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public byte[] m_plainTextData;
		}

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte m_extensionIntroducer;

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public byte m_plainTextLabel;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public byte m_blockSize;

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public List<PlainTextDataBlock> m_plainTextDataList;
	}

	[Token(Token = "0x20002DA")]
	private struct ApplicationExtension
	{
		[Token(Token = "0x20002DB")]
		public struct ApplicationDataBlock
		{
			[Token(Token = "0x4000ED2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public byte m_blockSize;

			[Token(Token = "0x4000ED3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public byte[] m_applicationData;
		}

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte m_extensionIntroducer;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public byte m_extensionLabel;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public byte m_blockSize;

		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public byte m_appId1;

		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public byte m_appId2;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public byte m_appId3;

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public byte m_appId4;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public byte m_appId5;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public byte m_appId6;

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public byte m_appId7;

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		public byte m_appId8;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB")]
		public byte m_appAuthCode1;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public byte m_appAuthCode2;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		public byte m_appAuthCode3;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<ApplicationDataBlock> m_appDataList;

		[Token(Token = "0x170000F9")]
		public string applicationIdentifier
		{
			[Token(Token = "0x6000ED8")]
			[Address(RVA = "0xBC9A9C", Offset = "0xBC9A9C", VA = "0xBC9A9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FA")]
		public string applicationAuthenticationCode
		{
			[Token(Token = "0x6000ED9")]
			[Address(RVA = "0xBC9AA4", Offset = "0xBC9AA4", VA = "0xBC9AA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FB")]
		public int loopCount
		{
			[Token(Token = "0x6000EDA")]
			[Address(RVA = "0xBC9AAC", Offset = "0xBC9AAC", VA = "0xBC9AAC")]
			get
			{
				return default(int);
			}
		}
	}

	[Token(Token = "0x20002DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15BC0", Offset = "0xB15BC0")]
	private sealed class <>c__DisplayClass0_0
	{
		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<GifTexture> gifTexList;

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0xE139D4", Offset = "0xE139D4", VA = "0xE139D4")]
		public <>c__DisplayClass0_0()
		{
		}

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0xE139DC", Offset = "0xE139DC", VA = "0xE139DC")]
		internal void <GetTextureListCoroutine>b__0(List<GifTexture> result)
		{
		}
	}

	[Token(Token = "0x20002DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15BD0", Offset = "0xB15BD0")]
	private sealed class <GetTextureListCoroutine>d__0 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public byte[] bytes;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool debugLog;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Action<List<GifTexture>, int, int, int> callback;

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public FilterMode filterMode;

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public TextureWrapMode wrapMode;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private <>c__DisplayClass0_0 <>8__1;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int <loopCount>5__2;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int <width>5__3;

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int <height>5__4;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GifData <gifData>5__5;

		[Token(Token = "0x170000FC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EE0")]
			[Address(RVA = "0xE142B4", Offset = "0xE142B4", VA = "0xE142B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EE2")]
			[Address(RVA = "0xE1431C", Offset = "0xE1431C", VA = "0xE1431C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0xE13F74", Offset = "0xE13F74", VA = "0xE13F74")]
		[DebuggerHidden]
		public <GetTextureListCoroutine>d__0(int <>1__state)
		{
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0xE13FA0", Offset = "0xE13FA0", VA = "0xE13FA0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0xE13FA4", Offset = "0xE13FA4", VA = "0xE13FA4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE1")]
		[Address(RVA = "0xE142BC", Offset = "0xE142BC", VA = "0xE142BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002DE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15BE0", Offset = "0xB15BE0")]
	private sealed class <DecodeTextureCoroutine>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GifData gifData;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public FilterMode filterMode;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public TextureWrapMode wrapMode;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Action<List<GifTexture>> callback;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private List<GifTexture> <gifTexList>5__2;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<ushort> <disposalMethodList>5__3;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int <imgIndex>5__4;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private int <i>5__5;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private byte[] <decodedData>5__6;

		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private GraphicControlExtension? <graphicCtrlEx>5__7;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int <transparentIndex>5__8;

		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Color32 <bgColor>5__9;

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private List<byte[]> <colorTable>5__10;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool <filledTexture>5__11;

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Texture2D <tex>5__12;

		[Token(Token = "0x170000FE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000EE6")]
			[Address(RVA = "0xE13F04", Offset = "0xE13F04", VA = "0xE13F04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000FF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000EE8")]
			[Address(RVA = "0xE13F6C", Offset = "0xE13F6C", VA = "0xE13F6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000EE3")]
		[Address(RVA = "0xE139E4", Offset = "0xE139E4", VA = "0xE139E4")]
		[DebuggerHidden]
		public <DecodeTextureCoroutine>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6000EE4")]
		[Address(RVA = "0xE13A10", Offset = "0xE13A10", VA = "0xE13A10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000EE5")]
		[Address(RVA = "0xE13A14", Offset = "0xE13A14", VA = "0xE13A14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EE7")]
		[Address(RVA = "0xE13F0C", Offset = "0xE13F0C", VA = "0xE13F0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0xE535E4", Offset = "0xE535E4", VA = "0xE535E4")]
	public static IEnumerator GetTextureListCoroutine(byte[] bytes, Action<List<GifTexture>, int, int, int> callback, FilterMode filterMode = FilterMode.Bilinear, TextureWrapMode wrapMode = TextureWrapMode.Clamp, bool debugLog = false)
	{
		return null;
	}

	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0xE53684", Offset = "0xE53684", VA = "0xE53684")]
	private static IEnumerator DecodeTextureCoroutine(GifData gifData, Action<List<GifTexture>> callback, FilterMode filterMode, TextureWrapMode wrapMode)
	{
		return null;
	}

	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0xE5373C", Offset = "0xE5373C", VA = "0xE5373C")]
	private static byte[] GetDecodedData(ImageBlock imgBlock)
	{
		return null;
	}

	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0xE547B8", Offset = "0xE547B8", VA = "0xE547B8")]
	private static List<byte[]> GetColorTableAndSetBgColor(GifData gifData, ImageBlock imgBlock, int transparentIndex, out Color32 bgColor)
	{
		return null;
	}

	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0xE548D8", Offset = "0xE548D8", VA = "0xE548D8")]
	private static GraphicControlExtension? GetGraphicCtrlExt(GifData gifData, int imgBlockIndex)
	{
		return null;
	}

	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0xE54998", Offset = "0xE54998", VA = "0xE54998")]
	private static int GetTransparentIndex(GraphicControlExtension? graphicCtrlEx)
	{
		return default(int);
	}

	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0xE54A2C", Offset = "0xE54A2C", VA = "0xE54A2C")]
	private static float GetDelaySec(GraphicControlExtension? graphicCtrlEx)
	{
		return default(float);
	}

	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0xE54AD0", Offset = "0xE54AD0", VA = "0xE54AD0")]
	private static ushort GetDisposalMethod(GraphicControlExtension? graphicCtrlEx)
	{
		return default(ushort);
	}

	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0xE54B50", Offset = "0xE54B50", VA = "0xE54B50")]
	private static Texture2D CreateTexture2D(GifData gifData, List<GifTexture> gifTexList, int imgIndex, List<ushort> disposalMethodList, Color32 bgColor, FilterMode filterMode, TextureWrapMode wrapMode, out bool filledTexture)
	{
		return null;
	}

	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0xE54DC0", Offset = "0xE54DC0", VA = "0xE54DC0")]
	private static void SetTexturePixelRow(Texture2D tex, int y, ImageBlock imgBlock, byte[] decodedData, ref int dataIndex, List<byte[]> colorTable, Color32 bgColor, int transparentIndex, bool filledTexture)
	{
	}

	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0xE538C8", Offset = "0xE538C8", VA = "0xE538C8")]
	private static byte[] DecodeGifLZW(List<byte> compData, int lzwMinimumCodeSize, int needDataSize)
	{
		return null;
	}

	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0xE55484", Offset = "0xE55484", VA = "0xE55484")]
	private static void InitDictionary(Dictionary<int, string> dic, int lzwMinimumCodeSize, out int lzwCodeSize, out int clearCode, out int finishCode)
	{
	}

	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0xE5453C", Offset = "0xE5453C", VA = "0xE5453C")]
	private static byte[] SortInterlaceGifData(byte[] decodedData, int xNum)
	{
		return null;
	}

	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0xE5559C", Offset = "0xE5559C", VA = "0xE5559C")]
	private static bool SetGifData(byte[] gifBytes, ref GifData gifData, bool debugLog)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0xE55744", Offset = "0xE55744", VA = "0xE55744")]
	private static bool SetGifHeader(byte[] gifBytes, ref int byteIndex, ref GifData gifData)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0xE55BB0", Offset = "0xE55BB0", VA = "0xE55BB0")]
	private static bool SetGifBlock(byte[] gifBytes, ref int byteIndex, ref GifData gifData)
	{
		return default(bool);
	}

	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0xE55E40", Offset = "0xE55E40", VA = "0xE55E40")]
	private static void SetImageBlock(byte[] gifBytes, ref int byteIndex, ref GifData gifData)
	{
	}

	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0xE56318", Offset = "0xE56318", VA = "0xE56318")]
	private static void SetGraphicControlExtension(byte[] gifBytes, ref int byteIndex, ref GifData gifData)
	{
	}

	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0xE5651C", Offset = "0xE5651C", VA = "0xE5651C")]
	private static void SetCommentExtension(byte[] gifBytes, ref int byteIndex, ref GifData gifData)
	{
	}

	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0xE5672C", Offset = "0xE5672C", VA = "0xE5672C")]
	private static void SetPlainTextExtension(byte[] gifBytes, ref int byteIndex, ref GifData gifData)
	{
	}

	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0xE56960", Offset = "0xE56960", VA = "0xE56960")]
	private static void SetApplicationExtension(byte[] gifBytes, ref int byteIndex, ref GifData gifData)
	{
	}
}
[Token(Token = "0x20002DF")]
public static class UniGifExtension
{
	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0xE14A08", Offset = "0xE14A08", VA = "0xE14A08")]
	public static int GetNumeral(this BitArray array, int startIndex, int bitLength)
	{
		return default(int);
	}

	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0xE14AEC", Offset = "0xE14AEC", VA = "0xE14AEC")]
	public static int ToNumeral(this BitArray array)
	{
		return default(int);
	}
}
[Token(Token = "0x20002E0")]
public class SaveScreenshotPanelScript : MonoBehaviour
{
	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ScreenshotScript screenshotScript;

	[Token(Token = "0x4000EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button screenshotButton;

	[Token(Token = "0x4000EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Button saveButton;

	[Token(Token = "0x4000EF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Button cancelButton;

	[Token(Token = "0x4000EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Texture2D screenshot;

	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0xDC9F70", Offset = "0xDC9F70", VA = "0xDC9F70")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0xDCA08C", Offset = "0xDCA08C", VA = "0xDCA08C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000EED")]
	[Address(RVA = "0xDCA170", Offset = "0xDCA170", VA = "0xDCA170")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000EEE")]
	[Address(RVA = "0xDCA254", Offset = "0xDCA254", VA = "0xDCA254")]
	private void ScreenshotTaken(ScreenshotScript screenshotScript, Texture2D screenshotTaken)
	{
	}

	[Token(Token = "0x6000EEF")]
	[Address(RVA = "0xDCA25C", Offset = "0xDCA25C", VA = "0xDCA25C")]
	private void TakeScreenshot()
	{
	}

	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0xDCA27C", Offset = "0xDCA27C", VA = "0xDCA27C")]
	private void SaveScreenshot()
	{
	}

	[Token(Token = "0x6000EF1")]
	[Address(RVA = "0xDCA33C", Offset = "0xDCA33C", VA = "0xDCA33C")]
	private void Cancel()
	{
	}

	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0xDCA364", Offset = "0xDCA364", VA = "0xDCA364")]
	public SaveScreenshotPanelScript()
	{
	}
}
[Token(Token = "0x20002E1")]
public static class AppSettingsExtensions
{
	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0xE6FB04", Offset = "0xE6FB04", VA = "0xE6FB04")]
	public static ChatAppSettings GetChatSettings(this AppSettings appSettings)
	{
		return null;
	}
}
[Token(Token = "0x20002E2")]
public class ChannelSelector : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
{
	[Token(Token = "0x4000EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Channel;

	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0xE84590", Offset = "0xE84590", VA = "0xE84590")]
	public void SetChannel(string channel)
	{
	}

	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0xE8460C", Offset = "0xE8460C", VA = "0xE8460C", Slot = "4")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0xE8468C", Offset = "0xE8468C", VA = "0xE8468C")]
	public ChannelSelector()
	{
	}
}
[Token(Token = "0x20002E3")]
[ExecuteInEditMode]
public class ChatAppIdCheckerUI : MonoBehaviour
{
	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text Description;

	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0xD75EA4", Offset = "0xD75EA4", VA = "0xD75EA4")]
	public void Update()
	{
	}

	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0xD75FE8", Offset = "0xD75FE8", VA = "0xD75FE8")]
	public ChatAppIdCheckerUI()
	{
	}
}
[Token(Token = "0x20002E4")]
public class ChatGui : MonoBehaviour, IChatClientListener
{
	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string[] ChannelsToJoinOnConnect;

	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string[] FriendsList;

	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int HistoryLengthToFetch;

	[Token(Token = "0x4000EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB19148", Offset = "0xB19148")]
	private string <UserName>k__BackingField;

	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private string selectedChannelName;

	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ChatClient chatClient;

	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected internal ChatAppSettings chatAppSettings;

	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject missingAppIdErrorPanel;

	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject ConnectingLabel;

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public RectTransform ChatPanel;

	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject UserIdFormPanel;

	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public InputField InputFieldChat;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Text CurrentChannelText;

	[Token(Token = "0x4000F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Toggle ChannelToggleToInstantiate;

	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject FriendListUiItemtoInstantiate;

	[Token(Token = "0x4000F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private readonly Dictionary<string, Toggle> channelToggles;

	[Token(Token = "0x4000F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private readonly Dictionary<string, FriendItem> friendListItemLUT;

	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool ShowState;

	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject Title;

	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Text StateText;

	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Text UserIdText;

	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static string HelpText;

	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public int TestLength;

	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private byte[] testBytes;

	[Token(Token = "0x17000100")]
	public string UserName
	{
		[Token(Token = "0x6000EF9")]
		[Address(RVA = "0xD75FF0", Offset = "0xD75FF0", VA = "0xD75FF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BDE8", Offset = "0xB1BDE8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0xD75FF8", Offset = "0xD75FF8", VA = "0xD75FF8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BDF8", Offset = "0xB1BDF8")]
		set
		{
		}
	}

	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0xD76000", Offset = "0xD76000", VA = "0xD76000")]
	public void Start()
	{
	}

	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0xD76290", Offset = "0xD76290", VA = "0xD76290")]
	public void Connect()
	{
	}

	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0xD763F0", Offset = "0xD763F0", VA = "0xD763F0")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0xD76408", Offset = "0xD76408", VA = "0xD76408")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0xD76420", Offset = "0xD76420", VA = "0xD76420")]
	public void Update()
	{
	}

	[Token(Token = "0x6000F00")]
	[Address(RVA = "0xD76514", Offset = "0xD76514", VA = "0xD76514")]
	public void OnEnterSend()
	{
	}

	[Token(Token = "0x6000F01")]
	[Address(RVA = "0xD76E6C", Offset = "0xD76E6C", VA = "0xD76E6C")]
	public void OnClickSend()
	{
	}

	[Token(Token = "0x6000F02")]
	[Address(RVA = "0xD765B0", Offset = "0xD765B0", VA = "0xD765B0")]
	private void SendChatMessage(string inputLine)
	{
	}

	[Token(Token = "0x6000F03")]
	[Address(RVA = "0xD76F20", Offset = "0xD76F20", VA = "0xD76F20")]
	public void PostHelpToCurrentChannel()
	{
	}

	[Token(Token = "0x6000F04")]
	[Address(RVA = "0xD77204", Offset = "0xD77204", VA = "0xD77204", Slot = "4")]
	public void DebugReturn(DebugLevel level, string message)
	{
	}

	[Token(Token = "0x6000F05")]
	[Address(RVA = "0xD772EC", Offset = "0xD772EC", VA = "0xD772EC", Slot = "6")]
	public void OnConnected()
	{
	}

	[Token(Token = "0x6000F06")]
	[Address(RVA = "0xD77628", Offset = "0xD77628", VA = "0xD77628", Slot = "5")]
	public void OnDisconnected()
	{
	}

	[Token(Token = "0x6000F07")]
	[Address(RVA = "0xD77648", Offset = "0xD77648", VA = "0xD77648", Slot = "7")]
	public void OnChatStateChange(ChatState state)
	{
	}

	[Token(Token = "0x6000F08")]
	[Address(RVA = "0xD776F4", Offset = "0xD776F4", VA = "0xD776F4", Slot = "10")]
	public void OnSubscribed(string[] channels, bool[] results)
	{
	}

	[Token(Token = "0x6000F09")]
	[Address(RVA = "0xD77A08", Offset = "0xD77A08", VA = "0xD77A08")]
	public void OnSubscribed(string channel, string[] users, Dictionary<object, object> properties)
	{
	}

	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0xD77878", Offset = "0xD77878", VA = "0xD77878")]
	private void InstantiateChannelButton(string channelName)
	{
	}

	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0xD774F4", Offset = "0xD774F4", VA = "0xD774F4")]
	private void InstantiateFriendButton(string friendId)
	{
	}

	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0xD77B98", Offset = "0xD77B98", VA = "0xD77B98", Slot = "11")]
	public void OnUnsubscribed(string[] channels)
	{
	}

	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0xD77F68", Offset = "0xD77F68", VA = "0xD77F68", Slot = "8")]
	public void OnGetMessages(string channelName, string[] senders, object[] messages)
	{
	}

	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0xD77FB8", Offset = "0xD77FB8", VA = "0xD77FB8", Slot = "9")]
	public void OnPrivateMessage(string sender, object message, string channelName)
	{
	}

	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0xD780C8", Offset = "0xD780C8", VA = "0xD780C8", Slot = "12")]
	public void OnStatusUpdate(string user, int status, bool gotMessage, object message)
	{
	}

	[Token(Token = "0x6000F10")]
	[Address(RVA = "0xD78254", Offset = "0xD78254", VA = "0xD78254", Slot = "13")]
	public void OnUserSubscribed(string channel, string user)
	{
	}

	[Token(Token = "0x6000F11")]
	[Address(RVA = "0xD78358", Offset = "0xD78358", VA = "0xD78358", Slot = "14")]
	public void OnUserUnsubscribed(string channel, string user)
	{
	}

	[Token(Token = "0x6000F12")]
	[Address(RVA = "0xD7845C", Offset = "0xD7845C", VA = "0xD7845C")]
	public void OnChannelPropertiesChanged(string channel, string userId, Dictionary<object, object> properties)
	{
	}

	[Token(Token = "0x6000F13")]
	[Address(RVA = "0xD785BC", Offset = "0xD785BC", VA = "0xD785BC")]
	public void OnUserPropertiesChanged(string channel, string targetUserId, string senderUserId, Dictionary<object, object> properties)
	{
	}

	[Token(Token = "0x6000F14")]
	[Address(RVA = "0xD78750", Offset = "0xD78750", VA = "0xD78750")]
	public void OnErrorInfo(string channel, string error, object data)
	{
	}

	[Token(Token = "0x6000F15")]
	[Address(RVA = "0xD78880", Offset = "0xD78880", VA = "0xD78880")]
	public void AddMessageToSelectedChannel(string msg)
	{
	}

	[Token(Token = "0x6000F16")]
	[Address(RVA = "0xD76FDC", Offset = "0xD76FDC", VA = "0xD76FDC")]
	public void ShowChannel(string channelName)
	{
	}

	[Token(Token = "0x6000F17")]
	[Address(RVA = "0xD78964", Offset = "0xD78964", VA = "0xD78964")]
	public void OpenDashboard()
	{
	}

	[Token(Token = "0x6000F18")]
	[Address(RVA = "0xD789B0", Offset = "0xD789B0", VA = "0xD789B0")]
	public ChatGui()
	{
	}
}
[Token(Token = "0x20002E5")]
public class FriendItem : MonoBehaviour
{
	[Token(Token = "0x4000F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text NameLabel;

	[Token(Token = "0x4000F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text StatusLabel;

	[Token(Token = "0x4000F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text Health;

	[Token(Token = "0x17000101")]
	public string FriendId
	{
		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0xEC1370", Offset = "0xEC1370", VA = "0xEC1370")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0xEC134C", Offset = "0xEC134C", VA = "0xEC134C")]
		set
		{
		}
	}

	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0xEC1394", Offset = "0xEC1394", VA = "0xEC1394")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0xEC1400", Offset = "0xEC1400", VA = "0xEC1400")]
	public void OnFriendStatusUpdate(int status, bool gotMessage, object message)
	{
	}

	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0xEC1528", Offset = "0xEC1528", VA = "0xEC1528")]
	public FriendItem()
	{
	}
}
[Token(Token = "0x20002E6")]
public class IgnoreUiRaycastWhenInactive : MonoBehaviour, ICanvasRaycastFilter
{
	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0xF90480", Offset = "0xF90480", VA = "0xF90480", Slot = "4")]
	public bool IsRaycastLocationValid(Vector2 screenPoint, Camera eventCamera)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F20")]
	[Address(RVA = "0xF904A4", Offset = "0xF904A4", VA = "0xF904A4")]
	public IgnoreUiRaycastWhenInactive()
	{
	}
}
[Token(Token = "0x20002E7")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB15C20", Offset = "0xB15C20")]
public class NamePickGui : MonoBehaviour
{
	[Token(Token = "0x4000F14")]
	private const string UserNamePlayerPref = "NamePickUserName";

	[Token(Token = "0x4000F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ChatGui chatNewComponent;

	[Token(Token = "0x4000F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputField idInput;

	[Token(Token = "0x6000F21")]
	[Address(RVA = "0xD929B4", Offset = "0xD929B4", VA = "0xD929B4")]
	public void Start()
	{
	}

	[Token(Token = "0x6000F22")]
	[Address(RVA = "0xD92A6C", Offset = "0xD92A6C", VA = "0xD92A6C")]
	public void EndEditOnEnter()
	{
	}

	[Token(Token = "0x6000F23")]
	[Address(RVA = "0xD92AB8", Offset = "0xD92AB8", VA = "0xD92AB8")]
	public void StartChat()
	{
	}

	[Token(Token = "0x6000F24")]
	[Address(RVA = "0xD92B80", Offset = "0xD92B80", VA = "0xD92B80")]
	public NamePickGui()
	{
	}
}
[Token(Token = "0x20002E8")]
public class PourDetector : MonoBehaviour
{
	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int pourThreshold;

	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform origin;

	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject stream;

	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isPouring;

	[Token(Token = "0x4000F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected Stream currentStream;

	[Token(Token = "0x4000F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool pourCheck;

	[Token(Token = "0x4000F1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Consumeable consumeable;

	[Token(Token = "0x4000F1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float maxPourTime;

	[Token(Token = "0x6000F25")]
	[Address(RVA = "0xE3B9F0", Offset = "0xE3B9F0", VA = "0xE3B9F0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000F26")]
	[Address(RVA = "0xE3BB68", Offset = "0xE3BB68", VA = "0xE3BB68")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F27")]
	[Address(RVA = "0xE3BBCC", Offset = "0xE3BBCC", VA = "0xE3BBCC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F28")]
	[Address(RVA = "0xE3BCCC", Offset = "0xE3BCCC", VA = "0xE3BCCC")]
	public void StartPour()
	{
	}

	[Token(Token = "0x6000F29")]
	[Address(RVA = "0xE3BCFC", Offset = "0xE3BCFC", VA = "0xE3BCFC")]
	public void EndPour()
	{
	}

	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0xE3BC98", Offset = "0xE3BC98", VA = "0xE3BC98")]
	private float CalculatePourAngle()
	{
		return default(float);
	}

	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0xE3BA68", Offset = "0xE3BA68", VA = "0xE3BA68")]
	private Stream CreateStream()
	{
		return null;
	}

	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0xE3BD8C", Offset = "0xE3BD8C", VA = "0xE3BD8C")]
	internal void done(Mouth mouth)
	{
	}

	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0xE3BDB4", Offset = "0xE3BDB4", VA = "0xE3BDB4")]
	public PourDetector()
	{
	}
}
[Token(Token = "0x20002E9")]
public class Stream : MonoBehaviour
{
	[Token(Token = "0x20002EA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15C84", Offset = "0xB15C84")]
	private sealed class <BeginPour>d__11 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Stream <>4__this;

		[Token(Token = "0x17000102")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F41")]
			[Address(RVA = "0xEA61B4", Offset = "0xEA61B4", VA = "0xEA61B4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000103")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F43")]
			[Address(RVA = "0xEA621C", Offset = "0xEA621C", VA = "0xEA621C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0xEA56EC", Offset = "0xEA56EC", VA = "0xEA56EC")]
		[DebuggerHidden]
		public <BeginPour>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0xEA60EC", Offset = "0xEA60EC", VA = "0xEA60EC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0xEA60F0", Offset = "0xEA60F0", VA = "0xEA60F0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0xEA61BC", Offset = "0xEA61BC", VA = "0xEA61BC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15C94", Offset = "0xB15C94")]
	private sealed class <EndPour>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Stream <>4__this;

		[Token(Token = "0x17000104")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F47")]
			[Address(RVA = "0xEA62CC", Offset = "0xEA62CC", VA = "0xEA62CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000105")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F49")]
			[Address(RVA = "0xEA6334", Offset = "0xEA6334", VA = "0xEA6334", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0xEA5804", Offset = "0xEA5804", VA = "0xEA5804")]
		[DebuggerHidden]
		public <EndPour>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0xEA6224", Offset = "0xEA6224", VA = "0xEA6224", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0xEA6228", Offset = "0xEA6228", VA = "0xEA6228", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0xEA62D4", Offset = "0xEA62D4", VA = "0xEA62D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20002EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15CA4", Offset = "0xB15CA4")]
	private sealed class <UpdateParticle>d__22 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Stream <>4__this;

		[Token(Token = "0x17000106")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000F4D")]
			[Address(RVA = "0xEA6418", Offset = "0xEA6418", VA = "0xEA6418", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000107")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000F4F")]
			[Address(RVA = "0xEA6480", Offset = "0xEA6480", VA = "0xEA6480", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0xEA5E38", Offset = "0xEA5E38", VA = "0xEA5E38")]
		[DebuggerHidden]
		public <UpdateParticle>d__22(int <>1__state)
		{
		}

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0xEA633C", Offset = "0xEA633C", VA = "0xEA633C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0xEA6340", Offset = "0xEA6340", VA = "0xEA6340", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0xEA6420", Offset = "0xEA6420", VA = "0xEA6420", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x4000F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem splashParticle;

	[Token(Token = "0x4000F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Coroutine pourRoutine;

	[Token(Token = "0x4000F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 targetPosition;

	[Token(Token = "0x4000F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public PourDetector stream;

	[Token(Token = "0x4000F24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Rigidbody rb;

	[Token(Token = "0x4000F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AudioSource streamSound;

	[Token(Token = "0x4000F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Collider[] hits;

	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0xEA5304", Offset = "0xEA5304", VA = "0xEA5304")]
	public void init()
	{
	}

	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0xEA5478", Offset = "0xEA5478", VA = "0xEA5478")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000F30")]
	[Address(RVA = "0xEA55AC", Offset = "0xEA55AC", VA = "0xEA55AC")]
	public void Begin()
	{
	}

	[Token(Token = "0x6000F31")]
	[Address(RVA = "0xEA567C", Offset = "0xEA567C", VA = "0xEA567C")]
	private IEnumerator BeginPour()
	{
		return null;
	}

	[Token(Token = "0x6000F32")]
	[Address(RVA = "0xEA5718", Offset = "0xEA5718", VA = "0xEA5718")]
	public void End()
	{
	}

	[Token(Token = "0x6000F33")]
	[Address(RVA = "0xEA5794", Offset = "0xEA5794", VA = "0xEA5794")]
	private IEnumerator EndPour()
	{
		return null;
	}

	[Token(Token = "0x6000F34")]
	[Address(RVA = "0xEA53E0", Offset = "0xEA53E0", VA = "0xEA53E0")]
	public void endNow()
	{
	}

	[Token(Token = "0x6000F35")]
	[Address(RVA = "0xEA5C5C", Offset = "0xEA5C5C", VA = "0xEA5C5C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F36")]
	[Address(RVA = "0xEA5830", Offset = "0xEA5830", VA = "0xEA5830")]
	private Vector3 FindEndPoint(bool end = false)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000F37")]
	[Address(RVA = "0xEA5C60", Offset = "0xEA5C60", VA = "0xEA5C60")]
	public void performEndCheck()
	{
	}

	[Token(Token = "0x6000F38")]
	[Address(RVA = "0xEA54D8", Offset = "0xEA54D8", VA = "0xEA54D8")]
	private void MoveToPosition(int index, Vector3 targetposition)
	{
	}

	[Token(Token = "0x6000F39")]
	[Address(RVA = "0xEA5C68", Offset = "0xEA5C68", VA = "0xEA5C68")]
	private void AnimatePosition(int index, Vector3 targetPosition)
	{
	}

	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0xEA5D68", Offset = "0xEA5D68", VA = "0xEA5D68")]
	private bool HasReachedPosition(int index, Vector3 targetPosition)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0xEA560C", Offset = "0xEA560C", VA = "0xEA560C")]
	private IEnumerator UpdateParticle()
	{
		return null;
	}

	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0xEA5E64", Offset = "0xEA5E64", VA = "0xEA5E64")]
	public void SetStreamColor(Color newColor)
	{
	}

	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0xEA605C", Offset = "0xEA605C", VA = "0xEA605C")]
	public Stream()
	{
	}
}
[Token(Token = "0x20002ED")]
[DisallowMultipleComponent]
public class SteamManager : MonoBehaviour
{
	[Token(Token = "0x17000108")]
	public static bool Initialized
	{
		[Token(Token = "0x6000F50")]
		[Address(RVA = "0xEA4AD0", Offset = "0xEA4AD0", VA = "0xEA4AD0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000F51")]
	[Address(RVA = "0xEA4AD8", Offset = "0xEA4AD8", VA = "0xEA4AD8")]
	public SteamManager()
	{
	}
}
[Token(Token = "0x20002EE")]
public class SmoothSyncExamplePlayerControllerPUN2 : MonoBehaviourPunCallbacks
{
	[Token(Token = "0x4000F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rb;

	[Token(Token = "0x4000F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody2D rb2D;

	[Token(Token = "0x4000F32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SmoothSyncPUN2 smoothSync;

	[Token(Token = "0x4000F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SmoothSyncPUN2 childSmoothSync;

	[Token(Token = "0x4000F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float transformMovementSpeed;

	[Token(Token = "0x4000F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float rigidbodyMovementForce;

	[Token(Token = "0x4000F36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject childObjectToControl;

	[Token(Token = "0x6000F52")]
	[Address(RVA = "0xE9F9C8", Offset = "0xE9F9C8", VA = "0xE9F9C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F53")]
	[Address(RVA = "0xE9FAE8", Offset = "0xE9FAE8", VA = "0xE9FAE8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F54")]
	[Address(RVA = "0xEA0D30", Offset = "0xEA0D30", VA = "0xEA0D30")]
	public static bool validateStateOfPlayer(StatePUN2 latestReceivedState, StatePUN2 latestValidatedState)
	{
		return default(bool);
	}

	[Token(Token = "0x6000F55")]
	[Address(RVA = "0xEA0E24", Offset = "0xEA0E24", VA = "0xEA0E24")]
	public SmoothSyncExamplePlayerControllerPUN2()
	{
	}
}
[Token(Token = "0x20002EF")]
[ExecuteInEditMode]
public class Alwaysvisible : MonoBehaviour
{
	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer rend;

	[Token(Token = "0x6000F56")]
	[Address(RVA = "0xE6F340", Offset = "0xE6F340", VA = "0xE6F340")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F57")]
	[Address(RVA = "0xE6F398", Offset = "0xE6F398", VA = "0xE6F398")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F58")]
	[Address(RVA = "0xE6F424", Offset = "0xE6F424", VA = "0xE6F424")]
	public Alwaysvisible()
	{
	}
}
[Token(Token = "0x20002F0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xB15CD4", Offset = "0xB15CD4")]
public class EnableCameraDepthInForward : MonoBehaviour
{
	[Token(Token = "0x6000F59")]
	[Address(RVA = "0xEB6B8C", Offset = "0xEB6B8C", VA = "0xEB6B8C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0xEB6B90", Offset = "0xEB6B90", VA = "0xEB6B90")]
	private void Set()
	{
	}

	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0xEB6C1C", Offset = "0xEB6C1C", VA = "0xEB6C1C")]
	public EnableCameraDepthInForward()
	{
	}
}
[Token(Token = "0x20002F1")]
[ExecuteInEditMode]
public class WaterReflection : MonoBehaviour
{
	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_DisablePixelLights;

	[Token(Token = "0x4000F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int m_TextureSize;

	[Token(Token = "0x4000F3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_ClipPlaneOffset;

	[Token(Token = "0x4000F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask m_ReflectLayers;

	[Token(Token = "0x4000F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private System.Collections.Hashtable m_ReflectionCameras;

	[Token(Token = "0x4000F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RenderTexture m_ReflectionTexture;

	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int m_OldReflectionTextureSize;

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool s_InsideRendering;

	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0xE1E264", Offset = "0xE1E264", VA = "0xE1E264")]
	public void OnWillRenderObject()
	{
	}

	[Token(Token = "0x6000F5D")]
	[Address(RVA = "0xE1FA84", Offset = "0xE1FA84", VA = "0xE1FA84")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000F5E")]
	[Address(RVA = "0xE1F104", Offset = "0xE1F104", VA = "0xE1F104")]
	private void UpdateCameraModes(Camera src, Camera dest)
	{
	}

	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0xE1EBB4", Offset = "0xE1EBB4", VA = "0xE1EBB4")]
	private void CreateMirrorObjects(Camera currentCamera, out Camera reflectionCamera)
	{
	}

	[Token(Token = "0x6000F60")]
	[Address(RVA = "0xE1FDA4", Offset = "0xE1FDA4", VA = "0xE1FDA4")]
	private static float sgn(float a)
	{
		return default(float);
	}

	[Token(Token = "0x6000F61")]
	[Address(RVA = "0xE1F684", Offset = "0xE1F684", VA = "0xE1F684")]
	private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
	{
		return default(Vector4);
	}

	[Token(Token = "0x6000F62")]
	[Address(RVA = "0xE1F868", Offset = "0xE1F868", VA = "0xE1F868")]
	private static void CalculateObliqueMatrix(ref Matrix4x4 projection, Vector4 clipPlane)
	{
	}

	[Token(Token = "0x6000F63")]
	[Address(RVA = "0xE1F3E0", Offset = "0xE1F3E0", VA = "0xE1F3E0")]
	private static void CalculateReflectionMatrix(ref Matrix4x4 reflectionMat, Vector4 plane)
	{
	}

	[Token(Token = "0x6000F64")]
	[Address(RVA = "0xE1FDC4", Offset = "0xE1FDC4", VA = "0xE1FDC4")]
	public WaterReflection()
	{
	}
}
[Token(Token = "0x20002F2")]
public class SaveAndLoadData : MonoBehaviour
{
	[Token(Token = "0x4000F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePath;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public DataLibraryVariable library;

	[Token(Token = "0x6000F65")]
	[Address(RVA = "0xDC7F34", Offset = "0xDC7F34", VA = "0xDC7F34")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB1BEF8", Offset = "0xB1BEF8")]
	public void Save()
	{
	}

	[Token(Token = "0x6000F66")]
	[Address(RVA = "0xDC8020", Offset = "0xDC8020", VA = "0xDC8020")]
	[AttributeAttribute(Name = "ContextMenu", RVA = "0xB1BF30", Offset = "0xB1BF30")]
	public void Load()
	{
	}

	[Token(Token = "0x6000F67")]
	[Address(RVA = "0xDC8154", Offset = "0xDC8154", VA = "0xDC8154")]
	public SaveAndLoadData()
	{
	}
}
[Token(Token = "0x20002F3")]
public class Demo : MonoBehaviour
{
	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator _animator;

	[Token(Token = "0x4000F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform _rHandTransform;

	[Token(Token = "0x4000F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform _lHandTransform;

	[Token(Token = "0x6000F68")]
	[Address(RVA = "0xD84D1C", Offset = "0xD84D1C", VA = "0xD84D1C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F69")]
	[Address(RVA = "0xD84DC4", Offset = "0xD84DC4", VA = "0xD84DC4")]
	private void OnAnimatorIK()
	{
	}

	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0xD84FD4", Offset = "0xD84FD4", VA = "0xD84FD4")]
	public Demo()
	{
	}
}
[Token(Token = "0x20002F4")]
public class handanimations : MonoBehaviour
{
	[Token(Token = "0x4000F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ViveController;

	[Token(Token = "0x4000F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject OculusController;

	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject StickUp;

	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject StickFront;

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Animator anim;

	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int Idle;

	[Token(Token = "0x4000F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int Point;

	[Token(Token = "0x4000F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int GrabLarge;

	[Token(Token = "0x4000F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int GrabSmall;

	[Token(Token = "0x4000F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private int GrabStickUp;

	[Token(Token = "0x4000F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int GrabStickFront;

	[Token(Token = "0x4000F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int ThumbUp;

	[Token(Token = "0x4000F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int Fist;

	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int Gun;

	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int GunShoot;

	[Token(Token = "0x4000F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int PushButton;

	[Token(Token = "0x4000F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int Spread;

	[Token(Token = "0x4000F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int MiddleFinger;

	[Token(Token = "0x4000F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int Peace;

	[Token(Token = "0x4000F58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int OK;

	[Token(Token = "0x4000F59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int Phone;

	[Token(Token = "0x4000F5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int Rock;

	[Token(Token = "0x4000F5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int Natural;

	[Token(Token = "0x4000F5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int Number3;

	[Token(Token = "0x4000F5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private int Number4;

	[Token(Token = "0x4000F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private int Number3V2;

	[Token(Token = "0x4000F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private int HoldViveController;

	[Token(Token = "0x4000F60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private int PressTriggerViveController;

	[Token(Token = "0x4000F61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private int HoldOculusController;

	[Token(Token = "0x4000F62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private int PressTriggerOculusController;

	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0xE26480", Offset = "0xE26480", VA = "0xE26480")]
	private void Start()
	{
	}

	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0xE2652C", Offset = "0xE2652C", VA = "0xE2652C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0xE269B0", Offset = "0xE269B0", VA = "0xE269B0")]
	public handanimations()
	{
	}
}
namespace HeathenEngineering.UIX
{
	[Token(Token = "0x20002F5")]
	public class Console : MonoBehaviour
	{
		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int maxLines;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text text;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ScrollRect scrollRect;

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0xF475B0", Offset = "0xF475B0", VA = "0xF475B0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0xF47624", Offset = "0xF47624", VA = "0xF47624")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0xF47698", Offset = "0xF47698", VA = "0xF47698")]
		private void HandleLog(string logString, string stackTrace, LogType type)
		{
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0xF47A34", Offset = "0xF47A34", VA = "0xF47A34")]
		public Console()
		{
		}
	}
}
namespace HeathenEngineering.Tools.Demo
{
	[Token(Token = "0x20002F6")]
	public class TestProcessStateGameEvents : MonoBehaviour
	{
		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SceneProcessStateGameEvent started;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SceneProcessStateGameEvent updated;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SceneProcessStateGameEvent completed;

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0xF472A0", Offset = "0xF472A0", VA = "0xF472A0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0xF473BC", Offset = "0xF473BC", VA = "0xF473BC")]
		private void HandleCompleted(EventData<SceneProcessState> data)
		{
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0xF47460", Offset = "0xF47460", VA = "0xF47460")]
		private void HandleUpdated(EventData<SceneProcessState> data)
		{
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0xF47504", Offset = "0xF47504", VA = "0xF47504")]
		private void HandleStarted(EventData<SceneProcessState> data)
		{
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0xF475A8", Offset = "0xF475A8", VA = "0xF475A8")]
		public TestProcessStateGameEvents()
		{
		}
	}
	[Token(Token = "0x20002F7")]
	public class ExampleDemo_RandomizeColor : MonoBehaviour
	{
		[Token(Token = "0x6000F77")]
		[Address(RVA = "0xF46A80", Offset = "0xF46A80", VA = "0xF46A80")]
		public void RandomizeColor(ColorVariable target)
		{
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0xF46AEC", Offset = "0xF46AEC", VA = "0xF46AEC")]
		public ExampleDemo_RandomizeColor()
		{
		}
	}
	[Token(Token = "0x20002F8")]
	public class HitIndicator : MonoBehaviour, IDamageHandler<DamageHandler.Report>
	{
		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color normalColor;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color hitColor;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float flashTime;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Rigidbody selfBody;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public MeshRenderer selfRenderer;

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0xF46AF4", Offset = "0xF46AF4", VA = "0xF46AF4")]
		public void Update()
		{
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0xF46BD0", Offset = "0xF46BD0", VA = "0xF46BD0", Slot = "4")]
		public void ApplyDamage(DamageHandler.Report data)
		{
		}

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0xF46CB8", Offset = "0xF46CB8", VA = "0xF46CB8")]
		public HitIndicator()
		{
		}
	}
	[Token(Token = "0x20002F9")]
	public class SpawnProjectiles : MonoBehaviour
	{
		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ProjectileSpawner spawner;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3[] spawnPoints;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float spawnPointRotationSpeed;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text countLabel;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Toggle autoSpawn;

		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Slider speedSlider;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion rot;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 bulletScale;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float spawnTime;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Quaternion right;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Quaternion left;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Quaternion back;

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0xF46CC8", Offset = "0xF46CC8", VA = "0xF46CC8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0xF46D98", Offset = "0xF46D98", VA = "0xF46D98")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0xF46FB8", Offset = "0xF46FB8", VA = "0xF46FB8")]
		public void Spawn()
		{
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0xF47234", Offset = "0xF47234", VA = "0xF47234")]
		public SpawnProjectiles()
		{
		}
	}
}
namespace HeathenEngineering.Serializable.Demo
{
	[Token(Token = "0x20002FA")]
	public class ExampleReferencingAVariable : MonoBehaviour
	{
		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BoolReference useAsAConstant;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BoolReference useAsAReference;

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0xF46964", Offset = "0xF46964", VA = "0xF46964")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0xF46A78", Offset = "0xF46A78", VA = "0xF46A78")]
		public ExampleReferencingAVariable()
		{
		}
	}
}
namespace Smooth
{
	[Token(Token = "0x20002FB")]
	public enum SyncMode
	{
		[Token(Token = "0x4000F7D")]
		XYZ,
		[Token(Token = "0x4000F7E")]
		XY,
		[Token(Token = "0x4000F7F")]
		XZ,
		[Token(Token = "0x4000F80")]
		YZ,
		[Token(Token = "0x4000F81")]
		X,
		[Token(Token = "0x4000F82")]
		Y,
		[Token(Token = "0x4000F83")]
		Z,
		[Token(Token = "0x4000F84")]
		NONE
	}
	[Token(Token = "0x20002FC")]
	public class SmoothSyncPUN2 : MonoBehaviourPunCallbacks, IPunObservable
	{
		[Token(Token = "0x20002FD")]
		public enum ExtrapolationMode
		{
			[Token(Token = "0x4000FDF")]
			None,
			[Token(Token = "0x4000FE0")]
			Limited,
			[Token(Token = "0x4000FE1")]
			Unlimited
		}

		[Token(Token = "0x20002FE")]
		public enum WhenToUpdateTransform
		{
			[Token(Token = "0x4000FE3")]
			Update,
			[Token(Token = "0x4000FE4")]
			FixedUpdate
		}

		[Token(Token = "0x20002FF")]
		public delegate bool validateStateDelegate(StatePUN2 receivedState, StatePUN2 latestVerifiedState);

		[Token(Token = "0x2000300")]
		private enum RestState
		{
			[Token(Token = "0x4000FE6")]
			AT_REST,
			[Token(Token = "0x4000FE7")]
			JUST_STARTED_MOVING,
			[Token(Token = "0x4000FE8")]
			MOVING
		}

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float interpolationBackTime;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public ExtrapolationMode extrapolationMode;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool useExtrapolationTimeLimit;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float extrapolationTimeLimit;

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool useExtrapolationDistanceLimit;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float extrapolationDistanceLimit;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float sendPositionThreshold;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float sendRotationThreshold;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float sendScaleThreshold;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float sendVelocityThreshold;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float sendAngularVelocityThreshold;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float receivedPositionThreshold;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float receivedRotationThreshold;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float snapPositionThreshold;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float snapRotationThreshold;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float snapScaleThreshold;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB19168", Offset = "0xB19168")]
		public float positionLerpSpeed;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB19180", Offset = "0xB19180")]
		public float rotationLerpSpeed;

		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB19198", Offset = "0xB19198")]
		public float scaleLerpSpeed;

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB191B0", Offset = "0xB191B0")]
		public float timeCorrectionSpeed;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float snapTimeThreshold;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public SyncMode syncPosition;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public SyncMode syncRotation;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public SyncMode syncScale;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public SyncMode syncVelocity;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public SyncMode syncAngularVelocity;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool isPositionCompressed;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		public bool isRotationCompressed;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8A")]
		public bool isScaleCompressed;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8B")]
		public bool isVelocityCompressed;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public bool isAngularVelocityCompressed;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public WhenToUpdateTransform whenToUpdateTransform;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public GameObject childObjectToSync;

		[NonSerialized]
		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool hasChildObject;

		[NonSerialized]
		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public validateStateDelegate validateStateMethod;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private StatePUN2 latestValidatedState;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool setVelocityInsteadOfPositionOnNonOwners;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		public bool useLocalTransformOnly;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float maxPositionDifferenceForVelocitySyncing;

		[NonSerialized]
		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public StatePUN2[] stateBuffer;

		[NonSerialized]
		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public int stateCount;

		[NonSerialized]
		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Rigidbody rb;

		[NonSerialized]
		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public bool hasRigidbody;

		[NonSerialized]
		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Rigidbody2D rb2D;

		[NonSerialized]
		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public bool hasRigidbody2D;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
		private bool dontLerp;

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float firstReceivedMessageZeroTime;

		[NonSerialized]
		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float lastTimeStateWasSent;

		[NonSerialized]
		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public Vector3 lastPositionWhenStateWasSent;

		[NonSerialized]
		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Quaternion lastRotationWhenStateWasSent;

		[NonSerialized]
		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Vector3 lastScaleWhenStateWasSent;

		[NonSerialized]
		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		public Vector3 lastVelocityWhenStateWasSent;

		[NonSerialized]
		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public Vector3 lastAngularVelocityWhenStateWasSent;

		[NonSerialized]
		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public GameObject realObjectToSync;

		[NonSerialized]
		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public int syncIndex;

		[NonSerialized]
		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public SmoothSyncPUN2[] childObjectSmoothSyncs;

		[NonSerialized]
		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public bool forceStateSend;

		[NonSerialized]
		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x151")]
		public bool sendAtPositionalRestMessage;

		[NonSerialized]
		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x152")]
		public bool sendAtRotationalRestMessage;

		[NonSerialized]
		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x153")]
		public bool sendPosition;

		[NonSerialized]
		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		public bool sendRotation;

		[NonSerialized]
		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x155")]
		public bool sendScale;

		[NonSerialized]
		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x156")]
		public bool sendVelocity;

		[NonSerialized]
		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x157")]
		public bool sendAngularVelocity;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private StatePUN2 targetTempState;

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private NetworkStatePUN2 sendingTempState;

		[NonSerialized]
		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public Vector3 latestReceivedVelocity;

		[NonSerialized]
		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		public Vector3 latestReceivedAngularVelocity;

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private float timeSpentExtrapolating;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		private bool extrapolatedLastFrame;

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private Vector3 positionLastAttemptedToSend;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		private bool changedPositionLastFrame;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private Quaternion rotationLastAttemptedToSend;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private bool changedRotationLastFrame;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		private int atRestThresholdCount;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private int samePositionCount;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		private int sameRotationCount;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private RestState restStatePosition;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		private RestState restStateRotation;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private bool hadAuthorityLastFrame;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private StatePUN2 latestEndStateUsed;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private bool shouldSendNextPUNUpdate;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
		private Vector3 latestTeleportedFromPosition;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private Quaternion latestTeleportedFromRotation;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private bool triedToExtrapolateTooFar;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		private float lastTimeAttemptedToSend;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private float _ownerTime;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		private float lastTimeOwnerTimeWasSet;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public int receivedStatesCounter;

		[Token(Token = "0x17000109")]
		public bool isSyncingXPosition
		{
			[Token(Token = "0x6000FA5")]
			[Address(RVA = "0xDD848C", Offset = "0xDD848C", VA = "0xDD848C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700010A")]
		public bool isSyncingYPosition
		{
			[Token(Token = "0x6000FA6")]
			[Address(RVA = "0xDD84B4", Offset = "0xDD84B4", VA = "0xDD84B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700010B")]
		public bool isSyncingZPosition
		{
			[Token(Token = "0x6000FA7")]
			[Address(RVA = "0xDD84E0", Offset = "0xDD84E0", VA = "0xDD84E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700010C")]
		public bool isSyncingXRotation
		{
			[Token(Token = "0x6000FA8")]
			[Address(RVA = "0xDD8510", Offset = "0xDD8510", VA = "0xDD8510")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700010D")]
		public bool isSyncingYRotation
		{
			[Token(Token = "0x6000FA9")]
			[Address(RVA = "0xDD8538", Offset = "0xDD8538", VA = "0xDD8538")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700010E")]
		public bool isSyncingZRotation
		{
			[Token(Token = "0x6000FAA")]
			[Address(RVA = "0xDD8564", Offset = "0xDD8564", VA = "0xDD8564")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700010F")]
		public bool isSyncingXScale
		{
			[Token(Token = "0x6000FAB")]
			[Address(RVA = "0xDD8594", Offset = "0xDD8594", VA = "0xDD8594")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000110")]
		public bool isSyncingYScale
		{
			[Token(Token = "0x6000FAC")]
			[Address(RVA = "0xDD85BC", Offset = "0xDD85BC", VA = "0xDD85BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000111")]
		public bool isSyncingZScale
		{
			[Token(Token = "0x6000FAD")]
			[Address(RVA = "0xDD85E8", Offset = "0xDD85E8", VA = "0xDD85E8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000112")]
		public bool isSyncingXVelocity
		{
			[Token(Token = "0x6000FAE")]
			[Address(RVA = "0xDD8618", Offset = "0xDD8618", VA = "0xDD8618")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000113")]
		public bool isSyncingYVelocity
		{
			[Token(Token = "0x6000FAF")]
			[Address(RVA = "0xDD8640", Offset = "0xDD8640", VA = "0xDD8640")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000114")]
		public bool isSyncingZVelocity
		{
			[Token(Token = "0x6000FB0")]
			[Address(RVA = "0xDD866C", Offset = "0xDD866C", VA = "0xDD866C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000115")]
		public bool isSyncingXAngularVelocity
		{
			[Token(Token = "0x6000FB1")]
			[Address(RVA = "0xDD869C", Offset = "0xDD869C", VA = "0xDD869C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000116")]
		public bool isSyncingYAngularVelocity
		{
			[Token(Token = "0x6000FB2")]
			[Address(RVA = "0xDD86C4", Offset = "0xDD86C4", VA = "0xDD86C4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000117")]
		public bool isSyncingZAngularVelocity
		{
			[Token(Token = "0x6000FB3")]
			[Address(RVA = "0xDD86F0", Offset = "0xDD86F0", VA = "0xDD86F0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000118")]
		public float approximateNetworkTimeOnOwner
		{
			[Token(Token = "0x6000FB5")]
			[Address(RVA = "0xDDBFD8", Offset = "0xDDBFD8", VA = "0xDDBFD8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000FB6")]
			[Address(RVA = "0xDDDCA0", Offset = "0xDDDCA0", VA = "0xDDDCA0")]
			set
			{
			}
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0xDD9904", Offset = "0xDD9904", VA = "0xDD9904")]
		public static bool validateState(StatePUN2 latestReceivedState, StatePUN2 latestValidatedState)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0xDD990C", Offset = "0xDD990C", VA = "0xDD990C")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0xDD9CE8", Offset = "0xDD9CE8", VA = "0xDD9CE8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0xDDABE8", Offset = "0xDDABE8", VA = "0xDDABE8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0xDDAC44", Offset = "0xDDAC44", VA = "0xDDAC44", Slot = "28")]
		public override void OnEnable()
		{
		}

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0xDDAF9C", Offset = "0xDDAF9C", VA = "0xDDAF9C", Slot = "42")]
		public override void OnPlayerEnteredRoom(Player newPlayer)
		{
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0xDDB1D4", Offset = "0xDDB1D4", VA = "0xDDB1D4")]
		private void sendState()
		{
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0xDD9ED8", Offset = "0xDD9ED8", VA = "0xDD9ED8")]
		private void applyInterpolationOrExtrapolation()
		{
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0xDDC014", Offset = "0xDDC014", VA = "0xDDC014")]
		private void interpolate(float interpolationTime)
		{
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0xDDC354", Offset = "0xDDC354", VA = "0xDDC354")]
		private bool extrapolate(float interpolationTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0xDDD0B0", Offset = "0xDDD0B0", VA = "0xDDD0B0")]
		private void shouldTeleport(StatePUN2 start, ref StatePUN2 end, float interpolationTime, ref float t)
		{
		}

		[Token(Token = "0x6000F8D")]
		[Address(RVA = "0xDD9820", Offset = "0xDD9820", VA = "0xDD9820")]
		public Vector3 getPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F8E")]
		[Address(RVA = "0xDD987C", Offset = "0xDD987C", VA = "0xDD987C")]
		public Quaternion getRotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0xDD98D8", Offset = "0xDD98D8", VA = "0xDD98D8")]
		public Vector3 getScale()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0xDDCD60", Offset = "0xDDCD60", VA = "0xDDCD60")]
		public void setPosition(Vector3 position, bool isTeleporting)
		{
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0xDDCEF8", Offset = "0xDDCEF8", VA = "0xDDCEF8")]
		public void setRotation(Quaternion rotation, bool isTeleporting)
		{
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0xDDD05C", Offset = "0xDDD05C", VA = "0xDDD05C")]
		public void setScale(Vector3 scale, bool isTeleporting)
		{
		}

		[Token(Token = "0x6000F93")]
		[Address(RVA = "0xDDD1F8", Offset = "0xDDD1F8", VA = "0xDDD1F8")]
		private void resetFlags()
		{
		}

		[Token(Token = "0x6000F94")]
		[Address(RVA = "0xDDB640", Offset = "0xDDB640", VA = "0xDDB640")]
		private bool almostEqual(Vector3 v1, Vector3 v2, float precision)
		{
			return default(bool);
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0xDDD204", Offset = "0xDDD204", VA = "0xDDD204")]
		public void addState(StatePUN2 state)
		{
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0xDDC348", Offset = "0xDDC348", VA = "0xDDC348")]
		public void stopLerping()
		{
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0xDDD3C0", Offset = "0xDDD3C0", VA = "0xDDD3C0")]
		public void clearBuffer()
		{
		}

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0xDDD4C4", Offset = "0xDDD4C4", VA = "0xDDD4C4")]
		[PunRPC]
		public void RpcClearBuffer()
		{
		}

		[Token(Token = "0x6000F99")]
		[Address(RVA = "0xDDD4D8", Offset = "0xDDD4D8", VA = "0xDDD4D8")]
		public void teleport()
		{
		}

		[Token(Token = "0x6000F9A")]
		[Address(RVA = "0xDDAD14", Offset = "0xDDAD14", VA = "0xDDAD14")]
		public void teleportOwnedObjectFromOwner()
		{
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0xDDD4DC", Offset = "0xDDD4DC", VA = "0xDDD4DC")]
		public void teleportAnyObject(Vector3 newPosition, Quaternion newRotation, Vector3 newScale)
		{
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0xDDD754", Offset = "0xDDD754", VA = "0xDDD754")]
		[PunRPC]
		public void RpcNonServerOwnedTeleportFromServer(Vector3 newPosition, Vector3 newRotation, Vector3 newScale)
		{
		}

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0xDDD894", Offset = "0xDDD894", VA = "0xDDD894")]
		[PunRPC]
		public void RpcTeleport(Vector3 position, Vector3 rotation, Vector3 scale, float tempOwnerTime)
		{
		}

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0xDDD99C", Offset = "0xDDD99C", VA = "0xDDD99C")]
		private void addTeleportState(StatePUN2 teleportState)
		{
		}

		[Token(Token = "0x6000F9F")]
		[Address(RVA = "0xDDB634", Offset = "0xDDB634", VA = "0xDDB634")]
		public void forceStateSendNextOnPhotonSerializeView()
		{
		}

		[Token(Token = "0x6000FA0")]
		[Address(RVA = "0xDDB778", Offset = "0xDDB778", VA = "0xDDB778")]
		public bool shouldSendPosition()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0xDDB8C0", Offset = "0xDDB8C0", VA = "0xDDB8C0")]
		public bool shouldSendRotation()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0xDDBA38", Offset = "0xDDBA38", VA = "0xDDBA38")]
		public bool shouldSendScale()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0xDDBB88", Offset = "0xDDBB88", VA = "0xDDBB88")]
		public bool shouldSendVelocity()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0xDDBDC4", Offset = "0xDDBDC4", VA = "0xDDBDC4")]
		public bool shouldSendAngularVelocity()
		{
			return default(bool);
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0xDDDCCC", Offset = "0xDDDCCC", VA = "0xDDDCCC", Slot = "54")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0xDD9D40", Offset = "0xDD9D40", VA = "0xDD9D40")]
		private void adjustOwnerTime()
		{
		}

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0xDDE110", Offset = "0xDDE110", VA = "0xDDE110")]
		public SmoothSyncPUN2()
		{
		}
	}
	[Token(Token = "0x2000301")]
	public class StatePUN2
	{
		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float ownerTimestamp;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 position;

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Quaternion rotation;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 scale;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 velocity;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 angularVelocity;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool teleport;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public bool atPositionalRest;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		public bool atRotationalRest;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float receivedOnServerTimestamp;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Vector3 reusableRotationVector;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool serverShouldRelayPosition;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool serverShouldRelayRotation;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		public bool serverShouldRelayScale;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		public bool serverShouldRelayVelocity;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool serverShouldRelayAngularVelocity;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		public bool serverShouldRelayTeleport;

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0xE9F49C", Offset = "0xE9F49C", VA = "0xE9F49C")]
		public StatePUN2()
		{
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0xE9F4A4", Offset = "0xE9F4A4", VA = "0xE9F4A4")]
		public StatePUN2 copyFromState(StatePUN2 state)
		{
			return null;
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0xE9F508", Offset = "0xE9F508", VA = "0xE9F508")]
		public static StatePUN2 Lerp(StatePUN2 targetTempState, StatePUN2 start, StatePUN2 end, float t)
		{
			return null;
		}

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0xE9F710", Offset = "0xE9F710", VA = "0xE9F710")]
		public void resetTheVariables()
		{
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0xE9F7EC", Offset = "0xE9F7EC", VA = "0xE9F7EC")]
		public void copyFromSmoothSync(SmoothSyncPUN2 smoothSyncScript)
		{
		}
	}
	[Token(Token = "0x2000302")]
	public class NetworkStatePUN2
	{
		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SmoothSyncPUN2 smoothSync;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StatePUN2 state;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private byte positionMask;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private byte rotationMask;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		private byte scaleMask;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		private byte velocityMask;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private byte angularVelocityMask;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		private byte atPositionalRestMask;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		private byte atRotationalRestMask;

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0xDD759C", Offset = "0xDD759C", VA = "0xDD759C")]
		public NetworkStatePUN2()
		{
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0xDD7620", Offset = "0xDD7620", VA = "0xDD7620")]
		public NetworkStatePUN2(SmoothSyncPUN2 smoothSyncScript)
		{
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0xDD76CC", Offset = "0xDD76CC", VA = "0xDD76CC")]
		public void copyFromSmoothSync(SmoothSyncPUN2 smoothSyncScript)
		{
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0xDD76F0", Offset = "0xDD76F0", VA = "0xDD76F0")]
		public void Serialize(BinaryWriter writer)
		{
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0xDD8720", Offset = "0xDD8720", VA = "0xDD8720")]
		public void Deserialize(BinaryReader reader, SmoothSyncPUN2 smoothSync)
		{
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0xDD8414", Offset = "0xDD8414", VA = "0xDD8414")]
		private byte encodeSyncInformation(bool sendPosition, bool sendRotation, bool sendScale, bool sendVelocity, bool sendAngularVelocity, bool atPositionalRest, bool atRotationalRest)
		{
			return default(byte);
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0xDD97B0", Offset = "0xDD97B0", VA = "0xDD97B0")]
		private bool shouldSyncPosition(byte syncInformation)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0xDD97C0", Offset = "0xDD97C0", VA = "0xDD97C0")]
		private bool shouldSyncRotation(byte syncInformation)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0xDD97D0", Offset = "0xDD97D0", VA = "0xDD97D0")]
		private bool shouldSyncScale(byte syncInformation)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0xDD97E0", Offset = "0xDD97E0", VA = "0xDD97E0")]
		private bool shouldSyncVelocity(byte syncInformation)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0xDD97F0", Offset = "0xDD97F0", VA = "0xDD97F0")]
		private bool shouldSyncAngularVelocity(byte syncInformation)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0xDD9800", Offset = "0xDD9800", VA = "0xDD9800")]
		private bool shouldBeAtPositionalRest(byte syncInformation)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0xDD9810", Offset = "0xDD9810", VA = "0xDD9810")]
		private bool shouldBeAtRotationalRest(byte syncInformation)
		{
			return default(bool);
		}
	}
}
namespace System
{
	[Token(Token = "0x2000303")]
	public static class HalfHelper
	{
		[StructLayout(2)]
		[Token(Token = "0x2000304")]
		private struct UIntFloat
		{
			[Token(Token = "0x4001009")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public uint UIntValue;

			[Token(Token = "0x400100A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float FloatValue;
		}

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static uint[] mantissaTable;

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static uint[] exponentTable;

		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static ushort[] offsetTable;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static ushort[] baseTable;

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static sbyte[] shiftTable;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static UIntFloat floatToIntConverter;

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0xEA6680", Offset = "0xEA6680", VA = "0xEA6680")]
		private static uint FloatToUInt(float v)
		{
			return default(uint);
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0xEA66FC", Offset = "0xEA66FC", VA = "0xEA66FC")]
		private static float UIntToFloat(uint v)
		{
			return default(float);
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0xEA6770", Offset = "0xEA6770", VA = "0xEA6770")]
		private static uint ConvertMantissa(int i)
		{
			return default(uint);
		}

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0xEA67A0", Offset = "0xEA67A0", VA = "0xEA67A0")]
		private static uint[] GenerateMantissaTable()
		{
			return null;
		}

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0xEA68B8", Offset = "0xEA68B8", VA = "0xEA68B8")]
		private static uint[] GenerateExponentTable()
		{
			return null;
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0xEA69B0", Offset = "0xEA69B0", VA = "0xEA69B0")]
		private static ushort[] GenerateOffsetTable()
		{
			return null;
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0xEA6A7C", Offset = "0xEA6A7C", VA = "0xEA6A7C")]
		private static ushort[] GenerateBaseTable()
		{
			return null;
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0xEA6BCC", Offset = "0xEA6BCC", VA = "0xEA6BCC")]
		private static sbyte[] GenerateShiftTable()
		{
			return null;
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0xEA6D04", Offset = "0xEA6D04", VA = "0xEA6D04")]
		public static float Decompress(ushort compressedFloat)
		{
			return default(float);
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0xEA6DE0", Offset = "0xEA6DE0", VA = "0xEA6DE0")]
		public static ushort Compress(float uncompressedFloat)
		{
			return default(ushort);
		}
	}
}
namespace Moments
{
	[Token(Token = "0x2000305")]
	public sealed class MinAttribute : PropertyAttribute
	{
		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly float min;

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0xE9CDFC", Offset = "0xE9CDFC", VA = "0xE9CDFC")]
		public MinAttribute(float min)
		{
		}
	}
	[Token(Token = "0x2000306")]
	public enum RecorderState
	{
		[Token(Token = "0x400100D")]
		Recording,
		[Token(Token = "0x400100E")]
		Paused,
		[Token(Token = "0x400100F")]
		PreProcessing
	}
	[Token(Token = "0x2000307")]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB15D48", Offset = "0xB15D48")]
	public sealed class Recorder : MonoBehaviour
	{
		[Token(Token = "0x2000308")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15DBC", Offset = "0xB15DBC")]
		private sealed class <PreProcess>d__40 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001023")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001024")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001025")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Recorder <>4__this;

			[Token(Token = "0x4001026")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string filename;

			[Token(Token = "0x4001027")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private string <filepath>5__2;

			[Token(Token = "0x4001028")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private List<GifFrame> <frames>5__3;

			[Token(Token = "0x4001029")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Texture2D <temp>5__4;

			[Token(Token = "0x1700011C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000FF3")]
				[Address(RVA = "0xD8D290", Offset = "0xD8D290", VA = "0xD8D290", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700011D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000FF5")]
				[Address(RVA = "0xD8D2F8", Offset = "0xD8D2F8", VA = "0xD8D2F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000FF0")]
			[Address(RVA = "0xD8CE7C", Offset = "0xD8CE7C", VA = "0xD8CE7C")]
			[DebuggerHidden]
			public <PreProcess>d__40(int <>1__state)
			{
			}

			[Token(Token = "0x6000FF1")]
			[Address(RVA = "0xD8CEA8", Offset = "0xD8CEA8", VA = "0xD8CEA8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000FF2")]
			[Address(RVA = "0xD8CEAC", Offset = "0xD8CEAC", VA = "0xD8CEAC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000FF4")]
			[Address(RVA = "0xD8D298", Offset = "0xD8D298", VA = "0xD8D298", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "MinAttribute", RVA = "0xB191C8", Offset = "0xB191C8")]
		private int m_Width;

		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "MinAttribute", RVA = "0xB19204", Offset = "0xB19204")]
		[SerializeField]
		private int m_Height;

		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool m_AutoAspect;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB19250", Offset = "0xB19250")]
		[SerializeField]
		private int m_FramePerSecond;

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "MinAttribute", RVA = "0xB19290", Offset = "0xB19290")]
		[SerializeField]
		private int m_Repeat;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB192CC", Offset = "0xB192CC")]
		[SerializeField]
		private int m_Quality;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "MinAttribute", RVA = "0xB19310", Offset = "0xB19310")]
		private float m_BufferSize;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB19350", Offset = "0xB19350")]
		private RecorderState <State>k__BackingField;

		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB19360", Offset = "0xB19360")]
		private string <SaveFolder>k__BackingField;

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ThreadPriority WorkerPriority;

		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Action OnPreProcessingDone;

		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Action<int, float> OnFileSaveProgress;

		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Action<int, string> OnFileSaved;

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int m_MaxFrameCount;

		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_Time;

		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_TimePerFrame;

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Queue<RenderTexture> m_Frames;

		[Token(Token = "0x4001021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private RenderTexture m_RecycledRenderTexture;

		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ReflectionUtils<Recorder> m_ReflectionUtils;

		[Token(Token = "0x17000119")]
		public RecorderState State
		{
			[Token(Token = "0x6000FDB")]
			[Address(RVA = "0xE9CE30", Offset = "0xE9CE30", VA = "0xE9CE30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BF98", Offset = "0xB1BF98")]
			get
			{
				return default(RecorderState);
			}
			[Token(Token = "0x6000FDC")]
			[Address(RVA = "0xE9CE38", Offset = "0xE9CE38", VA = "0xE9CE38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BFA8", Offset = "0xB1BFA8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700011A")]
		public string SaveFolder
		{
			[Token(Token = "0x6000FDD")]
			[Address(RVA = "0xE9CE40", Offset = "0xE9CE40", VA = "0xE9CE40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BFB8", Offset = "0xB1BFB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FDE")]
			[Address(RVA = "0xE9CE48", Offset = "0xE9CE48", VA = "0xE9CE48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1BFC8", Offset = "0xB1BFC8")]
			set
			{
			}
		}

		[Token(Token = "0x1700011B")]
		public float EstimatedMemoryUse
		{
			[Token(Token = "0x6000FDF")]
			[Address(RVA = "0xE9CE50", Offset = "0xE9CE50", VA = "0xE9CE50")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0xE9CE84", Offset = "0xE9CE84", VA = "0xE9CE84")]
		public void Setup(bool autoAspect, int width, int height, int fps, float bufferSize, int repeat, int quality)
		{
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0xE9D7A4", Offset = "0xE9D7A4", VA = "0xE9D7A4")]
		public void Pause()
		{
		}

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0xE9D834", Offset = "0xE9D834", VA = "0xE9D834")]
		public void Record()
		{
		}

		[Token(Token = "0x6000FE3")]
		[Address(RVA = "0xE9D530", Offset = "0xE9D530", VA = "0xE9D530")]
		public void FlushMemory()
		{
		}

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0xE9D928", Offset = "0xE9D928", VA = "0xE9D928")]
		public void Save()
		{
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0xE9D9F0", Offset = "0xE9D9F0", VA = "0xE9D9F0")]
		public void Save(string filename)
		{
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0xE9DB7C", Offset = "0xE9DB7C", VA = "0xE9DB7C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0xE9DC14", Offset = "0xE9DC14", VA = "0xE9DC14")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0xE9DC18", Offset = "0xE9DC18", VA = "0xE9DC18")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0xE9D6DC", Offset = "0xE9D6DC", VA = "0xE9D6DC")]
		private void Init()
		{
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0xE9DDFC", Offset = "0xE9DDFC", VA = "0xE9DDFC")]
		public void ComputeHeight()
		{
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0xE9D8C0", Offset = "0xE9D8C0", VA = "0xE9D8C0")]
		private void Flush(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0xE9D950", Offset = "0xE9D950", VA = "0xE9D950")]
		private string GenerateFileName()
		{
			return null;
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0xE9DB00", Offset = "0xE9DB00", VA = "0xE9DB00")]
		private IEnumerator PreProcess(string filename)
		{
			return null;
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0xE9DEAC", Offset = "0xE9DEAC", VA = "0xE9DEAC")]
		private GifFrame ToGifFrame(RenderTexture source, Texture2D target)
		{
			return null;
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0xE9DFEC", Offset = "0xE9DFEC", VA = "0xE9DFEC")]
		public Recorder()
		{
		}
	}
	[Token(Token = "0x2000309")]
	public class ReflectionUtils<T> where T : class, new()
	{
		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly T _Instance;

		[Token(Token = "0x6000FF6")]
		public ReflectionUtils(T instance)
		{
		}

		[Token(Token = "0x6000FF7")]
		public string GetFieldName<U>(Expression<Func<T, U>> fieldAccess)
		{
			return null;
		}

		[Token(Token = "0x6000FF8")]
		public FieldInfo GetField(string fieldName)
		{
			return null;
		}

		[Token(Token = "0x6000FF9")]
		public A GetAttribute<A>(FieldInfo field) where A : Attribute
		{
			return null;
		}

		[Token(Token = "0x6000FFA")]
		public void ConstrainMin<U>(Expression<Func<T, U>> fieldAccess, float value)
		{
		}

		[Token(Token = "0x6000FFB")]
		public void ConstrainMin<U>(Expression<Func<T, U>> fieldAccess, int value)
		{
		}

		[Token(Token = "0x6000FFC")]
		public void ConstrainRange<U>(Expression<Func<T, U>> fieldAccess, int value)
		{
		}
	}
	[Token(Token = "0x200030A")]
	internal sealed class Worker
	{
		[Token(Token = "0x200030B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15DCC", Offset = "0xB15DCC")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4001033")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float percent;

			[Token(Token = "0x4001034")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Worker <>4__this;

			[Token(Token = "0x6001003")]
			[Address(RVA = "0xD8D510", Offset = "0xD8D510", VA = "0xD8D510")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x6001004")]
			[Address(RVA = "0xD8D518", Offset = "0xD8D518", VA = "0xD8D518")]
			internal void <EncodeFrames>b__1()
			{
			}
		}

		[Token(Token = "0x200030C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15DDC", Offset = "0xB15DDC")]
		private sealed class <EncodeFrames>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001035")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001036")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001037")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Worker <>4__this;

			[Token(Token = "0x4001038")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x1700011E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001008")]
				[Address(RVA = "0xD8D7A8", Offset = "0xD8D7A8", VA = "0xD8D7A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700011F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600100A")]
				[Address(RVA = "0xD8D810", Offset = "0xD8D810", VA = "0xD8D810", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001005")]
			[Address(RVA = "0xD8D430", Offset = "0xD8D430", VA = "0xD8D430")]
			[DebuggerHidden]
			public <EncodeFrames>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001006")]
			[Address(RVA = "0xD8D580", Offset = "0xD8D580", VA = "0xD8D580", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001007")]
			[Address(RVA = "0xD8D584", Offset = "0xD8D584", VA = "0xD8D584", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001009")]
			[Address(RVA = "0xD8D7B0", Offset = "0xD8D7B0", VA = "0xD8D7B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int workerId;

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Thread m_Thread;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int m_Id;

		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal List<GifFrame> m_Frames;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal GifEncoder m_Encoder;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal string m_FilePath;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal Action<int, string> m_OnFileSaved;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal Action<int, float> m_OnFileSaveProgress;

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0xD8D180", Offset = "0xD8D180", VA = "0xD8D180")]
		internal Worker(ThreadPriority priority)
		{
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0xD8D274", Offset = "0xD8D274", VA = "0xD8D274")]
		internal void Start()
		{
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0xD8D300", Offset = "0xD8D300", VA = "0xD8D300")]
		private void Run()
		{
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0xD8D3C0", Offset = "0xD8D3C0", VA = "0xD8D3C0")]
		internal IEnumerator EncodeFrames()
		{
			return null;
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0xD8D4B0", Offset = "0xD8D4B0", VA = "0xD8D4B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C028", Offset = "0xB1C028")]
		private void <EncodeFrames>b__11_0()
		{
		}
	}
}
namespace Moments.Encoder
{
	[Token(Token = "0x200030D")]
	public class GifEncoder
	{
		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected int m_Width;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		protected int m_Height;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected int m_Repeat;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int m_FrameDelay;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected bool m_HasStarted;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		protected bool transparencyColorSet;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected Color32 transparencyColor;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected FileStream m_FileStream;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected GifFrame m_CurrentFrame;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected byte[] m_Pixels;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected byte[] m_IndexedPixels;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected int m_ColorDepth;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected byte[] m_ColorTab;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected bool[] m_UsedEntry;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected int m_PaletteSize;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		protected int m_DisposalCode;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected bool m_ShouldCloseStream;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		protected bool m_IsFirstFrame;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		protected bool m_IsSizeSet;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		protected int m_SampleInterval;

		[Token(Token = "0x600100B")]
		[Address(RVA = "0xE97D58", Offset = "0xE97D58", VA = "0xE97D58")]
		public GifEncoder(int repeat, int quality)
		{
		}

		[Token(Token = "0x600100C")]
		[Address(RVA = "0xE97E30", Offset = "0xE97E30", VA = "0xE97E30")]
		public void SetDelay(int ms)
		{
		}

		[Token(Token = "0x600100D")]
		[Address(RVA = "0xE97EB4", Offset = "0xE97EB4", VA = "0xE97EB4")]
		public void SetTransparencyColor(Color32 transparencyColor)
		{
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0xE97EC4", Offset = "0xE97EC4", VA = "0xE97EC4")]
		public void AddFrame(GifFrame frame)
		{
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0xE988F8", Offset = "0xE988F8", VA = "0xE988F8")]
		public void Start(FileStream os)
		{
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0xE98AC0", Offset = "0xE98AC0", VA = "0xE98AC0")]
		public void Start(string file)
		{
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0xE98BD4", Offset = "0xE98BD4", VA = "0xE98BD4")]
		public void Finish()
		{
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0xE98004", Offset = "0xE98004", VA = "0xE98004")]
		protected void SetSize(int w, int h)
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0xE98014", Offset = "0xE98014", VA = "0xE98014")]
		protected void GetImagePixels()
		{
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0xE98168", Offset = "0xE98168", VA = "0xE98168")]
		protected void AnalyzePixels()
		{
		}

		[Token(Token = "0x6001015")]
		[Address(RVA = "0xE98634", Offset = "0xE98634", VA = "0xE98634")]
		protected void WriteGraphicCtrlExt()
		{
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0xE98780", Offset = "0xE98780", VA = "0xE98780")]
		protected void WriteImageDesc()
		{
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0xE983AC", Offset = "0xE983AC", VA = "0xE983AC")]
		protected void WriteLSD()
		{
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0xE9852C", Offset = "0xE9852C", VA = "0xE9852C")]
		protected void WriteNetscapeExt()
		{
		}

		[Token(Token = "0x6001019")]
		[Address(RVA = "0xE98494", Offset = "0xE98494", VA = "0xE98494")]
		protected void WritePalette()
		{
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0xE98878", Offset = "0xE98878", VA = "0xE98878")]
		protected void WritePixels()
		{
		}

		[Token(Token = "0x600101B")]
		[Address(RVA = "0xE99234", Offset = "0xE99234", VA = "0xE99234")]
		protected void WriteShort(int value)
		{
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0xE98A28", Offset = "0xE98A28", VA = "0xE98A28")]
		protected void WriteString(string s)
		{
		}
	}
	[Token(Token = "0x200030E")]
	public class GifFrame
	{
		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Width;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int Height;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color32[] Data;

		[Token(Token = "0x600101D")]
		[Address(RVA = "0xE99524", Offset = "0xE99524", VA = "0xE99524")]
		public GifFrame()
		{
		}
	}
	[Token(Token = "0x200030F")]
	public class LzwEncoder
	{
		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly int EOF;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private byte[] pixAry;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int initCodeSize;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int curPixel;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static readonly int BITS;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly int HSIZE;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int n_bits;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int maxbits;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int maxcode;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int maxmaxcode;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int[] htab;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int[] codetab;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int hsize;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int free_ent;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool clear_flg;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int g_init_bits;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int ClearCode;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int EOFCode;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int cur_accum;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int cur_bits;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int[] masks;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int a_count;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private byte[] accum;

		[Token(Token = "0x600101E")]
		[Address(RVA = "0xE992F8", Offset = "0xE992F8", VA = "0xE992F8")]
		public LzwEncoder(int width, int height, byte[] pixels, int color_depth)
		{
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0xE9952C", Offset = "0xE9952C", VA = "0xE9952C")]
		private void Add(byte c, System.IO.Stream outs)
		{
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0xE99654", Offset = "0xE99654", VA = "0xE99654")]
		private void ClearTable(System.IO.Stream outs)
		{
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0xE9969C", Offset = "0xE9969C", VA = "0xE9969C")]
		private void ResetCodeTable(int hsize)
		{
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0xE99858", Offset = "0xE99858", VA = "0xE99858")]
		private void Compress(int init_bits, System.IO.Stream outs)
		{
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0xE9945C", Offset = "0xE9945C", VA = "0xE9945C")]
		public void Encode(System.IO.Stream os)
		{
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0xE9958C", Offset = "0xE9958C", VA = "0xE9958C")]
		private void Flush(System.IO.Stream outs)
		{
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0xE99AFC", Offset = "0xE99AFC", VA = "0xE99AFC")]
		private int MaxCode(int n_bits)
		{
			return default(int);
		}

		[Token(Token = "0x6001026")]
		[Address(RVA = "0xE99B0C", Offset = "0xE99B0C", VA = "0xE99B0C")]
		private int NextPixel()
		{
			return default(int);
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0xE996F8", Offset = "0xE996F8", VA = "0xE996F8")]
		private void Output(int code, System.IO.Stream outs)
		{
		}
	}
	[Token(Token = "0x2000310")]
	public class NeuQuant : NeuQuantAbstract
	{
		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static readonly int netsize;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		protected static readonly int prime1;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected static readonly int prime2;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		protected static readonly int prime3;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected static readonly int prime4;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		protected static readonly int minpicturebytes;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected static readonly int maxnetpos;

		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected static readonly int netbiasshift;

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected static readonly int ncycles;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected static readonly int intbiasshift;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected static readonly int intbias;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected static readonly int gammashift;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected static readonly int gamma;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected static readonly int betashift;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected static readonly int beta;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected static readonly int betagamma;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected static readonly int initrad;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected static readonly int radiusbiasshift;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected static readonly int radiusbias;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected static readonly int initradius;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected static readonly int radiusdec;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		protected static readonly int alphabiasshift;

		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected static readonly int initalpha;

		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected int alphadec;

		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		protected static readonly int radbiasshift;

		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected static readonly int radbias;

		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		protected static readonly int alpharadbshift;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected static readonly int alpharadbias;

		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected byte[] thepicture;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected int lengthcount;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected int samplefac;

		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected int[][] network;

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected int[] netindex;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected int[] bias;

		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected int[] freq;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected int[] radpower;

		[Token(Token = "0x6001029")]
		[Address(RVA = "0xE98FCC", Offset = "0xE98FCC", VA = "0xE98FCC")]
		public NeuQuant(byte[] thepic, int len, int sample)
		{
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0xE99C3C", Offset = "0xE99C3C", VA = "0xE99C3C")]
		public byte[] ColorMap()
		{
			return null;
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0xE99EBC", Offset = "0xE99EBC", VA = "0xE99EBC")]
		public void Inxbuild()
		{
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0xE9A20C", Offset = "0xE9A20C", VA = "0xE9A20C")]
		public void Learn()
		{
		}

		[Token(Token = "0x600102D")]
		[Address(RVA = "0xE9AE7C", Offset = "0xE9AE7C", VA = "0xE9AE7C", Slot = "5")]
		public override int Map(int b, int g, int r)
		{
			return default(int);
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0xE9B0E8", Offset = "0xE9B0E8", VA = "0xE9B0E8", Slot = "4")]
		public override byte[] Process()
		{
			return null;
		}

		[Token(Token = "0x600102F")]
		[Address(RVA = "0xE9B11C", Offset = "0xE9B11C", VA = "0xE9B11C")]
		public void Unbiasnet()
		{
		}

		[Token(Token = "0x6001030")]
		[Address(RVA = "0xE9AB88", Offset = "0xE9AB88", VA = "0xE9AB88")]
		protected void Alterneigh(int rad, int i, int b, int g, int r)
		{
		}

		[Token(Token = "0x6001031")]
		[Address(RVA = "0xE9AA44", Offset = "0xE9AA44", VA = "0xE9AA44")]
		protected void Altersingle(int alpha, int i, int b, int g, int r)
		{
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0xE9A788", Offset = "0xE9A788", VA = "0xE9A788")]
		protected int Contest(int b, int g, int r)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000311")]
	public abstract class NeuQuantAbstract
	{
		[Token(Token = "0x6001034")]
		public abstract byte[] Process();

		[Token(Token = "0x6001035")]
		public abstract int Map(int b, int g, int r);

		[Token(Token = "0x6001036")]
		[Address(RVA = "0xE99C34", Offset = "0xE99C34", VA = "0xE99C34")]
		protected NeuQuantAbstract()
		{
		}
	}
	[Token(Token = "0x2000312")]
	public class TransparentNeuQuant : NeuQuantAbstract
	{
		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static readonly int netsize;

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		protected static readonly int prime1;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected static readonly int prime2;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		protected static readonly int prime3;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected static readonly int prime4;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		protected static readonly int minpicturebytes;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected static readonly int maxnetpos;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected static readonly int netbiasshift;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected static readonly int ncycles;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected static readonly int intbiasshift;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected static readonly int intbias;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected static readonly int gammashift;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected static readonly int gamma;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected static readonly int betashift;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected static readonly int beta;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected static readonly int betagamma;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected static readonly int initrad;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected static readonly int radiusbiasshift;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected static readonly int radiusbias;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected static readonly int initradius;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected static readonly int radiusdec;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		protected static readonly int alphabiasshift;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected static readonly int initalpha;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected int alphadec;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		protected static readonly int radbiasshift;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected static readonly int radbias;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		protected static readonly int alpharadbshift;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected static readonly int alpharadbias;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected byte[] thepicture;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected int[] skipColor;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected int lengthcount;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		protected int samplefac;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected int[][] network;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected int[] netindex;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected int[] bias;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected int[] freq;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected int[] radpower;

		[Token(Token = "0x6001037")]
		[Address(RVA = "0xE98D60", Offset = "0xE98D60", VA = "0xE98D60")]
		public TransparentNeuQuant(byte[] thepic, int len, int[] skipCol, int sample)
		{
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0xE9B4A4", Offset = "0xE9B4A4", VA = "0xE9B4A4")]
		public byte[] ColorMap()
		{
			return null;
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0xE9B7A8", Offset = "0xE9B7A8", VA = "0xE9B7A8")]
		public void Inxbuild()
		{
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0xE9BAF8", Offset = "0xE9BAF8", VA = "0xE9BAF8")]
		public void Learn()
		{
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0xE9C760", Offset = "0xE9C760", VA = "0xE9C760", Slot = "5")]
		public override int Map(int b, int g, int r)
		{
			return default(int);
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0xE9CA40", Offset = "0xE9CA40", VA = "0xE9CA40", Slot = "4")]
		public override byte[] Process()
		{
			return null;
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0xE9CA74", Offset = "0xE9CA74", VA = "0xE9CA74")]
		public void Unbiasnet()
		{
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0xE9C46C", Offset = "0xE9C46C", VA = "0xE9C46C")]
		protected void Alterneigh(int rad, int i, int b, int g, int r)
		{
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0xE9C328", Offset = "0xE9C328", VA = "0xE9C328")]
		protected void Altersingle(int alpha, int i, int b, int g, int r)
		{
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0xE9C06C", Offset = "0xE9C06C", VA = "0xE9C06C")]
		protected int Contest(int b, int g, int r)
		{
			return default(int);
		}
	}
}
namespace Twity
{
	[Token(Token = "0x2000313")]
	public class Oauth
	{
		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB19370", Offset = "0xB19370")]
		private static string <consumerKey>k__BackingField;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB19380", Offset = "0xB19380")]
		private static string <consumerSecret>k__BackingField;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB19390", Offset = "0xB19390")]
		private static string <accessToken>k__BackingField;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB193A0", Offset = "0xB193A0")]
		private static string <accessTokenSecret>k__BackingField;

		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB193B0", Offset = "0xB193B0")]
		private static string <bearerToken>k__BackingField;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB193C0", Offset = "0xB193C0")]
		private static string <requestToken>k__BackingField;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB193D0", Offset = "0xB193D0")]
		private static string <requestTokenSecret>k__BackingField;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB193E0", Offset = "0xB193E0")]
		private static string <authorizeURL>k__BackingField;

		[Token(Token = "0x17000120")]
		public static string consumerKey
		{
			[Token(Token = "0x6001042")]
			[Address(RVA = "0xE52178", Offset = "0xE52178", VA = "0xE52178")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C088", Offset = "0xB1C088")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001043")]
			[Address(RVA = "0xE521C8", Offset = "0xE521C8", VA = "0xE521C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C098", Offset = "0xB1C098")]
			set
			{
			}
		}

		[Token(Token = "0x17000121")]
		public static string consumerSecret
		{
			[Token(Token = "0x6001044")]
			[Address(RVA = "0xE5221C", Offset = "0xE5221C", VA = "0xE5221C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C0A8", Offset = "0xB1C0A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001045")]
			[Address(RVA = "0xE5226C", Offset = "0xE5226C", VA = "0xE5226C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C0B8", Offset = "0xB1C0B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000122")]
		public static string accessToken
		{
			[Token(Token = "0x6001046")]
			[Address(RVA = "0xE522C0", Offset = "0xE522C0", VA = "0xE522C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C0C8", Offset = "0xB1C0C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001047")]
			[Address(RVA = "0xE52310", Offset = "0xE52310", VA = "0xE52310")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C0D8", Offset = "0xB1C0D8")]
			set
			{
			}
		}

		[Token(Token = "0x17000123")]
		public static string accessTokenSecret
		{
			[Token(Token = "0x6001048")]
			[Address(RVA = "0xE52364", Offset = "0xE52364", VA = "0xE52364")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C0E8", Offset = "0xB1C0E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001049")]
			[Address(RVA = "0xE523B4", Offset = "0xE523B4", VA = "0xE523B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C0F8", Offset = "0xB1C0F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000124")]
		public static string bearerToken
		{
			[Token(Token = "0x600104A")]
			[Address(RVA = "0xE52408", Offset = "0xE52408", VA = "0xE52408")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C108", Offset = "0xB1C108")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000125")]
		public static string requestToken
		{
			[Token(Token = "0x600104B")]
			[Address(RVA = "0xE52458", Offset = "0xE52458", VA = "0xE52458")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C118", Offset = "0xB1C118")]
			get
			{
				return null;
			}
			[Token(Token = "0x600104C")]
			[Address(RVA = "0xE524A8", Offset = "0xE524A8", VA = "0xE524A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C128", Offset = "0xB1C128")]
			set
			{
			}
		}

		[Token(Token = "0x17000126")]
		public static string requestTokenSecret
		{
			[Token(Token = "0x600104D")]
			[Address(RVA = "0xE524FC", Offset = "0xE524FC", VA = "0xE524FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C138", Offset = "0xB1C138")]
			get
			{
				return null;
			}
			[Token(Token = "0x600104E")]
			[Address(RVA = "0xE5254C", Offset = "0xE5254C", VA = "0xE5254C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C148", Offset = "0xB1C148")]
			set
			{
			}
		}

		[Token(Token = "0x17000127")]
		public static string authorizeURL
		{
			[Token(Token = "0x600104F")]
			[Address(RVA = "0xE525A0", Offset = "0xE525A0", VA = "0xE525A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C158", Offset = "0xB1C158")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001050")]
			[Address(RVA = "0xE525F0", Offset = "0xE525F0", VA = "0xE525F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C168", Offset = "0xB1C168")]
			set
			{
			}
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0xE506A8", Offset = "0xE506A8", VA = "0xE506A8")]
		public static string GenerateHeaderWithAccessToken(SortedDictionary<string, string> parameters, string requestMethod, string requestURL)
		{
			return null;
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0xE52644", Offset = "0xE52644", VA = "0xE52644")]
		private static string GenerateSignature(SortedDictionary<string, string> parameters, string requestMethod, string requestURL)
		{
			return null;
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0xE52B20", Offset = "0xE52B20", VA = "0xE52B20")]
		private static void AddDefaultOauthParams(SortedDictionary<string, string> parameters, string consumerKey)
		{
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0xE52C1C", Offset = "0xE52C1C", VA = "0xE52C1C")]
		private static string GenerateTimeStamp()
		{
			return null;
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0xE52D1C", Offset = "0xE52D1C", VA = "0xE52D1C")]
		private static string GenerateNonce()
		{
			return null;
		}
	}
	[Token(Token = "0x2000314")]
	public delegate void TwitterCallback(bool success, string response);
	[Token(Token = "0x2000315")]
	public delegate void TwitterAuthenticationCallback(bool success);
	[Token(Token = "0x2000316")]
	public class Client
	{
		[Token(Token = "0x2000317")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15DEC", Offset = "0xB15DEC")]
		private sealed class <UploadMedia>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public byte[] mediaData;

			[Token(Token = "0x40010BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TwitterCallback callback;

			[Token(Token = "0x17000128")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001068")]
				[Address(RVA = "0xE51DD4", Offset = "0xE51DD4", VA = "0xE51DD4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000129")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600106A")]
				[Address(RVA = "0xE51E3C", Offset = "0xE51E3C", VA = "0xE51E3C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001065")]
			[Address(RVA = "0xE4FCCC", Offset = "0xE4FCCC", VA = "0xE4FCCC")]
			[DebuggerHidden]
			public <UploadMedia>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6001066")]
			[Address(RVA = "0xE51CAC", Offset = "0xE51CAC", VA = "0xE51CAC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001067")]
			[Address(RVA = "0xE51CB0", Offset = "0xE51CB0", VA = "0xE51CB0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001069")]
			[Address(RVA = "0xE51DDC", Offset = "0xE51DDC", VA = "0xE51DDC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000318")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15DFC", Offset = "0xB15DFC")]
		private sealed class <MakePost>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dictionary<string, string> APIParams;

			[Token(Token = "0x40010C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TwitterCallback callback;

			[Token(Token = "0x1700012A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600106E")]
				[Address(RVA = "0xE515FC", Offset = "0xE515FC", VA = "0xE515FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700012B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001070")]
				[Address(RVA = "0xE51664", Offset = "0xE51664", VA = "0xE51664", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600106B")]
			[Address(RVA = "0xE4FD74", Offset = "0xE4FD74", VA = "0xE4FD74")]
			[DebuggerHidden]
			public <MakePost>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x600106C")]
			[Address(RVA = "0xE512A4", Offset = "0xE512A4", VA = "0xE512A4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600106D")]
			[Address(RVA = "0xE512A8", Offset = "0xE512A8", VA = "0xE512A8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600106F")]
			[Address(RVA = "0xE51604", Offset = "0xE51604", VA = "0xE51604", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000319")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15E0C", Offset = "0xB15E0C")]
		private sealed class <GenerateRequestToken>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TwitterAuthenticationCallback callback;

			[Token(Token = "0x1700012C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001074")]
				[Address(RVA = "0xE50C20", Offset = "0xE50C20", VA = "0xE50C20", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700012D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001076")]
				[Address(RVA = "0xE50C88", Offset = "0xE50C88", VA = "0xE50C88", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001071")]
			[Address(RVA = "0xE4FE10", Offset = "0xE4FE10", VA = "0xE4FE10")]
			[DebuggerHidden]
			public <GenerateRequestToken>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001072")]
			[Address(RVA = "0xE50B94", Offset = "0xE50B94", VA = "0xE50B94", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001073")]
			[Address(RVA = "0xE50B98", Offset = "0xE50B98", VA = "0xE50B98", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001075")]
			[Address(RVA = "0xE50C28", Offset = "0xE50C28", VA = "0xE50C28", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200031A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15E1C", Offset = "0xB15E1C")]
		private sealed class <GenerateRequestToken>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string callbackURL;

			[Token(Token = "0x40010C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TwitterAuthenticationCallback callback;

			[Token(Token = "0x40010C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <request>5__2;

			[Token(Token = "0x1700012E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600107A")]
				[Address(RVA = "0xE51234", Offset = "0xE51234", VA = "0xE51234", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700012F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600107C")]
				[Address(RVA = "0xE5129C", Offset = "0xE5129C", VA = "0xE5129C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001077")]
			[Address(RVA = "0xE4FEB8", Offset = "0xE4FEB8", VA = "0xE4FEB8")]
			[DebuggerHidden]
			public <GenerateRequestToken>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001078")]
			[Address(RVA = "0xE50C90", Offset = "0xE50C90", VA = "0xE50C90", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001079")]
			[Address(RVA = "0xE50C94", Offset = "0xE50C94", VA = "0xE50C94", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600107B")]
			[Address(RVA = "0xE5123C", Offset = "0xE5123C", VA = "0xE5123C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200031B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15E2C", Offset = "0xB15E2C")]
		private sealed class <GenerateAccessToken>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string pin;

			[Token(Token = "0x40010CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TwitterAuthenticationCallback callback;

			[Token(Token = "0x40010CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <request>5__2;

			[Token(Token = "0x17000130")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001080")]
				[Address(RVA = "0xE50B24", Offset = "0xE50B24", VA = "0xE50B24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000131")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001082")]
				[Address(RVA = "0xE50B8C", Offset = "0xE50B8C", VA = "0xE50B8C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600107D")]
			[Address(RVA = "0xE4FF60", Offset = "0xE4FF60", VA = "0xE4FF60")]
			[DebuggerHidden]
			public <GenerateAccessToken>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x600107E")]
			[Address(RVA = "0xE501AC", Offset = "0xE501AC", VA = "0xE501AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600107F")]
			[Address(RVA = "0xE501B0", Offset = "0xE501B0", VA = "0xE501B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001081")]
			[Address(RVA = "0xE50B2C", Offset = "0xE50B2C", VA = "0xE50B2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200031C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15E3C", Offset = "0xB15E3C")]
		private sealed class <SendRequest>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40010CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40010CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40010D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityWebRequest request;

			[Token(Token = "0x40010D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SortedDictionary<string, string> parameters;

			[Token(Token = "0x40010D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string method;

			[Token(Token = "0x40010D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string requestURL;

			[Token(Token = "0x40010D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public TwitterCallback callback;

			[Token(Token = "0x17000132")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001086")]
				[Address(RVA = "0xE51C3C", Offset = "0xE51C3C", VA = "0xE51C3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000133")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001088")]
				[Address(RVA = "0xE51CA4", Offset = "0xE51CA4", VA = "0xE51CA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001083")]
			[Address(RVA = "0xE50024", Offset = "0xE50024", VA = "0xE50024")]
			[DebuggerHidden]
			public <SendRequest>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6001084")]
			[Address(RVA = "0xE5166C", Offset = "0xE5166C", VA = "0xE5166C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001085")]
			[Address(RVA = "0xE51670", Offset = "0xE51670", VA = "0xE51670", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001087")]
			[Address(RVA = "0xE51C44", Offset = "0xE51C44", VA = "0xE51C44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string screenName;

		[Token(Token = "0x600105E")]
		[Address(RVA = "0xE4FC50", Offset = "0xE4FC50", VA = "0xE4FC50")]
		public static IEnumerator UploadMedia(byte[] mediaData, TwitterCallback callback)
		{
			return null;
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0xE4FCF8", Offset = "0xE4FCF8", VA = "0xE4FCF8")]
		public static IEnumerator MakePost(Dictionary<string, string> APIParams, TwitterCallback callback)
		{
			return null;
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0xE4FDA0", Offset = "0xE4FDA0", VA = "0xE4FDA0")]
		public static IEnumerator GenerateRequestToken(TwitterAuthenticationCallback callback)
		{
			return null;
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0xE4FE3C", Offset = "0xE4FE3C", VA = "0xE4FE3C")]
		public static IEnumerator GenerateRequestToken(TwitterAuthenticationCallback callback, string callbackURL)
		{
			return null;
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0xE4FEE4", Offset = "0xE4FEE4", VA = "0xE4FEE4")]
		public static IEnumerator GenerateAccessToken(string pin, TwitterAuthenticationCallback callback)
		{
			return null;
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0xE4FF8C", Offset = "0xE4FF8C", VA = "0xE4FF8C")]
		private static IEnumerator SendRequest(UnityWebRequest request, SortedDictionary<string, string> parameters, string method, string requestURL, TwitterCallback callback)
		{
			return null;
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0xE50050", Offset = "0xE50050", VA = "0xE50050")]
		private static void ClearTokens()
		{
		}
	}
	[Token(Token = "0x200031D")]
	public class UnityWebRequestUnlimited : MonoBehaviour
	{
		[Token(Token = "0x6001089")]
		[Address(RVA = "0xE52F10", Offset = "0xE52F10", VA = "0xE52F10")]
		private static string EscapeLongDataString(string stringToEscape)
		{
			return null;
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0xE53028", Offset = "0xE53028", VA = "0xE53028")]
		public static byte[] SerializeSimpleForm(Dictionary<string, string> formFields)
		{
			return null;
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0xE514D0", Offset = "0xE514D0", VA = "0xE514D0")]
		public static UnityWebRequest Post(string uri, Dictionary<string, string> formFields)
		{
			return null;
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0xE531E0", Offset = "0xE531E0", VA = "0xE531E0")]
		public UnityWebRequestUnlimited()
		{
		}
	}
}
namespace Twity.Helpers
{
	[Token(Token = "0x200031E")]
	public class Helper
	{
		[Serializable]
		[Token(Token = "0x200031F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15E4C", Offset = "0xB15E4C")]
		private sealed class <>c
		{
			[Token(Token = "0x40010D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40010D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static MatchEvaluator <>9__2_0;

			[Token(Token = "0x6001090")]
			[Address(RVA = "0xE52144", Offset = "0xE52144", VA = "0xE52144")]
			public <>c()
			{
			}

			[Token(Token = "0x6001091")]
			[Address(RVA = "0xE5214C", Offset = "0xE5214C", VA = "0xE5214C")]
			internal string <UrlEncode>b__2_0(Match c)
			{
				return null;
			}
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0xE51394", Offset = "0xE51394", VA = "0xE51394")]
		public static SortedDictionary<string, string> ConvertToSortedDictionary(Dictionary<string, string> APIParams)
		{
			return null;
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0xE51E64", Offset = "0xE51E64", VA = "0xE51E64")]
		public static string UrlEncode(string original)
		{
			return null;
		}
	}
}
namespace Twity.DataModels.Core
{
	[Serializable]
	[Token(Token = "0x2000320")]
	public class Tweet : TweetObjectWithUser
	{
		[Token(Token = "0x6001092")]
		[Address(RVA = "0xE51E44", Offset = "0xE51E44", VA = "0xE51E44")]
		public Tweet()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000321")]
	public class TweetObject
	{
		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string id_str;

		[Token(Token = "0x6001093")]
		[Address(RVA = "0xE51E54", Offset = "0xE51E54", VA = "0xE51E54")]
		public TweetObject()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000322")]
	public class TweetObjectWithUser : TweetObject
	{
		[Token(Token = "0x6001094")]
		[Address(RVA = "0xE51E4C", Offset = "0xE51E4C", VA = "0xE51E4C")]
		public TweetObjectWithUser()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000323")]
	public class UploadMedia
	{
		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long media_id;

		[Token(Token = "0x6001095")]
		[Address(RVA = "0xE51E5C", Offset = "0xE51E5C", VA = "0xE51E5C")]
		public UploadMedia()
		{
		}
	}
}
namespace SimpleJSON
{
	[Token(Token = "0x2000324")]
	public enum JSONTextMode
	{
		[Token(Token = "0x40010DA")]
		Compact,
		[Token(Token = "0x40010DB")]
		Indent
	}
	[Token(Token = "0x2000325")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xB15E5C", Offset = "0xB15E5C")]
	public abstract class JSONNode
	{
		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool forceASCII;

		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool longAsString;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public static bool allowLineComments;

		[Token(Token = "0x40010DF")]
		[ThreadStatic]
		private static StringBuilder m_EscapeBuilder;

		[Token(Token = "0x17000134")]
		public virtual JSONNode Item
		{
			[Token(Token = "0x6001096")]
			[Address(RVA = "0xDD4818", Offset = "0xDD4818", VA = "0xDD4818", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000135")]
		public virtual string Value
		{
			[Token(Token = "0x6001097")]
			[Address(RVA = "0xDD4820", Offset = "0xDD4820", VA = "0xDD4820", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000136")]
		internal static StringBuilder EscapeBuilder
		{
			[Token(Token = "0x60010A3")]
			[Address(RVA = "0xDD4C18", Offset = "0xDD4C18", VA = "0xDD4C18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001098")]
		[Address(RVA = "0xDD4868", Offset = "0xDD4868", VA = "0xDD4868", Slot = "6")]
		public virtual void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x6001099")]
		[Address(RVA = "0xDD486C", Offset = "0xDD486C", VA = "0xDD486C", Slot = "7")]
		public virtual void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0xDD48D4", Offset = "0xDD48D4", VA = "0xDD48D4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600109B")]
		internal abstract void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode);

		[Token(Token = "0x600109C")]
		[Address(RVA = "0xDD4964", Offset = "0xDD4964", VA = "0xDD4964")]
		public static implicit operator JSONNode(string s)
		{
			return null;
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0xDD4A40", Offset = "0xDD4A40", VA = "0xDD4A40")]
		public static implicit operator JSONNode(double n)
		{
			return null;
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0xDD4B24", Offset = "0xDD4B24", VA = "0xDD4B24")]
		public static implicit operator JSONNode(bool b)
		{
			return null;
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0xDD3F1C", Offset = "0xDD3F1C", VA = "0xDD3F1C")]
		public static bool operator ==(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0xDD4B84", Offset = "0xDD4B84", VA = "0xDD4B84")]
		public static bool operator !=(JSONNode a, object b)
		{
			return default(bool);
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0xDD4C04", Offset = "0xDD4C04", VA = "0xDD4C04", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0xDD4C10", Offset = "0xDD4C10", VA = "0xDD4C10", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0xDD4CE8", Offset = "0xDD4CE8", VA = "0xDD4CE8")]
		internal static string Escape(string aText)
		{
			return null;
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0xDD4F88", Offset = "0xDD4F88", VA = "0xDD4F88")]
		private static JSONNode ParseElement(string token, bool quoted)
		{
			return null;
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0xDD361C", Offset = "0xDD361C", VA = "0xDD361C")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0xDD4350", Offset = "0xDD4350", VA = "0xDD4350")]
		protected JSONNode()
		{
		}
	}
	[Token(Token = "0x2000326")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xB15E94", Offset = "0xB15E94")]
	public class JSONArray : JSONNode
	{
		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<JSONNode> m_List;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inline;

		[Token(Token = "0x17000137")]
		public override JSONNode Item
		{
			[Token(Token = "0x60010A9")]
			[Address(RVA = "0xDD3D80", Offset = "0xDD3D80", VA = "0xDD3D80", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010AA")]
		[Address(RVA = "0xDD3E5C", Offset = "0xDD3E5C", VA = "0xDD3E5C", Slot = "6")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x60010AB")]
		[Address(RVA = "0xDD414C", Offset = "0xDD414C", VA = "0xDD414C", Slot = "8")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0xDD42C0", Offset = "0xDD42C0", VA = "0xDD42C0")]
		public JSONArray()
		{
		}
	}
	[Token(Token = "0x2000327")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xB15ECC", Offset = "0xB15ECC")]
	public class JSONObject : JSONNode
	{
		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, JSONNode> m_Dict;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inline;

		[Token(Token = "0x17000138")]
		public override JSONNode Item
		{
			[Token(Token = "0x60010AD")]
			[Address(RVA = "0xDD5738", Offset = "0xDD5738", VA = "0xDD5738", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0xDD57F4", Offset = "0xDD57F4", VA = "0xDD57F4", Slot = "6")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0xDD596C", Offset = "0xDD596C", VA = "0xDD596C", Slot = "8")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0xDD470C", Offset = "0xDD470C", VA = "0xDD470C")]
		public JSONObject()
		{
		}
	}
	[Token(Token = "0x2000328")]
	public class JSONString : JSONNode
	{
		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string m_Data;

		[Token(Token = "0x17000139")]
		public override string Value
		{
			[Token(Token = "0x60010B1")]
			[Address(RVA = "0xDD5C34", Offset = "0xDD5C34", VA = "0xDD5C34", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010B2")]
		[Address(RVA = "0xDD49C4", Offset = "0xDD49C4", VA = "0xDD49C4")]
		public JSONString(string aData)
		{
		}

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0xDD5C3C", Offset = "0xDD5C3C", VA = "0xDD5C3C", Slot = "8")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x60010B4")]
		[Address(RVA = "0xDD5CF4", Offset = "0xDD5CF4", VA = "0xDD5CF4", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0xDD5E08", Offset = "0xDD5E08", VA = "0xDD5E08", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000329")]
	public class JSONNumber : JSONNode
	{
		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private double m_Data;

		[Token(Token = "0x1700013A")]
		public override string Value
		{
			[Token(Token = "0x60010B6")]
			[Address(RVA = "0xDD5418", Offset = "0xDD5418", VA = "0xDD5418", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0xDD4AA8", Offset = "0xDD4AA8", VA = "0xDD4AA8")]
		public JSONNumber(double aData)
		{
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0xDD5490", Offset = "0xDD5490", VA = "0xDD5490", Slot = "8")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0xDD54D0", Offset = "0xDD54D0", VA = "0xDD54D0")]
		private static bool IsNumeric(object value)
		{
			return default(bool);
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0xDD5600", Offset = "0xDD5600", VA = "0xDD5600", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0xDD572C", Offset = "0xDD572C", VA = "0xDD572C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x200032A")]
	public class JSONBool : JSONNode
	{
		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool m_Data;

		[Token(Token = "0x1700013B")]
		public override string Value
		{
			[Token(Token = "0x60010BC")]
			[Address(RVA = "0xDD4358", Offset = "0xDD4358", VA = "0xDD4358", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0xDD4364", Offset = "0xDD4364", VA = "0xDD4364")]
		public JSONBool(bool aData)
		{
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0xDD43E4", Offset = "0xDD43E4", VA = "0xDD43E4", Slot = "8")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0xDD4460", Offset = "0xDD4460", VA = "0xDD4460", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0xDD44E8", Offset = "0xDD44E8", VA = "0xDD44E8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x200032B")]
	public class JSONNull : JSONNode
	{
		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static JSONNull m_StaticInstance;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool reuseSameInstance;

		[Token(Token = "0x1700013C")]
		public override string Value
		{
			[Token(Token = "0x60010C3")]
			[Address(RVA = "0xDD5260", Offset = "0xDD5260", VA = "0xDD5260", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0xDD40AC", Offset = "0xDD40AC", VA = "0xDD40AC")]
		public static JSONNull CreateOrGet()
		{
			return null;
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0xDD51F8", Offset = "0xDD51F8", VA = "0xDD51F8")]
		private JSONNull()
		{
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0xDD52A8", Offset = "0xDD52A8", VA = "0xDD52A8", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0xDD5344", Offset = "0xDD5344", VA = "0xDD5344", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0xDD534C", Offset = "0xDD534C", VA = "0xDD534C", Slot = "8")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}
	}
	[Token(Token = "0x200032C")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xB15F04", Offset = "0xB15F04")]
	internal class JSONLazyCreator : JSONNode
	{
		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private JSONNode m_Node;

		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string m_Key;

		[Token(Token = "0x1700013D")]
		public override JSONNode Item
		{
			[Token(Token = "0x60010CB")]
			[Address(RVA = "0xDD4574", Offset = "0xDD4574", VA = "0xDD4574", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0xDD3DE0", Offset = "0xDD3DE0", VA = "0xDD3DE0")]
		public JSONLazyCreator(JSONNode aNode)
		{
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0xDD44F4", Offset = "0xDD44F4", VA = "0xDD44F4")]
		public JSONLazyCreator(JSONNode aNode, string aKey)
		{
		}

		[Token(Token = "0x60010CA")]
		private T Set<T>(T aVal) where T : JSONNode
		{
			return null;
		}

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0xDD45E4", Offset = "0xDD45E4", VA = "0xDD45E4", Slot = "7")]
		public override void Add(JSONNode aItem)
		{
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0xDD4674", Offset = "0xDD4674", VA = "0xDD4674", Slot = "6")]
		public override void Add(string aKey, JSONNode aItem)
		{
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0xDD479C", Offset = "0xDD479C", VA = "0xDD479C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0xDD47B4", Offset = "0xDD47B4", VA = "0xDD47B4", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0xDD47BC", Offset = "0xDD47BC", VA = "0xDD47BC", Slot = "8")]
		internal override void WriteToStringBuilder(StringBuilder aSB, int aIndent, int aIndentInc, JSONTextMode aMode)
		{
		}
	}
	[Token(Token = "0x200032D")]
	public static class JSON
	{
		[Token(Token = "0x60010D1")]
		[Address(RVA = "0xDD35B8", Offset = "0xDD35B8", VA = "0xDD35B8")]
		public static JSONNode Parse(string aJSON)
		{
			return null;
		}
	}
}
namespace UnityToolbag
{
	[Token(Token = "0x200032E")]
	[ExecuteInEditMode]
	public class Dispatcher : MonoBehaviour
	{
		[Token(Token = "0x200032F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15F4C", Offset = "0xB15F4C")]
		private sealed class <>c__DisplayClass9_0
		{
			[Token(Token = "0x40010F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action action;

			[Token(Token = "0x40010F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool hasRun;

			[Token(Token = "0x60010DB")]
			[Address(RVA = "0xE169B4", Offset = "0xE169B4", VA = "0xE169B4")]
			public <>c__DisplayClass9_0()
			{
			}

			[Token(Token = "0x60010DC")]
			[Address(RVA = "0xE16DD4", Offset = "0xE16DD4", VA = "0xE16DD4")]
			internal void <Invoke>b__0()
			{
			}
		}

		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dispatcher _instance;

		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool _instanceExists;

		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static Thread _mainThread;

		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static object _lockObject;

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly Queue<Action> _actions;

		[Token(Token = "0x1700013E")]
		public static bool isMainThread
		{
			[Token(Token = "0x60010D2")]
			[Address(RVA = "0xE1644C", Offset = "0xE1644C", VA = "0xE1644C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0xE164CC", Offset = "0xE164CC", VA = "0xE164CC")]
		public static void Prepare([Optional] GameObject gameObject)
		{
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0xE166B4", Offset = "0xE166B4", VA = "0xE166B4")]
		public static void InvokeAsync(Action action)
		{
		}

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0xE1686C", Offset = "0xE1686C", VA = "0xE1686C")]
		public static void Invoke(Action action)
		{
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0xE169BC", Offset = "0xE169BC", VA = "0xE169BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0xE16ADC", Offset = "0xE16ADC", VA = "0xE16ADC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0xE16BB8", Offset = "0xE16BB8", VA = "0xE16BB8")]
		private void Update()
		{
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0xE16D30", Offset = "0xE16D30", VA = "0xE16D30")]
		public Dispatcher()
		{
		}
	}
}
namespace TRS.CaptureTool
{
	[Token(Token = "0x2000330")]
	public class OnDownButton : Button, IPointerDownHandler, IEventSystemHandler
	{
		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x1283194", Offset = "0x1283194", VA = "0x1283194", Slot = "32")]
		public override void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0x12831BC", Offset = "0x12831BC", VA = "0x12831BC", Slot = "41")]
		public override void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0x12831C0", Offset = "0x12831C0", VA = "0x12831C0")]
		public OnDownButton()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000331")]
	public class CaptureAction : ScriptableObject
	{
		[Token(Token = "0x60010E0")]
		[Address(RVA = "0xEA8168", Offset = "0xEA8168", VA = "0xEA8168")]
		public CaptureAction()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000332")]
	public class CaptureFileSettings : FileSettings
	{
		[Token(Token = "0x40010F2")]
		private const string CAPTURE_COUNT_KEY = "TRS_CFS_COUNT";

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		public bool includeCamera;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
		public bool includeResolution;

		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC3")]
		public bool saveToGallery;

		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public string androidAlbum;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public string iosAlbum;

		[Token(Token = "0x1700013F")]
		public string album
		{
			[Token(Token = "0x60010E1")]
			[Address(RVA = "0xEA8170", Offset = "0xEA8170", VA = "0xEA8170")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0xEA8178", Offset = "0xEA8178", VA = "0xEA8178", Slot = "5")]
		public override void SetUp(int uniqueId, string saveType = "Captures")
		{
		}

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0xEA83C8", Offset = "0xEA83C8", VA = "0xEA83C8", Slot = "6")]
		public virtual string FullFilePathWithCaptureDetails(string cameraName, string resolutionName, string resolutionString)
		{
			return null;
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0xEA85FC", Offset = "0xEA85FC", VA = "0xEA85FC")]
		public string FolderName(params string[] components)
		{
			return null;
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0xEA8600", Offset = "0xEA8600", VA = "0xEA8600")]
		public string FileNameWithCaptureDetails(string cameraName, string resolutionString)
		{
			return null;
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0xEA8C6C", Offset = "0xEA8C6C", VA = "0xEA8C6C")]
		public CaptureFileSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000333")]
	public class FileSettings
	{
		[Token(Token = "0x40010F8")]
		protected const string CONNECTING_TEXT = "_";

		[Token(Token = "0x40010F9")]
		protected const string COUNT_KEY = "TRS_FS_COUNT";

		[Token(Token = "0x40010FA")]
		protected const string BASE_EDITOR_DIRECTORY_KEY = "TRS_FS_EDITOR_SAVE_PATH";

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB19400", Offset = "0xB19400")]
		private string <encoding>k__BackingField;

		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string prefix;

		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool includeProject;

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool includeDate;

		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string dateFormat;

		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool includeCounter;

		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int cachedCount;

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool countLoaded;

		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected string countKey;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool useStreamingAssetsPath;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB19420", Offset = "0xB19420")]
		public string saveType;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected int uniqueId;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool editorDirectoryLoaded;

		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string cachedEditorDirectory;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string editorDirectoryKey;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string linuxDirectory;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string macDirectory;

		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string windowsDirectory;

		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool persistLocallyMobile;

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public string androidDirectory;

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public string iosDirectory;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB19458", Offset = "0xB19458")]
		public bool openInNewTab;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB19490", Offset = "0xB19490")]
		public bool download;

		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public string webFileName;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool persistLocallyWeb;

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public string webDirectory;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		protected bool setup;

		[Token(Token = "0x17000140")]
		public string directory
		{
			[Token(Token = "0x60010E7")]
			[Address(RVA = "0xEAE8F4", Offset = "0xEAE8F4", VA = "0xEAE8F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000141")]
		public virtual string encoding
		{
			[Token(Token = "0x60010E8")]
			[Address(RVA = "0xEB47D8", Offset = "0xEB47D8", VA = "0xEB47D8", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C358", Offset = "0xB1C358")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000142")]
		public string extension
		{
			[Token(Token = "0x60010E9")]
			[Address(RVA = "0xEB42C0", Offset = "0xEB42C0", VA = "0xEB42C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000143")]
		public int count
		{
			[Token(Token = "0x60010EA")]
			[Address(RVA = "0xEB47E0", Offset = "0xEB47E0", VA = "0xEB47E0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0xEA8200", Offset = "0xEA8200", VA = "0xEA8200", Slot = "5")]
		public virtual void SetUp(int uniqueId, string saveType = "Files")
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0xEA8720", Offset = "0xEA8720", VA = "0xEA8720")]
		public string FullFilePath(string folderName = "", string fileName = "", bool createDirectory = true)
		{
			return null;
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0xEB4948", Offset = "0xEB4948", VA = "0xEB4948")]
		public string FullFolderPath(string folderName = "", bool createDirectory = true)
		{
			return null;
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0xEA8824", Offset = "0xEA8824", VA = "0xEA8824")]
		public string FolderNameFromComponents(string[] components)
		{
			return null;
		}

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0xEA89BC", Offset = "0xEA89BC", VA = "0xEA89BC")]
		public string FileName(string additionalComponent = "")
		{
			return null;
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0xEA8520", Offset = "0xEA8520", VA = "0xEA8520")]
		protected string ConnectParts(params string[] parts)
		{
			return null;
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0xEB4BB4", Offset = "0xEB4BB4", VA = "0xEB4BB4")]
		protected string CombineComponents(params string[] components)
		{
			return null;
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0xEB4840", Offset = "0xEB4840", VA = "0xEB4840")]
		private string LoadEditorDirectory()
		{
			return null;
		}

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0xEB4CD0", Offset = "0xEB4CD0", VA = "0xEB4CD0")]
		public void SaveEditorDirectory()
		{
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0xEB47F4", Offset = "0xEB47F4", VA = "0xEB47F4")]
		private int LoadCount()
		{
			return default(int);
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0xEB4CF4", Offset = "0xEB4CF4", VA = "0xEB4CF4")]
		public void IncrementCount()
		{
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0xEB4D04", Offset = "0xEB4D04", VA = "0xEB4D04")]
		public void SetCount(int newCount)
		{
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0xEB4D0C", Offset = "0xEB4D0C", VA = "0xEB4D0C")]
		public void SaveCount()
		{
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0xEA8C70", Offset = "0xEA8C70", VA = "0xEA8C70")]
		public FileSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000334")]
	public class ScreenshotFileSettings : CaptureFileSettings
	{
		[Token(Token = "0x2000335")]
		public enum FileType
		{
			[Token(Token = "0x400111C")]
			PNG,
			[Token(Token = "0x400111D")]
			JPG
		}

		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public FileType fileType;

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public bool allowTransparency;

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public int jpgQuality;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public bool includeLanguageInPath;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private SystemLanguage language;

		[Token(Token = "0x17000144")]
		public override string encoding
		{
			[Token(Token = "0x60010FB")]
			[Address(RVA = "0x1284B50", Offset = "0x1284B50", VA = "0x1284B50", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0x128491C", Offset = "0x128491C", VA = "0x128491C")]
		public ScreenshotFileSettings()
		{
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0x1284A14", Offset = "0x1284A14", VA = "0x1284A14", Slot = "1")]
		~ScreenshotFileSettings()
		{
		}

		[Token(Token = "0x60010FC")]
		[Address(RVA = "0x1284BB0", Offset = "0x1284BB0", VA = "0x1284BB0", Slot = "5")]
		public override void SetUp(int uniqueId, string saveType = "Screenshots")
		{
		}

		[Token(Token = "0x60010FD")]
		[Address(RVA = "0x1284BE4", Offset = "0x1284BE4", VA = "0x1284BE4", Slot = "6")]
		public override string FullFilePathWithCaptureDetails(string cameraName, string resolutionName, string resolutionString)
		{
			return null;
		}

		[Token(Token = "0x60010FE")]
		[Address(RVA = "0x1284DFC", Offset = "0x1284DFC", VA = "0x1284DFC")]
		public void LanguageChanged(SystemLanguage language)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000336")]
	public class RawFrameData
	{
		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private Texture2D rawTexture;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RenderTexture renderTexture;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Color32[] colors;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool destroyOriginal;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Texture2D processedTexture;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Resolution recordResolution;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Rect cutout;

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool solidify;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Resolution resizeResolution;

		[Token(Token = "0x17000145")]
		public bool processed
		{
			[Token(Token = "0x60010FF")]
			[Address(RVA = "0x1283278", Offset = "0x1283278", VA = "0x1283278")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000146")]
		public Resolution resolution
		{
			[Token(Token = "0x6001100")]
			[Address(RVA = "0x12832E8", Offset = "0x12832E8", VA = "0x12832E8")]
			get
			{
				return default(Resolution);
			}
		}

		[Token(Token = "0x6001101")]
		[Address(RVA = "0x1283498", Offset = "0x1283498", VA = "0x1283498")]
		private RawFrameData(Rect cutout, Resolution resizeResolution, bool solidify)
		{
		}

		[Token(Token = "0x6001102")]
		[Address(RVA = "0x1283510", Offset = "0x1283510", VA = "0x1283510")]
		public RawFrameData(Texture2D rawTexture, Rect cutout, Resolution resizeResolution, bool solidify)
		{
		}

		[Token(Token = "0x6001103")]
		[Address(RVA = "0x127DD50", Offset = "0x127DD50", VA = "0x127DD50")]
		public RawFrameData(RenderTexture renderTexture, Rect cutout, Resolution resizeResolution, bool solidify)
		{
		}

		[Token(Token = "0x6001104")]
		[Address(RVA = "0x127DA90", Offset = "0x127DA90", VA = "0x127DA90")]
		public RawFrameData(Color32[] colors, Resolution recordResolution, Rect cutout, Resolution resizeResolution, bool solidify)
		{
		}

		[Token(Token = "0x6001105")]
		[Address(RVA = "0x1283598", Offset = "0x1283598", VA = "0x1283598")]
		public Texture2D Process(bool apply = true)
		{
			return null;
		}

		[Token(Token = "0x6001106")]
		[Address(RVA = "0x1283714", Offset = "0x1283714", VA = "0x1283714")]
		private Texture2D ProcessRawTexture()
		{
			return null;
		}

		[Token(Token = "0x6001107")]
		[Address(RVA = "0x128383C", Offset = "0x128383C", VA = "0x128383C")]
		private Texture2D ProcessRenderTexture()
		{
			return null;
		}

		[Token(Token = "0x6001108")]
		[Address(RVA = "0x1283A08", Offset = "0x1283A08", VA = "0x1283A08")]
		private Texture2D ProcessColor32Array()
		{
			return null;
		}

		[Token(Token = "0x6001109")]
		[Address(RVA = "0x1283AF4", Offset = "0x1283AF4", VA = "0x1283AF4")]
		public void Destroy()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000337")]
	public class ScreenshotResolutionTransformation
	{
		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool active;

		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string screenshotResolutionName;

		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureTransformation textureTransformation;

		[Token(Token = "0x600110A")]
		[Address(RVA = "0x12851C0", Offset = "0x12851C0", VA = "0x12851C0")]
		public ScreenshotResolutionTransformation()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000338")]
	public class CutoutTextureTransformation : TextureTransformation
	{
		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Rect rect;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool positionRelative;

		[Token(Token = "0x600110B")]
		[Address(RVA = "0xEADE88", Offset = "0xEADE88", VA = "0xEADE88")]
		public void Init(Rect rect, bool positionRelative)
		{
		}

		[Token(Token = "0x600110C")]
		[Address(RVA = "0xEADE9C", Offset = "0xEADE9C", VA = "0xEADE9C", Slot = "4")]
		public override string TransformationName()
		{
			return null;
		}

		[Token(Token = "0x600110D")]
		[Address(RVA = "0xEADEE4", Offset = "0xEADEE4", VA = "0xEADEE4", Slot = "5")]
		public override string[] PropertyNames()
		{
			return null;
		}

		[Token(Token = "0x600110E")]
		[Address(RVA = "0xEADFC0", Offset = "0xEADFC0", VA = "0xEADFC0", Slot = "6")]
		public override string LabelForPropertyName(string propertyName)
		{
			return null;
		}

		[Token(Token = "0x600110F")]
		[Address(RVA = "0xEAE08C", Offset = "0xEAE08C", VA = "0xEAE08C", Slot = "7")]
		public override Texture2D ApplyTransformation(Texture2D texture, bool apply = true, bool destroyOriginal = true)
		{
			return null;
		}

		[Token(Token = "0x6001110")]
		[Address(RVA = "0xEAE280", Offset = "0xEAE280", VA = "0xEAE280", Slot = "8")]
		public override TextureTransformation Clone()
		{
			return null;
		}

		[Token(Token = "0x6001111")]
		[Address(RVA = "0xEAE2F0", Offset = "0xEAE2F0", VA = "0xEAE2F0")]
		public CutoutTextureTransformation()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000339")]
	public class LayerBehindTextureTransformation : TextureTransformation
	{
		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture2D otherLayer;

		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 otherLayerPosition;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LayerPositionPoint otherLayerPositionPoint;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool otherLayerPositionIsRelative;

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color emptySpaceFillColor;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool useAlphaBlend;

		[Token(Token = "0x6001112")]
		[Address(RVA = "0x12814C0", Offset = "0x12814C0", VA = "0x12814C0")]
		public void Init(Texture2D otherLayer, Vector2 otherLayerPosition, LayerPositionPoint otherLayerPositionPoint, bool otherLayerPositionIsRelative, Color emptySpaceFillColor, bool useAlphaBlend = true)
		{
		}

		[Token(Token = "0x6001113")]
		[Address(RVA = "0x12814E8", Offset = "0x12814E8", VA = "0x12814E8", Slot = "4")]
		public override string TransformationName()
		{
			return null;
		}

		[Token(Token = "0x6001114")]
		[Address(RVA = "0x1281530", Offset = "0x1281530", VA = "0x1281530", Slot = "5")]
		public override string[] PropertyNames()
		{
			return null;
		}

		[Token(Token = "0x6001115")]
		[Address(RVA = "0x12816DC", Offset = "0x12816DC", VA = "0x12816DC", Slot = "6")]
		public override string LabelForPropertyName(string propertyName)
		{
			return null;
		}

		[Token(Token = "0x6001116")]
		[Address(RVA = "0x1281848", Offset = "0x1281848", VA = "0x1281848", Slot = "7")]
		public override Texture2D ApplyTransformation(Texture2D texture, bool apply = true, bool destroyOriginal = true)
		{
			return null;
		}

		[Token(Token = "0x6001117")]
		[Address(RVA = "0x1281A94", Offset = "0x1281A94", VA = "0x1281A94", Slot = "8")]
		public override TextureTransformation Clone()
		{
			return null;
		}

		[Token(Token = "0x6001118")]
		[Address(RVA = "0x1281B24", Offset = "0x1281B24", VA = "0x1281B24")]
		public LayerBehindTextureTransformation()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200033A")]
	public class LayerInFrontTextureTransformation : TextureTransformation
	{
		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture2D otherLayer;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 otherLayerPosition;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public LayerPositionPoint otherLayerPositionPoint;

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool otherLayerPositionIsRelative;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color emptySpaceFillColor;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool useAlphaBlend;

		[Token(Token = "0x6001119")]
		[Address(RVA = "0x1281B48", Offset = "0x1281B48", VA = "0x1281B48")]
		public void Init(Texture2D otherLayer, Vector2 otherLayerPosition, LayerPositionPoint otherLayerPositionPoint, bool otherLayerPositionIsRelative, Color emptySpaceFillColor, bool useAlphaBlend = true)
		{
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0x1281B70", Offset = "0x1281B70", VA = "0x1281B70", Slot = "4")]
		public override string TransformationName()
		{
			return null;
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0x1281BB8", Offset = "0x1281BB8", VA = "0x1281BB8", Slot = "5")]
		public override string[] PropertyNames()
		{
			return null;
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0x1281D64", Offset = "0x1281D64", VA = "0x1281D64", Slot = "6")]
		public override string LabelForPropertyName(string propertyName)
		{
			return null;
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0x1281ED0", Offset = "0x1281ED0", VA = "0x1281ED0", Slot = "7")]
		public override Texture2D ApplyTransformation(Texture2D texture, bool apply = true, bool destroyOriginal = true)
		{
			return null;
		}

		[Token(Token = "0x600111E")]
		[Address(RVA = "0x128211C", Offset = "0x128211C", VA = "0x128211C", Slot = "8")]
		public override TextureTransformation Clone()
		{
			return null;
		}

		[Token(Token = "0x600111F")]
		[Address(RVA = "0x12821AC", Offset = "0x12821AC", VA = "0x12821AC")]
		public LayerInFrontTextureTransformation()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200033B")]
	public class ResizeTextureTransformation : TextureTransformation
	{
		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int width;

		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int height;

		[Token(Token = "0x6001120")]
		[Address(RVA = "0x1283C10", Offset = "0x1283C10", VA = "0x1283C10")]
		public void Init(Resolution resolution)
		{
		}

		[Token(Token = "0x6001121")]
		[Address(RVA = "0x1283CC0", Offset = "0x1283CC0", VA = "0x1283CC0")]
		public void Init(int width, int height)
		{
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0x1283CC8", Offset = "0x1283CC8", VA = "0x1283CC8", Slot = "4")]
		public override string TransformationName()
		{
			return null;
		}

		[Token(Token = "0x6001123")]
		[Address(RVA = "0x1283D10", Offset = "0x1283D10", VA = "0x1283D10", Slot = "5")]
		public override string[] PropertyNames()
		{
			return null;
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0x1283DEC", Offset = "0x1283DEC", VA = "0x1283DEC", Slot = "6")]
		public override string LabelForPropertyName(string propertyName)
		{
			return null;
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0x1283EB8", Offset = "0x1283EB8", VA = "0x1283EB8", Slot = "7")]
		public override Texture2D ApplyTransformation(Texture2D texture, bool apply = true, bool destroyOriginal = true)
		{
			return null;
		}

		[Token(Token = "0x6001126")]
		[Address(RVA = "0x1283F18", Offset = "0x1283F18", VA = "0x1283F18", Slot = "8")]
		public override TextureTransformation Clone()
		{
			return null;
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0x1283F88", Offset = "0x1283F88", VA = "0x1283F88")]
		public ResizeTextureTransformation()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200033C")]
	public class SolidifyTextureTransformation : TextureTransformation
	{
		[Token(Token = "0x6001128")]
		[Address(RVA = "0x128F3AC", Offset = "0x128F3AC", VA = "0x128F3AC")]
		public void Init()
		{
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0x128F3B0", Offset = "0x128F3B0", VA = "0x128F3B0", Slot = "4")]
		public override string TransformationName()
		{
			return null;
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0x128F3F8", Offset = "0x128F3F8", VA = "0x128F3F8", Slot = "5")]
		public override string[] PropertyNames()
		{
			return null;
		}

		[Token(Token = "0x600112B")]
		[Address(RVA = "0x128F444", Offset = "0x128F444", VA = "0x128F444", Slot = "6")]
		public override string LabelForPropertyName(string propertyName)
		{
			return null;
		}

		[Token(Token = "0x600112C")]
		[Address(RVA = "0x128F4B0", Offset = "0x128F4B0", VA = "0x128F4B0", Slot = "7")]
		public override Texture2D ApplyTransformation(Texture2D texture, bool apply = true, bool destroyOriginal = true)
		{
			return null;
		}

		[Token(Token = "0x600112D")]
		[Address(RVA = "0x128F4CC", Offset = "0x128F4CC", VA = "0x128F4CC", Slot = "8")]
		public override TextureTransformation Clone()
		{
			return null;
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0x128F52C", Offset = "0x128F52C", VA = "0x128F52C")]
		public SolidifyTextureTransformation()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200033D")]
	public class TextureTransformation : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x200033E")]
		public enum LayerPositionPoint
		{
			[Token(Token = "0x400113C")]
			TopLeft,
			[Token(Token = "0x400113D")]
			Center
		}

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool active;

		[Token(Token = "0x600112F")]
		[Address(RVA = "0x128FB48", Offset = "0x128FB48", VA = "0x128FB48", Slot = "4")]
		public virtual string TransformationName()
		{
			return null;
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0x128FBB4", Offset = "0x128FBB4", VA = "0x128FBB4", Slot = "5")]
		public virtual string[] PropertyNames()
		{
			return null;
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0x128FC20", Offset = "0x128FC20", VA = "0x128FC20", Slot = "6")]
		public virtual string LabelForPropertyName(string propertyName)
		{
			return null;
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0x128FC8C", Offset = "0x128FC8C", VA = "0x128FC8C")]
		public static TextureTransformation SolidifyTextureTransformation()
		{
			return null;
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0x128FCE0", Offset = "0x128FCE0", VA = "0x128FCE0")]
		public static TextureTransformation CutoutTextureTransformation(Rect rect, bool positionRelative)
		{
			return null;
		}

		[Token(Token = "0x6001134")]
		[Address(RVA = "0x128FD7C", Offset = "0x128FD7C", VA = "0x128FD7C")]
		public static TextureTransformation ResizeTextureTransformation(Resolution resolution)
		{
			return null;
		}

		[Token(Token = "0x6001135")]
		[Address(RVA = "0x128FDF4", Offset = "0x128FDF4", VA = "0x128FDF4")]
		public static TextureTransformation LayerBehindTextureTransformation(Texture2D otherLayer, Vector2 otherLayerPosition, LayerPositionPoint otherLayerPositionPoint, bool otherLayerPositionIsRelative, Color emptySpaceFillColor, bool useAlphaBlend = true)
		{
			return null;
		}

		[Token(Token = "0x6001136")]
		[Address(RVA = "0x128F700", Offset = "0x128F700", VA = "0x128F700")]
		public static TextureTransformation LayerInFrontTextureTransformation(Texture2D otherLayer, Vector2 otherLayerPosition, LayerPositionPoint otherLayerPositionPoint, bool otherLayerPositionIsRelative, Color emptySpaceFillColor, bool useAlphaBlend = true)
		{
			return null;
		}

		[Token(Token = "0x6001137")]
		[Address(RVA = "0x128FEBC", Offset = "0x128FEBC", VA = "0x128FEBC", Slot = "7")]
		public virtual Texture2D ApplyTransformation(Texture2D texture, bool apply = true, bool destroyOriginal = true)
		{
			return null;
		}

		[Token(Token = "0x6001138")]
		[Address(RVA = "0x128FF28", Offset = "0x128FF28", VA = "0x128FF28", Slot = "8")]
		public virtual TextureTransformation Clone()
		{
			return null;
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0x1281B38", Offset = "0x1281B38", VA = "0x1281B38")]
		public TextureTransformation()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200033F")]
	public class TransformableTexture
	{
		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool destroyRawDataWhenFinalized;

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool destroyRawTextureWhenFinalized;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RawFrameData rawFrameData;

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture2D rawTexture;

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextureTransformation[] transformations;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Texture2D finalTexture;

		[Token(Token = "0x17000147")]
		public bool finalized
		{
			[Token(Token = "0x600113A")]
			[Address(RVA = "0xE41A24", Offset = "0xE41A24", VA = "0xE41A24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0xE41A94", Offset = "0xE41A94", VA = "0xE41A94")]
		public TransformableTexture(RawFrameData rawFrameData, TextureTransformation[] transformations)
		{
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0xE41AD8", Offset = "0xE41AD8", VA = "0xE41AD8")]
		public TransformableTexture(Texture2D rawTexture, TextureTransformation[] transformations)
		{
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0xE41B24", Offset = "0xE41B24", VA = "0xE41B24")]
		public Texture2D Process()
		{
			return null;
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0xE41C0C", Offset = "0xE41C0C", VA = "0xE41C0C")]
		public Texture2D Finalize()
		{
			return null;
		}

		[Token(Token = "0x600113F")]
		[Address(RVA = "0xE41D2C", Offset = "0xE41D2C", VA = "0xE41D2C")]
		public void Destroy()
		{
		}
	}
	[Token(Token = "0x2000340")]
	public static class CanvasesAdjuster
	{
		[Serializable]
		[Token(Token = "0x2000341")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15F5C", Offset = "0xB15F5C")]
		private sealed class <>c
		{
			[Token(Token = "0x400114E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400114F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GameObject> <>9__13_0;

			[Token(Token = "0x6001149")]
			[Address(RVA = "0xEA80F4", Offset = "0xEA80F4", VA = "0xEA80F4")]
			public <>c()
			{
			}

			[Token(Token = "0x600114A")]
			[Address(RVA = "0xEA80FC", Offset = "0xEA80FC", VA = "0xEA80FC")]
			internal bool <Setup>b__13_0(GameObject dontDestroyOnLoadGameObject)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool ranSetup;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Canvas[] allCanvases;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<GameObject> dontDestroyOnLoadGameObjects;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static bool automaticallyTrackDontDestroyOnLoadGameObjects;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static Camera camera;

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static bool cameraWasEnabled;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static bool[] canvasModified;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool didOverridePlaneDistance;

		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static Camera[] originalRenderCameras;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static float[] originalCanvasPlaneDistances;

		[Token(Token = "0x6001140")]
		[Address(RVA = "0xEA7230", Offset = "0xEA7230", VA = "0xEA7230")]
		public static void AddDontDestroyOnLoadGameObject(GameObject gameObject)
		{
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0xEA773C", Offset = "0xEA773C", VA = "0xEA773C")]
		public static void RemoveDontDestroyOnLoadGameObject(GameObject gameObject)
		{
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0xEA77EC", Offset = "0xEA77EC", VA = "0xEA77EC")]
		public static void SetupIfNecessary()
		{
		}

		[Token(Token = "0x6001143")]
		[Address(RVA = "0xEA7304", Offset = "0xEA7304", VA = "0xEA7304")]
		public static void Setup()
		{
		}

		[Token(Token = "0x6001144")]
		[Address(RVA = "0xEA7954", Offset = "0xEA7954", VA = "0xEA7954")]
		public static bool AnyOverlayCameras()
		{
			return default(bool);
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0xEA7A20", Offset = "0xEA7A20", VA = "0xEA7A20")]
		public static void ForceCameraRenderMode(Camera camera, bool overridePlaneDistance = false, float planeDistanceOverride = 0f)
		{
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0xEA7E08", Offset = "0xEA7E08", VA = "0xEA7E08")]
		public static void RestoreOriginalRenderModes()
		{
		}
	}
	[Token(Token = "0x2000342")]
	public static class CaptureRawFrame
	{
		[Token(Token = "0x600114B")]
		[Address(RVA = "0xEA8CD4", Offset = "0xEA8CD4", VA = "0xEA8CD4")]
		public static RawFrameData ScreenCapture(Rect rect, Resolution resizeResolution, bool solidify)
		{
			return null;
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0xEA8E5C", Offset = "0xEA8E5C", VA = "0xEA8E5C")]
		public static RawFrameData AltScreenCapture(Rect rect, Resolution resizeResolution, bool solidify, int scale = 1)
		{
			return null;
		}

		[Token(Token = "0x600114D")]
		[Address(RVA = "0xEA8F2C", Offset = "0xEA8F2C", VA = "0xEA8F2C")]
		public static RawFrameData CameraRenderTexture(Camera camera, Rect rect, Resolution resizeResolution, bool solidify)
		{
			return null;
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0xEA9170", Offset = "0xEA9170", VA = "0xEA9170")]
		public static RawFrameData CamerasRenderTexture(Camera[] cameras, Rect rect, Resolution resizeResolution, bool solidify)
		{
			return null;
		}

		[Token(Token = "0x600114F")]
		[Address(RVA = "0xEA9444", Offset = "0xEA9444", VA = "0xEA9444")]
		public static RawFrameData AllCamerasRenderTexture(Rect rect, Resolution resizeResolution, bool solidify)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000343")]
	public abstract class CaptureScript : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000344")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB15F6C", Offset = "0xB15F6C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001175")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001176")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Camera, float> <>9__42_0;

			[Token(Token = "0x4001177")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Predicate<GameObject> <>9__49_0;

			[Token(Token = "0x4001178")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Predicate<GameObject> <>9__49_1;

			[Token(Token = "0x4001179")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Predicate<Camera> <>9__60_0;

			[Token(Token = "0x400117A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<Camera, float> <>9__60_1;

			[Token(Token = "0x6001168")]
			[Address(RVA = "0xEAC7F4", Offset = "0xEAC7F4", VA = "0xEAC7F4")]
			public <>c()
			{
			}

			[Token(Token = "0x6001169")]
			[Address(RVA = "0xEAC7FC", Offset = "0xEAC7FC", VA = "0xEAC7FC")]
			internal float <SetUpDefaultValues>b__42_0(Camera camera)
			{
				return default(float);
			}

			[Token(Token = "0x600116A")]
			[Address(RVA = "0xEAC818", Offset = "0xEAC818", VA = "0xEAC818")]
			internal bool <PrepareToCapture>b__49_0(GameObject tempEnabledObject)
			{
				return default(bool);
			}

			[Token(Token = "0x600116B")]
			[Address(RVA = "0xEAC884", Offset = "0xEAC884", VA = "0xEAC884")]
			internal bool <PrepareToCapture>b__49_1(GameObject tempDisabledObject)
			{
				return default(bool);
			}

			[Token(Token = "0x600116C")]
			[Address(RVA = "0xEAC8F0", Offset = "0xEAC8F0", VA = "0xEAC8F0")]
			internal bool <CleanUpCameraList>b__60_0(Camera camera)
			{
				return default(bool);
			}

			[Token(Token = "0x600116D")]
			[Address(RVA = "0xEAC95C", Offset = "0xEAC95C", VA = "0xEAC95C")]
			internal float <CleanUpCameraList>b__60_1(Camera camera)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<GameObject> tempEnabledObjects;

		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GameObject> tempDisabledObjects;

		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float delayBeforeCapture;

		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool stopTimeDuringCapture;

		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Camera> cameras;

		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool overrideBackground;

		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Camera backgroundCamera;

		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color backgroundColor;

		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool useCutout;

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CutoutScript cutoutScript;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<RectTransform> cutoutAdjustedRectTransforms;

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<Transform> originalCutoutAdjustedParents;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<bool> originalCutoutAdjustedActive;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<bool> originalCutoutChildrenActive;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public HotKeySet previewCutoutKeySet;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public TextureTransformation[] captureTransformations;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB19518", Offset = "0xB19518")]
		public TextureTransformation[] editTransformations;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool autoSwitchRenderMode;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB19550", Offset = "0xB19550")]
		public Camera uiCamera;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool overridePlaneDistance;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float planeDistanceOverride;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool useAltScreenCapture;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public string lastSaveFilePath;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public bool showOriginalMouse;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
		public bool showInGameMouse;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public MouseFollowScript mouseFollowScript;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		protected bool dontDestroyOnLoad;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		public bool autoUpdateCameras;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
		public bool autoUpdateCamerasByTag;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public List<string> camerasNameOrTags;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB19598", Offset = "0xB19598")]
		public string uiCameraNameOrTag;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public string backgroundCameraNameOrTag;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Color originalBackgroundColor;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private CameraClearFlags originalClearFlags;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private List<bool> originalTempEnabledObjectsState;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private List<bool> originalTempDisabledObjectsState;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private float originalTimeScale;

		[Token(Token = "0x17000148")]
		public virtual bool useCanvasesAdjuster
		{
			[Token(Token = "0x6001152")]
			[Address(RVA = "0xEA94B4", Offset = "0xEA94B4", VA = "0xEA94B4", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001150")]
		public abstract int GetMaxInstances();

		[Token(Token = "0x6001151")]
		public abstract void SetMaxInstances(int newValue);

		[Token(Token = "0x6001153")]
		[Address(RVA = "0xEA953C", Offset = "0xEA953C", VA = "0xEA953C", Slot = "7")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001154")]
		[Address(RVA = "0xEA962C", Offset = "0xEA962C", VA = "0xEA962C", Slot = "8")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6001155")]
		[Address(RVA = "0xEA968C", Offset = "0xEA968C", VA = "0xEA968C", Slot = "9")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001156")]
		[Address(RVA = "0xEA971C", Offset = "0xEA971C", VA = "0xEA971C", Slot = "10")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0xEA9568", Offset = "0xEA9568", VA = "0xEA9568")]
		public void UpdateMouse()
		{
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0xEA9798", Offset = "0xEA9798", VA = "0xEA9798", Slot = "11")]
		protected virtual void SetUpDefaultValues()
		{
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0xEA9AC0", Offset = "0xEA9AC0", VA = "0xEA9AC0")]
		public void AddAllActiveCameras()
		{
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0xEA9BA8", Offset = "0xEA9BA8", VA = "0xEA9BA8", Slot = "12")]
		protected virtual void PrepareToCapture()
		{
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0xEAAB00", Offset = "0xEAAB00", VA = "0xEAAB00", Slot = "13")]
		protected virtual void RestoreAfterCapture()
		{
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0xEAB1A0", Offset = "0xEAB1A0", VA = "0xEAB1A0", Slot = "14")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB1C368", Offset = "0xB1C368")]
		protected virtual Texture2D FlexibleScreenCaptureWithCutout(Resolution resolution, int scale, TextureFormat textureFormat = TextureFormat.ARGB32, bool apply = true)
		{
			return null;
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0xEAB1C0", Offset = "0xEAB1C0", VA = "0xEAB1C0", Slot = "15")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB1C3A0", Offset = "0xB1C3A0")]
		protected virtual Texture2D LegacyScreenCapture(Resolution resolution, int scale, TextureFormat textureFormat = TextureFormat.ARGB32, bool apply = true)
		{
			return null;
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0xEAB3DC", Offset = "0xEAB3DC", VA = "0xEAB3DC", Slot = "16")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB1C3D8", Offset = "0xB1C3D8")]
		protected virtual Texture2D ScreenCaptureWithCutout(int scale, TextureFormat textureFormat = TextureFormat.ARGB32, bool apply = true)
		{
			return null;
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0xEAB804", Offset = "0xEAB804", VA = "0xEAB804", Slot = "17")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB1C410", Offset = "0xB1C410")]
		protected virtual Texture2D CombinedRenderTextures(Camera[] camerasToUse, Resolution resolution, int scale, TextureFormat textureFormat = TextureFormat.ARGB32, int depth = 24, bool apply = true)
		{
			return null;
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0xEABD58", Offset = "0xEABD58", VA = "0xEABD58")]
		private void OnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6001161")]
		[Address(RVA = "0xEABD68", Offset = "0xEABD68", VA = "0xEABD68", Slot = "18")]
		protected virtual void NewSceneLoaded()
		{
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0xEA9630", Offset = "0xEA9630", VA = "0xEA9630")]
		public void RefeshCanvasList()
		{
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0xEABFF0", Offset = "0xEABFF0", VA = "0xEABFF0", Slot = "19")]
		public virtual void AnyCameraChanged()
		{
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0xEAC334", Offset = "0xEAC334", VA = "0xEAC334", Slot = "20")]
		public virtual void UpdateDontDestroyOnLoad()
		{
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0xEAC41C", Offset = "0xEAC41C", VA = "0xEAC41C", Slot = "21")]
		protected virtual void CleanUpCameraList()
		{
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0xEAC5E8", Offset = "0xEAC5E8", VA = "0xEAC5E8")]
		protected CaptureScript()
		{
		}
	}
	[Token(Token = "0x2000345")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB15F7C", Offset = "0xB15F7C")]
	[ExecuteInEditMode]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB15F7C", Offset = "0xB15F7C")]
	public class CutoutScript : MonoBehaviour
	{
		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _preview;

		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool temporarilyHidden;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool positionRelative;

		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool clickToSelectPivot;

		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Graphic cutoutGraphic;

		[Token(Token = "0x17000149")]
		public bool preview
		{
			[Token(Token = "0x600116E")]
			[Address(RVA = "0xEAD474", Offset = "0xEAD474", VA = "0xEAD474")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600116F")]
			[Address(RVA = "0xEAD3F8", Offset = "0xEAD3F8", VA = "0xEAD3F8")]
			set
			{
			}
		}

		[Token(Token = "0x1700014A")]
		public Rect rect
		{
			[Token(Token = "0x6001170")]
			[Address(RVA = "0xEAB320", Offset = "0xEAB320", VA = "0xEAB320")]
			get
			{
				return default(Rect);
			}
		}

		[Token(Token = "0x6001171")]
		[Address(RVA = "0xEAD59C", Offset = "0xEAD59C", VA = "0xEAD59C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0xEAB198", Offset = "0xEAB198", VA = "0xEAB198")]
		public void Show()
		{
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0xEAAAF4", Offset = "0xEAAAF4", VA = "0xEAAAF4")]
		public void Hide()
		{
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0xEAD47C", Offset = "0xEAD47C", VA = "0xEAD47C")]
		private void UpdateCutoutGraphic()
		{
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0xEAD5F4", Offset = "0xEAD5F4", VA = "0xEAD5F4")]
		public Rect RectForResolution(Resolution resolution)
		{
			return default(Rect);
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0xEAD9E0", Offset = "0xEAD9E0", VA = "0xEAD9E0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001177")]
		[Address(RVA = "0xEADE78", Offset = "0xEADE78", VA = "0xEADE78")]
		public CutoutScript()
		{
		}
	}
	[Token(Token = "0x2000346")]
	public class GradientTextureGenerator : MonoBehaviour
	{
		[Token(Token = "0x2000347")]
		public enum GradientDirection
		{
			[Token(Token = "0x4001189")]
			LeftToRight,
			[Token(Token = "0x400118A")]
			BottomToTop,
			[Token(Token = "0x400118B")]
			RightToLeft,
			[Token(Token = "0x400118C")]
			TopToBottom,
			[Token(Token = "0x400118D")]
			BottomLeftToTopRight,
			[Token(Token = "0x400118E")]
			TopLeftToBottomRight,
			[Token(Token = "0x400118F")]
			BottomRightToTopLeft,
			[Token(Token = "0x4001190")]
			TopRightToBottomLeft
		}

		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Gradient gradient;

		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GradientColorKey[] colorKey;

		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GradientAlphaKey[] alphaKey;

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GradientDirection direction;

		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int width;

		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int height;

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ScreenshotFileSettings fileSettings;

		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string lastSaveFilePath;

		[Token(Token = "0x6001178")]
		[Address(RVA = "0x1280A14", Offset = "0x1280A14", VA = "0x1280A14")]
		public Texture2D Texture()
		{
			return null;
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0x1280CC8", Offset = "0x1280CC8", VA = "0x1280CC8")]
		public void Save()
		{
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0x1280E20", Offset = "0x1280E20", VA = "0x1280E20")]
		public void SaveToFilePath(Texture2D texture2D, string filePath)
		{
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0x1280DC4", Offset = "0x1280DC4", VA = "0x1280DC4")]
		public void SaveAccordingToFileSettings(Texture2D texture2D, string filePath)
		{
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0x1280B7C", Offset = "0x1280B7C", VA = "0x1280B7C")]
		private float TimeForDirectionAndPosition(GradientDirection direction, float x, float y)
		{
			return default(float);
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0x1280E58", Offset = "0x1280E58", VA = "0x1280E58")]
		public GradientTextureGenerator()
		{
		}
	}
	[Token(Token = "0x2000348")]
	public class MultiLangScreenshotScript : ScreenshotSubComponentScript
	{
		[Token(Token = "0x2000349")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17028", Offset = "0xB17028")]
		private sealed class <TakeScreenshotsForLanguage>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001195")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001196")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001197")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MultiLangScreenshotScript <>4__this;

			[Token(Token = "0x4001198")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ScreenshotScript.CaptureAndSaveRoutine captureAndSaveRoutine;

			[Token(Token = "0x4001199")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool save;

			[Token(Token = "0x400119A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <originalCount>5__2;

			[Token(Token = "0x400119B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private bool <originalIncludeLanguageInPath>5__3;

			[Token(Token = "0x400119C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private SystemLanguage[] <>7__wrap3;

			[Token(Token = "0x400119D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <>7__wrap4;

			[Token(Token = "0x1700014B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001187")]
				[Address(RVA = "0x1283124", Offset = "0x1283124", VA = "0x1283124", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700014C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001189")]
				[Address(RVA = "0x128318C", Offset = "0x128318C", VA = "0x128318C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001184")]
			[Address(RVA = "0x1282C10", Offset = "0x1282C10", VA = "0x1282C10")]
			[DebuggerHidden]
			public <TakeScreenshotsForLanguage>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6001185")]
			[Address(RVA = "0x1282C98", Offset = "0x1282C98", VA = "0x1282C98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001186")]
			[Address(RVA = "0x1282C9C", Offset = "0x1282C9C", VA = "0x1282C9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001188")]
			[Address(RVA = "0x128312C", Offset = "0x128312C", VA = "0x128312C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScreenshotSeriesScript screenshotSeriesScript;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<SystemLanguage> LanguageChanged;

		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static SystemLanguage currentLanguage;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SystemLanguage[] languages;

		[Token(Token = "0x600117E")]
		[Address(RVA = "0x128272C", Offset = "0x128272C", VA = "0x128272C", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0x1282904", Offset = "0x1282904", VA = "0x1282904")]
		public void TakeAllMultiLangScreenshots(bool save = true)
		{
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0x1282AA0", Offset = "0x1282AA0", VA = "0x1282AA0")]
		public void TakeMultiLangScreenshotSeries(bool save = true)
		{
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0x1282A18", Offset = "0x1282A18", VA = "0x1282A18")]
		private IEnumerator TakeScreenshotsForLanguage(ScreenshotScript.CaptureAndSaveRoutine captureAndSaveRoutine, bool save = true)
		{
			return null;
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0x1282C3C", Offset = "0x1282C3C", VA = "0x1282C3C")]
		public MultiLangScreenshotScript()
		{
		}
	}
	[Token(Token = "0x200034A")]
	public class TextureCombinator : MonoBehaviour
	{
		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D backgroundTexture;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture2D foregroundTexture;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 foregroundPosition;

		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextureTransformation.LayerPositionPoint foregroundPositionPoint;

		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool positionForegroundRelative;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color emptySpaceFillColor;

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool useAlphaBlend;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool solidify;

		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ScreenshotFileSettings fileSettings;

		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string lastSaveFilePath;

		[Token(Token = "0x600118A")]
		[Address(RVA = "0x128F624", Offset = "0x128F624", VA = "0x128F624")]
		public Texture2D Texture()
		{
			return null;
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0x128F7C8", Offset = "0x128F7C8", VA = "0x128F7C8")]
		public void Save()
		{
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0x128F940", Offset = "0x128F940", VA = "0x128F940")]
		public void SaveToFilePath(Texture2D texture2D, string filePath)
		{
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0x128F8E4", Offset = "0x128F8E4", VA = "0x128F8E4")]
		public void SaveAccordingToFileSettings(Texture2D texture2D, string filePath)
		{
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0x128F978", Offset = "0x128F978", VA = "0x128F978")]
		public TextureCombinator()
		{
		}
	}
	[Token(Token = "0x200034B")]
	public class TextureEditorScript : MonoBehaviour
	{
		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D texture;

		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool copyBeforeEdit;

		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextureTransformation[] frameTransformations;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ScreenshotFileSettings fileSettings;

		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string lastSaveFilePath;

		[Token(Token = "0x600118F")]
		[Address(RVA = "0x128F990", Offset = "0x128F990", VA = "0x128F990")]
		public Texture2D Texture()
		{
			return null;
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0x128F9D8", Offset = "0x128F9D8", VA = "0x128F9D8")]
		public void Save()
		{
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0x128FB00", Offset = "0x128FB00", VA = "0x128FB00")]
		public void SaveToFilePath(Texture2D textureToSave, string filePath)
		{
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0x128FB38", Offset = "0x128FB38", VA = "0x128FB38")]
		public TextureEditorScript()
		{
		}
	}
	[Token(Token = "0x200034C")]
	public class TimeActivateScript : MonoBehaviour
	{
		[Token(Token = "0x200034D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17038", Offset = "0xB17038")]
		private sealed class <UpdateAfterDelay>d__19 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40011BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40011BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40011C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float time;

			[Token(Token = "0x40011C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TimeActivateScript <>4__this;

			[Token(Token = "0x1700014D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600119C")]
				[Address(RVA = "0xE4169C", Offset = "0xE4169C", VA = "0xE4169C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700014E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600119E")]
				[Address(RVA = "0xE41704", Offset = "0xE41704", VA = "0xE41704", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001199")]
			[Address(RVA = "0xE415B8", Offset = "0xE415B8", VA = "0xE415B8")]
			[DebuggerHidden]
			public <UpdateAfterDelay>d__19(int <>1__state)
			{
			}

			[Token(Token = "0x600119A")]
			[Address(RVA = "0xE415E4", Offset = "0xE415E4", VA = "0xE415E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600119B")]
			[Address(RVA = "0xE415E8", Offset = "0xE415E8", VA = "0xE415E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600119D")]
			[Address(RVA = "0xE416A4", Offset = "0xE416A4", VA = "0xE416A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool editorOnly;

		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool sunday;

		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool monday;

		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool tuesday;

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool wednesday;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool thursday;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		public bool friday;

		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
		public bool saturday;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB195E0", Offset = "0xB195E0")]
		public int startHour;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB195F8", Offset = "0xB195F8")]
		public int startMinutes;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB19614", Offset = "0xB19614")]
		public int endHour;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB1962C", Offset = "0xB1962C")]
		public int endMinutes;

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool forceHidden;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool[] activeDay;

		[NonSerialized]
		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool active;

		[NonSerialized]
		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool isParent;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TimeActivateScript[] otherTimeScripts;

		[Token(Token = "0x6001193")]
		[Address(RVA = "0x128FF94", Offset = "0x128FF94", VA = "0x128FF94")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001194")]
		[Address(RVA = "0x129023C", Offset = "0x129023C", VA = "0x129023C")]
		private void CheckIfShouldDisplay()
		{
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0x12907E0", Offset = "0x12907E0", VA = "0x12907E0")]
		private IEnumerator UpdateAfterDelay(float time)
		{
			return null;
		}

		[Token(Token = "0x6001196")]
		[Address(RVA = "0x1290118", Offset = "0x1290118", VA = "0x1290118")]
		private void CreateActiveDay()
		{
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0x128FFC0", Offset = "0x128FFC0", VA = "0x128FFC0")]
		private void CheckIfIsParent()
		{
		}

		[Token(Token = "0x6001198")]
		[Address(RVA = "0x1290860", Offset = "0x1290860", VA = "0x1290860")]
		public TimeActivateScript()
		{
		}
	}
	[Token(Token = "0x200034E")]
	public class DemoCanSaveButtonScript : MonoBehaviour
	{
		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GifScript gifScript;

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Button button;

		[Token(Token = "0x600119F")]
		[Address(RVA = "0xEAE2F8", Offset = "0xEAE2F8", VA = "0xEAE2F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0xEAE350", Offset = "0xEAE350", VA = "0xEAE350")]
		private void Update()
		{
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0xEAE394", Offset = "0xEAE394", VA = "0xEAE394")]
		public DemoCanSaveButtonScript()
		{
		}
	}
	[Token(Token = "0x200034F")]
	public class DemoCubeSpawnerScript : MonoBehaviour
	{
		[Token(Token = "0x2000350")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17048", Offset = "0xB17048")]
		private sealed class <SpawnCube>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40011C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40011C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40011C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DemoCubeSpawnerScript <>4__this;

			[Token(Token = "0x40011C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <timer>5__2;

			[Token(Token = "0x1700014F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011A8")]
				[Address(RVA = "0xEAE668", Offset = "0xEAE668", VA = "0xEAE668", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000150")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011AA")]
				[Address(RVA = "0xEAE6D0", Offset = "0xEAE6D0", VA = "0xEAE6D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011A5")]
			[Address(RVA = "0xEAE4A4", Offset = "0xEAE4A4", VA = "0xEAE4A4")]
			[DebuggerHidden]
			public <SpawnCube>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60011A6")]
			[Address(RVA = "0xEAE4E0", Offset = "0xEAE4E0", VA = "0xEAE4E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011A7")]
			[Address(RVA = "0xEAE4E4", Offset = "0xEAE4E4", VA = "0xEAE4E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011A9")]
			[Address(RVA = "0xEAE670", Offset = "0xEAE670", VA = "0xEAE670", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject cubePrefab;

		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Interval;

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0xEAE39C", Offset = "0xEAE39C", VA = "0xEAE39C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0xEAE434", Offset = "0xEAE434", VA = "0xEAE434")]
		private IEnumerator SpawnCube()
		{
			return null;
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0xEAE4D0", Offset = "0xEAE4D0", VA = "0xEAE4D0")]
		public DemoCubeSpawnerScript()
		{
		}
	}
	[Token(Token = "0x2000351")]
	public class DemoGifCleanUpScript : MonoBehaviour
	{
		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GifScript gifScript;

		[Token(Token = "0x40011CB")]
		private const string TEMP_DIRECTORY = "Temp";

		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool originalWebPersistValue;

		[Token(Token = "0x40011CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string originalWebDirectory;

		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool originalMobilePersistValue;

		[Token(Token = "0x40011CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string originalIOSDirectory;

		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string originalAndroidDirectory;

		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<string> createdMediaFiles;

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0xEAE6D8", Offset = "0xEAE6D8", VA = "0xEAE6D8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0xEAE974", Offset = "0xEAE974", VA = "0xEAE974")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0xEAEB7C", Offset = "0xEAEB7C", VA = "0xEAEB7C")]
		private void GifSaved(GifScript gifScript, string filePath)
		{
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0xEAEBE4", Offset = "0xEAEBE4", VA = "0xEAEBE4")]
		public DemoGifCleanUpScript()
		{
		}
	}
	[Token(Token = "0x2000352")]
	public class ToggleCaptureModeButtonScript : MonoBehaviour
	{
		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GifScript gifScript;

		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Button previewButton;

		[Token(Token = "0x40011D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text previewText;

		[Token(Token = "0x40011D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Text text;

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0xE4170C", Offset = "0xE4170C", VA = "0xE4170C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0xE41764", Offset = "0xE41764", VA = "0xE41764")]
		private void Start()
		{
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0xE418A8", Offset = "0xE418A8", VA = "0xE418A8")]
		public void ToggleCaptureMode()
		{
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0xE41768", Offset = "0xE41768", VA = "0xE41768")]
		private void UpdateDisplay()
		{
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0xE418F4", Offset = "0xE418F4", VA = "0xE418F4")]
		public ToggleCaptureModeButtonScript()
		{
		}
	}
	[Token(Token = "0x2000353")]
	public class ToggleRecordingButtonScript : MonoBehaviour
	{
		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GifScript gifScript;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text text;

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0xE418FC", Offset = "0xE418FC", VA = "0xE418FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0xE419FC", Offset = "0xE419FC", VA = "0xE419FC")]
		private void Update()
		{
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0xE41A00", Offset = "0xE41A00", VA = "0xE41A00")]
		public void ToggleRecording()
		{
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0xE41958", Offset = "0xE41958", VA = "0xE41958")]
		private void UpdateText()
		{
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0xE41A1C", Offset = "0xE41A1C", VA = "0xE41A1C")]
		public ToggleRecordingButtonScript()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000354")]
	public class GifFileSettings : CaptureFileSettings
	{
		[Token(Token = "0x17000151")]
		public override string encoding
		{
			[Token(Token = "0x60011B9")]
			[Address(RVA = "0x127B928", Offset = "0x127B928", VA = "0x127B928", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0x127B970", Offset = "0x127B970", VA = "0x127B970", Slot = "5")]
		public override void SetUp(int uniqueId, string saveType = "Gifs")
		{
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0x127B9A4", Offset = "0x127B9A4", VA = "0x127B9A4")]
		public GifFileSettings()
		{
		}
	}
	[Token(Token = "0x2000355")]
	public class AsyncCaptureScript : MonoBehaviour
	{
		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action<Color32[]> AsyncCaptureListeners;

		[Token(Token = "0x40011D9")]
		private const int MAX_REQUEST_COUNT = 8;

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int[] cameraLayersUsed;

		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Queue<AsyncGPUReadbackRequest> _requests;

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0xEA6F4C", Offset = "0xEA6F4C", VA = "0xEA6F4C")]
		private void Update()
		{
		}

		[Token(Token = "0x60011BD")]
		[Address(RVA = "0xEA70B4", Offset = "0xEA70B4", VA = "0xEA70B4")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0xEA71C0", Offset = "0xEA71C0", VA = "0xEA71C0")]
		public AsyncCaptureScript()
		{
		}
	}
	[Token(Token = "0x2000356")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB17058", Offset = "0xB17058")]
	public class DisplayGifScript : MonoBehaviour
	{
		[Token(Token = "0x2000357")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB170BC", Offset = "0xB170BC")]
		private sealed class <CopyFramesAsync>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40011EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40011EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40011EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool inPlace;

			[Token(Token = "0x40011ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DisplayGifScript <>4__this;

			[Token(Token = "0x40011EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Texture2D[] newFrames;

			[Token(Token = "0x40011EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Texture2D[] <replacementFrames>5__2;

			[Token(Token = "0x40011F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <i>5__3;

			[Token(Token = "0x17000152")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60011D3")]
				[Address(RVA = "0xEB0A00", Offset = "0xEB0A00", VA = "0xEB0A00", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000153")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60011D5")]
				[Address(RVA = "0xEB0A68", Offset = "0xEB0A68", VA = "0xEB0A68", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60011D0")]
			[Address(RVA = "0xEB06F0", Offset = "0xEB06F0", VA = "0xEB06F0")]
			[DebuggerHidden]
			public <CopyFramesAsync>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x60011D1")]
			[Address(RVA = "0xEB0734", Offset = "0xEB0734", VA = "0xEB0734", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60011D2")]
			[Address(RVA = "0xEB0738", Offset = "0xEB0738", VA = "0xEB0738", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60011D4")]
			[Address(RVA = "0xEB0A08", Offset = "0xEB0A08", VA = "0xEB0A08", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool loadGifAfterTaken;

		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool loadGifAfterSaved;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool copyBeforeReset;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float framesPerSecond;

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float timePerFrame;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture2D[] frames;

		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text errorText;

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private RawImage rawImage;

		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UniGifImage uniGifImage;

		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private AspectFitScript aspectFitScript;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private UniGifImageAspectController uniGifImageAspectController;

		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool setup;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Color transparentColor;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private IEnumerator copyCoroutine;

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0xEAF678", Offset = "0xEAF678", VA = "0xEAF678")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011C0")]
		[Address(RVA = "0xEAF688", Offset = "0xEAF688", VA = "0xEAF688")]
		private void Setup()
		{
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0xEAF784", Offset = "0xEAF784", VA = "0xEAF784")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0xEAF994", Offset = "0xEAF994", VA = "0xEAF994")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0xEAFBA4", Offset = "0xEAFBA4", VA = "0xEAFBA4")]
		private void Update()
		{
		}

		[Token(Token = "0x60011C4")]
		[Address(RVA = "0xEAFD7C", Offset = "0xEAFD7C", VA = "0xEAFD7C")]
		private void WillReset(GifScript gifScript)
		{
		}

		[Token(Token = "0x60011C5")]
		[Address(RVA = "0xEAFE50", Offset = "0xEAFE50", VA = "0xEAFE50")]
		private void GifTaken(GifScript gifScript, Texture2D[] newFrames, int newFramesPerSecond)
		{
		}

		[Token(Token = "0x60011C6")]
		[Address(RVA = "0xEB00C0", Offset = "0xEB00C0", VA = "0xEB00C0")]
		private void GifSaved(GifScript gifScript, string fullFilePath)
		{
		}

		[Token(Token = "0x60011C7")]
		[Address(RVA = "0xEAFE5C", Offset = "0xEAFE5C", VA = "0xEAFE5C")]
		public void LoadGif(Texture2D[] newFrames, int newFramesPerSecond)
		{
		}

		[Token(Token = "0x60011C8")]
		[Address(RVA = "0xEB0370", Offset = "0xEB0370", VA = "0xEB0370")]
		public void LoadSavedGifFromUrl(string url)
		{
		}

		[Token(Token = "0x60011C9")]
		[Address(RVA = "0xEB00C8", Offset = "0xEB00C8", VA = "0xEB00C8")]
		public void LoadSavedGif(string fullFilePath)
		{
		}

		[Token(Token = "0x60011CA")]
		[Address(RVA = "0xEAFDD0", Offset = "0xEAFDD0", VA = "0xEAFDD0")]
		private void CopyFrames(Texture2D[] newFrames, bool async = true, bool inPlace = true)
		{
		}

		[Token(Token = "0x60011CB")]
		[Address(RVA = "0xEB0618", Offset = "0xEB0618", VA = "0xEB0618")]
		private void SynchronousCopyFrames(Texture2D[] newFrames, bool inPlace = true)
		{
		}

		[Token(Token = "0x60011CC")]
		[Address(RVA = "0xEB0590", Offset = "0xEB0590", VA = "0xEB0590")]
		private IEnumerator CopyFramesAsync(Texture2D[] newFrames, bool inPlace = true)
		{
			return null;
		}

		[Token(Token = "0x60011CD")]
		[Address(RVA = "0xEB03B4", Offset = "0xEB03B4", VA = "0xEB03B4")]
		private void ClearFrames()
		{
		}

		[Token(Token = "0x60011CE")]
		[Address(RVA = "0xEB0494", Offset = "0xEB0494", VA = "0xEB0494")]
		private void AddUniGifImageIfNecessary()
		{
		}

		[Token(Token = "0x60011CF")]
		[Address(RVA = "0xEB071C", Offset = "0xEB071C", VA = "0xEB071C")]
		public DisplayGifScript()
		{
		}
	}
	[Token(Token = "0x2000358")]
	public class HideDuringGifScript : MonoBehaviour
	{
		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool disableAfterAwake;

		[Token(Token = "0x60011D6")]
		[Address(RVA = "0x1280E60", Offset = "0x1280E60", VA = "0x1280E60")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011D7")]
		[Address(RVA = "0x1280FE8", Offset = "0x1280FE8", VA = "0x1280FE8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60011D8")]
		[Address(RVA = "0x1281138", Offset = "0x1281138", VA = "0x1281138")]
		private void Enable(GifScript gifScript, Texture2D[] gifFrames, int fps)
		{
		}

		[Token(Token = "0x60011D9")]
		[Address(RVA = "0x1281160", Offset = "0x1281160", VA = "0x1281160")]
		private void Disable(GifScript gifScript, int width, int height)
		{
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0x1281188", Offset = "0x1281188", VA = "0x1281188")]
		public HideDuringGifScript()
		{
		}
	}
	[Token(Token = "0x2000359")]
	public class ShowDuringGifScript : MonoBehaviour
	{
		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool disableAfterAwake;

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0x128EA80", Offset = "0x128EA80", VA = "0x128EA80")]
		private void Awake()
		{
		}

		[Token(Token = "0x60011DC")]
		[Address(RVA = "0x128EC08", Offset = "0x128EC08", VA = "0x128EC08")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60011DD")]
		[Address(RVA = "0x128ED58", Offset = "0x128ED58", VA = "0x128ED58")]
		private void Enable(GifScript gifScript, int width, int height)
		{
		}

		[Token(Token = "0x60011DE")]
		[Address(RVA = "0x128ED80", Offset = "0x128ED80", VA = "0x128ED80")]
		private void Disable(GifScript gifScript, Texture2D[] gifFrames, int fps)
		{
		}

		[Token(Token = "0x60011DF")]
		[Address(RVA = "0x128EDA8", Offset = "0x128EDA8", VA = "0x128EDA8")]
		public ShowDuringGifScript()
		{
		}
	}
	[Token(Token = "0x200035A")]
	public sealed class GifScript : CaptureScript
	{
		[Serializable]
		[Token(Token = "0x200035B")]
		public enum GifCaptureMode
		{
			[Token(Token = "0x400124B")]
			ScreenCapture,
			[Token(Token = "0x400124C")]
			SingleCamera,
			[Token(Token = "0x400124D")]
			MultiCamera,
			[Token(Token = "0x400124E")]
			Async
		}

		[Serializable]
		[Token(Token = "0x200035C")]
		public enum GifCaptureRate
		{
			[Token(Token = "0x4001250")]
			FPS,
			[Token(Token = "0x4001251")]
			EveryXFrames,
			[Token(Token = "0x4001252")]
			NaturalTiming,
			[Token(Token = "0x4001253")]
			VRHybrid
		}

		[Token(Token = "0x200035D")]
		public enum RecorderState
		{
			[Token(Token = "0x4001255")]
			None,
			[Token(Token = "0x4001256")]
			Recording,
			[Token(Token = "0x4001257")]
			Paused,
			[Token(Token = "0x4001258")]
			PreProcessing
		}

		[Token(Token = "0x200035E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB170CC", Offset = "0xB170CC")]
		private sealed class <>c__DisplayClass128_0
		{
			[Token(Token = "0x4001259")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string gifFilePath;

			[Token(Token = "0x400125A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GifScript <>4__this;

			[Token(Token = "0x6001221")]
			[Address(RVA = "0x127C79C", Offset = "0x127C79C", VA = "0x127C79C")]
			public <>c__DisplayClass128_0()
			{
			}

			[Token(Token = "0x6001222")]
			[Address(RVA = "0x127F434", Offset = "0x127F434", VA = "0x127F434")]
			internal void <LoadGifAtFilePath>b__0(List<UniGif.GifTexture> gifTextureList, int loopCount, int width, int height)
			{
			}
		}

		[Token(Token = "0x200035F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB170DC", Offset = "0xB170DC")]
		private sealed class <PrepareAndRecord>d__133 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400125B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400125C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400125D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GifScript <>4__this;

			[Token(Token = "0x17000162")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001226")]
				[Address(RVA = "0x128083C", Offset = "0x128083C", VA = "0x128083C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000163")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001228")]
				[Address(RVA = "0x12808A4", Offset = "0x12808A4", VA = "0x12808A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001223")]
			[Address(RVA = "0x127CD50", Offset = "0x127CD50", VA = "0x127CD50")]
			[DebuggerHidden]
			public <PrepareAndRecord>d__133(int <>1__state)
			{
			}

			[Token(Token = "0x6001224")]
			[Address(RVA = "0x1280528", Offset = "0x1280528", VA = "0x1280528", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001225")]
			[Address(RVA = "0x128052C", Offset = "0x128052C", VA = "0x128052C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001227")]
			[Address(RVA = "0x1280844", Offset = "0x1280844", VA = "0x1280844", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000360")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB170EC", Offset = "0xB170EC")]
		private sealed class <CaptureFrames>d__146 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400125E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400125F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001260")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GifScript <>4__this;

			[Token(Token = "0x17000164")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600122C")]
				[Address(RVA = "0x127F9DC", Offset = "0x127F9DC", VA = "0x127F9DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000165")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600122E")]
				[Address(RVA = "0x127FA44", Offset = "0x127FA44", VA = "0x127FA44", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001229")]
			[Address(RVA = "0x127DE48", Offset = "0x127DE48", VA = "0x127DE48")]
			[DebuggerHidden]
			public <CaptureFrames>d__146(int <>1__state)
			{
			}

			[Token(Token = "0x600122A")]
			[Address(RVA = "0x127F6CC", Offset = "0x127F6CC", VA = "0x127F6CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600122B")]
			[Address(RVA = "0x127F6D0", Offset = "0x127F6D0", VA = "0x127F6D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600122D")]
			[Address(RVA = "0x127F9E4", Offset = "0x127F9E4", VA = "0x127F9E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000361")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB170FC", Offset = "0xB170FC")]
		private sealed class <PreProcess>d__148 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001261")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001262")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001263")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GifScript <>4__this;

			[Token(Token = "0x4001264")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int firstFrame;

			[Token(Token = "0x4001265")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public int lastFrame;

			[Token(Token = "0x4001266")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool reset;

			[Token(Token = "0x4001267")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
			public bool save;

			[Token(Token = "0x4001268")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
			public bool temp;

			[Token(Token = "0x4001269")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string fullFilePath;

			[Token(Token = "0x400126A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <lastPossibleFrame>5__2;

			[Token(Token = "0x400126B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private List<GifFrame> <gifFrames>5__3;

			[Token(Token = "0x400126C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private List<Texture2D> <frameTextures>5__4;

			[Token(Token = "0x400126D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private float <framesToProcess>5__5;

			[Token(Token = "0x400126E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			private int <i>5__6;

			[Token(Token = "0x17000166")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001232")]
				[Address(RVA = "0x12804B8", Offset = "0x12804B8", VA = "0x12804B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000167")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001234")]
				[Address(RVA = "0x1280520", Offset = "0x1280520", VA = "0x1280520", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600122F")]
			[Address(RVA = "0x127DE74", Offset = "0x127DE74", VA = "0x127DE74")]
			[DebuggerHidden]
			public <PreProcess>d__148(int <>1__state)
			{
			}

			[Token(Token = "0x6001230")]
			[Address(RVA = "0x127FA4C", Offset = "0x127FA4C", VA = "0x127FA4C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001231")]
			[Address(RVA = "0x127FA50", Offset = "0x127FA50", VA = "0x127FA50", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001233")]
			[Address(RVA = "0x12804C0", Offset = "0x12804C0", VA = "0x12804C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000362")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1710C", Offset = "0xB1710C")]
		private sealed class <>c__DisplayClass150_0
		{
			[Token(Token = "0x400126F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GifScript <>4__this;

			[Token(Token = "0x4001270")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string fullFilePath;

			[Token(Token = "0x6001235")]
			[Address(RVA = "0x127E160", Offset = "0x127E160", VA = "0x127E160")]
			public <>c__DisplayClass150_0()
			{
			}

			[Token(Token = "0x6001236")]
			[Address(RVA = "0x127F610", Offset = "0x127F610", VA = "0x127F610")]
			internal void <OnWorkerSavedGif>b__0(bool success, string path)
			{
			}
		}

		[Token(Token = "0x2000363")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1711C", Offset = "0xB1711C")]
		private sealed class <SwitchToRecordResolution>d__155 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001271")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001272")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001273")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GifScript <>4__this;

			[Token(Token = "0x17000168")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600123A")]
				[Address(RVA = "0x12809A4", Offset = "0x12809A4", VA = "0x12809A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000169")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600123C")]
				[Address(RVA = "0x1280A0C", Offset = "0x1280A0C", VA = "0x1280A0C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001237")]
			[Address(RVA = "0x127E268", Offset = "0x127E268", VA = "0x127E268")]
			[DebuggerHidden]
			public <SwitchToRecordResolution>d__155(int <>1__state)
			{
			}

			[Token(Token = "0x6001238")]
			[Address(RVA = "0x12808AC", Offset = "0x12808AC", VA = "0x12808AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001239")]
			[Address(RVA = "0x12808B0", Offset = "0x12808B0", VA = "0x12808B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600123B")]
			[Address(RVA = "0x12809AC", Offset = "0x12809AC", VA = "0x12809AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40011F3")]
		public const string version = "3.25";

		[Token(Token = "0x40011F4")]
		private const string TRS_GIF_MAX_INSTANCES_KEY = "TRS_GIF_MAX_INSTANCES_KEY";

		[Token(Token = "0x40011F5")]
		private const string TEMP_FOLDER = "Temp";

		[Token(Token = "0x40011F6")]
		private const string TEMP_GIF_FILE_NAME = "TempGif.gif";

		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<GifScript, RecorderState> RecorderStateChanged;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<GifScript, int, int> WillTakeGif;

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<GifScript, Texture2D[], int> GifTaken;

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<GifScript, Texture2D[], int> GifToSave;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action<GifScript, float> GifSaveProgress;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Action<GifScript, string> GifSaved;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Action<GifScript> WillResetGif;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static Action<GifScript> GifReset;

		[Token(Token = "0x40011FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static Action<int, float> WorkerGifSaveProgress;

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static Action<int, string> WorkerSavedGif;

		[Token(Token = "0x4001201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static bool maxInstancesLoaded;

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private static int cachedMaxInstances;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private static List<GifScript> instances;

		[Token(Token = "0x4001204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public GifCaptureMode captureMode;

		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public int altScreenCaptureModeScale;

		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public bool oneFrameOnly;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12D")]
		public bool stopAutomatically;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public GifCaptureRate captureRate;

		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public int captureEveryXFrame;

		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public bool prepareForPreviewDuringFrameCapture;

		[Token(Token = "0x400120B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
		public bool prepareForPreviewDuringFrameCaptureInEditor;

		[Token(Token = "0x400120C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13A")]
		public bool adjustTimeForCapture;

		[Token(Token = "0x400120D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13B")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB19648", Offset = "0xB19648")]
		[SerializeField]
		private bool useDifferentPlaybackSpeed;

		[Token(Token = "0x400120E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[SerializeField]
		private int captureFramesPerSecond;

		[Token(Token = "0x400120F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB196A4", Offset = "0xB196A4")]
		private float <captureTimePerFrame>k__BackingField;

		[Token(Token = "0x4001210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB196B4", Offset = "0xB196B4")]
		[SerializeField]
		private int differentPlaybackFramesPerSecond;

		[Token(Token = "0x4001211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB19700", Offset = "0xB19700")]
		private float <playbackTimePerFrame>k__BackingField;

		[Token(Token = "0x4001212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		public int durationInSeconds;

		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private int originalCaptureFrameRate;

		[Token(Token = "0x4001214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private bool originalResolutionLockedIn;

		[Token(Token = "0x4001215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Resolution originalResolution;

		[Token(Token = "0x4001216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		public bool resizeBeforeRecording;

		[Token(Token = "0x4001217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x165")]
		public bool useScaleToResizeBeforeRecording;

		[Token(Token = "0x4001218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public float recordWidthScale;

		[Token(Token = "0x4001219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		public float recordHeightScale;

		[Token(Token = "0x400121A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public int recordWidth;

		[Token(Token = "0x400121B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		public int recordHeight;

		[Token(Token = "0x400121C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public Resolution recordResolution;

		[Token(Token = "0x400121D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		public bool resizeAfterRecording;

		[Token(Token = "0x400121E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x185")]
		public bool useScaleToResizeAfterRecording;

		[Token(Token = "0x400121F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public float resizeScale;

		[Token(Token = "0x4001220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		public int resizeWidth;

		[Token(Token = "0x4001221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public Resolution resizeResolution;

		[Token(Token = "0x4001222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		public ThreadPriority workerPriority;

		[Token(Token = "0x4001223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public bool pingPongMode;

		[Token(Token = "0x4001224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A1")]
		public bool reverseMode;

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A2")]
		public bool infiniteLoop;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		public int repeatCount;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB19710", Offset = "0xB19710")]
		public int quality;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		public bool resetAfterSave;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AD")]
		public bool useTransparency;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public Color32 transparencyColor;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		private bool originalRunInBackground;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1972C", Offset = "0xB1972C")]
		private float <processProgress>k__BackingField;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1973C", Offset = "0xB1973C")]
		private float <saveProgress>k__BackingField;

		[Token(Token = "0x400122E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public GifFileSettings fileSettings;

		[Token(Token = "0x400122F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public string tempGifFilePath;

		[Token(Token = "0x4001230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public HotKeySet takeGifKeySet;

		[Token(Token = "0x4001231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public HotKeySet takeOneFrameKeySet;

		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public HotKeySet saveGifKeySet;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public HotKeySet resetGifKeySet;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public bool playGifRecordAudioInGame;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F1")]
		public bool playGifPauseAudioInGame;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public AudioSource gifRecordAudioSource;

		[Token(Token = "0x4001237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public AudioSource gifPauseAudioSource;

		[Token(Token = "0x4001238")]
		private const int KILOBYTES_PER_MEGABYTE = 1024;

		[Token(Token = "0x4001239")]
		private const int BYTES_PER_KILOBYTE = 1024;

		[Token(Token = "0x400123A")]
		private const int BYTES_PER_COLOR_WITH_ALPHA = 4;

		[Token(Token = "0x400123B")]
		private const int BYTES_PER_COLOR_WITHOUT_ALPHA = 3;

		[Token(Token = "0x400123C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private float timeSinceLastFrame;

		[Token(Token = "0x400123D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		private int lastFrameRecorded;

		[Token(Token = "0x400123E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private RecorderState _recorderState;

		[Token(Token = "0x400123F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public List<TransformableTexture> frames;

		[Token(Token = "0x4001240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private AsyncCaptureScript asyncCaptureScript;

		[Token(Token = "0x4001241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private OnRenderImageScript onRenderImageScript;

		[Token(Token = "0x4001242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private IEnumerator captureCoroutine;

		[Token(Token = "0x4001243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[SerializeField]
		private bool lastSaveWasTemp;

		[Token(Token = "0x4001244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x239")]
		[SerializeField]
		private bool tempFileSettingsCurrent;

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		[SerializeField]
		private int tempFileFirstFrame;

		[Token(Token = "0x4001246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		[SerializeField]
		private int tempFileLastFrame;

		[Token(Token = "0x4001247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		[SerializeField]
		private float delayStartTime;

		[Token(Token = "0x4001248")]
		private const int FILE_SIZE_LEVEL = 1024;

		[Token(Token = "0x4001249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static string[] fileSizes;

		[Token(Token = "0x17000154")]
		public override bool useCanvasesAdjuster
		{
			[Token(Token = "0x60011E0")]
			[Address(RVA = "0x127B9AC", Offset = "0x127B9AC", VA = "0x127B9AC", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000155")]
		public bool prepareForPreview
		{
			[Token(Token = "0x60011E1")]
			[Address(RVA = "0x127BA40", Offset = "0x127BA40", VA = "0x127BA40")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000156")]
		[SerializeField]
		public float captureTimePerFrame
		{
			[Token(Token = "0x60011E2")]
			[Address(RVA = "0x127BA68", Offset = "0x127BA68", VA = "0x127BA68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C588", Offset = "0xB1C588")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60011E3")]
			[Address(RVA = "0x127BA70", Offset = "0x127BA70", VA = "0x127BA70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C598", Offset = "0xB1C598")]
			private set
			{
			}
		}

		[Token(Token = "0x17000157")]
		public int playbackFramesPerSecond
		{
			[Token(Token = "0x60011E4")]
			[Address(RVA = "0x127BA78", Offset = "0x127BA78", VA = "0x127BA78")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000158")]
		[SerializeField]
		public float playbackTimePerFrame
		{
			[Token(Token = "0x60011E5")]
			[Address(RVA = "0x127BA94", Offset = "0x127BA94", VA = "0x127BA94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C5A8", Offset = "0xB1C5A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60011E6")]
			[Address(RVA = "0x127BA9C", Offset = "0x127BA9C", VA = "0x127BA9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C5B8", Offset = "0xB1C5B8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000159")]
		public int resizeHeight
		{
			[Token(Token = "0x60011E7")]
			[Address(RVA = "0x127BAA4", Offset = "0x127BAA4", VA = "0x127BAA4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700015A")]
		public float processProgress
		{
			[Token(Token = "0x60011E8")]
			[Address(RVA = "0x127BBFC", Offset = "0x127BBFC", VA = "0x127BBFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C5C8", Offset = "0xB1C5C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60011E9")]
			[Address(RVA = "0x127BC04", Offset = "0x127BC04", VA = "0x127BC04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C5D8", Offset = "0xB1C5D8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700015B")]
		public float saveProgress
		{
			[Token(Token = "0x60011EA")]
			[Address(RVA = "0x127BC0C", Offset = "0x127BC0C", VA = "0x127BC0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C5E8", Offset = "0xB1C5E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60011EB")]
			[Address(RVA = "0x127BC14", Offset = "0x127BC14", VA = "0x127BC14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C5F8", Offset = "0xB1C5F8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700015C")]
		public bool saving
		{
			[Token(Token = "0x60011EC")]
			[Address(RVA = "0x127BC1C", Offset = "0x127BC1C", VA = "0x127BC1C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700015D")]
		public int totalFrameCount
		{
			[Token(Token = "0x60011ED")]
			[Address(RVA = "0x127BC30", Offset = "0x127BC30", VA = "0x127BC30")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700015E")]
		public int maxFrameCount
		{
			[Token(Token = "0x60011EE")]
			[Address(RVA = "0x127BC80", Offset = "0x127BC80", VA = "0x127BC80")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700015F")]
		public float estimatedPeakMemoryUse
		{
			[Token(Token = "0x60011EF")]
			[Address(RVA = "0x127BCFC", Offset = "0x127BCFC", VA = "0x127BCFC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000160")]
		public RecorderState recorderState
		{
			[Token(Token = "0x60011F0")]
			[Address(RVA = "0x127BDA4", Offset = "0x127BDA4", VA = "0x127BDA4")]
			get
			{
				return default(RecorderState);
			}
			[Token(Token = "0x60011F1")]
			[Address(RVA = "0x127BDAC", Offset = "0x127BDAC", VA = "0x127BDAC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000161")]
		public bool anythingToSave
		{
			[Token(Token = "0x60011F2")]
			[Address(RVA = "0x127BE7C", Offset = "0x127BE7C", VA = "0x127BE7C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0x127BED4", Offset = "0x127BED4", VA = "0x127BED4", Slot = "7")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0x127C174", Offset = "0x127C174", VA = "0x127C174", Slot = "9")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0x127C354", Offset = "0x127C354", VA = "0x127C354", Slot = "10")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0x127C4B0", Offset = "0x127C4B0", VA = "0x127C4B0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0x127C5E4", Offset = "0x127C5E4", VA = "0x127C5E4")]
		public void SetUseDifferentPlaybackSpeed(bool differentPlaybackSpeed)
		{
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0x127BF30", Offset = "0x127BF30", VA = "0x127BF30")]
		public void SetCaptureFramesPerSecond(int fps)
		{
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0x127C058", Offset = "0x127C058", VA = "0x127C058")]
		public void SetPlaybackFramesPerSecond(int fps)
		{
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0x127C5FC", Offset = "0x127C5FC", VA = "0x127C5FC")]
		public void LoadGifAtFilePath(string gifFilePath)
		{
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0x127C7A4", Offset = "0x127C7A4", VA = "0x127C7A4")]
		public void ToggleRecording()
		{
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0x127C84C", Offset = "0x127C84C", VA = "0x127C84C")]
		public void Record()
		{
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0x127CD14", Offset = "0x127CD14", VA = "0x127CD14")]
		public void RecordOneFrame()
		{
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0x127CBE4", Offset = "0x127CBE4", VA = "0x127CBE4")]
		public bool AlreadyRecording()
		{
			return default(bool);
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0x127CCA4", Offset = "0x127CCA4", VA = "0x127CCA4")]
		private IEnumerator PrepareAndRecord()
		{
			return null;
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0x127C95C", Offset = "0x127C95C", VA = "0x127C95C")]
		public void Pause()
		{
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0x127CF60", Offset = "0x127CF60", VA = "0x127CF60")]
		public void PrepareForPreview()
		{
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0x127D00C", Offset = "0x127D00C", VA = "0x127D00C")]
		public void RemoveFrames(int firstFrame, int lastFrame)
		{
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0x127D01C", Offset = "0x127D01C", VA = "0x127D01C")]
		public void RemoveFramesRange(int firstFrame, int count)
		{
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0x127D08C", Offset = "0x127D08C", VA = "0x127D08C")]
		public void RemoveFrame(int frameIndex)
		{
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0x127D0F4", Offset = "0x127D0F4", VA = "0x127D0F4")]
		public void RequestFrames(int firstFrame = 0, int lastFrame = -1)
		{
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0x127D2C0", Offset = "0x127D2C0", VA = "0x127D2C0")]
		public Texture2D[] GetFrames(int firstFrame = 0, int lastFrame = -1)
		{
			return null;
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0x127D3C4", Offset = "0x127D3C4", VA = "0x127D3C4")]
		public void Save()
		{
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0x127D420", Offset = "0x127D420", VA = "0x127D420")]
		public void Save(string fullFilePath = "", int firstFrame = 0, int lastFrame = -1, bool temp = false)
		{
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0x127C4B4", Offset = "0x127C4B4", VA = "0x127C4B4")]
		public void Reset()
		{
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0x127D6A8", Offset = "0x127D6A8", VA = "0x127D6A8")]
		private void NewAsyncCapture(Color32[] buffer)
		{
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0x127DB30", Offset = "0x127DB30", VA = "0x127DB30")]
		private void NewRenderTexture(RenderTexture source)
		{
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0x127DDD8", Offset = "0x127DDD8", VA = "0x127DDD8")]
		private IEnumerator CaptureFrames()
		{
			return null;
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0x127CD7C", Offset = "0x127CD7C", VA = "0x127CD7C")]
		private Texture2D[] SynchronousPreProcess(bool save, string fullFilePath = "", int firstFrame = 0, int lastFrame = -1, bool reset = false, bool temp = false)
		{
			return null;
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0x127D200", Offset = "0x127D200", VA = "0x127D200")]
		private IEnumerator PreProcess(bool save, string fullFilePath = "", int firstFrame = 0, int lastFrame = -1, bool reset = false, bool temp = false)
		{
			return null;
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0x127DEA0", Offset = "0x127DEA0", VA = "0x127DEA0")]
		private void OnWorkerGifSaveProgress(int worderId, float progress)
		{
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0x127DF70", Offset = "0x127DF70", VA = "0x127DF70")]
		private void OnWorkerSavedGif(int workerId, string fullFilePath)
		{
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0x127D548", Offset = "0x127D548", VA = "0x127D548")]
		private void FlushMemory()
		{
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0x127D8D8", Offset = "0x127D8D8", VA = "0x127D8D8")]
		private bool ShouldAddFrame()
		{
			return default(bool);
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0x127E168", Offset = "0x127E168", VA = "0x127E168", Slot = "12")]
		protected override void PrepareToCapture()
		{
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0x127E1B8", Offset = "0x127E1B8", VA = "0x127E1B8", Slot = "13")]
		protected override void RestoreAfterCapture()
		{
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0x127E1F8", Offset = "0x127E1F8", VA = "0x127E1F8")]
		private IEnumerator SwitchToRecordResolution()
		{
			return null;
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0x127E294", Offset = "0x127E294", VA = "0x127E294")]
		public void UpdateResolutions()
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0x127E5B0", Offset = "0x127E5B0", VA = "0x127E5B0")]
		public string BytesToMaxWholeNumberSize(long bytes, int decimalPrecision = 1)
		{
			return null;
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0x127E6E0", Offset = "0x127E6E0", VA = "0x127E6E0")]
		public string SizeOfFile(string fullFilePath, int decimalPrecision = 1)
		{
			return null;
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0x127E768", Offset = "0x127E768", VA = "0x127E768", Slot = "20")]
		public override void UpdateDontDestroyOnLoad()
		{
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0x127E8B8", Offset = "0x127E8B8", VA = "0x127E8B8")]
		public void CaptureModeChanged()
		{
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0x127E8E8", Offset = "0x127E8E8", VA = "0x127E8E8", Slot = "19")]
		public override void AnyCameraChanged()
		{
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0x127EF14", Offset = "0x127EF14", VA = "0x127EF14", Slot = "4")]
		public override int GetMaxInstances()
		{
			return default(int);
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0x127F0C4", Offset = "0x127F0C4", VA = "0x127F0C4", Slot = "5")]
		public override void SetMaxInstances(int newValue)
		{
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0x127EFC8", Offset = "0x127EFC8", VA = "0x127EFC8")]
		private static int LoadMaxInstances()
		{
			return default(int);
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0x127F158", Offset = "0x127F158", VA = "0x127F158")]
		public GifScript()
		{
		}
	}
	[Token(Token = "0x2000364")]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB1712C", Offset = "0xB1712C")]
	public class OnRenderImageScript : MonoBehaviour
	{
		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action<RenderTexture> OnRenderImageListeners;

		[Token(Token = "0x600123D")]
		[Address(RVA = "0x12831C8", Offset = "0x12831C8", VA = "0x12831C8")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600123E")]
		[Address(RVA = "0x1283270", Offset = "0x1283270", VA = "0x1283270")]
		public OnRenderImageScript()
		{
		}
	}
	[Token(Token = "0x2000365")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB171A0", Offset = "0xB171A0")]
	[ExecuteInEditMode]
	public class UpdateShareWithGifScript : MonoBehaviour
	{
		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int cachedWidth;

		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int cachedHeight;

		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ShareScript shareScript;

		[Token(Token = "0x600123F")]
		[Address(RVA = "0xE41E10", Offset = "0xE41E10", VA = "0xE41E10")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0xE41FF4", Offset = "0xE41FF4", VA = "0xE41FF4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0xE41EA4", Offset = "0xE41EA4", VA = "0xE41EA4")]
		private void SubscribeToMediaEvents()
		{
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0xE41FF8", Offset = "0xE41FF8", VA = "0xE41FF8")]
		private void UnsubscribeFromMediaEvents()
		{
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0xE42148", Offset = "0xE42148", VA = "0xE42148")]
		private void UpdateMediaSize(GifScript gifScript, int width, int height)
		{
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0xE42150", Offset = "0xE42150", VA = "0xE42150")]
		private void UpdateGifMediaPath(GifScript gifScript, string filePath)
		{
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0xE42158", Offset = "0xE42158", VA = "0xE42158")]
		private void UpdateShareScript(string filePath)
		{
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0xE42198", Offset = "0xE42198", VA = "0xE42198")]
		public UpdateShareWithGifScript()
		{
		}
	}
	[Token(Token = "0x2000366")]
	[ExecuteInEditMode]
	public class DemoLocalizationScript : MonoBehaviour
	{
		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SystemLanguage[] languages;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string[] texts;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<SystemLanguage, string> textForLanguage;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Text text;

		[Token(Token = "0x6001247")]
		[Address(RVA = "0xEAEC54", Offset = "0xEAEC54", VA = "0xEAEC54")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0xEAEC58", Offset = "0xEAEC58", VA = "0xEAEC58")]
		private void Setup()
		{
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0xEAED78", Offset = "0xEAED78", VA = "0xEAED78")]
		private void MergeArraysToDictionary()
		{
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0xEAEF0C", Offset = "0xEAEF0C", VA = "0xEAEF0C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0xEAF090", Offset = "0xEAF090", VA = "0xEAF090")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0xEAF000", Offset = "0xEAF000", VA = "0xEAF000")]
		private void LanguageChanged(SystemLanguage language)
		{
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0xEAF174", Offset = "0xEAF174", VA = "0xEAF174")]
		public DemoLocalizationScript()
		{
		}
	}
	[Token(Token = "0x2000367")]
	public class DemoScreenshotCleanUpScript : MonoBehaviour
	{
		[Token(Token = "0x400127C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ScreenshotScript screenshotScript;

		[Token(Token = "0x400127D")]
		private const string TEMP_DIRECTORY = "TRS_Temp";

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool originalWebPersistValue;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string originalWebDirectory;

		[Token(Token = "0x4001280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool originalMobilePersistValue;

		[Token(Token = "0x4001281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string originalIOSDirectory;

		[Token(Token = "0x4001282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string originalAndroidDirectory;

		[Token(Token = "0x4001283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<string> createdMediaFiles;

		[Token(Token = "0x600124E")]
		[Address(RVA = "0xEAF17C", Offset = "0xEAF17C", VA = "0xEAF17C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0xEAF398", Offset = "0xEAF398", VA = "0xEAF398")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0xEAF5A0", Offset = "0xEAF5A0", VA = "0xEAF5A0")]
		private void ScreenshotSaved(ScreenshotScript screenshotScript, string filePath)
		{
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0xEAF608", Offset = "0xEAF608", VA = "0xEAF608")]
		public DemoScreenshotCleanUpScript()
		{
		}
	}
	[Token(Token = "0x2000368")]
	public class FramedScreenshotScript : MonoBehaviour
	{
		[Token(Token = "0x4001284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private RawImage screenshotImage;

		[Token(Token = "0x4001285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float frameScaleX;

		[Token(Token = "0x4001286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float frameScaleY;

		[Token(Token = "0x4001287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool setup;

		[Token(Token = "0x4001288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool textureIsCopy;

		[Token(Token = "0x6001252")]
		[Address(RVA = "0xEB4D34", Offset = "0xEB4D34", VA = "0xEB4D34")]
		private void Start()
		{
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0xEB4D38", Offset = "0xEB4D38", VA = "0xEB4D38")]
		private void Setup()
		{
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0xEB4E44", Offset = "0xEB4E44", VA = "0xEB4E44")]
		public void SetTexture(Texture2D texture, bool copy = true)
		{
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0xEB5070", Offset = "0xEB5070", VA = "0xEB5070")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001256")]
		[Address(RVA = "0xEB50FC", Offset = "0xEB50FC", VA = "0xEB50FC")]
		public FramedScreenshotScript()
		{
		}
	}
	[Token(Token = "0x2000369")]
	public class ScreenshotDisplayScript : MonoBehaviour
	{
		[Token(Token = "0x4001289")]
		private const int STACK_SIZE = 3;

		[Token(Token = "0x400128A")]
		private const float MAX_ROTATION = 20f;

		[Token(Token = "0x400128B")]
		private const float MAX_X_POSITION_DIFF = 5f;

		[Token(Token = "0x400128C")]
		private const float MAX_Y_POSITION_DIFF = 5f;

		[Token(Token = "0x400128D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject framedScreenshotPrefab;

		[Token(Token = "0x400128E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Queue<GameObject> framedScreenshots;

		[Token(Token = "0x6001257")]
		[Address(RVA = "0x1284374", Offset = "0x1284374", VA = "0x1284374")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001258")]
		[Address(RVA = "0x1284458", Offset = "0x1284458", VA = "0x1284458")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001259")]
		[Address(RVA = "0x128453C", Offset = "0x128453C", VA = "0x128453C")]
		private void UpdateScreenshot(ScreenshotScript screenshotScript, Texture2D texture)
		{
		}

		[Token(Token = "0x600125A")]
		[Address(RVA = "0x12848AC", Offset = "0x12848AC", VA = "0x12848AC")]
		public ScreenshotDisplayScript()
		{
		}
	}
	[Token(Token = "0x200036A")]
	public class Spin : MonoBehaviour
	{
		[Token(Token = "0x400128F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 axisOfRotation;

		[Token(Token = "0x4001290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float speed;

		[Token(Token = "0x600125B")]
		[Address(RVA = "0x128F53C", Offset = "0x128F53C", VA = "0x128F53C")]
		private void Update()
		{
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0x128F5A4", Offset = "0x128F5A4", VA = "0x128F5A4")]
		public Spin()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200036B")]
	public class ScreenshotResolution
	{
		[Token(Token = "0x4001291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool active;

		[Token(Token = "0x4001292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x4001293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int width;

		[Token(Token = "0x4001294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int height;

		[Token(Token = "0x4001295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int scale;

		[Token(Token = "0x4001296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float delay;

		[Token(Token = "0x4001297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool waitForUpdates;

		[Token(Token = "0x1700016A")]
		public Resolution unscaledResolution
		{
			[Token(Token = "0x600125D")]
			[Address(RVA = "0x1284E04", Offset = "0x1284E04", VA = "0x1284E04")]
			get
			{
				return default(Resolution);
			}
		}

		[Token(Token = "0x1700016B")]
		public string resolutionString
		{
			[Token(Token = "0x600125E")]
			[Address(RVA = "0x1284E58", Offset = "0x1284E58", VA = "0x1284E58")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0x1284EFC", Offset = "0x1284EFC", VA = "0x1284EFC")]
		public ScreenshotResolution(bool active, string name, Resolution resolution, int scale = 1, float delay = 0f, bool waitForFrame = true)
		{
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0x1284FA8", Offset = "0x1284FA8", VA = "0x1284FA8")]
		public ScreenshotResolution(bool active, string name, int width, int height, int scale = 1, float delay = 0f, bool waitForFrame = true)
		{
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0x1285028", Offset = "0x1285028", VA = "0x1285028")]
		public void ScaleToScreen()
		{
		}
	}
	[Token(Token = "0x200036C")]
	public class CutoutScreenshotSetScript : ScreenshotSubComponentScript
	{
		[Token(Token = "0x200036D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17224", Offset = "0xB17224")]
		private sealed class <TakeCutoutSet>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CutoutScreenshotSetScript <>4__this;

			[Token(Token = "0x40012A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ScreenshotScript.CaptureAndSaveRoutine captureAndSaveRoutine;

			[Token(Token = "0x40012A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool save;

			[Token(Token = "0x40012A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private CutoutScript <originalCutoutScript>5__2;

			[Token(Token = "0x40012AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private bool <originalPreviewCutoutScript>5__3;

			[Token(Token = "0x40012AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private List<bool> <originalPreviewCutoutScripts>5__4;

			[Token(Token = "0x40012AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private List<CutoutScript>.Enumerator <>7__wrap4;

			[Token(Token = "0x1700016C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001269")]
				[Address(RVA = "0xEAD404", Offset = "0xEAD404", VA = "0xEAD404", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700016D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600126B")]
				[Address(RVA = "0xEAD46C", Offset = "0xEAD46C", VA = "0xEAD46C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001265")]
			[Address(RVA = "0xEACA98", Offset = "0xEACA98", VA = "0xEACA98")]
			[DebuggerHidden]
			public <TakeCutoutSet>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001266")]
			[Address(RVA = "0xEACB84", Offset = "0xEACB84", VA = "0xEACB84", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001267")]
			[Address(RVA = "0xEACBF8", Offset = "0xEACBF8", VA = "0xEACBF8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001268")]
			[Address(RVA = "0xEACBA0", Offset = "0xEACBA0", VA = "0xEACBA0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600126A")]
			[Address(RVA = "0xEAD40C", Offset = "0xEAD40C", VA = "0xEAD40C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action WillTakeCutoutSet;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action CutoutSetTaken;

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HotKeySet takeCutoutSetKeySet;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool includeOriginalCutout;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool overrideResolution;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int resolutionWidth;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int resolutionHeight;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<CutoutScript> cutoutScripts;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool overrideCutoutAdjustedRectTransforms;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<RectTransform> cutoutAdjustedRectTransforms;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Resolution originalResolution;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<RectTransform> originalCutoutAdjustedRectTransforms;

		[Token(Token = "0x6001262")]
		[Address(RVA = "0xEAC978", Offset = "0xEAC978", VA = "0xEAC978")]
		public void TakeCutoutSet(bool save = true)
		{
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0xEACA10", Offset = "0xEACA10", VA = "0xEACA10")]
		private IEnumerator TakeCutoutSet(ScreenshotScript.CaptureAndSaveRoutine captureAndSaveRoutine, bool save = true)
		{
			return null;
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0xEACAC4", Offset = "0xEACAC4", VA = "0xEACAC4")]
		public CutoutScreenshotSetScript()
		{
		}
	}
	[Token(Token = "0x200036E")]
	public class HideDuringScreenshotScript : MonoBehaviour
	{
		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool disableAfterAwake;

		[Token(Token = "0x600126C")]
		[Address(RVA = "0x1281190", Offset = "0x1281190", VA = "0x1281190")]
		private void Awake()
		{
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0x1281318", Offset = "0x1281318", VA = "0x1281318")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0x1281468", Offset = "0x1281468", VA = "0x1281468")]
		private void Enable(ScreenshotScript screenshotScript, Texture2D screenshotTexture)
		{
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0x1281490", Offset = "0x1281490", VA = "0x1281490")]
		private void Disable(ScreenshotScript screenshotScript, int width, int height, int scale)
		{
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0x12814B8", Offset = "0x12814B8", VA = "0x12814B8")]
		public HideDuringScreenshotScript()
		{
		}
	}
	[Token(Token = "0x200036F")]
	public class ShowDuringScreenshotScript : MonoBehaviour
	{
		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool disableAfterAwake;

		[Token(Token = "0x6001271")]
		[Address(RVA = "0x128EDB0", Offset = "0x128EDB0", VA = "0x128EDB0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0x128EF38", Offset = "0x128EF38", VA = "0x128EF38")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0x128F088", Offset = "0x128F088", VA = "0x128F088")]
		private void Enable(ScreenshotScript screenshotScript, int width, int height, int scale)
		{
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0x128F0B0", Offset = "0x128F0B0", VA = "0x128F0B0")]
		private void Disable(ScreenshotScript screenshotScript, Texture2D screenshotTexture)
		{
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0x128F0D8", Offset = "0x128F0D8", VA = "0x128F0D8")]
		public ShowDuringScreenshotScript()
		{
		}
	}
	[Token(Token = "0x2000370")]
	public class GameObjectScreenshotScript : ScreenshotSubComponentScript
	{
		[Serializable]
		[Token(Token = "0x2000371")]
		public class GameObjectResolutionPair
		{
			[Token(Token = "0x40012B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject gameObject;

			[Token(Token = "0x40012B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ScreenshotResolution resolution;

			[Token(Token = "0x6001279")]
			[Address(RVA = "0x127B514", Offset = "0x127B514", VA = "0x127B514")]
			public GameObjectResolutionPair()
			{
			}
		}

		[Token(Token = "0x2000372")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17234", Offset = "0xB17234")]
		private sealed class <CaptureGameObjects>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObjectScreenshotScript <>4__this;

			[Token(Token = "0x40012B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool save;

			[Token(Token = "0x40012B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <originalScreenshotIndex>5__2;

			[Token(Token = "0x40012B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<ScreenshotResolution> <originalScreenshotResolutions>5__3;

			[Token(Token = "0x40012BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <i>5__4;

			[Token(Token = "0x40012BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private GameObjectResolutionPair <pair>5__5;

			[Token(Token = "0x40012BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private bool <gameObjectWasActive>5__6;

			[Token(Token = "0x1700016E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600127D")]
				[Address(RVA = "0x127B8B8", Offset = "0x127B8B8", VA = "0x127B8B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700016F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600127F")]
				[Address(RVA = "0x127B920", Offset = "0x127B920", VA = "0x127B920", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600127A")]
			[Address(RVA = "0x127B5D0", Offset = "0x127B5D0", VA = "0x127B5D0")]
			[DebuggerHidden]
			public <CaptureGameObjects>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x600127B")]
			[Address(RVA = "0x127B5FC", Offset = "0x127B5FC", VA = "0x127B5FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600127C")]
			[Address(RVA = "0x127B600", Offset = "0x127B600", VA = "0x127B600", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600127E")]
			[Address(RVA = "0x127B8C0", Offset = "0x127B8C0", VA = "0x127B8C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GameObject> gameObjects;

		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<ScreenshotResolution> screenshotResolutions;

		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<GameObjectResolutionPair> pairs;

		[Token(Token = "0x6001276")]
		[Address(RVA = "0x127B300", Offset = "0x127B300", VA = "0x127B300")]
		public GameObjectScreenshotScript()
		{
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0x127B51C", Offset = "0x127B51C", VA = "0x127B51C")]
		public void TakeGameObjectScreenshots(bool save = true)
		{
		}

		[Token(Token = "0x6001278")]
		[Address(RVA = "0x127B54C", Offset = "0x127B54C", VA = "0x127B54C")]
		private IEnumerator CaptureGameObjects(bool save = true)
		{
			return null;
		}
	}
	[Token(Token = "0x2000373")]
	public class MultiCameraScreenshotScript : ScreenshotSubComponentScript
	{
		[Token(Token = "0x2000374")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17244", Offset = "0xB17244")]
		private sealed class <CaptureMultiCameras>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MultiCameraScreenshotScript <>4__this;

			[Token(Token = "0x40012C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool save;

			[Token(Token = "0x40012C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <originalScreenshotIndex>5__2;

			[Token(Token = "0x40012C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private ScreenshotScript.ScreenshotCaptureMode <originalCaptureMode>5__3;

			[Token(Token = "0x40012C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <i>5__4;

			[Token(Token = "0x17000170")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001286")]
				[Address(RVA = "0x12826BC", Offset = "0x12826BC", VA = "0x12826BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000171")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001288")]
				[Address(RVA = "0x1282724", Offset = "0x1282724", VA = "0x1282724", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001283")]
			[Address(RVA = "0x1282274", Offset = "0x1282274", VA = "0x1282274")]
			[DebuggerHidden]
			public <CaptureMultiCameras>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6001284")]
			[Address(RVA = "0x1282310", Offset = "0x1282310", VA = "0x1282310", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001285")]
			[Address(RVA = "0x1282314", Offset = "0x1282314", VA = "0x1282314", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001287")]
			[Address(RVA = "0x12826C4", Offset = "0x12826C4", VA = "0x12826C4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<Camera> cameras;

		[Token(Token = "0x6001280")]
		[Address(RVA = "0x12821C0", Offset = "0x12821C0", VA = "0x12821C0")]
		public void TakeMultiCameraScreenshots(bool save = true)
		{
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0x12821F0", Offset = "0x12821F0", VA = "0x12821F0")]
		private IEnumerator CaptureMultiCameras(bool save = true)
		{
			return null;
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0x12822A0", Offset = "0x12822A0", VA = "0x12822A0")]
		public MultiCameraScreenshotScript()
		{
		}
	}
	[Token(Token = "0x2000375")]
	public class ScreenshotBurstScript : ScreenshotSubComponentScript
	{
		[Token(Token = "0x2000376")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17254", Offset = "0xB17254")]
		private sealed class <TakeScreenshotBurst>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ScreenshotBurstScript <>4__this;

			[Token(Token = "0x40012CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ScreenshotScript.CaptureAndSaveRoutine captureAndSaveRoutine;

			[Token(Token = "0x40012CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool save;

			[Token(Token = "0x40012CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <i>5__2;

			[Token(Token = "0x40012D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <j>5__3;

			[Token(Token = "0x17000172")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001290")]
				[Address(RVA = "0x1284304", Offset = "0x1284304", VA = "0x1284304", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000173")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001292")]
				[Address(RVA = "0x128436C", Offset = "0x128436C", VA = "0x128436C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600128D")]
			[Address(RVA = "0x1284148", Offset = "0x1284148", VA = "0x1284148")]
			[DebuggerHidden]
			public <TakeScreenshotBurst>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x600128E")]
			[Address(RVA = "0x128418C", Offset = "0x128418C", VA = "0x128418C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600128F")]
			[Address(RVA = "0x1284190", Offset = "0x1284190", VA = "0x1284190", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001291")]
			[Address(RVA = "0x128430C", Offset = "0x128430C", VA = "0x128430C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action WillTakeScreenshotBurst;

		[Token(Token = "0x40012C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action ScreenshotBurstTaken;

		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HotKeySet takeScreenshotBurstKeySet;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int burstSize;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int skipFrames;

		[Token(Token = "0x6001289")]
		[Address(RVA = "0x1283F98", Offset = "0x1283F98", VA = "0x1283F98")]
		public void TakeScreenshotBurst(bool save = true)
		{
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0x12840B4", Offset = "0x12840B4", VA = "0x12840B4")]
		public void TakeAllScreenshotBurst(bool save = true)
		{
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0x128402C", Offset = "0x128402C", VA = "0x128402C")]
		private IEnumerator TakeScreenshotBurst(ScreenshotScript.CaptureAndSaveRoutine captureAndSaveRoutine, bool save = true)
		{
			return null;
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0x1284174", Offset = "0x1284174", VA = "0x1284174")]
		public ScreenshotBurstScript()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000377")]
	public sealed class ScreenshotScript : CaptureScript
	{
		[Serializable]
		[Token(Token = "0x2000378")]
		public enum ScreenshotCaptureMode
		{
			[Token(Token = "0x40012E8")]
			RenderTexture,
			[Token(Token = "0x40012E9")]
			ScreenCapture,
			[Token(Token = "0x40012EA")]
			AllCameras
		}

		[Serializable]
		[Token(Token = "0x2000379")]
		public enum ResolutionSelect
		{
			[Token(Token = "0x40012EC")]
			GameViewResolution,
			[Token(Token = "0x40012ED")]
			DefaultResolution,
			[Token(Token = "0x40012EE")]
			CameraResolution
		}

		[Token(Token = "0x200037A")]
		public delegate IEnumerator CaptureAndSaveRoutine(bool save = true);

		[Token(Token = "0x200037B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17264", Offset = "0xB17264")]
		private sealed class <TakeAllScreenshotsCoroutine>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ScreenshotScript <>4__this;

			[Token(Token = "0x40012F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool save;

			[Token(Token = "0x40012F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Camera[] <camerasToUse>5__2;

			[Token(Token = "0x40012F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private ScreenshotResolution[] <resolutionsToUse>5__3;

			[Token(Token = "0x40012F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private bool <fixedResolutionDevice>5__4;

			[Token(Token = "0x40012F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private Resolution <originalResolution>5__5;

			[Token(Token = "0x40012F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private ScreenshotResolution[] <>7__wrap5;

			[Token(Token = "0x40012F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private int <>7__wrap6;

			[Token(Token = "0x40012F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private ScreenshotResolution <screenshotResolution>5__8;

			[Token(Token = "0x17000177")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012B5")]
				[Address(RVA = "0x1286DC0", Offset = "0x1286DC0", VA = "0x1286DC0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000178")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012B7")]
				[Address(RVA = "0x1286E28", Offset = "0x1286E28", VA = "0x1286E28", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012B2")]
			[Address(RVA = "0x12852B4", Offset = "0x12852B4", VA = "0x12852B4")]
			[DebuggerHidden]
			public <TakeAllScreenshotsCoroutine>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x60012B3")]
			[Address(RVA = "0x1286514", Offset = "0x1286514", VA = "0x1286514", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012B4")]
			[Address(RVA = "0x1286518", Offset = "0x1286518", VA = "0x1286518", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012B6")]
			[Address(RVA = "0x1286DC8", Offset = "0x1286DC8", VA = "0x1286DC8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200037C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17274", Offset = "0xB17274")]
		private sealed class <TakeSingleScreenshotCoroutine>d__35 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40012FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ScreenshotScript <>4__this;

			[Token(Token = "0x40012FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool save;

			[Token(Token = "0x17000179")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012BB")]
				[Address(RVA = "0x12874F4", Offset = "0x12874F4", VA = "0x12874F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700017A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012BD")]
				[Address(RVA = "0x128755C", Offset = "0x128755C", VA = "0x128755C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012B8")]
			[Address(RVA = "0x1285394", Offset = "0x1285394", VA = "0x1285394")]
			[DebuggerHidden]
			public <TakeSingleScreenshotCoroutine>d__35(int <>1__state)
			{
			}

			[Token(Token = "0x60012B9")]
			[Address(RVA = "0x1287340", Offset = "0x1287340", VA = "0x1287340", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012BA")]
			[Address(RVA = "0x1287344", Offset = "0x1287344", VA = "0x1287344", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012BC")]
			[Address(RVA = "0x12874FC", Offset = "0x12874FC", VA = "0x12874FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200037D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17284", Offset = "0xB17284")]
		private sealed class <TakeScreenshotWithCameras>d__37 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40012FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40012FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001300")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool calledFromLoop;

			[Token(Token = "0x4001301")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ScreenshotScript <>4__this;

			[Token(Token = "0x4001302")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Camera[] camerasToUse;

			[Token(Token = "0x4001303")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Resolution resolution;

			[Token(Token = "0x4001304")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public int scale;

			[Token(Token = "0x4001305")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public bool waitForEndOfFrame;

			[Token(Token = "0x4001306")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public Rect cutoutRect;

			[Token(Token = "0x4001307")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public TextureTransformation[] transformations;

			[Token(Token = "0x4001308")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public bool save;

			[Token(Token = "0x4001309")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private string <cameraName>5__2;

			[Token(Token = "0x400130A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private string <resolutionName>5__3;

			[Token(Token = "0x400130B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			private string <resolutionString>5__4;

			[Token(Token = "0x400130C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			private bool <screenCaptureMode>5__5;

			[Token(Token = "0x1700017B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012C1")]
				[Address(RVA = "0x12872D0", Offset = "0x12872D0", VA = "0x12872D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700017C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012C3")]
				[Address(RVA = "0x1287338", Offset = "0x1287338", VA = "0x1287338", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012BE")]
			[Address(RVA = "0x1285410", Offset = "0x1285410", VA = "0x1285410")]
			[DebuggerHidden]
			public <TakeScreenshotWithCameras>d__37(int <>1__state)
			{
			}

			[Token(Token = "0x60012BF")]
			[Address(RVA = "0x1286E30", Offset = "0x1286E30", VA = "0x1286E30", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012C0")]
			[Address(RVA = "0x1286E34", Offset = "0x1286E34", VA = "0x1286E34", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012C2")]
			[Address(RVA = "0x12872D8", Offset = "0x12872D8", VA = "0x12872D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40012D1")]
		public const string version = "3.25";

		[Token(Token = "0x40012D2")]
		private const string TRS_SCREENSHOTS_MAX_INSTANCES_KEY = "TRS_SCREENSHOTS_MAX_INSTANCES_KEY";

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action<ScreenshotScript> WillTakeMultipleScreenshots;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<ScreenshotScript, int, int, int> WillTakeScreenshot;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action<ScreenshotScript, RawFrameData> RawFrameTaken;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Action<ScreenshotScript, Texture2D> ScreenshotTaken;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Action<ScreenshotScript, string> ScreenshotSaved;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Action<ScreenshotScript> MultipleScreenshotsTaken;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static bool maxInstancesLoaded;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private static int cachedMaxInstances;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static List<ScreenshotScript> instances;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public List<ScreenshotResolution> screenshotResolutions;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public List<ScreenshotResolutionTransformation> screenshotResolutionTransformations;

		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public HotKeySet takeSingleScreenshotKeySet;

		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public HotKeySet takeAllScreenshotsKeySet;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public bool playScreenshotAudioInGame;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public AudioSource screenshotAudioSource;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public ScreenshotFileSettings fileSettings;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public Texture2D lastScreenshotTexture;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public ScreenshotCaptureMode captureMode;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		public ResolutionSelect sceneViewScreenshotResolution;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB197BC", Offset = "0xB197BC")]
		private bool <screenshotsInProgress>k__BackingField;

		[Token(Token = "0x17000174")]
		public ResolutionSelect gameViewScreenshotResolution
		{
			[Token(Token = "0x6001293")]
			[Address(RVA = "0x12851C8", Offset = "0x12851C8", VA = "0x12851C8")]
			get
			{
				return default(ResolutionSelect);
			}
		}

		[Token(Token = "0x17000175")]
		public bool screenshotsInProgress
		{
			[Token(Token = "0x6001294")]
			[Address(RVA = "0x12851DC", Offset = "0x12851DC", VA = "0x12851DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C888", Offset = "0xB1C888")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001295")]
			[Address(RVA = "0x12851E4", Offset = "0x12851E4", VA = "0x12851E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1C898", Offset = "0xB1C898")]
			private set
			{
			}
		}

		[Token(Token = "0x17000176")]
		public override bool useCanvasesAdjuster
		{
			[Token(Token = "0x6001296")]
			[Address(RVA = "0x12851F0", Offset = "0x12851F0", VA = "0x12851F0", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0x1285284", Offset = "0x1285284", VA = "0x1285284")]
		public void TakeAllScreenshots(bool save = true)
		{
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0x127B834", Offset = "0x127B834", VA = "0x127B834")]
		public IEnumerator TakeAllScreenshotsCoroutine(bool save = true)
		{
			return null;
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0x12852E0", Offset = "0x12852E0", VA = "0x12852E0")]
		public void TakeSingleScreenshot(bool save = true)
		{
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0x1285310", Offset = "0x1285310", VA = "0x1285310")]
		public IEnumerator TakeSingleScreenshotCoroutine(bool save = true)
		{
			return null;
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0x12853C0", Offset = "0x12853C0", VA = "0x12853C0")]
		public IEnumerator TakeScreenshot(Resolution resolution, Rect cutoutRect, bool save = true, bool waitForEndOfFrame = false, int scale = 1, [Optional] TextureTransformation[] transformations, bool calledFromLoop = false)
		{
			return null;
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0x12825C0", Offset = "0x12825C0", VA = "0x12825C0")]
		public IEnumerator TakeScreenshotWithCameras(Camera[] camerasToUse, Resolution resolution, Rect cutoutRect, bool save = true, bool waitForEndOfFrame = false, int scale = 1, [Optional] TextureTransformation[] transformations, bool calledFromLoop = false)
		{
			return null;
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0x128543C", Offset = "0x128543C", VA = "0x128543C")]
		public Texture2D Screenshot(Rect cutoutRect, Resolution resizeResolution, bool solidify = true, int scale = 1, [Optional] TextureTransformation[] transformations)
		{
			return null;
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0x1285460", Offset = "0x1285460", VA = "0x1285460")]
		public Texture2D Screenshot(Camera[] camerasToUse, Rect cutoutRect, Resolution resizeResolution, bool solidify = true, int scale = 1, [Optional] TextureTransformation[] transformations)
		{
			return null;
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0x1285A08", Offset = "0x1285A08", VA = "0x1285A08")]
		public RawFrameData RawScreenshot(Rect cutoutRect, Resolution resizeResolution, bool solidify = true, int scale = 1)
		{
			return null;
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0x1285680", Offset = "0x1285680", VA = "0x1285680")]
		public RawFrameData RawScreenshot(Camera[] camerasToUse, Rect cutoutRect, Resolution resizeResolution, bool solidify = true, int scale = 1)
		{
			return null;
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0x1285A28", Offset = "0x1285A28", VA = "0x1285A28")]
		public void Save(Texture2D texture, string overrideFilePath = "", bool destroyTexture = false)
		{
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0x1285B68", Offset = "0x1285B68", VA = "0x1285B68", Slot = "7")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0x1285B70", Offset = "0x1285B70", VA = "0x1285B70", Slot = "8")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0x1285B98", Offset = "0x1285B98", VA = "0x1285B98", Slot = "9")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0x1285C64", Offset = "0x1285C64", VA = "0x1285C64")]
		private string NameForResolution(Resolution resolution)
		{
			return null;
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0x1285DC8", Offset = "0x1285DC8", VA = "0x1285DC8")]
		public Resolution ResolutionForResolutionSelect(ResolutionSelect resolutionSelect, [Optional] Camera camera)
		{
			return default(Resolution);
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0x1285F6C", Offset = "0x1285F6C", VA = "0x1285F6C", Slot = "20")]
		public override void UpdateDontDestroyOnLoad()
		{
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0x12860BC", Offset = "0x12860BC", VA = "0x12860BC")]
		public void ScaleResolutionsToScreen()
		{
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0x1286174", Offset = "0x1286174", VA = "0x1286174", Slot = "4")]
		public override int GetMaxInstances()
		{
			return default(int);
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0x1286324", Offset = "0x1286324", VA = "0x1286324", Slot = "5")]
		public override void SetMaxInstances(int newValue)
		{
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0x1286228", Offset = "0x1286228", VA = "0x1286228")]
		private static int LoadMaxInstances()
		{
			return default(int);
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0x12863B8", Offset = "0x12863B8", VA = "0x12863B8")]
		public ScreenshotScript()
		{
		}
	}
	[Token(Token = "0x200037E")]
	public class ScreenshotSeriesScript : ScreenshotSubComponentScript
	{
		[Serializable]
		[Token(Token = "0x200037F")]
		public struct ButtonInteraction
		{
			[Token(Token = "0x400130F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Button button;

			[Token(Token = "0x4001310")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float animationDelay;

			[Token(Token = "0x4001311")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public bool takePhoto;
		}

		[Token(Token = "0x2000380")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17294", Offset = "0xB17294")]
		private sealed class <TakeScreenshotSeriesCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001312")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001313")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001314")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ScreenshotSeriesScript <>4__this;

			[Token(Token = "0x4001315")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool save;

			[Token(Token = "0x4001316")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<ButtonInteraction>.Enumerator <>7__wrap1;

			[Token(Token = "0x4001317")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private ButtonInteraction <buttonInteraction>5__3;

			[Token(Token = "0x1700017D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60012CB")]
				[Address(RVA = "0x1287AA4", Offset = "0x1287AA4", VA = "0x1287AA4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700017E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60012CD")]
				[Address(RVA = "0x1287B0C", Offset = "0x1287B0C", VA = "0x1287B0C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60012C7")]
			[Address(RVA = "0x12876B4", Offset = "0x12876B4", VA = "0x12876B4")]
			[DebuggerHidden]
			public <TakeScreenshotSeriesCoroutine>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x60012C8")]
			[Address(RVA = "0x1287758", Offset = "0x1287758", VA = "0x1287758", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60012C9")]
			[Address(RVA = "0x12877DC", Offset = "0x12877DC", VA = "0x12877DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60012CA")]
			[Address(RVA = "0x1287784", Offset = "0x1287784", VA = "0x1287784")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x60012CC")]
			[Address(RVA = "0x1287AAC", Offset = "0x1287AAC", VA = "0x1287AAC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400130D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool captureInitialScreen;

		[Token(Token = "0x400130E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<ButtonInteraction> buttonInteractions;

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0x1287600", Offset = "0x1287600", VA = "0x1287600")]
		public void TakeScreenshotSeries(bool save = true)
		{
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0x1287630", Offset = "0x1287630", VA = "0x1287630")]
		public IEnumerator TakeScreenshotSeriesCoroutine(bool save = true)
		{
			return null;
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0x12876E0", Offset = "0x12876E0", VA = "0x12876E0")]
		public ScreenshotSeriesScript()
		{
		}
	}
	[Token(Token = "0x2000381")]
	[ExecuteInEditMode]
	public class ScreenshotSubComponentScript : MonoBehaviour
	{
		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ScreenshotScript screenshotScript;

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0x128281C", Offset = "0x128281C", VA = "0x128281C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0x127B50C", Offset = "0x127B50C", VA = "0x127B50C")]
		public ScreenshotSubComponentScript()
		{
		}
	}
	[Token(Token = "0x2000382")]
	public class SimilarScreenshotResolutionsOnlyScript : MonoBehaviour
	{
		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ScreenshotScript screenshotScript;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float minWideScreenCutoff;

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0x128F0E0", Offset = "0x128F0E0", VA = "0x128F0E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0x128F170", Offset = "0x128F170", VA = "0x128F170")]
		private void Start()
		{
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0x128F174", Offset = "0x128F174", VA = "0x128F174")]
		public void UpdateResolutions()
		{
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0x128F398", Offset = "0x128F398", VA = "0x128F398")]
		public SimilarScreenshotResolutionsOnlyScript()
		{
		}
	}
	[Token(Token = "0x2000383")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB172B4", Offset = "0xB172B4")]
	public class UpdateShareWithScreenshotScript : MonoBehaviour
	{
		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int cachedWidth;

		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int cachedHeight;

		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ShareScript shareScript;

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0xE421A0", Offset = "0xE421A0", VA = "0xE421A0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0xE42384", Offset = "0xE42384", VA = "0xE42384")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0xE42234", Offset = "0xE42234", VA = "0xE42234")]
		private void SubscribeToMediaEvents()
		{
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0xE42388", Offset = "0xE42388", VA = "0xE42388")]
		private void UnsubscribeFromMediaEvents()
		{
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0xE424D8", Offset = "0xE424D8", VA = "0xE424D8")]
		private void UpdateScaledMediaSize(ScreenshotScript screenshotScript, int width, int height, int scale)
		{
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0xE424E8", Offset = "0xE424E8", VA = "0xE424E8")]
		private void UpdateScreenshotMediaPath(ScreenshotScript screenshotScript, string filePath)
		{
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0xE424F0", Offset = "0xE424F0", VA = "0xE424F0")]
		private void UpdateShareScript(string filePath)
		{
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0xE42530", Offset = "0xE42530", VA = "0xE42530")]
		public UpdateShareWithScreenshotScript()
		{
		}
	}
}
namespace TRS.CaptureTool.Share
{
	[Token(Token = "0x2000384")]
	public class CaptureToolConfig : ScriptableObject
	{
		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool imgurFreeMode;

		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool imgurAnonymousMode;

		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string imgurClientId;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string imgurClientSecret;

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string imgurRefreshToken;

		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string imgurXMashapeKey;

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string imgurAccessToken;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string giphyApiKey;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string giphyUsername;

		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string twitterConsumerKey;

		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB197CC", Offset = "0xB197CC")]
		public string twitterConsumerSecret;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool forcePlayerLogIn;

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool useDeveloperTwitterInProduction;

		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string twitterPlayerUsername;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string twitterPlayerAccessToken;

		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string twitterPlayerAccessTokenSecret;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public string twitterDeveloperUsername;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public string twitterDeveloperAccessToken;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public string twitterDeveloperAccessTokenSecret;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public string facebookAppId;

		[Token(Token = "0x1700017F")]
		private bool useDeveloperTwitter
		{
			[Token(Token = "0x60012DC")]
			[Address(RVA = "0x1289F84", Offset = "0x1289F84", VA = "0x1289F84")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000180")]
		public string twitterUsername
		{
			[Token(Token = "0x60012DD")]
			[Address(RVA = "0x1289FC8", Offset = "0x1289FC8", VA = "0x1289FC8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000181")]
		public string twitterAccessToken
		{
			[Token(Token = "0x60012DE")]
			[Address(RVA = "0x128A010", Offset = "0x128A010", VA = "0x128A010")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000182")]
		public string twitterAccessTokenSecret
		{
			[Token(Token = "0x60012DF")]
			[Address(RVA = "0x128A058", Offset = "0x128A058", VA = "0x128A058")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000183")]
		public string altTwitterUsername
		{
			[Token(Token = "0x60012E0")]
			[Address(RVA = "0x128A0A0", Offset = "0x128A0A0", VA = "0x128A0A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000184")]
		public string altTwitterAccessToken
		{
			[Token(Token = "0x60012E1")]
			[Address(RVA = "0x128A0E8", Offset = "0x128A0E8", VA = "0x128A0E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000185")]
		public string altTwitterAccessTokenSecret
		{
			[Token(Token = "0x60012E2")]
			[Address(RVA = "0x128A130", Offset = "0x128A130", VA = "0x128A130")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0x128A178", Offset = "0x128A178", VA = "0x128A178")]
		public void LoadKeys()
		{
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0x1289BF8", Offset = "0x1289BF8", VA = "0x1289BF8")]
		public bool LoadTwitterAuthKeys(string selectedUsername = "")
		{
			return default(bool);
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0x128A564", Offset = "0x128A564", VA = "0x128A564")]
		public void SetTwitterAuthKeys(string username, string accessToken, string accessTokenSecret)
		{
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0x128A714", Offset = "0x128A714", VA = "0x128A714")]
		public CaptureToolConfig()
		{
		}
	}
	[Token(Token = "0x2000385")]
	public static class SavedCaptureToolKeys
	{
		[Token(Token = "0x60012E7")]
		[Address(RVA = "0x128A2F8", Offset = "0x128A2F8", VA = "0x128A2F8")]
		public static string ImgurAccessToken()
		{
			return null;
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0x128C8F0", Offset = "0x128C8F0", VA = "0x128C8F0")]
		public static void ClearImgurAccessToken()
		{
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0x128977C", Offset = "0x128977C", VA = "0x128977C")]
		public static void SaveImgurAccessToken(string accessToken, string expiresIn)
		{
		}

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0x128A408", Offset = "0x128A408", VA = "0x128A408")]
		public static string TwitterGeneratedTokenUsername()
		{
			return null;
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0x128A47C", Offset = "0x128A47C", VA = "0x128A47C")]
		public static string TwitterGeneratedAccessToken()
		{
			return null;
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0x128A4F0", Offset = "0x128A4F0", VA = "0x128A4F0")]
		public static string TwitterGeneratedAccessTokenSecret()
		{
			return null;
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0x128A678", Offset = "0x128A678", VA = "0x128A678")]
		public static void SaveTwitterGeneratedAccessToken(string username, string accessToken, string accessTokenSecret)
		{
		}
	}
	[Token(Token = "0x2000386")]
	public class DemoShareScript : MonoBehaviour
	{
		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ShareScript shareScript;

		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Button button;

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0x128AF0C", Offset = "0x128AF0C", VA = "0x128AF0C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0x128AF64", Offset = "0x128AF64", VA = "0x128AF64")]
		private void Update()
		{
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0x128AFCC", Offset = "0x128AFCC", VA = "0x128AFCC")]
		public void DemoShare()
		{
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0x128AFEC", Offset = "0x128AFEC", VA = "0x128AFEC")]
		public DemoShareScript()
		{
		}
	}
	[Token(Token = "0x2000387")]
	public class DemoUploadScript : MonoBehaviour
	{
		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ShareScript shareScript;

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Button button;

		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text buttonText;

		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int numPeriods;

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float timeSinceLastUpdate;

		[Token(Token = "0x4001339")]
		private const int maxNumPeriods = 3;

		[Token(Token = "0x400133A")]
		private const float timeBetweenPeriodUpdates = 0.25f;

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0x128AFF4", Offset = "0x128AFF4", VA = "0x128AFF4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0x128B064", Offset = "0x128B064", VA = "0x128B064")]
		private void Update()
		{
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0x128B1A0", Offset = "0x128B1A0", VA = "0x128B1A0")]
		public void DemoUpload()
		{
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0x128B2E4", Offset = "0x128B2E4", VA = "0x128B2E4")]
		public DemoUploadScript()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000388")]
	public class CustomUrl
	{
		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string displayName;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string baseUrl;

		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<CustomUrlParameter> parameters;

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0x128A78C", Offset = "0x128A78C", VA = "0x128A78C")]
		public CustomUrl(string displayName, string baseUrl, List<CustomUrlParameter> parameters)
		{
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0x128A7CC", Offset = "0x128A7CC", VA = "0x128A7CC")]
		public string FullUrl(Dictionary<string, string> replacements)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000389")]
	public class CustomUrlParameter
	{
		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string displayName;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string name;

		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string value;

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0x128AB7C", Offset = "0x128AB7C", VA = "0x128AB7C")]
		public CustomUrlParameter(string displayName, string name, string value)
		{
		}
	}
	[Token(Token = "0x200038A")]
	public class InstantTwitterShareScript : MonoBehaviour
	{
		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject twitterPinPanel;

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InputField tweetInputField;

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InputField pinInputField;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text pinErrorText;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB19804", Offset = "0xB19804")]
		public CaptureToolConfig config;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string username;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string defaultText;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string filePath;

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0x128BD48", Offset = "0x128BD48", VA = "0x128BD48")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60012FA")]
		[Address(RVA = "0x128BF90", Offset = "0x128BF90", VA = "0x128BF90")]
		public void SubmitPin()
		{
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0x128C09C", Offset = "0x128C09C", VA = "0x128C09C")]
		public void Share()
		{
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0x128C0FC", Offset = "0x128C0FC", VA = "0x128C0FC")]
		private void RequestTokenCallback(bool success)
		{
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0x128C008", Offset = "0x128C008", VA = "0x128C008")]
		private void GenerateAccessToken(string pin)
		{
		}

		[Token(Token = "0x60012FE")]
		[Address(RVA = "0x128C1E0", Offset = "0x128C1E0", VA = "0x128C1E0")]
		private void AccessTokenCallback(bool success)
		{
		}

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0x128C3D0", Offset = "0x128C3D0", VA = "0x128C3D0")]
		public InstantTwitterShareScript()
		{
		}
	}
	[Token(Token = "0x200038B")]
	public static class APIShare
	{
		[Token(Token = "0x200038C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17328", Offset = "0xB17328")]
		private sealed class <UploadToImgurAsync>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001349")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400134A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400134B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CaptureToolConfig config;

			[Token(Token = "0x400134C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string filePath;

			[Token(Token = "0x400134D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string title;

			[Token(Token = "0x400134E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string description;

			[Token(Token = "0x400134F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string album;

			[Token(Token = "0x4001350")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Action<string, string> onComplete;

			[Token(Token = "0x4001351")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x4001352")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private WWWForm <form>5__3;

			[Token(Token = "0x4001353")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private UnityWebRequest <>7__wrap3;

			[Token(Token = "0x17000186")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600130D")]
				[Address(RVA = "0x12898B0", Offset = "0x12898B0", VA = "0x12898B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000187")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600130F")]
				[Address(RVA = "0x1289918", Offset = "0x1289918", VA = "0x1289918", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001308")]
			[Address(RVA = "0x1287E60", Offset = "0x1287E60", VA = "0x1287E60")]
			[DebuggerHidden]
			public <UploadToImgurAsync>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6001309")]
			[Address(RVA = "0x1288B08", Offset = "0x1288B08", VA = "0x1288B08", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600130A")]
			[Address(RVA = "0x1288CB8", Offset = "0x1288CB8", VA = "0x1288CB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600130B")]
			[Address(RVA = "0x1288B38", Offset = "0x1288B38", VA = "0x1288B38")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x600130C")]
			[Address(RVA = "0x1288BF8", Offset = "0x1288BF8", VA = "0x1288BF8")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x600130E")]
			[Address(RVA = "0x12898B8", Offset = "0x12898B8", VA = "0x12898B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200038D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17338", Offset = "0xB17338")]
		private sealed class <UploadToGiphyAsync>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001354")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001355")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001356")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CaptureToolConfig config;

			[Token(Token = "0x4001357")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string filePath;

			[Token(Token = "0x4001358")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string rehostUrl;

			[Token(Token = "0x4001359")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string tags;

			[Token(Token = "0x400135A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Action<string, string> onComplete;

			[Token(Token = "0x400135B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x400135C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private UnityWebRequest <>7__wrap2;

			[Token(Token = "0x17000188")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001314")]
				[Address(RVA = "0x1288A98", Offset = "0x1288A98", VA = "0x1288A98", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000189")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001316")]
				[Address(RVA = "0x1288B00", Offset = "0x1288B00", VA = "0x1288B00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001310")]
			[Address(RVA = "0x1287E8C", Offset = "0x1287E8C", VA = "0x1287E8C")]
			[DebuggerHidden]
			public <UploadToGiphyAsync>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001311")]
			[Address(RVA = "0x12883FC", Offset = "0x12883FC", VA = "0x12883FC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001312")]
			[Address(RVA = "0x12884D8", Offset = "0x12884D8", VA = "0x12884D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001313")]
			[Address(RVA = "0x1288418", Offset = "0x1288418", VA = "0x1288418")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001315")]
			[Address(RVA = "0x1288AA0", Offset = "0x1288AA0", VA = "0x1288AA0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200038E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17348", Offset = "0xB17348")]
		private sealed class <>c__DisplayClass7_0
		{
			[Token(Token = "0x400135D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<Tweet, string> onComplete;

			[Token(Token = "0x400135E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string text;

			[Token(Token = "0x400135F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TwitterCallback StatusUpdateCallback;

			[Token(Token = "0x6001317")]
			[Address(RVA = "0x1288140", Offset = "0x1288140", VA = "0x1288140")]
			public <>c__DisplayClass7_0()
			{
			}

			[Token(Token = "0x6001318")]
			[Address(RVA = "0x1288148", Offset = "0x1288148", VA = "0x1288148")]
			internal void <UploadToTwitterAsync>b__0(bool success, string response)
			{
			}

			[Token(Token = "0x6001319")]
			[Address(RVA = "0x12882A4", Offset = "0x12882A4", VA = "0x12882A4")]
			internal void <UploadToTwitterAsync>b__1(bool success, string response)
			{
			}
		}

		[Token(Token = "0x200038F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17358", Offset = "0xB17358")]
		private sealed class <UploadToTwitterAsync>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001360")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001361")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001362")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<Tweet, string> onComplete;

			[Token(Token = "0x4001363")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string text;

			[Token(Token = "0x4001364")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string username;

			[Token(Token = "0x4001365")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public CaptureToolConfig config;

			[Token(Token = "0x4001366")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string filePath;

			[Token(Token = "0x1700018A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600131D")]
				[Address(RVA = "0x1289F14", Offset = "0x1289F14", VA = "0x1289F14", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700018B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600131F")]
				[Address(RVA = "0x1289F7C", Offset = "0x1289F7C", VA = "0x1289F7C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600131A")]
			[Address(RVA = "0x1287EB8", Offset = "0x1287EB8", VA = "0x1287EB8")]
			[DebuggerHidden]
			public <UploadToTwitterAsync>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x600131B")]
			[Address(RVA = "0x1289920", Offset = "0x1289920", VA = "0x1289920", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600131C")]
			[Address(RVA = "0x1289924", Offset = "0x1289924", VA = "0x1289924", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600131E")]
			[Address(RVA = "0x1289F1C", Offset = "0x1289F1C", VA = "0x1289F1C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0x1287B14", Offset = "0x1287B14", VA = "0x1287B14")]
		public static void NativeShare(string filePath, string text = "", string url = "")
		{
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0x1287C44", Offset = "0x1287C44", VA = "0x1287C44")]
		public static void UploadToImgur(CaptureToolConfig config, string filePath, string description = "", string title = "", string album = "", [Optional] Action<string, string> onComplete)
		{
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0x1287D00", Offset = "0x1287D00", VA = "0x1287D00")]
		public static void UploadToGiphy(CaptureToolConfig config, string filePath, string tags = "", string rehostUrl = "", [Optional] Action<string, string> onComplete)
		{
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0x1287DB0", Offset = "0x1287DB0", VA = "0x1287DB0")]
		public static void UploadToTwitter(CaptureToolConfig config, string filePath, string username, string text = "", [Optional] Action<Tweet, string> onComplete)
		{
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0x1287C5C", Offset = "0x1287C5C", VA = "0x1287C5C")]
		public static IEnumerator UploadToImgurAsync(CaptureToolConfig config, string filePath, string description = "", string title = "", string album = "", [Optional] Action<string, string> onComplete)
		{
			return null;
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0x1287D18", Offset = "0x1287D18", VA = "0x1287D18")]
		public static IEnumerator UploadToGiphyAsync(CaptureToolConfig config, string filePath, string tags = "", string rehostUrl = "", [Optional] Action<string, string> onComplete)
		{
			return null;
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0x1287DC8", Offset = "0x1287DC8", VA = "0x1287DC8")]
		public static IEnumerator UploadToTwitterAsync(CaptureToolConfig config, string filePath, string username, string text = "", [Optional] Action<Tweet, string> onComplete)
		{
			return null;
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0x1287EE4", Offset = "0x1287EE4", VA = "0x1287EE4")]
		private static bool CheckForFileSizeError(string service, string filePath, int maxGifSize, int maxImageSize)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000390")]
	public static class WebShare
	{
		[Token(Token = "0x6001320")]
		[Address(RVA = "0x128D7F0", Offset = "0x128D7F0", VA = "0x128D7F0")]
		public static void Share(string url)
		{
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0x128D390", Offset = "0x128D390", VA = "0x128D390")]
		public static void ShareToTwitter(string url = "", string text = "", string hashtags = "", string username = "")
		{
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0x128D3AC", Offset = "0x128D3AC", VA = "0x128D3AC")]
		public static void ShareToTweetDeck()
		{
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0x128D534", Offset = "0x128D534", VA = "0x128D534")]
		public static void ShareToReddit(string subreddit, string url = "", string text = "", string title = "")
		{
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0x128D590", Offset = "0x128D590", VA = "0x128D590")]
		public static void ShareToGooglePlus(string url = "", string text = "")
		{
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0x128D688", Offset = "0x128D688", VA = "0x128D688")]
		public static void ShareToPinterest(string media = "", string description = "", string url = "")
		{
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0x128D704", Offset = "0x128D704", VA = "0x128D704")]
		public static void ShareToFacebook(CaptureToolConfig config, string url = "", string quote = "", string hashtag = "")
		{
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0x128D7A0", Offset = "0x128D7A0", VA = "0x128D7A0")]
		public static void ShareByEmail(string url = "", string body = "", string email = "", string title = "")
		{
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0x128E224", Offset = "0x128E224", VA = "0x128E224")]
		public static string TwitterShareUrl(string url = "", string text = "", string hashtags = "", string username = "")
		{
			return null;
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0x128E378", Offset = "0x128E378", VA = "0x128E378")]
		public static string TweetDeckUrl()
		{
			return null;
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0x128E3C0", Offset = "0x128E3C0", VA = "0x128E3C0")]
		public static string RedditShareUrl(string subreddit, string url = "", string text = "", string title = "")
		{
			return null;
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0x128E510", Offset = "0x128E510", VA = "0x128E510")]
		public static string GooglePlusShareUrl(string url = "", string text = "")
		{
			return null;
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0x128E5F4", Offset = "0x128E5F4", VA = "0x128E5F4")]
		public static string PinterestShareUrl(string media = "", string description = "", string url = "")
		{
			return null;
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0x128E718", Offset = "0x128E718", VA = "0x128E718")]
		public static string FacebookShareUrl(CaptureToolConfig config, string url = "", string quote = "", string hashtag = "")
		{
			return null;
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0x128E918", Offset = "0x128E918", VA = "0x128E918")]
		public static string EmailShareUrl(string url = "", string body = "", string email = "", string subject = "")
		{
			return null;
		}
	}
	[Token(Token = "0x2000391")]
	[ExecuteInEditMode]
	public class ShareScript : MonoBehaviour
	{
		[Token(Token = "0x2000392")]
		public enum FileType
		{
			[Token(Token = "0x4001398")]
			PNG,
			[Token(Token = "0x4001399")]
			JPG,
			[Token(Token = "0x400139A")]
			GIF,
			[Token(Token = "0x400139B")]
			MP4,
			[Token(Token = "0x400139C")]
			Size
		}

		[Token(Token = "0x2000393")]
		public delegate TResult Func<T1, T2, T3, T4, T5, TResult>(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5);

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string[] acceptedFileTypes;

		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly string[] mimeTypeForFileType;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CaptureToolConfig config;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string m_mediaToUploadPath;

		[Token(Token = "0x400136B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int mediaWidth;

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int mediaHeight;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string mediaUrl;

		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string mediaPostUrl;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool useLastMediaPostUrl;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool useLastMediaUrl;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string defaultTitle;

		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string defaultText;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string defaultUrl;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool useCustomUrl;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool useCustomUrlFunction;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Func<string, string, int, int, bool, string> CustomUrlFunction;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string serverUser;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string serverUploadFolder;

		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string serverUploadUrl;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool includeMediaTypeFolderInServerPath;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public string[] folderForFileType;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public string imgurAlbum;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public string imgurTitle;

		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public string imgurDescription;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public string imgurTags;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public string giphyTags;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public string twitterText;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public string twitterHashtags;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public string twitterViaUsername;

		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public string twitterShareUsername;

		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public string twitterSharePin;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public string subreddits;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public string redditTitle;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public string redditText;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public string googlePlusText;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public string pinterestDescription;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public string pinterestUrl;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public string facebookQuote;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public string facebookHashtag;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public string emailAddress;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public string emailSubject;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public string emailBody;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public CustomUrl customUrl;

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[SerializeField]
		private int _customUrlCount;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public List<CustomUrl> customUrls;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static CustomUrl customUrlExample;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1984C", Offset = "0xB1984C")]
		private bool <convertingToMP4>k__BackingField;

		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x159")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1985C", Offset = "0xB1985C")]
		private bool <uploadingToServer>k__BackingField;

		[Token(Token = "0x1700018C")]
		public string mediaToUploadPath
		{
			[Token(Token = "0x600132F")]
			[Address(RVA = "0x128C968", Offset = "0x128C968", VA = "0x128C968")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001330")]
			[Address(RVA = "0x128C970", Offset = "0x128C970", VA = "0x128C970")]
			set
			{
			}
		}

		[Token(Token = "0x1700018D")]
		public string mediaToUploadDirectory
		{
			[Token(Token = "0x6001331")]
			[Address(RVA = "0x128C9E4", Offset = "0x128C9E4", VA = "0x128C9E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018E")]
		public string mediaToUploadFileName
		{
			[Token(Token = "0x6001332")]
			[Address(RVA = "0x128CA50", Offset = "0x128CA50", VA = "0x128CA50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018F")]
		public string mediaToUploadExtension
		{
			[Token(Token = "0x6001333")]
			[Address(RVA = "0x128CABC", Offset = "0x128CABC", VA = "0x128CABC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000190")]
		public FileType mediaToUploadFileType
		{
			[Token(Token = "0x6001334")]
			[Address(RVA = "0x128CB28", Offset = "0x128CB28", VA = "0x128CB28")]
			get
			{
				return default(FileType);
			}
		}

		[Token(Token = "0x17000191")]
		public Dictionary<string, string> replacements
		{
			[Token(Token = "0x6001336")]
			[Address(RVA = "0x128CC08", Offset = "0x128CC08", VA = "0x128CC08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000192")]
		public string urlToShare
		{
			[Token(Token = "0x6001337")]
			[Address(RVA = "0x128CD80", Offset = "0x128CD80", VA = "0x128CD80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000193")]
		public string imgurTagsText
		{
			[Token(Token = "0x6001338")]
			[Address(RVA = "0x128CE60", Offset = "0x128CE60", VA = "0x128CE60")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000194")]
		public string twitterHashtagsText
		{
			[Token(Token = "0x6001339")]
			[Address(RVA = "0x128B8C4", Offset = "0x128B8C4", VA = "0x128B8C4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000195")]
		public int customUrlCount
		{
			[Token(Token = "0x600133A")]
			[Address(RVA = "0x128CF28", Offset = "0x128CF28", VA = "0x128CF28")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600133B")]
			[Address(RVA = "0x128CF30", Offset = "0x128CF30", VA = "0x128CF30")]
			set
			{
			}
		}

		[Token(Token = "0x17000196")]
		public bool convertingToMP4
		{
			[Token(Token = "0x600133C")]
			[Address(RVA = "0x128D030", Offset = "0x128D030", VA = "0x128D030")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1CAD8", Offset = "0xB1CAD8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600133D")]
			[Address(RVA = "0x128D038", Offset = "0x128D038", VA = "0x128D038")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1CAE8", Offset = "0xB1CAE8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000197")]
		public bool uploadingToServer
		{
			[Token(Token = "0x600133E")]
			[Address(RVA = "0x128D044", Offset = "0x128D044", VA = "0x128D044")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1CAF8", Offset = "0xB1CAF8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600133F")]
			[Address(RVA = "0x128D04C", Offset = "0x128D04C", VA = "0x128D04C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1CB08", Offset = "0xB1CB08")]
			private set
			{
			}
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0x128CB9C", Offset = "0x128CB9C", VA = "0x128CB9C")]
		public void DeleteMediaToUploadPath()
		{
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0x128D058", Offset = "0x128D058", VA = "0x128D058")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0x128B1B8", Offset = "0x128B1B8", VA = "0x128B1B8")]
		public void UploadToImgur()
		{
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0x128D11C", Offset = "0x128D11C", VA = "0x128D11C")]
		public void UploadToGiphy()
		{
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0x128D1D4", Offset = "0x128D1D4", VA = "0x128D1D4")]
		public void RehostOnGiphy()
		{
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0x128D290", Offset = "0x128D290", VA = "0x128D290")]
		public void InstantShareToTwitter()
		{
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0x128D340", Offset = "0x128D340", VA = "0x128D340")]
		public void ShareToTwitter()
		{
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0x128D3A8", Offset = "0x128D3A8", VA = "0x128D3A8")]
		public void ShareToTweetDeck()
		{
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0x128D3F8", Offset = "0x128D3F8", VA = "0x128D3F8")]
		public void ShareToReddit()
		{
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0x128D54C", Offset = "0x128D54C", VA = "0x128D54C")]
		public void ShareToGooglePlus()
		{
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0x128D5A8", Offset = "0x128D5A8", VA = "0x128D5A8")]
		public void ShareToPinterest()
		{
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0x128D6A0", Offset = "0x128D6A0", VA = "0x128D6A0")]
		public void ShareToFacebook()
		{
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0x128D71C", Offset = "0x128D71C", VA = "0x128D71C")]
		public void ShareByEmail()
		{
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0x128D7B8", Offset = "0x128D7B8", VA = "0x128D7B8")]
		public void ShareToCustomUrl(CustomUrl customUrl)
		{
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0x128D7F8", Offset = "0x128D7F8", VA = "0x128D7F8")]
		public void NativeShare(bool withUrl)
		{
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0x128D864", Offset = "0x128D864", VA = "0x128D864")]
		private static string CustomUrlExample(string baseUrl, string mediaUrl, int mediaWidth, int mediaHeight, bool escapeParameters)
		{
			return null;
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0x128DA8C", Offset = "0x128DA8C", VA = "0x128DA8C")]
		private void SetNewMediaUrls(string medialUrl, string mediaPostUrl)
		{
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0x1288054", Offset = "0x1288054", VA = "0x1288054")]
		public static FileType FileTypeForExtension(string extension)
		{
			return default(FileType);
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0x128DB40", Offset = "0x128DB40", VA = "0x128DB40")]
		private static string MimeTypeForPath(string filePath)
		{
			return null;
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0x128DBDC", Offset = "0x128DBDC", VA = "0x128DBDC")]
		private static string MimeTypeForFileType(FileType fileType)
		{
			return null;
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0x128DC70", Offset = "0x128DC70", VA = "0x128DC70")]
		public ShareScript()
		{
		}
	}
	[Token(Token = "0x2000394")]
	public class DemoGifShareTextScript : MonoBehaviour
	{
		[Token(Token = "0x400139D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GifScript gifScript;

		[Token(Token = "0x400139E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShareScript shareScript;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text text;

		[Token(Token = "0x6001359")]
		[Address(RVA = "0x128ABBC", Offset = "0x128ABBC", VA = "0x128ABBC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0x128AC14", Offset = "0x128AC14", VA = "0x128AC14")]
		private void Update()
		{
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0x128AD24", Offset = "0x128AD24", VA = "0x128AD24")]
		public DemoGifShareTextScript()
		{
		}
	}
	[Token(Token = "0x2000395")]
	public class DemoGifUploadTextScript : MonoBehaviour
	{
		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GifScript gifScript;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShareScript shareScript;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text text;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool gifUploaded;

		[Token(Token = "0x600135C")]
		[Address(RVA = "0x128AD2C", Offset = "0x128AD2C", VA = "0x128AD2C")]
		private void Awake()
		{
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0x128AD84", Offset = "0x128AD84", VA = "0x128AD84")]
		private void Update()
		{
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0x128AF04", Offset = "0x128AF04", VA = "0x128AF04")]
		public DemoGifUploadTextScript()
		{
		}
	}
	[Token(Token = "0x2000396")]
	public class InstantGifShareButton : MonoBehaviour
	{
		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ShareScript shareScript;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DisplayGifScript displayGifScript;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InstantTwitterShareScript instantTwitterShareScript;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB1986C", Offset = "0xB1986C")]
		public string usernameOverride;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string extraHashtags;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Button button;

		[Token(Token = "0x600135F")]
		[Address(RVA = "0x128B2EC", Offset = "0x128B2EC", VA = "0x128B2EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0x128B4DC", Offset = "0x128B4DC", VA = "0x128B4DC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0x128B62C", Offset = "0x128B62C", VA = "0x128B62C")]
		public void OnClick()
		{
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0x128B65C", Offset = "0x128B65C", VA = "0x128B65C")]
		private void GifToSave(GifScript gifScript, Texture2D[] frames, int framesPerSecond)
		{
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0x128B710", Offset = "0x128B710", VA = "0x128B710")]
		private void GifSaved(GifScript gifScript, string filePath)
		{
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0x128B984", Offset = "0x128B984", VA = "0x128B984")]
		public InstantGifShareButton()
		{
		}
	}
	[Token(Token = "0x2000397")]
	public class InstantScreenshotShareButtonScript : MonoBehaviour
	{
		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ShareScript shareScript;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ScreenshotScript screenshotScript;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public InstantTwitterShareScript instantTwitterShareScript;

		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB198A4", Offset = "0xB198A4")]
		public string usernameOverride;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string extraHashtags;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool wasClicked;

		[Token(Token = "0x6001365")]
		[Address(RVA = "0x128B98C", Offset = "0x128B98C", VA = "0x128B98C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0x128BA70", Offset = "0x128BA70", VA = "0x128BA70")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0x128BB54", Offset = "0x128BB54", VA = "0x128BB54")]
		public void OnClick()
		{
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0x128BB98", Offset = "0x128BB98", VA = "0x128BB98")]
		private void ScreenshotSaved(ScreenshotScript screenshotScript, string filePath)
		{
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0x128BD40", Offset = "0x128BD40", VA = "0x128BD40")]
		public InstantScreenshotShareButtonScript()
		{
		}
	}
	[Token(Token = "0x2000398")]
	public class LastTakenScreenshotScript : MonoBehaviour
	{
		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D defaultTexture;

		[Token(Token = "0x40013B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool copyTexture;

		[Token(Token = "0x40013B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool textureIsCopy;

		[Token(Token = "0x40013B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RawImage rawImage;

		[Token(Token = "0x40013B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AspectFitScript aspectFitScript;

		[Token(Token = "0x600136A")]
		[Address(RVA = "0x128C3D8", Offset = "0x128C3D8", VA = "0x128C3D8")]
		public LastTakenScreenshotScript()
		{
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0x128C4C8", Offset = "0x128C4C8", VA = "0x128C4C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0x128C738", Offset = "0x128C738", VA = "0x128C738")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0x128C850", Offset = "0x128C850", VA = "0x128C850")]
		private void ScreenshotTaken(ScreenshotScript screenshotScript, Texture2D screenshotTexture)
		{
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0x128C584", Offset = "0x128C584", VA = "0x128C584")]
		private void UpdateImage(Texture2D texture)
		{
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0x128C824", Offset = "0x128C824", VA = "0x128C824")]
		private void CleanUp()
		{
		}
	}
}
namespace TRS.CaptureTool.Extras
{
	[Token(Token = "0x2000399")]
	[ExecuteInEditMode]
	public class DebugInfoScript : MonoBehaviour
	{
		[Token(Token = "0x40013B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text debugInfoText;

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool includeCustomText;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool includeProject;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool includeScene;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		public bool includeVersion;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool includeBuild;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool includeDate;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string customText;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string dateFormat;

		[Token(Token = "0x40013BE")]
		private const string CONNECTING_TEXT = " - ";

		[Token(Token = "0x40013BF")]
		private const string BUILD_KEY = "TRS_Build";

		[Token(Token = "0x17000198")]
		public string debugText
		{
			[Token(Token = "0x6001370")]
			[Address(RVA = "0xEB1A24", Offset = "0xEB1A24", VA = "0xEB1A24")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0xEB1C9C", Offset = "0xEB1C9C", VA = "0xEB1C9C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0xEB1C50", Offset = "0xEB1C50", VA = "0xEB1C50")]
		public static string BuildVersion()
		{
			return null;
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0xEB1CD8", Offset = "0xEB1CD8", VA = "0xEB1CD8")]
		public DebugInfoScript()
		{
		}
	}
	[Token(Token = "0x200039A")]
	public static class Color32Extensions
	{
		[Token(Token = "0x6001374")]
		[Address(RVA = "0xEB16EC", Offset = "0xEB16EC", VA = "0xEB16EC")]
		public static Color AlphaBlend(this Color backgroundColor, Color foregroundColor)
		{
			return default(Color);
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0xEB17FC", Offset = "0xEB17FC", VA = "0xEB17FC")]
		public static Color SLBlend(this Color backgroundColor, Color foregroundColor)
		{
			return default(Color);
		}
	}
	[Token(Token = "0x200039B")]
	public static class ActionExtensions
	{
		[Token(Token = "0x6001376")]
		public static void PerformAfterCoroutine<T>(this Action action) where T : YieldInstruction, new()
		{
		}
	}
	[Token(Token = "0x200039C")]
	public class CoroutineBehaviour : MonoBehaviour
	{
		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static MonoBehaviour Instance;

		[Token(Token = "0x6001377")]
		[Address(RVA = "0xEB18DC", Offset = "0xEB18DC", VA = "0xEB18DC")]
		public static void StaticStartCoroutine(IEnumerator iEnumerator)
		{
		}

		[Token(Token = "0x6001378")]
		public static void StaticStartCoroutineAfterYield<T>(Action action) where T : YieldInstruction, new()
		{
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0xEB1944", Offset = "0xEB1944", VA = "0xEB1944")]
		private static void InitializeInstance()
		{
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0xEB1A1C", Offset = "0xEB1A1C", VA = "0xEB1A1C")]
		public CoroutineBehaviour()
		{
		}
	}
	[Token(Token = "0x200039D")]
	public static class MonoBehaviourExtensions
	{
		[Token(Token = "0x200039E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB173B8", Offset = "0xB173B8")]
		private sealed class <CoroutineAfterYield>d__1<T> : IEnumerator<object>, IEnumerator, IDisposable where T : YieldInstruction, new()
		{
			[Token(Token = "0x40013C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x40013C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private object <>2__current;

			[Token(Token = "0x40013C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Action action;

			[Token(Token = "0x17000199")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001380")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700019A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001382")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600137D")]
			[DebuggerHidden]
			public <CoroutineAfterYield>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x600137E")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600137F")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001381")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x600137B")]
		public static void StartCoroutineAfterYield<T>(this MonoBehaviour monoBehaviour, Action action) where T : YieldInstruction, new()
		{
		}

		[Token(Token = "0x600137C")]
		private static IEnumerator CoroutineAfterYield<T>(Action action) where T : YieldInstruction, new()
		{
			return null;
		}
	}
	[Token(Token = "0x200039F")]
	public static class MonoBehaviourExtended
	{
		[Token(Token = "0x6001383")]
		[Address(RVA = "0xEAB79C", Offset = "0xEAB79C", VA = "0xEAB79C")]
		public static void FlexibleDestroy(UnityEngine.Object obj)
		{
		}
	}
	[Token(Token = "0x20003A0")]
	public static class PathExtensions
	{
		[Token(Token = "0x6001384")]
		[Address(RVA = "0xEB1FE8", Offset = "0xEB1FE8", VA = "0xEB1FE8")]
		public static string MimeTypeForFilePath(string filePath)
		{
			return null;
		}
	}
	[Token(Token = "0x20003A1")]
	public static class RectExtensions
	{
		[Token(Token = "0x6001385")]
		[Address(RVA = "0xEAE17C", Offset = "0xEAE17C", VA = "0xEAE17C")]
		public static Rect ReverseNormalize(this Rect rect, Vector2 size)
		{
			return default(Rect);
		}
	}
	[Token(Token = "0x20003A2")]
	public static class RectTransformExtensions
	{
		[Token(Token = "0x6001386")]
		[Address(RVA = "0xEAD684", Offset = "0xEAD684", VA = "0xEAD684")]
		public static Rect RectForResolution(this RectTransform transform, Resolution resolution, bool positionRelative)
		{
			return default(Rect);
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0xEAD52C", Offset = "0xEAD52C", VA = "0xEAD52C")]
		public static Rect RectForCurrentResolution(this RectTransform transform)
		{
			return default(Rect);
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0xEB24E4", Offset = "0xEB24E4", VA = "0xEB24E4")]
		public static Rect ToScreenSpace(this RectTransform transform)
		{
			return default(Rect);
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0xEB214C", Offset = "0xEB214C", VA = "0xEB214C")]
		public static Rect ErrorCheckRectForResolution(Rect resultRect, Resolution resolution, bool logError = false)
		{
			return default(Rect);
		}
	}
	[Token(Token = "0x20003A3")]
	public static class AdditionalResolutions
	{
		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<Resolution, Rect> safeAreaForResolution;

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Dictionary<Resolution, Resolution> resolutionForAspectRatio;
	}
	[Token(Token = "0x20003A4")]
	public static class ResolutionExtensions
	{
		[Token(Token = "0x600138B")]
		[Address(RVA = "0xEB274C", Offset = "0xEB274C", VA = "0xEB274C")]
		public static Resolution EmptyResolution()
		{
			return default(Resolution);
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0xEB2794", Offset = "0xEB2794", VA = "0xEB2794")]
		public static bool HasSize(this Resolution resolution)
		{
			return default(bool);
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0xEAD310", Offset = "0xEAD310", VA = "0xEAD310")]
		public static bool IsSameSizeAs(this Resolution resolution, Resolution otherResolution)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003A5")]
	public static class ScreenExtensions
	{
		[Token(Token = "0x20003A6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB173F8", Offset = "0xB173F8")]
		private sealed class <>c__DisplayClass15_0
		{
			[Token(Token = "0x40013C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int width;

			[Token(Token = "0x40013CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int height;

			[Token(Token = "0x6001395")]
			[Address(RVA = "0xEB2EDC", Offset = "0xEB2EDC", VA = "0xEB2EDC")]
			public <>c__DisplayClass15_0()
			{
			}

			[Token(Token = "0x6001396")]
			[Address(RVA = "0xEB2EE4", Offset = "0xEB2EE4", VA = "0xEB2EE4")]
			internal void <UpdateResolution>b__0()
			{
			}
		}

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB198DC", Offset = "0xB198DC")]
		private static bool <resolutionUpdatesComplete>k__BackingField;

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB198EC", Offset = "0xB198EC")]
		private static Action<int, int> ResolutionUpdated;

		[Token(Token = "0x40013C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB198FC", Offset = "0xB198FC")]
		private static Action<int, int> ResolutionUpdatesComplete;

		[Token(Token = "0x1700019B")]
		public static bool resolutionUpdatesComplete
		{
			[Token(Token = "0x600138E")]
			[Address(RVA = "0xEB2D04", Offset = "0xEB2D04", VA = "0xEB2D04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1CC08", Offset = "0xB1CC08")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600138F")]
			[Address(RVA = "0xEB2D54", Offset = "0xEB2D54", VA = "0xEB2D54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1CC18", Offset = "0xB1CC18")]
			private set
			{
			}
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0xEAD28C", Offset = "0xEAD28C", VA = "0xEAD28C")]
		public static Resolution CurrentResolution()
		{
			return default(Resolution);
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0xEB28B4", Offset = "0xEB28B4", VA = "0xEB28B4")]
		public static Rect SafeArea()
		{
			return default(Rect);
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0xEAD390", Offset = "0xEAD390", VA = "0xEAD390")]
		public static void UpdateResolution(Resolution resolution)
		{
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0xEB2DAC", Offset = "0xEB2DAC", VA = "0xEB2DAC")]
		public static void UpdateResolution(int width, int height)
		{
		}

		[Token(Token = "0x6001394")]
		[Address(RVA = "0xEB2DE0", Offset = "0xEB2DE0", VA = "0xEB2DE0")]
		public static void UpdateResolution(int width, int height, bool fullscreen)
		{
		}
	}
	[Token(Token = "0x20003A7")]
	public class WaitForResolutionUpdates : CustomYieldInstruction
	{
		[Token(Token = "0x1700019C")]
		public override bool keepWaiting
		{
			[Token(Token = "0x6001397")]
			[Address(RVA = "0xEB4780", Offset = "0xEB4780", VA = "0xEB4780", Slot = "7")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0xEAD3F0", Offset = "0xEAD3F0", VA = "0xEAD3F0")]
		public WaitForResolutionUpdates()
		{
		}
	}
	[Token(Token = "0x20003A8")]
	public static class Texture2DExtensions
	{
		[Serializable]
		[Token(Token = "0x20003A9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17418", Offset = "0xB17418")]
		private sealed class <>c
		{
			[Token(Token = "0x40013CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40013CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static NativeGallery.MediaSaveCallback <>9__18_0;

			[Token(Token = "0x40013CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static NativeGallery.MediaSaveCallback <>9__18_1;

			[Token(Token = "0x60013A9")]
			[Address(RVA = "0xEB438C", Offset = "0xEB438C", VA = "0xEB438C")]
			public <>c()
			{
			}

			[Token(Token = "0x60013AA")]
			[Address(RVA = "0xEB4394", Offset = "0xEB4394", VA = "0xEB4394")]
			internal void <SaveAccordingToFileSettings>b__18_0(bool success, string path)
			{
			}

			[Token(Token = "0x60013AB")]
			[Address(RVA = "0xEB4414", Offset = "0xEB4414", VA = "0xEB4414")]
			internal void <SaveAccordingToFileSettings>b__18_1(bool success, string path)
			{
			}
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0xEB2FA8", Offset = "0xEB2FA8", VA = "0xEB2FA8")]
		public static Texture2D ApplyTransformation(this Texture2D texture, TextureTransformation textureTransformation, bool apply = true, bool destroyOriginal = true)
		{
			return null;
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0xEB2FD8", Offset = "0xEB2FD8", VA = "0xEB2FD8")]
		public static Texture2D ApplyTransformations(this Texture2D texture, TextureTransformation[] textureTransformations, bool apply = true, bool destroyOriginals = true)
		{
			return null;
		}

		[Token(Token = "0x600139B")]
		[Address(RVA = "0xEAB530", Offset = "0xEAB530", VA = "0xEAB530")]
		public static Texture2D Cutout(this Texture2D original, Rect cutoutRect, bool apply = true, bool destroyOriginal = true)
		{
			return null;
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0xEB3290", Offset = "0xEB3290", VA = "0xEB3290")]
		public static Texture2D Solidify(this Texture2D texture, bool apply = true)
		{
			return null;
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0xEB3424", Offset = "0xEB3424", VA = "0xEB3424")]
		public static Texture2D Resize(this Texture2D texture, Resolution resizeResolution, bool apply = true)
		{
			return null;
		}

		[Token(Token = "0x600139E")]
		[Address(RVA = "0xEABCE4", Offset = "0xEABCE4", VA = "0xEABCE4")]
		public static Texture2D AlphaBlend(this Texture2D background, Texture2D foreground, bool apply = true, bool destroyOriginals = true)
		{
			return null;
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0xEB3518", Offset = "0xEB3518", VA = "0xEB3518")]
		public static Texture2D Blend(this Texture2D background, Texture2D foreground, Vector2Int position, Color emptySpaceFillColor, bool alphaBlend = true, bool apply = true, bool destroyOriginals = true)
		{
			return null;
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0xEB321C", Offset = "0xEB321C", VA = "0xEB321C")]
		public static TextureFormat EditableTextureFormat(this Texture2D texture)
		{
			return default(TextureFormat);
		}

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0xEB30A0", Offset = "0xEB30A0", VA = "0xEB30A0")]
		public static Texture2D EditableTexture(this Texture2D texture, bool forceCopy = false, bool apply = false)
		{
			return null;
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0xEB3CA0", Offset = "0xEB3CA0", VA = "0xEB3CA0")]
		public static byte[] ToBytes(this Texture2D texture, string extension, int jpgQuality = 100)
		{
			return null;
		}

		[Token(Token = "0x60013A3")]
		[Address(RVA = "0xEB3E54", Offset = "0xEB3E54", VA = "0xEB3E54")]
		public static bool SaveToFilePath(this Texture2D texture, string filePath, int jpgQuality = 100)
		{
			return default(bool);
		}

		[Token(Token = "0x60013A4")]
		[Address(RVA = "0xEB3EE4", Offset = "0xEB3EE4", VA = "0xEB3EE4")]
		private static bool SaveToFilePath(byte[] textureBytes, string filePath)
		{
			return default(bool);
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0xEB4004", Offset = "0xEB4004", VA = "0xEB4004")]
		public static bool SaveAccordingToFileSettings(this Texture2D texture, ScreenshotFileSettings fileSettings, string overrideFilePath = "")
		{
			return default(bool);
		}

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0xEB3C50", Offset = "0xEB3C50", VA = "0xEB3C50")]
		public static void DestroyIfPossible(this Texture2D texture)
		{
		}

		[Token(Token = "0x60013A7")]
		[Address(RVA = "0xEABC0C", Offset = "0xEABC0C", VA = "0xEABC0C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xB1CCF8", Offset = "0xB1CCF8")]
		public static void CaptureCameraRenderTexture(this Texture2D texture, Camera camera, RenderTexture renderTexture, Rect rect, bool apply = true)
		{
		}
	}
	[Token(Token = "0x20003AA")]
	public static class WWWExtensions
	{
		[Token(Token = "0x60013AC")]
		[Address(RVA = "0xEB45B0", Offset = "0xEB45B0", VA = "0xEB45B0")]
		public static string CombinedUrl(string url, string parameters)
		{
			return null;
		}

		[Token(Token = "0x60013AD")]
		[Address(RVA = "0xEB4710", Offset = "0xEB4710", VA = "0xEB4710")]
		public static string PlusEscapeUrl(string url)
		{
			return null;
		}
	}
	[Token(Token = "0x20003AB")]
	public class HotKeyActivationScript : MonoBehaviour
	{
		[Token(Token = "0x40013CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HotKeySet hotKeySet;

		[Token(Token = "0x40013CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject activatedObject;

		[Token(Token = "0x60013AE")]
		[Address(RVA = "0xEB1D4C", Offset = "0xEB1D4C", VA = "0xEB1D4C")]
		private void Update()
		{
		}

		[Token(Token = "0x60013AF")]
		[Address(RVA = "0xEB1FD8", Offset = "0xEB1FD8", VA = "0xEB1FD8")]
		public HotKeyActivationScript()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003AC")]
	public struct HotKeySet
	{
		[Token(Token = "0x40013D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool shift;

		[Token(Token = "0x40013D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xB1990C", Offset = "0xB1990C")]
		public bool ctrl;

		[Token(Token = "0x40013D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public bool alt;

		[Token(Token = "0x40013D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public KeyCode keyCode;

		[Token(Token = "0x60013B0")]
		[Address(RVA = "0xBCA2B8", Offset = "0xBCA2B8", VA = "0xBCA2B8")]
		public bool MatchesInput()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003AD")]
	[ExecuteInEditMode]
	public class RecursiveColorChangeScript : MonoBehaviour
	{
		[Token(Token = "0x40013D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color sharedColor;

		[Token(Token = "0x40013D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Graphic[] graphics;

		[Token(Token = "0x60013B1")]
		[Address(RVA = "0xEB2664", Offset = "0xEB2664", VA = "0xEB2664")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013B2")]
		[Address(RVA = "0xEB26BC", Offset = "0xEB26BC", VA = "0xEB26BC")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60013B3")]
		[Address(RVA = "0xEB2744", Offset = "0xEB2744", VA = "0xEB2744")]
		public RecursiveColorChangeScript()
		{
		}
	}
	[Token(Token = "0x20003AE")]
	public class SafeArea : MonoBehaviour
	{
		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private RectTransform panel;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rect lastSafeArea;

		[Token(Token = "0x60013B4")]
		[Address(RVA = "0xEB27D8", Offset = "0xEB27D8", VA = "0xEB27D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013B5")]
		[Address(RVA = "0xEB28B0", Offset = "0xEB28B0", VA = "0xEB28B0")]
		private void Update()
		{
		}

		[Token(Token = "0x60013B6")]
		[Address(RVA = "0xEB2834", Offset = "0xEB2834", VA = "0xEB2834")]
		private void Refresh()
		{
		}

		[Token(Token = "0x60013B7")]
		[Address(RVA = "0xEB2A34", Offset = "0xEB2A34", VA = "0xEB2A34")]
		private void ApplySafeArea(Rect r)
		{
		}

		[Token(Token = "0x60013B8")]
		[Address(RVA = "0xEB2BB8", Offset = "0xEB2BB8", VA = "0xEB2BB8")]
		public SafeArea()
		{
		}
	}
	[Token(Token = "0x20003AF")]
	public class AspectFitScript : MonoBehaviour
	{
		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private RawImage rawImage;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector2 originalSize;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector2 originalAnchorMin;

		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector2 originalAnchorMax;

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool setup;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool textureIsCopy;

		[Token(Token = "0x60013B9")]
		[Address(RVA = "0xEB12BC", Offset = "0xEB12BC", VA = "0xEB12BC")]
		private void Start()
		{
		}

		[Token(Token = "0x60013BA")]
		[Address(RVA = "0xEB12C0", Offset = "0xEB12C0", VA = "0xEB12C0")]
		private void Setup()
		{
		}

		[Token(Token = "0x60013BB")]
		[Address(RVA = "0xEB01CC", Offset = "0xEB01CC", VA = "0xEB01CC")]
		public void SetTexture(Texture2D texture, bool copy = true)
		{
		}

		[Token(Token = "0x60013BC")]
		[Address(RVA = "0xEB1388", Offset = "0xEB1388", VA = "0xEB1388")]
		public void AdjustSizeToTexture(Texture2D texture)
		{
		}

		[Token(Token = "0x60013BD")]
		[Address(RVA = "0xEB1658", Offset = "0xEB1658", VA = "0xEB1658")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60013BE")]
		[Address(RVA = "0xEB16E4", Offset = "0xEB16E4", VA = "0xEB16E4")]
		public AspectFitScript()
		{
		}
	}
	[Token(Token = "0x20003B0")]
	public class MouseFollowScript : MonoBehaviour
	{
		[Token(Token = "0x60013BF")]
		[Address(RVA = "0xEB1FE0", Offset = "0xEB1FE0", VA = "0xEB1FE0")]
		public MouseFollowScript()
		{
		}
	}
	[Token(Token = "0x20003B1")]
	public class SceneMouseFollowScript : MouseFollowScript
	{
		[Token(Token = "0x60013C0")]
		[Address(RVA = "0xEB2C10", Offset = "0xEB2C10", VA = "0xEB2C10")]
		private void Update()
		{
		}

		[Token(Token = "0x60013C1")]
		[Address(RVA = "0xEB2CFC", Offset = "0xEB2CFC", VA = "0xEB2CFC")]
		public SceneMouseFollowScript()
		{
		}
	}
	[Token(Token = "0x20003B2")]
	public class UIMouseFollowScript : MouseFollowScript
	{
		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private RawImage mouseImage;

		[Token(Token = "0x60013C2")]
		[Address(RVA = "0xEB4494", Offset = "0xEB4494", VA = "0xEB4494")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013C3")]
		[Address(RVA = "0xEB44EC", Offset = "0xEB44EC", VA = "0xEB44EC")]
		private void Update()
		{
		}

		[Token(Token = "0x60013C4")]
		[Address(RVA = "0xEB45A8", Offset = "0xEB45A8", VA = "0xEB45A8")]
		public UIMouseFollowScript()
		{
		}
	}
	[Token(Token = "0x20003B3")]
	public class UIStatus
	{
		[Token(Token = "0x60013C5")]
		[Address(RVA = "0xEB1DBC", Offset = "0xEB1DBC", VA = "0xEB1DBC")]
		public static bool InputFieldFocused()
		{
			return default(bool);
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x20003B4")]
	public enum FaceType : uint
	{
		[Token(Token = "0x40013E0")]
		TRIANGLES,
		[Token(Token = "0x40013E1")]
		QUADS
	}
	[Token(Token = "0x20003B5")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x40013E3")]
		ABSORPTION,
		[Token(Token = "0x40013E4")]
		TRANSMISSION,
		[Token(Token = "0x40013E5")]
		SCATTERING
	}
	[Token(Token = "0x20003B6")]
	public struct MeshGroup
	{
		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x20003B7")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x1700019D")]
		public bool Highlight
		{
			[Token(Token = "0x60013C6")]
			[Address(RVA = "0xDEAF1C", Offset = "0xDEAF1C", VA = "0xDEAF1C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013C7")]
			[Address(RVA = "0xDEAF24", Offset = "0xDEAF24", VA = "0xDEAF24")]
			set
			{
			}
		}

		[Token(Token = "0x60013C8")]
		[Address(RVA = "0xDEAF30", Offset = "0xDEAF30", VA = "0xDEAF30")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x60013C9")]
		[Address(RVA = "0xDEB0FC", Offset = "0xDEB0FC", VA = "0xDEB0FC", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x60013CA")]
		[Address(RVA = "0xDEB124", Offset = "0xDEB124", VA = "0xDEB124", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x60013CB")]
		[Address(RVA = "0xDEB14C", Offset = "0xDEB14C", VA = "0xDEB14C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013CC")]
		[Address(RVA = "0xDEAFFC", Offset = "0xDEAFFC", VA = "0xDEAFFC")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x60013CD")]
		[Address(RVA = "0xDEB3A0", Offset = "0xDEB3A0", VA = "0xDEB3A0")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x20003B8")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x40013F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x40013F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x1700019E")]
		public bool InRange
		{
			[Token(Token = "0x60013CF")]
			[Address(RVA = "0xDEB48C", Offset = "0xDEB48C", VA = "0xDEB48C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013D0")]
			[Address(RVA = "0xDEB494", Offset = "0xDEB494", VA = "0xDEB494")]
			set
			{
			}
		}

		[Token(Token = "0x1700019F")]
		public bool Targeted
		{
			[Token(Token = "0x60013D1")]
			[Address(RVA = "0xDEB610", Offset = "0xDEB610", VA = "0xDEB610")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013D2")]
			[Address(RVA = "0xDEB618", Offset = "0xDEB618", VA = "0xDEB618")]
			set
			{
			}
		}

		[Token(Token = "0x60013D3")]
		[Address(RVA = "0xDEB624", Offset = "0xDEB624", VA = "0xDEB624", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60013D4")]
		[Address(RVA = "0xDEB4A0", Offset = "0xDEB4A0", VA = "0xDEB4A0")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x60013D5")]
		[Address(RVA = "0xDEB7C4", Offset = "0xDEB7C4", VA = "0xDEB7C4")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x20003B9")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB17438", Offset = "0xB17438")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x40013F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x40013F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x40013F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x40013F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x40013FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x40013FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x40013FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x40013FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x170001A0")]
		public bool UseSpherecast
		{
			[Token(Token = "0x60013D6")]
			[Address(RVA = "0xDEB7CC", Offset = "0xDEB7CC", VA = "0xDEB7CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60013D7")]
			[Address(RVA = "0xDEB7D4", Offset = "0xDEB7D4", VA = "0xDEB7D4")]
			set
			{
			}
		}

		[Token(Token = "0x60013D8")]
		[Address(RVA = "0xDEB7F0", Offset = "0xDEB7F0", VA = "0xDEB7F0", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60013D9")]
		[Address(RVA = "0xDEB9F8", Offset = "0xDEB9F8", VA = "0xDEB9F8", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x60013DA")]
		[Address(RVA = "0xDEC314", Offset = "0xDEC314", VA = "0xDEC314", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x60013DB")]
		[Address(RVA = "0xDEC8D0", Offset = "0xDEC8D0", VA = "0xDEC8D0", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x60013DC")]
		[Address(RVA = "0xDECCB0", Offset = "0xDECCB0", VA = "0xDECCB0")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x60013DD")]
		[Address(RVA = "0xDEBC44", Offset = "0xDEBC44", VA = "0xDEBC44")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60013DE")]
		[Address(RVA = "0xDECD8C", Offset = "0xDECD8C", VA = "0xDECD8C")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60013DF")]
		[Address(RVA = "0xDED1C8", Offset = "0xDED1C8", VA = "0xDED1C8", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x60013E0")]
		[Address(RVA = "0xDED1E0", Offset = "0xDED1E0", VA = "0xDED1E0", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0xDED1E8", Offset = "0xDED1E8", VA = "0xDED1E8")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x20003BA")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0xDED208", Offset = "0xDED208", VA = "0xDED208")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x60013E3")]
		[Address(RVA = "0xDED2B8", Offset = "0xDED2B8", VA = "0xDED2B8")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x60013E4")]
		[Address(RVA = "0xDED364", Offset = "0xDED364", VA = "0xDED364")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x20003BB")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x20003BC")]
		public enum CrosshairState
		{
			[Token(Token = "0x400140C")]
			Disabled,
			[Token(Token = "0x400140D")]
			Enabled,
			[Token(Token = "0x400140E")]
			Targeted
		}

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x400140A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0xDED36C", Offset = "0xDED36C", VA = "0xDED36C")]
		private void Start()
		{
		}

		[Token(Token = "0x60013E6")]
		[Address(RVA = "0xDEB728", Offset = "0xDEB728", VA = "0xDEB728")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0xDED3D4", Offset = "0xDED3D4", VA = "0xDED3D4")]
		private void Update()
		{
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0xDED41C", Offset = "0xDED41C", VA = "0xDED41C")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x20003BD")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x60013E9")]
		[Address(RVA = "0xDED424", Offset = "0xDED424", VA = "0xDED424")]
		private void Start()
		{
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0xDED4F0", Offset = "0xDED4F0", VA = "0xDED4F0")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0xDED4FC", Offset = "0xDED4FC", VA = "0xDED4FC")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0xDED508", Offset = "0xDED508", VA = "0xDED508")]
		public PauseOnInputLoss()
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x20003BE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB1749C", Offset = "0xB1749C")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17500", Offset = "0xB17500")]
		private sealed class <>c
		{
			[Token(Token = "0x400142B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400142C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x60013FA")]
			[Address(RVA = "0xDE8F80", Offset = "0xDE8F80", VA = "0xDE8F80")]
			public <>c()
			{
			}

			[Token(Token = "0x60013FB")]
			[Address(RVA = "0xDE8F88", Offset = "0xDE8F88", VA = "0xDE8F88")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400140F")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x4001410")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x4001411")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x4001412")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x4001413")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x4001414")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x4001415")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x4001416")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x4001417")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x4001418")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x4001419")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x60013ED")]
		[Address(RVA = "0xDE81C4", Offset = "0xDE81C4", VA = "0xDE81C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0xDE821C", Offset = "0xDE821C", VA = "0xDE821C")]
		private void Start()
		{
		}

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0xDE8624", Offset = "0xDE8624", VA = "0xDE8624")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60013F0")]
		[Address(RVA = "0xDE86F0", Offset = "0xDE86F0", VA = "0xDE86F0")]
		private void Update()
		{
		}

		[Token(Token = "0x60013F1")]
		[Address(RVA = "0xDE87FC", Offset = "0xDE87FC", VA = "0xDE87FC")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0xDE8B34", Offset = "0xDE8B34", VA = "0xDE8B34")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60013F3")]
		[Address(RVA = "0xDE8C9C", Offset = "0xDE8C9C", VA = "0xDE8C9C")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0xDE8DE8", Offset = "0xDE8DE8", VA = "0xDE8DE8")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0xDE8898", Offset = "0xDE8898", VA = "0xDE8898")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0xDE8938", Offset = "0xDE8938", VA = "0xDE8938")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x60013F7")]
		[Address(RVA = "0xDE8478", Offset = "0xDE8478", VA = "0xDE8478")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x60013F8")]
		[Address(RVA = "0xDE8F04", Offset = "0xDE8F04", VA = "0xDE8F04")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x20003C0")]
	public enum HandPoseId
	{
		[Token(Token = "0x400142E")]
		Default,
		[Token(Token = "0x400142F")]
		Generic,
		[Token(Token = "0x4001430")]
		PingPongBall,
		[Token(Token = "0x4001431")]
		Controller
	}
	[Token(Token = "0x20003C1")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x170001A1")]
		public bool AllowPointing
		{
			[Token(Token = "0x60013FC")]
			[Address(RVA = "0xDE8FB4", Offset = "0xDE8FB4", VA = "0xDE8FB4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A2")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x60013FD")]
			[Address(RVA = "0xDE8FBC", Offset = "0xDE8FBC", VA = "0xDE8FBC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A3")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x60013FE")]
			[Address(RVA = "0xDE8FC4", Offset = "0xDE8FC4", VA = "0xDE8FC4")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x60013FF")]
		[Address(RVA = "0xDE8FCC", Offset = "0xDE8FCC", VA = "0xDE8FCC")]
		public HandPose()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x20003C2")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool autoRetrigger;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform[] playPositions;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x6001400")]
		[Address(RVA = "0xDDFC38", Offset = "0xDDFC38", VA = "0xDDFC38")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0xDDFDBC", Offset = "0xDDFDBC", VA = "0xDDFDBC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0xDDFF98", Offset = "0xDDFF98", VA = "0xDDFF98")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0xDDFE1C", Offset = "0xDDFE1C", VA = "0xDDFE1C")]
		public void Play()
		{
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0xDE00D8", Offset = "0xDE00D8", VA = "0xDE00D8")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0xDE024C", Offset = "0xDE024C", VA = "0xDE024C")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x20003C3")]
	public enum PreloadSounds
	{
		[Token(Token = "0x4001440")]
		Default,
		[Token(Token = "0x4001441")]
		Preload,
		[Token(Token = "0x4001442")]
		ManualPreload
	}
	[Token(Token = "0x20003C4")]
	public enum Fade
	{
		[Token(Token = "0x4001444")]
		In,
		[Token(Token = "0x4001445")]
		Out
	}
	[Serializable]
	[Token(Token = "0x20003C5")]
	public class SoundGroup
	{
		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB19A44", Offset = "0xB19A44")]
		public int maxPlayingSounds;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int playingSoundCount;

		[Token(Token = "0x6001406")]
		[Address(RVA = "0xDE8138", Offset = "0xDE8138", VA = "0xDE8138")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x6001407")]
		[Address(RVA = "0xDE72D4", Offset = "0xDE72D4", VA = "0xDE72D4")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x6001408")]
		[Address(RVA = "0xDE7414", Offset = "0xDE7414", VA = "0xDE7414")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0xDE7EB0", Offset = "0xDE7EB0", VA = "0xDE7EB0")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20003C6")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x20003C7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17510", Offset = "0xB17510")]
		private sealed class <>c__DisplayClass77_0
		{
			[Token(Token = "0x400146C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x600143F")]
			[Address(RVA = "0xDE4470", Offset = "0xDE4470", VA = "0xDE4470")]
			public <>c__DisplayClass77_0()
			{
			}

			[Token(Token = "0x6001440")]
			[Address(RVA = "0xDE6DEC", Offset = "0xDE6DEC", VA = "0xDE6DEC")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20003C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17520", Offset = "0xB17520")]
		private sealed class <>c
		{
			[Token(Token = "0x400146D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400146E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__77_1;

			[Token(Token = "0x6001442")]
			[Address(RVA = "0xDE6D54", Offset = "0xDE6D54", VA = "0xDE6D54")]
			public <>c()
			{
			}

			[Token(Token = "0x6001443")]
			[Address(RVA = "0xDE6D5C", Offset = "0xDE6D5C", VA = "0xDE6D5C")]
			internal bool <FindFreeEmitter>b__77_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool makePersistent;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixer audioMixer;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool verboseLogging;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int maxSoundEmitters;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float volumeSoundFX;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float soundFxFadeSecs;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x170001A4")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x600140A")]
			[Address(RVA = "0xDE030C", Offset = "0xDE030C", VA = "0xDE030C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A5")]
		public static AudioManager Instance
		{
			[Token(Token = "0x600140B")]
			[Address(RVA = "0xDE03EC", Offset = "0xDE03EC", VA = "0xDE03EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A6")]
		public static float NearFallOff
		{
			[Token(Token = "0x600140C")]
			[Address(RVA = "0xDE0454", Offset = "0xDE0454", VA = "0xDE0454")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001A7")]
		public static float FarFallOff
		{
			[Token(Token = "0x600140D")]
			[Address(RVA = "0xDE04C8", Offset = "0xDE04C8", VA = "0xDE04C8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001A8")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x600140E")]
			[Address(RVA = "0xDE053C", Offset = "0xDE053C", VA = "0xDE053C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A9")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x600140F")]
			[Address(RVA = "0xDE05B0", Offset = "0xDE05B0", VA = "0xDE05B0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AA")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x6001410")]
			[Address(RVA = "0xDE0624", Offset = "0xDE0624", VA = "0xDE0624")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001AB")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x600141B")]
			[Address(RVA = "0xDE2394", Offset = "0xDE2394", VA = "0xDE2394")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0xDE0698", Offset = "0xDE0698", VA = "0xDE0698")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0xDE08C0", Offset = "0xDE08C0", VA = "0xDE08C0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0xDE069C", Offset = "0xDE069C", VA = "0xDE069C")]
		private void Init()
		{
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0xDE150C", Offset = "0xDE150C", VA = "0xDE150C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0xDE0A18", Offset = "0xDE0A18", VA = "0xDE0A18")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0xDE1B30", Offset = "0xDE1B30", VA = "0xDE1B30")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0xDE1CB0", Offset = "0xDE1CB0", VA = "0xDE1CB0")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x6001418")]
		[Address(RVA = "0xDE1E4C", Offset = "0xDE1E4C", VA = "0xDE1E4C")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6001419")]
		[Address(RVA = "0xDE1F4C", Offset = "0xDE1F4C", VA = "0xDE1F4C")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0xDE1FDC", Offset = "0xDE1FDC", VA = "0xDE1FDC")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x600141C")]
		[Address(RVA = "0xDE23FC", Offset = "0xDE23FC", VA = "0xDE23FC")]
		private static int CalculateMaxEmittersSize()
		{
			return default(int);
		}

		[Token(Token = "0x600141D")]
		[Address(RVA = "0xDE2474", Offset = "0xDE2474", VA = "0xDE2474")]
		private static bool ValidateEmitterIndex(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0xDE0E64", Offset = "0xDE0E64", VA = "0xDE0E64")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0xDE1510", Offset = "0xDE1510", VA = "0xDE1510")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0xDE2704", Offset = "0xDE2704", VA = "0xDE2704")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0xDE2808", Offset = "0xDE2808", VA = "0xDE2808")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0xDE2910", Offset = "0xDE2910", VA = "0xDE2910")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0xDE25CC", Offset = "0xDE25CC", VA = "0xDE25CC")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x6001424")]
		[Address(RVA = "0xDE2A7C", Offset = "0xDE2A7C", VA = "0xDE2A7C")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x6001425")]
		[Address(RVA = "0xDE2BD0", Offset = "0xDE2BD0", VA = "0xDE2BD0")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0xDE2D80", Offset = "0xDE2D80", VA = "0xDE2D80")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0xDE0028", Offset = "0xDE0028", VA = "0xDE0028")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0xDE019C", Offset = "0xDE019C", VA = "0xDE019C")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0xDE2F2C", Offset = "0xDE2F2C", VA = "0xDE2F2C")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0xDE2FF8", Offset = "0xDE2FF8", VA = "0xDE2FF8")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0xDE308C", Offset = "0xDE308C", VA = "0xDE308C")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0xDE3150", Offset = "0xDE3150", VA = "0xDE3150")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0xDE31F4", Offset = "0xDE31F4", VA = "0xDE31F4")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0xDE32D4", Offset = "0xDE32D4", VA = "0xDE32D4")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x600142F")]
		[Address(RVA = "0xDE3DB8", Offset = "0xDE3DB8", VA = "0xDE3DB8")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x6001430")]
		[Address(RVA = "0xDE4478", Offset = "0xDE4478", VA = "0xDE4478")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001431")]
		[Address(RVA = "0xDE4658", Offset = "0xDE4658", VA = "0xDE4658")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6001432")]
		[Address(RVA = "0xDE539C", Offset = "0xDE539C", VA = "0xDE539C")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001433")]
		[Address(RVA = "0xDE34DC", Offset = "0xDE34DC", VA = "0xDE34DC")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001434")]
		[Address(RVA = "0xDE54BC", Offset = "0xDE54BC", VA = "0xDE54BC")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x6001435")]
		[Address(RVA = "0xDE5590", Offset = "0xDE5590", VA = "0xDE5590")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001436")]
		[Address(RVA = "0xDE5670", Offset = "0xDE5670", VA = "0xDE5670")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x6001437")]
		[Address(RVA = "0xDE5A28", Offset = "0xDE5A28", VA = "0xDE5A28")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0xDE5C24", Offset = "0xDE5C24", VA = "0xDE5C24")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x6001439")]
		[Address(RVA = "0xDE5D40", Offset = "0xDE5D40", VA = "0xDE5D40")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x600143A")]
		[Address(RVA = "0xDE5F08", Offset = "0xDE5F08", VA = "0xDE5F08")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0xDE5FE0", Offset = "0xDE5FE0", VA = "0xDE5FE0")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0xDE6114", Offset = "0xDE6114", VA = "0xDE6114")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0xDE6500", Offset = "0xDE6500", VA = "0xDE6500")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x20003C9")]
	public enum EmitterChannel
	{
		[Token(Token = "0x4001470")]
		None = -1,
		[Token(Token = "0x4001471")]
		Reserved,
		[Token(Token = "0x4001472")]
		Any
	}
	[Serializable]
	[Token(Token = "0x20003CA")]
	public class MixerSnapshot
	{
		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x6001444")]
		[Address(RVA = "0xDE6E8C", Offset = "0xDE6E8C", VA = "0xDE6E8C")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x20003CB")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x20003CC")]
		public enum FadeState
		{
			[Token(Token = "0x4001485")]
			Null,
			[Token(Token = "0x4001486")]
			FadingIn,
			[Token(Token = "0x4001487")]
			FadingOut,
			[Token(Token = "0x4001488")]
			Ducking
		}

		[Token(Token = "0x20003CD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17530", Offset = "0xB17530")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001489")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400148A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400148B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x400148C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x400148D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x400148E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x170001B5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001471")]
				[Address(RVA = "0xDE78D8", Offset = "0xDE78D8", VA = "0xDE78D8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001473")]
				[Address(RVA = "0xDE7940", Offset = "0xDE7940", VA = "0xDE7940", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600146E")]
			[Address(RVA = "0xDE75B8", Offset = "0xDE75B8", VA = "0xDE75B8")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x600146F")]
			[Address(RVA = "0xDE77E8", Offset = "0xDE77E8", VA = "0xDE77E8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001470")]
			[Address(RVA = "0xDE77EC", Offset = "0xDE77EC", VA = "0xDE77EC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001472")]
			[Address(RVA = "0xDE78E0", Offset = "0xDE78E0", VA = "0xDE78E0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003CE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17540", Offset = "0xB17540")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400148F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001490")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001491")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4001492")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x4001493")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x4001494")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x4001495")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x4001496")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4001497")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x170001B7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001477")]
				[Address(RVA = "0xDE7D8C", Offset = "0xDE7D8C", VA = "0xDE7D8C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001B8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001479")]
				[Address(RVA = "0xDE7DF4", Offset = "0xDE7DF4", VA = "0xDE7DF4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001474")]
			[Address(RVA = "0xDE7778", Offset = "0xDE7778", VA = "0xDE7778")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x6001475")]
			[Address(RVA = "0xDE7C20", Offset = "0xDE7C20", VA = "0xDE7C20", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001476")]
			[Address(RVA = "0xDE7C24", Offset = "0xDE7C24", VA = "0xDE7C24", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001478")]
			[Address(RVA = "0xDE7D94", Offset = "0xDE7D94", VA = "0xDE7D94", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003CF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17550", Offset = "0xB17550")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001498")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001499")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400149A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x400149B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x400149C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x400149D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x400149E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x400149F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x40014A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x40014A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x40014A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x40014A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x170001B9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600147D")]
				[Address(RVA = "0xDE7BB0", Offset = "0xDE7BB0", VA = "0xDE7BB0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001BA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600147F")]
				[Address(RVA = "0xDE7C18", Offset = "0xDE7C18", VA = "0xDE7C18", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600147A")]
			[Address(RVA = "0xDE77A4", Offset = "0xDE77A4", VA = "0xDE77A4")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x600147B")]
			[Address(RVA = "0xDE7948", Offset = "0xDE7948", VA = "0xDE7948", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600147C")]
			[Address(RVA = "0xDE794C", Offset = "0xDE794C", VA = "0xDE794C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600147E")]
			[Address(RVA = "0xDE7BB8", Offset = "0xDE7BB8", VA = "0xDE7BB8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float endPlayTime;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x170001AC")]
		public float volume
		{
			[Token(Token = "0x6001445")]
			[Address(RVA = "0xDE5380", Offset = "0xDE5380", VA = "0xDE5380")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001446")]
			[Address(RVA = "0xDE6F2C", Offset = "0xDE6F2C", VA = "0xDE6F2C")]
			set
			{
			}
		}

		[Token(Token = "0x170001AD")]
		public float pitch
		{
			[Token(Token = "0x6001447")]
			[Address(RVA = "0xDE6F48", Offset = "0xDE6F48", VA = "0xDE6F48")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001448")]
			[Address(RVA = "0xDE6F64", Offset = "0xDE6F64", VA = "0xDE6F64")]
			set
			{
			}
		}

		[Token(Token = "0x170001AE")]
		public AudioClip clip
		{
			[Token(Token = "0x6001449")]
			[Address(RVA = "0xDE6F80", Offset = "0xDE6F80", VA = "0xDE6F80")]
			get
			{
				return null;
			}
			[Token(Token = "0x600144A")]
			[Address(RVA = "0xDE6F9C", Offset = "0xDE6F9C", VA = "0xDE6F9C")]
			set
			{
			}
		}

		[Token(Token = "0x170001AF")]
		public float time
		{
			[Token(Token = "0x600144B")]
			[Address(RVA = "0xDE6FB8", Offset = "0xDE6FB8", VA = "0xDE6FB8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600144C")]
			[Address(RVA = "0xDE32B8", Offset = "0xDE32B8", VA = "0xDE32B8")]
			set
			{
			}
		}

		[Token(Token = "0x170001B0")]
		public float length
		{
			[Token(Token = "0x600144D")]
			[Address(RVA = "0xDE6FD4", Offset = "0xDE6FD4", VA = "0xDE6FD4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001B1")]
		public bool loop
		{
			[Token(Token = "0x600144E")]
			[Address(RVA = "0xDE708C", Offset = "0xDE708C", VA = "0xDE708C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600144F")]
			[Address(RVA = "0xDE70A8", Offset = "0xDE70A8", VA = "0xDE70A8")]
			set
			{
			}
		}

		[Token(Token = "0x170001B2")]
		public bool mute
		{
			[Token(Token = "0x6001450")]
			[Address(RVA = "0xDE70C8", Offset = "0xDE70C8", VA = "0xDE70C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001451")]
			[Address(RVA = "0xDE70E4", Offset = "0xDE70E4", VA = "0xDE70E4")]
			set
			{
			}
		}

		[Token(Token = "0x170001B3")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x6001452")]
			[Address(RVA = "0xDE7104", Offset = "0xDE7104", VA = "0xDE7104")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x6001453")]
			[Address(RVA = "0xDE7120", Offset = "0xDE7120", VA = "0xDE7120")]
			set
			{
			}
		}

		[Token(Token = "0x170001B4")]
		public bool isPlaying
		{
			[Token(Token = "0x6001454")]
			[Address(RVA = "0xDE713C", Offset = "0xDE713C", VA = "0xDE713C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001455")]
		[Address(RVA = "0xDE7158", Offset = "0xDE7158", VA = "0xDE7158")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001456")]
		[Address(RVA = "0xDE536C", Offset = "0xDE536C", VA = "0xDE536C")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0xDE7364", Offset = "0xDE7364", VA = "0xDE7364")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0xDE5668", Offset = "0xDE5668", VA = "0xDE5668")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0xDE736C", Offset = "0xDE736C", VA = "0xDE736C")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0xDE7374", Offset = "0xDE7374", VA = "0xDE7374")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0xDE5E60", Offset = "0xDE5E60", VA = "0xDE5E60")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0xDE2698", Offset = "0xDE2698", VA = "0xDE2698")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0xDE737C", Offset = "0xDE737C", VA = "0xDE737C")]
		public void Play()
		{
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0xDE73DC", Offset = "0xDE73DC", VA = "0xDE73DC")]
		public void Pause()
		{
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0xDE24EC", Offset = "0xDE24EC", VA = "0xDE24EC")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0xDE74A4", Offset = "0xDE74A4", VA = "0xDE74A4")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0xDE592C", Offset = "0xDE592C", VA = "0xDE592C")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0xDE5B6C", Offset = "0xDE5B6C", VA = "0xDE5B6C")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0xDE2A3C", Offset = "0xDE2A3C", VA = "0xDE2A3C")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0xDE74FC", Offset = "0xDE74FC", VA = "0xDE74FC")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0xDE7528", Offset = "0xDE7528", VA = "0xDE7528")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0xDE75E4", Offset = "0xDE75E4", VA = "0xDE75E4")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0xDE2E38", Offset = "0xDE2E38", VA = "0xDE2E38")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0xDE2EB4", Offset = "0xDE2EB4", VA = "0xDE2EB4")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0xDE2CE8", Offset = "0xDE2CE8", VA = "0xDE2CE8")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0xDE2B34", Offset = "0xDE2B34", VA = "0xDE2B34")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0xDE764C", Offset = "0xDE764C", VA = "0xDE764C")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0xDE76D0", Offset = "0xDE76D0", VA = "0xDE76D0")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0xDE77D0", Offset = "0xDE77D0", VA = "0xDE77D0")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x20003D0")]
	public enum SoundFXNext
	{
		[Token(Token = "0x40014A5")]
		Random,
		[Token(Token = "0x40014A6")]
		Sequential
	}
	[Token(Token = "0x20003D1")]
	public enum SoundPriority
	{
		[Token(Token = "0x40014A8")]
		VeryLow = -2,
		[Token(Token = "0x40014A9")]
		Low,
		[Token(Token = "0x40014AA")]
		Default,
		[Token(Token = "0x40014AB")]
		High,
		[Token(Token = "0x40014AC")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x20003D2")]
	public class OSPProps
	{
		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool enableSpatialization;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool useFastOverride;

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB19A60", Offset = "0xB19A60")]
		public float gain;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool enableInvSquare;

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB19A78", Offset = "0xB19A78")]
		public float volumetric;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x6001480")]
		[Address(RVA = "0xDE6E9C", Offset = "0xDE6E9C", VA = "0xDE6E9C")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D3")]
	public class SoundFX
	{
		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXNext playback;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB19A94", Offset = "0xB19A94")]
		public float volume;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 pitchVariance;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector2 falloffDistance;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB19AAC", Offset = "0xB19AAC")]
		public float spread;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB19AC8", Offset = "0xB19AC8")]
		public float pctChanceToPlay;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SoundPriority priority;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector2 delay;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public bool looping;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AudioClip[] soundClips;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x170001BB")]
		public bool IsValid
		{
			[Token(Token = "0x6001482")]
			[Address(RVA = "0xDE7DFC", Offset = "0xDE7DFC", VA = "0xDE7DFC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001BC")]
		public SoundGroup Group
		{
			[Token(Token = "0x6001483")]
			[Address(RVA = "0xDE7EA0", Offset = "0xDE7EA0", VA = "0xDE7EA0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001484")]
			[Address(RVA = "0xDE7EA8", Offset = "0xDE7EA8", VA = "0xDE7EA8")]
			set
			{
			}
		}

		[Token(Token = "0x170001BD")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x6001485")]
			[Address(RVA = "0xDE5274", Offset = "0xDE5274", VA = "0xDE5274")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001BE")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x6001486")]
			[Address(RVA = "0xDE52A8", Offset = "0xDE52A8", VA = "0xDE52A8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001481")]
		[Address(RVA = "0xDE6808", Offset = "0xDE6808", VA = "0xDE6808")]
		public SoundFX()
		{
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0xDE51A4", Offset = "0xDE51A4", VA = "0xDE51A4")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0xDE52CC", Offset = "0xDE52CC", VA = "0xDE52CC")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0xDE5280", Offset = "0xDE5280", VA = "0xDE5280")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0xDE52C0", Offset = "0xDE52C0", VA = "0xDE52C0")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x600148B")]
		[Address(RVA = "0xDE7ED0", Offset = "0xDE7ED0", VA = "0xDE7ED0")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}
	}
	[Serializable]
	[Token(Token = "0x20003D4")]
	public class SoundFXRef
	{
		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x170001BF")]
		public SoundFX soundFX
		{
			[Token(Token = "0x600148C")]
			[Address(RVA = "0xDE7FE4", Offset = "0xDE7FE4", VA = "0xDE7FE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0xDE8014", Offset = "0xDE8014", VA = "0xDE8014")]
		private void Init()
		{
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0xDDFFA8", Offset = "0xDDFFA8", VA = "0xDDFFA8")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0xDE80D8", Offset = "0xDE80D8", VA = "0xDE80D8")]
		public SoundFXRef()
		{
		}
	}
}
namespace LPWAsset
{
	[Token(Token = "0x20003D5")]
	[ExecuteInEditMode]
	public class LowPolyWaterScript : MonoBehaviour
	{
		[Token(Token = "0x20003D6")]
		public enum GridType
		{
			[Token(Token = "0x40014DE")]
			Hexagonal,
			[Token(Token = "0x40014DF")]
			Square,
			[Token(Token = "0x40014E0")]
			HexagonalLOD,
			[Token(Token = "0x40014E1")]
			Custom
		}

		[Token(Token = "0x20003D7")]
		public enum GridTypeLite
		{
			[Token(Token = "0x40014E3")]
			Hexagonal,
			[Token(Token = "0x40014E4")]
			Square
		}

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GridType gridType;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB19AE0", Offset = "0xB19AE0")]
		public float LOD;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB19AF8", Offset = "0xB19AF8")]
		public float LODPower;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Mesh customMesh;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Material material;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Light sun;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int sizeX;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int sizeZ;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB19B10", Offset = "0xB19B10")]
		public float noise;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool enableReflection;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool enableRefraction;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public LPWReflectionParams reflection;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool receiveShadows;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool enableDisplace;

		[Token(Token = "0x40014D7")]
		private const int maxVerts = 65535;

		[Token(Token = "0x40014D8")]
		private const float sin60 = 0.8660254f;

		[Token(Token = "0x40014D9")]
		private const float inv_tan60 = 0.57735026f;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool hideChildObjects_;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float waveScale;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GridTypeLite gridTypeLite;

		[Token(Token = "0x6001490")]
		[Address(RVA = "0xEFCFD4", Offset = "0xEFCFD4", VA = "0xEFCFD4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001491")]
		[Address(RVA = "0xEFD27C", Offset = "0xEFD27C", VA = "0xEFD27C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001492")]
		[Address(RVA = "0xEFD2EC", Offset = "0xEFD2EC", VA = "0xEFD2EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0xEFD5B8", Offset = "0xEFD5B8", VA = "0xEFD5B8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0xEFD700", Offset = "0xEFD700", VA = "0xEFD700")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0xEFD604", Offset = "0xEFD604", VA = "0xEFD604")]
		private void CleanUp(bool destroy = false)
		{
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0xEFD708", Offset = "0xEFD708", VA = "0xEFD708")]
		private void Destroy_(UnityEngine.Object o)
		{
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0xEFD10C", Offset = "0xEFD10C", VA = "0xEFD10C")]
		public void Generate()
		{
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0xEFED10", Offset = "0xEFED10", VA = "0xEFED10")]
		private float Encode(Vector3 v)
		{
			return default(float);
		}

		[Token(Token = "0x6001499")]
		[Address(RVA = "0xEFE0B0", Offset = "0xEFE0B0", VA = "0xEFE0B0")]
		private void BakeCustomMesh(Mesh originalMesh, float rotation = 0f)
		{
		}

		[Token(Token = "0x600149A")]
		[Address(RVA = "0xEFEE98", Offset = "0xEFEE98", VA = "0xEFEE98")]
		private void BakeMesh(List<Vector3> verts, List<int> inds, float rotation = 0f)
		{
		}

		[Token(Token = "0x600149B")]
		[Address(RVA = "0xEFFAF4", Offset = "0xEFFAF4", VA = "0xEFFAF4")]
		private void BakeUVs(List<Vector3> verts, List<MeshFilter> mfs)
		{
		}

		[Token(Token = "0x600149C")]
		[Address(RVA = "0xEFF6E0", Offset = "0xEFF6E0", VA = "0xEFF6E0")]
		private void BakeUVsV4(List<Vector3> verts, List<MeshFilter> mfs)
		{
		}

		[Token(Token = "0x600149D")]
		[Address(RVA = "0xEFFE7C", Offset = "0xEFFE7C", VA = "0xEFFE7C")]
		private Vector3 ApplyLOD(Vector3 v, float dist)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0xEFFFCC", Offset = "0xEFFFCC", VA = "0xEFFFCC")]
		private Vector3 AddNoise(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0xF0015C", Offset = "0xF0015C", VA = "0xF0015C")]
		private void Add(List<Vector3> verts, Vector3 toAdd, float delta)
		{
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0xEFDC08", Offset = "0xEFDC08", VA = "0xEFDC08")]
		private void GenerateSquare()
		{
		}

		[Token(Token = "0x60014A1")]
		[Address(RVA = "0xEFD7A8", Offset = "0xEFD7A8", VA = "0xEFD7A8")]
		private void GenerateHexagonal()
		{
		}

		[Token(Token = "0x60014A2")]
		[Address(RVA = "0xF0025C", Offset = "0xF0025C", VA = "0xF0025C")]
		public LowPolyWaterScript()
		{
		}
	}
	[Token(Token = "0x20003D8")]
	[ExecuteInEditMode]
	public class LPWDepthEffect : MonoBehaviour
	{
		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Dictionary<Camera, Camera> depthCams;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Dictionary<Camera, float> camState;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static RenderTexture depthTex;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static Shader depthShader;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool receiveShadows;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool recursiveGuard;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private static bool hideObjects;

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0xEF895C", Offset = "0xEF895C", VA = "0xEF895C")]
		public void Init(bool receiveShadows)
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0xEF8968", Offset = "0xEF8968", VA = "0xEF8968")]
		public void OnWillRenderObject()
		{
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0xEF9598", Offset = "0xEF9598", VA = "0xEF9598")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0xEF97AC", Offset = "0xEF97AC", VA = "0xEF97AC")]
		public void Destroy_(UnityEngine.Object o)
		{
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0xEF984C", Offset = "0xEF984C", VA = "0xEF984C")]
		public LPWDepthEffect()
		{
		}
	}
	[Token(Token = "0x20003D9")]
	public static class LPWNoise
	{
		[Token(Token = "0x60014AA")]
		[Address(RVA = "0xEF9914", Offset = "0xEF9914", VA = "0xEF9914")]
		public static float GetValue(float x, float y)
		{
			return default(float);
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0xEF9ADC", Offset = "0xEF9ADC", VA = "0xEF9ADC")]
		public static float Hash(int x, int z)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20003DA")]
	public class LPWNormalSolver
	{
		[Token(Token = "0x20003DB")]
		private struct LPWPointDataEntry
		{
			[Token(Token = "0x40014F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int triIdx;

			[Token(Token = "0x40014F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int vertIdx;

			[Token(Token = "0x60014B0")]
			[Address(RVA = "0xBCA7BC", Offset = "0xBCA7BC", VA = "0xBCA7BC")]
			public LPWPointDataEntry(int triIdx, int vertIdx)
			{
			}
		}

		[Token(Token = "0x20003DC")]
		private struct LPWPoint
		{
			[Token(Token = "0x40014F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int idx;

			[Token(Token = "0x40014F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public int count;

			[Token(Token = "0x60014B1")]
			[Address(RVA = "0xBCA7B4", Offset = "0xBCA7B4", VA = "0xBCA7B4")]
			public LPWPoint(int idx, int count)
			{
			}
		}

		[Token(Token = "0x20003DD")]
		private struct LPWPosition : IEquatable<LPWPosition>
		{
			[Token(Token = "0x40014F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private readonly long _x;

			[Token(Token = "0x40014F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private readonly long _y;

			[Token(Token = "0x40014F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private readonly long _z;

			[Token(Token = "0x60014B2")]
			[Address(RVA = "0xBCA7C4", Offset = "0xBCA7C4", VA = "0xBCA7C4")]
			public LPWPosition(Vector3 position)
			{
			}

			[Token(Token = "0x60014B3")]
			[Address(RVA = "0xBCA7CC", Offset = "0xBCA7CC", VA = "0xBCA7CC", Slot = "2")]
			public override int GetHashCode()
			{
				return default(int);
			}

			[Token(Token = "0x60014B4")]
			[Address(RVA = "0xBCA81C", Offset = "0xBCA81C", VA = "0xBCA81C", Slot = "4")]
			public bool Equals(LPWPosition key)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Vector3> triNormals;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<LPWPointDataEntry> pointData;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<LPWPoint> points;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<LPWPosition, int> pointsDict;

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0xEF9B38", Offset = "0xEF9B38", VA = "0xEF9B38")]
		public LPWNormalSolver()
		{
		}

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0xEF9C24", Offset = "0xEF9C24", VA = "0xEF9C24")]
		public void Recalculate(List<Vector3> normals, List<Vector3> vertices, List<int> triangles)
		{
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0xEFA450", Offset = "0xEFA450", VA = "0xEFA450")]
		private void AddData(Vector3 v, int triIdx, int vertIdx)
		{
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0xEFA2C0", Offset = "0xEFA2C0", VA = "0xEFA2C0")]
		private void AddPoint(Vector3 v)
		{
		}
	}
	[Token(Token = "0x20003DE")]
	[Flags]
	public enum WaterMode
	{
		[Token(Token = "0x40014F8")]
		Simple = 0,
		[Token(Token = "0x40014F9")]
		Reflective = 1,
		[Token(Token = "0x40014FA")]
		Refractive = 2
	}
	[Serializable]
	[Token(Token = "0x20003DF")]
	public class LPWReflectionParams
	{
		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool disablePixelLights;

		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int textureSize;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float clipPlaneOffset;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public LayerMask reflectLayers;

		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LayerMask refractLayers;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal WaterMode waterMode;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal Dictionary<Camera, Camera> reflCams;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal Dictionary<Camera, Camera> refrCams;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal RenderTexture reflTex;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal RenderTexture refrTex;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal WaterMode hwSupport;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		internal int oldReflTexSize;

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal int oldRefrTexSize;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal Dictionary<Camera, float> camState;

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0xEFCED4", Offset = "0xEFCED4", VA = "0xEFCED4")]
		public LPWReflectionParams()
		{
		}
	}
	[Token(Token = "0x20003E0")]
	[ExecuteInEditMode]
	public class LPWReflection : MonoBehaviour
	{
		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static LPWReflectionParams p;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool recursiveGuard;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		private static bool hideObjects;

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0xEFA83C", Offset = "0xEFA83C", VA = "0xEFA83C")]
		public void Init(LPWReflectionParams params_, bool enableReflection, bool enableRefraction)
		{
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0xEFA938", Offset = "0xEFA938", VA = "0xEFA938")]
		public void OnWillRenderObject()
		{
		}

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0xEFC4FC", Offset = "0xEFC4FC", VA = "0xEFC4FC")]
		private bool IsSceneView2D()
		{
			return default(bool);
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0xEFC9B8", Offset = "0xEFC9B8", VA = "0xEFC9B8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0xEFCDCC", Offset = "0xEFCDCC", VA = "0xEFCDCC")]
		public void Destroy_(UnityEngine.Object o)
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0xEFC1D8", Offset = "0xEFC1D8", VA = "0xEFC1D8")]
		private void UpdateCameraModes(Camera src, Camera dest)
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0xEFB4A0", Offset = "0xEFB4A0", VA = "0xEFB4A0")]
		private void CreateWaterObjects(Camera currentCamera, out Camera reflectionCamera, out Camera refractionCamera)
		{
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0xEFB3CC", Offset = "0xEFB3CC", VA = "0xEFB3CC")]
		private WaterMode GetWaterMode()
		{
			return default(WaterMode);
		}

		[Token(Token = "0x60014BE")]
		[Address(RVA = "0xEFB2DC", Offset = "0xEFB2DC", VA = "0xEFB2DC")]
		private WaterMode FindHardwareWaterSupport()
		{
			return default(WaterMode);
		}

		[Token(Token = "0x60014BF")]
		[Address(RVA = "0xEFC7A8", Offset = "0xEFC7A8", VA = "0xEFC7A8")]
		private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
		{
			return default(Vector4);
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0xEFC504", Offset = "0xEFC504", VA = "0xEFC504")]
		private static void CalculateReflectionMatrix(ref Matrix4x4 reflectionMat, Vector4 plane)
		{
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0xEFCE6C", Offset = "0xEFCE6C", VA = "0xEFCE6C")]
		public LPWReflection()
		{
		}
	}
}
namespace LowPolyWaterv2Demo
{
	[Token(Token = "0x20003E1")]
	public class DemoFreeFlyCamera : MonoBehaviour
	{
		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool lockCursor;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float cameraSensitivity;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float normalMoveSpeed;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float smoothTime;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float rotationX;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float rotationY;

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0xE93E04", Offset = "0xE93E04", VA = "0xE93E04")]
		private void Start()
		{
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0xE93E34", Offset = "0xE93E34", VA = "0xE93E34")]
		private void Update()
		{
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0xE943AC", Offset = "0xE943AC", VA = "0xE943AC")]
		public DemoFreeFlyCamera()
		{
		}
	}
}
namespace DigitalRuby.LightningBolt
{
	[Token(Token = "0x20003E2")]
	public enum LightningBoltAnimationMode
	{
		[Token(Token = "0x4001513")]
		None,
		[Token(Token = "0x4001514")]
		Random,
		[Token(Token = "0x4001515")]
		Loop,
		[Token(Token = "0x4001516")]
		PingPong
	}
	[Token(Token = "0x20003E3")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB175A0", Offset = "0xB175A0")]
	public class LightningBoltScript : MonoBehaviour
	{
		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject StartObject;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 StartPosition;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject EndObject;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 EndPosition;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB19B28", Offset = "0xB19B28")]
		public int Generations;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB19B40", Offset = "0xB19B40")]
		public float Duration;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float timer;

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB19B5C", Offset = "0xB19B5C")]
		public float ChaosFactor;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool ManualMode;

		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB19B74", Offset = "0xB19B74")]
		public int Rows;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB19B90", Offset = "0xB19B90")]
		public int Columns;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public LightningBoltAnimationMode AnimationMode;

		[NonSerialized]
		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public System.Random RandomGenerator;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private LineRenderer lineRenderer;

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<KeyValuePair<Vector3, Vector3>> segments;

		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int startIndex;

		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector2 size;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2[] offsets;

		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int animationOffsetIndex;

		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int animationPingPongDirection;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private bool orthographic;

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0xD85DB0", Offset = "0xD85DB0", VA = "0xD85DB0")]
		private void GetPerpendicularVector(ref Vector3 directionNormalized, out Vector3 side)
		{
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0xD85F5C", Offset = "0xD85F5C", VA = "0xD85F5C")]
		private void GenerateLightningBolt(Vector3 start, Vector3 end, int generation, int totalGenerations, float offsetAmount)
		{
		}

		[Token(Token = "0x60014C8")]
		[Address(RVA = "0xD86358", Offset = "0xD86358", VA = "0xD86358")]
		public void RandomVector(ref Vector3 start, ref Vector3 end, float offsetAmount, out Vector3 result)
		{
		}

		[Token(Token = "0x60014C9")]
		[Address(RVA = "0xD865C4", Offset = "0xD865C4", VA = "0xD865C4")]
		private void SelectOffsetFromAnimationMode()
		{
		}

		[Token(Token = "0x60014CA")]
		[Address(RVA = "0xD86720", Offset = "0xD86720", VA = "0xD86720")]
		private void UpdateLineRenderer()
		{
		}

		[Token(Token = "0x60014CB")]
		[Address(RVA = "0xD868A4", Offset = "0xD868A4", VA = "0xD868A4")]
		private void Start()
		{
		}

		[Token(Token = "0x60014CC")]
		[Address(RVA = "0xD86AE8", Offset = "0xD86AE8", VA = "0xD86AE8")]
		private void Update()
		{
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0xD86BF4", Offset = "0xD86BF4", VA = "0xD86BF4")]
		public void Trigger()
		{
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0xD86984", Offset = "0xD86984", VA = "0xD86984")]
		public void UpdateFromMaterialChange()
		{
		}

		[Token(Token = "0x60014CF")]
		[Address(RVA = "0xD86E40", Offset = "0xD86E40", VA = "0xD86E40")]
		public LightningBoltScript()
		{
		}
	}
}
namespace ShapeFX
{
	[Token(Token = "0x20003E4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB17604", Offset = "0xB17604")]
	public class ShFX_EffectHandler : MonoBehaviour
	{
		[Token(Token = "0x20003E5")]
		public enum EndAction
		{
			[Token(Token = "0x4001543")]
			DoNothing,
			[Token(Token = "0x4001544")]
			DestroyGameObject,
			[Token(Token = "0x4001545")]
			DeactivateGameObject,
			[Token(Token = "0x4001546")]
			PoolDespawn
		}

		[Token(Token = "0x20003E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17668", Offset = "0xB17668")]
		private sealed class <CR_CheckParticleSystem>d__32 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001547")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001548")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001549")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShFX_EffectHandler <>4__this;

			[Token(Token = "0x170001C0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60014E0")]
				[Address(RVA = "0xDCFE4C", Offset = "0xDCFE4C", VA = "0xDCFE4C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014E2")]
				[Address(RVA = "0xDCFEB4", Offset = "0xDCFEB4", VA = "0xDCFEB4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014DD")]
			[Address(RVA = "0xDCFBB0", Offset = "0xDCFBB0", VA = "0xDCFBB0")]
			[DebuggerHidden]
			public <CR_CheckParticleSystem>d__32(int <>1__state)
			{
			}

			[Token(Token = "0x60014DE")]
			[Address(RVA = "0xDCFCA4", Offset = "0xDCFCA4", VA = "0xDCFCA4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014DF")]
			[Address(RVA = "0xDCFCA8", Offset = "0xDCFCA8", VA = "0xDCFCA8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014E1")]
			[Address(RVA = "0xDCFE54", Offset = "0xDCFE54", VA = "0xDCFE54", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17678", Offset = "0xB17678")]
		private sealed class <CR_ShakeCamera>d__33 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400154A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400154B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400154C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShFX_EffectHandler <>4__this;

			[Token(Token = "0x400154D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <t>5__2;

			[Token(Token = "0x400154E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <sign>5__3;

			[Token(Token = "0x400154F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <step>5__4;

			[Token(Token = "0x4001550")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <falloff>5__5;

			[Token(Token = "0x4001551")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <repeat>5__6;

			[Token(Token = "0x170001C2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60014E6")]
				[Address(RVA = "0xDD01FC", Offset = "0xDD01FC", VA = "0xDD01FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60014E8")]
				[Address(RVA = "0xDD0264", Offset = "0xDD0264", VA = "0xDD0264", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60014E3")]
			[Address(RVA = "0xDCFBDC", Offset = "0xDCFBDC", VA = "0xDCFBDC")]
			[DebuggerHidden]
			public <CR_ShakeCamera>d__33(int <>1__state)
			{
			}

			[Token(Token = "0x60014E4")]
			[Address(RVA = "0xDCFEBC", Offset = "0xDCFEBC", VA = "0xDCFEBC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60014E5")]
			[Address(RVA = "0xDCFEC0", Offset = "0xDCFEC0", VA = "0xDCFEC0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60014E7")]
			[Address(RVA = "0xDD0204", Offset = "0xDD0204", VA = "0xDD0204", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool DisableCameraShake;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EndAction endAction;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip soundEffect;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool shakeCamera;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Camera cameraToShake;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB19BAC", Offset = "0xB19BAC")]
		public float shakeAngle;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool randomShakeAngle;

		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float shakeDuration;

		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float shakeDelay;

		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB19BC8", Offset = "0xB19BC8")]
		public int shakeRepeat;

		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB19BE0", Offset = "0xB19BE0")]
		public float shakeStep;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB19BFC", Offset = "0xB19BFC")]
		public float shakeStrength;

		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool useFalloff;

		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float falloffMin;

		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float falloffMax;

		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ParticleSystem ps;

		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static Vector3 camOriginalPosition;

		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static int lastShakeFrame;

		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static float curFrameMaxStrength;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Coroutine shakeCoroutine;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float shakeOffset;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private bool cameraShaking;

		[Token(Token = "0x60014D0")]
		[Address(RVA = "0xDCF030", Offset = "0xDCF030", VA = "0xDCF030")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xB1CE34", Offset = "0xB1CE34")]
		private static void InitStaticValues()
		{
		}

		[Token(Token = "0x60014D1")]
		[Address(RVA = "0xDCF0A8", Offset = "0xDCF0A8", VA = "0xDCF0A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0xDCF100", Offset = "0xDCF100", VA = "0xDCF100")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014D3")]
		[Address(RVA = "0xDCF208", Offset = "0xDCF208", VA = "0xDCF208")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014D4")]
		[Address(RVA = "0xDCF36C", Offset = "0xDCF36C", VA = "0xDCF36C")]
		private void OnCamPreRender(Camera cam)
		{
		}

		[Token(Token = "0x60014D5")]
		[Address(RVA = "0xDCF6AC", Offset = "0xDCF6AC", VA = "0xDCF6AC")]
		private void OnCamPostRender(Camera cam)
		{
		}

		[Token(Token = "0x60014D6")]
		[Address(RVA = "0xDCF7A0", Offset = "0xDCF7A0", VA = "0xDCF7A0")]
		public void DoEndAction()
		{
		}

		[Token(Token = "0x60014D7")]
		[Address(RVA = "0xDCF8B8", Offset = "0xDCF8B8", VA = "0xDCF8B8")]
		public void StartCameraShake()
		{
		}

		[Token(Token = "0x60014D8")]
		[Address(RVA = "0xDCFA08", Offset = "0xDCFA08", VA = "0xDCFA08")]
		public void StopCameraShake()
		{
		}

		[Token(Token = "0x60014D9")]
		[Address(RVA = "0xDCF198", Offset = "0xDCF198", VA = "0xDCF198")]
		private IEnumerator CR_CheckParticleSystem()
		{
			return null;
		}

		[Token(Token = "0x60014DA")]
		[Address(RVA = "0xDCFB40", Offset = "0xDCFB40", VA = "0xDCFB40")]
		private IEnumerator CR_ShakeCamera()
		{
			return null;
		}

		[Token(Token = "0x60014DB")]
		[Address(RVA = "0xDCFC08", Offset = "0xDCFC08", VA = "0xDCFC08")]
		public ShFX_EffectHandler()
		{
		}
	}
	[Token(Token = "0x20003E8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB17688", Offset = "0xB17688")]
	[ExecuteInEditMode]
	public class ShFX_EffectLight : MonoBehaviour
	{
		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ParticleSystem linkedEffect;

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool playOnEnable;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool autoPlayFromParticleSystem;

		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float delay;

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float duration;

		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float playbackSpeed;

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool loop;

		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float fadeIn;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float fadeOut;

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB19C18", Offset = "0xB19C18")]
		public float peakIntensity;

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve intensityCurve;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool useColorGradient;

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Gradient colorGradient;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool colorFromParticleSystem;

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Color cachedColor;

		[NonSerialized]
		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float editorPlaybackSpeed;

		[NonSerialized]
		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool isPlaying;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Light _light;

		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float playbackTime;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float fadeTime;

		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool particleSystemPlaying;

		[Token(Token = "0x170001C4")]
		private float PlaybackSpeed
		{
			[Token(Token = "0x60014E9")]
			[Address(RVA = "0xDD026C", Offset = "0xDD026C", VA = "0xDD026C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001C5")]
		public Light lightComponent
		{
			[Token(Token = "0x60014EA")]
			[Address(RVA = "0xDD027C", Offset = "0xDD027C", VA = "0xDD027C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001C6")]
		private float deltaTime
		{
			[Token(Token = "0x60014F1")]
			[Address(RVA = "0xDD0744", Offset = "0xDD0744", VA = "0xDD0744")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0xDCBB64", Offset = "0xDCBB64", VA = "0xDCBB64")]
		public void PlayLightEffect()
		{
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0xDCEEC8", Offset = "0xDCEEC8", VA = "0xDCEEC8")]
		public void StopLightEffect(bool immediate = false)
		{
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0xDD0314", Offset = "0xDD0314", VA = "0xDD0314")]
		private void Reset()
		{
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0xDD03A4", Offset = "0xDD03A4", VA = "0xDD03A4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0xDD044C", Offset = "0xDD044C", VA = "0xDD044C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0xDD0458", Offset = "0xDD0458", VA = "0xDD0458")]
		private void Update()
		{
		}

		[Token(Token = "0x60014F2")]
		[Address(RVA = "0xDD0778", Offset = "0xDD0778", VA = "0xDD0778")]
		public ShFX_EffectLight()
		{
		}
	}
	[Token(Token = "0x20003E9")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB176FC", Offset = "0xB176FC")]
	[ExecuteInEditMode]
	public class ShFX_SoftParticleFactorModifier : MonoBehaviour
	{
		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB19C30", Offset = "0xB19C30")]
		public float SoftParticleFactor;

		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ParticleSystemRenderer psr;

		[Token(Token = "0x60014F3")]
		[Address(RVA = "0xDD0818", Offset = "0xDD0818", VA = "0xDD0818")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60014F4")]
		[Address(RVA = "0xDD0960", Offset = "0xDD0960", VA = "0xDD0960")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014F5")]
		[Address(RVA = "0xDD081C", Offset = "0xDD081C", VA = "0xDD081C")]
		private void UpdatePropertyBlock()
		{
		}

		[Token(Token = "0x60014F6")]
		[Address(RVA = "0xDD0964", Offset = "0xDD0964", VA = "0xDD0964")]
		private void ClearPropertyBlock()
		{
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0xDD0A98", Offset = "0xDD0A98", VA = "0xDD0A98")]
		public ShFX_SoftParticleFactorModifier()
		{
		}
	}
	[Token(Token = "0x20003EA")]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB17770", Offset = "0xB17770")]
	public class ShFX_Variants : MonoBehaviour
	{
		[Token(Token = "0x60014F8")]
		[Address(RVA = "0xDD0AA8", Offset = "0xDD0AA8", VA = "0xDD0AA8")]
		public ShFX_Variants()
		{
		}
	}
}
namespace ShapeFX.Demo
{
	[Token(Token = "0x20003EB")]
	public class ShFX_Atlas : MonoBehaviour
	{
		[Token(Token = "0x20003EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB177E4", Offset = "0xB177E4")]
		private sealed class <Start>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001580")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001581")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001582")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShFX_Atlas <>4__this;

			[Token(Token = "0x170001C7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001507")]
				[Address(RVA = "0xDCD748", Offset = "0xDCD748", VA = "0xDCD748", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001C8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001509")]
				[Address(RVA = "0xDCD7B0", Offset = "0xDCD7B0", VA = "0xDCD7B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001504")]
			[Address(RVA = "0xDCB458", Offset = "0xDCB458", VA = "0xDCB458")]
			[DebuggerHidden]
			public <Start>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6001505")]
			[Address(RVA = "0xDCD04C", Offset = "0xDCD04C", VA = "0xDCD04C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001506")]
			[Address(RVA = "0xDCD050", Offset = "0xDCD050", VA = "0xDCD050", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001508")]
			[Address(RVA = "0xDCD750", Offset = "0xDCD750", VA = "0xDCD750", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB177F4", Offset = "0xB177F4")]
		private sealed class <CR_PlayParticle>d__25 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001583")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001584")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001585")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ParticleSystem particle;

			[Token(Token = "0x4001586")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ShFX_Atlas <>4__this;

			[Token(Token = "0x170001C9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600150D")]
				[Address(RVA = "0xDCCFDC", Offset = "0xDCCFDC", VA = "0xDCCFDC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001CA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600150F")]
				[Address(RVA = "0xDCD044", Offset = "0xDCD044", VA = "0xDCD044", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600150A")]
			[Address(RVA = "0xDCBC90", Offset = "0xDCBC90", VA = "0xDCBC90")]
			[DebuggerHidden]
			public <CR_PlayParticle>d__25(int <>1__state)
			{
			}

			[Token(Token = "0x600150B")]
			[Address(RVA = "0xDCCF10", Offset = "0xDCCF10", VA = "0xDCCF10", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600150C")]
			[Address(RVA = "0xDCCF14", Offset = "0xDCCF14", VA = "0xDCCF14", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600150E")]
			[Address(RVA = "0xDCCFE4", Offset = "0xDCCFE4", VA = "0xDCCFE4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003EE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17804", Offset = "0xB17804")]
		private sealed class <CR_ChangeGroup>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001587")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001588")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001589")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShFX_Atlas <>4__this;

			[Token(Token = "0x400158A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public int prevGroup;

			[Token(Token = "0x400158B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <duration>5__2;

			[Token(Token = "0x400158C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <t>5__3;

			[Token(Token = "0x170001CB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001513")]
				[Address(RVA = "0xDCCEA0", Offset = "0xDCCEA0", VA = "0xDCCEA0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001CC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001515")]
				[Address(RVA = "0xDCCF08", Offset = "0xDCCF08", VA = "0xDCCF08", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001510")]
			[Address(RVA = "0xDCBECC", Offset = "0xDCBECC", VA = "0xDCBECC")]
			[DebuggerHidden]
			public <CR_ChangeGroup>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6001511")]
			[Address(RVA = "0xDCCAC4", Offset = "0xDCCAC4", VA = "0xDCCAC4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001512")]
			[Address(RVA = "0xDCCAC8", Offset = "0xDCCAC8", VA = "0xDCCAC8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001514")]
			[Address(RVA = "0xDCCEA8", Offset = "0xDCCEA8", VA = "0xDCCEA8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera noGroupCam;

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image Fader;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform TextEffectsRoot;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text TextPage;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text TextGroupModel;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool includeInactiveGroups;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool playbackLoop;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		public bool autoplayParticles;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int currentGroup;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<GameObject> groups;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<ParticleSystem> currentParticles;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Camera currentCam;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Text[] textsEffectNames;

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Color textDefaultColor;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color textClearColor;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Text[] textsGroupNames;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private RectTransform textsGroupNamesRoot;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Color colorGroupSelected;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Color colorGroupIdle;

		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool groupNameFixed;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		private bool tweening;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Coroutine currentCoroutine;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Dictionary<ParticleSystem, Coroutine> playParticleCoroutines;

		[Token(Token = "0x60014F9")]
		[Address(RVA = "0xDCB3E8", Offset = "0xDCB3E8", VA = "0xDCB3E8")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0xDCB484", Offset = "0xDCB484", VA = "0xDCB484")]
		private void Update()
		{
		}

		[Token(Token = "0x60014FB")]
		[Address(RVA = "0xDCBC14", Offset = "0xDCBC14", VA = "0xDCBC14")]
		private IEnumerator CR_PlayParticle(ParticleSystem particle)
		{
			return null;
		}

		[Token(Token = "0x60014FC")]
		[Address(RVA = "0xDCBA14", Offset = "0xDCBA14", VA = "0xDCBA14")]
		public void NextGroup()
		{
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0xDCBABC", Offset = "0xDCBABC", VA = "0xDCBABC")]
		public void PreviousGroup()
		{
		}

		[Token(Token = "0x60014FE")]
		[Address(RVA = "0xDCBD3C", Offset = "0xDCBD3C", VA = "0xDCBD3C")]
		private void UpdateToNewGroup(int newGroup)
		{
		}

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0xDCBCBC", Offset = "0xDCBCBC", VA = "0xDCBCBC")]
		private IEnumerator CR_ChangeGroup(int prevGroup)
		{
			return null;
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0xDCBEF8", Offset = "0xDCBEF8", VA = "0xDCBEF8")]
		private void GetCurrentParticles()
		{
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0xDCC734", Offset = "0xDCC734", VA = "0xDCC734")]
		private void DeactivateGroup(int index)
		{
		}

		[Token(Token = "0x6001502")]
		[Address(RVA = "0xDCC890", Offset = "0xDCC890", VA = "0xDCC890")]
		private void ActivateGroup(int index)
		{
		}

		[Token(Token = "0x6001503")]
		[Address(RVA = "0xDCC934", Offset = "0xDCC934", VA = "0xDCC934")]
		public ShFX_Atlas()
		{
		}
	}
	[Token(Token = "0x20003EF")]
	public class ShFX_CameraOrbit : MonoBehaviour
	{
		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Camera Cam;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 PivotPosition;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float OrbitStrg;

		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float OrbitClamp;

		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float ZoomStrg;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float ZoomClamp;

		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float ZoomDist;

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float Decceleration;

		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 mouseDelta;

		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Vector3 orbitAcceleration;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 moveAcceleration;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float zoomAcceleration;

		[Token(Token = "0x4001599")]
		private const float XMax = 60f;

		[Token(Token = "0x400159A")]
		private const float XMin = 300f;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 mResetCamPos;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 mResetCamRot;

		[Token(Token = "0x170001CD")]
		private float DeltaTime
		{
			[Token(Token = "0x6001516")]
			[Address(RVA = "0xDCD7B8", Offset = "0xDCD7B8", VA = "0xDCD7B8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001517")]
		[Address(RVA = "0xDCD7E8", Offset = "0xDCD7E8", VA = "0xDCD7E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001518")]
		[Address(RVA = "0xDCD850", Offset = "0xDCD850", VA = "0xDCD850")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0xDCD87C", Offset = "0xDCD87C", VA = "0xDCD87C")]
		private void Update()
		{
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0xDCDE04", Offset = "0xDCDE04", VA = "0xDCDE04")]
		public void ResetView()
		{
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0xDCDE68", Offset = "0xDCDE68", VA = "0xDCDE68")]
		public ShFX_CameraOrbit()
		{
		}
	}
	[Token(Token = "0x20003F0")]
	public class ShFX_Demo : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20003F1")]
		public class Ambience
		{
			[Token(Token = "0x40015AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string Name;

			[Token(Token = "0x40015AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Material Skybox;

			[Token(Token = "0x40015B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Color AmbientColor;

			[Token(Token = "0x40015B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Color FogColor;

			[Token(Token = "0x40015B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public GameObject LightingGroup;

			[Token(Token = "0x6001528")]
			[Address(RVA = "0xDCF028", Offset = "0xDCF028", VA = "0xDCF028")]
			public Ambience()
			{
			}
		}

		[Token(Token = "0x20003F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17814", Offset = "0xB17814")]
		private sealed class <CR_PlayNextEffect>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShFX_Demo <>4__this;

			[Token(Token = "0x40015B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private ShFX_EffectLight <lightEffect>5__2;

			[Token(Token = "0x170001D0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600152C")]
				[Address(RVA = "0xDCEFB8", Offset = "0xDCEFB8", VA = "0xDCEFB8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001D1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600152E")]
				[Address(RVA = "0xDCF020", Offset = "0xDCF020", VA = "0xDCF020", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001529")]
			[Address(RVA = "0xDCE75C", Offset = "0xDCE75C", VA = "0xDCE75C")]
			[DebuggerHidden]
			public <CR_PlayNextEffect>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x600152A")]
			[Address(RVA = "0xDCEA90", Offset = "0xDCEA90", VA = "0xDCEA90", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600152B")]
			[Address(RVA = "0xDCEA94", Offset = "0xDCEA94", VA = "0xDCEA94", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600152D")]
			[Address(RVA = "0xDCEFC0", Offset = "0xDCEFC0", VA = "0xDCEFC0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20003F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17824", Offset = "0xB17824")]
		private sealed class <CR_CheckCurrentEffect>d__29 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40015B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40015B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40015B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ShFX_Demo <>4__this;

			[Token(Token = "0x170001D2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001532")]
				[Address(RVA = "0xDCEA20", Offset = "0xDCEA20", VA = "0xDCEA20", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001D3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001534")]
				[Address(RVA = "0xDCEA88", Offset = "0xDCEA88", VA = "0xDCEA88", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600152F")]
			[Address(RVA = "0xDCE8B0", Offset = "0xDCE8B0", VA = "0xDCE8B0")]
			[DebuggerHidden]
			public <CR_CheckCurrentEffect>d__29(int <>1__state)
			{
			}

			[Token(Token = "0x6001530")]
			[Address(RVA = "0xDCE8EC", Offset = "0xDCE8EC", VA = "0xDCE8EC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001531")]
			[Address(RVA = "0xDCE8F0", Offset = "0xDCE8F0", VA = "0xDCE8F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001533")]
			[Address(RVA = "0xDCEA28", Offset = "0xDCEA28", VA = "0xDCEA28", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform EffectsRoot;

		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text TxtEffectName;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text TxtEffectCount;

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text TxtAmbienceName;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text TxtEffectCaption;

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Text TxtEffectWaiting;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Canvas UICanvas;

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Ambience[] Ambiences;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB19C48", Offset = "0xB19C48")]
		private bool <killLoopEffects>k__BackingField;

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float effectCaptionTargetAlpha;

		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float effectWaitingTargetAlpha;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private int effectIndex;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<ParticleSystem> particlesSystemsList;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private ParticleSystem currentEffect;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int selectedAmbiance;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool waitingForEffect;

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
		private bool skipEffectStop;

		[Token(Token = "0x170001CE")]
		public bool killLoopEffects
		{
			[Token(Token = "0x600151C")]
			[Address(RVA = "0xDCDE88", Offset = "0xDCDE88", VA = "0xDCDE88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1CFD8", Offset = "0xB1CFD8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600151D")]
			[Address(RVA = "0xDCDE90", Offset = "0xDCDE90", VA = "0xDCDE90")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1CFE8", Offset = "0xB1CFE8")]
			set
			{
			}
		}

		[Token(Token = "0x170001CF")]
		public bool shakeCamera
		{
			[Token(Token = "0x600151E")]
			[Address(RVA = "0xDCDE9C", Offset = "0xDCDE9C", VA = "0xDCDE9C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600151F")]
			[Address(RVA = "0xDCDF0C", Offset = "0xDCDF0C", VA = "0xDCDF0C")]
			set
			{
			}
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0xDCDF80", Offset = "0xDCDF80", VA = "0xDCDF80")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0xDCE16C", Offset = "0xDCE16C", VA = "0xDCE16C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001522")]
		[Address(RVA = "0xDCE0BC", Offset = "0xDCE0BC", VA = "0xDCE0BC")]
		public void UpdateCurrentEffect(int indexOffset)
		{
		}

		[Token(Token = "0x6001523")]
		[Address(RVA = "0xDCE6EC", Offset = "0xDCE6EC", VA = "0xDCE6EC")]
		private IEnumerator CR_PlayNextEffect()
		{
			return null;
		}

		[Token(Token = "0x6001524")]
		[Address(RVA = "0xDCE788", Offset = "0xDCE788", VA = "0xDCE788")]
		private string GetEffectCountLabel()
		{
			return null;
		}

		[Token(Token = "0x6001525")]
		[Address(RVA = "0xDCE840", Offset = "0xDCE840", VA = "0xDCE840")]
		private IEnumerator CR_CheckCurrentEffect()
		{
			return null;
		}

		[Token(Token = "0x6001526")]
		[Address(RVA = "0xDCE520", Offset = "0xDCE520", VA = "0xDCE520")]
		public void UpdateAmbience(int indexOffset)
		{
		}

		[Token(Token = "0x6001527")]
		[Address(RVA = "0xDCE8DC", Offset = "0xDCE8DC", VA = "0xDCE8DC")]
		public ShFX_Demo()
		{
		}
	}
}
namespace Kino
{
	[Token(Token = "0x20003F4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB17834", Offset = "0xB17834")]
	[ExecuteInEditMode]
	public class Bloom : MonoBehaviour
	{
		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _threshold;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB19C68", Offset = "0xB19C68")]
		private float _softKnee;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB19CA8", Offset = "0xB19CA8")]
		private float _radius;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float _intensity;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool _highQuality;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool _antiFlicker;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Shader _shader;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material _material;

		[Token(Token = "0x40015C2")]
		private const int kMaxIterations = 16;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RenderTexture[] _blurBuffer1;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private RenderTexture[] _blurBuffer2;

		[Token(Token = "0x170001D4")]
		public float thresholdGamma
		{
			[Token(Token = "0x6001535")]
			[Address(RVA = "0xEF759C", Offset = "0xEF759C", VA = "0xEF759C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001536")]
			[Address(RVA = "0xEF7614", Offset = "0xEF7614", VA = "0xEF7614")]
			set
			{
			}
		}

		[Token(Token = "0x170001D5")]
		public float thresholdLinear
		{
			[Token(Token = "0x6001537")]
			[Address(RVA = "0xEF761C", Offset = "0xEF761C", VA = "0xEF761C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001538")]
			[Address(RVA = "0xEF76A0", Offset = "0xEF76A0", VA = "0xEF76A0")]
			set
			{
			}
		}

		[Token(Token = "0x170001D6")]
		public float softKnee
		{
			[Token(Token = "0x6001539")]
			[Address(RVA = "0xEF7734", Offset = "0xEF7734", VA = "0xEF7734")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600153A")]
			[Address(RVA = "0xEF773C", Offset = "0xEF773C", VA = "0xEF773C")]
			set
			{
			}
		}

		[Token(Token = "0x170001D7")]
		public float radius
		{
			[Token(Token = "0x600153B")]
			[Address(RVA = "0xEF7744", Offset = "0xEF7744", VA = "0xEF7744")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600153C")]
			[Address(RVA = "0xEF774C", Offset = "0xEF774C", VA = "0xEF774C")]
			set
			{
			}
		}

		[Token(Token = "0x170001D8")]
		public float intensity
		{
			[Token(Token = "0x600153D")]
			[Address(RVA = "0xEF7754", Offset = "0xEF7754", VA = "0xEF7754")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600153E")]
			[Address(RVA = "0xEF77CC", Offset = "0xEF77CC", VA = "0xEF77CC")]
			set
			{
			}
		}

		[Token(Token = "0x170001D9")]
		public bool highQuality
		{
			[Token(Token = "0x600153F")]
			[Address(RVA = "0xEF77D4", Offset = "0xEF77D4", VA = "0xEF77D4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001540")]
			[Address(RVA = "0xEF77DC", Offset = "0xEF77DC", VA = "0xEF77DC")]
			set
			{
			}
		}

		[Token(Token = "0x170001DA")]
		public bool antiFlicker
		{
			[Token(Token = "0x6001541")]
			[Address(RVA = "0xEF77E8", Offset = "0xEF77E8", VA = "0xEF77E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001542")]
			[Address(RVA = "0xEF77F0", Offset = "0xEF77F0", VA = "0xEF77F0")]
			set
			{
			}
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0xEF76C4", Offset = "0xEF76C4", VA = "0xEF76C4")]
		private float LinearToGamma(float x)
		{
			return default(float);
		}

		[Token(Token = "0x6001544")]
		[Address(RVA = "0xEF7630", Offset = "0xEF7630", VA = "0xEF7630")]
		private float GammaToLinear(float x)
		{
			return default(float);
		}

		[Token(Token = "0x6001545")]
		[Address(RVA = "0xEF77FC", Offset = "0xEF77FC", VA = "0xEF77FC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001546")]
		[Address(RVA = "0xEF78D0", Offset = "0xEF78D0", VA = "0xEF78D0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001547")]
		[Address(RVA = "0xEF793C", Offset = "0xEF793C", VA = "0xEF793C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6001548")]
		[Address(RVA = "0xEF8078", Offset = "0xEF8078", VA = "0xEF8078")]
		public Bloom()
		{
		}
	}
}
namespace CartoonFX
{
	[Token(Token = "0x20003F5")]
	public class CFXR_Demo : MonoBehaviour
	{
		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image btnSlowMotion;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text lblSlowMotion;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image btnCameraRotation;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text lblCameraRotation;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Image btnShowGround;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Text lblShowGround;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Image btnCamShake;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Text lblCamShake;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Image btnLights;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Text lblLights;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Image btnBloom;

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Text lblBloom;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Text labelEffect;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Text labelIndex;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject ground;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Collider groundCollider;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Transform demoCamera;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public MonoBehaviour bloom;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float rotationSpeed;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private bool slowMotion;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAD")]
		private bool rotateCamera;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAE")]
		private bool showGround;

		[NonSerialized]
		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public GameObject currentEffect;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private GameObject[] effectsList;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int index;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Vector3 camInitialPosition;

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Quaternion camInitialRotation;

		[Token(Token = "0x6001549")]
		[Address(RVA = "0xE83434", Offset = "0xE83434", VA = "0xE83434")]
		public void NextEffect()
		{
		}

		[Token(Token = "0x600154A")]
		[Address(RVA = "0xE83580", Offset = "0xE83580", VA = "0xE83580")]
		public void PreviousEffect()
		{
		}

		[Token(Token = "0x600154B")]
		[Address(RVA = "0xE835B0", Offset = "0xE835B0", VA = "0xE835B0")]
		public void ToggleSlowMo()
		{
		}

		[Token(Token = "0x600154C")]
		[Address(RVA = "0xE83670", Offset = "0xE83670", VA = "0xE83670")]
		public void ToggleCamera()
		{
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0xE83720", Offset = "0xE83720", VA = "0xE83720")]
		public void ToggleGround()
		{
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0xE837E8", Offset = "0xE837E8", VA = "0xE837E8")]
		public void ToggleCameraShake()
		{
		}

		[Token(Token = "0x600154F")]
		[Address(RVA = "0xE838D4", Offset = "0xE838D4", VA = "0xE838D4")]
		public void ToggleEffectsLights()
		{
		}

		[Token(Token = "0x6001550")]
		[Address(RVA = "0xE839C0", Offset = "0xE839C0", VA = "0xE839C0")]
		public void ToggleBloom()
		{
		}

		[Token(Token = "0x6001551")]
		[Address(RVA = "0xE83AA0", Offset = "0xE83AA0", VA = "0xE83AA0")]
		public void ResetCam()
		{
		}

		[Token(Token = "0x6001552")]
		[Address(RVA = "0xE83B0C", Offset = "0xE83B0C", VA = "0xE83B0C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001553")]
		[Address(RVA = "0xE83D70", Offset = "0xE83D70", VA = "0xE83D70")]
		private void Update()
		{
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0xE834AC", Offset = "0xE834AC", VA = "0xE834AC")]
		public void PlayAtIndex()
		{
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0xE83464", Offset = "0xE83464", VA = "0xE83464")]
		private void WrapIndex()
		{
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0xE83C74", Offset = "0xE83C74", VA = "0xE83C74")]
		private void UpdateLabels()
		{
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0xE84234", Offset = "0xE84234", VA = "0xE84234")]
		public CFXR_Demo()
		{
		}
	}
	[Token(Token = "0x20003F6")]
	public class CFXR_Demo_Rotate : MonoBehaviour
	{
		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 axis;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 center;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float speed;

		[Token(Token = "0x6001558")]
		[Address(RVA = "0xE8424C", Offset = "0xE8424C", VA = "0xE8424C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0xE842D8", Offset = "0xE842D8", VA = "0xE842D8")]
		public CFXR_Demo_Rotate()
		{
		}
	}
}
namespace I2.Loc
{
	[Token(Token = "0x20003F7")]
	public class CallbackNotification : MonoBehaviour
	{
		[Token(Token = "0x600155A")]
		[Address(RVA = "0xF4B728", Offset = "0xF4B728", VA = "0xF4B728")]
		public void OnModifyLocalization()
		{
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0xF4B818", Offset = "0xF4B818", VA = "0xF4B818")]
		public CallbackNotification()
		{
		}
	}
	[Token(Token = "0x20003F8")]
	public class Example_ChangeLanguage : MonoBehaviour
	{
		[Token(Token = "0x600155C")]
		[Address(RVA = "0xF4BD4C", Offset = "0xF4BD4C", VA = "0xF4BD4C")]
		public void SetLanguage_English()
		{
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0xF4BE3C", Offset = "0xF4BE3C", VA = "0xF4BE3C")]
		public void SetLanguage_French()
		{
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0xF4BE84", Offset = "0xF4BE84", VA = "0xF4BE84")]
		public void SetLanguage_Spanish()
		{
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0xF4BD94", Offset = "0xF4BD94", VA = "0xF4BD94")]
		public void SetLanguage(string LangName)
		{
		}

		[Token(Token = "0x6001560")]
		[Address(RVA = "0xF4BECC", Offset = "0xF4BECC", VA = "0xF4BECC")]
		public Example_ChangeLanguage()
		{
		}
	}
	[Token(Token = "0x20003F9")]
	public class Example_LocalizedString : MonoBehaviour
	{
		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LocalizedString _MyLocalizedString;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string _NormalString;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string _StringWithTermPopup;

		[Token(Token = "0x6001561")]
		[Address(RVA = "0xF4BED4", Offset = "0xF4BED4", VA = "0xF4BED4")]
		public void Start()
		{
		}

		[Token(Token = "0x6001562")]
		[Address(RVA = "0xF4C1C8", Offset = "0xF4C1C8", VA = "0xF4C1C8")]
		public Example_LocalizedString()
		{
		}
	}
	[Token(Token = "0x20003FA")]
	public class GlobalParametersExample : RegisterGlobalParameters
	{
		[Token(Token = "0x6001563")]
		[Address(RVA = "0xF4C1D0", Offset = "0xF4C1D0", VA = "0xF4C1D0", Slot = "7")]
		public override string GetParameterValue(string ParamName)
		{
			return null;
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0xF4C280", Offset = "0xF4C280", VA = "0xF4C280")]
		public GlobalParametersExample()
		{
		}
	}
	[Token(Token = "0x20003FB")]
	public class RealTimeTranslation : MonoBehaviour
	{
		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string OriginalText;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string TranslatedText;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool IsTranslating;

		[Token(Token = "0x6001565")]
		[Address(RVA = "0xF8C978", Offset = "0xF8C978", VA = "0xF8C978")]
		public void OnGUI()
		{
		}

		[Token(Token = "0x6001566")]
		[Address(RVA = "0xF8CF74", Offset = "0xF8CF74", VA = "0xF8CF74")]
		public void StartTranslating(string fromCode, string toCode)
		{
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0xF8D188", Offset = "0xF8D188", VA = "0xF8D188")]
		private void OnTranslationReady(string Translation, string errorMsg)
		{
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0xF8D21C", Offset = "0xF8D21C", VA = "0xF8D21C")]
		public void ExampleMultiTranslations_Blocking()
		{
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0xF8D038", Offset = "0xF8D038", VA = "0xF8D038")]
		public void ExampleMultiTranslations_Async()
		{
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0xF8D434", Offset = "0xF8D434", VA = "0xF8D434")]
		private void OnMultitranslationReady(Dictionary<string, TranslationQuery> dict, string errorMsg)
		{
		}

		[Token(Token = "0x600156B")]
		[Address(RVA = "0xF8D624", Offset = "0xF8D624", VA = "0xF8D624")]
		public bool IsWaitingForTranslation()
		{
			return default(bool);
		}

		[Token(Token = "0x600156C")]
		[Address(RVA = "0xF8D62C", Offset = "0xF8D62C", VA = "0xF8D62C")]
		public string GetTranslatedText()
		{
			return null;
		}

		[Token(Token = "0x600156D")]
		[Address(RVA = "0xF8D634", Offset = "0xF8D634", VA = "0xF8D634")]
		public void SetOriginalText(string text)
		{
		}

		[Token(Token = "0x600156E")]
		[Address(RVA = "0xF8D63C", Offset = "0xF8D63C", VA = "0xF8D63C")]
		public RealTimeTranslation()
		{
		}
	}
	[Token(Token = "0x20003FC")]
	public class RegisterBundlesManager : MonoBehaviour, IResourceManager_Bundles
	{
		[Token(Token = "0x600156F")]
		[Address(RVA = "0xF8D6AC", Offset = "0xF8D6AC", VA = "0xF8D6AC")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0xF8D744", Offset = "0xF8D744", VA = "0xF8D744")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0xF8D7A8", Offset = "0xF8D7A8", VA = "0xF8D7A8", Slot = "5")]
		public virtual UnityEngine.Object LoadFromBundle(string path, Type assetType)
		{
			return null;
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0xF8D7B0", Offset = "0xF8D7B0", VA = "0xF8D7B0")]
		public RegisterBundlesManager()
		{
		}
	}
	[Token(Token = "0x20003FD")]
	public class ToggleLanguage : MonoBehaviour
	{
		[Token(Token = "0x6001573")]
		[Address(RVA = "0xF8FAA8", Offset = "0xF8FAA8", VA = "0xF8FAA8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0xF8FB00", Offset = "0xF8FB00", VA = "0xF8FB00")]
		private void test()
		{
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0xF8FBA8", Offset = "0xF8FBA8", VA = "0xF8FBA8")]
		public ToggleLanguage()
		{
		}
	}
	[Token(Token = "0x20003FE")]
	public static class PersistentStorage
	{
		[Token(Token = "0x20003FF")]
		public enum eFileType
		{
			[Token(Token = "0x40015EB")]
			Raw,
			[Token(Token = "0x40015EC")]
			Persistent,
			[Token(Token = "0x40015ED")]
			Temporal,
			[Token(Token = "0x40015EE")]
			Streaming
		}

		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static I2CustomPersistentStorage mStorage;

		[Token(Token = "0x6001576")]
		[Address(RVA = "0xF7F0A8", Offset = "0xF7F0A8", VA = "0xF7F0A8")]
		public static void SetSetting_String(string key, string value)
		{
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0xF7F528", Offset = "0xF7F528", VA = "0xF7F528")]
		public static string GetSetting_String(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0xF8A50C", Offset = "0xF8A50C", VA = "0xF8A50C")]
		public static void DeleteSetting(string key)
		{
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0xF8A5B4", Offset = "0xF8A5B4", VA = "0xF8A5B4")]
		public static bool HasSetting(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0xF8A65C", Offset = "0xF8A65C", VA = "0xF8A65C")]
		public static void ForceSaveSettings()
		{
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0xF8A6F4", Offset = "0xF8A6F4", VA = "0xF8A6F4")]
		public static bool CanAccessFiles()
		{
			return default(bool);
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0xF8A78C", Offset = "0xF8A78C", VA = "0xF8A78C")]
		public static bool SaveFile(eFileType fileType, string fileName, string data, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x600157D")]
		[Address(RVA = "0xF8A854", Offset = "0xF8A854", VA = "0xF8A854")]
		public static string LoadFile(eFileType fileType, string fileName, bool logExceptions = true)
		{
			return null;
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0xF8A914", Offset = "0xF8A914", VA = "0xF8A914")]
		public static bool DeleteFile(eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0xF8A9D4", Offset = "0xF8A9D4", VA = "0xF8A9D4")]
		public static bool HasFile(eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000400")]
	public abstract class I2BasePersistentStorage
	{
		[Token(Token = "0x6001580")]
		[Address(RVA = "0xF55414", Offset = "0xF55414", VA = "0xF55414", Slot = "4")]
		public virtual void SetSetting_String(string key, string value)
		{
		}

		[Token(Token = "0x6001581")]
		[Address(RVA = "0xF556D4", Offset = "0xF556D4", VA = "0xF556D4", Slot = "5")]
		public virtual string GetSetting_String(string key, string defaultValue)
		{
			return null;
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0xF55908", Offset = "0xF55908", VA = "0xF55908", Slot = "6")]
		public virtual void DeleteSetting(string key)
		{
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0xF55B04", Offset = "0xF55B04", VA = "0xF55B04", Slot = "7")]
		public virtual void ForceSaveSettings()
		{
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0xF55B0C", Offset = "0xF55B0C", VA = "0xF55B0C", Slot = "8")]
		public virtual bool HasSetting(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0xF55B18", Offset = "0xF55B18", VA = "0xF55B18", Slot = "9")]
		public virtual bool CanAccessFiles()
		{
			return default(bool);
		}

		[Token(Token = "0x6001586")]
		[Address(RVA = "0xF55B20", Offset = "0xF55B20", VA = "0xF55B20")]
		private string UpdateFilename(PersistentStorage.eFileType fileType, string fileName)
		{
			return null;
		}

		[Token(Token = "0x6001587")]
		[Address(RVA = "0xF55BCC", Offset = "0xF55BCC", VA = "0xF55BCC", Slot = "10")]
		public virtual bool SaveFile(PersistentStorage.eFileType fileType, string fileName, string data, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0xF55E34", Offset = "0xF55E34", VA = "0xF55E34", Slot = "11")]
		public virtual string LoadFile(PersistentStorage.eFileType fileType, string fileName, bool logExceptions = true)
		{
			return null;
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0xF56088", Offset = "0xF56088", VA = "0xF56088", Slot = "12")]
		public virtual bool DeleteFile(PersistentStorage.eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0xF562C4", Offset = "0xF562C4", VA = "0xF562C4", Slot = "13")]
		public virtual bool HasFile(PersistentStorage.eFileType fileType, string fileName, bool logExceptions = true)
		{
			return default(bool);
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0xF56500", Offset = "0xF56500", VA = "0xF56500")]
		protected I2BasePersistentStorage()
		{
		}
	}
	[Token(Token = "0x2000401")]
	public class I2CustomPersistentStorage : I2BasePersistentStorage
	{
		[Token(Token = "0x600158C")]
		[Address(RVA = "0xF56508", Offset = "0xF56508", VA = "0xF56508")]
		public I2CustomPersistentStorage()
		{
		}
	}
	[Token(Token = "0x2000402")]
	public class BaseSpecializationManager
	{
		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string[] mSpecializations;

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Dictionary<string, string> mSpecializationsFallbacks;

		[Token(Token = "0x600158D")]
		[Address(RVA = "0xF4B230", Offset = "0xF4B230", VA = "0xF4B230", Slot = "4")]
		public virtual void InitializeSpecializations()
		{
		}

		[Token(Token = "0x600158E")]
		[Address(RVA = "0xF4B618", Offset = "0xF4B618", VA = "0xF4B618", Slot = "5")]
		public virtual string GetCurrentSpecialization()
		{
			return null;
		}

		[Token(Token = "0x600158F")]
		[Address(RVA = "0xF4B67C", Offset = "0xF4B67C", VA = "0xF4B67C", Slot = "6")]
		public virtual string GetFallbackSpecialization(string specialization)
		{
			return null;
		}

		[Token(Token = "0x6001590")]
		[Address(RVA = "0xF4B720", Offset = "0xF4B720", VA = "0xF4B720")]
		public BaseSpecializationManager()
		{
		}
	}
	[Token(Token = "0x2000403")]
	public class SpecializationManager : BaseSpecializationManager
	{
		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static SpecializationManager Singleton;

		[Token(Token = "0x6001591")]
		[Address(RVA = "0xF8E89C", Offset = "0xF8E89C", VA = "0xF8E89C")]
		private SpecializationManager()
		{
		}

		[Token(Token = "0x6001592")]
		[Address(RVA = "0xF8E8CC", Offset = "0xF8E8CC", VA = "0xF8E8CC")]
		public static string GetSpecializedText(string text, [Optional] string specialization)
		{
			return null;
		}

		[Token(Token = "0x6001593")]
		[Address(RVA = "0xF8EAB4", Offset = "0xF8EAB4", VA = "0xF8EAB4")]
		public static string SetSpecializedText(string text, string newText, string specialization)
		{
			return null;
		}

		[Token(Token = "0x6001594")]
		[Address(RVA = "0xF8ED98", Offset = "0xF8ED98", VA = "0xF8ED98")]
		public static string SetSpecializedText(Dictionary<string, string> specializations)
		{
			return null;
		}

		[Token(Token = "0x6001595")]
		[Address(RVA = "0xF8EBC0", Offset = "0xF8EBC0", VA = "0xF8EBC0")]
		public static Dictionary<string, string> GetSpecializations(string text, [Optional] Dictionary<string, string> buffer)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000404")]
	public class EventCallback
	{
		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MonoBehaviour Target;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string MethodName;

		[Token(Token = "0x6001597")]
		[Address(RVA = "0xF4BBF0", Offset = "0xF4BBF0", VA = "0xF4BBF0")]
		public void Execute([Optional] UnityEngine.Object Sender)
		{
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0xF4BC58", Offset = "0xF4BC58", VA = "0xF4BC58")]
		public bool HasCallback()
		{
			return default(bool);
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0xF4BCEC", Offset = "0xF4BCEC", VA = "0xF4BCEC")]
		public EventCallback()
		{
		}
	}
	[Token(Token = "0x2000405")]
	public enum ePluralType
	{
		[Token(Token = "0x40015F5")]
		Zero,
		[Token(Token = "0x40015F6")]
		One,
		[Token(Token = "0x40015F7")]
		Two,
		[Token(Token = "0x40015F8")]
		Few,
		[Token(Token = "0x40015F9")]
		Many,
		[Token(Token = "0x40015FA")]
		Plural
	}
	[Token(Token = "0x2000406")]
	public static class GoogleLanguages
	{
		[Token(Token = "0x2000407")]
		public struct LanguageCodeDef
		{
			[Token(Token = "0x40015FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Code;

			[Token(Token = "0x40015FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string GoogleCode;

			[Token(Token = "0x40015FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool HasJoinedWords;

			[Token(Token = "0x40015FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int PluralRule;
		}

		[Token(Token = "0x40015FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<string, LanguageCodeDef> mLanguageDef;

		[Token(Token = "0x600159A")]
		[Address(RVA = "0xF4C288", Offset = "0xF4C288", VA = "0xF4C288")]
		public static string GetLanguageCode(string Filter, bool ShowWarnings = false)
		{
			return null;
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0xF4C4C0", Offset = "0xF4C4C0", VA = "0xF4C4C0")]
		private static bool LanguageMatchesFilter(string Language, string[] Filters)
		{
			return default(bool);
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0xF4C618", Offset = "0xF4C618", VA = "0xF4C618")]
		public static void UnPackCodeFromLanguageName(string CodedLanguage, out string Language, out string code)
		{
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0xF4C758", Offset = "0xF4C758", VA = "0xF4C758")]
		public static string GetGoogleLanguageCode(string InternationalCode)
		{
			return null;
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0xF4C8C8", Offset = "0xF4C8C8", VA = "0xF4C8C8")]
		public static string GetLanguageName(string code, bool useParenthesesForRegion = false, bool allowDiscardRegion = true)
		{
			return null;
		}

		[Token(Token = "0x600159F")]
		[Address(RVA = "0xF4CB48", Offset = "0xF4CB48", VA = "0xF4CB48")]
		public static bool LanguageCode_HasJoinedWord(string languageCode)
		{
			return default(bool);
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0xF4CCB4", Offset = "0xF4CCB4", VA = "0xF4CCB4")]
		private static int GetPluralRule(string langCode)
		{
			return default(int);
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0xF4CE38", Offset = "0xF4CE38", VA = "0xF4CE38")]
		public static bool LanguageHasPluralType(string langCode, string pluralType)
		{
			return default(bool);
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0xF4CFBC", Offset = "0xF4CFBC", VA = "0xF4CFBC")]
		public static ePluralType GetPluralType(string langCode, int n)
		{
			return default(ePluralType);
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0xF4D6D4", Offset = "0xF4D6D4", VA = "0xF4D6D4")]
		public static int GetPluralTestNumber(string langCode, ePluralType pluralType)
		{
			return default(int);
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0xF4D6BC", Offset = "0xF4D6BC", VA = "0xF4D6BC")]
		private static bool inRange(int amount, int min, int max)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000408")]
	public static class GoogleTranslation
	{
		[Token(Token = "0x2000409")]
		public delegate void fnOnTranslated(string Translation, string Error);

		[Token(Token = "0x200040A")]
		public delegate void fnOnTranslationReady(Dictionary<string, TranslationQuery> dict, string error);

		[Token(Token = "0x200040B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB178A8", Offset = "0xB178A8")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001602")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public fnOnTranslated OnTranslationReady;

			[Token(Token = "0x4001603")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string text;

			[Token(Token = "0x4001604")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dictionary<string, TranslationQuery> queries;

			[Token(Token = "0x4001605")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string LanguageCodeTo;

			[Token(Token = "0x60015C7")]
			[Address(RVA = "0xF51DD4", Offset = "0xF51DD4", VA = "0xF51DD4")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x60015C8")]
			[Address(RVA = "0xF547E4", Offset = "0xF547E4", VA = "0xF547E4")]
			internal void <Translate>b__0(Dictionary<string, TranslationQuery> results, string error)
			{
			}
		}

		[Token(Token = "0x200040C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB178B8", Offset = "0xB178B8")]
		private sealed class <WaitForTranslations>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001606")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001607")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170001DB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60015CC")]
				[Address(RVA = "0xF54A50", Offset = "0xF54A50", VA = "0xF54A50", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001DC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60015CE")]
				[Address(RVA = "0xF54AB8", Offset = "0xF54AB8", VA = "0xF54AB8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60015C9")]
			[Address(RVA = "0xF52AD0", Offset = "0xF52AD0", VA = "0xF52AD0")]
			[DebuggerHidden]
			public <WaitForTranslations>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x60015CA")]
			[Address(RVA = "0xF548C4", Offset = "0xF548C4", VA = "0xF548C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60015CB")]
			[Address(RVA = "0xF548C8", Offset = "0xF548C8", VA = "0xF548C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60015CD")]
			[Address(RVA = "0xF54A58", Offset = "0xF54A58", VA = "0xF54A58", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<UnityWebRequest> mCurrentTranslations;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<TranslationJob> mTranslationJobs;

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0xF51B30", Offset = "0xF51B30", VA = "0xF51B30")]
		public static bool CanTranslate()
		{
			return default(bool);
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0xF51BE4", Offset = "0xF51BE4", VA = "0xF51BE4")]
		public static void Translate(string text, string LanguageCodeFrom, string LanguageCodeTo, fnOnTranslated OnTranslationReady)
		{
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0xF523B0", Offset = "0xF523B0", VA = "0xF523B0")]
		public static void Translate(Dictionary<string, TranslationQuery> requests, fnOnTranslationReady OnTranslationReady, bool usePOST = true)
		{
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0xF5250C", Offset = "0xF5250C", VA = "0xF5250C")]
		public static bool ForceTranslate(Dictionary<string, TranslationQuery> requests, bool usePOST = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60015AA")]
		[Address(RVA = "0xF52594", Offset = "0xF52594", VA = "0xF52594")]
		public static List<string> ConvertTranslationRequest(Dictionary<string, TranslationQuery> requests, bool encodeGET)
		{
			return null;
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0xF52444", Offset = "0xF52444", VA = "0xF52444")]
		private static void AddTranslationJob(TranslationJob job)
		{
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0xF52A70", Offset = "0xF52A70", VA = "0xF52A70")]
		private static IEnumerator WaitForTranslations()
		{
			return null;
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0xF52AFC", Offset = "0xF52AFC", VA = "0xF52AFC")]
		public static string ParseTranslationResult(string html, Dictionary<string, TranslationQuery> requests)
		{
			return null;
		}

		[Token(Token = "0x60015AE")]
		[Address(RVA = "0xF521E0", Offset = "0xF521E0", VA = "0xF521E0")]
		public static void CreateQueries(string text, string LanguageCodeFrom, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
		}

		[Token(Token = "0x60015AF")]
		[Address(RVA = "0xF53170", Offset = "0xF53170", VA = "0xF53170")]
		private static void CreateQueries_Plurals(string text, string LanguageCodeFrom, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
		}

		[Token(Token = "0x60015B0")]
		[Address(RVA = "0xF5346C", Offset = "0xF5346C", VA = "0xF5346C")]
		public static void AddQuery(string text, string LanguageCodeFrom, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
		}

		[Token(Token = "0x60015B1")]
		[Address(RVA = "0xF53D50", Offset = "0xF53D50", VA = "0xF53D50")]
		private static string GetTranslation(string text, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
			return null;
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0xF52F44", Offset = "0xF52F44", VA = "0xF52F44")]
		private static TranslationQuery FindQueryFromOrigText(string origText, Dictionary<string, TranslationQuery> dict)
		{
			return default(TranslationQuery);
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0xF533DC", Offset = "0xF533DC", VA = "0xF533DC")]
		public static bool HasParameters(string text)
		{
			return default(bool);
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0xF537F8", Offset = "0xF537F8", VA = "0xF537F8")]
		public static string GetPluralParameter(string text, bool forceTag)
		{
			return null;
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0xF536D4", Offset = "0xF536D4", VA = "0xF536D4")]
		public static string GetPluralText(string text, string pluralType)
		{
			return null;
		}

		[Token(Token = "0x60015B6")]
		[Address(RVA = "0xF53E3C", Offset = "0xF53E3C", VA = "0xF53E3C")]
		private static int FindClosingTag(string tag, MatchCollection matches, int startIndex)
		{
			return default(int);
		}

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0xF530D0", Offset = "0xF530D0", VA = "0xF530D0")]
		private static string GetGoogleNoTranslateTag(int tagNumber)
		{
			return null;
		}

		[Token(Token = "0x60015B8")]
		[Address(RVA = "0xF538DC", Offset = "0xF538DC", VA = "0xF538DC")]
		private static void ParseNonTranslatableElements(ref TranslationQuery query)
		{
		}

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0xF53FB4", Offset = "0xF53FB4", VA = "0xF53FB4")]
		public static string GetQueryResult(string text, string LanguageCodeTo, Dictionary<string, TranslationQuery> dict)
		{
			return null;
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0xF540C4", Offset = "0xF540C4", VA = "0xF540C4")]
		public static string RebuildTranslation(string text, Dictionary<string, TranslationQuery> dict, string LanguageCodeTo)
		{
			return null;
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0xF54308", Offset = "0xF54308", VA = "0xF54308")]
		private static string RebuildTranslation_Plural(string text, Dictionary<string, TranslationQuery> dict, string LanguageCodeTo)
		{
			return null;
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0xF5464C", Offset = "0xF5464C", VA = "0xF5464C")]
		public static string UppercaseFirst(string s)
		{
			return null;
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0xF529B8", Offset = "0xF529B8", VA = "0xF529B8")]
		public static string TitleCase(string s)
		{
			return null;
		}
	}
	[Token(Token = "0x200040D")]
	public struct TranslationQuery
	{
		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string OrigText;

		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string Text;

		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string LanguageCode;

		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] TargetLanguagesCode;

		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] Results;

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] Tags;
	}
	[Token(Token = "0x200040E")]
	public class TranslationJob : IDisposable
	{
		[Token(Token = "0x200040F")]
		public enum eJobState
		{
			[Token(Token = "0x4001610")]
			Running,
			[Token(Token = "0x4001611")]
			Succeeded,
			[Token(Token = "0x4001612")]
			Failed
		}

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public eJobState mJobState;

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0xF8FBB0", Offset = "0xF8FBB0", VA = "0xF8FBB0", Slot = "5")]
		public virtual eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0xF8FBB8", Offset = "0xF8FBB8", VA = "0xF8FBB8", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x60015D1")]
		[Address(RVA = "0xF8FBBC", Offset = "0xF8FBBC", VA = "0xF8FBBC")]
		public TranslationJob()
		{
		}
	}
	[Token(Token = "0x2000410")]
	public class TranslationJob_WWW : TranslationJob
	{
		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityWebRequest www;

		[Token(Token = "0x60015D2")]
		[Address(RVA = "0xF90450", Offset = "0xF90450", VA = "0xF90450", Slot = "6")]
		public override void Dispose()
		{
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0xF8FC64", Offset = "0xF8FC64", VA = "0xF8FC64")]
		public TranslationJob_WWW()
		{
		}
	}
	[Token(Token = "0x2000411")]
	public class TranslationJob_GET : TranslationJob_WWW
	{
		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<string> mQueries;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string mErrorMessage;

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0xF8FBC4", Offset = "0xF8FBC4", VA = "0xF8FBC4")]
		public TranslationJob_GET(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0xF8FC6C", Offset = "0xF8FC6C", VA = "0xF8FC6C")]
		private void ExecuteNextQuery()
		{
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0xF8FD4C", Offset = "0xF8FD4C", VA = "0xF8FD4C", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0xF8FDF0", Offset = "0xF8FDF0", VA = "0xF8FDF0")]
		public void ProcessResult(byte[] bytes, string errorMsg)
		{
		}
	}
	[Token(Token = "0x2000412")]
	public class TranslationJob_Main : TranslationJob
	{
		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TranslationJob_WEB mWeb;

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TranslationJob_POST mPost;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private TranslationJob_GET mGet;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string mErrorMessage;

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0xF8FEFC", Offset = "0xF8FEFC", VA = "0xF8FEFC")]
		public TranslationJob_Main(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0xF900D0", Offset = "0xF900D0", VA = "0xF900D0", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x60015DA")]
		[Address(RVA = "0xF9027C", Offset = "0xF9027C", VA = "0xF9027C", Slot = "6")]
		public override void Dispose()
		{
		}
	}
	[Token(Token = "0x2000413")]
	public class TranslationJob_POST : TranslationJob_WWW
	{
		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Dictionary<string, TranslationQuery> _requests;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GoogleTranslation.fnOnTranslationReady _OnTranslationReady;

		[Token(Token = "0x60015DB")]
		[Address(RVA = "0xF8FF80", Offset = "0xF8FF80", VA = "0xF8FF80")]
		public TranslationJob_POST(Dictionary<string, TranslationQuery> requests, GoogleTranslation.fnOnTranslationReady OnTranslationReady)
		{
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0xF902C8", Offset = "0xF902C8", VA = "0xF902C8", Slot = "5")]
		public override eJobState GetState()
		{
			return default(eJobState);
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0xF90358", Offset = "0xF90358", VA = "0xF90358")]
		public void ProcessResult(byte[] bytes, string errorMsg)
		{
		}
	}
	[Token(Token = "0x2000414")]
	public class TranslationJob_WEB : TranslationJob_WWW
	{
	}
	[Serializable]
	[Token(Token = "0x2000415")]
	public class LanguageData
	{
		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Code;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public byte Flags;

		[NonSerialized]
		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool Compressed;

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0xF56D94", Offset = "0xF56D94", VA = "0xF56D94")]
		public bool IsEnabled()
		{
			return default(bool);
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0xF56DA4", Offset = "0xF56DA4", VA = "0xF56DA4")]
		public bool IsLoaded()
		{
			return default(bool);
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0xF56DB4", Offset = "0xF56DB4", VA = "0xF56DB4")]
		public bool CanBeUnloaded()
		{
			return default(bool);
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0xF56DC4", Offset = "0xF56DC4", VA = "0xF56DC4")]
		public void SetLoaded(bool loaded)
		{
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0xF56DE0", Offset = "0xF56DE0", VA = "0xF56DE0")]
		public LanguageData()
		{
		}
	}
	[Token(Token = "0x2000416")]
	[ExecuteInEditMode]
	public class LanguageSource : MonoBehaviour, ISerializationCallbackReceiver, ILanguageSource
	{
		[Token(Token = "0x2000417")]
		public delegate void fnOnSourceUpdated(LanguageSourceData source, bool ReceivedNewData, string errorMsg);

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LanguageSourceData mSource;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int version;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool NeverDestroy;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool UserAgreesToHaveItOnTheScene;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26")]
		public bool UserAgreesToHaveItInsideThePluginsFolder;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27")]
		public bool GoogleLiveSyncIsUptoDate;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<UnityEngine.Object> Assets;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string Google_WebServiceURL;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string Google_SpreadsheetKey;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string Google_SpreadsheetName;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string Google_LastUpdatedVersion;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public LanguageSourceData.eGoogleUpdateFrequency GoogleUpdateFrequency;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float GoogleUpdateDelay;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<LanguageData> mLanguages;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool IgnoreDeviceLanguage;

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public LanguageSourceData.eAllowUnloadLanguages _AllowUnloadingLanguages;

		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<TermData> mTerms;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool CaseInsensitiveTerms;

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public LanguageSourceData.MissingTranslationAction OnMissingTranslation;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public string mTerm_AppName;

		[Token(Token = "0x170001DD")]
		public LanguageSourceData SourceData
		{
			[Token(Token = "0x60015E3")]
			[Address(RVA = "0xF56DE8", Offset = "0xF56DE8", VA = "0xF56DE8", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015E4")]
			[Address(RVA = "0xF56DF0", Offset = "0xF56DF0", VA = "0xF56DF0", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x14000010")]
		public event fnOnSourceUpdated Event_OnSourceUpdateFromGoogle
		{
			[Token(Token = "0x60015E5")]
			[Address(RVA = "0xF56DF8", Offset = "0xF56DF8", VA = "0xF56DF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1D0E8", Offset = "0xB1D0E8")]
			add
			{
			}
			[Token(Token = "0x60015E6")]
			[Address(RVA = "0xF56E9C", Offset = "0xF56E9C", VA = "0xF56E9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1D0F8", Offset = "0xB1D0F8")]
			remove
			{
			}
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0xF56F40", Offset = "0xF56F40", VA = "0xF56F40")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0xF56FF0", Offset = "0xF56FF0", VA = "0xF56FF0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0xF57078", Offset = "0xF57078", VA = "0xF57078")]
		public string GetSourceName()
		{
			return null;
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0xF5716C", Offset = "0xF5716C", VA = "0xF5716C", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0xF57178", Offset = "0xF57178", VA = "0xF57178", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0xF57708", Offset = "0xF57708", VA = "0xF57708")]
		public LanguageSource()
		{
		}
	}
	[Token(Token = "0x2000418")]
	public class LanguageSourceAsset : ScriptableObject, ILanguageSource
	{
		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LanguageSourceData mSource;

		[Token(Token = "0x170001DE")]
		public LanguageSourceData SourceData
		{
			[Token(Token = "0x60015F1")]
			[Address(RVA = "0xF57D30", Offset = "0xF57D30", VA = "0xF57D30", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60015F2")]
			[Address(RVA = "0xF57D38", Offset = "0xF57D38", VA = "0xF57D38", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0xF57D40", Offset = "0xF57D40", VA = "0xF57D40")]
		public LanguageSourceAsset()
		{
		}
	}
	[Token(Token = "0x2000419")]
	public interface ILanguageSource
	{
	}
	[Serializable]
	[Token(Token = "0x200041A")]
	[ExecuteInEditMode]
	public class LanguageSourceData
	{
		[Token(Token = "0x200041B")]
		public enum MissingTranslationAction
		{
			[Token(Token = "0x4001656")]
			Empty,
			[Token(Token = "0x4001657")]
			Fallback,
			[Token(Token = "0x4001658")]
			ShowWarning,
			[Token(Token = "0x4001659")]
			ShowTerm
		}

		[Token(Token = "0x200041C")]
		public enum eAllowUnloadLanguages
		{
			[Token(Token = "0x400165B")]
			Never,
			[Token(Token = "0x400165C")]
			OnlyInDevice,
			[Token(Token = "0x400165D")]
			EditorAndDevice
		}

		[Token(Token = "0x200041D")]
		public enum eGoogleUpdateFrequency
		{
			[Token(Token = "0x400165F")]
			Always,
			[Token(Token = "0x4001660")]
			Never,
			[Token(Token = "0x4001661")]
			Daily,
			[Token(Token = "0x4001662")]
			Weekly,
			[Token(Token = "0x4001663")]
			Monthly,
			[Token(Token = "0x4001664")]
			OnlyOnce,
			[Token(Token = "0x4001665")]
			EveryOtherDay
		}

		[Token(Token = "0x200041E")]
		public enum eGoogleUpdateSynchronization
		{
			[Token(Token = "0x4001667")]
			Manual,
			[Token(Token = "0x4001668")]
			OnSceneLoaded,
			[Token(Token = "0x4001669")]
			AsSoonAsDownloaded
		}

		[Serializable]
		[Token(Token = "0x200041F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB178E8", Offset = "0xB178E8")]
		private sealed class <>c
		{
			[Token(Token = "0x400166A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400166B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<UnityEngine.Object> <>9__39_0;

			[Token(Token = "0x400166C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<UnityEngine.Object, string> <>9__39_1;

			[Token(Token = "0x400166D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<IGrouping<string, UnityEngine.Object>, string> <>9__39_2;

			[Token(Token = "0x400166E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<IGrouping<string, UnityEngine.Object>, UnityEngine.Object> <>9__39_3;

			[Token(Token = "0x6001623")]
			[Address(RVA = "0xF7D58C", Offset = "0xF7D58C", VA = "0xF7D58C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001624")]
			[Address(RVA = "0xF7D594", Offset = "0xF7D594", VA = "0xF7D594")]
			internal bool <UpdateAssetDictionary>b__39_0(UnityEngine.Object x)
			{
				return default(bool);
			}

			[Token(Token = "0x6001625")]
			[Address(RVA = "0xF7D600", Offset = "0xF7D600", VA = "0xF7D600")]
			internal string <UpdateAssetDictionary>b__39_1(UnityEngine.Object o)
			{
				return null;
			}

			[Token(Token = "0x6001626")]
			[Address(RVA = "0xF7D61C", Offset = "0xF7D61C", VA = "0xF7D61C")]
			internal string <UpdateAssetDictionary>b__39_2(IGrouping<string, UnityEngine.Object> g)
			{
				return null;
			}

			[Token(Token = "0x6001627")]
			[Address(RVA = "0xF7D6C8", Offset = "0xF7D6C8", VA = "0xF7D6C8")]
			internal UnityEngine.Object <UpdateAssetDictionary>b__39_3(IGrouping<string, UnityEngine.Object> g)
			{
				return null;
			}
		}

		[Token(Token = "0x2000420")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB178F8", Offset = "0xB178F8")]
		private sealed class <Import_Google_Coroutine>d__65 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400166F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001670")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001671")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public LanguageSourceData <>4__this;

			[Token(Token = "0x4001672")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool JustCheck;

			[Token(Token = "0x4001673")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x170001DF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600162B")]
				[Address(RVA = "0xF7D9D0", Offset = "0xF7D9D0", VA = "0xF7D9D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001E0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600162D")]
				[Address(RVA = "0xF7DA38", Offset = "0xF7DA38", VA = "0xF7DA38", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001628")]
			[Address(RVA = "0xF7D718", Offset = "0xF7D718", VA = "0xF7D718")]
			[DebuggerHidden]
			public <Import_Google_Coroutine>d__65(int <>1__state)
			{
			}

			[Token(Token = "0x6001629")]
			[Address(RVA = "0xF7D744", Offset = "0xF7D744", VA = "0xF7D744", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600162A")]
			[Address(RVA = "0xF7D748", Offset = "0xF7D748", VA = "0xF7D748", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600162C")]
			[Address(RVA = "0xF7D9D8", Offset = "0xF7D9D8", VA = "0xF7D9D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[NonSerialized]
		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ILanguageSource owner;

		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool UserAgreesToHaveItOnTheScene;

		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool UserAgreesToHaveItInsideThePluginsFolder;

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool GoogleLiveSyncIsUptoDate;

		[NonSerialized]
		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool mIsGlobalSource;

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<TermData> mTerms;

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool CaseInsensitiveTerms;

		[NonSerialized]
		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dictionary<string, TermData> mDictionary;

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public MissingTranslationAction OnMissingTranslation;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string mTerm_AppName;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<LanguageData> mLanguages;

		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool IgnoreDeviceLanguage;

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public eAllowUnloadLanguages _AllowUnloadingLanguages;

		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string Google_WebServiceURL;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string Google_SpreadsheetKey;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string Google_SpreadsheetName;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string Google_LastUpdatedVersion;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public eGoogleUpdateFrequency GoogleUpdateFrequency;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public eGoogleUpdateFrequency GoogleInEditorCheckFrequency;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public eGoogleUpdateSynchronization GoogleUpdateSynchronization;

		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float GoogleUpdateDelay;

		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<UnityEngine.Object> Assets;

		[NonSerialized]
		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Dictionary<string, UnityEngine.Object> mAssetDictionary;

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private string mDelayedGoogleData;

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string EmptyCategory;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static char[] CategorySeparators;

		[Token(Token = "0x14000011")]
		public event LanguageSource.fnOnSourceUpdated Event_OnSourceUpdateFromGoogle
		{
			[Token(Token = "0x60015F4")]
			[Address(RVA = "0xF57664", Offset = "0xF57664", VA = "0xF57664")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1D108", Offset = "0xB1D108")]
			add
			{
			}
			[Token(Token = "0x60015F5")]
			[Address(RVA = "0xF57DA4", Offset = "0xF57DA4", VA = "0xF57DA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1D118", Offset = "0xB1D118")]
			remove
			{
			}
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0xF56F68", Offset = "0xF56F68", VA = "0xF56F68")]
		public void Awake()
		{
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0xF57010", Offset = "0xF57010", VA = "0xF57010")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0xF5842C", Offset = "0xF5842C", VA = "0xF5842C")]
		public void ClearAllData()
		{
		}

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0xF584CC", Offset = "0xF584CC", VA = "0xF584CC")]
		public void Editor_SetDirty()
		{
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0xF58128", Offset = "0xF58128", VA = "0xF58128")]
		public void UpdateAssetDictionary()
		{
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0xF584D0", Offset = "0xF584D0", VA = "0xF584D0")]
		public UnityEngine.Object FindAsset(string Name)
		{
			return null;
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0xF58594", Offset = "0xF58594", VA = "0xF58594")]
		private string Export_Language_to_Cache(int langIndex, bool fillTermWithFallback)
		{
			return null;
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0xF58AE0", Offset = "0xF58AE0", VA = "0xF58AE0")]
		public string Import_I2CSV(string Category, string I2CSVstring, eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace)
		{
			return null;
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0xF58B28", Offset = "0xF58B28", VA = "0xF58B28")]
		public string Import_CSV(string Category, List<string[]> CSV, eSpreadsheetUpdateMode UpdateMode = eSpreadsheetUpdateMode.Replace)
		{
			return null;
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0xF59594", Offset = "0xF59594", VA = "0xF59594")]
		private bool ArrayContains(string MainText, params string[] texts)
		{
			return default(bool);
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0xF59D58", Offset = "0xF59D58", VA = "0xF59D58")]
		public static eTermType GetTermType(string type)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0xF59FEC", Offset = "0xF59FEC", VA = "0xF59FEC")]
		private void Import_Language_from_Cache(int langIndex, string langData, bool useFallback, bool onlyCurrentSpecialization)
		{
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0xF5A20C", Offset = "0xF5A20C", VA = "0xF5A20C")]
		public void Import_Google_FromCache()
		{
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0xF5A5D4", Offset = "0xF5A5D4", VA = "0xF5A5D4")]
		private bool IsNewerVersion(string currentVersion, string newVersion)
		{
			return default(bool);
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0xF5ABFC", Offset = "0xF5ABFC", VA = "0xF5ABFC")]
		public void Import_Google(bool ForceUpdate, bool justCheck)
		{
		}

		[Token(Token = "0x6001605")]
		[Address(RVA = "0xF5A444", Offset = "0xF5A444", VA = "0xF5A444")]
		private string GetSourcePlayerPrefName()
		{
			return null;
		}

		[Token(Token = "0x6001606")]
		[Address(RVA = "0xF5AE7C", Offset = "0xF5AE7C", VA = "0xF5AE7C")]
		private IEnumerator Import_Google_Coroutine(bool JustCheck)
		{
			return null;
		}

		[Token(Token = "0x6001607")]
		[Address(RVA = "0xF5AF00", Offset = "0xF5AF00", VA = "0xF5AF00")]
		private void ApplyDownloadedDataOnSceneLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0xF5AF84", Offset = "0xF5AF84", VA = "0xF5AF84")]
		public void ApplyDownloadedDataFromGoogle()
		{
		}

		[Token(Token = "0x6001609")]
		[Address(RVA = "0xF5B0CC", Offset = "0xF5B0CC", VA = "0xF5B0CC")]
		public UnityWebRequest Import_Google_CreateWWWcall(bool ForceUpdate, bool justCheck)
		{
			return null;
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0xF5B21C", Offset = "0xF5B21C", VA = "0xF5B21C")]
		public bool HasGoogleSpreadsheet()
		{
			return default(bool);
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0xF5A664", Offset = "0xF5A664", VA = "0xF5A664")]
		public string Import_Google_Result(string JsonString, eSpreadsheetUpdateMode UpdateMode, bool saveInPlayerPrefs = false)
		{
			return null;
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0xF597F8", Offset = "0xF597F8", VA = "0xF597F8")]
		public int GetLanguageIndex(string language, bool AllowDiscartingRegion = true, bool SkipDisabled = true)
		{
			return default(int);
		}

		[Token(Token = "0x600160D")]
		[Address(RVA = "0xF5B498", Offset = "0xF5B498", VA = "0xF5B498")]
		public bool IsCurrentLanguage(int languageIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0xF59638", Offset = "0xF59638", VA = "0xF59638")]
		public int GetLanguageIndexFromCode(string Code, bool exactMatch = true, bool ignoreDisabled = false)
		{
			return default(int);
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0xF5B2C0", Offset = "0xF5B2C0", VA = "0xF5B2C0")]
		public static int GetCommonWordInLanguageNames(string Language1, string Language2)
		{
			return default(int);
		}

		[Token(Token = "0x6001610")]
		[Address(RVA = "0xF5B54C", Offset = "0xF5B54C", VA = "0xF5B54C")]
		public void AddLanguage(string LanguageName, string LanguageCode)
		{
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0xF5B6C4", Offset = "0xF5B6C4", VA = "0xF5B6C4")]
		public List<string> GetLanguages(bool skipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0xF5B7F0", Offset = "0xF5B7F0", VA = "0xF5B7F0")]
		public bool AllowUnloadingLanguages()
		{
			return default(bool);
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0xF5B800", Offset = "0xF5B800", VA = "0xF5B800")]
		private string GetSavedLanguageFileName(int languageIndex)
		{
			return null;
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0xF5B9C8", Offset = "0xF5B9C8", VA = "0xF5B9C8")]
		public void LoadLanguage(int languageIndex, bool UnloadOtherLanguages, bool useFallback, bool onlyCurrentSpecialization, bool forceLoad)
		{
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0xF5BB50", Offset = "0xF5BB50", VA = "0xF5BB50")]
		public void UnloadLanguage(int languageIndex)
		{
		}

		[Token(Token = "0x6001616")]
		[Address(RVA = "0xF59ECC", Offset = "0xF59ECC", VA = "0xF59ECC")]
		public void SaveLanguages(bool unloadAll, PersistentStorage.eFileType fileLocation = PersistentStorage.eFileType.Temporal)
		{
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0xF59E28", Offset = "0xF59E28", VA = "0xF59E28")]
		public bool HasUnloadedLanguages()
		{
			return default(bool);
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0xF5BD70", Offset = "0xF5BD70", VA = "0xF5BD70")]
		public static string GetKeyFromFullTerm(string FullTerm, bool OnlyMainCategory = false)
		{
			return null;
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0xF57E48", Offset = "0xF57E48", VA = "0xF57E48")]
		public void UpdateDictionary(bool force = false)
		{
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0xF5BE54", Offset = "0xF5BE54", VA = "0xF5BE54")]
		public bool TryGetTranslation(string term, out string Translation, [Optional] string overrideLanguage, [Optional] string overrideSpecialization, bool skipDisabled = false, bool allowCategoryMistmatch = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600161B")]
		[Address(RVA = "0xF58820", Offset = "0xF58820", VA = "0xF58820")]
		private bool TryGetFallbackTranslation(TermData termData, out string Translation, int langIndex, [Optional] string overrideSpecialization, bool skipDisabled = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600161C")]
		[Address(RVA = "0xF5C060", Offset = "0xF5C060", VA = "0xF5C060")]
		public TermData AddTerm(string term)
		{
			return null;
		}

		[Token(Token = "0x600161D")]
		[Address(RVA = "0xF59B84", Offset = "0xF59B84", VA = "0xF59B84")]
		public TermData GetTermData(string term, bool allowCategoryMistmatch = false)
		{
			return null;
		}

		[Token(Token = "0x600161E")]
		[Address(RVA = "0xF5C06C", Offset = "0xF5C06C", VA = "0xF5C06C")]
		public TermData AddTerm(string NewTerm, eTermType termType, bool SaveSource = true)
		{
			return null;
		}

		[Token(Token = "0x600161F")]
		[Address(RVA = "0xF599E4", Offset = "0xF599E4", VA = "0xF599E4")]
		public static void ValidateFullTerm(ref string Term)
		{
		}

		[Token(Token = "0x6001620")]
		[Address(RVA = "0xF57474", Offset = "0xF57474", VA = "0xF57474")]
		public LanguageSourceData()
		{
		}
	}
	[Token(Token = "0x2000421")]
	public enum eSpreadsheetUpdateMode
	{
		[Token(Token = "0x4001675")]
		None,
		[Token(Token = "0x4001676")]
		Replace,
		[Token(Token = "0x4001677")]
		Merge,
		[Token(Token = "0x4001678")]
		AddNewTerms
	}
	[Token(Token = "0x2000422")]
	public class LocalizationReader
	{
		[Token(Token = "0x600162E")]
		[Address(RVA = "0xF847B0", Offset = "0xF847B0", VA = "0xF847B0")]
		public static List<string[]> ReadI2CSV(string Text)
		{
			return null;
		}
	}
	[Token(Token = "0x2000423")]
	public class Localize : MonoBehaviour
	{
		[Token(Token = "0x2000424")]
		public enum TermModification
		{
			[Token(Token = "0x400169A")]
			DontModify,
			[Token(Token = "0x400169B")]
			ToUpper,
			[Token(Token = "0x400169C")]
			ToLower,
			[Token(Token = "0x400169D")]
			ToUpperFirst,
			[Token(Token = "0x400169E")]
			ToTitle
		}

		[Serializable]
		[Token(Token = "0x2000425")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17908", Offset = "0xB17908")]
		private sealed class <>c
		{
			[Token(Token = "0x400169F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40016A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<UnityEngine.Object> <>9__50_0;

			[Token(Token = "0x40016A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<UnityEngine.Object, string> <>9__50_1;

			[Token(Token = "0x40016A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<IGrouping<string, UnityEngine.Object>, string> <>9__50_2;

			[Token(Token = "0x40016A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<IGrouping<string, UnityEngine.Object>, UnityEngine.Object> <>9__50_3;

			[Token(Token = "0x6001648")]
			[Address(RVA = "0xF85A00", Offset = "0xF85A00", VA = "0xF85A00")]
			public <>c()
			{
			}

			[Token(Token = "0x6001649")]
			[Address(RVA = "0xF85A08", Offset = "0xF85A08", VA = "0xF85A08")]
			internal bool <UpdateAssetDictionary>b__50_0(UnityEngine.Object x)
			{
				return default(bool);
			}

			[Token(Token = "0x600164A")]
			[Address(RVA = "0xF85A74", Offset = "0xF85A74", VA = "0xF85A74")]
			internal string <UpdateAssetDictionary>b__50_1(UnityEngine.Object o)
			{
				return null;
			}

			[Token(Token = "0x600164B")]
			[Address(RVA = "0xF85A90", Offset = "0xF85A90", VA = "0xF85A90")]
			internal string <UpdateAssetDictionary>b__50_2(IGrouping<string, UnityEngine.Object> g)
			{
				return null;
			}

			[Token(Token = "0x600164C")]
			[Address(RVA = "0xF85B3C", Offset = "0xF85B3C", VA = "0xF85B3C")]
			internal UnityEngine.Object <UpdateAssetDictionary>b__50_3(IGrouping<string, UnityEngine.Object> g)
			{
				return null;
			}
		}

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string mTerm;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string mTermSecondary;

		[NonSerialized]
		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string FinalTerm;

		[NonSerialized]
		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string FinalSecondaryTerm;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TermModification PrimaryTermModifier;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public TermModification SecondaryTermModifier;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string TermPrefix;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string TermSuffix;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool LocalizeOnAwake;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string LastLocalizedLanguage;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool IgnoreRTL;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public int MaxCharactersInRTL;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool IgnoreNumbersInRTL;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		public bool CorrectAlignmentForRTL;

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		public bool AddSpacesToJoinedLanguages;

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		public bool AllowLocalizedParameters;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool AllowParameters;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<UnityEngine.Object> TranslatedObjects;

		[NonSerialized]
		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Dictionary<string, UnityEngine.Object> mAssetDictionary;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UnityEvent LocalizeEvent;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string MainTranslation;

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string SecondaryTranslation;

		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string CallBackTerm;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string CallBackSecondaryTerm;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Localize CurrentLocalizeComponent;

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool AlwaysForceLocalize;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		public EventCallback LocalizeCallBack;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool mGUI_ShowReferences;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public bool mGUI_ShowTems;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9A")]
		public bool mGUI_ShowCallback;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public ILocalizeTarget mLocalizeTarget;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public string mLocalizeTargetName;

		[Token(Token = "0x170001E1")]
		public string Term
		{
			[Token(Token = "0x600162F")]
			[Address(RVA = "0xF84954", Offset = "0xF84954", VA = "0xF84954")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001630")]
			[Address(RVA = "0xF8495C", Offset = "0xF8495C", VA = "0xF8495C")]
			set
			{
			}
		}

		[Token(Token = "0x170001E2")]
		public string SecondaryTerm
		{
			[Token(Token = "0x6001631")]
			[Address(RVA = "0xF849A0", Offset = "0xF849A0", VA = "0xF849A0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001632")]
			[Address(RVA = "0xF849A8", Offset = "0xF849A8", VA = "0xF849A8")]
			set
			{
			}
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0xF84A08", Offset = "0xF84A08", VA = "0xF84A08")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0xF8523C", Offset = "0xF8523C", VA = "0xF8523C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0xF85244", Offset = "0xF85244", VA = "0xF85244")]
		public bool HasCallback()
		{
			return default(bool);
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0xF82D54", Offset = "0xF82D54", VA = "0xF82D54")]
		public void OnLocalize(bool Force = false)
		{
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0xF84D50", Offset = "0xF84D50", VA = "0xF84D50")]
		public bool FindTarget()
		{
			return default(bool);
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0xF85298", Offset = "0xF85298", VA = "0xF85298")]
		public void GetFinalTerms(out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0xF853F8", Offset = "0xF853F8", VA = "0xF853F8")]
		public string GetMainTargetsText()
		{
			return null;
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0xF854D0", Offset = "0xF854D0", VA = "0xF854D0")]
		public void SetFinalTerms(string Main, string Secondary, out string primaryTerm, out string secondaryTerm, bool RemoveNonASCII)
		{
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0xF84960", Offset = "0xF84960", VA = "0xF84960")]
		public void SetTerm(string primary)
		{
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0xF849B4", Offset = "0xF849B4", VA = "0xF849B4")]
		public void SetTerm(string primary, string secondary)
		{
		}

		[Token(Token = "0x600163D")]
		internal T GetSecondaryTranslatedObj<T>(ref string mainTranslation, ref string secondaryTranslation) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0xF84A4C", Offset = "0xF84A4C", VA = "0xF84A4C")]
		public void UpdateAssetDictionary()
		{
		}

		[Token(Token = "0x600163F")]
		internal T GetObject<T>(string Translation) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001640")]
		private T GetTranslatedObject<T>(string Translation) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0xF85518", Offset = "0xF85518", VA = "0xF85518")]
		private void DeserializeTranslation(string translation, out string value, out string secondary)
		{
		}

		[Token(Token = "0x6001642")]
		public T FindTranslatedObject<T>(string value) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0xF8560C", Offset = "0xF8560C", VA = "0xF8560C")]
		public bool HasTranslatedObject(UnityEngine.Object Obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0xF8570C", Offset = "0xF8570C", VA = "0xF8570C")]
		public void AddTranslatedObject(UnityEngine.Object Obj)
		{
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0xF857AC", Offset = "0xF857AC", VA = "0xF857AC")]
		public void SetGlobalLanguage(string Language)
		{
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0xF85810", Offset = "0xF85810", VA = "0xF85810")]
		public Localize()
		{
		}
	}
	[Token(Token = "0x2000426")]
	public class LocalizeDropdown : MonoBehaviour
	{
		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<string> _Terms;

		[Token(Token = "0x600164D")]
		[Address(RVA = "0xF85B8C", Offset = "0xF85B8C", VA = "0xF85B8C")]
		public void Start()
		{
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0xF85D1C", Offset = "0xF85D1C", VA = "0xF85D1C")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x600164F")]
		[Address(RVA = "0xF85DAC", Offset = "0xF85DAC", VA = "0xF85DAC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001650")]
		[Address(RVA = "0xF85C24", Offset = "0xF85C24", VA = "0xF85C24")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x6001651")]
		[Address(RVA = "0xF85E0C", Offset = "0xF85E0C", VA = "0xF85E0C")]
		private void FillValues()
		{
		}

		[Token(Token = "0x6001652")]
		[Address(RVA = "0xF85F9C", Offset = "0xF85F9C", VA = "0xF85F9C")]
		public void UpdateLocalization()
		{
		}

		[Token(Token = "0x6001653")]
		[Address(RVA = "0xF86344", Offset = "0xF86344", VA = "0xF86344")]
		public void UpdateLocalizationTMPro()
		{
		}

		[Token(Token = "0x6001654")]
		[Address(RVA = "0xF861CC", Offset = "0xF861CC", VA = "0xF861CC")]
		private void FillValuesTMPro()
		{
		}

		[Token(Token = "0x6001655")]
		[Address(RVA = "0xF86568", Offset = "0xF86568", VA = "0xF86568")]
		public LocalizeDropdown()
		{
		}
	}
	[Token(Token = "0x2000427")]
	public static class LocalizationManager
	{
		[Token(Token = "0x2000428")]
		public delegate object _GetParam(string param);

		[Token(Token = "0x2000429")]
		public delegate void OnLocalizeCallback();

		[Token(Token = "0x200042A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17918", Offset = "0xB17918")]
		private sealed class <>c__DisplayClass33_0
		{
			[Token(Token = "0x40016B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<string> Languages;

			[Token(Token = "0x40016B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Func<string, bool> <>9__0;

			[Token(Token = "0x600168E")]
			[Address(RVA = "0xF7FAE0", Offset = "0xF7FAE0", VA = "0xF7FAE0")]
			public <>c__DisplayClass33_0()
			{
			}

			[Token(Token = "0x600168F")]
			[Address(RVA = "0xF83ED0", Offset = "0xF83ED0", VA = "0xF83ED0")]
			internal bool <GetAllLanguages>b__0(string x)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x200042B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17928", Offset = "0xB17928")]
		private sealed class <>c
		{
			[Token(Token = "0x40016B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40016B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static _GetParam <>9__41_0;

			[Token(Token = "0x6001691")]
			[Address(RVA = "0xF83E60", Offset = "0xF83E60", VA = "0xF83E60")]
			public <>c()
			{
			}

			[Token(Token = "0x6001692")]
			[Address(RVA = "0xF83E68", Offset = "0xF83E68", VA = "0xF83E68")]
			internal object <ApplyLocalizationParams>b__41_0(string p)
			{
				return null;
			}
		}

		[Token(Token = "0x200042C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17938", Offset = "0xB17938")]
		private sealed class <>c__DisplayClass42_0
		{
			[Token(Token = "0x40016BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject root;

			[Token(Token = "0x6001693")]
			[Address(RVA = "0xF80218", Offset = "0xF80218", VA = "0xF80218")]
			public <>c__DisplayClass42_0()
			{
			}

			[Token(Token = "0x6001694")]
			[Address(RVA = "0xF83F44", Offset = "0xF83F44", VA = "0xF83F44")]
			internal object <ApplyLocalizationParams>b__0(string p)
			{
				return null;
			}
		}

		[Token(Token = "0x200042D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17948", Offset = "0xB17948")]
		private sealed class <Delayed_Import_Google>d__61 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40016BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x40016BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public LanguageSourceData source;

			[Token(Token = "0x40016BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool justCheck;

			[Token(Token = "0x170001E5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001698")]
				[Address(RVA = "0xF841F4", Offset = "0xF841F4", VA = "0xF841F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001E6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600169A")]
				[Address(RVA = "0xF8425C", Offset = "0xF8425C", VA = "0xF8425C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001695")]
			[Address(RVA = "0xF81D9C", Offset = "0xF81D9C", VA = "0xF81D9C")]
			[DebuggerHidden]
			public <Delayed_Import_Google>d__61(int <>1__state)
			{
			}

			[Token(Token = "0x6001696")]
			[Address(RVA = "0xF84138", Offset = "0xF84138", VA = "0xF84138", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001697")]
			[Address(RVA = "0xF8413C", Offset = "0xF8413C", VA = "0xF8413C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001699")]
			[Address(RVA = "0xF841FC", Offset = "0xF841FC", VA = "0xF841FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200042E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17958", Offset = "0xB17958")]
		private sealed class <>c__DisplayClass71_0
		{
			[Token(Token = "0x40016C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ILocalizeTargetDescriptor desc;

			[Token(Token = "0x600169B")]
			[Address(RVA = "0xF825CC", Offset = "0xF825CC", VA = "0xF825CC")]
			public <>c__DisplayClass71_0()
			{
			}

			[Token(Token = "0x600169C")]
			[Address(RVA = "0xF83FBC", Offset = "0xF83FBC", VA = "0xF83FBC")]
			internal bool <RegisterTarget>b__0(ILocalizeTargetDescriptor x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200042F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17968", Offset = "0xB17968")]
		private sealed class <Coroutine_LocalizeAll>d__86 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40016C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40016C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x170001E7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60016A0")]
				[Address(RVA = "0xF840C8", Offset = "0xF840C8", VA = "0xF840C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001E8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60016A2")]
				[Address(RVA = "0xF84130", Offset = "0xF84130", VA = "0xF84130", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600169D")]
			[Address(RVA = "0xF82D28", Offset = "0xF82D28", VA = "0xF82D28")]
			[DebuggerHidden]
			public <Coroutine_LocalizeAll>d__86(int <>1__state)
			{
			}

			[Token(Token = "0x600169E")]
			[Address(RVA = "0xF83FE8", Offset = "0xF83FE8", VA = "0xF83FE8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600169F")]
			[Address(RVA = "0xF83FEC", Offset = "0xF83FEC", VA = "0xF83FEC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60016A1")]
			[Address(RVA = "0xF840D0", Offset = "0xF840D0", VA = "0xF840D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string mCurrentLanguage;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string mLanguageCode;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static CultureInfo mCurrentCulture;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static bool mChangeCultureInfo;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public static bool IsRight2Left;

		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public static bool HasJoinedWords;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static List<ILocalizationParamsManager> ParamManagers;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static string[] LanguagesRTL;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static List<LanguageSourceData> Sources;

		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static string[] GlobalSources;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static Func<LanguageSourceData, bool> Callback_AllowSyncFromGoogle;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static string mCurrentDeviceLanguage;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static List<ILocalizeTargetDescriptor> mLocalizeTargets;

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private static bool mLocalizeIsScheduled;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private static bool mLocalizeIsScheduledWithForcedValue;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		public static bool HighlightLocalizedTargets;

		[Token(Token = "0x170001E3")]
		public static string CurrentLanguage
		{
			[Token(Token = "0x6001659")]
			[Address(RVA = "0xF7E388", Offset = "0xF7E388", VA = "0xF7E388")]
			get
			{
				return null;
			}
			[Token(Token = "0x600165A")]
			[Address(RVA = "0xF7E3F4", Offset = "0xF7E3F4", VA = "0xF7E3F4")]
			set
			{
			}
		}

		[Token(Token = "0x170001E4")]
		public static string CurrentLanguageCode
		{
			[Token(Token = "0x600165B")]
			[Address(RVA = "0xF7ED50", Offset = "0xF7ED50", VA = "0xF7ED50")]
			get
			{
				return null;
			}
			[Token(Token = "0x600165C")]
			[Address(RVA = "0xF7EDBC", Offset = "0xF7EDBC", VA = "0xF7EDBC")]
			set
			{
			}
		}

		[Token(Token = "0x14000012")]
		public static event OnLocalizeCallback OnLocalizeEvent
		{
			[Token(Token = "0x600167C")]
			[Address(RVA = "0xF825D4", Offset = "0xF825D4", VA = "0xF825D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1D178", Offset = "0xB1D178")]
			add
			{
			}
			[Token(Token = "0x600167D")]
			[Address(RVA = "0xF826C4", Offset = "0xF826C4", VA = "0xF826C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1D188", Offset = "0xB1D188")]
			remove
			{
			}
		}

		[Token(Token = "0x6001656")]
		[Address(RVA = "0xF7DA40", Offset = "0xF7DA40", VA = "0xF7DA40")]
		public static void InitializeIfNeeded()
		{
		}

		[Token(Token = "0x6001657")]
		[Address(RVA = "0xF7E1B8", Offset = "0xF7E1B8", VA = "0xF7E1B8")]
		public static int GetRequiredWebServiceVersion()
		{
			return default(int);
		}

		[Token(Token = "0x6001658")]
		[Address(RVA = "0xF7E1C0", Offset = "0xF7E1C0", VA = "0xF7E1C0")]
		public static string GetWebServiceURL([Optional] LanguageSourceData source)
		{
			return null;
		}

		[Token(Token = "0x600165D")]
		[Address(RVA = "0xF7EB54", Offset = "0xF7EB54", VA = "0xF7EB54")]
		public static void SetLanguageAndCode(string LanguageName, string LanguageCode, bool RememberLanguage = true, bool Force = false)
		{
		}

		[Token(Token = "0x600165E")]
		[Address(RVA = "0xF7F158", Offset = "0xF7F158", VA = "0xF7F158")]
		private static CultureInfo CreateCultureForCode(string code)
		{
			return null;
		}

		[Token(Token = "0x600165F")]
		[Address(RVA = "0xF7F474", Offset = "0xF7F474", VA = "0xF7F474")]
		public static void EnableChangingCultureInfo(bool bEnable)
		{
		}

		[Token(Token = "0x6001660")]
		[Address(RVA = "0xF7F25C", Offset = "0xF7F25C", VA = "0xF7F25C")]
		private static void SetCurrentCultureInfo()
		{
		}

		[Token(Token = "0x6001661")]
		[Address(RVA = "0xF7DD28", Offset = "0xF7DD28", VA = "0xF7DD28")]
		private static void SelectStartupLanguage()
		{
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0xF7F6A4", Offset = "0xF7F6A4", VA = "0xF7F6A4")]
		public static bool HasLanguage(string Language, bool AllowDiscartingRegion = true, bool Initialize = true, bool SkipDisabled = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0xF7E4E4", Offset = "0xF7E4E4", VA = "0xF7E4E4")]
		public static string GetSupportedLanguage(string Language, bool ignoreDisabled = false)
		{
			return null;
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0xF7E96C", Offset = "0xF7E96C", VA = "0xF7E96C")]
		public static string GetLanguageCode(string Language)
		{
			return null;
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0xF7EEB0", Offset = "0xF7EEB0", VA = "0xF7EEB0")]
		public static string GetLanguageFromCode(string Code, bool exactMatch = true)
		{
			return null;
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0xF7F8B8", Offset = "0xF7F8B8", VA = "0xF7F8B8")]
		public static List<string> GetAllLanguages(bool SkipDisabled = true)
		{
			return null;
		}

		[Token(Token = "0x6001667")]
		[Address(RVA = "0xF7FAE8", Offset = "0xF7FAE8", VA = "0xF7FAE8")]
		private static void LoadCurrentLanguage()
		{
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0xF7DB18", Offset = "0xF7DB18", VA = "0xF7DB18")]
		public static void AutoLoadGlobalParamManagers()
		{
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0xF7FC3C", Offset = "0xF7FC3C", VA = "0xF7FC3C")]
		public static void ApplyLocalizationParams(ref string translation, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0xF80148", Offset = "0xF80148", VA = "0xF80148")]
		public static void ApplyLocalizationParams(ref string translation, GameObject root, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x600166B")]
		[Address(RVA = "0xF7FD54", Offset = "0xF7FD54", VA = "0xF7FD54")]
		public static void ApplyLocalizationParams(ref string translation, _GetParam getParam, bool allowLocalizedParameters = true)
		{
		}

		[Token(Token = "0x600166C")]
		[Address(RVA = "0xF80864", Offset = "0xF80864", VA = "0xF80864")]
		internal static string GetLocalizationParam(string ParamName, GameObject root)
		{
			return null;
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0xF80B10", Offset = "0xF80B10", VA = "0xF80B10")]
		public static string ApplyRTLfix(string line)
		{
			return null;
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0xF80B7C", Offset = "0xF80B7C", VA = "0xF80B7C")]
		public static string ApplyRTLfix(string line, int maxCharacters, bool ignoreNumbers)
		{
			return null;
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0xF7F2E4", Offset = "0xF7F2E4", VA = "0xF7F2E4")]
		public static bool IsRTL(string Code)
		{
			return default(bool);
		}

		[Token(Token = "0x6001670")]
		[Address(RVA = "0xF7DCA0", Offset = "0xF7DCA0", VA = "0xF7DCA0")]
		public static bool UpdateSources()
		{
			return default(bool);
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0xF811FC", Offset = "0xF811FC", VA = "0xF811FC")]
		private static void UnregisterDeletededSources()
		{
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0xF814E8", Offset = "0xF814E8", VA = "0xF814E8")]
		private static void RegisterSceneSources()
		{
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0xF81338", Offset = "0xF81338", VA = "0xF81338")]
		private static void RegisterSourceInResources()
		{
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0xF81C4C", Offset = "0xF81C4C", VA = "0xF81C4C")]
		private static bool AllowSyncFromGoogle(LanguageSourceData Source)
		{
			return default(bool);
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0xF816EC", Offset = "0xF816EC", VA = "0xF816EC")]
		internal static void AddSource(LanguageSourceData Source)
		{
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0xF81D08", Offset = "0xF81D08", VA = "0xF81D08")]
		private static IEnumerator Delayed_Import_Google(LanguageSourceData source, float delay, bool justCheck)
		{
			return null;
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0xF81668", Offset = "0xF81668", VA = "0xF81668")]
		internal static void RemoveSource(LanguageSourceData Source)
		{
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0xF81DC8", Offset = "0xF81DC8", VA = "0xF81DC8")]
		public static UnityEngine.Object FindAsset(string value)
		{
			return null;
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0xF7F5D8", Offset = "0xF7F5D8", VA = "0xF7F5D8")]
		public static string GetCurrentDeviceLanguage(bool force = false)
		{
			return null;
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0xF81F0C", Offset = "0xF81F0C", VA = "0xF81F0C")]
		private static void DetectDeviceLanguage()
		{
		}

		[Token(Token = "0x600167B")]
		[Address(RVA = "0xF823A8", Offset = "0xF823A8", VA = "0xF823A8")]
		public static void RegisterTarget(ILocalizeTargetDescriptor desc)
		{
		}

		[Token(Token = "0x600167E")]
		[Address(RVA = "0xF827B4", Offset = "0xF827B4", VA = "0xF827B4")]
		public static string GetTranslation(string Term, bool FixForRTL = true, int maxLineLengthForRTL = 0, bool ignoreRTLnumbers = true, bool applyParameters = false, [Optional] GameObject localParametersRoot, [Optional] string overrideLanguage, bool allowLocalizedParameters = true)
		{
			return null;
		}

		[Token(Token = "0x600167F")]
		[Address(RVA = "0xF82A98", Offset = "0xF82A98", VA = "0xF82A98")]
		public static string GetTermTranslation(string Term, bool FixForRTL = true, int maxLineLengthForRTL = 0, bool ignoreRTLnumbers = true, bool applyParameters = false, [Optional] GameObject localParametersRoot, [Optional] string overrideLanguage, bool allowLocalizedParameters = true)
		{
			return null;
		}

		[Token(Token = "0x6001680")]
		[Address(RVA = "0xF82888", Offset = "0xF82888", VA = "0xF82888")]
		public static bool TryGetTranslation(string Term, out string Translation, bool FixForRTL = true, int maxLineLengthForRTL = 0, bool ignoreRTLnumbers = true, bool applyParameters = false, [Optional] GameObject localParametersRoot, [Optional] string overrideLanguage, bool allowLocalizedParameters = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001681")]
		[Address(RVA = "0xF7F36C", Offset = "0xF7F36C", VA = "0xF7F36C")]
		public static void LocalizeAll(bool Force = false)
		{
		}

		[Token(Token = "0x6001682")]
		[Address(RVA = "0xF82CC8", Offset = "0xF82CC8", VA = "0xF82CC8")]
		private static IEnumerator Coroutine_LocalizeAll()
		{
			return null;
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0xF82B54", Offset = "0xF82B54", VA = "0xF82B54")]
		private static void DoLocalizeAll(bool Force = false)
		{
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0xF805E0", Offset = "0xF805E0", VA = "0xF805E0")]
		public static TermData GetTermData(string term, out LanguageSourceData source)
		{
			return null;
		}
	}
	[Token(Token = "0x2000430")]
	public abstract class ILocalizeTarget : ScriptableObject
	{
		[Token(Token = "0x60016A3")]
		public abstract bool IsValid(Localize cmp);

		[Token(Token = "0x60016A4")]
		public abstract void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm);

		[Token(Token = "0x60016A5")]
		public abstract void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation);

		[Token(Token = "0x60016A6")]
		public abstract bool CanUseSecondaryTerm();

		[Token(Token = "0x60016A7")]
		public abstract bool AllowMainTermToBeRTL();

		[Token(Token = "0x60016A8")]
		public abstract bool AllowSecondTermToBeRTL();

		[Token(Token = "0x60016A9")]
		public abstract eTermType GetPrimaryTermType(Localize cmp);

		[Token(Token = "0x60016AA")]
		public abstract eTermType GetSecondaryTermType(Localize cmp);

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0xF56D84", Offset = "0xF56D84", VA = "0xF56D84")]
		protected ILocalizeTarget()
		{
		}
	}
	[Token(Token = "0x2000431")]
	public abstract class LocalizeTarget<T> : ILocalizeTarget where T : UnityEngine.Object
	{
		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T mTarget;

		[Token(Token = "0x60016AC")]
		public override bool IsValid(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x60016AD")]
		protected LocalizeTarget()
		{
		}
	}
	[Token(Token = "0x2000432")]
	public abstract class ILocalizeTargetDescriptor
	{
		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Priority;

		[Token(Token = "0x60016AE")]
		public abstract bool CanLocalize(Localize cmp);

		[Token(Token = "0x60016AF")]
		public abstract ILocalizeTarget CreateTarget(Localize cmp);

		[Token(Token = "0x60016B0")]
		public abstract Type GetTargetType();

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0xF56D8C", Offset = "0xF56D8C", VA = "0xF56D8C")]
		protected ILocalizeTargetDescriptor()
		{
		}
	}
	[Token(Token = "0x2000433")]
	public abstract class LocalizeTargetDesc<T> : ILocalizeTargetDescriptor where T : ILocalizeTarget
	{
		[Token(Token = "0x60016B2")]
		public override ILocalizeTarget CreateTarget(Localize cmp)
		{
			return null;
		}

		[Token(Token = "0x60016B3")]
		public override Type GetTargetType()
		{
			return null;
		}

		[Token(Token = "0x60016B4")]
		protected LocalizeTargetDesc()
		{
		}
	}
	[Token(Token = "0x2000434")]
	public class LocalizeTargetDesc_Type<T, G> : LocalizeTargetDesc<G> where T : UnityEngine.Object where G : LocalizeTarget<T>
	{
		[Token(Token = "0x60016B5")]
		public override bool CanLocalize(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x60016B6")]
		public override ILocalizeTarget CreateTarget(Localize cmp)
		{
			return null;
		}

		[Token(Token = "0x60016B7")]
		public LocalizeTargetDesc_Type()
		{
		}
	}
	[Token(Token = "0x2000435")]
	public class LocalizeTarget_TextMeshPro_Label : LocalizeTarget<TextMeshPro>
	{
		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextAlignmentOptions mAlignment_RTL;

		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TextAlignmentOptions mAlignment_LTR;

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool mAlignmentWasRTL;

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool mInitializeAlignment;

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0xF866B8", Offset = "0xF866B8", VA = "0xF866B8")]
		static LocalizeTarget_TextMeshPro_Label()
		{
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0xF866BC", Offset = "0xF866BC", VA = "0xF866BC")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xB1D238", Offset = "0xB1D238")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0xF86760", Offset = "0xF86760", VA = "0xF86760", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0xF86768", Offset = "0xF86768", VA = "0xF86768", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0xF86770", Offset = "0xF86770", VA = "0xF86770", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x60016BD")]
		[Address(RVA = "0xF86778", Offset = "0xF86778", VA = "0xF86778", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0xF86780", Offset = "0xF86780", VA = "0xF86780", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0xF86788", Offset = "0xF86788", VA = "0xF86788", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0xF868A8", Offset = "0xF868A8", VA = "0xF868A8", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0xF86EEC", Offset = "0xF86EEC", VA = "0xF86EEC")]
		internal static TMP_FontAsset GetTMPFontFromMaterial(Localize cmp, string matName)
		{
			return null;
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0xF8717C", Offset = "0xF8717C", VA = "0xF8717C")]
		internal static void InitAlignment_TMPro(bool isRTL, TextAlignmentOptions alignment, out TextAlignmentOptions alignLTR, out TextAlignmentOptions alignRTL)
		{
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0xF86DE4", Offset = "0xF86DE4", VA = "0xF86DE4")]
		internal static void SetFont(TMP_Text label, TMP_FontAsset newFont)
		{
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0xF87054", Offset = "0xF87054", VA = "0xF87054")]
		internal static void SetMaterial(TMP_Text label, Material newMat)
		{
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0xF87390", Offset = "0xF87390", VA = "0xF87390")]
		public LocalizeTarget_TextMeshPro_Label()
		{
		}
	}
	[Token(Token = "0x2000436")]
	public class LocalizeTarget_TextMeshPro_UGUI : LocalizeTarget<TextMeshProUGUI>
	{
		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextAlignmentOptions mAlignment_RTL;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public TextAlignmentOptions mAlignment_LTR;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool mAlignmentWasRTL;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool mInitializeAlignment;

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0xF873F4", Offset = "0xF873F4", VA = "0xF873F4")]
		static LocalizeTarget_TextMeshPro_UGUI()
		{
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0xF873F8", Offset = "0xF873F8", VA = "0xF873F8")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xB1D24C", Offset = "0xB1D24C")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0xF8749C", Offset = "0xF8749C", VA = "0xF8749C", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60016C9")]
		[Address(RVA = "0xF874A4", Offset = "0xF874A4", VA = "0xF874A4", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0xF874AC", Offset = "0xF874AC", VA = "0xF874AC", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0xF874B4", Offset = "0xF874B4", VA = "0xF874B4", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0xF874BC", Offset = "0xF874BC", VA = "0xF874BC", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0xF874C4", Offset = "0xF874C4", VA = "0xF874C4", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x60016CE")]
		[Address(RVA = "0xF875E4", Offset = "0xF875E4", VA = "0xF875E4", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0xF87B20", Offset = "0xF87B20", VA = "0xF87B20")]
		public LocalizeTarget_TextMeshPro_UGUI()
		{
		}
	}
	[Token(Token = "0x2000437")]
	public class LocalizeTarget_UnityStandard_AudioSource : LocalizeTarget<AudioSource>
	{
		[Token(Token = "0x60016D0")]
		[Address(RVA = "0xF87B84", Offset = "0xF87B84", VA = "0xF87B84")]
		static LocalizeTarget_UnityStandard_AudioSource()
		{
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0xF87B88", Offset = "0xF87B88", VA = "0xF87B88")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xB1D260", Offset = "0xB1D260")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0xF87C2C", Offset = "0xF87C2C", VA = "0xF87C2C", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0xF87C34", Offset = "0xF87C34", VA = "0xF87C34", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0xF87C3C", Offset = "0xF87C3C", VA = "0xF87C3C", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0xF87C44", Offset = "0xF87C44", VA = "0xF87C44", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0xF87C4C", Offset = "0xF87C4C", VA = "0xF87C4C", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0xF87C54", Offset = "0xF87C54", VA = "0xF87C54", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0xF87D2C", Offset = "0xF87D2C", VA = "0xF87D2C", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0xF87EA8", Offset = "0xF87EA8", VA = "0xF87EA8")]
		public LocalizeTarget_UnityStandard_AudioSource()
		{
		}
	}
	[Token(Token = "0x2000438")]
	public class LocalizeTargetDesc_Child : LocalizeTargetDesc<LocalizeTarget_UnityStandard_Child>
	{
		[Token(Token = "0x60016DA")]
		[Address(RVA = "0xF865D8", Offset = "0xF865D8", VA = "0xF865D8", Slot = "4")]
		public override bool CanLocalize(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0xF86610", Offset = "0xF86610", VA = "0xF86610")]
		public LocalizeTargetDesc_Child()
		{
		}
	}
	[Token(Token = "0x2000439")]
	public class LocalizeTarget_UnityStandard_Child : LocalizeTarget<GameObject>
	{
		[Token(Token = "0x60016DC")]
		[Address(RVA = "0xF87EF8", Offset = "0xF87EF8", VA = "0xF87EF8")]
		static LocalizeTarget_UnityStandard_Child()
		{
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0xF87EFC", Offset = "0xF87EFC", VA = "0xF87EFC")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xB1D274", Offset = "0xB1D274")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0xF87F94", Offset = "0xF87F94", VA = "0xF87F94", Slot = "4")]
		public override bool IsValid(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0xF87FCC", Offset = "0xF87FCC", VA = "0xF87FCC", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0xF87FD4", Offset = "0xF87FD4", VA = "0xF87FD4", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0xF87FDC", Offset = "0xF87FDC", VA = "0xF87FDC", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0xF87FE4", Offset = "0xF87FE4", VA = "0xF87FE4", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0xF87FEC", Offset = "0xF87FEC", VA = "0xF87FEC", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0xF87FF4", Offset = "0xF87FF4", VA = "0xF87FF4", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0xF88030", Offset = "0xF88030", VA = "0xF88030", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0xF88188", Offset = "0xF88188", VA = "0xF88188")]
		public LocalizeTarget_UnityStandard_Child()
		{
		}
	}
	[Token(Token = "0x200043A")]
	public class LocalizeTarget_UnityStandard_MeshRenderer : LocalizeTarget<MeshRenderer>
	{
		[Token(Token = "0x60016E7")]
		[Address(RVA = "0xF881D8", Offset = "0xF881D8", VA = "0xF881D8")]
		static LocalizeTarget_UnityStandard_MeshRenderer()
		{
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0xF881DC", Offset = "0xF881DC", VA = "0xF881DC")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xB1D288", Offset = "0xB1D288")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0xF88280", Offset = "0xF88280", VA = "0xF88280", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0xF88288", Offset = "0xF88288", VA = "0xF88288", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0xF88290", Offset = "0xF88290", VA = "0xF88290", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0xF88298", Offset = "0xF88298", VA = "0xF88298", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0xF882A0", Offset = "0xF882A0", VA = "0xF882A0", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0xF882A8", Offset = "0xF882A8", VA = "0xF882A8", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0xF884A8", Offset = "0xF884A8", VA = "0xF884A8", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0xF88680", Offset = "0xF88680", VA = "0xF88680")]
		public LocalizeTarget_UnityStandard_MeshRenderer()
		{
		}
	}
	[Token(Token = "0x200043B")]
	public class LocalizeTargetDesc_Prefab : LocalizeTargetDesc<LocalizeTarget_UnityStandard_Prefab>
	{
		[Token(Token = "0x60016F1")]
		[Address(RVA = "0xF86660", Offset = "0xF86660", VA = "0xF86660", Slot = "4")]
		public override bool CanLocalize(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0xF86668", Offset = "0xF86668", VA = "0xF86668")]
		public LocalizeTargetDesc_Prefab()
		{
		}
	}
	[Token(Token = "0x200043C")]
	public class LocalizeTarget_UnityStandard_Prefab : LocalizeTarget<GameObject>
	{
		[Token(Token = "0x60016F3")]
		[Address(RVA = "0xF886D0", Offset = "0xF886D0", VA = "0xF886D0")]
		static LocalizeTarget_UnityStandard_Prefab()
		{
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0xF886D4", Offset = "0xF886D4", VA = "0xF886D4")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xB1D29C", Offset = "0xB1D29C")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0xF8876C", Offset = "0xF8876C", VA = "0xF8876C", Slot = "4")]
		public override bool IsValid(Localize cmp)
		{
			return default(bool);
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0xF88774", Offset = "0xF88774", VA = "0xF88774", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0xF8877C", Offset = "0xF8877C", VA = "0xF8877C", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0xF88784", Offset = "0xF88784", VA = "0xF88784", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x60016F9")]
		[Address(RVA = "0xF8878C", Offset = "0xF8878C", VA = "0xF8878C", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0xF88794", Offset = "0xF88794", VA = "0xF88794", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0xF8879C", Offset = "0xF8879C", VA = "0xF8879C", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0xF887D8", Offset = "0xF887D8", VA = "0xF887D8", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0xF88A00", Offset = "0xF88A00", VA = "0xF88A00")]
		private Transform InstantiateNewPrefab(Localize cmp, string mainTranslation)
		{
			return null;
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0xF88BAC", Offset = "0xF88BAC", VA = "0xF88BAC")]
		public LocalizeTarget_UnityStandard_Prefab()
		{
		}
	}
	[Token(Token = "0x200043D")]
	public class LocalizeTarget_UnityStandard_SpriteRenderer : LocalizeTarget<SpriteRenderer>
	{
		[Token(Token = "0x60016FF")]
		[Address(RVA = "0xF88BFC", Offset = "0xF88BFC", VA = "0xF88BFC")]
		static LocalizeTarget_UnityStandard_SpriteRenderer()
		{
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0xF88C00", Offset = "0xF88C00", VA = "0xF88C00")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xB1D2B0", Offset = "0xB1D2B0")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0xF88CA4", Offset = "0xF88CA4", VA = "0xF88CA4", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0xF88CAC", Offset = "0xF88CAC", VA = "0xF88CAC", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0xF88CB4", Offset = "0xF88CB4", VA = "0xF88CB4", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0xF88CBC", Offset = "0xF88CBC", VA = "0xF88CBC", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0xF88CC4", Offset = "0xF88CC4", VA = "0xF88CC4", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001706")]
		[Address(RVA = "0xF88CCC", Offset = "0xF88CCC", VA = "0xF88CCC", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001707")]
		[Address(RVA = "0xF88DA8", Offset = "0xF88DA8", VA = "0xF88DA8", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001708")]
		[Address(RVA = "0xF88EA8", Offset = "0xF88EA8", VA = "0xF88EA8")]
		public LocalizeTarget_UnityStandard_SpriteRenderer()
		{
		}
	}
	[Token(Token = "0x200043E")]
	public class LocalizeTarget_UnityStandard_TextMesh : LocalizeTarget<TextMesh>
	{
		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextAlignment mAlignment_RTL;

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TextAlignment mAlignment_LTR;

		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool mAlignmentWasRTL;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool mInitializeAlignment;

		[Token(Token = "0x6001709")]
		[Address(RVA = "0xF88EF8", Offset = "0xF88EF8", VA = "0xF88EF8")]
		static LocalizeTarget_UnityStandard_TextMesh()
		{
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0xF88EFC", Offset = "0xF88EFC", VA = "0xF88EFC")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xB1D2C4", Offset = "0xB1D2C4")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0xF88FA0", Offset = "0xF88FA0", VA = "0xF88FA0", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0xF88FA8", Offset = "0xF88FA8", VA = "0xF88FA8", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0xF88FB0", Offset = "0xF88FB0", VA = "0xF88FB0", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0xF88FB8", Offset = "0xF88FB8", VA = "0xF88FB8", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0xF88FC0", Offset = "0xF88FC0", VA = "0xF88FC0", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0xF88FC8", Offset = "0xF88FC8", VA = "0xF88FC8", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0xF890FC", Offset = "0xF890FC", VA = "0xF890FC", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0xF893B8", Offset = "0xF893B8", VA = "0xF893B8")]
		public LocalizeTarget_UnityStandard_TextMesh()
		{
		}
	}
	[Token(Token = "0x200043F")]
	public class LocalizeTarget_UnityStandard_VideoPlayer : LocalizeTarget<VideoPlayer>
	{
		[Token(Token = "0x6001713")]
		[Address(RVA = "0xF89418", Offset = "0xF89418", VA = "0xF89418")]
		static LocalizeTarget_UnityStandard_VideoPlayer()
		{
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0xF8941C", Offset = "0xF8941C", VA = "0xF8941C")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xB1D2D8", Offset = "0xB1D2D8")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0xF894C0", Offset = "0xF894C0", VA = "0xF894C0", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0xF894C8", Offset = "0xF894C8", VA = "0xF894C8", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0xF894D0", Offset = "0xF894D0", VA = "0xF894D0", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0xF894D8", Offset = "0xF894D8", VA = "0xF894D8", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0xF894E0", Offset = "0xF894E0", VA = "0xF894E0", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0xF894E8", Offset = "0xF894E8", VA = "0xF894E8", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0xF895C4", Offset = "0xF895C4", VA = "0xF895C4", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0xF896C4", Offset = "0xF896C4", VA = "0xF896C4")]
		public LocalizeTarget_UnityStandard_VideoPlayer()
		{
		}
	}
	[Token(Token = "0x2000440")]
	public class LocalizeTarget_UnityUI_Image : LocalizeTarget<Image>
	{
		[Token(Token = "0x600171D")]
		[Address(RVA = "0xF89714", Offset = "0xF89714", VA = "0xF89714")]
		static LocalizeTarget_UnityUI_Image()
		{
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0xF89718", Offset = "0xF89718", VA = "0xF89718")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xB1D2EC", Offset = "0xB1D2EC")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0xF897BC", Offset = "0xF897BC", VA = "0xF897BC", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0xF897C4", Offset = "0xF897C4", VA = "0xF897C4", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0xF897CC", Offset = "0xF897CC", VA = "0xF897CC", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0xF897D4", Offset = "0xF897D4", VA = "0xF897D4", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0xF89864", Offset = "0xF89864", VA = "0xF89864", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0xF8986C", Offset = "0xF8986C", VA = "0xF8986C", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0xF899F0", Offset = "0xF899F0", VA = "0xF899F0", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0xF89AE4", Offset = "0xF89AE4", VA = "0xF89AE4")]
		public LocalizeTarget_UnityUI_Image()
		{
		}
	}
	[Token(Token = "0x2000441")]
	public class LocalizeTarget_UnityUI_RawImage : LocalizeTarget<RawImage>
	{
		[Token(Token = "0x6001727")]
		[Address(RVA = "0xF89B34", Offset = "0xF89B34", VA = "0xF89B34")]
		static LocalizeTarget_UnityUI_RawImage()
		{
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0xF89B38", Offset = "0xF89B38", VA = "0xF89B38")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xB1D300", Offset = "0xB1D300")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0xF89BDC", Offset = "0xF89BDC", VA = "0xF89BDC", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0xF89BE4", Offset = "0xF89BE4", VA = "0xF89BE4", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0xF89BEC", Offset = "0xF89BEC", VA = "0xF89BEC", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0xF89BF4", Offset = "0xF89BF4", VA = "0xF89BF4", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0xF89BFC", Offset = "0xF89BFC", VA = "0xF89BFC", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0xF89C04", Offset = "0xF89C04", VA = "0xF89C04", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0xF89CE4", Offset = "0xF89CE4", VA = "0xF89CE4", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0xF89DD8", Offset = "0xF89DD8", VA = "0xF89DD8")]
		public LocalizeTarget_UnityUI_RawImage()
		{
		}
	}
	[Token(Token = "0x2000442")]
	public class LocalizeTarget_UnityUI_Text : LocalizeTarget<Text>
	{
		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextAnchor mAlignment_RTL;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private TextAnchor mAlignment_LTR;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool mAlignmentWasRTL;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool mInitializeAlignment;

		[Token(Token = "0x6001731")]
		[Address(RVA = "0xF89E28", Offset = "0xF89E28", VA = "0xF89E28")]
		static LocalizeTarget_UnityUI_Text()
		{
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0xF89E2C", Offset = "0xF89E2C", VA = "0xF89E2C")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xB1D314", Offset = "0xB1D314")]
		private static void AutoRegister()
		{
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0xF89ED0", Offset = "0xF89ED0", VA = "0xF89ED0", Slot = "10")]
		public override eTermType GetPrimaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0xF89ED8", Offset = "0xF89ED8", VA = "0xF89ED8", Slot = "11")]
		public override eTermType GetSecondaryTermType(Localize cmp)
		{
			return default(eTermType);
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0xF89EE0", Offset = "0xF89EE0", VA = "0xF89EE0", Slot = "7")]
		public override bool CanUseSecondaryTerm()
		{
			return default(bool);
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0xF89EE8", Offset = "0xF89EE8", VA = "0xF89EE8", Slot = "8")]
		public override bool AllowMainTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001737")]
		[Address(RVA = "0xF89EF0", Offset = "0xF89EF0", VA = "0xF89EF0", Slot = "9")]
		public override bool AllowSecondTermToBeRTL()
		{
			return default(bool);
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0xF89EF8", Offset = "0xF89EF8", VA = "0xF89EF8", Slot = "5")]
		public override void GetFinalTerms(Localize cmp, string Main, string Secondary, out string primaryTerm, out string secondaryTerm)
		{
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0xF8A028", Offset = "0xF8A028", VA = "0xF8A028", Slot = "6")]
		public override void DoLocalize(Localize cmp, string mainTranslation, string secondaryTranslation)
		{
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0xF8A30C", Offset = "0xF8A30C", VA = "0xF8A30C")]
		private void InitAlignment(bool isRTL, TextAnchor alignment, out TextAnchor alignLTR, out TextAnchor alignRTL)
		{
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0xF8A3CC", Offset = "0xF8A3CC", VA = "0xF8A3CC")]
		public LocalizeTarget_UnityUI_Text()
		{
		}
	}
	[Token(Token = "0x2000443")]
	public enum eTermType
	{
		[Token(Token = "0x40016D7")]
		Text,
		[Token(Token = "0x40016D8")]
		Font,
		[Token(Token = "0x40016D9")]
		Texture,
		[Token(Token = "0x40016DA")]
		AudioClip,
		[Token(Token = "0x40016DB")]
		GameObject,
		[Token(Token = "0x40016DC")]
		Sprite,
		[Token(Token = "0x40016DD")]
		Material,
		[Token(Token = "0x40016DE")]
		Child,
		[Token(Token = "0x40016DF")]
		Mesh,
		[Token(Token = "0x40016E0")]
		TextMeshPFont,
		[Token(Token = "0x40016E1")]
		Object,
		[Token(Token = "0x40016E2")]
		Video
	}
	[Serializable]
	[Token(Token = "0x2000444")]
	public class TermData
	{
		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Term;

		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public eTermType TermType;

		[NonSerialized]
		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Description;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] Languages;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public byte[] Flags;

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string[] Languages_Touch;

		[Token(Token = "0x600173C")]
		[Address(RVA = "0xF80754", Offset = "0xF80754", VA = "0xF80754")]
		public string GetTranslation(int idx, [Optional] string specialization, bool editMode = false)
		{
			return null;
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0xF8F680", Offset = "0xF8F680", VA = "0xF8F680")]
		public void SetTranslation(int idx, string translation, [Optional] string specialization)
		{
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0xF8F770", Offset = "0xF8F770", VA = "0xF8F770")]
		public void Validate()
		{
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0xF8F980", Offset = "0xF8F980", VA = "0xF8F980")]
		public bool IsTerm(string name, bool allowCategoryMistmatch)
		{
			return default(bool);
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0xF8FA18", Offset = "0xF8FA18", VA = "0xF8FA18")]
		public TermData()
		{
		}
	}
	[Token(Token = "0x2000445")]
	public class AutoChangeCultureInfo : MonoBehaviour
	{
		[Token(Token = "0x6001741")]
		[Address(RVA = "0xF4B1C4", Offset = "0xF4B1C4", VA = "0xF4B1C4")]
		public void Start()
		{
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0xF4B228", Offset = "0xF4B228", VA = "0xF4B228")]
		public AutoChangeCultureInfo()
		{
		}
	}
	[Token(Token = "0x2000446")]
	public class CoroutineManager : MonoBehaviour
	{
		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CoroutineManager mInstance;

		[Token(Token = "0x170001E9")]
		private static CoroutineManager pInstance
		{
			[Token(Token = "0x6001743")]
			[Address(RVA = "0xF4B820", Offset = "0xF4B820", VA = "0xF4B820")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0xF4B948", Offset = "0xF4B948", VA = "0xF4B948")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0xF4B9DC", Offset = "0xF4B9DC", VA = "0xF4B9DC")]
		public static Coroutine Start(IEnumerator coroutine)
		{
			return null;
		}

		[Token(Token = "0x6001746")]
		[Address(RVA = "0xF4BA0C", Offset = "0xF4BA0C", VA = "0xF4BA0C")]
		public CoroutineManager()
		{
		}
	}
	[Token(Token = "0x2000447")]
	public class CustomLocalizeCallback : MonoBehaviour
	{
		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent _OnLocalize;

		[Token(Token = "0x6001747")]
		[Address(RVA = "0xF4BA14", Offset = "0xF4BA14", VA = "0xF4BA14")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0xF4BAD8", Offset = "0xF4BAD8", VA = "0xF4BAD8")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0xF4BB6C", Offset = "0xF4BB6C", VA = "0xF4BB6C")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0xF4BB88", Offset = "0xF4BB88", VA = "0xF4BB88")]
		public CustomLocalizeCallback()
		{
		}
	}
	[Token(Token = "0x2000448")]
	public class HindiFixer
	{
		[Serializable]
		[Token(Token = "0x2000449")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17978", Offset = "0xB17978")]
		private sealed class <>c
		{
			[Token(Token = "0x40016EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40016EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<char, bool> <>9__0_0;

			[Token(Token = "0x600174D")]
			[Address(RVA = "0xF55400", Offset = "0xF55400", VA = "0xF55400")]
			public <>c()
			{
			}

			[Token(Token = "0x600174E")]
			[Address(RVA = "0xF55408", Offset = "0xF55408", VA = "0xF55408")]
			internal bool <Fix>b__0_0(char x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0xF54F4C", Offset = "0xF54F4C", VA = "0xF54F4C")]
		internal static string Fix(string text)
		{
			return null;
		}
	}
	[Token(Token = "0x200044A")]
	public static class I2Utils
	{
		[Serializable]
		[Token(Token = "0x200044B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17998", Offset = "0xB17998")]
		private sealed class <>c
		{
			[Token(Token = "0x40016ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40016EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<char, bool> <>9__6_0;

			[Token(Token = "0x6001759")]
			[Address(RVA = "0xF56D70", Offset = "0xF56D70", VA = "0xF56D70")]
			public <>c()
			{
			}

			[Token(Token = "0x600175A")]
			[Address(RVA = "0xF56D78", Offset = "0xF56D78", VA = "0xF56D78")]
			internal bool <SplitLine>b__6_0(char c)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0xF56510", Offset = "0xF56510", VA = "0xF56510")]
		public static string ReverseText(string source)
		{
			return null;
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0xF565E8", Offset = "0xF565E8", VA = "0xF565E8")]
		public static string RemoveNonASCII(string text, bool allowCategory = false)
		{
			return null;
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0xF56818", Offset = "0xF56818", VA = "0xF56818")]
		public static string GetValidTermName(string text, bool allowCategory = false)
		{
			return null;
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0xF568C4", Offset = "0xF568C4", VA = "0xF568C4")]
		public static string SplitLine(string line, int maxCharacters)
		{
			return null;
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0xF56B64", Offset = "0xF56B64", VA = "0xF56B64")]
		public static bool FindNextTag(string line, int iStart, out int tagStart, out int tagEnd)
		{
			return default(bool);
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0xF56844", Offset = "0xF56844", VA = "0xF56844")]
		public static string RemoveTags(string text)
		{
			return null;
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0xF56CEC", Offset = "0xF56CEC", VA = "0xF56CEC")]
		public static bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0xF53F04", Offset = "0xF53F04", VA = "0xF53F04")]
		public static string GetCaptureMatch(Match match)
		{
			return null;
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0xF56CF4", Offset = "0xF56CF4", VA = "0xF56CF4")]
		public static void SendWebRequest(UnityWebRequest www)
		{
		}
	}
	[Token(Token = "0x200044C")]
	public interface ILocalizationParamsManager
	{
		[Token(Token = "0x600175B")]
		string GetParameterValue(string Param);
	}
	[Token(Token = "0x200044D")]
	public class LocalizationParamsManager : MonoBehaviour, ILocalizationParamsManager
	{
		[Serializable]
		[Token(Token = "0x200044E")]
		public struct ParamValue
		{
			[Token(Token = "0x40016F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string Name;

			[Token(Token = "0x40016F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string Value;
		}

		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		public List<ParamValue> _Params;

		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool _IsGlobalManager;

		[Token(Token = "0x600175C")]
		[Address(RVA = "0xF842DC", Offset = "0xF842DC", VA = "0xF842DC", Slot = "4")]
		public string GetParameterValue(string ParamName)
		{
			return null;
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0xF843C8", Offset = "0xF843C8", VA = "0xF843C8")]
		public void SetParameterValue(string ParamName, string ParamValue, bool localize = true)
		{
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0xF84528", Offset = "0xF84528", VA = "0xF84528")]
		public void OnLocalize()
		{
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0xF845D4", Offset = "0xF845D4", VA = "0xF845D4", Slot = "5")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0xF845E4", Offset = "0xF845E4", VA = "0xF845E4")]
		public void DoAutoRegister()
		{
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0xF846BC", Offset = "0xF846BC", VA = "0xF846BC")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0xF84740", Offset = "0xF84740", VA = "0xF84740")]
		public LocalizationParamsManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200044F")]
	public struct LocalizedString
	{
		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string mTerm;

		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool mRTL_IgnoreArabicFix;

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int mRTL_MaxLineLength;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool mRTL_ConvertNumbers;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool m_DontLocalizeParameters;

		[Token(Token = "0x6001763")]
		[Address(RVA = "0xF8A42C", Offset = "0xF8A42C", VA = "0xF8A42C")]
		public static implicit operator string(LocalizedString s)
		{
			return null;
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0xF8A500", Offset = "0xF8A500", VA = "0xF8A500")]
		public static implicit operator LocalizedString(string term)
		{
			return default(LocalizedString);
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0xBCF128", Offset = "0xBCF128", VA = "0xBCF128", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000450")]
	public class RTLFixer
	{
		[Token(Token = "0x6001766")]
		[Address(RVA = "0xF80F68", Offset = "0xF80F68", VA = "0xF80F68")]
		public static string Fix(string str, bool showTashkeel, bool useHinduNumbers)
		{
			return null;
		}
	}
	[Token(Token = "0x2000451")]
	internal class ArabicMapping
	{
		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int from;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int to;

		[Token(Token = "0x6001767")]
		[Address(RVA = "0xF4A524", Offset = "0xF4A524", VA = "0xF4A524")]
		public ArabicMapping(int from, int to)
		{
		}
	}
	[Token(Token = "0x2000452")]
	internal class ArabicTable
	{
		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<ArabicMapping> mapList;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static ArabicTable arabicMapper;

		[Token(Token = "0x170001EA")]
		internal static ArabicTable ArabicMapper
		{
			[Token(Token = "0x6001769")]
			[Address(RVA = "0xF4B040", Offset = "0xF4B040", VA = "0xF4B040")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0xF4A55C", Offset = "0xF4A55C", VA = "0xF4A55C")]
		private ArabicTable()
		{
		}

		[Token(Token = "0x600176A")]
		[Address(RVA = "0xF4B0B8", Offset = "0xF4B0B8", VA = "0xF4B0B8")]
		internal int Convert(int toBeConverted)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000453")]
	internal class TashkeelLocation
	{
		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public char tashkeel;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int position;

		[Token(Token = "0x600176B")]
		[Address(RVA = "0xF8BD40", Offset = "0xF8BD40", VA = "0xF8BD40")]
		public TashkeelLocation(char tashkeel, int position)
		{
		}
	}
	[Token(Token = "0x2000454")]
	internal class RTLFixerTool
	{
		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static bool showTashkeel;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		internal static bool useHinduNumbers;

		[Token(Token = "0x600176C")]
		[Address(RVA = "0xF8B7A4", Offset = "0xF8B7A4", VA = "0xF8B7A4")]
		internal static string RemoveTashkeel(string str, out List<TashkeelLocation> tashkeelLocation)
		{
			return null;
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0xF8BD7C", Offset = "0xF8BD7C", VA = "0xF8BD7C")]
		internal static char[] ReturnTashkeel(char[] letters, List<TashkeelLocation> tashkeelLocation)
		{
			return null;
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0xF8AA98", Offset = "0xF8AA98", VA = "0xF8AA98")]
		internal static string FixLine(string str)
		{
			return null;
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0xF8BF7C", Offset = "0xF8BF7C", VA = "0xF8BF7C")]
		internal static bool IsIgnoredCharacter(char ch)
		{
			return default(bool);
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0xF8C5DC", Offset = "0xF8C5DC", VA = "0xF8C5DC")]
		internal static bool IsLeadingLetter(char[] letters, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0xF8C478", Offset = "0xF8C478", VA = "0xF8C478")]
		internal static bool IsFinishingLetter(char[] letters, int index)
		{
			return default(bool);
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0xF8C0F8", Offset = "0xF8C0F8", VA = "0xF8C0F8")]
		internal static bool IsMiddleLetter(char[] letters, int index)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000455")]
	public class RegisterCallback_AllowSyncFromGoogle : MonoBehaviour
	{
		[Token(Token = "0x6001774")]
		[Address(RVA = "0xF8D7B8", Offset = "0xF8D7B8", VA = "0xF8D7B8")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0xF8D85C", Offset = "0xF8D85C", VA = "0xF8D85C")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0xF8D900", Offset = "0xF8D900", VA = "0xF8D900")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0xF8D968", Offset = "0xF8D968", VA = "0xF8D968", Slot = "4")]
		public virtual bool AllowSyncFromGoogle(LanguageSourceData Source)
		{
			return default(bool);
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0xF8D970", Offset = "0xF8D970", VA = "0xF8D970")]
		public RegisterCallback_AllowSyncFromGoogle()
		{
		}
	}
	[Token(Token = "0x2000456")]
	public class RegisterGlobalParameters : MonoBehaviour, ILocalizationParamsManager
	{
		[Token(Token = "0x6001779")]
		[Address(RVA = "0xF8D978", Offset = "0xF8D978", VA = "0xF8D978", Slot = "5")]
		public virtual void OnEnable()
		{
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0xF8DA50", Offset = "0xF8DA50", VA = "0xF8DA50", Slot = "6")]
		public virtual void OnDisable()
		{
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0xF8DAD4", Offset = "0xF8DAD4", VA = "0xF8DAD4", Slot = "7")]
		public virtual string GetParameterValue(string ParamName)
		{
			return null;
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0xF8DADC", Offset = "0xF8DADC", VA = "0xF8DADC")]
		public RegisterGlobalParameters()
		{
		}
	}
	[Token(Token = "0x2000457")]
	public interface IResourceManager_Bundles
	{
		[Token(Token = "0x600177D")]
		UnityEngine.Object LoadFromBundle(string path, Type assetType);
	}
	[Token(Token = "0x2000458")]
	public class ResourceManager : MonoBehaviour
	{
		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ResourceManager mInstance;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<IResourceManager_Bundles> mBundleManagers;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEngine.Object[] Assets;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Dictionary<string, UnityEngine.Object> mResourcesCache;

		[Token(Token = "0x170001EB")]
		public static ResourceManager pInstance
		{
			[Token(Token = "0x600177E")]
			[Address(RVA = "0xF81914", Offset = "0xF81914", VA = "0xF81914")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0xF8DAE4", Offset = "0xF8DAE4", VA = "0xF8DAE4")]
		public static void MyOnLevelWasLoaded(Scene scene, LoadSceneMode mode)
		{
		}

		[Token(Token = "0x6001780")]
		public T GetAsset<T>(string Name) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0xF8DBBC", Offset = "0xF8DBBC", VA = "0xF8DBBC")]
		private UnityEngine.Object FindAsset(string Name)
		{
			return null;
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0xF8569C", Offset = "0xF8569C", VA = "0xF8569C")]
		public bool HasAsset(UnityEngine.Object Obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001783")]
		public T LoadFromResources<T>(string Path) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001784")]
		public T LoadFromBundle<T>(string path) where T : UnityEngine.Object
		{
			return null;
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0xF8DB50", Offset = "0xF8DB50", VA = "0xF8DB50")]
		public void CleanResourceCache()
		{
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0xF8DCFC", Offset = "0xF8DCFC", VA = "0xF8DCFC")]
		public ResourceManager()
		{
		}
	}
	[Token(Token = "0x2000459")]
	public class SetLanguage : MonoBehaviour
	{
		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string _Language;

		[Token(Token = "0x6001787")]
		[Address(RVA = "0xF8E4C8", Offset = "0xF8E4C8", VA = "0xF8E4C8")]
		private void OnClick()
		{
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0xF8E4CC", Offset = "0xF8E4CC", VA = "0xF8E4CC")]
		public void ApplyLanguage()
		{
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0xF8E580", Offset = "0xF8E580", VA = "0xF8E580")]
		public SetLanguage()
		{
		}
	}
	[Token(Token = "0x200045A")]
	public class SetLanguageDropdown : MonoBehaviour
	{
		[Token(Token = "0x600178A")]
		[Address(RVA = "0xF8E588", Offset = "0xF8E588", VA = "0xF8E588")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0xF8E7A8", Offset = "0xF8E7A8", VA = "0xF8E7A8")]
		private void OnValueChanged(int index)
		{
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0xF8E894", Offset = "0xF8E894", VA = "0xF8E894")]
		public SetLanguageDropdown()
		{
		}
	}
	[Token(Token = "0x200045B")]
	public class StringObfucator
	{
		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static char[] StringObfuscatorPassword;

		[Token(Token = "0x600178D")]
		[Address(RVA = "0xF8F150", Offset = "0xF8F150", VA = "0xF8F150")]
		public static string Encode(string NormalString)
		{
			return null;
		}

		[Token(Token = "0x600178E")]
		[Address(RVA = "0xF8F490", Offset = "0xF8F490", VA = "0xF8F490")]
		public static string Decode(string ObfucatedString)
		{
			return null;
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0xF8F3FC", Offset = "0xF8F3FC", VA = "0xF8F3FC")]
		private static string ToBase64(string regularString)
		{
			return null;
		}

		[Token(Token = "0x6001790")]
		[Address(RVA = "0xF8F578", Offset = "0xF8F578", VA = "0xF8F578")]
		private static string FromBase64(string base64string)
		{
			return null;
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0xF8F238", Offset = "0xF8F238", VA = "0xF8F238")]
		private static string XoREncode(string NormalString)
		{
			return null;
		}
	}
	[Token(Token = "0x200045C")]
	public static class ScriptLocalization
	{
		[Token(Token = "0x200045D")]
		public static class log
		{
			[Token(Token = "0x170001EE")]
			public static string Disconnected
			{
				[Token(Token = "0x6001795")]
				[Address(RVA = "0xF8DF28", Offset = "0xF8DF28", VA = "0xF8DF28")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001EF")]
			public static string RestartingConnection
			{
				[Token(Token = "0x6001796")]
				[Address(RVA = "0xF8DFB8", Offset = "0xF8DFB8", VA = "0xF8DFB8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F0")]
			public static string cantFindRoom
			{
				[Token(Token = "0x6001797")]
				[Address(RVA = "0xF8E048", Offset = "0xF8E048", VA = "0xF8E048")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F1")]
			public static string connectedToLobby
			{
				[Token(Token = "0x6001798")]
				[Address(RVA = "0xF8E0D8", Offset = "0xF8E0D8", VA = "0xF8E0D8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F2")]
			public static string connectingLobby
			{
				[Token(Token = "0x6001799")]
				[Address(RVA = "0xF8E168", Offset = "0xF8E168", VA = "0xF8E168")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F3")]
			public static string joinedRoom
			{
				[Token(Token = "0x600179A")]
				[Address(RVA = "0xF8E1F8", Offset = "0xF8E1F8", VA = "0xF8E1F8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F4")]
			public static string connecting
			{
				[Token(Token = "0x600179B")]
				[Address(RVA = "0xF8E288", Offset = "0xF8E288", VA = "0xF8E288")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F5")]
			public static string validating
			{
				[Token(Token = "0x600179C")]
				[Address(RVA = "0xF8E318", Offset = "0xF8E318", VA = "0xF8E318")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F6")]
			public static string notconnected
			{
				[Token(Token = "0x600179D")]
				[Address(RVA = "0xF8E3A8", Offset = "0xF8E3A8", VA = "0xF8E3A8")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F7")]
			public static string JoiningRoom
			{
				[Token(Token = "0x600179E")]
				[Address(RVA = "0xF8E438", Offset = "0xF8E438", VA = "0xF8E438")]
				get
				{
					return null;
				}
			}
		}

		[Token(Token = "0x170001EC")]
		public static string ui_load
		{
			[Token(Token = "0x6001793")]
			[Address(RVA = "0xF8DE08", Offset = "0xF8DE08", VA = "0xF8DE08")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001ED")]
		public static string ui_newGame
		{
			[Token(Token = "0x6001794")]
			[Address(RVA = "0xF8DE98", Offset = "0xF8DE98", VA = "0xF8DE98")]
			get
			{
				return null;
			}
		}
	}
}
namespace GoogleSheetsForUnity
{
	[Token(Token = "0x200045E")]
	[DisallowMultipleComponent]
	public class ConsoleExample : MonoBehaviour
	{
		[Token(Token = "0x200045F")]
		public struct LogMsg
		{
			[Token(Token = "0x400170C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string logString;

			[Token(Token = "0x400170D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string stackTrace;

			[Token(Token = "0x400170E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string logType;

			[Token(Token = "0x400170F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string logNumber;

			[Token(Token = "0x4001710")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string sessionId;
		}

		[Token(Token = "0x2000460")]
		public enum TABLE_HEADERS
		{
			[Token(Token = "0x4001712")]
			logNumber,
			[Token(Token = "0x4001713")]
			logType,
			[Token(Token = "0x4001714")]
			logString,
			[Token(Token = "0x4001715")]
			stackTrace,
			[Token(Token = "0x4001716")]
			sessionId
		}

		[Token(Token = "0x2000461")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB179B8", Offset = "0xB179B8")]
		private sealed class <ProcessQueue>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001717")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001718")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001719")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ConsoleExample <>4__this;

			[Token(Token = "0x170001F8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017AB")]
				[Address(RVA = "0xEC4074", Offset = "0xEC4074", VA = "0xEC4074", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001F9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017AD")]
				[Address(RVA = "0xEC40DC", Offset = "0xEC40DC", VA = "0xEC40DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017A8")]
			[Address(RVA = "0xEC3D6C", Offset = "0xEC3D6C", VA = "0xEC3D6C")]
			[DebuggerHidden]
			public <ProcessQueue>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x60017A9")]
			[Address(RVA = "0xEC3DA0", Offset = "0xEC3DA0", VA = "0xEC3DA0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017AA")]
			[Address(RVA = "0xEC3DA4", Offset = "0xEC3DA4", VA = "0xEC3DA4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017AC")]
			[Address(RVA = "0xEC407C", Offset = "0xEC407C", VA = "0xEC407C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001706")]
		public const string TABLE_NAME = "ConsoleLog";

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<LogMsg> _logMsgQueue;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _processing;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _interval;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _logCounter;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string sessionUuid;

		[Token(Token = "0x600179F")]
		[Address(RVA = "0xEC306C", Offset = "0xEC306C", VA = "0xEC306C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0xEC310C", Offset = "0xEC310C", VA = "0xEC310C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0xEC31B0", Offset = "0xEC31B0", VA = "0xEC31B0")]
		private void Start()
		{
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0xEC32B4", Offset = "0xEC32B4", VA = "0xEC32B4")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0xEC3654", Offset = "0xEC3654", VA = "0xEC3654")]
		public void CreateConsoleLogTable()
		{
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0xEC3738", Offset = "0xEC3738", VA = "0xEC3738")]
		public void TestConsoleMessages()
		{
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0xEC3BE0", Offset = "0xEC3BE0", VA = "0xEC3BE0")]
		private void AddToQueue(string logString, string stackTrace, LogType logType)
		{
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0xEC3CFC", Offset = "0xEC3CFC", VA = "0xEC3CFC")]
		private IEnumerator ProcessQueue()
		{
			return null;
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0xEC3D98", Offset = "0xEC3D98", VA = "0xEC3D98")]
		public ConsoleExample()
		{
		}
	}
	[Token(Token = "0x2000462")]
	public class FilesExample : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000463")]
		public struct PlayerInfo
		{
			[Token(Token = "0x400171F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;

			[Token(Token = "0x4001720")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int level;

			[Token(Token = "0x4001721")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float health;

			[Token(Token = "0x4001722")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string role;
		}

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string _filePath;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string _cloudFileID;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string _binaryFileName;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _textFileName;

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PlayerInfo _playerData;

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0xEC7078", Offset = "0xEC7078", VA = "0xEC7078")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0xEC715C", Offset = "0xEC715C", VA = "0xEC715C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0xEC7240", Offset = "0xEC7240", VA = "0xEC7240")]
		private void Start()
		{
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0xEC72DC", Offset = "0xEC72DC", VA = "0xEC72DC")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0xEC8744", Offset = "0xEC8744", VA = "0xEC8744")]
		private void SaveLocalTextFile(string filePath)
		{
		}

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0xEC891C", Offset = "0xEC891C", VA = "0xEC891C")]
		private void LoadLocalTextFile(string filePath)
		{
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0xEC8630", Offset = "0xEC8630", VA = "0xEC8630")]
		private void SaveLocalBinaryFile(string filePath)
		{
		}

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0xEC8818", Offset = "0xEC8818", VA = "0xEC8818")]
		private void LoadLocalBinaryFile(string filePath)
		{
		}

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0xEC8EBC", Offset = "0xEC8EBC", VA = "0xEC8EBC")]
		private void HandleDriveResponse(Drive.DataContainer dataContainer)
		{
		}

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0xEC89D0", Offset = "0xEC89D0", VA = "0xEC89D0")]
		private void UploadBinaryFile()
		{
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0xEC8AF4", Offset = "0xEC8AF4", VA = "0xEC8AF4")]
		private void UploadTextFile()
		{
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0xEC8BAC", Offset = "0xEC8BAC", VA = "0xEC8BAC")]
		private void OutputData(string source)
		{
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0xEC9288", Offset = "0xEC9288", VA = "0xEC9288")]
		public FilesExample()
		{
		}
	}
	[Token(Token = "0x2000464")]
	public class ImagesExample : MonoBehaviour
	{
		[Token(Token = "0x2000465")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB179C8", Offset = "0xB179C8")]
		private sealed class <TakeScreenshotManually>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001727")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001728")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001729")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ImagesExample <>4__this;

			[Token(Token = "0x170001FA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60017C6")]
				[Address(RVA = "0xECA368", Offset = "0xECA368", VA = "0xECA368", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170001FB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60017C8")]
				[Address(RVA = "0xECA3D0", Offset = "0xECA3D0", VA = "0xECA3D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60017C3")]
			[Address(RVA = "0xEC9F3C", Offset = "0xEC9F3C", VA = "0xEC9F3C")]
			[DebuggerHidden]
			public <TakeScreenshotManually>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x60017C4")]
			[Address(RVA = "0xECA210", Offset = "0xECA210", VA = "0xECA210", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60017C5")]
			[Address(RVA = "0xECA214", Offset = "0xECA214", VA = "0xECA214", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60017C7")]
			[Address(RVA = "0xECA370", Offset = "0xECA370", VA = "0xECA370", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Rect _texturePos;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Texture2D _text2d;

		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _cloudFileID;

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string _imagePath;

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0xEC92F0", Offset = "0xEC92F0", VA = "0xEC92F0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0xEC93D4", Offset = "0xEC93D4", VA = "0xEC93D4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0xEC94B8", Offset = "0xEC94B8", VA = "0xEC94B8")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0xEC9EA4", Offset = "0xEC9EA4", VA = "0xEC9EA4")]
		private void TakeScreenshot()
		{
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0xEC9ECC", Offset = "0xEC9ECC", VA = "0xEC9ECC")]
		private IEnumerator TakeScreenshotManually()
		{
			return null;
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0xEC9DF0", Offset = "0xEC9DF0", VA = "0xEC9DF0")]
		private void LoadPNGFromFile(string filePath)
		{
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0xEC9F68", Offset = "0xEC9F68", VA = "0xEC9F68")]
		private void HandleDriveResponse(Drive.DataContainer dataContainer)
		{
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0xECA168", Offset = "0xECA168", VA = "0xECA168")]
		public ImagesExample()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000466")]
	public class Localization
	{
		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string key;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string english;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string spanish;

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0xECA3D8", Offset = "0xECA3D8", VA = "0xECA3D8")]
		public Localization()
		{
		}
	}
	[Token(Token = "0x2000467")]
	public enum Languages
	{
		[Token(Token = "0x400172E")]
		english,
		[Token(Token = "0x400172F")]
		spanish
	}
	[Token(Token = "0x2000468")]
	public class LocalizationDataSO : ScriptableObject
	{
		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string missingTranslation;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string missingKey;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string localizationTableName;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<Localization> localizationData;

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0xECA3E0", Offset = "0xECA3E0", VA = "0xECA3E0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xB1D3C8", Offset = "0xB1D3C8")]
		private void RetrieveCloudData()
		{
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0xECA4CC", Offset = "0xECA4CC", VA = "0xECA4CC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xB1D400", Offset = "0xB1D400")]
		private void CreateTable()
		{
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0xECA68C", Offset = "0xECA68C", VA = "0xECA68C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xB1D438", Offset = "0xB1D438")]
		private void AddAllKeysToTable()
		{
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0xECA7A8", Offset = "0xECA7A8", VA = "0xECA7A8")]
		private void HandleDriveResponse(Drive.DataContainer dataContainer)
		{
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0xECA984", Offset = "0xECA984", VA = "0xECA984")]
		public LocalizationDataSO()
		{
		}
	}
	[Token(Token = "0x2000469")]
	public class LocalizationManager : MonoBehaviour
	{
		[Token(Token = "0x200046A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB179D8", Offset = "0xB179D8")]
		private sealed class <>c__DisplayClass11_0
		{
			[Token(Token = "0x4001738")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string key;

			[Token(Token = "0x60017D6")]
			[Address(RVA = "0xECAE30", Offset = "0xECAE30", VA = "0xECAE30")]
			public <>c__DisplayClass11_0()
			{
			}

			[Token(Token = "0x60017D7")]
			[Address(RVA = "0xECAE40", Offset = "0xECAE40", VA = "0xECAE40")]
			internal bool <GetLocalizedValue>b__0(Localization loc)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LocalizationDataSO localizationDataSO;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Languages _currentLanguage;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static UnityAction OnLanguageSet;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static LocalizationManager _instance;

		[Token(Token = "0x170001FC")]
		public Languages CurrentLanguage
		{
			[Token(Token = "0x60017CF")]
			[Address(RVA = "0xECA9FC", Offset = "0xECA9FC", VA = "0xECA9FC")]
			get
			{
				return default(Languages);
			}
		}

		[Token(Token = "0x170001FD")]
		public static LocalizationManager Instance
		{
			[Token(Token = "0x60017D0")]
			[Address(RVA = "0xECAA04", Offset = "0xECAA04", VA = "0xECAA04")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0xECAAEC", Offset = "0xECAAEC", VA = "0xECAAEC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0xECABF8", Offset = "0xECABF8", VA = "0xECABF8")]
		public void SetCurrentLanguage(Languages language)
		{
		}

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0xECAC74", Offset = "0xECAC74", VA = "0xECAC74")]
		public void SetCurrentLanguage(string languageCode)
		{
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0xECAD1C", Offset = "0xECAD1C", VA = "0xECAD1C")]
		public string GetLocalizedValue(string key)
		{
			return null;
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0xECAE38", Offset = "0xECAE38", VA = "0xECAE38")]
		public LocalizationManager()
		{
		}
	}
	[Token(Token = "0x200046B")]
	public class LocalizedText : MonoBehaviour
	{
		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string key;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Localization localization;

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0xECAE64", Offset = "0xECAE64", VA = "0xECAE64")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0xECAF28", Offset = "0xECAF28", VA = "0xECAF28")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0xECAFEC", Offset = "0xECAFEC", VA = "0xECAFEC")]
		private void Start()
		{
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0xECAFF0", Offset = "0xECAFF0", VA = "0xECAFF0")]
		private void LocalizeText()
		{
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0xECB074", Offset = "0xECB074", VA = "0xECB074")]
		public LocalizedText()
		{
		}
	}
	[Token(Token = "0x200046C")]
	public class LoginSessionExample : MonoBehaviour
	{
		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D clock;

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string credentialsTableName;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string _usernameText;

		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _passwdText;

		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string _mailText;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string _lastLogon;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string _signupDate;

		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _showRegistrationForm;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool _isLoggedIn;

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		private bool _waitingForServerResponse;

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0xECB07C", Offset = "0xECB07C", VA = "0xECB07C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0xECB1CC", Offset = "0xECB1CC", VA = "0xECB1CC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0xECB31C", Offset = "0xECB31C", VA = "0xECB31C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0xECC5C0", Offset = "0xECC5C0", VA = "0xECC5C0")]
		private void HandleDriveResponse(Drive.DataContainer dataContainer)
		{
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0xECC880", Offset = "0xECC880", VA = "0xECC880")]
		private void HandleErrorResponse(string errorMsg)
		{
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0xECC888", Offset = "0xECC888", VA = "0xECC888")]
		public LoginSessionExample()
		{
		}
	}
	[Token(Token = "0x200046D")]
	public class SpreadsheetsExample : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200046E")]
		public struct PlayerInfo
		{
			[Token(Token = "0x4001747")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;

			[Token(Token = "0x4001748")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int level;

			[Token(Token = "0x4001749")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float health;

			[Token(Token = "0x400174A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string role;
		}

		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private PlayerInfo _playerData;

		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _tableName;

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0xECC8F0", Offset = "0xECC8F0", VA = "0xECC8F0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0xECC9D4", Offset = "0xECC9D4", VA = "0xECC9D4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0xECCAB8", Offset = "0xECCAB8", VA = "0xECCAB8")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0xECD848", Offset = "0xECD848", VA = "0xECD848")]
		private void CreatePlayerTable()
		{
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0xECD9F8", Offset = "0xECD9F8", VA = "0xECD9F8")]
		private void SavePlayer()
		{
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0xECDAFC", Offset = "0xECDAFC", VA = "0xECDAFC")]
		private void UpdatePlayer(bool create)
		{
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0xECDC04", Offset = "0xECDC04", VA = "0xECDC04")]
		private void RetrievePlayer()
		{
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0xECDCB8", Offset = "0xECDCB8", VA = "0xECDCB8")]
		private void GetAllPlayers()
		{
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0xECDD58", Offset = "0xECDD58", VA = "0xECDD58")]
		private void GetAllTables()
		{
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0xECDDEC", Offset = "0xECDDEC", VA = "0xECDDEC")]
		public void HandleDriveResponse(Drive.DataContainer dataContainer)
		{
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0xECE724", Offset = "0xECE724", VA = "0xECE724")]
		public SpreadsheetsExample()
		{
		}
	}
	[Token(Token = "0x200046F")]
	public class ConnectionData : ScriptableObject
	{
		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string webServiceUrl;

		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string spreadsheetId;

		[Token(Token = "0x400174D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string servicePassword;

		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float timeOutLimit;

		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool usePOST;

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		public bool useSessionContext;

		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int sessionTime;

		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string sessionUser;

		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string sessionPassword;

		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string tableName;

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0xEC2FF8", Offset = "0xEC2FF8", VA = "0xEC2FF8")]
		public ConnectionData()
		{
		}
	}
	[Token(Token = "0x2000470")]
	public static class Drive
	{
		[Token(Token = "0x2000471")]
		public enum QueryType
		{
			[Token(Token = "0x400175D")]
			createObject,
			[Token(Token = "0x400175E")]
			createObjects,
			[Token(Token = "0x400175F")]
			createTable,
			[Token(Token = "0x4001760")]
			createBinaryFile,
			[Token(Token = "0x4001761")]
			createTextFile,
			[Token(Token = "0x4001762")]
			createImageFile,
			[Token(Token = "0x4001763")]
			createFolder,
			[Token(Token = "0x4001764")]
			getObjectsByField,
			[Token(Token = "0x4001765")]
			getCellValue,
			[Token(Token = "0x4001766")]
			getTable,
			[Token(Token = "0x4001767")]
			getAllTables,
			[Token(Token = "0x4001768")]
			getBinaryFile,
			[Token(Token = "0x4001769")]
			getTextFile,
			[Token(Token = "0x400176A")]
			getImageFile,
			[Token(Token = "0x400176B")]
			updateObjects,
			[Token(Token = "0x400176C")]
			setCellValue,
			[Token(Token = "0x400176D")]
			deleteObjects,
			[Token(Token = "0x400176E")]
			deleteFile,
			[Token(Token = "0x400176F")]
			deleteFolderByName,
			[Token(Token = "0x4001770")]
			deleteFolderById,
			[Token(Token = "0x4001771")]
			signup,
			[Token(Token = "0x4001772")]
			login,
			[Token(Token = "0x4001773")]
			logout
		}

		[Serializable]
		[Token(Token = "0x2000472")]
		public struct DataContainer
		{
			[Token(Token = "0x4001774")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string query;

			[Token(Token = "0x4001775")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string result;

			[Token(Token = "0x4001776")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string msg;

			[Token(Token = "0x4001777")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string payload;

			[Token(Token = "0x4001778")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string objType;

			[Token(Token = "0x4001779")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string column;

			[Token(Token = "0x400177A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string row;

			[Token(Token = "0x400177B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string fileId;

			[Token(Token = "0x400177C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string fileName;

			[Token(Token = "0x400177D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public string folderId;

			[Token(Token = "0x400177E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public string folderName;

			[Token(Token = "0x400177F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public string searchField;

			[Token(Token = "0x4001780")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public string searchValue;

			[Token(Token = "0x4001781")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public string value;

			[Token(Token = "0x17000200")]
			public QueryType QueryType
			{
				[Token(Token = "0x6001809")]
				[Address(RVA = "0xBCA624", Offset = "0xBCA624", VA = "0xBCA624")]
				get
				{
					return default(QueryType);
				}
			}
		}

		[Serializable]
		[Token(Token = "0x2000473")]
		public class SessionContextData
		{
			[Token(Token = "0x4001782")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string userName;

			[Token(Token = "0x4001783")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string userEmail;

			[Token(Token = "0x4001784")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string sessionToken;

			[Token(Token = "0x4001785")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string lastLogon;

			[Token(Token = "0x4001786")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string registrationDate;

			[Token(Token = "0x4001787")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public DateTime sessionStart;

			[Token(Token = "0x4001788")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string group;

			[Token(Token = "0x4001789")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public string rights;

			[Token(Token = "0x600180A")]
			[Address(RVA = "0xEC6D44", Offset = "0xEC6D44", VA = "0xEC6D44")]
			public SessionContextData()
			{
			}
		}

		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SessionContextData _sessionContext;

		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static ConnectionData _connectionData;

		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string _currentStatus;

		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static bool debugMode;

		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static DriveConnection m_driveConnectorRuntime;

		[Token(Token = "0x400175A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static UnityAction<DataContainer> responseCallback;

		[Token(Token = "0x400175B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static UnityAction<string> errorResponseCallback;

		[Token(Token = "0x170001FE")]
		public static SessionContextData SessionContext
		{
			[Token(Token = "0x60017EF")]
			[Address(RVA = "0xEC40E4", Offset = "0xEC40E4", VA = "0xEC40E4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FF")]
		public static DriveConnection driveConnectorRuntime
		{
			[Token(Token = "0x60017F0")]
			[Address(RVA = "0xEC414C", Offset = "0xEC414C", VA = "0xEC414C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017F1")]
		[Address(RVA = "0xEC3F20", Offset = "0xEC3F20", VA = "0xEC3F20")]
		public static void CreateObject(string jsonObject, string objTypeName, bool runtime = true)
		{
		}

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0xEC4868", Offset = "0xEC4868", VA = "0xEC4868")]
		public static void CreateObjects(string jsonObjects, string objTypeName, bool runtime = true)
		{
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0xEC39E8", Offset = "0xEC39E8", VA = "0xEC39E8")]
		public static void CreateTable(string[] headers, string tableTypeName, bool runtime = true)
		{
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0xEC49C0", Offset = "0xEC49C0", VA = "0xEC49C0")]
		public static void GetObjectsByField(string objTypeName, string searchFieldName, string searchValue, bool runtime = true)
		{
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0xEC4B30", Offset = "0xEC4B30", VA = "0xEC4B30")]
		public static void GetTable(string tableTypeName, bool runtime = true)
		{
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0xEC4C60", Offset = "0xEC4C60", VA = "0xEC4C60")]
		public static void GetAllTables(bool runtime = true)
		{
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0xEC4D70", Offset = "0xEC4D70", VA = "0xEC4D70")]
		public static void UpdateObjects(string objTypeName, string searchFieldName, string searchValue, string jsonObject, bool create, bool runtime = true)
		{
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0xEC4F40", Offset = "0xEC4F40", VA = "0xEC4F40")]
		public static void GetBinaryFile(string id, bool runtime = true)
		{
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0xEC5070", Offset = "0xEC5070", VA = "0xEC5070")]
		public static void GetTextFile(string id, bool runtime = true)
		{
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0xEC51A0", Offset = "0xEC51A0", VA = "0xEC51A0")]
		public static void GetImageFile(string id, bool runtime = true)
		{
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0xEC52D0", Offset = "0xEC52D0", VA = "0xEC52D0")]
		public static void CreateImageFile(Texture2D texture, string name, bool usePNG = true, int jpgQuality = 90, [Optional] string folderName, [Optional] string folderId, bool runtime = true)
		{
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0xEC55D0", Offset = "0xEC55D0", VA = "0xEC55D0")]
		public static void CreateBinaryFile(byte[] fileData, string fileName, [Optional] string folderName, [Optional] string folderId, bool runtime = true)
		{
		}

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0xEC57C8", Offset = "0xEC57C8", VA = "0xEC57C8")]
		public static void CreateTextFile(string fileData, string fileName, [Optional] string folderName, [Optional] string folderId, bool runtime = true)
		{
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0xEC5994", Offset = "0xEC5994", VA = "0xEC5994")]
		public static void CreateCredentialsTable(string tableName, bool runtime = true)
		{
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0xEC5BC0", Offset = "0xEC5BC0", VA = "0xEC5BC0")]
		public static void Signup(string userName, string email, string pass, string id, string tableName, bool runtime = true)
		{
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0xEC5DE0", Offset = "0xEC5DE0", VA = "0xEC5DE0")]
		public static void Login(string userName, string pass, string tableName, bool runtime = true)
		{
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0xEC5F58", Offset = "0xEC5F58", VA = "0xEC5F58")]
		public static void Logout(bool runtime = true)
		{
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0xEC6068", Offset = "0xEC6068", VA = "0xEC6068")]
		private static void SetConnectionData(bool runtime)
		{
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0xEC6494", Offset = "0xEC6494", VA = "0xEC6494")]
		private static Dictionary<string, string> CompleteForm(Dictionary<string, string> form)
		{
			return null;
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0xEC42B4", Offset = "0xEC42B4", VA = "0xEC42B4")]
		private static void CreateRequest(Dictionary<string, string> dataForm, bool runtime)
		{
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0xEC6774", Offset = "0xEC6774", VA = "0xEC6774")]
		public static void ProcessResponse(string response, float time)
		{
		}

		[Token(Token = "0x6001806")]
		[Address(RVA = "0xEC6AD0", Offset = "0xEC6AD0", VA = "0xEC6AD0")]
		public static void HandleError(string response, float time)
		{
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0xEC63B0", Offset = "0xEC63B0", VA = "0xEC63B0")]
		public static void UpdateStatus(params string[] statusDetails)
		{
		}
	}
	[Token(Token = "0x2000474")]
	public class JsonHelper
	{
		[Serializable]
		[Token(Token = "0x2000475")]
		private class Wrapper<T>
		{
			[Token(Token = "0x400178A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] array;

			[Token(Token = "0x600180D")]
			public Wrapper()
			{
			}
		}

		[Token(Token = "0x600180B")]
		public static T[] ArrayFromJson<T>(string json)
		{
			return null;
		}

		[Token(Token = "0x600180C")]
		public static string ToJson<T>(T[] array, bool prettyPrint = false)
		{
			return null;
		}
	}
	[Token(Token = "0x2000476")]
	public class DriveConnection : MonoBehaviour
	{
		[Token(Token = "0x2000477")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB179E8", Offset = "0xB179E8")]
		private sealed class <CoExecuteRequest>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400178C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400178D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400178E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public UnityWebRequest www;

			[Token(Token = "0x400178F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DriveConnection <>4__this;

			[Token(Token = "0x4001790")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <elapsedTime>5__2;

			[Token(Token = "0x17000201")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001814")]
				[Address(RVA = "0xEC7008", Offset = "0xEC7008", VA = "0xEC7008", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000202")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001816")]
				[Address(RVA = "0xEC7070", Offset = "0xEC7070", VA = "0xEC7070", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001811")]
			[Address(RVA = "0xEC6DC8", Offset = "0xEC6DC8", VA = "0xEC6DC8")]
			[DebuggerHidden]
			public <CoExecuteRequest>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6001812")]
			[Address(RVA = "0xEC6DFC", Offset = "0xEC6DFC", VA = "0xEC6DFC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001813")]
			[Address(RVA = "0xEC6E00", Offset = "0xEC6E00", VA = "0xEC6E00", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001815")]
			[Address(RVA = "0xEC7010", Offset = "0xEC7010", VA = "0xEC7010", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400178B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ConnectionData connectionData;

		[Token(Token = "0x600180E")]
		[Address(RVA = "0xEC6748", Offset = "0xEC6748", VA = "0xEC6748")]
		public void ExecuteRequest(UnityWebRequest www, Dictionary<string, string> postData)
		{
		}

		[Token(Token = "0x600180F")]
		[Address(RVA = "0xEC6D4C", Offset = "0xEC6D4C", VA = "0xEC6D4C")]
		private IEnumerator CoExecuteRequest(UnityWebRequest www, Dictionary<string, string> postData)
		{
			return null;
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0xEC6DF4", Offset = "0xEC6DF4", VA = "0xEC6DF4")]
		public DriveConnection()
		{
		}
	}
}
namespace flodlab.unitykeyboard
{
	[Token(Token = "0x2000478")]
	public class Key : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerDownHandler, IPointerExitHandler, IPointerUpHandler, IPointerClickHandler
	{
		[Token(Token = "0x4001791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly string c_tab;

		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly string c_enter;

		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly string c_shift;

		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static readonly string c_bksp;

		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly string c_alt;

		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly string c_accept;

		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static readonly string c_cancel;

		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static readonly string c_space;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static readonly string c_empty;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static readonly string c_caps;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Image background;

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI text;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Image icon;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Keyboard keyboard;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool isHeld;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private UpdateRate updateRate;

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string normalValue;

		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string shiftValue;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string altValue;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool shiftPressed;

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool altPressed;

		[Token(Token = "0x17000203")]
		public bool isTab
		{
			[Token(Token = "0x6001817")]
			[Address(RVA = "0xE234E0", Offset = "0xE234E0", VA = "0xE234E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000204")]
		public bool isEnter
		{
			[Token(Token = "0x6001818")]
			[Address(RVA = "0xE235A8", Offset = "0xE235A8", VA = "0xE235A8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000205")]
		public bool isShift
		{
			[Token(Token = "0x6001819")]
			[Address(RVA = "0xE23644", Offset = "0xE23644", VA = "0xE23644")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000206")]
		public bool isBackspace
		{
			[Token(Token = "0x600181A")]
			[Address(RVA = "0xE236E0", Offset = "0xE236E0", VA = "0xE236E0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000207")]
		public bool isAlt
		{
			[Token(Token = "0x600181B")]
			[Address(RVA = "0xE2377C", Offset = "0xE2377C", VA = "0xE2377C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000208")]
		public bool isAccept
		{
			[Token(Token = "0x600181C")]
			[Address(RVA = "0xE23818", Offset = "0xE23818", VA = "0xE23818")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000209")]
		public bool isCancel
		{
			[Token(Token = "0x600181D")]
			[Address(RVA = "0xE238B4", Offset = "0xE238B4", VA = "0xE238B4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700020A")]
		public bool isSpace
		{
			[Token(Token = "0x600181E")]
			[Address(RVA = "0xE23950", Offset = "0xE23950", VA = "0xE23950")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700020B")]
		public bool isEmpty
		{
			[Token(Token = "0x600181F")]
			[Address(RVA = "0xE239EC", Offset = "0xE239EC", VA = "0xE239EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700020C")]
		public bool isCaps
		{
			[Token(Token = "0x6001820")]
			[Address(RVA = "0xE23A88", Offset = "0xE23A88", VA = "0xE23A88")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700020D")]
		public bool isSpecialKey
		{
			[Token(Token = "0x6001821")]
			[Address(RVA = "0xE23B24", Offset = "0xE23B24", VA = "0xE23B24")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700020E")]
		public bool canBeToggled
		{
			[Token(Token = "0x6001822")]
			[Address(RVA = "0xE23BB0", Offset = "0xE23BB0", VA = "0xE23BB0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700020F")]
		public string currentValue
		{
			[Token(Token = "0x6001823")]
			[Address(RVA = "0xE2357C", Offset = "0xE2357C", VA = "0xE2357C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0xE23BE8", Offset = "0xE23BE8", VA = "0xE23BE8")]
		public KeyCode getKeyCode()
		{
			return default(KeyCode);
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0xE23CAC", Offset = "0xE23CAC", VA = "0xE23CAC")]
		internal void defaultValues()
		{
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0xE23D64", Offset = "0xE23D64", VA = "0xE23D64")]
		internal void init(string normalKey, string shiftKey, string altKey)
		{
		}

		[Token(Token = "0x6001827")]
		[Address(RVA = "0xE23D70", Offset = "0xE23D70", VA = "0xE23D70")]
		internal void setSprite(Sprite sprite)
		{
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0xE23E5C", Offset = "0xE23E5C", VA = "0xE23E5C")]
		public void setState(bool altPressed, bool shifPressed)
		{
		}

		[Token(Token = "0x6001829")]
		[Address(RVA = "0xE23F14", Offset = "0xE23F14", VA = "0xE23F14", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0xE23F1C", Offset = "0xE23F1C", VA = "0xE23F1C")]
		private void highlight(bool value)
		{
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0xE24090", Offset = "0xE24090", VA = "0xE24090", Slot = "6")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0xE240B8", Offset = "0xE240B8", VA = "0xE240B8")]
		private void Update()
		{
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0xE242E0", Offset = "0xE242E0", VA = "0xE242E0", Slot = "5")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0xE2432C", Offset = "0xE2432C", VA = "0xE2432C", Slot = "7")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600182F")]
		[Address(RVA = "0xE24334", Offset = "0xE24334", VA = "0xE24334", Slot = "8")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0xE24338", Offset = "0xE24338", VA = "0xE24338")]
		public void OnPointerClick()
		{
		}

		[Token(Token = "0x6001831")]
		[Address(RVA = "0xE2433C", Offset = "0xE2433C", VA = "0xE2433C")]
		public Key()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000479")]
	public class KeyboardLangMapping
	{
		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string lang;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyboardLayout layout;

		[Token(Token = "0x6001833")]
		[Address(RVA = "0xE25FCC", Offset = "0xE25FCC", VA = "0xE25FCC")]
		public KeyboardLangMapping()
		{
		}
	}
	[Token(Token = "0x200047A")]
	public class Keyboard : MonoBehaviour
	{
		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<KeyboardLangMapping> langMapping;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KeyboardLayout currentLayout;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public KeyboardLayout prevLayout;

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform vertical;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform hidden;

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public KeyboardRow horizontalPrefab;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Key normalKeyPrefab;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Key shiftKeyPrefab;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Key spaceKeyPrefab;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<Key> normalKeys;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<Key> shiftKeys;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<KeyboardRow> rows;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Key space;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<Sprite> spriteList;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool shiftPressed;

		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		public bool altPressed;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public Color normalColor;

		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Color hoverColor;

		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public Color clickColor;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private AudioSource audioSrc;

		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public AudioClip hoverEnterClip;

		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public AudioClip clickClip;

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public CustomInputField currentInputfield;

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Canvas canvas;

		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private WaitForEndOfFrame endofframe;

		[Token(Token = "0x40017C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool doBreak;

		[Token(Token = "0x40017C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private string[] specialKeys;

		[Token(Token = "0x6001834")]
		[Address(RVA = "0xE244D4", Offset = "0xE244D4", VA = "0xE244D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001835")]
		[Address(RVA = "0xE24558", Offset = "0xE24558", VA = "0xE24558")]
		public void LanguageSwitched()
		{
		}

		[Token(Token = "0x6001836")]
		[Address(RVA = "0xE24760", Offset = "0xE24760", VA = "0xE24760")]
		private void Update()
		{
		}

		[Token(Token = "0x6001837")]
		[Address(RVA = "0xE2472C", Offset = "0xE2472C", VA = "0xE2472C")]
		public void ApplyLayout(KeyboardLayout layout)
		{
		}

		[Token(Token = "0x6001838")]
		[Address(RVA = "0xE24A38", Offset = "0xE24A38", VA = "0xE24A38")]
		private void createLayout(KeyboardLayout layout)
		{
		}

		[Token(Token = "0x6001839")]
		[Address(RVA = "0xE252B0", Offset = "0xE252B0", VA = "0xE252B0")]
		private void checkUnknownSpecialkey(string value)
		{
		}

		[Token(Token = "0x600183A")]
		[Address(RVA = "0xE25184", Offset = "0xE25184", VA = "0xE25184")]
		private Sprite getSprite(string normalKey)
		{
			return null;
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0xE24108", Offset = "0xE24108", VA = "0xE24108")]
		public void Clicked(Key key)
		{
		}

		[Token(Token = "0x600183C")]
		[Address(RVA = "0xE253C8", Offset = "0xE253C8", VA = "0xE253C8")]
		private void PlayOneShot(AudioClip clip)
		{
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0xE254B8", Offset = "0xE254B8", VA = "0xE254B8")]
		private void toggleAlt()
		{
		}

		[Token(Token = "0x600183E")]
		[Address(RVA = "0xE2549C", Offset = "0xE2549C", VA = "0xE2549C")]
		private void toggleShift()
		{
		}

		[Token(Token = "0x600183F")]
		[Address(RVA = "0xE254D4", Offset = "0xE254D4", VA = "0xE254D4")]
		private void toggleKeys()
		{
		}

		[Token(Token = "0x6001840")]
		[Address(RVA = "0xE254DC", Offset = "0xE254DC", VA = "0xE254DC")]
		private void toggleKeys(List<Key> keys)
		{
		}

		[Token(Token = "0x6001841")]
		[Address(RVA = "0xE25080", Offset = "0xE25080", VA = "0xE25080")]
		private Key FindKey(string normalKey)
		{
			return null;
		}

		[Token(Token = "0x6001842")]
		[Address(RVA = "0xE24000", Offset = "0xE24000", VA = "0xE24000")]
		internal void highlight(Key key, bool value)
		{
		}

		[Token(Token = "0x6001843")]
		[Address(RVA = "0xE2589C", Offset = "0xE2589C", VA = "0xE2589C")]
		private Key getKey()
		{
			return null;
		}

		[Token(Token = "0x6001844")]
		[Address(RVA = "0xE24E98", Offset = "0xE24E98", VA = "0xE24E98")]
		private KeyboardRow getRow()
		{
			return null;
		}

		[Token(Token = "0x6001845")]
		[Address(RVA = "0xE256B0", Offset = "0xE256B0", VA = "0xE256B0")]
		private Key getShiftKey()
		{
			return null;
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0xE255E4", Offset = "0xE255E4", VA = "0xE255E4")]
		private Key getSpace()
		{
			return null;
		}

		[Token(Token = "0x6001847")]
		[Address(RVA = "0xE24970", Offset = "0xE24970", VA = "0xE24970")]
		private void recycleAll()
		{
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0xE25A88", Offset = "0xE25A88", VA = "0xE25A88")]
		private void recycle(List<Key> keys)
		{
		}

		[Token(Token = "0x6001849")]
		[Address(RVA = "0xE25BA8", Offset = "0xE25BA8", VA = "0xE25BA8")]
		private void recycle(List<KeyboardRow> rows)
		{
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0xE25CC8", Offset = "0xE25CC8", VA = "0xE25CC8")]
		public Keyboard()
		{
		}
	}
	[Token(Token = "0x200047B")]
	public class KeyboardLayout : ScriptableObject
	{
		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] lang;

		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] normal;

		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string[] shift;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string[] alt;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string[] altShift;

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string comment;

		[Token(Token = "0x600184B")]
		[Address(RVA = "0xE25FD4", Offset = "0xE25FD4", VA = "0xE25FD4")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0xE26060", Offset = "0xE26060", VA = "0xE26060")]
		private void checkLineStartsWith(string key, int index, string[] line)
		{
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0xE24D58", Offset = "0xE24D58", VA = "0xE24D58")]
		public bool checkSameSizes()
		{
			return default(bool);
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0xE2611C", Offset = "0xE2611C", VA = "0xE2611C")]
		private bool childsSameLength(string[] a, string[] b)
		{
			return default(bool);
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0xE26470", Offset = "0xE26470", VA = "0xE26470")]
		public KeyboardLayout()
		{
		}
	}
	[Token(Token = "0x200047C")]
	public class KeyboardRow : MonoBehaviour
	{
		[Token(Token = "0x6001850")]
		[Address(RVA = "0xE26478", Offset = "0xE26478", VA = "0xE26478")]
		public KeyboardRow()
		{
		}
	}
}
namespace FlodLab.EscapeThat.RuntimeEditor
{
	[Token(Token = "0x200047D")]
	public enum Axis : byte
	{
		[Token(Token = "0x40017CA")]
		X,
		[Token(Token = "0x40017CB")]
		Y,
		[Token(Token = "0x40017CC")]
		Z
	}
	[Token(Token = "0x200047E")]
	public static class AxisHelperColors
	{
		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Color pressed;

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Color pressedAlpha;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Color relaxed;

		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Color relaxedAlpha;
	}
	[Token(Token = "0x200047F")]
	public static class AxisHelper
	{
		[Token(Token = "0x6001852")]
		[Address(RVA = "0xEBE1B8", Offset = "0xEBE1B8", VA = "0xEBE1B8")]
		public static Vector3 AsVector(this Axis axis)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001853")]
		[Address(RVA = "0xEBE290", Offset = "0xEBE290", VA = "0xEBE290")]
		public static Vector3 OtherAxises(this Axis axis)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001854")]
		[Address(RVA = "0xEBE408", Offset = "0xEBE408", VA = "0xEBE408")]
		public static void getInfo(Transform visual, Transform relative, Axis axis, out float upDistance, out Bounds bounds)
		{
		}

		[Token(Token = "0x6001855")]
		[Address(RVA = "0xEBE714", Offset = "0xEBE714", VA = "0xEBE714")]
		private static Vector3 getOnAxis(Transform transform, Vector3 position, Axis axis)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001856")]
		[Address(RVA = "0xEBE800", Offset = "0xEBE800", VA = "0xEBE800")]
		public static Bounds GetBounds(Transform target)
		{
			return default(Bounds);
		}
	}
}
namespace Photon.Realtime.Demo
{
	[Token(Token = "0x2000480")]
	public class ConnectAndJoinRandomLb : MonoBehaviour, IConnectionCallbacks, IMatchmakingCallbacks, ILobbyCallbacks
	{
		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AppSettings appSettings;

		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LoadBalancingClient lbc;

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ConnectionHandler ch;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text StateUiText;

		[Token(Token = "0x6001857")]
		[Address(RVA = "0xDF207C", Offset = "0xDF207C", VA = "0xDF207C")]
		public void Start()
		{
		}

		[Token(Token = "0x6001858")]
		[Address(RVA = "0xDF21E0", Offset = "0xDF21E0", VA = "0xDF21E0")]
		public void Update()
		{
		}

		[Token(Token = "0x6001859")]
		[Address(RVA = "0xDF231C", Offset = "0xDF231C", VA = "0xDF231C", Slot = "4")]
		public void OnConnected()
		{
		}

		[Token(Token = "0x600185A")]
		[Address(RVA = "0xDF2320", Offset = "0xDF2320", VA = "0xDF2320", Slot = "5")]
		public void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x600185B")]
		[Address(RVA = "0xDF23A8", Offset = "0xDF23A8", VA = "0xDF23A8", Slot = "6")]
		public void OnDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x600185C")]
		[Address(RVA = "0xDF2464", Offset = "0xDF2464", VA = "0xDF2464", Slot = "8")]
		public void OnCustomAuthenticationResponse(Dictionary<string, object> data)
		{
		}

		[Token(Token = "0x600185D")]
		[Address(RVA = "0xDF2468", Offset = "0xDF2468", VA = "0xDF2468", Slot = "9")]
		public void OnCustomAuthenticationFailed(string debugMessage)
		{
		}

		[Token(Token = "0x600185E")]
		[Address(RVA = "0xDF246C", Offset = "0xDF246C", VA = "0xDF246C", Slot = "7")]
		public void OnRegionListReceived(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x600185F")]
		[Address(RVA = "0xDF2538", Offset = "0xDF2538", VA = "0xDF2538", Slot = "19")]
		public void OnRoomListUpdate(List<RoomInfo> roomList)
		{
		}

		[Token(Token = "0x6001860")]
		[Address(RVA = "0xDF253C", Offset = "0xDF253C", VA = "0xDF253C", Slot = "20")]
		public void OnLobbyStatisticsUpdate(List<TypedLobbyInfo> lobbyStatistics)
		{
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0xDF2540", Offset = "0xDF2540", VA = "0xDF2540", Slot = "17")]
		public void OnJoinedLobby()
		{
		}

		[Token(Token = "0x6001862")]
		[Address(RVA = "0xDF2544", Offset = "0xDF2544", VA = "0xDF2544", Slot = "18")]
		public void OnLeftLobby()
		{
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0xDF2548", Offset = "0xDF2548", VA = "0xDF2548", Slot = "10")]
		public void OnFriendListUpdate(List<FriendInfo> friendList)
		{
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0xDF254C", Offset = "0xDF254C", VA = "0xDF254C", Slot = "11")]
		public void OnCreatedRoom()
		{
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0xDF2550", Offset = "0xDF2550", VA = "0xDF2550", Slot = "12")]
		public void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0xDF2554", Offset = "0xDF2554", VA = "0xDF2554", Slot = "13")]
		public void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0xDF25C0", Offset = "0xDF25C0", VA = "0xDF25C0", Slot = "14")]
		public void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0xDF25C4", Offset = "0xDF25C4", VA = "0xDF25C4", Slot = "15")]
		public void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0xDF266C", Offset = "0xDF266C", VA = "0xDF266C", Slot = "16")]
		public void OnLeftRoom()
		{
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0xDF2670", Offset = "0xDF2670", VA = "0xDF2670")]
		private void OnRegionPingCompleted(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0xDF2774", Offset = "0xDF2774", VA = "0xDF2774")]
		public ConnectAndJoinRandomLb()
		{
		}
	}
}
namespace Photon.Chat.UtilityScripts
{
	[Token(Token = "0x2000481")]
	public class EventSystemSpawner : MonoBehaviour
	{
		[Token(Token = "0x600186C")]
		[Address(RVA = "0xDF16B8", Offset = "0xDF16B8", VA = "0xDF16B8")]
		private void Start()
		{
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0xDF1794", Offset = "0xDF1794", VA = "0xDF1794")]
		public EventSystemSpawner()
		{
		}
	}
	[Token(Token = "0x2000482")]
	public class OnStartDelete : MonoBehaviour
	{
		[Token(Token = "0x600186E")]
		[Address(RVA = "0xDF179C", Offset = "0xDF179C", VA = "0xDF179C")]
		private void Start()
		{
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0xDF1818", Offset = "0xDF1818", VA = "0xDF1818")]
		public OnStartDelete()
		{
		}
	}
	[Token(Token = "0x2000483")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB17A08", Offset = "0xB17A08")]
	public class TextButtonTransition : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text _text;

		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Selectable Selectable;

		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color NormalColor;

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color HoverColor;

		[Token(Token = "0x6001870")]
		[Address(RVA = "0xDF1820", Offset = "0xDF1820", VA = "0xDF1820")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0xDF1878", Offset = "0xDF1878", VA = "0xDF1878")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0xDF18A8", Offset = "0xDF18A8", VA = "0xDF18A8")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0xDF18D8", Offset = "0xDF18D8", VA = "0xDF18D8", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0xDF1998", Offset = "0xDF1998", VA = "0xDF1998", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0xDF1A58", Offset = "0xDF1A58", VA = "0xDF1A58")]
		public TextButtonTransition()
		{
		}
	}
	[Token(Token = "0x2000484")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB17A6C", Offset = "0xB17A6C")]
	public class TextToggleIsOnTransition : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle toggle;

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text _text;

		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color NormalOnColor;

		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color NormalOffColor;

		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color HoverOnColor;

		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color HoverOffColor;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isHover;

		[Token(Token = "0x6001876")]
		[Address(RVA = "0xDF1A9C", Offset = "0xDF1A9C", VA = "0xDF1A9C")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0xDF1BD0", Offset = "0xDF1BD0", VA = "0xDF1BD0")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0xDF1B6C", Offset = "0xDF1B6C", VA = "0xDF1B6C")]
		public void OnValueChanged(bool isOn)
		{
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0xDF1C74", Offset = "0xDF1C74", VA = "0xDF1C74", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0xDF1CEC", Offset = "0xDF1CEC", VA = "0xDF1CEC", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0xDF1D60", Offset = "0xDF1D60", VA = "0xDF1D60")]
		public TextToggleIsOnTransition()
		{
		}
	}
}
namespace Photon.Pun.Demo.PunBasics
{
	[Token(Token = "0x2000485")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xB17AD0", Offset = "0xB17AD0")]
	public class RoomCodeInputField : MonoBehaviour
	{
		[Token(Token = "0x40017E0")]
		public const string roomCodePrefKey = "RoomCode";

		[Token(Token = "0x600187C")]
		[Address(RVA = "0xDF1DC4", Offset = "0xDF1DC4", VA = "0xDF1DC4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xB1D4E0", Offset = "0xB1D4E0")]
		private void deleteKEy()
		{
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0xDF1E10", Offset = "0xDF1E10", VA = "0xDF1E10")]
		private void Start()
		{
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0xDF1F14", Offset = "0xDF1F14", VA = "0xDF1F14")]
		public void connectToRoom()
		{
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0xDF1FD4", Offset = "0xDF1FD4", VA = "0xDF1FD4")]
		public void SetRoomCode(string value)
		{
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0xDF2074", Offset = "0xDF2074", VA = "0xDF2074")]
		public RoomCodeInputField()
		{
		}
	}
}
namespace VRM
{
	[Token(Token = "0x2000486")]
	public class HardwareVerification : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000487")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17B34", Offset = "0xB17B34")]
		private sealed class <>c
		{
			[Token(Token = "0x40017EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40017ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static UnityAction <>9__15_0;

			[Token(Token = "0x6001893")]
			[Address(RVA = "0xE1B1EC", Offset = "0xE1B1EC", VA = "0xE1B1EC")]
			public <>c()
			{
			}

			[Token(Token = "0x6001894")]
			[Address(RVA = "0xE1B1F4", Offset = "0xE1B1F4", VA = "0xE1B1F4")]
			internal void <EditorLogin>b__15_0()
			{
			}
		}

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string credentialsTableName;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string _usernameText;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string _passwdText;

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string _lastLogon;

		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string _signupDate;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool _isLoggedIn;

		[Token(Token = "0x40017E7")]
		public const string c_PASS = "PASSWORD";

		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private UnityAction OnSuccess;

		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private UnityAction<string> OnFail;

		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool debugMode;

		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool isWorking;

		[Token(Token = "0x6001881")]
		[Address(RVA = "0xE1A354", Offset = "0xE1A354", VA = "0xE1A354")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001882")]
		[Address(RVA = "0xE1A4A4", Offset = "0xE1A4A4", VA = "0xE1A4A4")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001883")]
		[Address(RVA = "0xE1A5F4", Offset = "0xE1A5F4", VA = "0xE1A5F4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0xB1D518", Offset = "0xB1D518")]
		public void Login(UnityAction OnSuccess, UnityAction<string> OnFail)
		{
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0xE1A844", Offset = "0xE1A844", VA = "0xE1A844")]
		private void EditorLogin()
		{
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0xE1A95C", Offset = "0xE1A95C", VA = "0xE1A95C")]
		public void checkSignup(string str)
		{
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0xE1AC2C", Offset = "0xE1AC2C", VA = "0xE1AC2C")]
		private void EditorSignup()
		{
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0xE1A7E0", Offset = "0xE1A7E0", VA = "0xE1A7E0")]
		private void getDataFromPrefs()
		{
		}

		[Token(Token = "0x6001888")]
		[Address(RVA = "0xE1A9E8", Offset = "0xE1A9E8", VA = "0xE1A9E8")]
		public void signup()
		{
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0xE1A83C", Offset = "0xE1A83C", VA = "0xE1A83C")]
		private void loginFailed()
		{
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0xE1AC30", Offset = "0xE1AC30", VA = "0xE1AC30")]
		private void setWorking(bool value)
		{
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0xE1AC3C", Offset = "0xE1AC3C", VA = "0xE1AC3C")]
		public void Logout()
		{
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0xE1ACA0", Offset = "0xE1ACA0", VA = "0xE1ACA0")]
		private void HandleDriveResponse(Drive.DataContainer dataContainer)
		{
		}

		[Token(Token = "0x600188D")]
		[Address(RVA = "0xE1AF94", Offset = "0xE1AF94", VA = "0xE1AF94")]
		private bool isAdmin(string rights)
		{
			return default(bool);
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0xE1AFFC", Offset = "0xE1AFFC", VA = "0xE1AFFC")]
		private void HandleErrorResponse(string errorMsg)
		{
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0xE1B0C0", Offset = "0xE1B0C0", VA = "0xE1B0C0")]
		public static bool isAdmin()
		{
			return default(bool);
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0xE1B11C", Offset = "0xE1B11C", VA = "0xE1B11C")]
		public HardwareVerification()
		{
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0xE1B184", Offset = "0xE1B184", VA = "0xE1B184")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1D550", Offset = "0xB1D550")]
		private void <EditorLogin>b__15_1(string str)
		{
		}
	}
}
namespace OceanCraft
{
	[Token(Token = "0x2000488")]
	public class CraftingRecipe : MonoBehaviourPun, IPunObservable
	{
		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BuildPanel buildPanel;

		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private InventoryItem itemToCraft;

		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ReturnUngrabbedRecipies returner;

		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public CreateAllRecipes craftingRecipies;

		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Inventory inventory;

		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private NetworkGrabbable grabbable;

		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public RenderCanvasImage render;

		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float ungrabTime;

		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float timer;

		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool wasGrabbed;

		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private AudioClip grabSound;

		[Token(Token = "0x6001895")]
		[Address(RVA = "0xDE8FD4", Offset = "0xDE8FD4", VA = "0xDE8FD4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001896")]
		[Address(RVA = "0xDE9124", Offset = "0xDE9124", VA = "0xDE9124")]
		public void SetItem(InventoryItem item)
		{
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0xDE9154", Offset = "0xDE9154", VA = "0xDE9154")]
		public void changed()
		{
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0xDE9170", Offset = "0xDE9170", VA = "0xDE9170")]
		public void SetCraftingStation(CreateAllRecipes manager)
		{
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0xDE91A8", Offset = "0xDE91A8", VA = "0xDE91A8", Slot = "4")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0xDE93EC", Offset = "0xDE93EC", VA = "0xDE93EC")]
		private void OnGrab()
		{
		}

		[Token(Token = "0x600189B")]
		[Address(RVA = "0xDE94D4", Offset = "0xDE94D4", VA = "0xDE94D4")]
		public CraftingRecipe()
		{
		}
	}
	[Token(Token = "0x2000489")]
	public class CraftingRecipesHolder : MonoBehaviourPun
	{
		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform pos;

		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CraftingRecipe paper;

		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public CreateAllRecipes craftingStation;

		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private GameObject dummy;

		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float ungrabTollerance;

		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public CraftingCategory catergory;

		[Token(Token = "0x17000210")]
		public CraftingRecipe Paper
		{
			[Token(Token = "0x600189C")]
			[Address(RVA = "0xDE94DC", Offset = "0xDE94DC", VA = "0xDE94DC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0xDE94E4", Offset = "0xDE94E4", VA = "0xDE94E4")]
		public void Add(CraftingRecipe paper)
		{
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0xDE95FC", Offset = "0xDE95FC", VA = "0xDE95FC")]
		public void Remove()
		{
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0xDE9604", Offset = "0xDE9604", VA = "0xDE9604")]
		public bool isEmpty()
		{
			return default(bool);
		}

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0xDE9674", Offset = "0xDE9674", VA = "0xDE9674")]
		public bool hasPaper(CraftingRecipe paper)
		{
			return default(bool);
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0xDE96EC", Offset = "0xDE96EC", VA = "0xDE96EC")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0xDE9974", Offset = "0xDE9974", VA = "0xDE9974")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0xDE9AEC", Offset = "0xDE9AEC", VA = "0xDE9AEC")]
		private void Update()
		{
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0xDE9C28", Offset = "0xDE9C28", VA = "0xDE9C28")]
		public CraftingRecipesHolder()
		{
		}
	}
	[Token(Token = "0x200048A")]
	public class CreateAllRecipes : MonoBehaviourPun
	{
		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<CraftingRecipesHolder> papers;

		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject prefab;

		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public CraftingCategory category;

		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Inventory inventory;

		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<CraftingRecipe> recipes;

		[Token(Token = "0x17000211")]
		public Inventory CraftingInventory
		{
			[Token(Token = "0x60018A5")]
			[Address(RVA = "0xDE9FF4", Offset = "0xDE9FF4", VA = "0xDE9FF4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0xDE9FFC", Offset = "0xDE9FFC", VA = "0xDE9FFC")]
		private void Start()
		{
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0xDEA3E4", Offset = "0xDEA3E4", VA = "0xDEA3E4")]
		private void UpdateCategory()
		{
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0xDEA07C", Offset = "0xDEA07C", VA = "0xDEA07C")]
		public void updateCategory(CraftingCategory initialCategory)
		{
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0xDEA3EC", Offset = "0xDEA3EC", VA = "0xDEA3EC")]
		private CraftingRecipesHolder GetNextEmptyPosition()
		{
			return null;
		}

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0xDEA4E8", Offset = "0xDEA4E8", VA = "0xDEA4E8")]
		public void ResetRecipe(CraftingRecipe p)
		{
		}

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0xDEA514", Offset = "0xDEA514", VA = "0xDEA514")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0xDEA6D8", Offset = "0xDEA6D8", VA = "0xDEA6D8")]
		public CreateAllRecipes()
		{
		}
	}
	[Token(Token = "0x200048B")]
	public class ReturnUngrabbedRecipies : MonoBehaviourPun
	{
		[Token(Token = "0x4001804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool isHome;

		[Token(Token = "0x4001805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float returnTime;

		[Token(Token = "0x4001806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float cooldown;

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private NetworkGrabbable networkGrabbable;

		[Token(Token = "0x4001808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private CreateAllRecipes craftingRecipies;

		[Token(Token = "0x4001809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private CraftingRecipe paper;

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0xDEA6E0", Offset = "0xDEA6E0", VA = "0xDEA6E0")]
		public void SetRecipiesManager(CreateAllRecipes r)
		{
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0xDEA6E8", Offset = "0xDEA6E8", VA = "0xDEA6E8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0xDE95EC", Offset = "0xDE95EC", VA = "0xDE95EC")]
		public void SetHome(bool home)
		{
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0xDEA758", Offset = "0xDEA758", VA = "0xDEA758")]
		private void Update()
		{
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0xDEA7F4", Offset = "0xDEA7F4", VA = "0xDEA7F4")]
		public ReturnUngrabbedRecipies()
		{
		}
	}
	[Token(Token = "0x200048C")]
	public class CraftingStation : MonoBehaviourPun
	{
		[Token(Token = "0x400180A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CreateAllRecipes itemVisualizer;

		[Token(Token = "0x400180B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CraftingRecipe activePanel;

		[Token(Token = "0x400180C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private RotateToSelector handle;

		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private CraftingRecipesHolder toCreate;

		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool crafting;

		[Token(Token = "0x400180F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioClip craftingSound;

		[Token(Token = "0x4001810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Inventory inventory;

		[Token(Token = "0x4001811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private ParticleSystem craftingParticles;

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0xDE9C3C", Offset = "0xDE9C3C", VA = "0xDE9C3C")]
		private void Start()
		{
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0xDE9C94", Offset = "0xDE9C94", VA = "0xDE9C94")]
		public void SetActivePanel(CraftingRecipe panel)
		{
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0xDE9C9C", Offset = "0xDE9C9C", VA = "0xDE9C9C")]
		public void RemoveActivePanel()
		{
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0xDE9CA4", Offset = "0xDE9CA4", VA = "0xDE9CA4")]
		public void Build()
		{
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0xDE9D3C", Offset = "0xDE9D3C", VA = "0xDE9D3C")]
		private void Update()
		{
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0xDE9FD0", Offset = "0xDE9FD0", VA = "0xDE9FD0")]
		[PunRPC]
		private void Rpc_Craft()
		{
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0xDE9FEC", Offset = "0xDE9FEC", VA = "0xDE9FEC")]
		public CraftingStation()
		{
		}
	}
}
namespace CrazyMinnow.SALSA.Addons.Photon
{
	[Token(Token = "0x200048D")]
	public class SalsaPhotonRecorder : MonoBehaviour
	{
		[Token(Token = "0x4001812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private SimpleProcessorFloat simpleProcessorFloat;

		[Token(Token = "0x4001813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SimpleProcessorShort simpleProcessorShort;

		[Token(Token = "0x17000212")]
		private float PeakAmplitude
		{
			[Token(Token = "0x60018B9")]
			[Address(RVA = "0xD7DC2C", Offset = "0xD7DC2C", VA = "0xD7DC2C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0xD7DC64", Offset = "0xD7DC64", VA = "0xD7DC64")]
		public float GetAnalysis()
		{
			return default(float);
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0xD7DC9C", Offset = "0xD7DC9C", VA = "0xD7DC9C")]
		private void PhotonVoiceCreated(PhotonVoiceCreatedParams p)
		{
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0xD7DEE8", Offset = "0xD7DEE8", VA = "0xD7DEE8")]
		private void PhotonVoiceRemoved()
		{
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0xD7DF14", Offset = "0xD7DF14", VA = "0xD7DF14")]
		public SalsaPhotonRecorder()
		{
		}
	}
	[Token(Token = "0x200048E")]
	public class SimpleProcessorFloat : IProcessor<float>, IDisposable
	{
		[Token(Token = "0x4001814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool disposed;

		[Token(Token = "0x4001815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB19E38", Offset = "0xB19E38")]
		private float <PeakAmplitude>k__BackingField;

		[Token(Token = "0x17000213")]
		public float PeakAmplitude
		{
			[Token(Token = "0x60018BE")]
			[Address(RVA = "0xD7E480", Offset = "0xD7E480", VA = "0xD7E480", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1D570", Offset = "0xB1D570")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60018BF")]
			[Address(RVA = "0xD7E488", Offset = "0xD7E488", VA = "0xD7E488")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1D580", Offset = "0xB1D580")]
			private set
			{
			}
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0xD7E490", Offset = "0xD7E490", VA = "0xD7E490", Slot = "4")]
		public float[] Process(float[] buffer)
		{
			return null;
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0xD7DF04", Offset = "0xD7DF04", VA = "0xD7DF04", Slot = "5")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0xD7DED8", Offset = "0xD7DED8", VA = "0xD7DED8")]
		public SimpleProcessorFloat()
		{
		}
	}
	[Token(Token = "0x200048F")]
	public class SimpleProcessorShort : IProcessor<short>, IDisposable
	{
		[Token(Token = "0x4001816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool disposed;

		[Token(Token = "0x4001817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB19E48", Offset = "0xB19E48")]
		private short <PeakAmplitude>k__BackingField;

		[Token(Token = "0x17000214")]
		public short PeakAmplitude
		{
			[Token(Token = "0x60018C3")]
			[Address(RVA = "0xD7E520", Offset = "0xD7E520", VA = "0xD7E520", Slot = "6")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1D590", Offset = "0xB1D590")]
			get
			{
				return default(short);
			}
			[Token(Token = "0x60018C4")]
			[Address(RVA = "0xD7E528", Offset = "0xD7E528", VA = "0xD7E528")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB1D5A0", Offset = "0xB1D5A0")]
			private set
			{
			}
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0xD7DF0C", Offset = "0xD7DF0C", VA = "0xD7DF0C", Slot = "5")]
		public void Dispose()
		{
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0xD7E530", Offset = "0xD7E530", VA = "0xD7E530", Slot = "4")]
		public short[] Process(short[] buffer)
		{
			return null;
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0xD7DEE0", Offset = "0xD7DEE0", VA = "0xD7DEE0")]
		public SimpleProcessorShort()
		{
		}
	}
	[Token(Token = "0x2000490")]
	public class SalsaPhotonVoice : MonoBehaviour
	{
		[Token(Token = "0x2000491")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xB17B44", Offset = "0xB17B44")]
		private sealed class <Start>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400181B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400181C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400181D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SalsaPhotonVoice <>4__this;

			[Token(Token = "0x17000215")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60018CE")]
				[Address(RVA = "0xD7E410", Offset = "0xD7E410", VA = "0xD7E410", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000216")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60018D0")]
				[Address(RVA = "0xD7E478", Offset = "0xD7E478", VA = "0xD7E478", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60018CB")]
			[Address(RVA = "0xD7DF8C", Offset = "0xD7DF8C", VA = "0xD7DF8C")]
			[DebuggerHidden]
			public <Start>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x60018CC")]
			[Address(RVA = "0xD7E260", Offset = "0xD7E260", VA = "0xD7E260", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60018CD")]
			[Address(RVA = "0xD7E264", Offset = "0xD7E264", VA = "0xD7E264", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60018CF")]
			[Address(RVA = "0xD7E418", Offset = "0xD7E418", VA = "0xD7E418", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Salsa salsa;

		[Token(Token = "0x4001819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PhotonVoiceView photonVoiceView;

		[Token(Token = "0x400181A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SalsaPhotonRecorder salsaPhotonRecorder;

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0xD7DF1C", Offset = "0xD7DF1C", VA = "0xD7DF1C")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0xD7DFB8", Offset = "0xD7DFB8", VA = "0xD7DFB8")]
		private void ConfigureSalsaForLocalClient()
		{
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0xD7E258", Offset = "0xD7E258", VA = "0xD7E258")]
		public SalsaPhotonVoice()
		{
		}
	}
}
namespace VR.BodyLaunguage
{
	[Token(Token = "0x2000492")]
	public class BodyLanguageVR : MonoBehaviour
	{
		[Token(Token = "0x2000493")]
		public enum BodyLanguageMethod
		{
			[Token(Token = "0x4001820")]
			Motion,
			[Token(Token = "0x4001821")]
			TBA
		}

		[Serializable]
		[Token(Token = "0x2000494")]
		public class InputMethod
		{
			[Token(Token = "0x4001822")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x4001823")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public BodyLanguageMethod method;

			[Token(Token = "0x4001824")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MotionDetection motion;

			[Token(Token = "0x4001825")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public UnityEvent onMotionTriggered;

			[Token(Token = "0x60018D3")]
			[Address(RVA = "0xE18064", Offset = "0xE18064", VA = "0xE18064")]
			public InputMethod()
			{
			}
		}

		[Token(Token = "0x400181E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<InputMethod> inputList;

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0xE17B68", Offset = "0xE17B68", VA = "0xE17B68")]
		private void Update()
		{
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0xE17FF4", Offset = "0xE17FF4", VA = "0xE17FF4")]
		public BodyLanguageVR()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000495")]
	public class MotionDetection
	{
		[Token(Token = "0x2000496")]
		public enum DetectInverse
		{
			[Token(Token = "0x400183A")]
			None,
			[Token(Token = "0x400183B")]
			PositionalDistance,
			[Token(Token = "0x400183C")]
			RotationalDegrees,
			[Token(Token = "0x400183D")]
			Both
		}

		[Token(Token = "0x2000497")]
		public enum ResultDuration
		{
			[Token(Token = "0x400183F")]
			SingleFrame,
			[Token(Token = "0x4001840")]
			WhileTrue,
			[Token(Token = "0x4001841")]
			Fixed
		}

		[Serializable]
		[Token(Token = "0x2000498")]
		public class MotionInfo
		{
			[Token(Token = "0x4001842")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool usePositionalDistance;

			[Token(Token = "0x4001843")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 triggerPositionDirection;

			[Token(Token = "0x4001844")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB19E78", Offset = "0xB19E78")]
			public float triggerPositionAngleX;

			[Token(Token = "0x4001845")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB19E94", Offset = "0xB19E94")]
			public float triggerPositionAngleY;

			[Token(Token = "0x4001846")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float triggerPositionDistance;

			[Token(Token = "0x4001847")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public bool useRotationalDegrees;

			[Token(Token = "0x4001848")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB19EB0", Offset = "0xB19EB0")]
			public float triggerRotationAngleX;

			[Token(Token = "0x4001849")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB19ED0", Offset = "0xB19ED0")]
			public float triggerRotationAngleY;

			[Token(Token = "0x400184A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB19EF0", Offset = "0xB19EF0")]
			public float triggerRotationAngleZ;

			[Token(Token = "0x400184B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			public bool useDirectionHeldToggle;

			[Token(Token = "0x400184C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public Vector3 directionHeldDirection;

			[Token(Token = "0x400184D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public Vector3 trackedObjectAxis;

			[Token(Token = "0x400184E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB19F10", Offset = "0xB19F10")]
			public float directionHeldAngleX;

			[Token(Token = "0x400184F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB19F2C", Offset = "0xB19F2C")]
			public float directionHeldAngleY;

			[Token(Token = "0x4001850")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public MinMaxFloatRange triggerTime;

			[Token(Token = "0x4001851")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xB19F48", Offset = "0xB19F48")]
			public float timeOut;

			[Token(Token = "0x4001852")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			public TrackedObjectSpace objectSpace;

			[Token(Token = "0x4001853")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public StepOrigin stepOrigin;

			[Token(Token = "0x60018E4")]
			[Address(RVA = "0xE19DC4", Offset = "0xE19DC4", VA = "0xE19DC4")]
			public MotionInfo()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000499")]
		public class MotionHistoryInfo
		{
			[Token(Token = "0x4001854")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 position;

			[Token(Token = "0x4001855")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 rotation;

			[Token(Token = "0x4001856")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 localPosition;

			[Token(Token = "0x4001857")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public Vector3 localRotation;

			[Token(Token = "0x4001858")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float time;

			[Token(Token = "0x60018E5")]
			[Address(RVA = "0xE183B4", Offset = "0xE183B4", VA = "0xE183B4")]
			public MotionHistoryInfo()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200049A")]
		public class StepHistoryInfo
		{
			[Token(Token = "0x4001859")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public List<Vector3> positions;

			[Token(Token = "0x400185A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<Vector3> rotations;

			[Token(Token = "0x400185B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public List<float> times;

			[Token(Token = "0x60018E6")]
			[Address(RVA = "0xE186D0", Offset = "0xE186D0", VA = "0xE186D0")]
			public StepHistoryInfo()
			{
			}
		}

		[Token(Token = "0x200049B")]
		public enum StepOrigin
		{
			[Token(Token = "0x400185D")]
			LastTriggerPoint,
			[Token(Token = "0x400185E")]
			FurthestPoint
		}

		[Token(Token = "0x200049C")]
		public enum TrackedObjectSpace
		{
			[Token(Token = "0x4001860")]
			World,
			[Token(Token = "0x4001861")]
			Local,
			[Token(Token = "0x4001862")]
			BaseObject
		}

		[Token(Token = "0x4001826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject trackedObject;

		[Token(Token = "0x4001827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject baseObject;

		[Token(Token = "0x4001828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DetectInverse detectInverse;

		[Token(Token = "0x4001829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<MotionInfo> motionSequence;

		[Token(Token = "0x400182A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ResultDuration resultDurationType;

		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float fixedDurationTime;

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float fixedDurationTimer;

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool useFixedDurationTimer;

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<MotionHistoryInfo> motionHistory;

		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool ignoringNextStepStatus;

		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool detectingInverseMotion;

		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float timeOutTimer;

		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int currentMotionSequenceIndex;

		[Token(Token = "0x4001833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MotionHistoryInfo lastTriggerInfo;

		[Token(Token = "0x4001834")]
		private const int MAX_TRACKING_LIST_SIZE = 90;

		[Token(Token = "0x4001835")]
		private const int SUCESS = 1;

		[Token(Token = "0x4001836")]
		private const int FAIL = 0;

		[Token(Token = "0x4001837")]
		private const int TIMEOUT_FAIL = -1;

		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public StepHistoryInfo currentStepHistory;

		[Token(Token = "0x17000217")]
		public int CurrentStep
		{
			[Token(Token = "0x60018D4")]
			[Address(RVA = "0xE1818C", Offset = "0xE1818C", VA = "0xE1818C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000218")]
		public bool HasTimedOut
		{
			[Token(Token = "0x60018D5")]
			[Address(RVA = "0xE18194", Offset = "0xE18194", VA = "0xE18194")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0xE181A4", Offset = "0xE181A4", VA = "0xE181A4")]
		private void UpdateTrackingHistory()
		{
		}

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0xE17D38", Offset = "0xE17D38", VA = "0xE17D38")]
		public bool GetMotionTriggered()
		{
			return default(bool);
		}

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0xE18458", Offset = "0xE18458", VA = "0xE18458")]
		private bool GetNextStepStatus(int sequenceIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0xE18788", Offset = "0xE18788", VA = "0xE18788")]
		private int CheckNextStepStatus(int sequenceIndex, int motionHistoryIndex = -1)
		{
			return default(int);
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0xE19504", Offset = "0xE19504", VA = "0xE19504")]
		private float GetPositionAngle(Vector3 triggerDirection, float triggerDistance, Vector3 currentPosition, int motionHistoryIndex = -1)
		{
			return default(float);
		}

		[Token(Token = "0x60018DB")]
		[Address(RVA = "0xE198A4", Offset = "0xE198A4", VA = "0xE198A4")]
		private bool ComparePositionAngleForTrigger(Vector2 triggerAngles, float currentAngle)
		{
			return default(bool);
		}

		[Token(Token = "0x60018DC")]
		[Address(RVA = "0xE198BC", Offset = "0xE198BC", VA = "0xE198BC")]
		private Vector3 GetRotationAngleDifference(Vector3 triggerAngle, Vector3 currentAngle, int motionHistoryIndex = -1)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60018DD")]
		[Address(RVA = "0xE19C94", Offset = "0xE19C94", VA = "0xE19C94")]
		private bool CompareRotationAnglesForTrigger(Vector3 triggerAngle, Vector3 currentAngles)
		{
			return default(bool);
		}

		[Token(Token = "0x60018DE")]
		[Address(RVA = "0xE19D04", Offset = "0xE19D04", VA = "0xE19D04")]
		private float GetDirectionAngle(Vector3 toggleDirection, Vector3 trackedObjectDirection)
		{
			return default(float);
		}

		[Token(Token = "0x60018DF")]
		[Address(RVA = "0xE19DAC", Offset = "0xE19DAC", VA = "0xE19DAC")]
		private bool CompareDirectionAngleForToggle(Vector2 toggleAngles, float currentAngle)
		{
			return default(bool);
		}

		[Token(Token = "0x60018E0")]
		[Address(RVA = "0xE193F0", Offset = "0xE193F0", VA = "0xE193F0")]
		private float GetTimeDifference(float currentTime, int motionHistoryIndex = -1)
		{
			return default(float);
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0xE194CC", Offset = "0xE194CC", VA = "0xE194CC")]
		private int CheckTravelTime(MinMaxFloatRange triggerTime, float currentTime)
		{
			return default(int);
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0xE183BC", Offset = "0xE183BC", VA = "0xE183BC")]
		private void CheckTimeout()
		{
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0xE180E8", Offset = "0xE180E8", VA = "0xE180E8")]
		public MotionDetection()
		{
		}
	}
}
